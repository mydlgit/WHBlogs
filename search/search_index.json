{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to WH's Blog Description \u5173\u4e8eC++\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u8ba1\u7b97\u673a\u7f51\u7edc\u3001\u6570\u636e\u7ed3\u6784\u7684\u4e00\u4e9b\u5b66\u4e60\u8bb0\u5f55 For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to WH's Blog"},{"location":"#welcome-to-whs-blog","text":"","title":"Welcome to WH's Blog"},{"location":"#description","text":"\u5173\u4e8eC++\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u8ba1\u7b97\u673a\u7f51\u7edc\u3001\u6570\u636e\u7ed3\u6784\u7684\u4e00\u4e9b\u5b66\u4e60\u8bb0\u5f55 For full documentation visit mkdocs.org .","title":"Description"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"home/","text":"Welcome to WH's Blog Description \u5173\u4e8eC++\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u8ba1\u7b97\u673a\u7f51\u7edc\u3001\u6570\u636e\u7ed3\u6784\u7684\u4e00\u4e9b\u5b66\u4e60\u8bb0\u5f55","title":"Welcome to WH's Blog"},{"location":"home/#welcome-to-whs-blog","text":"","title":"Welcome to WH's Blog"},{"location":"home/#description","text":"\u5173\u4e8eC++\u3001\u64cd\u4f5c\u7cfb\u7edf\u3001\u8ba1\u7b97\u673a\u7f51\u7edc\u3001\u6570\u636e\u7ed3\u6784\u7684\u4e00\u4e9b\u5b66\u4e60\u8bb0\u5f55","title":"Description"},{"location":"interview/","text":"\u9762\u8bd5\u9898 \u5c06\u963f\u62c9\u4f2f\u6570\u5b57\u8f6c\u6210\u5927\u5199\u4e2d\u6587\uff0c\u6570\u5b57\u6574\u6570\u90e8\u5206\u4e0d\u4f1a\u8d85\u8fc7\u4e5d\u4f4d\uff0c\u5c0f\u6570\u90e8\u5206\u4e0d\u8d85\u8fc7\u4e09\u4f4d void test(double _money){ vector<string> nums{ \"\u96f6\", \"\u58f9\", \"\u8d30\", \"\u53c1\", \"\u8086\", \"\u4f0d\", \"\u9646\", \"\u67d2\", \"\u634c\", \"\u7396\" }; vector<string> radix{ \"\u5706\", \"\u62fe\", \"\u4f70\", \"\u4edf\", \"\u4e07\", \"\u62fe\", \"\u4f70\", \"\u4edf\", \"\u4ebf\" }; int money = (int)_money, point = (int)(_money - money) * 1000 + 1; vector<string> ans; int cnt = 0, tmp=0; while (money) { tmp = money % 10; if (tmp != 0) { ans.emplace_back(radix[cnt]); ans.emplace_back(nums[tmp]); } else { if ((cnt % 4)==0)ans.emplace_back(radix[cnt]); else if (ans.back() != \"\u96f6\" && ans.back()!=\"\u5706\" && ans.back() != \"\u4e07\") { ans.emplace_back(\"\u96f6\"); } } cnt++; money /= 10; } string result = \"\"; for (int i = ans.size() - 1;i >= 0;i--) { result += ans[i]; } vector<string> extra; cnt = 1; while (point) { tmp = point%10; point /= 10; if (tmp != 0) { if (cnt == 1)extra.emplace_back(\"\u5398\"); else if (cnt == 2)extra.emplace_back(\"\u5206\"); else if (cnt == 3) extra.emplace_back(\"\u89d2\"); extra.emplace_back(nums[tmp]); } cnt++; } for(int i=extra.size()-1;i>=0;i--) result += extra[i]; cout << result << endl; } //\u8f93\u5165 123456789.123 //\u8f93\u51fa \u58f9\u4ebf\u8d30\u4edf\u53c1\u4f70\u8086\u62fe\u4f0d\u4e07\u9646\u4edf\u67d2\u4f70\u634c\u62fe\u7396\u5706\u58f9\u89d2\u8d30\u5206\u53c1\u5398 //\u8f93\u5165 120304010.102 //\u8f93\u51fa \u58f9\u4ebf\u8d30\u4edf\u96f6\u53c1\u62fe\u4e07\u8086\u4edf\u96f6\u58f9\u62fe\u5706\u58f9\u89d2\u8d30\u5398 \u5171\u6709n\u53f0\u670d\u52a1\u5668\uff0c\u6bcf\u53f0\u670d\u52a1\u5668\u6bcf\u79d2\u5904\u7406\u7684\u6700\u5927\u8bf7\u6c42\u6570\u4e3aqps[ i ], \u8bbe\u8ba1\u4e00\u4e2a\u8c03\u5ea6\u7b97\u6cd5\uff0c\u6bcf\u4e2a\u5ba2\u670d\u7aef\u4f7f\u7528\u8be5\u8c03\u5ea6\u7b97\u6cd5\u65f6\u4f1a\u751f\u6210\u4e00\u4e2a\u670d\u52a1\u5668\u7f16\u53f7(0~n-1)\uff0c\u8bbe\u8ba1\u7684\u7b97\u6cd5\u5e94\u4fdd\u8bc1\u540c\u4e00\u65f6\u523b\u6709\u591a\u4e2a\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\u65f6\uff0c\u67d0\u4e2a\u670d\u52a1\u5668\u4e0d\u4f1a\u8fc7\u8f7d\uff0c\u6216\u8005\u8bf4server[ i ]\u63a5\u6536\u7684\u8bf7\u6c42\u6570\u4e0eserver[ j ]\u63a5\u6536\u7684\u8bf7\u6c42\u6570\u5e94\u6709server[ i ]:server[ j ] = qps[ i ]:qps[ j ]. void findX(vector<int>& qps){ int sum=0; int len=qps.size(); vector<int> vec(len+1, 0); for(int i=0;i<len;i++){ sum += qps[i]; vec[i+1] = sum; } srand(clock()); int target=rand()%(sum-1); int left=0, right=len; cout<<\"target:\"<<target<<endl; //\u6a21\u62df\u6bcf\u6b21\u5ba2\u6237\u7aef\u6bcf\u6b21\u53d1\u9001\u8bf7\u6c42\u65f6\u4ea7\u751f\u7684\u968f\u673a\u6570 while(left<=right){ int mid=(left+right)/2; if(vec[mid] < target)left=mid+1; else right=mid-1; } if(vec[left]==target)cout<<left; else cout<<left-1; cout<<endl; } int main(){ vector<int> qps{3, 6, 9, 2, 10, 5}; findX(qps); return 0; } \u6709n\u4e2a\u6392\u5e8f\u597d\u7684\u6570\u7ec4/\u94fe\u8868\uff0c\u5c06\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u7ec4/\u94fe\u8868 /* \u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\u6570\u7ec4\uff0c\u6bcf\u4e2a\u94fe\u8868\u90fd\u5df2\u7ecf\u6309\u5347\u5e8f\u6392\u5217\u3002\u8bf7\u4f60\u5c06\u6240\u6709\u94fe\u8868\u5408\u5e76\u5230\u4e00\u4e2a\u5347\u5e8f\u94fe\u8868\u4e2d\uff0c\u8fd4\u56de\u5408\u5e76\u540e\u7684\u94fe\u8868. lists\u4e2d\u53ef\u80fd\u5b58\u5728\u7a7a\u94fe\u8868 \u91c7\u7528\u5806\u7684\u65b9\u5f0f */ class Solution { public: ListNode* mergeKLists(vector<ListNode*>& lists) { if(lists.size()==0)return nullptr; int k=lists.size(), cnt=k; priority_queue<int, vector<int>, greater<int> > heap; ListNode *root = new ListNode(-1), *cur=root; while(cnt){ cnt=k; for(auto& node:lists){ if(node){ heap.push(node->val); node=node->next; }else cnt--; } if(cnt==0)break; cur->next=new ListNode(heap.top()); heap.pop(); cur = cur->next; } while(!heap.empty()){ cur->next=new ListNode(heap.top()); heap.pop(); cur = cur->next; } return root->next; } }; hashmap\u7684\u6570\u7ec4\u5927\u5c0f\u4e3a\u4ec0\u4e48\u662f2\u7684\u5e42\u6b21 h=hash(key), h\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u4e3a h%length\uff0c \u800c\u5982\u679clength\u662f2\u7684\u6574\u6570\u6b21\u5e42\uff0c\u5219 h%length \u7b49\u4e8e h&(length-1)\uff0c\u800c&\u7684\u6548\u7387\u8981\u9ad8\u4e8e%\uff0c\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6570\u7ec4\u6269\u5bb9\u65f6\u76f4\u63a5\u7ffb\u500d\u5373\u53ef\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57\uff0c\u8fd4\u56de\u6570\u7ec4\u4e2d\u6240\u6709\u4e24\u6570\u4e4b\u548c\u4e3a\u6307\u5b9a\u6570\u5b57\u7684\u4e24\u4e2a\u6570\u7684\u7d22\u5f15 void findIndex(vector<int>& nums, int target, vector<vector<int>>& ans){ unordered_map<int, vector<int>> memo; for(int i=0; i<nums.size(); i++){ if(memo.count(nums[i]) == 0){ memo[nums[i]] = vector<int>{i}; }else{ memo[nums[i]].push_back(i); } } for(auto &v:memo){ if(memo.count(target - v.first)){ for(auto& a1:v.second){ vector<int> res(2); res[0]=a1; for(auto& a2:memo[target-v.first]){ res[1] = a2; ans.push_back(res); } } memo.erase(target-v.first); } } } int main() { vector<int> nums{4, 4, 2, 4}; vector<vector<int>> ans; findIndex(nums, 6, ans); for(auto &v:ans){ for(int i:v){ cout<<i<<\" \"; } cout<<endl; } return 0; } /* 2 0 2 1 2 3 */","title":"\u9762\u8bd5"},{"location":"interview/#_1","text":"\u5c06\u963f\u62c9\u4f2f\u6570\u5b57\u8f6c\u6210\u5927\u5199\u4e2d\u6587\uff0c\u6570\u5b57\u6574\u6570\u90e8\u5206\u4e0d\u4f1a\u8d85\u8fc7\u4e5d\u4f4d\uff0c\u5c0f\u6570\u90e8\u5206\u4e0d\u8d85\u8fc7\u4e09\u4f4d void test(double _money){ vector<string> nums{ \"\u96f6\", \"\u58f9\", \"\u8d30\", \"\u53c1\", \"\u8086\", \"\u4f0d\", \"\u9646\", \"\u67d2\", \"\u634c\", \"\u7396\" }; vector<string> radix{ \"\u5706\", \"\u62fe\", \"\u4f70\", \"\u4edf\", \"\u4e07\", \"\u62fe\", \"\u4f70\", \"\u4edf\", \"\u4ebf\" }; int money = (int)_money, point = (int)(_money - money) * 1000 + 1; vector<string> ans; int cnt = 0, tmp=0; while (money) { tmp = money % 10; if (tmp != 0) { ans.emplace_back(radix[cnt]); ans.emplace_back(nums[tmp]); } else { if ((cnt % 4)==0)ans.emplace_back(radix[cnt]); else if (ans.back() != \"\u96f6\" && ans.back()!=\"\u5706\" && ans.back() != \"\u4e07\") { ans.emplace_back(\"\u96f6\"); } } cnt++; money /= 10; } string result = \"\"; for (int i = ans.size() - 1;i >= 0;i--) { result += ans[i]; } vector<string> extra; cnt = 1; while (point) { tmp = point%10; point /= 10; if (tmp != 0) { if (cnt == 1)extra.emplace_back(\"\u5398\"); else if (cnt == 2)extra.emplace_back(\"\u5206\"); else if (cnt == 3) extra.emplace_back(\"\u89d2\"); extra.emplace_back(nums[tmp]); } cnt++; } for(int i=extra.size()-1;i>=0;i--) result += extra[i]; cout << result << endl; } //\u8f93\u5165 123456789.123 //\u8f93\u51fa \u58f9\u4ebf\u8d30\u4edf\u53c1\u4f70\u8086\u62fe\u4f0d\u4e07\u9646\u4edf\u67d2\u4f70\u634c\u62fe\u7396\u5706\u58f9\u89d2\u8d30\u5206\u53c1\u5398 //\u8f93\u5165 120304010.102 //\u8f93\u51fa \u58f9\u4ebf\u8d30\u4edf\u96f6\u53c1\u62fe\u4e07\u8086\u4edf\u96f6\u58f9\u62fe\u5706\u58f9\u89d2\u8d30\u5398 \u5171\u6709n\u53f0\u670d\u52a1\u5668\uff0c\u6bcf\u53f0\u670d\u52a1\u5668\u6bcf\u79d2\u5904\u7406\u7684\u6700\u5927\u8bf7\u6c42\u6570\u4e3aqps[ i ], \u8bbe\u8ba1\u4e00\u4e2a\u8c03\u5ea6\u7b97\u6cd5\uff0c\u6bcf\u4e2a\u5ba2\u670d\u7aef\u4f7f\u7528\u8be5\u8c03\u5ea6\u7b97\u6cd5\u65f6\u4f1a\u751f\u6210\u4e00\u4e2a\u670d\u52a1\u5668\u7f16\u53f7(0~n-1)\uff0c\u8bbe\u8ba1\u7684\u7b97\u6cd5\u5e94\u4fdd\u8bc1\u540c\u4e00\u65f6\u523b\u6709\u591a\u4e2a\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\u65f6\uff0c\u67d0\u4e2a\u670d\u52a1\u5668\u4e0d\u4f1a\u8fc7\u8f7d\uff0c\u6216\u8005\u8bf4server[ i ]\u63a5\u6536\u7684\u8bf7\u6c42\u6570\u4e0eserver[ j ]\u63a5\u6536\u7684\u8bf7\u6c42\u6570\u5e94\u6709server[ i ]:server[ j ] = qps[ i ]:qps[ j ]. void findX(vector<int>& qps){ int sum=0; int len=qps.size(); vector<int> vec(len+1, 0); for(int i=0;i<len;i++){ sum += qps[i]; vec[i+1] = sum; } srand(clock()); int target=rand()%(sum-1); int left=0, right=len; cout<<\"target:\"<<target<<endl; //\u6a21\u62df\u6bcf\u6b21\u5ba2\u6237\u7aef\u6bcf\u6b21\u53d1\u9001\u8bf7\u6c42\u65f6\u4ea7\u751f\u7684\u968f\u673a\u6570 while(left<=right){ int mid=(left+right)/2; if(vec[mid] < target)left=mid+1; else right=mid-1; } if(vec[left]==target)cout<<left; else cout<<left-1; cout<<endl; } int main(){ vector<int> qps{3, 6, 9, 2, 10, 5}; findX(qps); return 0; } \u6709n\u4e2a\u6392\u5e8f\u597d\u7684\u6570\u7ec4/\u94fe\u8868\uff0c\u5c06\u5b83\u4eec\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u7ec4/\u94fe\u8868 /* \u7ed9\u4f60\u4e00\u4e2a\u94fe\u8868\u6570\u7ec4\uff0c\u6bcf\u4e2a\u94fe\u8868\u90fd\u5df2\u7ecf\u6309\u5347\u5e8f\u6392\u5217\u3002\u8bf7\u4f60\u5c06\u6240\u6709\u94fe\u8868\u5408\u5e76\u5230\u4e00\u4e2a\u5347\u5e8f\u94fe\u8868\u4e2d\uff0c\u8fd4\u56de\u5408\u5e76\u540e\u7684\u94fe\u8868. lists\u4e2d\u53ef\u80fd\u5b58\u5728\u7a7a\u94fe\u8868 \u91c7\u7528\u5806\u7684\u65b9\u5f0f */ class Solution { public: ListNode* mergeKLists(vector<ListNode*>& lists) { if(lists.size()==0)return nullptr; int k=lists.size(), cnt=k; priority_queue<int, vector<int>, greater<int> > heap; ListNode *root = new ListNode(-1), *cur=root; while(cnt){ cnt=k; for(auto& node:lists){ if(node){ heap.push(node->val); node=node->next; }else cnt--; } if(cnt==0)break; cur->next=new ListNode(heap.top()); heap.pop(); cur = cur->next; } while(!heap.empty()){ cur->next=new ListNode(heap.top()); heap.pop(); cur = cur->next; } return root->next; } }; hashmap\u7684\u6570\u7ec4\u5927\u5c0f\u4e3a\u4ec0\u4e48\u662f2\u7684\u5e42\u6b21 h=hash(key), h\u5728\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u4e3a h%length\uff0c \u800c\u5982\u679clength\u662f2\u7684\u6574\u6570\u6b21\u5e42\uff0c\u5219 h%length \u7b49\u4e8e h&(length-1)\uff0c\u800c&\u7684\u6548\u7387\u8981\u9ad8\u4e8e%\uff0c\u51fa\u4e8e\u8fd9\u4e2a\u539f\u56e0\uff0c\u6570\u7ec4\u6269\u5bb9\u65f6\u76f4\u63a5\u7ffb\u500d\u5373\u53ef\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u7ed9\u5b9a\u4e00\u4e2a\u6570\u5b57\uff0c\u8fd4\u56de\u6570\u7ec4\u4e2d\u6240\u6709\u4e24\u6570\u4e4b\u548c\u4e3a\u6307\u5b9a\u6570\u5b57\u7684\u4e24\u4e2a\u6570\u7684\u7d22\u5f15 void findIndex(vector<int>& nums, int target, vector<vector<int>>& ans){ unordered_map<int, vector<int>> memo; for(int i=0; i<nums.size(); i++){ if(memo.count(nums[i]) == 0){ memo[nums[i]] = vector<int>{i}; }else{ memo[nums[i]].push_back(i); } } for(auto &v:memo){ if(memo.count(target - v.first)){ for(auto& a1:v.second){ vector<int> res(2); res[0]=a1; for(auto& a2:memo[target-v.first]){ res[1] = a2; ans.push_back(res); } } memo.erase(target-v.first); } } } int main() { vector<int> nums{4, 4, 2, 4}; vector<vector<int>> ans; findIndex(nums, 6, ans); for(auto &v:ans){ for(int i:v){ cout<<i<<\" \"; } cout<<endl; } return 0; } /* 2 0 2 1 2 3 */","title":"\u9762\u8bd5\u9898"},{"location":"CPP/Complementary/","text":"\u8865\u5145 \u7c7b\u578b\u8f6c\u6362 reinterpret_cast \u2003\u53ef\u4ee5\u63d0\u4f9b\u4e24\u4e2a\u5b8c\u5168\u65e0\u5173\u7c7b\u578b\u7684\u6307\u9488/\u5f15\u7528\u4e4b\u95f4\u6216\u6307\u9488\u548c\u6574\u6570\u8fdb\u884c\u4e92\u8f6c\uff0c\u6bd4\u5982\u5c06char*\u8f6c\u6362\u4e3adouble*\u3002\u5b83\u5bf9\u539f\u59cb\u5bf9\u8c61\u7684\u4f4d\u6a21\u5f0f\u63d0\u4f9b\u8f83\u4f4e\u5c42\u6b21\u4e0a\u7684\u91cd\u65b0\u89e3\u91ca\uff08\u5373reinterpret\uff09\uff0c\u5b8c\u5168\u590d\u5236\u4e8c\u8fdb\u5236\u6bd4\u7279\u4f4d\u5230\u76ee\u6807\u5bf9\u8c61\uff0c\u8f6c\u6362\u540e\u7684\u503c\u4e0e\u539f\u59cb\u5bf9\u8c61\u65e0\u5173\u4f46\u6bd4\u7279\u4f4d\u4e00\u81f4\uff0c\u524d\u540e\u65e0\u7cbe\u5ea6\u635f\u5931\u3002(\u6ce8\u610freinterpre\u5bf9\u4e24\u79cd\u975e\u6307\u9488/\u5f15\u7528\u7c7b\u578b\u662f\u4e0d\u80fd\u4e92\u8f6c\u7684\uff0c\u7c7b\u4f3cint\u548cdouble) int* i; char *p = new char('c'); i = reinterpret_cast<int*> (p); cout<<i<<endl; //0x3f43d0 cout<<p<<endl; //0x3f4sd0 \u2003\u7528\u5904: \u6bd4\u5982\u5f00\u8f9f\u4e86\u7cfb\u7edf\u5168\u5c40\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u9700\u8981\u5728\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u4f20\u9012\u8fd9\u4e2a\u7a7a\u95f4\u7684\u6307\u9488\u65f6\uff0c\u5c31\u53ef\u4ee5\u5c06\u6307\u9488\u8f6c\u6362\u6210\u6574\u6570\u503c\uff0c\u5f97\u5230\u4ee5\u540e\u518d\u5c06\u503c\u8f6c\u6210\u6307\u9488\u8fdb\u884c\u5bf9\u5e94\u7684\u64cd\u4f5c\u3002 static_cast: \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u53ef\u4ee5\u5c06expression\u8f6c\u6362\u4e3a\u67d0\u79cd\u5408\u7406\u7c7b\u578b\uff0c\u4f46\u6ca1\u6709\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\u6765\u4fdd\u8bc1\u8f6c\u6362\u7684\u5b89\u5168\u6027\u3002 \u2003\u8fdb\u884c\u4e0a\u884c\u8f6c\u6362\uff08\u628a\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u6210\u57fa\u7c7b\u8868\u793a\uff09\u662f\u5b89\u5168\u7684; \u2003\u8fdb\u884c\u4e0b\u884c\u8f6c\u6362\uff08\u628a\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u6210\u6d3e\u751f\u7c7b\u8868\u793a\uff09\u65f6\uff0c\u7531\u4e8e\u6ca1\u6709\u52a8\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u6240\u4ee5\u662f\u4e0d\u5b89\u5168\u7684; \u2003\u7528\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u5982\u628aint\u8f6c\u6362\u6210char\uff0c\u628aint\u8f6c\u6362\u6210enum; \u2003\u628a\u7a7a\u6307\u9488\u8f6c\u6362\u6210\u76ee\u6807\u7c7b\u578b\u7684\u7a7a\u6307\u9488; \u2003\u628a\u4efb\u4f55\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\u8f6c\u6362\u6210void\u7c7b\u578b\u3002 \u2003static_cast\u4e0d\u80fd\u8f6c\u6362\u6389expression\u7684const\u3001volatile\u3001\u6216\u8005__unaligned\u5c5e\u6027\u3002 const_cast: \u4ec5\u7528\u4e8e\u8fdb\u884c\u53bb\u9664 const \u5c5e\u6027\u7684\u8f6c\u6362\uff0c\u5b83\u4e5f\u662f\u56db\u4e2a\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u4e2d\u552f\u4e00\u80fd\u591f\u53bb\u9664 const \u5c5e\u6027\u7684\u8fd0\u7b97\u7b26\u3002 dynamic_cast: dynamic_cast< type* >(e); dynamic_cast< type& > (e); dynamic< type&& >(e); \u2003\u7b2c\u4e00\u79cd\u5f62\u5f0f\uff0ce\u5fc5\u987b\u662f\u4e00\u4e2a\u6709\u6548\u6307\u9488\uff1b\u7b2c\u4e8c\u79cd\u5f62\u5f0f\uff0ce\u5fc5\u987b\u662f\u4e00\u4e2a\u5de6\u503c\uff1b\u7b2c\u4e09\u79cd\u5f62\u5f0f\uff0ce\u5fc5\u987b\u662f\u53f3\u503c\uff1b \u2003e\u662f\u76ee\u6807type\u7684\u516c\u6709\u6d3e\u751f\u7c7b\u6216\u8005\u516c\u6709\u57fa\u7c7b\uff0c\u6216\u8005\u5c31\u662ftype\u7c7b\u578b\uff0c\u5982\u679c\u7b26\u5408\u6761\u4ef6\uff0c\u4e14\u8f6c\u6362\u5b89\u5168\uff0c\u5219\u8f6c\u6362\u6210\u529f\uff1b \u2003\u82e5\u8f6c\u6362\u76ee\u6807\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u8f6c\u6362\u5931\u8d25\u65f6\uff0c\u4f1a\u8fd4\u56deNULL\uff1b\u82e5\u8f6c\u6362\u76ee\u6807\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5219\u629b\u51fabad_cast\u5f02\u5e38\u3002 \u2003dynamic_cast\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5728\u8fd0\u884c\u671f\u51b3\u5b9a\u771f\u6b63\u7684\u7c7b\u578b\u3002\u5982\u679c downcast \u662f\u5b89\u5168\u7684\uff08\u4e5f\u5c31\u8bf4\uff0c\u5982\u679c\u57fa\u7c7b\u6307\u9488\u6216\u8005\u5f15\u7528\u786e\u5b9e\u6307\u5411\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff09\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u4f1a\u4f20\u56de\u9002\u5f53\u8f6c\u578b\u8fc7\u7684\u6307\u9488\u3002\u5982\u679c downcast \u4e0d\u5b89\u5168\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u4f1a\u4f20\u56de\u7a7a\u6307\u9488\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u57fa\u7c7b\u6307\u9488\u6216\u8005\u5f15\u7528\u6ca1\u6709\u6307\u5411\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff09\u3002 RTTI \u2003\u8fd0\u884c\u65f6\u7c7b\u578b\u8bc6\u522b\uff08Run-time type identification, RTTI\uff09\u7684\u529f\u80fd\u7531\u4e24\u4e2a\u8fd0\u7b97\u7b26\u5b9e\u73b0\uff1a typeid \u2003\u8fd4\u56de\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b, typeid(e)\u8fd4\u56de\u4e00\u4e2a\u5e38\u91cf\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u8be5\u5bf9\u8c61\u7684\u7c7b\u578b\u662f\u6807\u51c6\u5e93\u7c7b\u578btype_info\u6216\u8005type_info\u7684\u516c\u6709\u6d3e\u751f\u7c7b\u578b\u3002typeid(e).name()\u5c06\u7c7b\u578b\u540d\u8f6c\u6362\u4e3astring. \u2003\u5f53\u8fd0\u7b97\u5bf9\u8c61\u4e0d\u662f\u7c7b\u7c7b\u578b\u6216\u8005\u662f\u4e00\u4e2a\u4e0d\u5305\u542b\u4efb\u4f55\u865a\u51fd\u6570\u7684\u7c7b\u65f6\uff0ctypeid\u8fd0\u7b97\u7b26\u6307\u793a\u7684\u662f\u8fd0\u7b97\u5bf9\u8c61\u7684\u9759\u6001\u7c7b\u578b\uff1b\u800c\u8fd0\u7b97\u5bf9\u8c61\u662f\u5b9a\u4e49\u4e86\u81f3\u5c11\u4e00\u4e2a\u865a\u51fd\u6570\u7684\u7c7b\u7684\u5de6\u503c\u65f6\uff0ctypeid\u7684\u7ed3\u679c\u76f4\u5230\u8fd0\u884c\u65f6\u624d\u4f1a\u77e5\u9053\u3002 \u2003typeid\u4f5c\u7528\u4e8e\u51fd\u6570\u6216\u8005\u6570\u7ec4\u65f6\uff0c\u4e0d\u4f1a\u6267\u884c\u5411\u6307\u9488\u7684\u6807\u51c6\u7c7b\u578b\u8f6c\u6362; \u5f53typeid\u4f5c\u7528\u4e8e\u6307\u9488\u65f6\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u8be5\u6307\u9488\u7684\u9759\u6001\u7f16\u8bd1\u7c7b\u578b\u3002(\u6307\u9488\u5e76\u975e\u662f\u4e00\u4e2a\u7c7b\u7c7b\u578b\u5bf9\u8c61) dynamic_cast \u2003\u7528\u4e8e\u5c06\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u5b89\u5168\u5730\u8f6c\u6362\u6210\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u3002 \u5f53\u6211\u4eec\u5c06\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u7b26\u7528\u4e8e\u67d0\u79cd\u7c7b\u578b\u7684\u6307\u9488\u6216\u5f15\u7528\uff0c\u5e76\u4e14\u8be5\u7c7b\u578b\u542b\u6709\u865a\u51fd\u6570\uff0c\u8fd0\u7b97\u7b26\u5c06\u4f7f\u7528\u6307\u9488\u6216\u5f15\u7528\u7ed1\u5b9a\u7684\u5bf9\u8c61\u7684\u52a8\u6001\u7c7b\u578b\u3002 type_info\uff1a\u5176\u62f7\u8d1d\u548c\u79fb\u52a8\u6784\u9020\u51fd\u6570\u4ee5\u53ca\u8d4b\u503c\u8fd0\u7b97\u7b26\u90fd\u88ab\u5b9a\u4e49\u6210\u5220\u9664\u7684\uff0c\u521b\u5efatype_info\u5bf9\u8c61\u7684\u552f\u4e00\u9014\u5f84\u662f\u4f7f\u7528typeid\u8fd0\u7b97\u7b26\u3002 IO\u6d41 IO\u5bf9\u8c61\u65e0\u62f7\u8d1d\u6216\u8d4b\u503c\uff0c\u901a\u5e38\u4ee5\u5f15\u7528\u65b9\u5f0f\u4f20\u9012\u548c\u8fd4\u56de\u6d41\u3002 _istream >> word; getline(_istream, line); \u7b2c\u4e00\u4e2astring\u4f1a\u5b58\u5230word; \u5269\u4f59\u7684\u5185\u5bb9\u4f1a\u5b58\u5230line\uff0c \u5305\u542b\u7a7a\u683c\u3002 ostringstream \u2003\u4f7f\u7528\u524d\u5148\u5305\u542b\u6807\u51c6\u5934\u6587\u4ef6sstream, \u5176\u63d0\u4f9b\"\u5185\u5b58\u5185\u7684\u7684\u8f93\u51fa\u64cd\u4f5c\"\uff0c\u8f93\u51fa\u5230\u4e00\u4e2astring\u5bf9\u8c61\u4e0a\uff0c\u5f53\u6211\u4eec\u9700\u8981\u5c06\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u683c\u5f0f\u5316\u4e3a\u5b57\u7b26\u4e32\u683c\u5f0f\u65f6\uff0c\u5b83\u53ef\u4ee5\u5c06int\u3001float\u7b49\u7c7b\u578b\u7684\u6570\u503c\u81ea\u52a8\u8f6c\u5316\u4e3a\u76f8\u5e94\u7684string\u683c\u5f0f\uff0c\u800c\u4e0d\u5fc5\u8003\u8651\u5b58\u50a8\u7a7a\u95f4\u3001\u8f6c\u6362\u7b97\u6cd5\u7b49\u95ee\u9898\u3002\u5f53\u5b58\u5728\u672a\u77e5\u6570\u636e\u5927\u5c0f\u7684\u65f6\u5019,\u53ef\u4ee5\u4f7f\u7528 ostringstream \u6765\u4ee3\u66ff sprintf , \u907f\u514d\u603b\u662f\u7533\u8bf7\u5927\u91cf\u7684\u7f13\u51b2\u533a\uff0c ostringstream\u63d0\u4f9b\u7684\u7684\u4e00\u4e2amember function str()\uff0c\u4f1a\u8fd4\u56de\"\u4e0eostringstream\u5bf9\u8c61\u76f8\u547c\u5e94\"\u7684string\u5bf9\u8c61\u3002 eg\uff1a ostringstream oss; string str; oss << \u201chello\u201d<<1; str = oss.str(); //\u8403\u53d6\u51fastring\u5bf9\u8c61 auto \u2003\u7531\u7f16\u8bd1\u5668\u901a\u8fc7\u521d\u59cb\u503c\u6765\u63a8\u7b97\u53d8\u91cf\u7684\u7c7b\u578b\uff0c \u663e\u7136auto\u5b9a\u4e49\u7684\u53d8\u91cf\u5fc5\u987b\u6709\u521d\u59cb\u503c \u3002\u4f7f\u7528auto\u5728\u4e00\u6761\u8bed\u53e5\u4e2d\u540c\u65f6\u58f0\u660e\u591a\u4e2a\u53d8\u91cf\u65f6\uff0c\u6240\u6709\u53d8\u91cf\u7684\u521d\u59cb\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u4e00\u81f4\u3002 \u2003 Using auto is especially useful where the type is a pretty long or complicated expression, such as lambda. \u2003\u7f16\u8bd1\u5668\u63a8\u65ad\u51fa\u7684auto\u7c7b\u578b\u548c\u521d\u59cb\u503c\u7c7b\u578b\u4e0d\u4e00\u5b9a\u5b8c\u5168\u4e00\u81f4: int i=0, &r=i; auto a=r; //a\u7c7b\u578b\u662fint\uff0c\u800c\u975e\u5f15\u7528\uff0c\u56e0\u4e3ar\u5373\u53ea\u662fi\u7684\u4e00\u4e2a\u522b\u540d, \u5176\u6b21\uff0cauto\u4e00\u822c\u4f1a\u5ffd\u7565\u6389\u9876\u5c42const, \u800c\u5e95\u5c42const\u4f1a\u88ab\u4fdd\u7559\u3002 const int ci = i, &cr=ci; auto b = ci; // b\u662f\u4e00\u4e2a\u6574\u6570 auto d = &i; //d\u662f\u4e00\u4e2a\u6574\u6570\u6307\u9488 auto e = &ci; //e\u662f\u4e00\u4e2a\u6307\u5411\u6574\u6570\u5e38\u91cf\u7684\u6307\u9488\u3002 // \u82e5\u8bbe\u7f6e\u4e00\u4e2a\u7c7b\u578b\u4e3aauto\u7684\u5f15\u7528\u65f6\uff0c\u5219\u9876\u5c42const\u5c5e\u6027\u4f1a\u88ab\u4fdd\u7559\uff0c auto &g = ci; //g\u662f\u4e00\u4e2a\u6574\u578b\u5e38\u91cf\u5f15\u7528\u3002 auto *p = &ci; //p\u662f\u4e00\u4e2a\u6307\u5411\u6574\u578b\u5e38\u91cf\u7684\u6307\u9488 decltype \u2003find out the type of expression decltype(fun()) a; //\u4ee5\u51fd\u6570fun\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4f5c\u4e3aa\u7684\u6570\u636e\u7c7b\u578b // decltype\u5728\u5904\u7406\u9876\u5c42const\u65f6\uff0c\u4e0eauto\u4e0d\u540c\uff0c\u4f1a\u4fdd\u7559\u9876\u5c42const\u5c5e\u6027\u548c\u5f15\u7528\u3002 const int ci =0, &cj = ci; decltype(ci) x = 0; // x\u7c7b\u578b\u4e3aconst int; delctype(cj) y = x; // y\u7c7b\u578b\u4e3aconst int &; \u2003decltype\u5bf9\u4e8e\u89e3\u5f15\u7528\u64cd\u4f5c\u5f97\u5230\u7684\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5373decltype(*p)\u7684\u7ed3\u679c\u7c7b\u578b\u662f type&. \u5bf9\u4e8edecltype\u6240\u7528\u7684\u8868\u8fbe\u5f0f\u6765\u8bf4\uff0c\u5982\u679c\u53d8\u91cf\u540d\u5916\u52a0\u4e0a\u4e00\u5bf9\u62ec\u53f7\uff0c\u5219\u7c7b\u578b\u4e0e\u4e0d\u52a0\u62ec\u53f7\u4f1a\u6709\u6240\u533a\u522b\u3002 delcltype(i)\u7ed3\u679c\u7c7b\u578b\u4e3atype, \u5219decltype((i))\u7ed3\u679c\u7c7b\u578b\u4e3atype&. \u2003auto\u4e0edecltype\u5728\u5904\u7406\u6570\u7ec4\u7c7b\u578b\u65f6\u4e5f\u6709\u533a\u522b int a[] = {1, 2}; decltype(a) b = {1, 2}; //b\u662f\u4e00\u4e2a\u75312\u4e2a\u5143\u7d20\u7ec4\u6210\u7684\u6570\u7ec4\uff0c auto c(a); //c \u662f\u4e00\u4e2a\u6574\u578b\u6307\u9488\uff0c\u6307\u5411\u6570\u7ec4a\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 \u2003 Three applications of decltype, first is to declare return types; second is to use in metaprogramming; third is to pass the type of lambda\u3002 //eg. 3. \u9762\u5bf9lambda\uff0c\u53ea\u6709object\uff0c\u9700\u8981\u901a\u8fc7decltype\u83b7\u5f97\u5176\u7c7b\u578b auto cmp = [](const Persion& p1, const Persion& p2){ return p1.lastname()<p2.lastname || (p1.lastname() == p2.lastname() && p1.firstname()<p2.firstname()); }; std::set<Persion, decltype(cmp)> coll(cmp); //cmp\u4f5c\u4e3a\u6bd4\u8f83\u5668\u4f20\u5165 string \u52a0\u6cd5\u64cd\u4f5c\uff0c\u5fc5\u987b\u786e\u4fdd\u6bcf\u4e2a\u201d+\u201d\u4e24\u4fa7\u7684\u8fd0\u7b97\u5bf9\u8c61\u81f3\u5c11\u4e00\u4e2a\u662fstring\uff0c\u53e6\u4e00\u4e2a\u53ef\u4ee5\u662fstring\u3001\u5b57\u7b26\u5b57\u9762\u503c\u3001\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u3002 \u5173\u4e8e\u6570\u7ec4 \u6570\u7ec4\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012 \u2003\u6709\u4e24\u79cd\u4f20\u9012\u65b9\u6cd5\uff0c\u4e00\u79cd\u662ffunction(int a[]); \u53e6\u4e00\u79cd\u662ffunction(int *a)\uff0c\u8fd9\u4e24\u79cd\u65b9\u6cd5\u5728\u51fd\u6570\u4e2d\u5bf9\u6570\u7ec4\u53c2\u6570\u7684\u4fee\u6539\u90fd\u4f1a\u5f71\u54cd\u5230\u5b9e\u53c2\u672c\u8eab\u7684\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u6570\u7ec4\u5f62\u53c2\u524d\u52a0\u4e0aconst\uff0c\u8868\u793a\u6574\u4e2a\u6570\u7ec4\u53ea\u8bfb\u3002 \u2003\u4f20\u9012\u6570\u7ec4\uff0c\u867d\u7136\u4f20\u9012\u7684\u662f\u9996\u5730\u5740\u5730\u5740\uff0c\u4f46\u662f\u53c2\u6570\u5230\u4e86\u51fd\u6570\u5185\u5c31\u6210\u4e86\u666e\u901a\u6307\u9488\uff0c\u4e0d\u518d\u662f\u6570\u7ec4\u9996\u5730\u5740\u4e86\uff0c\u6240\u4ee5\u8bd5\u56fe\u5728\u522b\u7684\u51fd\u6570\u4e2d\u5f97\u5230\u4f20\u9012\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u884c\u4e0d\u901a\u7684\u3002\u53ea\u80fd\u5148\u8ba1\u7b97\u597d\u957f\u5ea6\u540e\u518d\u4f20\u8fc7\u53bb\uff0c\u8fdb\u884c\u5176\u4ed6\u7684\u8fd0\u7b97\u3002 \u8ba1\u7b97 :\u2003 sizeof(array)/sizeof(array[0]) \u2003\u82e5\u4ee5\u6570\u7ec4\u5f15\u7528\u4f5c\u4e3a\u53c2\u6570\uff0c\u5f62\u5f0f\u5982\u4e0b\uff1a void test(int (&array)[16]); //\u5219\u4f20\u9012\u53c2\u6570\u65f6\uff0c\u5927\u5c0f\u4e5f\u662f\u6570\u7ec4\u7c7b\u578b\u7684\u4e00\u90e8\u5206\uff0c\u82e5\u6570\u7ec4\u957f\u5ea6\u4e0d\u7b49\u4e8e16\uff0c\u662f\u65e0\u6cd5\u4f20\u9012\u7684\u3002 \u5b57\u7b26\u6570\u7ec4 \u53ef\u4ee5\u7528\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u5bf9\u6b64\u7c7b\u6570\u7ec4\u521d\u59cb\u5316\uff0c\u4e14\u9700\u8bb0\u4f4f\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u5f97\u7ed3\u5c3e\u5904\u6709\u4e00\u4e2a\u7a7a\u5b57\u7b26\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u6dfb\u52a0\uff0c\u56e0\u6b64\u6570\u7ec4\u5927\u5c0f\u5e94\u80fd\u591f\u5305\u542b\u8be5\u7a7a\u5b57\u7b26\u3002 \u6570\u7ec4\u4e0d\u5141\u8bb8\u62f7\u8d1d\u548c\u8d4b\u503c \u5185\u7f6e\u7684\u4e0b\u6807\u8fd0\u7b97\u7b26\u7c7b\u578b\u4e0d\u662f\u65e0\u7b26\u53f7\u7c7b\u578b\uff0c\u800cstring\u3001vector\u7b49\u6807\u51c6\u5e93\u7c7b\u578b\u4f7f\u7528\u7684\u4e0b\u6807\u8fd0\u7b97\u7b26\u7c7b\u578b\u5fc5\u987b\u662f\u65e0\u7b26\u53f7\u7c7b\u578b\u3002 int a[]={1, 2, 3, 4}; int *p = &a[3]; cout << p[-2]; //\u8f93\u51fa2 \u4f7f\u7528\u8303\u56f4for\u8bed\u53e5\u5904\u7406\u591a\u7ef4\u6570\u7ec4\uff0c\u9664\u4e86\u6700\u5185\u5c42\u7684\u5faa\u73af\u5916\uff0c\u5176\u4ed6\u6240\u6709\u5faa\u73af\u7684\u63a7\u5236\u53d8\u91cf\u90fd\u5e94\u8be5\u662f\u5f15\u7528\u7c7b\u578b\u3002 \u6307\u5411\u6570\u7ec4\u7684\u6307\u9488 \u683c\u5f0f: int (*p)[4] = ia; //p\u662f\u4e00\u4e2a\u6307\u5411\u542b\u67094\u4e2a\u6574\u6570\u7684\u6570\u7ec4 sizeof \u2003sizeof \u8fd4\u56de\u4e00\u6761\u8868\u8fbe\u5f0f\u6216\u8005\u4e00\u4e2a\u7c7b\u578b\u540d\u5b57\u6240\u5360\u7684\u5b57\u8282\u6570\uff1b\u4e5f\u53ef\u4ee5\u4f5c\u7528\u4e8e\u4e00\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61 sizeof(type); sizeof(expr); sizeof(object) \u6216 sizeof object \u2003 sizeof(Class_name)\u5f97\u5230\u7684\u662f\u6240\u6709\u975e\u9759\u6001\u6210\u5458\u5927\u5c0f\u4e4b\u548c\uff0c\u5982\u679c\u8be5\u7c7b\u5305\u542b\u865a\u51fd\u6570\uff0c\u8fd8\u9700\u52a0\u4e0a4\u4e2a\u5b57\u8282(32\u4f4d\u673a\u5668)\u7684\u865a\u6307\u9488\u5927\u5c0f\uff1b \u2003 \u5bf9\u4e8e\u7a7a\u7c7b(\u4e0d\u542b\u4efb\u4f55\u6570\u636e\u6210\u5458\u6216\u8005\u865a\u51fd\u6570)\uff0csizeof\u8fd4\u56de\u7684\u7ed3\u679c\u4e3a1\uff0cC++\u6807\u51c6\u89c4\u5b9a\u4e0d\u540c\u7684\u5bf9\u8c61\u4e0d\u80fd\u62e5\u6709\u76f8\u540c\u7684\u5730\u5740\uff0c\u6240\u6709\u5373\u4f7f\u662f\u7a7a\u7c7b\u5728\u5b9e\u4f8b\u5316\u65f6\u4e5f\u9700\u8981\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u5730\u5740\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u4f1a\u4e3a\u7a7a\u7c7b\u6dfb\u52a0\u4e00\u4e2a\u9690\u542b\u7684\u5b57\u8282 \u2003sizeof\u5e76\u4e0d\u5b9e\u9645\u8ba1\u7b97\u5176\u8fd0\u7b97\u5bf9\u8c61\u7684\u503c\uff0c\u56e0\u6b64\u5728sizeof\u7684\u8fd0\u7b97\u5bf9\u8c61\u4e2d\u89e3\u5f15\u7528\u4e00\u4e2a\u65e0\u6548\u6307\u9488\u4ecd\u662f\u4e00\u79cd\u5b89\u5168\u7684\u884c\u4e3a\uff0c\u56e0\u4e3a\u6307\u9488\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u88ab\u8c03\u7528\uff1b\u6216\u8005\u4f7f\u7528\u4f5c\u7528\u57df\u8fd0\u7b97\u7b26\u6765\u83b7\u53d6\u975e\u79c1\u6709\u7c7b\u6210\u5458\u7684\u5927\u5c0f\uff0c\u56e0\u4e3a\u65e0\u9700\u63d0\u4f9b\u4e00\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\u3002 sizeof(*p); sizeof(Class::private_data); \u2003\u5bf9char\u6216\u8005\u7c7b\u578b\u4e3achar\u7684\u8868\u8fbe\u5f0f\u6267\u884csizeof\uff0c\u7ed3\u679c\u4e3a1\uff1b \u5bf9\u5f15\u7528\u7c7b\u578b\u6267\u884csizeof\u8fd0\u7b97\u5f97\u5230\u88ab\u5f15\u7528\u5bf9\u8c61\u6240\u5360\u7a7a\u95f4\u7684\u5927\u5c0f\uff1b \u5bf9\u6307\u9488\u7c7b\u578b\u5219\u662f\u5f97\u5230\u6307\u9488\u672c\u8eab\u6240\u5360\u7a7a\u95f4\u7684\u5927\u5c0f\uff1b\u5bf9\u89e3\u5f15\u7528\u6307\u9488\u5219\u662f\u5f97\u5230\u6307\u9488\u6240\u6307\u5411\u5bf9\u8c61\u6240\u5360\u7a7a\u95f4\u7684\u5927\u5c0f\uff1b \u2003sizeof(string), \u65e0\u8bbastring\u91cc\u653e\u591a\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u5b83\u7684sizeof()\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u5b57\u7b26\u4e32\u6240\u5360\u7684\u7a7a\u95f4\u662f\u4ece\u5806\u4e2d\u52a8\u6001\u5206\u914d\u7684\uff0c\u4e0esizeof()\u65e0\u5173\u3002\u5e38\u89c1\u7684\u5b9e\u73b0\u6709sizeof(string)=4 or 16 or 32, \u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\u3002 \u2003\u5bf9\u51fd\u6570\u4f7f\u7528sizeof\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u4f1a\u88ab\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u53d6\u4ee3; \u2003\u6570\u7ec4\u7684\u5927\u5c0f\u662f\u5404\u7ef4\u6570\u7684\u4e58\u79ef*\u6570\u7ec4\u5143\u7d20\u7684\u5927\u5c0f; char c[2][3] = {\"a\", \"bb\"}; sizeof(c) = 6; return \u2003\u4e0d\u8981\u8fd4\u56de\u5c40\u90e8\u5bf9\u8c61\u7684\u5f15\u7528\u548c\u6307\u9488\uff0c\u56e0\u4e3a\u51fd\u6570\u5b8c\u6210\u540e\uff0c\u5b83\u6240\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u4e5f\u968f\u4e4b\u88ab\u91ca\u653e\u6389\uff0c\u56e0\u6b64\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u6216\u6307\u9488\u5c06\u6307\u5411\u4e0d\u518d\u6709\u6548\u7684\u5185\u5b58\u533a\u57df\u3002 \u2003\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u51b3\u5b9a\u51fd\u6570\u8c03\u7528\u662f\u5426\u662f\u5de6\u503c\uff0c\u8c03\u7528\u4e00\u4e2a\u8fd4\u56de\u5f15\u7528\u7684\u51fd\u6570\u5f97\u5230\u5de6\u503c\uff0c\u5176\u4ed6\u8fd4\u56de\u7c7b\u578b\u5f97\u5230\u53f3\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e3a\u8fd4\u56de\u7c7b\u578b\u662f\u975e\u5e38\u91cf\u5f15\u7528\u7684\u51fd\u6570\u7684\u7ed3\u679c\u8d4b\u503c\u3002 \u2003\u58f0\u660e\u4e00\u4e2a\u8fd4\u56de\u6570\u7ec4\u6307\u9488\u7684\u51fd\u6570: \u2003 type (*func(param_list))[dimension]; //\u4f7f\u7528\u5c3e\u7f6e\u8fd4\u56de\u7c7b\u578b, \u8fd9\u91cc\u7684auto\u662f\u4e3a\u4e86\u8868\u793a\u51fd\u6570\u771f\u6b63\u7684\u8fd4\u56de\u7c7b\u578b\u8ddf\u5728\u5f62\u53c2\u5217\u8868\u4e4b\u540e auto func(param_list) -> int( * )[dimension]; volatile \u2003volatile \u5173\u952e\u5b57\u662f\u4e00\u79cd\u7c7b\u578b\u4fee\u9970\u7b26 \u2003volatile \u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u6bcf\u6b21\u8bbf\u95ee\u65f6\u90fd\u5fc5\u987b\u4ece\u5185\u5b58\u4e2d\u53d6\u51fa\u503c\uff08\u6ca1\u6709\u88ab volatile \u4fee\u9970\u7684\u53d8\u91cf\uff0c\u53ef\u80fd\u7531\u4e8e\u7f16\u8bd1\u5668\u7684\u4f18\u5316\uff0c\u4ece CPU \u5bc4\u5b58\u5668\u4e2d\u53d6\u503c\uff0c\u800c\u5b9e\u9645\u7684\u53d8\u91cf\u7531\u4e8e\u67d0\u4e9b\u7f16\u8bd1\u5668\u672a\u77e5\u7684\u56e0\u7d20\uff08\u64cd\u4f5c\u7cfb\u7edf\u3001\u786c\u4ef6\u3001\u5176\u5b83\u7ebf\u7a0b\u7b49\uff09\u53d1\u9001\u66f4\u6539\uff0c \u56e0\u6b64\u4f7f\u7528 volatile \u544a\u8bc9\u7f16\u8bd1\u5668\u4e0d\u5e94\u5bf9\u8fd9\u6837\u7684\u5bf9\u8c61\u8fdb\u884c\u4f18\u5316\u3002 \u2003const \u53ef\u4ee5\u662f volatile \uff08\u5982\u53ea\u8bfb\u7684\u72b6\u6001\u5bc4\u5b58\u5668\uff09; \u6307\u9488\u53ef\u4ee5\u662f volatile. \u94fe\u63a5\u6307\u793a:extern C \u2003 C++\u4f7f\u7528\u94fe\u63a5\u6307\u793a\u6307\u51fa\u4efb\u610f\u975eC++\u51fd\u6570\u4f7f\u7528\u7684\u8bed\u8a00 //\u5355\u8bed\u53e5\u94fe\u63a5\u6307\u793a\uff0c extern \"C\" size_t strlen(const char*); //\u590d\u5408\u8bed\u53e5\u94fe\u63a5\u6307\u793a extern \"C\"{ #include <string.h> //\u6b64\u65f6\u8ba4\u4e3a\u8be5\u5934\u6587\u4ef6\u5305\u542b\u7684\u6240\u6709\u51fd\u6570\u90fd\u662f\u7531C\u8bed\u8a00\u7f16\u5199\u7684 int strcmp(const char*); } //\u6307\u5411C\u51fd\u6570\u7684\u6307\u9488\u4e0e\u6307\u5411C++\u51fd\u6570\u7684\u6307\u9488\u662f\u4e0d\u540c\u7684 extern \"C\" void(*pf)(int); //\u4f7f\u7528pf\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u8ba4\u4e3a\u8c03\u7528\u7684\u662f\u4e00\u4e2aC\u51fd\u6570\uff0c\u4e14\u4e0d\u80fd\u7528\u6765\u6307\u5411\u4e00\u4e2aC++\u51fd\u6570 //\u6307\u5411C++\u51fd\u6570\u7684\u6307\u9488\u548c\u6307\u5411C\u51fd\u6570\u7684\u6307\u9488\u4e0d\u80fd\u4e92\u76f8\u8f6c\u6362 //\u94fe\u63a5\u6307\u793a\u5bf9\u6574\u4e2a\u58f0\u660e\u6709\u6548 // f1\u662f\u4e00\u4e2aC\u51fd\u6570\uff0c\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u53c2\u6570\uff0c\u4e14\u8be5\u51fd\u6570\u6307\u9488\u6307\u5411\u7684\u5fc5\u987b\u662f\u4e00\u4e2aC\u51fd\u6570 extern \"C\" void fun(void(*)(int)); \u2003C\u8bed\u8a00\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u56e0\u6b64\u4e00\u4e2aC\u94fe\u63a5\u6307\u793a\u53ea\u80fd\u7528\u6765\u8bf4\u660e\u91cd\u8f7d\u51fd\u6570\u4e2d\u7684\u67d0\u4e00\u4e2a\u3002 \u5b57\u8282\u5bf9\u9f50 1) \u6570\u636e\u7c7b\u578b\u81ea\u8eab\u7684\u5bf9\u9f50\u503c\uff1achar\u578b\u6570\u636e\u81ea\u8eab\u5bf9\u9f50\u503c\u4e3a1\u5b57\u8282\uff0cshort\u578b\u6570\u636e\u4e3a2\u5b57\u8282\uff0cint/float\u578b\u4e3a4\u5b57\u8282\uff0cdouble\u578b\u4e3a8\u5b57\u8282\u3002 2) \u7ed3\u6784\u4f53\u6216\u7c7b\u7684\u81ea\u8eab\u5bf9\u9f50\u503c\uff1a\u5176\u6210\u5458\u4e2d\u81ea\u8eab\u5bf9\u9f50\u503c\u6700\u5927\u7684\u90a3\u4e2a\u503c\u3002 3) \u6307\u5b9a\u5bf9\u9f50\u503c\uff1a#pragma pack (value)\u65f6\u7684\u6307\u5b9a\u5bf9\u9f50\u503cvalue\u3002 4) \u6570\u636e\u6210\u5458\u3001\u7ed3\u6784\u4f53\u548c\u7c7b\u7684\u6709\u6548\u5bf9\u9f50\u503c\uff1a\u81ea\u8eab\u5bf9\u9f50\u503c\u548c\u6307\u5b9a\u5bf9\u9f50\u503c\u4e2d\u8f83\u5c0f\u8005\uff0c\u5373\u6709\u6548\u5bf9\u9f50\u503c=min{\u81ea\u8eab\u5bf9\u9f50\u503c\uff0c\u5f53\u524d\u6307\u5b9a\u7684pack\u503c}\u3002 Class A{int i; char c;} sizeof(A) = 4+4=8; Class B{int i; char c; char c2; double d;} sizeof(B) = 8+8=16; Class C{int i; char c; char c2; int i2;} sizeof(C) = 4+4+4=12; // \u4e24\u4e2achar\u5171\u5360\u75282\u4e2a\u5b57\u8282\uff0c\u5bf9\u9f50\u540e\uff0c\u5360\u75284\u4e2a\u5b57\u8282 Class D {int i; char c2; int i2; char c;} sizeof(D)=4+4+4+4=16; \u5b57\u9762\u503c\u7c7b\u578b \u2003\u7528\u6765\u58f0\u660econstexpr\u65f6\u7528\u5230\u7684\u7c7b\u578b\uff1b \u7b97\u672f\u7c7b\u578b\u3001\u5f15\u7528\u3001\u6307\u9488\u548c\u5b57\u9762\u503c\u5e38\u91cf\u7c7b\u90fd\u5c5e\u4e8e\u5b57\u9762\u503c\u7c7b\u578b \uff0c\u81ea\u5b9a\u4e49\u7684\u7c7b\u3001IO\u5e93\u3001string\u7c7b\u578b\u90fd\u4e0d\u5c5e\u4e8e\u5b57\u9762\u503c\u7c7b\u578b\uff0c\u4e5f\u5c31\u4e0d\u80fd\u88ab\u5b9a\u4e49\u4e3aconstexpr\u3002 using using-directives for namespaces and using-declarations for namespace members. using namespace std; using std::string; \u2003\u2003\u5934\u6587\u4ef6\u5982\u679c\u5728\u5176\u9876\u5c42\u4f5c\u7528\u57df\u4e2d\u542b\u6709\u6b64\u7c7b\u8bf4\u660e\uff0c\u5219\u4f1a\u5c06\u76f8\u5e94\u7684\u547d\u540d\u7a7a\u95f4\u6216name\u6ce8\u5165\u5230\u6240\u6709\u5305\u542b\u4e86\u8be5\u5934\u6587\u4ef6\u7684\u6587\u4ef6\u4e2d\u3002 using-declarations for class members \u2003\u5728\u6d3e\u751f\u7c7b\u5185\u90e8\u4f7f\u7528using\u8bf4\u660e\uff0c\u53ef\u4ee5\u5c06\u5176\u76f4\u63a5\u6216\u95f4\u63a5\u57fa\u7c7b\u4e2d\u7684 \u4efb\u4f55\u53ef\u8bbf\u95ee\u6210\u5458 \u6807\u8bb0\u51fa\u6765\uff0c using\u58f0\u660e\u8bed\u53e5\u4e2d\u540d\u5b57\u7684\u8bbf\u95ee\u6743\u9650\u7531\u8be5using\u58f0\u660e\u8bed\u53e5\u524d\u7684\u8bbf\u95ee\u8bf4\u660e\u7b26\u51b3\u5b9a\uff0c\u4e0e\u6d3e\u751f\u8bbf\u95ee\u8bf4\u660e\u7b26\u65e0\u5173\u3002 type alias and alias template declaration // type alias using func = void(*)(int, int); // \u7b49\u4ef7\u4e8e typedef void(*func)(int, int); template<typename T> class C{ using value_type=T; } // alias template template<class CharT> using myString=std::basic_string<Chart, std::char_traits<CharT>> \u547d\u540d\u7a7a\u95f4 namespace(\u547d\u540d\u7a7a\u95f4)\uff1a\u5373\u53ef\u5b9a\u4e49\u5728\u5168\u5c40\u4f5c\u7528\u57df\u5185\uff0c\u4e5f\u53ef\u5b9a\u4e49\u5728\u5176\u4ed6\u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u4f46\u4e0d\u80fd\u5b9a\u4e49\u5728\u51fd\u6570\u6216\u7c7b\u7684\u5185\u90e8\u3002\u547d\u540d\u7a7a\u95f4\u4f5c\u7528\u57df\u540e\u65e0\u987b\u5206\u53f7\u3002 namespace\u7684\u522b\u540d\uff1a namespace primer = cplusplus_primer; primer\u662f\u547d\u540d\u7a7a\u95f4cplusplus_primer\u7684\u522b\u540d\uff0c\u4e24\u8005\u7b49\u4ef7\u3002\u4e14\u53ef\u4ee5\u5b58\u5728\u591a\u4e2a\u522b\u540d\u3002 \u5185\u8054\u547d\u540d\u7a7a\u95f4\uff1ac++11\u65b0\u5f15\u5165\u7684\u4e00\u79cd\u5d4c\u5957\u547d\u540d\u7a7a\u95f4\uff0c\u5185\u8054\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u540d\u5b57\u53ef\u4ee5\u88ab\u5916\u5c42\u547d\u540d\u7a7a\u95f4\u76f4\u63a5\u4f7f\u7528\u3002 \u672a\u547d\u540d\u7684\u547d\u540d\u7a7a\u95f4\uff1a\u4ec5\u5728\u7279\u5b9a\u6587\u4ef6\u5185\u90e8\u6709\u6548\uff0c\u4f5c\u7528\u8303\u56f4\u4e0d\u4f1a\u8de8\u8d8a\u591a\u4e2a\u4e0d\u540c\u6587\u4ef6\uff1b \u5176\u4e2d\u5b9a\u4e49\u7684\u540d\u5b57\u7684\u4f5c\u7528\u57df\u4e0e\u8be5\u547d\u540d\u7a7a\u95f4\u6240\u5728\u7684\u4f5c\u7528\u57df\u76f8\u540c\uff0c\u56e0\u6b64\u672a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u540d\u5b57\u8981\u4e0e\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u7684\u540d\u5b57\u6709\u6240\u533a\u522b\u3002 \u91cd\u8f7d\u4e0e\u547d\u540d\u7a7a\u95f4\uff1a\u4e00\u4e2ausing\u8bf4\u660e\u5305\u542b\u4e86\u8be5\u51fd\u6570\u7684\u6240\u6709\u7248\u672c\uff0c\u5e76\u4e14\u4f1a\u91cd\u8f7d\u8be5\u58f0\u660e\u8bed\u53e5\u6240\u5c5e\u4f5c\u7528\u57df\u4e2d\u5df2\u6709\u7684\u5176\u4ed6\u540c\u540d\u51fd\u6570\uff1b\u82e5\u6240\u5c5e\u4f5c\u7528\u57df\u4e2d\u5df2\u7ecf\u6709\u4e00\u4e2a\u51fd\u6570\u4e0e\u65b0\u5f15\u5165\u7684\u51fd\u6570\u540c\u540d\u4e14\u5f62\u53c2\u5217\u8868\u76f8\u540c\uff0c\u5219\u8be5using\u58f0\u660e\u5c06\u5f15\u53d1\u9519\u8bef\u3002 \u5bf9\u4e8eusing\u6307\u793a\u6765\u8bf4\uff0c\u5f15\u5165\u4e00\u4e2a\u4e0e\u5df2\u6709\u51fd\u6570\u5f62\u53c2\u5217\u8868\u5b8c\u5168\u76f8\u540c\u7684\u51fd\u6570\u5e76\u4e0d\u4f1a\u4ea7\u751f\u9519\u8bef\u3002 tips \u5546\u53d6\u6574 \u2003c++11\u6807\u51c6\u89c4\u5b9a\u5546\u4e00\u5f8b\u54110\u53d6\u6574\uff1bm%n\u5982\u679c\u4e0d\u7b49\u4e8e0\uff0c\u5219\u7b26\u53f7\u4e0em\u76f8\u540c\uff0c\u5373\u9664\u4e86-m\u6ea2\u51fa\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\uff08-m\uff09%n \u7b49\u4e8e-\uff08m%n\uff09\uff0cm%(-n)\u7b49\u4e8em%n\u3002 \u4ea4\u6362\u4e24\u4e2aint\u53d8\u91cf a=(b^=a^=b)^a; \u524d\u7f6e/\u540e\u7f6e \u81ea\u589e/\u81ea\u51cf\u8fd0\u7b97\u53ca\u89e3\u5f15\u7528 * iter++ \u7b49\u4ef7\u4e8e *(iter++); //\u540e\u81ea\u589e\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u9ad8\u4e8e\u89e3\u5f15\u7528\u7b26\uff0c\u4f46\u7531\u4e8e\u540e\u7f6e\u8fd0\u7b97\u7b26\u8fd4\u56de\u7684iter\u539f\u503c\u7684\u526f\u672c\uff0c\u56e0\u6b64 auto a = iter++; auto b = iter , \u5176\u4e2da==b\uff0c\u4f46\u524d\u8005\u6b64\u65f6iter\u5df2\u7ecf\u6307\u5411\u4e0b\u4e00\u4f4d\u5143\u7d20\u3002 \u800c\u524d\u7f6e\u8fd0\u7b97\u7b26\u5219\u8fd4\u56de\u7684\u662f\u6539\u53d8\u540e\u7684iter. object based: \u9762\u5bf9\u7684\u662f\u5355\u4e00\u7684class\u7684\u8bbe\u8ba1; object oriented: \u9762\u5bf9\u7684\u662f\u591a\u91cdclass\u4e4b\u95f4\u7684\u8bbe\u8ba1, classes \u548c classes\u4e4b\u95f4\u7684\u5173\u7cfb\u3002","title":"\u8865\u5145"},{"location":"CPP/Complementary/#_1","text":"","title":"\u8865\u5145"},{"location":"CPP/Complementary/#_2","text":"reinterpret_cast \u2003\u53ef\u4ee5\u63d0\u4f9b\u4e24\u4e2a\u5b8c\u5168\u65e0\u5173\u7c7b\u578b\u7684\u6307\u9488/\u5f15\u7528\u4e4b\u95f4\u6216\u6307\u9488\u548c\u6574\u6570\u8fdb\u884c\u4e92\u8f6c\uff0c\u6bd4\u5982\u5c06char*\u8f6c\u6362\u4e3adouble*\u3002\u5b83\u5bf9\u539f\u59cb\u5bf9\u8c61\u7684\u4f4d\u6a21\u5f0f\u63d0\u4f9b\u8f83\u4f4e\u5c42\u6b21\u4e0a\u7684\u91cd\u65b0\u89e3\u91ca\uff08\u5373reinterpret\uff09\uff0c\u5b8c\u5168\u590d\u5236\u4e8c\u8fdb\u5236\u6bd4\u7279\u4f4d\u5230\u76ee\u6807\u5bf9\u8c61\uff0c\u8f6c\u6362\u540e\u7684\u503c\u4e0e\u539f\u59cb\u5bf9\u8c61\u65e0\u5173\u4f46\u6bd4\u7279\u4f4d\u4e00\u81f4\uff0c\u524d\u540e\u65e0\u7cbe\u5ea6\u635f\u5931\u3002(\u6ce8\u610freinterpre\u5bf9\u4e24\u79cd\u975e\u6307\u9488/\u5f15\u7528\u7c7b\u578b\u662f\u4e0d\u80fd\u4e92\u8f6c\u7684\uff0c\u7c7b\u4f3cint\u548cdouble) int* i; char *p = new char('c'); i = reinterpret_cast<int*> (p); cout<<i<<endl; //0x3f43d0 cout<<p<<endl; //0x3f4sd0 \u2003\u7528\u5904: \u6bd4\u5982\u5f00\u8f9f\u4e86\u7cfb\u7edf\u5168\u5c40\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u9700\u8981\u5728\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4\u4f20\u9012\u8fd9\u4e2a\u7a7a\u95f4\u7684\u6307\u9488\u65f6\uff0c\u5c31\u53ef\u4ee5\u5c06\u6307\u9488\u8f6c\u6362\u6210\u6574\u6570\u503c\uff0c\u5f97\u5230\u4ee5\u540e\u518d\u5c06\u503c\u8f6c\u6210\u6307\u9488\u8fdb\u884c\u5bf9\u5e94\u7684\u64cd\u4f5c\u3002 static_cast: \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u53ef\u4ee5\u5c06expression\u8f6c\u6362\u4e3a\u67d0\u79cd\u5408\u7406\u7c7b\u578b\uff0c\u4f46\u6ca1\u6709\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\u6765\u4fdd\u8bc1\u8f6c\u6362\u7684\u5b89\u5168\u6027\u3002 \u2003\u8fdb\u884c\u4e0a\u884c\u8f6c\u6362\uff08\u628a\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u6210\u57fa\u7c7b\u8868\u793a\uff09\u662f\u5b89\u5168\u7684; \u2003\u8fdb\u884c\u4e0b\u884c\u8f6c\u6362\uff08\u628a\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u6210\u6d3e\u751f\u7c7b\u8868\u793a\uff09\u65f6\uff0c\u7531\u4e8e\u6ca1\u6709\u52a8\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u6240\u4ee5\u662f\u4e0d\u5b89\u5168\u7684; \u2003\u7528\u4e8e\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u7684\u8f6c\u6362\uff0c\u5982\u628aint\u8f6c\u6362\u6210char\uff0c\u628aint\u8f6c\u6362\u6210enum; \u2003\u628a\u7a7a\u6307\u9488\u8f6c\u6362\u6210\u76ee\u6807\u7c7b\u578b\u7684\u7a7a\u6307\u9488; \u2003\u628a\u4efb\u4f55\u7c7b\u578b\u7684\u8868\u8fbe\u5f0f\u8f6c\u6362\u6210void\u7c7b\u578b\u3002 \u2003static_cast\u4e0d\u80fd\u8f6c\u6362\u6389expression\u7684const\u3001volatile\u3001\u6216\u8005__unaligned\u5c5e\u6027\u3002 const_cast: \u4ec5\u7528\u4e8e\u8fdb\u884c\u53bb\u9664 const \u5c5e\u6027\u7684\u8f6c\u6362\uff0c\u5b83\u4e5f\u662f\u56db\u4e2a\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u8fd0\u7b97\u7b26\u4e2d\u552f\u4e00\u80fd\u591f\u53bb\u9664 const \u5c5e\u6027\u7684\u8fd0\u7b97\u7b26\u3002 dynamic_cast: dynamic_cast< type* >(e); dynamic_cast< type& > (e); dynamic< type&& >(e); \u2003\u7b2c\u4e00\u79cd\u5f62\u5f0f\uff0ce\u5fc5\u987b\u662f\u4e00\u4e2a\u6709\u6548\u6307\u9488\uff1b\u7b2c\u4e8c\u79cd\u5f62\u5f0f\uff0ce\u5fc5\u987b\u662f\u4e00\u4e2a\u5de6\u503c\uff1b\u7b2c\u4e09\u79cd\u5f62\u5f0f\uff0ce\u5fc5\u987b\u662f\u53f3\u503c\uff1b \u2003e\u662f\u76ee\u6807type\u7684\u516c\u6709\u6d3e\u751f\u7c7b\u6216\u8005\u516c\u6709\u57fa\u7c7b\uff0c\u6216\u8005\u5c31\u662ftype\u7c7b\u578b\uff0c\u5982\u679c\u7b26\u5408\u6761\u4ef6\uff0c\u4e14\u8f6c\u6362\u5b89\u5168\uff0c\u5219\u8f6c\u6362\u6210\u529f\uff1b \u2003\u82e5\u8f6c\u6362\u76ee\u6807\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u8f6c\u6362\u5931\u8d25\u65f6\uff0c\u4f1a\u8fd4\u56deNULL\uff1b\u82e5\u8f6c\u6362\u76ee\u6807\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5219\u629b\u51fabad_cast\u5f02\u5e38\u3002 \u2003dynamic_cast\u8fd0\u7b97\u7b26\u53ef\u4ee5\u5728\u8fd0\u884c\u671f\u51b3\u5b9a\u771f\u6b63\u7684\u7c7b\u578b\u3002\u5982\u679c downcast \u662f\u5b89\u5168\u7684\uff08\u4e5f\u5c31\u8bf4\uff0c\u5982\u679c\u57fa\u7c7b\u6307\u9488\u6216\u8005\u5f15\u7528\u786e\u5b9e\u6307\u5411\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff09\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u4f1a\u4f20\u56de\u9002\u5f53\u8f6c\u578b\u8fc7\u7684\u6307\u9488\u3002\u5982\u679c downcast \u4e0d\u5b89\u5168\uff0c\u8fd9\u4e2a\u8fd0\u7b97\u7b26\u4f1a\u4f20\u56de\u7a7a\u6307\u9488\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u57fa\u7c7b\u6307\u9488\u6216\u8005\u5f15\u7528\u6ca1\u6709\u6307\u5411\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff09\u3002","title":"\u7c7b\u578b\u8f6c\u6362"},{"location":"CPP/Complementary/#rtti","text":"\u8fd0\u884c\u65f6\u7c7b\u578b\u8bc6\u522b\uff08Run-time type identification, RTTI\uff09\u7684\u529f\u80fd\u7531\u4e24\u4e2a\u8fd0\u7b97\u7b26\u5b9e\u73b0\uff1a typeid \u2003\u8fd4\u56de\u8868\u8fbe\u5f0f\u7684\u7c7b\u578b, typeid(e)\u8fd4\u56de\u4e00\u4e2a\u5e38\u91cf\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u8be5\u5bf9\u8c61\u7684\u7c7b\u578b\u662f\u6807\u51c6\u5e93\u7c7b\u578btype_info\u6216\u8005type_info\u7684\u516c\u6709\u6d3e\u751f\u7c7b\u578b\u3002typeid(e).name()\u5c06\u7c7b\u578b\u540d\u8f6c\u6362\u4e3astring. \u2003\u5f53\u8fd0\u7b97\u5bf9\u8c61\u4e0d\u662f\u7c7b\u7c7b\u578b\u6216\u8005\u662f\u4e00\u4e2a\u4e0d\u5305\u542b\u4efb\u4f55\u865a\u51fd\u6570\u7684\u7c7b\u65f6\uff0ctypeid\u8fd0\u7b97\u7b26\u6307\u793a\u7684\u662f\u8fd0\u7b97\u5bf9\u8c61\u7684\u9759\u6001\u7c7b\u578b\uff1b\u800c\u8fd0\u7b97\u5bf9\u8c61\u662f\u5b9a\u4e49\u4e86\u81f3\u5c11\u4e00\u4e2a\u865a\u51fd\u6570\u7684\u7c7b\u7684\u5de6\u503c\u65f6\uff0ctypeid\u7684\u7ed3\u679c\u76f4\u5230\u8fd0\u884c\u65f6\u624d\u4f1a\u77e5\u9053\u3002 \u2003typeid\u4f5c\u7528\u4e8e\u51fd\u6570\u6216\u8005\u6570\u7ec4\u65f6\uff0c\u4e0d\u4f1a\u6267\u884c\u5411\u6307\u9488\u7684\u6807\u51c6\u7c7b\u578b\u8f6c\u6362; \u5f53typeid\u4f5c\u7528\u4e8e\u6307\u9488\u65f6\uff0c\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u8be5\u6307\u9488\u7684\u9759\u6001\u7f16\u8bd1\u7c7b\u578b\u3002(\u6307\u9488\u5e76\u975e\u662f\u4e00\u4e2a\u7c7b\u7c7b\u578b\u5bf9\u8c61) dynamic_cast \u2003\u7528\u4e8e\u5c06\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u5b89\u5168\u5730\u8f6c\u6362\u6210\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u3002 \u5f53\u6211\u4eec\u5c06\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u7b26\u7528\u4e8e\u67d0\u79cd\u7c7b\u578b\u7684\u6307\u9488\u6216\u5f15\u7528\uff0c\u5e76\u4e14\u8be5\u7c7b\u578b\u542b\u6709\u865a\u51fd\u6570\uff0c\u8fd0\u7b97\u7b26\u5c06\u4f7f\u7528\u6307\u9488\u6216\u5f15\u7528\u7ed1\u5b9a\u7684\u5bf9\u8c61\u7684\u52a8\u6001\u7c7b\u578b\u3002 type_info\uff1a\u5176\u62f7\u8d1d\u548c\u79fb\u52a8\u6784\u9020\u51fd\u6570\u4ee5\u53ca\u8d4b\u503c\u8fd0\u7b97\u7b26\u90fd\u88ab\u5b9a\u4e49\u6210\u5220\u9664\u7684\uff0c\u521b\u5efatype_info\u5bf9\u8c61\u7684\u552f\u4e00\u9014\u5f84\u662f\u4f7f\u7528typeid\u8fd0\u7b97\u7b26\u3002","title":"RTTI"},{"location":"CPP/Complementary/#io","text":"IO\u5bf9\u8c61\u65e0\u62f7\u8d1d\u6216\u8d4b\u503c\uff0c\u901a\u5e38\u4ee5\u5f15\u7528\u65b9\u5f0f\u4f20\u9012\u548c\u8fd4\u56de\u6d41\u3002 _istream >> word; getline(_istream, line); \u7b2c\u4e00\u4e2astring\u4f1a\u5b58\u5230word; \u5269\u4f59\u7684\u5185\u5bb9\u4f1a\u5b58\u5230line\uff0c \u5305\u542b\u7a7a\u683c\u3002","title":"IO\u6d41"},{"location":"CPP/Complementary/#ostringstream","text":"\u4f7f\u7528\u524d\u5148\u5305\u542b\u6807\u51c6\u5934\u6587\u4ef6sstream, \u5176\u63d0\u4f9b\"\u5185\u5b58\u5185\u7684\u7684\u8f93\u51fa\u64cd\u4f5c\"\uff0c\u8f93\u51fa\u5230\u4e00\u4e2astring\u5bf9\u8c61\u4e0a\uff0c\u5f53\u6211\u4eec\u9700\u8981\u5c06\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\u683c\u5f0f\u5316\u4e3a\u5b57\u7b26\u4e32\u683c\u5f0f\u65f6\uff0c\u5b83\u53ef\u4ee5\u5c06int\u3001float\u7b49\u7c7b\u578b\u7684\u6570\u503c\u81ea\u52a8\u8f6c\u5316\u4e3a\u76f8\u5e94\u7684string\u683c\u5f0f\uff0c\u800c\u4e0d\u5fc5\u8003\u8651\u5b58\u50a8\u7a7a\u95f4\u3001\u8f6c\u6362\u7b97\u6cd5\u7b49\u95ee\u9898\u3002\u5f53\u5b58\u5728\u672a\u77e5\u6570\u636e\u5927\u5c0f\u7684\u65f6\u5019,\u53ef\u4ee5\u4f7f\u7528 ostringstream \u6765\u4ee3\u66ff sprintf , \u907f\u514d\u603b\u662f\u7533\u8bf7\u5927\u91cf\u7684\u7f13\u51b2\u533a\uff0c ostringstream\u63d0\u4f9b\u7684\u7684\u4e00\u4e2amember function str()\uff0c\u4f1a\u8fd4\u56de\"\u4e0eostringstream\u5bf9\u8c61\u76f8\u547c\u5e94\"\u7684string\u5bf9\u8c61\u3002 eg\uff1a ostringstream oss; string str; oss << \u201chello\u201d<<1; str = oss.str(); //\u8403\u53d6\u51fastring\u5bf9\u8c61","title":"ostringstream"},{"location":"CPP/Complementary/#auto","text":"\u7531\u7f16\u8bd1\u5668\u901a\u8fc7\u521d\u59cb\u503c\u6765\u63a8\u7b97\u53d8\u91cf\u7684\u7c7b\u578b\uff0c \u663e\u7136auto\u5b9a\u4e49\u7684\u53d8\u91cf\u5fc5\u987b\u6709\u521d\u59cb\u503c \u3002\u4f7f\u7528auto\u5728\u4e00\u6761\u8bed\u53e5\u4e2d\u540c\u65f6\u58f0\u660e\u591a\u4e2a\u53d8\u91cf\u65f6\uff0c\u6240\u6709\u53d8\u91cf\u7684\u521d\u59cb\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u4e00\u81f4\u3002 \u2003 Using auto is especially useful where the type is a pretty long or complicated expression, such as lambda. \u2003\u7f16\u8bd1\u5668\u63a8\u65ad\u51fa\u7684auto\u7c7b\u578b\u548c\u521d\u59cb\u503c\u7c7b\u578b\u4e0d\u4e00\u5b9a\u5b8c\u5168\u4e00\u81f4: int i=0, &r=i; auto a=r; //a\u7c7b\u578b\u662fint\uff0c\u800c\u975e\u5f15\u7528\uff0c\u56e0\u4e3ar\u5373\u53ea\u662fi\u7684\u4e00\u4e2a\u522b\u540d, \u5176\u6b21\uff0cauto\u4e00\u822c\u4f1a\u5ffd\u7565\u6389\u9876\u5c42const, \u800c\u5e95\u5c42const\u4f1a\u88ab\u4fdd\u7559\u3002 const int ci = i, &cr=ci; auto b = ci; // b\u662f\u4e00\u4e2a\u6574\u6570 auto d = &i; //d\u662f\u4e00\u4e2a\u6574\u6570\u6307\u9488 auto e = &ci; //e\u662f\u4e00\u4e2a\u6307\u5411\u6574\u6570\u5e38\u91cf\u7684\u6307\u9488\u3002 // \u82e5\u8bbe\u7f6e\u4e00\u4e2a\u7c7b\u578b\u4e3aauto\u7684\u5f15\u7528\u65f6\uff0c\u5219\u9876\u5c42const\u5c5e\u6027\u4f1a\u88ab\u4fdd\u7559\uff0c auto &g = ci; //g\u662f\u4e00\u4e2a\u6574\u578b\u5e38\u91cf\u5f15\u7528\u3002 auto *p = &ci; //p\u662f\u4e00\u4e2a\u6307\u5411\u6574\u578b\u5e38\u91cf\u7684\u6307\u9488","title":"auto"},{"location":"CPP/Complementary/#decltype","text":"find out the type of expression decltype(fun()) a; //\u4ee5\u51fd\u6570fun\u7684\u8fd4\u56de\u503c\u7c7b\u578b\u4f5c\u4e3aa\u7684\u6570\u636e\u7c7b\u578b // decltype\u5728\u5904\u7406\u9876\u5c42const\u65f6\uff0c\u4e0eauto\u4e0d\u540c\uff0c\u4f1a\u4fdd\u7559\u9876\u5c42const\u5c5e\u6027\u548c\u5f15\u7528\u3002 const int ci =0, &cj = ci; decltype(ci) x = 0; // x\u7c7b\u578b\u4e3aconst int; delctype(cj) y = x; // y\u7c7b\u578b\u4e3aconst int &; \u2003decltype\u5bf9\u4e8e\u89e3\u5f15\u7528\u64cd\u4f5c\u5f97\u5230\u7684\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5373decltype(*p)\u7684\u7ed3\u679c\u7c7b\u578b\u662f type&. \u5bf9\u4e8edecltype\u6240\u7528\u7684\u8868\u8fbe\u5f0f\u6765\u8bf4\uff0c\u5982\u679c\u53d8\u91cf\u540d\u5916\u52a0\u4e0a\u4e00\u5bf9\u62ec\u53f7\uff0c\u5219\u7c7b\u578b\u4e0e\u4e0d\u52a0\u62ec\u53f7\u4f1a\u6709\u6240\u533a\u522b\u3002 delcltype(i)\u7ed3\u679c\u7c7b\u578b\u4e3atype, \u5219decltype((i))\u7ed3\u679c\u7c7b\u578b\u4e3atype&. \u2003auto\u4e0edecltype\u5728\u5904\u7406\u6570\u7ec4\u7c7b\u578b\u65f6\u4e5f\u6709\u533a\u522b int a[] = {1, 2}; decltype(a) b = {1, 2}; //b\u662f\u4e00\u4e2a\u75312\u4e2a\u5143\u7d20\u7ec4\u6210\u7684\u6570\u7ec4\uff0c auto c(a); //c \u662f\u4e00\u4e2a\u6574\u578b\u6307\u9488\uff0c\u6307\u5411\u6570\u7ec4a\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 \u2003 Three applications of decltype, first is to declare return types; second is to use in metaprogramming; third is to pass the type of lambda\u3002 //eg. 3. \u9762\u5bf9lambda\uff0c\u53ea\u6709object\uff0c\u9700\u8981\u901a\u8fc7decltype\u83b7\u5f97\u5176\u7c7b\u578b auto cmp = [](const Persion& p1, const Persion& p2){ return p1.lastname()<p2.lastname || (p1.lastname() == p2.lastname() && p1.firstname()<p2.firstname()); }; std::set<Persion, decltype(cmp)> coll(cmp); //cmp\u4f5c\u4e3a\u6bd4\u8f83\u5668\u4f20\u5165","title":"decltype"},{"location":"CPP/Complementary/#string","text":"\u52a0\u6cd5\u64cd\u4f5c\uff0c\u5fc5\u987b\u786e\u4fdd\u6bcf\u4e2a\u201d+\u201d\u4e24\u4fa7\u7684\u8fd0\u7b97\u5bf9\u8c61\u81f3\u5c11\u4e00\u4e2a\u662fstring\uff0c\u53e6\u4e00\u4e2a\u53ef\u4ee5\u662fstring\u3001\u5b57\u7b26\u5b57\u9762\u503c\u3001\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u3002","title":"string"},{"location":"CPP/Complementary/#_3","text":"\u6570\u7ec4\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012 \u2003\u6709\u4e24\u79cd\u4f20\u9012\u65b9\u6cd5\uff0c\u4e00\u79cd\u662ffunction(int a[]); \u53e6\u4e00\u79cd\u662ffunction(int *a)\uff0c\u8fd9\u4e24\u79cd\u65b9\u6cd5\u5728\u51fd\u6570\u4e2d\u5bf9\u6570\u7ec4\u53c2\u6570\u7684\u4fee\u6539\u90fd\u4f1a\u5f71\u54cd\u5230\u5b9e\u53c2\u672c\u8eab\u7684\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u6570\u7ec4\u5f62\u53c2\u524d\u52a0\u4e0aconst\uff0c\u8868\u793a\u6574\u4e2a\u6570\u7ec4\u53ea\u8bfb\u3002 \u2003\u4f20\u9012\u6570\u7ec4\uff0c\u867d\u7136\u4f20\u9012\u7684\u662f\u9996\u5730\u5740\u5730\u5740\uff0c\u4f46\u662f\u53c2\u6570\u5230\u4e86\u51fd\u6570\u5185\u5c31\u6210\u4e86\u666e\u901a\u6307\u9488\uff0c\u4e0d\u518d\u662f\u6570\u7ec4\u9996\u5730\u5740\u4e86\uff0c\u6240\u4ee5\u8bd5\u56fe\u5728\u522b\u7684\u51fd\u6570\u4e2d\u5f97\u5230\u4f20\u9012\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u884c\u4e0d\u901a\u7684\u3002\u53ea\u80fd\u5148\u8ba1\u7b97\u597d\u957f\u5ea6\u540e\u518d\u4f20\u8fc7\u53bb\uff0c\u8fdb\u884c\u5176\u4ed6\u7684\u8fd0\u7b97\u3002 \u8ba1\u7b97 :\u2003 sizeof(array)/sizeof(array[0]) \u2003\u82e5\u4ee5\u6570\u7ec4\u5f15\u7528\u4f5c\u4e3a\u53c2\u6570\uff0c\u5f62\u5f0f\u5982\u4e0b\uff1a void test(int (&array)[16]); //\u5219\u4f20\u9012\u53c2\u6570\u65f6\uff0c\u5927\u5c0f\u4e5f\u662f\u6570\u7ec4\u7c7b\u578b\u7684\u4e00\u90e8\u5206\uff0c\u82e5\u6570\u7ec4\u957f\u5ea6\u4e0d\u7b49\u4e8e16\uff0c\u662f\u65e0\u6cd5\u4f20\u9012\u7684\u3002 \u5b57\u7b26\u6570\u7ec4 \u53ef\u4ee5\u7528\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u5bf9\u6b64\u7c7b\u6570\u7ec4\u521d\u59cb\u5316\uff0c\u4e14\u9700\u8bb0\u4f4f\u5b57\u7b26\u4e32\u5b57\u9762\u503c\u5f97\u7ed3\u5c3e\u5904\u6709\u4e00\u4e2a\u7a7a\u5b57\u7b26\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u6dfb\u52a0\uff0c\u56e0\u6b64\u6570\u7ec4\u5927\u5c0f\u5e94\u80fd\u591f\u5305\u542b\u8be5\u7a7a\u5b57\u7b26\u3002 \u6570\u7ec4\u4e0d\u5141\u8bb8\u62f7\u8d1d\u548c\u8d4b\u503c \u5185\u7f6e\u7684\u4e0b\u6807\u8fd0\u7b97\u7b26\u7c7b\u578b\u4e0d\u662f\u65e0\u7b26\u53f7\u7c7b\u578b\uff0c\u800cstring\u3001vector\u7b49\u6807\u51c6\u5e93\u7c7b\u578b\u4f7f\u7528\u7684\u4e0b\u6807\u8fd0\u7b97\u7b26\u7c7b\u578b\u5fc5\u987b\u662f\u65e0\u7b26\u53f7\u7c7b\u578b\u3002 int a[]={1, 2, 3, 4}; int *p = &a[3]; cout << p[-2]; //\u8f93\u51fa2 \u4f7f\u7528\u8303\u56f4for\u8bed\u53e5\u5904\u7406\u591a\u7ef4\u6570\u7ec4\uff0c\u9664\u4e86\u6700\u5185\u5c42\u7684\u5faa\u73af\u5916\uff0c\u5176\u4ed6\u6240\u6709\u5faa\u73af\u7684\u63a7\u5236\u53d8\u91cf\u90fd\u5e94\u8be5\u662f\u5f15\u7528\u7c7b\u578b\u3002 \u6307\u5411\u6570\u7ec4\u7684\u6307\u9488 \u683c\u5f0f: int (*p)[4] = ia; //p\u662f\u4e00\u4e2a\u6307\u5411\u542b\u67094\u4e2a\u6574\u6570\u7684\u6570\u7ec4","title":"\u5173\u4e8e\u6570\u7ec4"},{"location":"CPP/Complementary/#sizeof","text":"sizeof \u8fd4\u56de\u4e00\u6761\u8868\u8fbe\u5f0f\u6216\u8005\u4e00\u4e2a\u7c7b\u578b\u540d\u5b57\u6240\u5360\u7684\u5b57\u8282\u6570\uff1b\u4e5f\u53ef\u4ee5\u4f5c\u7528\u4e8e\u4e00\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61 sizeof(type); sizeof(expr); sizeof(object) \u6216 sizeof object \u2003 sizeof(Class_name)\u5f97\u5230\u7684\u662f\u6240\u6709\u975e\u9759\u6001\u6210\u5458\u5927\u5c0f\u4e4b\u548c\uff0c\u5982\u679c\u8be5\u7c7b\u5305\u542b\u865a\u51fd\u6570\uff0c\u8fd8\u9700\u52a0\u4e0a4\u4e2a\u5b57\u8282(32\u4f4d\u673a\u5668)\u7684\u865a\u6307\u9488\u5927\u5c0f\uff1b \u2003 \u5bf9\u4e8e\u7a7a\u7c7b(\u4e0d\u542b\u4efb\u4f55\u6570\u636e\u6210\u5458\u6216\u8005\u865a\u51fd\u6570)\uff0csizeof\u8fd4\u56de\u7684\u7ed3\u679c\u4e3a1\uff0cC++\u6807\u51c6\u89c4\u5b9a\u4e0d\u540c\u7684\u5bf9\u8c61\u4e0d\u80fd\u62e5\u6709\u76f8\u540c\u7684\u5730\u5740\uff0c\u6240\u6709\u5373\u4f7f\u662f\u7a7a\u7c7b\u5728\u5b9e\u4f8b\u5316\u65f6\u4e5f\u9700\u8981\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684\u5730\u5740\uff0c\u6240\u4ee5\u7f16\u8bd1\u5668\u4f1a\u4e3a\u7a7a\u7c7b\u6dfb\u52a0\u4e00\u4e2a\u9690\u542b\u7684\u5b57\u8282 \u2003sizeof\u5e76\u4e0d\u5b9e\u9645\u8ba1\u7b97\u5176\u8fd0\u7b97\u5bf9\u8c61\u7684\u503c\uff0c\u56e0\u6b64\u5728sizeof\u7684\u8fd0\u7b97\u5bf9\u8c61\u4e2d\u89e3\u5f15\u7528\u4e00\u4e2a\u65e0\u6548\u6307\u9488\u4ecd\u662f\u4e00\u79cd\u5b89\u5168\u7684\u884c\u4e3a\uff0c\u56e0\u4e3a\u6307\u9488\u5b9e\u9645\u4e0a\u5e76\u6ca1\u6709\u88ab\u8c03\u7528\uff1b\u6216\u8005\u4f7f\u7528\u4f5c\u7528\u57df\u8fd0\u7b97\u7b26\u6765\u83b7\u53d6\u975e\u79c1\u6709\u7c7b\u6210\u5458\u7684\u5927\u5c0f\uff0c\u56e0\u4e3a\u65e0\u9700\u63d0\u4f9b\u4e00\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\u3002 sizeof(*p); sizeof(Class::private_data); \u2003\u5bf9char\u6216\u8005\u7c7b\u578b\u4e3achar\u7684\u8868\u8fbe\u5f0f\u6267\u884csizeof\uff0c\u7ed3\u679c\u4e3a1\uff1b \u5bf9\u5f15\u7528\u7c7b\u578b\u6267\u884csizeof\u8fd0\u7b97\u5f97\u5230\u88ab\u5f15\u7528\u5bf9\u8c61\u6240\u5360\u7a7a\u95f4\u7684\u5927\u5c0f\uff1b \u5bf9\u6307\u9488\u7c7b\u578b\u5219\u662f\u5f97\u5230\u6307\u9488\u672c\u8eab\u6240\u5360\u7a7a\u95f4\u7684\u5927\u5c0f\uff1b\u5bf9\u89e3\u5f15\u7528\u6307\u9488\u5219\u662f\u5f97\u5230\u6307\u9488\u6240\u6307\u5411\u5bf9\u8c61\u6240\u5360\u7a7a\u95f4\u7684\u5927\u5c0f\uff1b \u2003sizeof(string), \u65e0\u8bbastring\u91cc\u653e\u591a\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u5b83\u7684sizeof()\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u5b57\u7b26\u4e32\u6240\u5360\u7684\u7a7a\u95f4\u662f\u4ece\u5806\u4e2d\u52a8\u6001\u5206\u914d\u7684\uff0c\u4e0esizeof()\u65e0\u5173\u3002\u5e38\u89c1\u7684\u5b9e\u73b0\u6709sizeof(string)=4 or 16 or 32, \u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\u3002 \u2003\u5bf9\u51fd\u6570\u4f7f\u7528sizeof\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u4f1a\u88ab\u51fd\u6570\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u53d6\u4ee3; \u2003\u6570\u7ec4\u7684\u5927\u5c0f\u662f\u5404\u7ef4\u6570\u7684\u4e58\u79ef*\u6570\u7ec4\u5143\u7d20\u7684\u5927\u5c0f; char c[2][3] = {\"a\", \"bb\"}; sizeof(c) = 6;","title":"sizeof"},{"location":"CPP/Complementary/#return","text":"\u4e0d\u8981\u8fd4\u56de\u5c40\u90e8\u5bf9\u8c61\u7684\u5f15\u7528\u548c\u6307\u9488\uff0c\u56e0\u4e3a\u51fd\u6570\u5b8c\u6210\u540e\uff0c\u5b83\u6240\u5360\u7528\u7684\u5b58\u50a8\u7a7a\u95f4\u4e5f\u968f\u4e4b\u88ab\u91ca\u653e\u6389\uff0c\u56e0\u6b64\u5c40\u90e8\u53d8\u91cf\u7684\u5f15\u7528\u6216\u6307\u9488\u5c06\u6307\u5411\u4e0d\u518d\u6709\u6548\u7684\u5185\u5b58\u533a\u57df\u3002 \u2003\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u51b3\u5b9a\u51fd\u6570\u8c03\u7528\u662f\u5426\u662f\u5de6\u503c\uff0c\u8c03\u7528\u4e00\u4e2a\u8fd4\u56de\u5f15\u7528\u7684\u51fd\u6570\u5f97\u5230\u5de6\u503c\uff0c\u5176\u4ed6\u8fd4\u56de\u7c7b\u578b\u5f97\u5230\u53f3\u503c\uff0c\u56e0\u6b64\u53ef\u4ee5\u4e3a\u8fd4\u56de\u7c7b\u578b\u662f\u975e\u5e38\u91cf\u5f15\u7528\u7684\u51fd\u6570\u7684\u7ed3\u679c\u8d4b\u503c\u3002 \u2003\u58f0\u660e\u4e00\u4e2a\u8fd4\u56de\u6570\u7ec4\u6307\u9488\u7684\u51fd\u6570: \u2003 type (*func(param_list))[dimension]; //\u4f7f\u7528\u5c3e\u7f6e\u8fd4\u56de\u7c7b\u578b, \u8fd9\u91cc\u7684auto\u662f\u4e3a\u4e86\u8868\u793a\u51fd\u6570\u771f\u6b63\u7684\u8fd4\u56de\u7c7b\u578b\u8ddf\u5728\u5f62\u53c2\u5217\u8868\u4e4b\u540e auto func(param_list) -> int( * )[dimension];","title":"return"},{"location":"CPP/Complementary/#volatile","text":"volatile \u5173\u952e\u5b57\u662f\u4e00\u79cd\u7c7b\u578b\u4fee\u9970\u7b26 \u2003volatile \u5173\u952e\u5b57\u58f0\u660e\u7684\u53d8\u91cf\uff0c\u6bcf\u6b21\u8bbf\u95ee\u65f6\u90fd\u5fc5\u987b\u4ece\u5185\u5b58\u4e2d\u53d6\u51fa\u503c\uff08\u6ca1\u6709\u88ab volatile \u4fee\u9970\u7684\u53d8\u91cf\uff0c\u53ef\u80fd\u7531\u4e8e\u7f16\u8bd1\u5668\u7684\u4f18\u5316\uff0c\u4ece CPU \u5bc4\u5b58\u5668\u4e2d\u53d6\u503c\uff0c\u800c\u5b9e\u9645\u7684\u53d8\u91cf\u7531\u4e8e\u67d0\u4e9b\u7f16\u8bd1\u5668\u672a\u77e5\u7684\u56e0\u7d20\uff08\u64cd\u4f5c\u7cfb\u7edf\u3001\u786c\u4ef6\u3001\u5176\u5b83\u7ebf\u7a0b\u7b49\uff09\u53d1\u9001\u66f4\u6539\uff0c \u56e0\u6b64\u4f7f\u7528 volatile \u544a\u8bc9\u7f16\u8bd1\u5668\u4e0d\u5e94\u5bf9\u8fd9\u6837\u7684\u5bf9\u8c61\u8fdb\u884c\u4f18\u5316\u3002 \u2003const \u53ef\u4ee5\u662f volatile \uff08\u5982\u53ea\u8bfb\u7684\u72b6\u6001\u5bc4\u5b58\u5668\uff09; \u6307\u9488\u53ef\u4ee5\u662f volatile.","title":"volatile"},{"location":"CPP/Complementary/#extern-c","text":"C++\u4f7f\u7528\u94fe\u63a5\u6307\u793a\u6307\u51fa\u4efb\u610f\u975eC++\u51fd\u6570\u4f7f\u7528\u7684\u8bed\u8a00 //\u5355\u8bed\u53e5\u94fe\u63a5\u6307\u793a\uff0c extern \"C\" size_t strlen(const char*); //\u590d\u5408\u8bed\u53e5\u94fe\u63a5\u6307\u793a extern \"C\"{ #include <string.h> //\u6b64\u65f6\u8ba4\u4e3a\u8be5\u5934\u6587\u4ef6\u5305\u542b\u7684\u6240\u6709\u51fd\u6570\u90fd\u662f\u7531C\u8bed\u8a00\u7f16\u5199\u7684 int strcmp(const char*); } //\u6307\u5411C\u51fd\u6570\u7684\u6307\u9488\u4e0e\u6307\u5411C++\u51fd\u6570\u7684\u6307\u9488\u662f\u4e0d\u540c\u7684 extern \"C\" void(*pf)(int); //\u4f7f\u7528pf\u8c03\u7528\u51fd\u6570\u65f6\uff0c\u8ba4\u4e3a\u8c03\u7528\u7684\u662f\u4e00\u4e2aC\u51fd\u6570\uff0c\u4e14\u4e0d\u80fd\u7528\u6765\u6307\u5411\u4e00\u4e2aC++\u51fd\u6570 //\u6307\u5411C++\u51fd\u6570\u7684\u6307\u9488\u548c\u6307\u5411C\u51fd\u6570\u7684\u6307\u9488\u4e0d\u80fd\u4e92\u76f8\u8f6c\u6362 //\u94fe\u63a5\u6307\u793a\u5bf9\u6574\u4e2a\u58f0\u660e\u6709\u6548 // f1\u662f\u4e00\u4e2aC\u51fd\u6570\uff0c\u63a5\u6536\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u53c2\u6570\uff0c\u4e14\u8be5\u51fd\u6570\u6307\u9488\u6307\u5411\u7684\u5fc5\u987b\u662f\u4e00\u4e2aC\u51fd\u6570 extern \"C\" void fun(void(*)(int)); \u2003C\u8bed\u8a00\u4e0d\u652f\u6301\u51fd\u6570\u91cd\u8f7d\uff0c\u56e0\u6b64\u4e00\u4e2aC\u94fe\u63a5\u6307\u793a\u53ea\u80fd\u7528\u6765\u8bf4\u660e\u91cd\u8f7d\u51fd\u6570\u4e2d\u7684\u67d0\u4e00\u4e2a\u3002","title":"\u94fe\u63a5\u6307\u793a:extern C"},{"location":"CPP/Complementary/#_4","text":"1) \u6570\u636e\u7c7b\u578b\u81ea\u8eab\u7684\u5bf9\u9f50\u503c\uff1achar\u578b\u6570\u636e\u81ea\u8eab\u5bf9\u9f50\u503c\u4e3a1\u5b57\u8282\uff0cshort\u578b\u6570\u636e\u4e3a2\u5b57\u8282\uff0cint/float\u578b\u4e3a4\u5b57\u8282\uff0cdouble\u578b\u4e3a8\u5b57\u8282\u3002 2) \u7ed3\u6784\u4f53\u6216\u7c7b\u7684\u81ea\u8eab\u5bf9\u9f50\u503c\uff1a\u5176\u6210\u5458\u4e2d\u81ea\u8eab\u5bf9\u9f50\u503c\u6700\u5927\u7684\u90a3\u4e2a\u503c\u3002 3) \u6307\u5b9a\u5bf9\u9f50\u503c\uff1a#pragma pack (value)\u65f6\u7684\u6307\u5b9a\u5bf9\u9f50\u503cvalue\u3002 4) \u6570\u636e\u6210\u5458\u3001\u7ed3\u6784\u4f53\u548c\u7c7b\u7684\u6709\u6548\u5bf9\u9f50\u503c\uff1a\u81ea\u8eab\u5bf9\u9f50\u503c\u548c\u6307\u5b9a\u5bf9\u9f50\u503c\u4e2d\u8f83\u5c0f\u8005\uff0c\u5373\u6709\u6548\u5bf9\u9f50\u503c=min{\u81ea\u8eab\u5bf9\u9f50\u503c\uff0c\u5f53\u524d\u6307\u5b9a\u7684pack\u503c}\u3002 Class A{int i; char c;} sizeof(A) = 4+4=8; Class B{int i; char c; char c2; double d;} sizeof(B) = 8+8=16; Class C{int i; char c; char c2; int i2;} sizeof(C) = 4+4+4=12; // \u4e24\u4e2achar\u5171\u5360\u75282\u4e2a\u5b57\u8282\uff0c\u5bf9\u9f50\u540e\uff0c\u5360\u75284\u4e2a\u5b57\u8282 Class D {int i; char c2; int i2; char c;} sizeof(D)=4+4+4+4=16;","title":"\u5b57\u8282\u5bf9\u9f50"},{"location":"CPP/Complementary/#_5","text":"\u7528\u6765\u58f0\u660econstexpr\u65f6\u7528\u5230\u7684\u7c7b\u578b\uff1b \u7b97\u672f\u7c7b\u578b\u3001\u5f15\u7528\u3001\u6307\u9488\u548c\u5b57\u9762\u503c\u5e38\u91cf\u7c7b\u90fd\u5c5e\u4e8e\u5b57\u9762\u503c\u7c7b\u578b \uff0c\u81ea\u5b9a\u4e49\u7684\u7c7b\u3001IO\u5e93\u3001string\u7c7b\u578b\u90fd\u4e0d\u5c5e\u4e8e\u5b57\u9762\u503c\u7c7b\u578b\uff0c\u4e5f\u5c31\u4e0d\u80fd\u88ab\u5b9a\u4e49\u4e3aconstexpr\u3002","title":"\u5b57\u9762\u503c\u7c7b\u578b"},{"location":"CPP/Complementary/#using","text":"using-directives for namespaces and using-declarations for namespace members. using namespace std; using std::string; \u2003\u2003\u5934\u6587\u4ef6\u5982\u679c\u5728\u5176\u9876\u5c42\u4f5c\u7528\u57df\u4e2d\u542b\u6709\u6b64\u7c7b\u8bf4\u660e\uff0c\u5219\u4f1a\u5c06\u76f8\u5e94\u7684\u547d\u540d\u7a7a\u95f4\u6216name\u6ce8\u5165\u5230\u6240\u6709\u5305\u542b\u4e86\u8be5\u5934\u6587\u4ef6\u7684\u6587\u4ef6\u4e2d\u3002 using-declarations for class members \u2003\u5728\u6d3e\u751f\u7c7b\u5185\u90e8\u4f7f\u7528using\u8bf4\u660e\uff0c\u53ef\u4ee5\u5c06\u5176\u76f4\u63a5\u6216\u95f4\u63a5\u57fa\u7c7b\u4e2d\u7684 \u4efb\u4f55\u53ef\u8bbf\u95ee\u6210\u5458 \u6807\u8bb0\u51fa\u6765\uff0c using\u58f0\u660e\u8bed\u53e5\u4e2d\u540d\u5b57\u7684\u8bbf\u95ee\u6743\u9650\u7531\u8be5using\u58f0\u660e\u8bed\u53e5\u524d\u7684\u8bbf\u95ee\u8bf4\u660e\u7b26\u51b3\u5b9a\uff0c\u4e0e\u6d3e\u751f\u8bbf\u95ee\u8bf4\u660e\u7b26\u65e0\u5173\u3002 type alias and alias template declaration // type alias using func = void(*)(int, int); // \u7b49\u4ef7\u4e8e typedef void(*func)(int, int); template<typename T> class C{ using value_type=T; } // alias template template<class CharT> using myString=std::basic_string<Chart, std::char_traits<CharT>>","title":"using"},{"location":"CPP/Complementary/#_6","text":"namespace(\u547d\u540d\u7a7a\u95f4)\uff1a\u5373\u53ef\u5b9a\u4e49\u5728\u5168\u5c40\u4f5c\u7528\u57df\u5185\uff0c\u4e5f\u53ef\u5b9a\u4e49\u5728\u5176\u4ed6\u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u4f46\u4e0d\u80fd\u5b9a\u4e49\u5728\u51fd\u6570\u6216\u7c7b\u7684\u5185\u90e8\u3002\u547d\u540d\u7a7a\u95f4\u4f5c\u7528\u57df\u540e\u65e0\u987b\u5206\u53f7\u3002 namespace\u7684\u522b\u540d\uff1a namespace primer = cplusplus_primer; primer\u662f\u547d\u540d\u7a7a\u95f4cplusplus_primer\u7684\u522b\u540d\uff0c\u4e24\u8005\u7b49\u4ef7\u3002\u4e14\u53ef\u4ee5\u5b58\u5728\u591a\u4e2a\u522b\u540d\u3002 \u5185\u8054\u547d\u540d\u7a7a\u95f4\uff1ac++11\u65b0\u5f15\u5165\u7684\u4e00\u79cd\u5d4c\u5957\u547d\u540d\u7a7a\u95f4\uff0c\u5185\u8054\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u540d\u5b57\u53ef\u4ee5\u88ab\u5916\u5c42\u547d\u540d\u7a7a\u95f4\u76f4\u63a5\u4f7f\u7528\u3002 \u672a\u547d\u540d\u7684\u547d\u540d\u7a7a\u95f4\uff1a\u4ec5\u5728\u7279\u5b9a\u6587\u4ef6\u5185\u90e8\u6709\u6548\uff0c\u4f5c\u7528\u8303\u56f4\u4e0d\u4f1a\u8de8\u8d8a\u591a\u4e2a\u4e0d\u540c\u6587\u4ef6\uff1b \u5176\u4e2d\u5b9a\u4e49\u7684\u540d\u5b57\u7684\u4f5c\u7528\u57df\u4e0e\u8be5\u547d\u540d\u7a7a\u95f4\u6240\u5728\u7684\u4f5c\u7528\u57df\u76f8\u540c\uff0c\u56e0\u6b64\u672a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u540d\u5b57\u8981\u4e0e\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u7684\u540d\u5b57\u6709\u6240\u533a\u522b\u3002 \u91cd\u8f7d\u4e0e\u547d\u540d\u7a7a\u95f4\uff1a\u4e00\u4e2ausing\u8bf4\u660e\u5305\u542b\u4e86\u8be5\u51fd\u6570\u7684\u6240\u6709\u7248\u672c\uff0c\u5e76\u4e14\u4f1a\u91cd\u8f7d\u8be5\u58f0\u660e\u8bed\u53e5\u6240\u5c5e\u4f5c\u7528\u57df\u4e2d\u5df2\u6709\u7684\u5176\u4ed6\u540c\u540d\u51fd\u6570\uff1b\u82e5\u6240\u5c5e\u4f5c\u7528\u57df\u4e2d\u5df2\u7ecf\u6709\u4e00\u4e2a\u51fd\u6570\u4e0e\u65b0\u5f15\u5165\u7684\u51fd\u6570\u540c\u540d\u4e14\u5f62\u53c2\u5217\u8868\u76f8\u540c\uff0c\u5219\u8be5using\u58f0\u660e\u5c06\u5f15\u53d1\u9519\u8bef\u3002 \u5bf9\u4e8eusing\u6307\u793a\u6765\u8bf4\uff0c\u5f15\u5165\u4e00\u4e2a\u4e0e\u5df2\u6709\u51fd\u6570\u5f62\u53c2\u5217\u8868\u5b8c\u5168\u76f8\u540c\u7684\u51fd\u6570\u5e76\u4e0d\u4f1a\u4ea7\u751f\u9519\u8bef\u3002","title":"\u547d\u540d\u7a7a\u95f4"},{"location":"CPP/Complementary/#tips","text":"\u5546\u53d6\u6574 \u2003c++11\u6807\u51c6\u89c4\u5b9a\u5546\u4e00\u5f8b\u54110\u53d6\u6574\uff1bm%n\u5982\u679c\u4e0d\u7b49\u4e8e0\uff0c\u5219\u7b26\u53f7\u4e0em\u76f8\u540c\uff0c\u5373\u9664\u4e86-m\u6ea2\u51fa\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\uff08-m\uff09%n \u7b49\u4e8e-\uff08m%n\uff09\uff0cm%(-n)\u7b49\u4e8em%n\u3002 \u4ea4\u6362\u4e24\u4e2aint\u53d8\u91cf a=(b^=a^=b)^a; \u524d\u7f6e/\u540e\u7f6e \u81ea\u589e/\u81ea\u51cf\u8fd0\u7b97\u53ca\u89e3\u5f15\u7528 * iter++ \u7b49\u4ef7\u4e8e *(iter++); //\u540e\u81ea\u589e\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7\u9ad8\u4e8e\u89e3\u5f15\u7528\u7b26\uff0c\u4f46\u7531\u4e8e\u540e\u7f6e\u8fd0\u7b97\u7b26\u8fd4\u56de\u7684iter\u539f\u503c\u7684\u526f\u672c\uff0c\u56e0\u6b64 auto a = iter++; auto b = iter , \u5176\u4e2da==b\uff0c\u4f46\u524d\u8005\u6b64\u65f6iter\u5df2\u7ecf\u6307\u5411\u4e0b\u4e00\u4f4d\u5143\u7d20\u3002 \u800c\u524d\u7f6e\u8fd0\u7b97\u7b26\u5219\u8fd4\u56de\u7684\u662f\u6539\u53d8\u540e\u7684iter. object based: \u9762\u5bf9\u7684\u662f\u5355\u4e00\u7684class\u7684\u8bbe\u8ba1; object oriented: \u9762\u5bf9\u7684\u662f\u591a\u91cdclass\u4e4b\u95f4\u7684\u8bbe\u8ba1, classes \u548c classes\u4e4b\u95f4\u7684\u5173\u7cfb\u3002","title":"tips"},{"location":"CPP/EffectiveCPPRule/","text":"\u6761\u6b3e base 1\u3001View C++ as a federations of lanuages 2\u3001Prefer consts, enums and inlines to #define \u5bf9\u4e8e\u5355\u7eaf\u5e38\u91cf\u5bf9\u8c61\uff0c\u6700\u540e\u4ee5const\u5bf9\u8c61\u6216enums\u66ff\u6362#define \u5bf9\u4e8e\u5f62\u4f3c\u51fd\u6570\u7684\u5b8f\uff0c\u6700\u597d\u7528inline\u51fd\u6570\u66ff\u6362#define 3\u3001Use const whenever possible \u2003\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5e38\u91cf\u503c\uff0c\u907f\u514d\u8bf8\u5982\"a*b=c\"\u8fd9\u79cd\u539f\u610f\u662f\u5224\u65ad\u76f8\u7b49\uff0c\u800c\u9519\u5199\u6210\u8d4b\u503c\u7684\u64cd\u4f5c\uff0c\u8fd9\u79cd\u9519\u8bef\u5728\u7f16\u8bd1\u5668\u5c31\u4f1a\u68c0\u6d4b\u51fa\u6765\u3002 \u2003\u67d0\u4e9b\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5e38\u91cf\u5f15\u7528\uff0c\u4e00\u6765\u53ef\u4ee5\u63d0\u4f9b\u4f20\u9012\u6548\u7387\uff0c\u4e8c\u6765\u53ef\u4ee5\u907f\u514d\u901a\u8fc7\u8fd4\u56de\u7684\u5f15\u7528\u4fee\u6539\u5b9e\u9645\u7684\u5bf9\u8c61\u3002 4\u3001Make sure that objects are initialized before they're used. 1>. \u624b\u5de5\u521d\u59cb\u5316\u5185\u7f6e\u578bnon-member\u5bf9\u8c61\u3002 2>. \u4f7f\u7528\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\u6765\u521d\u59cb\u5316\u5bf9\u8c61\u6240\u6709\u6210\u5206\u3002 3>. \u7531\u4e8eC++ \u5bf9\u4e8e\u201c\u5b9a\u4e49\u5728\u4e0d\u540c\u7f16\u8bd1\u5355\u5143\u5185\u7684non-local static\u5bf9\u8c61\u201d\u7684\u521d\u59cb\u5316\u6b21\u5e8f\u5e76\u65e0\u660e\u786e\u5b9a\u4e49 \uff0c \u56e0\u6b64\u53ef\u4ee5\u5c06non-local static\u5bf9\u8c61\u7684\u58f0\u660e\u653e\u7f6e\u5728\u51fd\u6570\u5185\uff0c\u8fd9\u6837\u5176\u5c31\u53d8\u6210\u4e86local static\u5bf9\u8c61\uff0c \u800c\u8be5\u51fd\u6570\u53c8\u8fd4\u56de\u8be5\u5bf9\u8c61\u7684reference\u3002\u56e0\u4e3aC++\u4fdd\u8bc1, \u51fd\u6570\u5185\u7684local static\u5bf9\u8c61\u4f1a\u5728\u201c\u8be5\u51fd\u6570\u8c03\u7528\u671f\u95f4\uff0c\u9996\u6b21\u9047\u5230\u8be5\u5bf9\u8c61\u4e4b\u5b9a\u4e49\u5f0f\u201d\u65f6\u88ab\u521d\u59cb\u5316 \u3002 \u901a\u8fc7\u8c03\u7528\u8be5\u51fd\u6570\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u83b7\u5f97\u4e00\u4e2a\u6307\u5411\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u5bf9\u8c61\u7684reference\u3002 ctor\\dtor\\assignment 5\u3001\u4e86\u89e3C++\u9ed8\u9ed8\u7f16\u5199\u5e76\u8c03\u7528\u4e86\u54ea\u4e9b\u51fd\u6570 \u2003\u4e00\u822c\u60c5\u51b5\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u4e3aclass\u521b\u5efa\u9ed8\u8ba4constructor\u3001copy-constructor\u3001copy-assignment\u4ee5\u53cadestructor\uff0c \u4f46\u5f53class\u5185\u542b\u6709reference/pointer/const\u6210\u5458\uff0c\u4ee5\u53cabase classes\u5c06copy-assignment\u8bbe\u7f6e\u4e3aprivate\u65f6\uff0c\u65e0\u6cd5\u521b\u5efa\u9ed8\u8ba4copy-assignment\u3002 6\u3001\u82e5\u4e0d\u60f3\u4f7f\u7528\u7f16\u8bd1\u5668\u81ea\u52a8\u751f\u6210\u7684\u6784\u9020\u51fd\u6570\uff0c\u5c31\u5e94\u8be5\u660e\u786e\u62d2\u7edd \u2003\u4f7f\u7528=delete\uff1b\u6216\u8005\u5c06\u5176\u58f0\u660e\u4e3aprivate, \u4e0d\u8fc7\u8fd9\u6837\u5176member\u548cfriend\u4ecd\u7136\u80fd\u8bbf\u95ee\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2abase class\uff0c\u5728\u5176\u4e2d\u5c06\u8fd9\u4e9b\u51fd\u6570\u58f0\u660e\u4e3aprivate\uff0c\u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f\u8fd9\u4e2abase class\uff0c\u5219\u51fa\u73b0\u8bd5\u56fe\u8bbf\u95ee\u8fd9\u4e9b\u51fd\u6570\u65f6\uff0c\u4f1a\u5728\u7f16\u8bd1\u5668\u4ef6\u62a5\u9519\u3002 7\u3001\u4e3a\u591a\u6001\u57fa\u7c7b\u58f0\u660evirtual\u6790\u6784\u51fd\u6570 \u2003\u5982\u679c\u4e00\u4e2aclass \u5305\u542b\u4efb\u4f55\u7684virtual \u51fd\u6570\uff0c\u5219\u5e94\u8be5\u6709\u4e00\u4e2avirtual \u6790\u6784\u51fd\u6570\u3002 \u2003\u8fd9\u4e2a\u89c4\u5219\u53ea\u9002\u7528\u4e8epolymorphic base classes\u8eab\u4e0a\uff0c\u8fd9\u79cdclass\u8bbe\u8ba1\u7684\u76ee\u7684\u662f\u4e3a\u4e86 \u901a\u8fc7base class\u63a5\u53e3\u6765\u5904\u7406derived class\u5bf9\u8c61 \uff0c\u5426\u5219\u6839\u636e\u9759\u6001\u7ed1\u5b9a\uff0c\u8c03\u7528\u7684\u5c06\u662fbase class\u7684\u6790\u6784\u51fd\u6570\uff0c\u800c\u975e\u6307\u9488\u5b9e\u9645\u6307\u5411\u7684derived clas; \u81f3\u4e8e\u90a3\u4e9b\u4e0d\u662f\u4e3a\u4e86\u591a\u6001\u76ee\u7684\u8bbe\u8ba1\u7684base class\uff0c\u5219\u65e0\u9700\u865a\u6790\u6784\u51fd\u6570\u3002 8\u3001\u4e0d\u8981\u8ba9\u5f02\u5e38\u9003\u79bb\u6790\u6784\u51fd\u6570 9\u3001\u51b3\u4e0d\u5728constructor\u548cdestructor\u5185\u8c03\u7528virtual\u51fd\u6570 10\u3001\u4ee4operator=\u8fd4\u56de\u4e00\u4e2a reference to *this \u2003\u4e3a\u4e86\u5b9e\u73b0\u8fde\u9501\u8d4b\u503c\uff0c\u4e14\u9002\u7528\u4e8e\u6240\u6709\u8d4b\u503c\u76f8\u5173\u8fd0\u7b97 11\u3001\u5728operatot=\u4e2d\u5904\u7406\u81ea\u6211\u8d4b\u503c //identity test Object& Object::operator=(const Object& rhs){ if(this==&rhs)return *this; delete p; // delete pointer member p = new T(*rhs.p); return *this; } //\u8003\u8651\u5f02\u5e38\u5b89\u5168\u548c\u81ea\u6211\u8d4b\u503c\u5b89\u5168 Object& Object::operator=(const Object& rhs){ T* tmp=p; p = new T(*rhs.p); delete tmp; // delete old pointer member; \u5982\u679cnew \u8fc7\u7a0b\u629b\u51fa\u5f02\u5e38\uff0c\u6b64\u65f6\u539f\u5148\u7684\u6307\u9488\u5c06\u4fdd\u6301\u539f\u72b6 return *this; } Object& Object::operator==(Object rhs){ //pass by value swap(rhs); //\u4ea4\u6362*this\u548crhs\u7684\u6570\u636e return *this; } 12\u3001Copy all parts of an object \u2003\u5f53\u4f60\u7f16\u5199\u4e00\u4e2acopying\u51fd\u6570(\u5305\u62eccopy ctor\u548ccopy-assignment)\u65f6\uff0c\u786e\u4fdd\u590d\u5236\u6240\u6709local\u6210\u5458\u53d8\u91cf\uff1b\u8c03\u7528base class\u76f8\u5e94copying\u51fd\u6570\u3002 \u2003\u53e6\u5916\u9700\u6ce8\u610f:\u4e0d\u5e94\u8be5\u8ba9copy assignment\u64cd\u4f5c\u7b26\u8c03\u7528copy ctor(\u8bd5\u56fe\u6784\u9020\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61)\uff0c\u53cd\u4e4b(\u8bd5\u56fe\u5bf9\u4e00\u4e2a\u5c1a\u672a\u6784\u9020\u7684\u5bf9\u8c61\u8d4b\u503c)\u4ea6\u5982\u6b64\uff1b\u6d88\u9664\u4e24\u8005\u91cd\u590d\u4ee3\u7801\u7684\u505a\u6cd5\uff0c\u662f\u5c06\u8fd9\u90e8\u5206\u4ee3\u7801\u5c01\u88c5\u5230\u5176\u4ed6\u51fd\u6570\uff0c\u88ab\u4e24\u8005\u8c03\u7528\u3002 resource management 13\u3001\u4ee5\u5bf9\u8c61\u7ba1\u7406\u8d44\u6e90 \u2003\u5c06\u8d44\u6e90(\u6307\u9488\u7c7b\u578b)\u653e\u8fdb\u5bf9\u8c61\u5185\uff0c\u5f53\u5bf9\u8c61\u88ab\u9500\u6bc1\u65f6\uff0c\u6790\u6784\u51fd\u6570\u4f1a\u81ea\u52a8\u91ca\u653e\u8d44\u6e90(\u901a\u5e38\u4f9d\u8d56\u4e8e\u667a\u80fd\u6307\u9488)\u3002 \u2003\u83b7\u5f97\u8d44\u6e90\u540e\u7acb\u523b\u653e\u5165\u7ba1\u7406\u5bf9\u8c61\uff0c(\u4f5c\u4e3a\u6784\u9020\u51fd\u6570\u53c2\u6570\uff0c\u7528\u4ee5\u521d\u59cb\u5316);( RAII:Resource Acquistion Is Initialization) \u2003\u7ba1\u7406\u5bf9\u8c61\u8fd0\u7528\u6790\u6784\u51fd\u6570\u786e\u4fdd\u8d44\u6e90\u5f97\u5230\u91ca\u653e; \u2003\u4e00\u4e2a\u5408\u9002\u7684\u4f8b\u5b50\u5c31\u662f \u901a\u8fc7\u5bf9\u8c61\u7ba1\u7406\u9501\uff0c\u8fd9\u6837\u5f53\u4e2d\u9014\u5f02\u5e38\u9000\u51fa\u65f6\uff0c\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u4f1a\u91ca\u653e\u9501 \u3002 14\u3001\u5728\u8d44\u6e90\u7ba1\u7406\u7c7b\u4e2d\u5c0f\u5fc3copying\u884c\u4e3a \u5bf9\u4e8e\u975eheap-based(heap-based\u5373\u901a\u8fc7new\u83b7\u5f97\u7684\u6307\u9488)\u7684\u8d44\u6e90\uff0c\u667a\u80fd\u6307\u9488\u4e0d\u9002\u5408\u4f5c\u4e3aresource handler\u3002\u800c\u5f53RAII\u5bf9\u8c61\u53d1\u751f\u590d\u5236\u65f6\uff0c\u4e00\u822c\u6709\u4e24\u79cd\u53ef\u80fd:\u7981\u6b62\u590d\u5236\u6216\u8005\u5bf9\u5e95\u5c42\u8d44\u6e90\u91c7\u7528\u5f15\u7528\u8ba1\u6570\u6cd5(shared_ptr\u91c7\u7528\u7684\u505a\u6cd5)\uff0c\u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u91c7\u7528\u6df1\u62f7\u8d1d\u6216\u8005\u8f6c\u79fb\u5e95\u90e8\u5bf9\u8c61\u6240\u6709\u6743(auto_ptr\u91c7\u7528\u7684\u505a\u6cd5\uff0c\u8d44\u6e90\u7684\u6240\u6709\u6743\u4ece\u590d\u5236\u7269\u8f6c\u79fb\u5230\u76ee\u6807\u7269) 15\u3001\u5728\u8d44\u6e90\u7ba1\u7406\u7c7b\u4e2d\u63d0\u4f9b\u5bf9\u539f\u59cb\u8d44\u6e90\u7684\u8bbf\u95ee \u2003\u6bcf\u4e00\u4e2aRAII class\u5e94\u8be5\u63d0\u4f9b\u4e00\u4e2a\u53d6\u5f97\u5176\u6240\u7ba1\u7406\u4e4b\u8d44\u6e90\u7684\u65b9\u6cd5\uff1b \u2003\u5bf9\u539f\u59cb\u8d44\u6e90\u7684\u8bbf\u95ee\u53ef\u80fd\u7ecf\u7531\u663e\u793a\u8f6c\u6362(\u6bd4\u8f83\u5b89\u5168)\u6216\u8005\u9690\u5f0f\u8f6c\u6362(\u65b9\u4fbf\u5ba2\u6237) 16\u3001\u6210\u5bf9\u4f7f\u7528new\u548cdelete\u65f6\u8981\u91c7\u53d6\u76f8\u540c\u5f62\u5f0f 17\u3001\u4ee5\u72ec\u7acb\u8bed\u53e5\u5c06newed\u5bf9\u8c61\u7f6e\u5165\u667a\u80fd\u6307\u9488 int priority(); void process(shared_ptr<Widget> pw, int pri); //\u53c2\u6570\u4f20\u9012\u524d\u6709\u4e09\u4e2a\u6b65\u9aa4\uff0c\u8c03\u7528priority()\uff0cnew Widget\uff0c\u6784\u5efashaerd_ptr //new\u64cd\u4f5c\u4e00\u5b9a\u53d1\u751f\u5728\u6784\u5efashared_ptr\u4e4b\u524d\uff0c\u4f46priority()\u8c03\u7528\u53ef\u80fd\u53d1\u751f\u5728\u4e24\u8005\u4e2d\u95f4\uff0c //\u5982\u679c\u6b64\u65f6\u53d1\u9001\u5f02\u5e38\uff0c\u5219new\u5f97\u5230\u7684\u8d44\u6e90\u5c06\u4f1a\u6cc4\u6f0f process(shared_ptr<Widget>(new Widget), priority()); //\u56e0\u6b64\u91c7\u7528\u72ec\u7acb\u8bed\u53e5\u5c06newd\u5bf9\u8c61\u7f6e\u5165\u667a\u80fd\u6307\u9488 shared_ptr<Widget> pw(new Widget); process(pw, priority); design and declarations 18\u3001\u8ba9\u63a5\u53e3\u5bb9\u6613\u88ab\u6b63\u786e\u4f7f\u7528\uff0c\u4e0d\u6613\u88ab\u8bef\u7528 shared_ptr\u652f\u6301\u5b9a\u5236\u5220\u9664\u5668\uff0c\u53ef\u9632\u8303cross-DLL problem(object\u5728\u4e00\u4e2a\u52a8\u6001\u94fe\u63a5\u5e93DLL\u4e2d\u88abnew\u521b\u5efa\uff0c\u5374\u5728\u53e6\u4e00\u4e2aDLL\u5185\u88abdelete\u9500\u6bc1\uff0c\u5728\u8bb8\u591a\u5e73\u53f0\u4e0a\u8fd9\u4f1a\u5bfc\u81f4\u8fd0\u884c\u671f\u9519\u8bef\uff1b\u800cshare_ptr\u5305\u542b\u7f3a\u7701\u7684deletor, \u5176\u6765\u81ea\u521b\u5efa\u65f6\u7684DLL\uff0c\u56e0\u6b64\u5176\u8c03\u7528\u7684\u662f\u539f\u6765\u7684DLL\u4e2d\u7684deletor) 19\u3001\u8bbe\u8ba1class\u72b9\u5982\u8bbe\u8ba1type 20\u3001Prefer pass-by-reference-to-const to pass-by-value \u2003\u524d\u8005\u6548\u7387\u66f4\u9ad8\uff1b \u2003\u4e14\u5f53\u51fd\u6570\u7c7b\u578b\u662f\u4e00\u4e2a\u57fa\u7c7b\u7c7b\u578b\uff0c\u5982\u679c\u4f20\u9012\u7ed9\u5176\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u5219\u4f1a\u91cd\u65b0\u6784\u9020\uff0c\u4e22\u5931\u6d3e\u751f\u7c7b\u7684\u7279\u5316\u4fe1\u606f(\u5373\u5207\u5272\u95ee\u9898)\uff0c\u9009\u62e9pass-by-reference\u4f20\u9012\u53c2\u6570\u5219\u53ef\u4ee5\u907f\u514dsliceing(\u4e5f\u5c31\u662f\u552f\u6709\u4ee5\u57fa\u7c7b\u7684\u6307\u9488\u548c\u5f15\u7528\u624d\u80fd\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u6982\u5ff5)\u3002 \u2003 \u5bf9\u4e8e\u5185\u7f6e\u7c7b\u578b\u548cSTL\u7684\u8fed\u4ee3\u5668\u4ee5\u53ca\u51fd\u6570\u5bf9\u8c61\u800c\u8a00\uff0cpass-by-value\u5f80\u5f80\u66f4\u9002\u5f53 \u3002 21\u3001\u5fc5\u987b\u8fd4\u56de\u5bf9\u8c61\u65f6\uff0c\u4e0d\u8981\u8bd5\u56fe\u8fd4\u56dereference \u2003\u4e0d\u5141\u8bb8\u51fd\u6570\u8fd4\u56de\u4e00\u4e2areference\u6216pointer\u6307\u5411local object\u3002(local object\u5728\u6808\u7a7a\u95f4\u4e2d\u521b\u5efa\uff0c\u51fd\u6570\u8fd4\u56de\u65f6\u4f1a\u9500\u6bc1\u6808\u7a7a\u95f4) \u2003\u5982\u679c\u5728\u51fd\u6570\u5185\u901a\u8fc7new\u5728heap\u5185\u521b\u5efa\u4e00\u4e2aobject\uff0c\u867d\u7136\u53ef\u4ee5\u8fd4\u56de\u5176\u5f15\u7528\uff0c\u4f46\u5374\u4e0d\u6613\u88ab\u4eba\u53d1\u89c9\u9700\u8981delete\uff0c\u4ece\u800c\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\uff0c\u8fd9\u79cd\u505a\u6cd5\u4e5f\u8981\u907f\u514d\u3002 22\u3001\u5c06\u6210\u5458\u53d8\u91cf\u58f0\u660e\u4e3aprivate \u2003\u4ece\u5c01\u88c5\u89d2\u5ea6\u770b\uff0c\u53ea\u6709\u4e24\u79cd\u8bbf\u95ee\u6743\u9650:private(\u63d0\u4f9b\u5c01\u88c5)\u548c\u5176\u4ed6(\u4e0d\u63d0\u4f9b\u5c01\u88c5\uff0cprotected\u5e76\u4e0d\u6bd4public\u66f4\u5177\u5c01\u88c5\u6027\uff0c\u5176\u4f1a\u5f71\u54cdderived class)\u3002 \u2003\u5c01\u88c5\u6210\u5458\u53d8\u91cf\uff0c\u53ef\u4ee5\u786e\u4fddclass\u7684\u7ea6\u675f\u6761\u4ef6\u603b\u662f\u5f97\u5230\u7ef4\u62a4\uff0c\u53ea\u6709\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u5f71\u54cd\u5b83\u4eec\u3002 \u2003\u88ab\u5c01\u88c5\u7684\u4e1c\u897f\u610f\u5473\u7740\u4fee\u6539\u8fd9\u90e8\u5206\u4e5f\u66f4\u5bb9\u6613\uff0c\u56e0\u4e3a\u5916\u754c\u53ea\u80fd\u901a\u8fc7\u6709\u9650\u7684\u51fd\u6570\u6765\u8bbf\u95ee\uff1b\u800c\u90a3\u4e9b\u6ca1\u6709\u88ab\u5c01\u88c5\u7684\u4e1c\u897f\uff0c\u5916\u754c\u53ef\u4ee5\u968f\u610f\u8bbf\u95ee\u3001\u4fee\u6539\uff0c\u5bf9\u4e8e\u8bbe\u8ba1\u8005\u6765\u8bf4\uff0c\u4e0d\u80fd\u8f7b\u6613\u4fee\u6539\uff0c\u5426\u5219\u4f1a\u9020\u6210\u65e7\u7248\u672c\u4e0d\u80fd\u517c\u5bb9\u3002 23\u3001Prefer non-member non-friend functions to member functions \u2003\u57fa\u4e8e22\u5219\u7b2c\u4e09\u70b9\u7684\u539f\u56e0\uff0c\u5728\u5b9e\u73b0\u76f8\u540c\u529f\u80fd\u7684\u524d\u63d0\u4e0b\uff0cnon-member non-friend funtion\u76f8\u6bd4member function\u6709\u66f4\u5927\u7684\u5c01\u88c5\u6027\uff0c\u5b83\u65e0\u6cd5\u8bbf\u95eeclass\u5185private\u90e8\u5206\uff0c\u6545\u524d\u8005\u4e5f\u66f4\u53d7\u8bbe\u8ba1\u8005\u6b22\u8fce\u3002 24\u3001\u82e5\u6240\u6709\u53c2\u6570\u7686\u987b\u7c7b\u578b\u8f6c\u6362\uff0c\u8bf7\u4e3a\u6b64\u91c7\u7528non-member function; \u2003\u5982\u679c\u9700\u8981\u4e3a\u67d0\u4e2a\u51fd\u6570\u7684\u6240\u6709\u53c2\u6570(\u5305\u62ecthis\u6307\u9488\u6240\u6307\u7684\u9690\u55bb\u53c2\u6570)\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c\u5219\u8fd9\u4e2a\u51fd\u6570\u6700\u597d\u662fnon-member function\u3002 25\u3001\u8003\u8651\u5199\u51fa\u4e00\u4e2a\u4e0d\u629b\u5f02\u5e38\u7684swap\u51fd\u6570 \u2003std\u63d0\u4f9b\u7684\u7f3a\u7701swap\u51fd\u6570\uff0c\u5728\u5904\u7406\u5305\u542b\u6307\u9488\u6210\u5458\u7684\u5bf9\u8c61\u65f6\uff0c\u8fd9\u79cd\u9ed8\u8ba4\u64cd\u4f5c\u5c06\u663e\u5f97\u5197\u4f59 \u2003\u5bf9\u4e8e\u5185\u542b\u6307\u9488\u6210\u5458\u7684\u7c7b\uff0c\u53ef\u4ee5\u5982\u4e0b\u5f62\u5f0f\uff0c\u8bbe\u8ba1swap\u51fd\u6570\u3002 implementation 26\u3001\u5c3d\u53ef\u80fd\u5ef6\u540e\u53d8\u91cf\u5b9a\u4e49\u5f0f\u7684\u51fa\u73b0\u65f6\u95f4 \u2003\u5ef6\u540e\u53d8\u91cf\u7684\u5b9a\u4e49\uff0c\u76f4\u5230\u975e\u5f97\u4f7f\u7528\u53d8\u91cf\u7684\u524d\u4e00\u523b\u4e3a\u6b62\uff0c\u751a\u81f3\u8fdb\u4e00\u6b65\u5ef6\u8fdf\u5230\u8fd9\u4efd\u5b9a\u4e49\u80fd\u591f\u83b7\u5f97\u521d\u503c\u5b9e\u53c2\u4e3a\u6b62\uff1b\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86 \u907f\u514d\u6784\u9020\u548c\u6790\u6784\u975e\u5fc5\u8981\u5bf9\u8c61\uff0c\u8fd8\u53ef\u4ee5\u907f\u514d\u65e0\u610f\u4e49\u7684default\u6784\u9020\u884c\u4e3a \u3002 \u2003\u5bf9\u4e8e\u53ea\u5728\u5faa\u73af\u4f53\u5185\u4f7f\u7528\u7684\u53d8\u91cf\uff0c\u5982\u679c\u5176\u7c7b\u578b\u7684\u6784\u9020\u548c\u6790\u6784\u6210\u672c \u5927\u4e8e \u8d4b\u503c\u6210\u672c\uff0c\u5219\u5728\u5faa\u73af\u4f53\u5916\u5b9a\u4e49\uff0c\u53cd\u4e4b\u5728\u5faa\u73af\u5185\u5b9a\u4e49\u3002 27\u3001\u5c3d\u91cf\u5c11\u505a\u8f6c\u578b\u52a8\u4f5c 28\u3001\u907f\u514d\u8fd4\u56dehandles\u6307\u5411\u5bf9\u8c61\u5185\u90e8\u6210\u5206 \u2003\u907f\u514d\u8fd4\u56dehandles(\u5305\u62ecreference\u3001\u6307\u9488\u3001\u8fed\u4ee3\u5668)\u6307\u5411\u5bf9\u8c61\u5185\u90e8\uff0c\u56e0\u4e3a\u65e0\u8bba\u8fd9\u4e2ahandle\u662f\u5426\u6709const\uff0c\u4e5f\u4e0d\u8bba\u8fd4\u56de\u5176\u7684\u51fd\u6570\u662f\u5426\u4e3aconst\uff0c\u90fd\u6709\u53ef\u80fd \u9020\u6210handle\u6bd4\u5176\u6240\u6307\u5411\u5bf9\u8c61\u5bff\u547d\u66f4\u957f\u7684\u98ce\u9669 \uff0c\u4f8b\u5982\u6307\u5411\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\u7684\u5185\u90e8\uff0c\u800chandle\u5374\u88ab\u4fdd\u5b58\u4e3a\u957f\u671f\u5bf9\u8c61\u3002 \u2003\u4e0d\u8fc7\u5bf9\u4e8e\u4e00\u4e9b\u91cd\u8f7doperator[]\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u5f15\u7528\uff0c\u6765\u76f4\u63a5\u4fee\u6539\u5176\u5185\u90e8\u5bf9\u8c61\uff1b\u9664\u6b64\u4e4b\u5916\uff0c\u5e94\u8c28\u614e\u8fd4\u56de\u6307\u5411\u5bf9\u8c61\u5185\u90e8\u7684handles\u3002 29\u3001\u4e3a\u5f02\u5e38\u5b89\u5168\u800c\u52aa\u529b\u662f\u503c\u5f97\u7684 \u5f53\u5f02\u5e38\u88ab\u629b\u51fa\u65f6\uff0c\u5f02\u5e38\u5b89\u5168\u51fd\u6570\u5373\u4f7f\u53d1\u751f\u5f02\u5e38\u4e5f\u4e0d\u4f1a\u6cc4\u6f0f\u4efb\u4f55\u8d44\u6e90\u6216\u5141\u8bb8\u4efb\u4f55\u6570\u636e\u8d25\u574f\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u533a\u5206\u4e09\u79cd\u53ef\u80fd\u7684\u4fdd\u8bc1: \u57fa\u672c\u627f\u8bfa : \u5982\u679c\u5f02\u5e38\u88ab\u629b\u51fa\uff0c\u7a0b\u5e8f\u5185\u7684\u4efb\u4f55\u4e8b\u7269\u4ecd\u7136\u4fdd\u6301\u5728\u6709\u6548\u72b6\u6001\u4e0b\uff0c\u6ca1\u6709\u4efb\u4f55\u5bf9\u8c61\u6216\u8005\u6570\u636e\u7ed3\u6784\u4f1a\u56e0\u6b64\u800c\u8d25\u574f\uff1b\u4f46\u7a0b\u5e8f\u7684exact state\u4e0d\u53ef\u9884\u6599\u3002 \u5f3a\u70c8\u4fdd\u8bc1 \uff1a\u5982\u679c\u5f02\u5e38\u88ab\u629b\u51fa\uff0c\u7a0b\u5e8f\u72b6\u6001\u4e0d\u6539\u53d8\uff0c\u5373\u51fd\u6570\u6210\u529f\u5c31\u662f\u5b8c\u5168\u6210\u529f\uff1b\u51fd\u6570\u5931\u8d25\uff0c\u7a0b\u5e8f\u5c31\u56de\u590d\u5230\u8c03\u7528\u51fd\u6570\u4e4b\u524d\u7684\u72b6\u6001\u3002 \u2003\u901a\u5e38\u60c5\u51b5\uff0ccopy-and-swap\u7b56\u7565\u662f\u4e00\u79cd\u597d\u7684\u505a\u6cd5\uff1a\u4e3a\u6253\u7b97\u4fee\u6539\u7684\u5bf9\u8c61(\u539f\u4ef6)\u505a\u51fa\u4e00\u4efd\u526f\u672c\uff0c\u7136\u540e\u5728\u526f\u672c\u4e0a\u505a\u4e00\u5207\u4fee\u6539\u3002\u82e5\u4fee\u6539\u8fc7\u7a0b\u629b\u51fa\u5f02\u5e38\uff0c\u539f\u5bf9\u8c61\u4ecd\u4fdd\u6301\u672a\u6539\u53d8\u72b6\u6001\uff1b\u5f85\u6240\u6709\u4fee\u6539\u6210\u529f\u540e\uff0c\u518d\u5c06\u526f\u672c\u548c\u539f\u4ef6\u5728\u4e00\u4e2a\u4e0d\u629b\u51fa\u5f02\u5e38\u7684\u64cd\u4f5c\u4e2dswap\u3002 \u2003\u7531\u4e8e\u51fd\u6570\u63d0\u4f9b\u7684\u5f02\u5e38\u5b89\u5168\u4fdd\u8bc1\u53d6\u51b3\u4e8e\u5176\u6240\u8c03\u7528\u7684\u5404\u4e2a\u51fd\u6570\u4e2d\u5f02\u5e38\u5b89\u5168\u4fdd\u8bc1\u6700\u4f4e\u8005\uff0c\u56e0\u6b64\u5373\u4f7f\u91c7\u7528copy-and-swap\uff0c\u4f9d\u65e7\u65e0\u6cd5\u4fdd\u8bc1\u6574\u4e2a\u51fd\u6570\u6709\u5f3a\u70c8\u7684\u5f02\u5e38\u5b89\u5168\u6027\uff1b \u4e14\u505a\u51fa\u4e00\u4efd\u526f\u672c\u9700\u8981\u989d\u5916\u7684\u8017\u65f6\u548c\u7a7a\u95f4\u6d88\u8017\u3002 \u2003\u56e0\u6b64\u5f3a\u70c8\u4fdd\u8bc1\u5e76\u975e\u5bf9\u6240\u6709\u51fd\u6570\u90fd\u53ef\u5b9e\u73b0\u6216\u5177\u5907\u73b0\u5b9e\u610f\u4e49\u3002 nothrow \u4fdd\u8bc1 \uff1a\u627f\u8bfa\u7edd\u4e0d\u629b\u51fa\u5f02\u5e38\uff0c\u603b\u662f\u80fd\u5b8c\u6210\u5b83\u4eec\u539f\u5148\u627f\u8bfa\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u5185\u7f6e\u7c7b\u578b\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u63d0\u4f9bnothrow\u4fdd\u8bc1\u3002 30\u3001understanding the ins and outs of inlining 31\u3001\u5c06\u6587\u4ef6\u95f4\u7684\u7f16\u8bd1\u4f9d\u5b58\u5173\u7cfb\u964d\u81f3\u6700\u4f4e \u2003\u5982\u679cclass A\u7684\u5b9a\u4e49\u6587\u4ef6\u4e2d\u5305\u542b\u4e86\u4e00\u7cfb\u5217\u5176\u4ed6\u7c7b\u578b\u7684\u5b9a\u4e49\u5f0f(\u901a\u8fc7include\u5b9e\u73b0)\uff0c\u5219\u5f53\u90a3\u4e9b\u7c7b\u578b\u53d1\u9001\u6539\u53d8\u65f6\uff0c\u5e76\u91cd\u65b0\u7f16\u8bd1\u65f6\uff0c\u6b64\u65f6\u6240\u6709\u5305\u542bA\u7684\u5b9a\u4e49\u5f0f\u7684\u6587\u4ef6\u90fd\u5c06\u91cd\u65b0\u7f16\u8bd1\uff0c\u8fd9\u5373\u662f\u8fde\u4e32\u7f16\u8bd1\u4f9d\u5b58\u5173\u7cfb\u3002 \u2003 \u5c3d\u91cf\u4ee5class\u58f0\u660e\u5f0f\u66ff\u6362class\u5b9a\u4e49\u5f0f \uff0c\u5e76\u4e14\u53ea\u4f9d\u9760class \u58f0\u660e\u5f0f\u5c31\u80fd\u5b9a\u4e49\u51fa\u6307\u5411\u8be5\u7c7b\u578b\u7684reference\u6216pointer; \u5982\u679c\u5b9a\u4e49\u67d0\u7c7b\u578b\u7684objects\uff0c\u5c31\u5fc5\u987b\u7528\u5230\u5176\u5b9a\u4e49\u5f0f\u3002\u4ee5\u58f0\u660e\u4f9d\u5b58\u6027\u4ee3\u66ff\u5b9a\u4e49\u4f9d\u5b58\u6027\uff0c\u53ef\u4ee5\u6539\u5584\u524d\u8ff0\u95ee\u9898\u3002 \u2003\u8fdb\u4e00\u6b65\u53ef\u4ee5\u4e3a\u58f0\u660e\u5f0f\u548c\u5b9a\u4e49\u5f0f\u63d0\u4f9b\u4e0d\u540c\u7684\u5934\u6587\u4ef6\uff1b\u5e76\u4e14\u901a\u8fc7handle class\u548cinterface class\u6765\u964d\u4f4e\u63a5\u53e3\u548c\u5b9e\u73b0\u95f4\u7684\u8026\u5408\uff0c\u4ece\u800c\u964d\u4f4e\u6587\u4ef6\u95f4\u7684\u7f16\u8bd1\u4f9d\u5b58\u6027\u3002 \u2003 handle class \u7684\u505a\u6cd5\u662f\uff1aA\u53ea\u63d0\u4f9b\u63a5\u53e3\uff0cB\u8d1f\u8d23\u5b9e\u73b0\u63a5\u53e3\uff0cA\u5305\u542b\u4e00\u4e2a\u6307\u5411B\u7c7b\u578b\u7684\u6307\u9488pImpl(pointer to implementation), \u901a\u8fc7pImpl\u6765\u8c03\u7528B\u4e2d\u5b9e\u73b0\u597d\u7684\u63a5\u53e3\uff1b\u8fd9\u6837A\u7684\u7528\u6237\u5c31\u4e0e\u5176\u5305\u542b\u7684\u989d\u5916\u7684classes\u7684\u5b9e\u73b0\u76f8\u5206\u79bb\uff0c\u90a3\u4e9bclasses\u7684\u4fee\u6539\u4e5f\u4e0d\u4f1a\u9700\u8981A\u7684\u5ba2\u6237\u7aef\u91cd\u65b0\u7f16\u8bd1\u3002 \u2003 interface class \u7684\u505a\u6cd5\u662f\uff1a\u4ee4A\u6210\u4e3a\u4e00\u79cd\u7279\u6b8a\u7684abstract class, \u53ea\u6709\u4e00\u4e2avirtual \u6790\u6784\u51fd\u6570\uff0c\u548c\u4e00\u7ec4\u7eaf\u865a\u51fd\u6570\uff0c\u7528\u4ee5\u63cf\u8ff0\u51fd\u6570\u63a5\u53e3\uff1b\u5e76\u4e14\u5bf9\u4e8e\u6d3e\u751f\u4f53\u7cfb\u5185\u5168\u90e8\u90fd\u76f8\u540c\u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u8ba9\u5176\u6210\u4e3ainterface class\u4e2dnon-virtual\u51fd\u6570\uff0c\u6d3e\u751f\u7c7b\u5171\u540c\u4f7f\u7528\u8fd9\u4e00\u4efd\u51fd\u6570\u3002 \u2003\u4e0a\u8ff0\u505a\u6cd5\u7684\u7f3a\u70b9\uff0c\u5373\u4e3a\u6bcf\u4e00\u6b21\u8bbf\u95ee\u589e\u52a0\u4e86\u4e00\u5c42\u95f4\u63a5\u6027\uff0c\u5982\u901a\u8fc7pImpl\u6216\u8005\u865a\u51fd\u6570\u8868\uff0c\u8fd9\u90fd\u4f1a\u5e26\u6765\u989d\u5916\u7684\u5f00\u9500\uff0c\u540c\u65f6pImpl\u662f\u901a\u8fc7\u52a8\u6001\u5206\u914d\u5f97\u5230\u7684\uff0c\u9700\u8981\u8003\u8651bad_alloc\u5f02\u5e38\u7684\u53ef\u80fd\u6027\u3002 32\u3001make sure public inheritance model \"is-a\" \u2003public\u7ee7\u627f \u4e3b\u5f20\u80fd\u591f\u65bd\u884c\u4e8ebase class\u5bf9\u8c61\u8eab\u4e0a\u7684\u6bcf\u4ef6\u4e8b\u60c5\uff0c\u4e5f\u53ef\u4ee5\u65bd\u884c\u4e8ederived class\u5bf9\u8c61\u8eab\u4e0a\uff1b\u8ba9\u7c7bA\u4ee5pulic inherit\u5f62\u5f0f\u7ee7\u627f\u7c7bB\uff0c\u9700\u8981\u786e\u4fdd A \u201cis a\u201d B, \u4e14\u5bf9\u4e8eB\u5bf9\u8c61\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u80fd\u65bd\u52a0\u5230A\u5bf9\u8c61\u4e0a\u3002 33\u3001\u907f\u514dhiding\u7ee7\u627f\u800c\u6765\u7684name \u2003\u53ef\u53c2\u8003c_base\u4e2d\u7684\u91cd\u8f7d/\u8986\u76d6/\u9690\u85cf/using\u3002 34\u3001\u533a\u5206\u63a5\u53e3\u7ee7\u627f\u548c\u5b9e\u73b0\u7ee7\u627f \u2003\u58f0\u660e\u4e00\u4e2apure virtual function\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u8ba9derived class\u53ea\u7ee7\u627f\u51fd\u6570\u63a5\u53e3\uff1b\u4e00\u822c\u60c5\u51b5\u4e0b\u57fa\u7c7b\u4e2d\u7eaf\u865a\u4e0d\u9700\u8981\u5b9a\u4e49\uff0c\u4f46\u5176\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u5b9a\u4e49\uff0c\u4f5c\u4e3a\u7f3a\u7701\u5b9e\u73b0\uff1b\u6b64\u65f6\u6d3e\u751f\u7c7b\u5982\u679c\u8986\u76d6\u8fd9\u4e2a\u7eaf\u865a\u51fd\u6570\uff0c\u53ef\u4ee5\u63d0\u4f9b\u81ea\u5df1\u7684\u5b9e\u73b0\uff0c\u6216\u8005\u901a\u8fc7Base::fun(args)\u5f62\u5f0f\u76f4\u63a5\u8c03\u7528\u7eaf\u865a\u51fd\u6570\u7684\u5b9e\u73b0\uff1b\u5982\u679c\u6d3e\u751f\u7c7b\u4e0d\u63d0\u4f9bfun\u7684\u5b9e\u73b0\uff0c\u5219\u4e0d\u4f1a\u901a\u8fc7\u7f16\u8bd1\uff0c\u56e0\u4e3afun\u4e3a\u4e00\u4e2apure virtual function\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u907f\u514d\u5982\u679cfcn\u662f\u666e\u901a\u865a\u51fd\u6570\uff0c\u4f46\u4e0d\u540c\u7684\u6d3e\u751f\u7c7b\u8981\u6c42\u7684\u7f3a\u7701\u5b9e\u73b0\u4e0d\u540c\uff0c\u6240\u4ee5\u5982\u679c\u6d3e\u751f\u7c7b\u60f3\u8981\u57fa\u7c7b\u4e2d\u7684\u7f3a\u7701\u5b9e\u73b0\uff0c\u5fc5\u987b\u4e3b\u52a8\u63d0\u51fa\uff0c\u5426\u5219\u5c31\u91cd\u65b0\u5b9e\u73b0\u3002 \u2003\u58f0\u660e\u4e00\u4e2a\u666e\u901a\u865a\u51fd\u6570\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u8ba9derived class\u7ee7\u627f\u51fd\u6570\u7684\u63a5\u53e3\u548c\u7f3a\u7701\u5b9e\u73b0\u3002 \u2003\u58f0\u660e\u4e00\u4e2a\u666e\u901a\u975e\u865a\u51fd\u6570\uff0c\u610f\u5473\u7740derived class\u4e2d\u7ee7\u627f\u51fd\u6570\u7684\u63a5\u53e3\uff0c\u540c\u65f6\u63d0\u4f9b\u4e00\u4efd\u5f3a\u5236\u7684\u5b9e\u73b0\uff0c\u5373\u671f\u671b\u4e0d\u540c\u7684\u6d3e\u751f\u7c7b\u5bf9\u8c61\u6709\u76f8\u540c\u7684\u884c\u4e3a\uff1b\u5982\u679c\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u58f0\u660e\u4e86\u4e00\u4e2a\u4e0e\u6b64\u540c\u540d\u7684\u51fd\u6570\uff0c\u5219\u65e0\u8bba\u53c2\u6570\u662f\u5426\u76f8\u540c\uff0c\u57fa\u7c7b\u4e2d\u7684\u7248\u672c\u90fd\u5c06\u88ab\u9690\u85cf\u3002 35\u3001\u8003\u8651\u865a\u51fd\u6570\u4ee5\u5916\u7684\u5176\u4ed6\u9009\u62e9 36\u3001\u7edd\u4e0d\u91cd\u65b0\u5b9a\u4e49\u7ee7\u627f\u800c\u6765\u7684non-virtual\u51fd\u6570 \u2003\u5982\u679c\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\uff0c\u5219\u5c06\u8be5\u51fd\u6570\u58f0\u660e\u4e3avirtual function\u3002 37\u3001\u7edd\u4e0d\u91cd\u65b0\u5b9a\u4e49\u7ee7\u627f\u800c\u6765\u7684\u7f3a\u7701\u53c2\u6570\u503c \u56e0\u4e3a\u7f3a\u7701\u53c2\u6570\u503c\u90fd\u662f\u9759\u6001\u7ed1\u5b9a\uff0c\u5728\u4f7f\u7528\u591a\u6001\u65f6(\u6307\u901a\u8fc7pointer\u6216reference\u6765\u8bbf\u95ee\u6d3e\u751f\u7c7b\u5bf9\u8c61)\uff0c\u91cd\u65b0\u5b9a\u4e49\u7ee7\u627f\u800c\u6765\u7684\u865a\u51fd\u6570\u4e2d\u7684\u7f3a\u7701\u53c2\u6570\uff0c\u901a\u5e38\u4e0d\u4f1a\u6709\u5982\u671f\u884c\u4e3a\u53d1\u751f\uff0c\u5b9e\u9645\u4f7f\u7528\u7684\u4f9d\u65e7\u662f\u57fa\u7c7b\u63d0\u4f9b\u7684\u7f3a\u7701\u53c2\u6570\u503c\u3002 38\u3001 Model \"has-a\" or \"is-implemented-in-terms-of\" through composition \u2003\u590d\u5408(composition) \u662f\u7c7b\u578b\u4e4b\u95f4\u7684\u4e00\u79cd\u5173\u7cfb\uff0c\u5f53\u67d0\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\u5305\u542b\u5176\u4ed6\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u4fbf\u662f\u8fd9\u79cd\u5173\u7cfb\u3002 39\u3001\u8c28\u614e\u4f7f\u7528private \u7ee7\u627f private \u7ee7\u627f\u610f\u5473\u7740implemented-in-terms-of(\u6839\u636e\u67d0\u7269\u5b9e\u73b0\u51fa)\uff0c\u5373\u6d3e\u751f\u7c7b\u4e0e\u57fa\u7c7b\u5e76\u4e0d\u5b58\u5728is-a\u7684\u5173\u7cfb\u3002 \u2003\u5f53\u4f60\u9762\u5bf9\u5e76\u4e0d\u5b58\u5728is-a\u5173\u7cfb\u7684\u4e24\u4e2aclasses\uff0c\u5176\u4e2d\u4e00\u4e2a\u9700\u8981\u8bbf\u95ee\u53e6\u4e00\u4e2aprotected\u6210\u5458\uff0c\u6216\u8005\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u5176\u4e00\u6216\u591a\u4e2avirtual\u51fd\u6570\uff0c\u53ef\u4ee5\u8003\u8651private\u7ee7\u627f\u3002 40\u3001\u8c28\u614e\u4f7f\u7528\u591a\u91cd\u7ee7\u627f templates and generic programming 41\u3001\u4e86\u89e3\u9690\u5f0f\u63a5\u53e3\u548c\u7f16\u8bd1\u671f\u591a\u6001 \u2003\u7f16\u8bd1\u5668\u591a\u6001\uff1a\u4ee5\u4e0d\u540c\u7684template\u53c2\u6570\u5177\u73b0\u5316function templates \u4f1a\u5bfc\u81f4\u8c03\u7528\u4e0d\u540c\u7684\u51fd\u6570\uff0c\u548c\u91cd\u8f7d\u7c7b\u4f3c\uff0c\u90fd\u662f\u7f16\u8bd1\u5668\u7ed1\u5b9a\uff1b \u2003\u8fd0\u884c\u671f\u591a\u6001: \u8fd0\u884c\u671f\u6839\u636e\u53c2\u6570\u7684\u52a8\u6001\u7c7b\u578b\u51b3\u5b9a\u52a8\u6001\u7ed1\u5b9a\u54ea\u4e00\u4e2a\u865a\u51fd\u6570\u3002 42\u3001understand the two meanings of typename 43\u3001\u5b66\u4e60\u5904\u7406\u6a21\u677f\u5316\u57fa\u7c7b\u5185\u7684\u540d\u79f0 \u5bf9\u4e8e\u4e00\u4e2a\u7ee7\u627ftemplatized base class\u7684\u6d3e\u751f\u6a21\u677f\u7c7b\uff0c\u5982\u679c\u76f4\u63a5\u5728\u5176\u5185\u90e8\u8c03\u7528\u57fa\u7c7b\u4e2d\u7684public \u6210\u5458\u51fd\u6570\uff0c\u5e76\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\uff1b \u56e0\u4e3a\u7f16\u8bd1\u5668\u77e5\u9053base class template\u6709\u53ef\u80fd\u4f1a\u88ab\u7279\u5316\uff0c\u800c\u7279\u5316\u7248\u672c\u53ef\u80fd\u4e0d\u63d0\u4f9b\u548c\u4e00\u822c\u6027template\u76f8\u540c\u7684\u63a5\u53e3\u3002\u56e0\u6b64\u5b83\u62d2\u7edd\u5728templatized base class\u5185\u5bfb\u627e\u7ee7\u627f\u800c\u6765\u7684\u540d\u79f0\u3002 \u2003\u53ef\u5728derived class templates\u901a\u8fc7 this-> \u6307\u6d89base class templates\u5185\u7684\u6210\u5458\u540d\u79f0\uff0c\u6216\u4f7f\u7528using \u58f0\u660e\u5f0f\uff1b\u6216\u660e\u767d\u6307\u51fa\u88ab\u8c03\u7528\u7684\u51fd\u6570\u4f4d\u4e8ebase class\u5185\u3002 \u2003\u5982\u679c\u63d0\u4f9b\u4e00\u4e2a\u6ca1\u6709sendClear\u63a5\u53e3\u7684\u7279\u5316\u7248\u672c\uff0c\u5c06\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\u3002 template<typename company> class LoggingMsgSender:: public MsgSender<company>{ public: using MsgSender<company>::sendClear; //\u660e\u786e\u544a\u8bc9\u7f16\u8bd1\u5668\u51fd\u6570\u4f4d\u4e8ebase class\u5185 void sendClearMsg(const MsgInfo& info){ ... this->sendClear(info); //\u5047\u8bbesendClear\u88ab\u7ee7\u627f // MsgSender::sendClear(info); //\u8fd9\u79cd\u60c5\u51b5\u4f1a\u7834\u574fvirtual\u7ed1\u5b9a\u884c\u4e3a ... } } 44\u3001\u5c06\u4e0e\u53c2\u6570\u65e0\u5173\u7684\u4ee3\u7801\u5265\u79bbtemplates 45\u3001\u8fd0\u7528\u6210\u5458\u51fd\u6570\u6a21\u677f\u63a5\u53d7\u6240\u6709\u517c\u5bb9\u7c7b\u578b \u2003\u4e00\u4e2atemplate class\u63a5\u53d7\u4e0d\u540c\u7c7b\u578b\u53c2\u6570\u5f97\u5230\u7684\u5b9e\u4f8b\u4e4b\u95f4\u5e76\u4e0d\u5b58\u5728\u56fa\u6709\u5173\u7cfb\uff0c\u5373\u4f7f\u8fd9\u4e9b\u7c7b\u578b\u4e4b\u95f4\u672c\u8eab\u5b58\u5728\u7ee7\u627f\u5173\u7cfb\u3002 \u2003\u6784\u9020\u6a21\u677f: \u2003\u5bf9\u6784\u9020\u6a21\u677f\u65bd\u52a0\u7ea6\u675f: \u2003\u6210\u5458\u51fd\u6570\u6a21\u677f: 46\u3001\u9700\u8981\u7c7b\u578b\u8f6c\u6362\u65f6\u8bf7\u4e3a\u6a21\u677f\u5b9a\u4e49\u975e\u6210\u5458\u51fd\u6570 \u2003\u4e3a\u4e86\u8ba9\u7c7b\u578b\u8f6c\u6362\u53ef\u80fd\u53d1\u751f\u4e8e\u6240\u6709\u5b9e\u53c2\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2anon-member\u51fd\u6570(\u6761\u6b3e24); \u4e3a\u4e86\u4ee4\u8fd9\u4e2a\u51fd\u6570\u88ab\u81ea\u52a8\u5177\u73b0\u5316\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u58f0\u660e\u5728class\u5185\u90e8\uff0c\u5373\u4ee4\u5b83\u6210\u4e3a\u4e00\u4e2afriend\u51fd\u6570\u3002 \u2003\u5982\u679c\u8fd9\u4e2anon-member\u51fd\u6570\u5b9a\u4e49\u5728class\u5916\u90e8\uff0c\u5219\u5bf9\u4e8e\u53ef\u80fd\u53d1\u751f\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u8c03\u7528\u76f8\u5173\u51fd\u6570\u5e76\u4e0d\u80fd\u6210\u529f\uff1b\u56e0\u4e3atemplate\u5b9e\u53c2\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u4f1a\u8003\u8651\u9690\u5f0f\u8f6c\u6362\uff1b\u6240\u4ee5\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u5b9e\u53c2\u53d1\u751f\u9690\u5f0f\u8f6c\u6362\uff0c\u7f16\u8bd1\u5668\u5e76\u4e0d\u80fd\u51c6\u786e\u77e5\u9053\u5e94\u8be5\u5177\u73b0\u5316\u54ea\u4e2a\u51fd\u6570\u3002 47\u3001\u4f7f\u7528traits classes\u8868\u73b0\u7c7b\u578b\u4fe1\u606f \u2003 typedef typename iterator_traits ::value_type valType; 48\u3001\u8ba4\u8bc6\u6a21\u677f\u5143\u7f16\u7a0b customizing new and delete 49\u3001undertand the behavior of the new handler \u5f53operator new\u629b\u51fa\u5f02\u5e38\u4ee5\u53cd\u6620\u4e00\u4e2a\u672a\u83b7\u6ee1\u8db3\u7684\u5185\u5b58\u9700\u6c42\u4e4b\u524d\uff0c\u5b83\u4f1a\u5148\u8c03\u7528\u4e00\u4e2a\u5ba2\u6237\u6307\u5b9a\u7684\u9519\u8bef\u5904\u7406\u51fd\u6570\uff0c\u5373\u4e00\u4e2anew-handler\u3002 \u4e00\u4e2a\u8bbe\u8ba1\u826f\u597d\u7684handler\u5fc5\u987b\u5305\u542b: \u8ba9\u66f4\u591a\u5185\u5b58\u53ef\u7528\u3001\u5b89\u88c5\u53e6\u4e00\u4e2anew-handler(\u65e0\u9650\u5faa\u73af)\u3001\u5378\u8f7dnew-handler(\u5c06null\u6307\u9488\u4f20\u7ed9set_new_handler)\u3001\u629b\u51fabad_alloc\u5f02\u5e38\u3001\u4e0d\u8fd4\u56de(\u8c03\u7528abort\u6216exit). 50\u3001\u4e86\u89e3new\u548cdelete\u7684\u5408\u7406\u66ff\u6362\u65f6\u95f4 51\u3001\u7f16\u5199new\u548cdelete\u65f6\u9700\u56fa\u5b88\u5e38\u89c4 52\u3001write placement delete if you write placement new \u8865\u5145 53\u3001 \u4e0d\u7528\u5ffd\u7565\u7f16\u8bd1\u5668\u7684\u8b66\u544a 54\u3001\u719f\u6089\u5305\u62ecTR1\u5728\u5185\u7684\u6807\u51c6\u7a0b\u5e8f\u5e93 55\u3001\u719f\u6089Boost","title":"\u6761\u6b3e"},{"location":"CPP/EffectiveCPPRule/#_1","text":"","title":"\u6761\u6b3e"},{"location":"CPP/EffectiveCPPRule/#base","text":"1\u3001View C++ as a federations of lanuages 2\u3001Prefer consts, enums and inlines to #define \u5bf9\u4e8e\u5355\u7eaf\u5e38\u91cf\u5bf9\u8c61\uff0c\u6700\u540e\u4ee5const\u5bf9\u8c61\u6216enums\u66ff\u6362#define \u5bf9\u4e8e\u5f62\u4f3c\u51fd\u6570\u7684\u5b8f\uff0c\u6700\u597d\u7528inline\u51fd\u6570\u66ff\u6362#define 3\u3001Use const whenever possible \u2003\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5e38\u91cf\u503c\uff0c\u907f\u514d\u8bf8\u5982\"a*b=c\"\u8fd9\u79cd\u539f\u610f\u662f\u5224\u65ad\u76f8\u7b49\uff0c\u800c\u9519\u5199\u6210\u8d4b\u503c\u7684\u64cd\u4f5c\uff0c\u8fd9\u79cd\u9519\u8bef\u5728\u7f16\u8bd1\u5668\u5c31\u4f1a\u68c0\u6d4b\u51fa\u6765\u3002 \u2003\u67d0\u4e9b\u51fd\u6570\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5e38\u91cf\u5f15\u7528\uff0c\u4e00\u6765\u53ef\u4ee5\u63d0\u4f9b\u4f20\u9012\u6548\u7387\uff0c\u4e8c\u6765\u53ef\u4ee5\u907f\u514d\u901a\u8fc7\u8fd4\u56de\u7684\u5f15\u7528\u4fee\u6539\u5b9e\u9645\u7684\u5bf9\u8c61\u3002 4\u3001Make sure that objects are initialized before they're used. 1>. \u624b\u5de5\u521d\u59cb\u5316\u5185\u7f6e\u578bnon-member\u5bf9\u8c61\u3002 2>. \u4f7f\u7528\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\u6765\u521d\u59cb\u5316\u5bf9\u8c61\u6240\u6709\u6210\u5206\u3002 3>. \u7531\u4e8eC++ \u5bf9\u4e8e\u201c\u5b9a\u4e49\u5728\u4e0d\u540c\u7f16\u8bd1\u5355\u5143\u5185\u7684non-local static\u5bf9\u8c61\u201d\u7684\u521d\u59cb\u5316\u6b21\u5e8f\u5e76\u65e0\u660e\u786e\u5b9a\u4e49 \uff0c \u56e0\u6b64\u53ef\u4ee5\u5c06non-local static\u5bf9\u8c61\u7684\u58f0\u660e\u653e\u7f6e\u5728\u51fd\u6570\u5185\uff0c\u8fd9\u6837\u5176\u5c31\u53d8\u6210\u4e86local static\u5bf9\u8c61\uff0c \u800c\u8be5\u51fd\u6570\u53c8\u8fd4\u56de\u8be5\u5bf9\u8c61\u7684reference\u3002\u56e0\u4e3aC++\u4fdd\u8bc1, \u51fd\u6570\u5185\u7684local static\u5bf9\u8c61\u4f1a\u5728\u201c\u8be5\u51fd\u6570\u8c03\u7528\u671f\u95f4\uff0c\u9996\u6b21\u9047\u5230\u8be5\u5bf9\u8c61\u4e4b\u5b9a\u4e49\u5f0f\u201d\u65f6\u88ab\u521d\u59cb\u5316 \u3002 \u901a\u8fc7\u8c03\u7528\u8be5\u51fd\u6570\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u83b7\u5f97\u4e00\u4e2a\u6307\u5411\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u5bf9\u8c61\u7684reference\u3002","title":"base"},{"location":"CPP/EffectiveCPPRule/#ctordtorassignment","text":"5\u3001\u4e86\u89e3C++\u9ed8\u9ed8\u7f16\u5199\u5e76\u8c03\u7528\u4e86\u54ea\u4e9b\u51fd\u6570 \u2003\u4e00\u822c\u60c5\u51b5\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u4e3aclass\u521b\u5efa\u9ed8\u8ba4constructor\u3001copy-constructor\u3001copy-assignment\u4ee5\u53cadestructor\uff0c \u4f46\u5f53class\u5185\u542b\u6709reference/pointer/const\u6210\u5458\uff0c\u4ee5\u53cabase classes\u5c06copy-assignment\u8bbe\u7f6e\u4e3aprivate\u65f6\uff0c\u65e0\u6cd5\u521b\u5efa\u9ed8\u8ba4copy-assignment\u3002 6\u3001\u82e5\u4e0d\u60f3\u4f7f\u7528\u7f16\u8bd1\u5668\u81ea\u52a8\u751f\u6210\u7684\u6784\u9020\u51fd\u6570\uff0c\u5c31\u5e94\u8be5\u660e\u786e\u62d2\u7edd \u2003\u4f7f\u7528=delete\uff1b\u6216\u8005\u5c06\u5176\u58f0\u660e\u4e3aprivate, \u4e0d\u8fc7\u8fd9\u6837\u5176member\u548cfriend\u4ecd\u7136\u80fd\u8bbf\u95ee\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2abase class\uff0c\u5728\u5176\u4e2d\u5c06\u8fd9\u4e9b\u51fd\u6570\u58f0\u660e\u4e3aprivate\uff0c\u8ba9\u4f60\u7684\u7c7b\u7ee7\u627f\u8fd9\u4e2abase class\uff0c\u5219\u51fa\u73b0\u8bd5\u56fe\u8bbf\u95ee\u8fd9\u4e9b\u51fd\u6570\u65f6\uff0c\u4f1a\u5728\u7f16\u8bd1\u5668\u4ef6\u62a5\u9519\u3002 7\u3001\u4e3a\u591a\u6001\u57fa\u7c7b\u58f0\u660evirtual\u6790\u6784\u51fd\u6570 \u2003\u5982\u679c\u4e00\u4e2aclass \u5305\u542b\u4efb\u4f55\u7684virtual \u51fd\u6570\uff0c\u5219\u5e94\u8be5\u6709\u4e00\u4e2avirtual \u6790\u6784\u51fd\u6570\u3002 \u2003\u8fd9\u4e2a\u89c4\u5219\u53ea\u9002\u7528\u4e8epolymorphic base classes\u8eab\u4e0a\uff0c\u8fd9\u79cdclass\u8bbe\u8ba1\u7684\u76ee\u7684\u662f\u4e3a\u4e86 \u901a\u8fc7base class\u63a5\u53e3\u6765\u5904\u7406derived class\u5bf9\u8c61 \uff0c\u5426\u5219\u6839\u636e\u9759\u6001\u7ed1\u5b9a\uff0c\u8c03\u7528\u7684\u5c06\u662fbase class\u7684\u6790\u6784\u51fd\u6570\uff0c\u800c\u975e\u6307\u9488\u5b9e\u9645\u6307\u5411\u7684derived clas; \u81f3\u4e8e\u90a3\u4e9b\u4e0d\u662f\u4e3a\u4e86\u591a\u6001\u76ee\u7684\u8bbe\u8ba1\u7684base class\uff0c\u5219\u65e0\u9700\u865a\u6790\u6784\u51fd\u6570\u3002 8\u3001\u4e0d\u8981\u8ba9\u5f02\u5e38\u9003\u79bb\u6790\u6784\u51fd\u6570 9\u3001\u51b3\u4e0d\u5728constructor\u548cdestructor\u5185\u8c03\u7528virtual\u51fd\u6570 10\u3001\u4ee4operator=\u8fd4\u56de\u4e00\u4e2a reference to *this \u2003\u4e3a\u4e86\u5b9e\u73b0\u8fde\u9501\u8d4b\u503c\uff0c\u4e14\u9002\u7528\u4e8e\u6240\u6709\u8d4b\u503c\u76f8\u5173\u8fd0\u7b97 11\u3001\u5728operatot=\u4e2d\u5904\u7406\u81ea\u6211\u8d4b\u503c //identity test Object& Object::operator=(const Object& rhs){ if(this==&rhs)return *this; delete p; // delete pointer member p = new T(*rhs.p); return *this; } //\u8003\u8651\u5f02\u5e38\u5b89\u5168\u548c\u81ea\u6211\u8d4b\u503c\u5b89\u5168 Object& Object::operator=(const Object& rhs){ T* tmp=p; p = new T(*rhs.p); delete tmp; // delete old pointer member; \u5982\u679cnew \u8fc7\u7a0b\u629b\u51fa\u5f02\u5e38\uff0c\u6b64\u65f6\u539f\u5148\u7684\u6307\u9488\u5c06\u4fdd\u6301\u539f\u72b6 return *this; } Object& Object::operator==(Object rhs){ //pass by value swap(rhs); //\u4ea4\u6362*this\u548crhs\u7684\u6570\u636e return *this; } 12\u3001Copy all parts of an object \u2003\u5f53\u4f60\u7f16\u5199\u4e00\u4e2acopying\u51fd\u6570(\u5305\u62eccopy ctor\u548ccopy-assignment)\u65f6\uff0c\u786e\u4fdd\u590d\u5236\u6240\u6709local\u6210\u5458\u53d8\u91cf\uff1b\u8c03\u7528base class\u76f8\u5e94copying\u51fd\u6570\u3002 \u2003\u53e6\u5916\u9700\u6ce8\u610f:\u4e0d\u5e94\u8be5\u8ba9copy assignment\u64cd\u4f5c\u7b26\u8c03\u7528copy ctor(\u8bd5\u56fe\u6784\u9020\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61)\uff0c\u53cd\u4e4b(\u8bd5\u56fe\u5bf9\u4e00\u4e2a\u5c1a\u672a\u6784\u9020\u7684\u5bf9\u8c61\u8d4b\u503c)\u4ea6\u5982\u6b64\uff1b\u6d88\u9664\u4e24\u8005\u91cd\u590d\u4ee3\u7801\u7684\u505a\u6cd5\uff0c\u662f\u5c06\u8fd9\u90e8\u5206\u4ee3\u7801\u5c01\u88c5\u5230\u5176\u4ed6\u51fd\u6570\uff0c\u88ab\u4e24\u8005\u8c03\u7528\u3002","title":"ctor\\dtor\\assignment"},{"location":"CPP/EffectiveCPPRule/#resource-management","text":"13\u3001\u4ee5\u5bf9\u8c61\u7ba1\u7406\u8d44\u6e90 \u2003\u5c06\u8d44\u6e90(\u6307\u9488\u7c7b\u578b)\u653e\u8fdb\u5bf9\u8c61\u5185\uff0c\u5f53\u5bf9\u8c61\u88ab\u9500\u6bc1\u65f6\uff0c\u6790\u6784\u51fd\u6570\u4f1a\u81ea\u52a8\u91ca\u653e\u8d44\u6e90(\u901a\u5e38\u4f9d\u8d56\u4e8e\u667a\u80fd\u6307\u9488)\u3002 \u2003\u83b7\u5f97\u8d44\u6e90\u540e\u7acb\u523b\u653e\u5165\u7ba1\u7406\u5bf9\u8c61\uff0c(\u4f5c\u4e3a\u6784\u9020\u51fd\u6570\u53c2\u6570\uff0c\u7528\u4ee5\u521d\u59cb\u5316);( RAII:Resource Acquistion Is Initialization) \u2003\u7ba1\u7406\u5bf9\u8c61\u8fd0\u7528\u6790\u6784\u51fd\u6570\u786e\u4fdd\u8d44\u6e90\u5f97\u5230\u91ca\u653e; \u2003\u4e00\u4e2a\u5408\u9002\u7684\u4f8b\u5b50\u5c31\u662f \u901a\u8fc7\u5bf9\u8c61\u7ba1\u7406\u9501\uff0c\u8fd9\u6837\u5f53\u4e2d\u9014\u5f02\u5e38\u9000\u51fa\u65f6\uff0c\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u4f1a\u91ca\u653e\u9501 \u3002 14\u3001\u5728\u8d44\u6e90\u7ba1\u7406\u7c7b\u4e2d\u5c0f\u5fc3copying\u884c\u4e3a \u5bf9\u4e8e\u975eheap-based(heap-based\u5373\u901a\u8fc7new\u83b7\u5f97\u7684\u6307\u9488)\u7684\u8d44\u6e90\uff0c\u667a\u80fd\u6307\u9488\u4e0d\u9002\u5408\u4f5c\u4e3aresource handler\u3002\u800c\u5f53RAII\u5bf9\u8c61\u53d1\u751f\u590d\u5236\u65f6\uff0c\u4e00\u822c\u6709\u4e24\u79cd\u53ef\u80fd:\u7981\u6b62\u590d\u5236\u6216\u8005\u5bf9\u5e95\u5c42\u8d44\u6e90\u91c7\u7528\u5f15\u7528\u8ba1\u6570\u6cd5(shared_ptr\u91c7\u7528\u7684\u505a\u6cd5)\uff0c\u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u91c7\u7528\u6df1\u62f7\u8d1d\u6216\u8005\u8f6c\u79fb\u5e95\u90e8\u5bf9\u8c61\u6240\u6709\u6743(auto_ptr\u91c7\u7528\u7684\u505a\u6cd5\uff0c\u8d44\u6e90\u7684\u6240\u6709\u6743\u4ece\u590d\u5236\u7269\u8f6c\u79fb\u5230\u76ee\u6807\u7269) 15\u3001\u5728\u8d44\u6e90\u7ba1\u7406\u7c7b\u4e2d\u63d0\u4f9b\u5bf9\u539f\u59cb\u8d44\u6e90\u7684\u8bbf\u95ee \u2003\u6bcf\u4e00\u4e2aRAII class\u5e94\u8be5\u63d0\u4f9b\u4e00\u4e2a\u53d6\u5f97\u5176\u6240\u7ba1\u7406\u4e4b\u8d44\u6e90\u7684\u65b9\u6cd5\uff1b \u2003\u5bf9\u539f\u59cb\u8d44\u6e90\u7684\u8bbf\u95ee\u53ef\u80fd\u7ecf\u7531\u663e\u793a\u8f6c\u6362(\u6bd4\u8f83\u5b89\u5168)\u6216\u8005\u9690\u5f0f\u8f6c\u6362(\u65b9\u4fbf\u5ba2\u6237) 16\u3001\u6210\u5bf9\u4f7f\u7528new\u548cdelete\u65f6\u8981\u91c7\u53d6\u76f8\u540c\u5f62\u5f0f 17\u3001\u4ee5\u72ec\u7acb\u8bed\u53e5\u5c06newed\u5bf9\u8c61\u7f6e\u5165\u667a\u80fd\u6307\u9488 int priority(); void process(shared_ptr<Widget> pw, int pri); //\u53c2\u6570\u4f20\u9012\u524d\u6709\u4e09\u4e2a\u6b65\u9aa4\uff0c\u8c03\u7528priority()\uff0cnew Widget\uff0c\u6784\u5efashaerd_ptr //new\u64cd\u4f5c\u4e00\u5b9a\u53d1\u751f\u5728\u6784\u5efashared_ptr\u4e4b\u524d\uff0c\u4f46priority()\u8c03\u7528\u53ef\u80fd\u53d1\u751f\u5728\u4e24\u8005\u4e2d\u95f4\uff0c //\u5982\u679c\u6b64\u65f6\u53d1\u9001\u5f02\u5e38\uff0c\u5219new\u5f97\u5230\u7684\u8d44\u6e90\u5c06\u4f1a\u6cc4\u6f0f process(shared_ptr<Widget>(new Widget), priority()); //\u56e0\u6b64\u91c7\u7528\u72ec\u7acb\u8bed\u53e5\u5c06newd\u5bf9\u8c61\u7f6e\u5165\u667a\u80fd\u6307\u9488 shared_ptr<Widget> pw(new Widget); process(pw, priority);","title":"resource management"},{"location":"CPP/EffectiveCPPRule/#design-and-declarations","text":"18\u3001\u8ba9\u63a5\u53e3\u5bb9\u6613\u88ab\u6b63\u786e\u4f7f\u7528\uff0c\u4e0d\u6613\u88ab\u8bef\u7528 shared_ptr\u652f\u6301\u5b9a\u5236\u5220\u9664\u5668\uff0c\u53ef\u9632\u8303cross-DLL problem(object\u5728\u4e00\u4e2a\u52a8\u6001\u94fe\u63a5\u5e93DLL\u4e2d\u88abnew\u521b\u5efa\uff0c\u5374\u5728\u53e6\u4e00\u4e2aDLL\u5185\u88abdelete\u9500\u6bc1\uff0c\u5728\u8bb8\u591a\u5e73\u53f0\u4e0a\u8fd9\u4f1a\u5bfc\u81f4\u8fd0\u884c\u671f\u9519\u8bef\uff1b\u800cshare_ptr\u5305\u542b\u7f3a\u7701\u7684deletor, \u5176\u6765\u81ea\u521b\u5efa\u65f6\u7684DLL\uff0c\u56e0\u6b64\u5176\u8c03\u7528\u7684\u662f\u539f\u6765\u7684DLL\u4e2d\u7684deletor) 19\u3001\u8bbe\u8ba1class\u72b9\u5982\u8bbe\u8ba1type 20\u3001Prefer pass-by-reference-to-const to pass-by-value \u2003\u524d\u8005\u6548\u7387\u66f4\u9ad8\uff1b \u2003\u4e14\u5f53\u51fd\u6570\u7c7b\u578b\u662f\u4e00\u4e2a\u57fa\u7c7b\u7c7b\u578b\uff0c\u5982\u679c\u4f20\u9012\u7ed9\u5176\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u5219\u4f1a\u91cd\u65b0\u6784\u9020\uff0c\u4e22\u5931\u6d3e\u751f\u7c7b\u7684\u7279\u5316\u4fe1\u606f(\u5373\u5207\u5272\u95ee\u9898)\uff0c\u9009\u62e9pass-by-reference\u4f20\u9012\u53c2\u6570\u5219\u53ef\u4ee5\u907f\u514dsliceing(\u4e5f\u5c31\u662f\u552f\u6709\u4ee5\u57fa\u7c7b\u7684\u6307\u9488\u548c\u5f15\u7528\u624d\u80fd\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u6982\u5ff5)\u3002 \u2003 \u5bf9\u4e8e\u5185\u7f6e\u7c7b\u578b\u548cSTL\u7684\u8fed\u4ee3\u5668\u4ee5\u53ca\u51fd\u6570\u5bf9\u8c61\u800c\u8a00\uff0cpass-by-value\u5f80\u5f80\u66f4\u9002\u5f53 \u3002 21\u3001\u5fc5\u987b\u8fd4\u56de\u5bf9\u8c61\u65f6\uff0c\u4e0d\u8981\u8bd5\u56fe\u8fd4\u56dereference \u2003\u4e0d\u5141\u8bb8\u51fd\u6570\u8fd4\u56de\u4e00\u4e2areference\u6216pointer\u6307\u5411local object\u3002(local object\u5728\u6808\u7a7a\u95f4\u4e2d\u521b\u5efa\uff0c\u51fd\u6570\u8fd4\u56de\u65f6\u4f1a\u9500\u6bc1\u6808\u7a7a\u95f4) \u2003\u5982\u679c\u5728\u51fd\u6570\u5185\u901a\u8fc7new\u5728heap\u5185\u521b\u5efa\u4e00\u4e2aobject\uff0c\u867d\u7136\u53ef\u4ee5\u8fd4\u56de\u5176\u5f15\u7528\uff0c\u4f46\u5374\u4e0d\u6613\u88ab\u4eba\u53d1\u89c9\u9700\u8981delete\uff0c\u4ece\u800c\u53d1\u751f\u5185\u5b58\u6cc4\u6f0f\uff0c\u8fd9\u79cd\u505a\u6cd5\u4e5f\u8981\u907f\u514d\u3002 22\u3001\u5c06\u6210\u5458\u53d8\u91cf\u58f0\u660e\u4e3aprivate \u2003\u4ece\u5c01\u88c5\u89d2\u5ea6\u770b\uff0c\u53ea\u6709\u4e24\u79cd\u8bbf\u95ee\u6743\u9650:private(\u63d0\u4f9b\u5c01\u88c5)\u548c\u5176\u4ed6(\u4e0d\u63d0\u4f9b\u5c01\u88c5\uff0cprotected\u5e76\u4e0d\u6bd4public\u66f4\u5177\u5c01\u88c5\u6027\uff0c\u5176\u4f1a\u5f71\u54cdderived class)\u3002 \u2003\u5c01\u88c5\u6210\u5458\u53d8\u91cf\uff0c\u53ef\u4ee5\u786e\u4fddclass\u7684\u7ea6\u675f\u6761\u4ef6\u603b\u662f\u5f97\u5230\u7ef4\u62a4\uff0c\u53ea\u6709\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u5f71\u54cd\u5b83\u4eec\u3002 \u2003\u88ab\u5c01\u88c5\u7684\u4e1c\u897f\u610f\u5473\u7740\u4fee\u6539\u8fd9\u90e8\u5206\u4e5f\u66f4\u5bb9\u6613\uff0c\u56e0\u4e3a\u5916\u754c\u53ea\u80fd\u901a\u8fc7\u6709\u9650\u7684\u51fd\u6570\u6765\u8bbf\u95ee\uff1b\u800c\u90a3\u4e9b\u6ca1\u6709\u88ab\u5c01\u88c5\u7684\u4e1c\u897f\uff0c\u5916\u754c\u53ef\u4ee5\u968f\u610f\u8bbf\u95ee\u3001\u4fee\u6539\uff0c\u5bf9\u4e8e\u8bbe\u8ba1\u8005\u6765\u8bf4\uff0c\u4e0d\u80fd\u8f7b\u6613\u4fee\u6539\uff0c\u5426\u5219\u4f1a\u9020\u6210\u65e7\u7248\u672c\u4e0d\u80fd\u517c\u5bb9\u3002 23\u3001Prefer non-member non-friend functions to member functions \u2003\u57fa\u4e8e22\u5219\u7b2c\u4e09\u70b9\u7684\u539f\u56e0\uff0c\u5728\u5b9e\u73b0\u76f8\u540c\u529f\u80fd\u7684\u524d\u63d0\u4e0b\uff0cnon-member non-friend funtion\u76f8\u6bd4member function\u6709\u66f4\u5927\u7684\u5c01\u88c5\u6027\uff0c\u5b83\u65e0\u6cd5\u8bbf\u95eeclass\u5185private\u90e8\u5206\uff0c\u6545\u524d\u8005\u4e5f\u66f4\u53d7\u8bbe\u8ba1\u8005\u6b22\u8fce\u3002 24\u3001\u82e5\u6240\u6709\u53c2\u6570\u7686\u987b\u7c7b\u578b\u8f6c\u6362\uff0c\u8bf7\u4e3a\u6b64\u91c7\u7528non-member function; \u2003\u5982\u679c\u9700\u8981\u4e3a\u67d0\u4e2a\u51fd\u6570\u7684\u6240\u6709\u53c2\u6570(\u5305\u62ecthis\u6307\u9488\u6240\u6307\u7684\u9690\u55bb\u53c2\u6570)\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c\u5219\u8fd9\u4e2a\u51fd\u6570\u6700\u597d\u662fnon-member function\u3002 25\u3001\u8003\u8651\u5199\u51fa\u4e00\u4e2a\u4e0d\u629b\u5f02\u5e38\u7684swap\u51fd\u6570 \u2003std\u63d0\u4f9b\u7684\u7f3a\u7701swap\u51fd\u6570\uff0c\u5728\u5904\u7406\u5305\u542b\u6307\u9488\u6210\u5458\u7684\u5bf9\u8c61\u65f6\uff0c\u8fd9\u79cd\u9ed8\u8ba4\u64cd\u4f5c\u5c06\u663e\u5f97\u5197\u4f59 \u2003\u5bf9\u4e8e\u5185\u542b\u6307\u9488\u6210\u5458\u7684\u7c7b\uff0c\u53ef\u4ee5\u5982\u4e0b\u5f62\u5f0f\uff0c\u8bbe\u8ba1swap\u51fd\u6570\u3002","title":"design and declarations"},{"location":"CPP/EffectiveCPPRule/#implementation","text":"26\u3001\u5c3d\u53ef\u80fd\u5ef6\u540e\u53d8\u91cf\u5b9a\u4e49\u5f0f\u7684\u51fa\u73b0\u65f6\u95f4 \u2003\u5ef6\u540e\u53d8\u91cf\u7684\u5b9a\u4e49\uff0c\u76f4\u5230\u975e\u5f97\u4f7f\u7528\u53d8\u91cf\u7684\u524d\u4e00\u523b\u4e3a\u6b62\uff0c\u751a\u81f3\u8fdb\u4e00\u6b65\u5ef6\u8fdf\u5230\u8fd9\u4efd\u5b9a\u4e49\u80fd\u591f\u83b7\u5f97\u521d\u503c\u5b9e\u53c2\u4e3a\u6b62\uff1b\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86 \u907f\u514d\u6784\u9020\u548c\u6790\u6784\u975e\u5fc5\u8981\u5bf9\u8c61\uff0c\u8fd8\u53ef\u4ee5\u907f\u514d\u65e0\u610f\u4e49\u7684default\u6784\u9020\u884c\u4e3a \u3002 \u2003\u5bf9\u4e8e\u53ea\u5728\u5faa\u73af\u4f53\u5185\u4f7f\u7528\u7684\u53d8\u91cf\uff0c\u5982\u679c\u5176\u7c7b\u578b\u7684\u6784\u9020\u548c\u6790\u6784\u6210\u672c \u5927\u4e8e \u8d4b\u503c\u6210\u672c\uff0c\u5219\u5728\u5faa\u73af\u4f53\u5916\u5b9a\u4e49\uff0c\u53cd\u4e4b\u5728\u5faa\u73af\u5185\u5b9a\u4e49\u3002 27\u3001\u5c3d\u91cf\u5c11\u505a\u8f6c\u578b\u52a8\u4f5c 28\u3001\u907f\u514d\u8fd4\u56dehandles\u6307\u5411\u5bf9\u8c61\u5185\u90e8\u6210\u5206 \u2003\u907f\u514d\u8fd4\u56dehandles(\u5305\u62ecreference\u3001\u6307\u9488\u3001\u8fed\u4ee3\u5668)\u6307\u5411\u5bf9\u8c61\u5185\u90e8\uff0c\u56e0\u4e3a\u65e0\u8bba\u8fd9\u4e2ahandle\u662f\u5426\u6709const\uff0c\u4e5f\u4e0d\u8bba\u8fd4\u56de\u5176\u7684\u51fd\u6570\u662f\u5426\u4e3aconst\uff0c\u90fd\u6709\u53ef\u80fd \u9020\u6210handle\u6bd4\u5176\u6240\u6307\u5411\u5bf9\u8c61\u5bff\u547d\u66f4\u957f\u7684\u98ce\u9669 \uff0c\u4f8b\u5982\u6307\u5411\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\u7684\u5185\u90e8\uff0c\u800chandle\u5374\u88ab\u4fdd\u5b58\u4e3a\u957f\u671f\u5bf9\u8c61\u3002 \u2003\u4e0d\u8fc7\u5bf9\u4e8e\u4e00\u4e9b\u91cd\u8f7doperator[]\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u901a\u8fc7\u8fd4\u56de\u5f15\u7528\uff0c\u6765\u76f4\u63a5\u4fee\u6539\u5176\u5185\u90e8\u5bf9\u8c61\uff1b\u9664\u6b64\u4e4b\u5916\uff0c\u5e94\u8c28\u614e\u8fd4\u56de\u6307\u5411\u5bf9\u8c61\u5185\u90e8\u7684handles\u3002 29\u3001\u4e3a\u5f02\u5e38\u5b89\u5168\u800c\u52aa\u529b\u662f\u503c\u5f97\u7684 \u5f53\u5f02\u5e38\u88ab\u629b\u51fa\u65f6\uff0c\u5f02\u5e38\u5b89\u5168\u51fd\u6570\u5373\u4f7f\u53d1\u751f\u5f02\u5e38\u4e5f\u4e0d\u4f1a\u6cc4\u6f0f\u4efb\u4f55\u8d44\u6e90\u6216\u5141\u8bb8\u4efb\u4f55\u6570\u636e\u8d25\u574f\uff0c\u8fd9\u6837\u7684\u51fd\u6570\u533a\u5206\u4e09\u79cd\u53ef\u80fd\u7684\u4fdd\u8bc1: \u57fa\u672c\u627f\u8bfa : \u5982\u679c\u5f02\u5e38\u88ab\u629b\u51fa\uff0c\u7a0b\u5e8f\u5185\u7684\u4efb\u4f55\u4e8b\u7269\u4ecd\u7136\u4fdd\u6301\u5728\u6709\u6548\u72b6\u6001\u4e0b\uff0c\u6ca1\u6709\u4efb\u4f55\u5bf9\u8c61\u6216\u8005\u6570\u636e\u7ed3\u6784\u4f1a\u56e0\u6b64\u800c\u8d25\u574f\uff1b\u4f46\u7a0b\u5e8f\u7684exact state\u4e0d\u53ef\u9884\u6599\u3002 \u5f3a\u70c8\u4fdd\u8bc1 \uff1a\u5982\u679c\u5f02\u5e38\u88ab\u629b\u51fa\uff0c\u7a0b\u5e8f\u72b6\u6001\u4e0d\u6539\u53d8\uff0c\u5373\u51fd\u6570\u6210\u529f\u5c31\u662f\u5b8c\u5168\u6210\u529f\uff1b\u51fd\u6570\u5931\u8d25\uff0c\u7a0b\u5e8f\u5c31\u56de\u590d\u5230\u8c03\u7528\u51fd\u6570\u4e4b\u524d\u7684\u72b6\u6001\u3002 \u2003\u901a\u5e38\u60c5\u51b5\uff0ccopy-and-swap\u7b56\u7565\u662f\u4e00\u79cd\u597d\u7684\u505a\u6cd5\uff1a\u4e3a\u6253\u7b97\u4fee\u6539\u7684\u5bf9\u8c61(\u539f\u4ef6)\u505a\u51fa\u4e00\u4efd\u526f\u672c\uff0c\u7136\u540e\u5728\u526f\u672c\u4e0a\u505a\u4e00\u5207\u4fee\u6539\u3002\u82e5\u4fee\u6539\u8fc7\u7a0b\u629b\u51fa\u5f02\u5e38\uff0c\u539f\u5bf9\u8c61\u4ecd\u4fdd\u6301\u672a\u6539\u53d8\u72b6\u6001\uff1b\u5f85\u6240\u6709\u4fee\u6539\u6210\u529f\u540e\uff0c\u518d\u5c06\u526f\u672c\u548c\u539f\u4ef6\u5728\u4e00\u4e2a\u4e0d\u629b\u51fa\u5f02\u5e38\u7684\u64cd\u4f5c\u4e2dswap\u3002 \u2003\u7531\u4e8e\u51fd\u6570\u63d0\u4f9b\u7684\u5f02\u5e38\u5b89\u5168\u4fdd\u8bc1\u53d6\u51b3\u4e8e\u5176\u6240\u8c03\u7528\u7684\u5404\u4e2a\u51fd\u6570\u4e2d\u5f02\u5e38\u5b89\u5168\u4fdd\u8bc1\u6700\u4f4e\u8005\uff0c\u56e0\u6b64\u5373\u4f7f\u91c7\u7528copy-and-swap\uff0c\u4f9d\u65e7\u65e0\u6cd5\u4fdd\u8bc1\u6574\u4e2a\u51fd\u6570\u6709\u5f3a\u70c8\u7684\u5f02\u5e38\u5b89\u5168\u6027\uff1b \u4e14\u505a\u51fa\u4e00\u4efd\u526f\u672c\u9700\u8981\u989d\u5916\u7684\u8017\u65f6\u548c\u7a7a\u95f4\u6d88\u8017\u3002 \u2003\u56e0\u6b64\u5f3a\u70c8\u4fdd\u8bc1\u5e76\u975e\u5bf9\u6240\u6709\u51fd\u6570\u90fd\u53ef\u5b9e\u73b0\u6216\u5177\u5907\u73b0\u5b9e\u610f\u4e49\u3002 nothrow \u4fdd\u8bc1 \uff1a\u627f\u8bfa\u7edd\u4e0d\u629b\u51fa\u5f02\u5e38\uff0c\u603b\u662f\u80fd\u5b8c\u6210\u5b83\u4eec\u539f\u5148\u627f\u8bfa\u7684\u529f\u80fd\uff0c\u4f8b\u5982\u5185\u7f6e\u7c7b\u578b\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u63d0\u4f9bnothrow\u4fdd\u8bc1\u3002 30\u3001understanding the ins and outs of inlining 31\u3001\u5c06\u6587\u4ef6\u95f4\u7684\u7f16\u8bd1\u4f9d\u5b58\u5173\u7cfb\u964d\u81f3\u6700\u4f4e \u2003\u5982\u679cclass A\u7684\u5b9a\u4e49\u6587\u4ef6\u4e2d\u5305\u542b\u4e86\u4e00\u7cfb\u5217\u5176\u4ed6\u7c7b\u578b\u7684\u5b9a\u4e49\u5f0f(\u901a\u8fc7include\u5b9e\u73b0)\uff0c\u5219\u5f53\u90a3\u4e9b\u7c7b\u578b\u53d1\u9001\u6539\u53d8\u65f6\uff0c\u5e76\u91cd\u65b0\u7f16\u8bd1\u65f6\uff0c\u6b64\u65f6\u6240\u6709\u5305\u542bA\u7684\u5b9a\u4e49\u5f0f\u7684\u6587\u4ef6\u90fd\u5c06\u91cd\u65b0\u7f16\u8bd1\uff0c\u8fd9\u5373\u662f\u8fde\u4e32\u7f16\u8bd1\u4f9d\u5b58\u5173\u7cfb\u3002 \u2003 \u5c3d\u91cf\u4ee5class\u58f0\u660e\u5f0f\u66ff\u6362class\u5b9a\u4e49\u5f0f \uff0c\u5e76\u4e14\u53ea\u4f9d\u9760class \u58f0\u660e\u5f0f\u5c31\u80fd\u5b9a\u4e49\u51fa\u6307\u5411\u8be5\u7c7b\u578b\u7684reference\u6216pointer; \u5982\u679c\u5b9a\u4e49\u67d0\u7c7b\u578b\u7684objects\uff0c\u5c31\u5fc5\u987b\u7528\u5230\u5176\u5b9a\u4e49\u5f0f\u3002\u4ee5\u58f0\u660e\u4f9d\u5b58\u6027\u4ee3\u66ff\u5b9a\u4e49\u4f9d\u5b58\u6027\uff0c\u53ef\u4ee5\u6539\u5584\u524d\u8ff0\u95ee\u9898\u3002 \u2003\u8fdb\u4e00\u6b65\u53ef\u4ee5\u4e3a\u58f0\u660e\u5f0f\u548c\u5b9a\u4e49\u5f0f\u63d0\u4f9b\u4e0d\u540c\u7684\u5934\u6587\u4ef6\uff1b\u5e76\u4e14\u901a\u8fc7handle class\u548cinterface class\u6765\u964d\u4f4e\u63a5\u53e3\u548c\u5b9e\u73b0\u95f4\u7684\u8026\u5408\uff0c\u4ece\u800c\u964d\u4f4e\u6587\u4ef6\u95f4\u7684\u7f16\u8bd1\u4f9d\u5b58\u6027\u3002 \u2003 handle class \u7684\u505a\u6cd5\u662f\uff1aA\u53ea\u63d0\u4f9b\u63a5\u53e3\uff0cB\u8d1f\u8d23\u5b9e\u73b0\u63a5\u53e3\uff0cA\u5305\u542b\u4e00\u4e2a\u6307\u5411B\u7c7b\u578b\u7684\u6307\u9488pImpl(pointer to implementation), \u901a\u8fc7pImpl\u6765\u8c03\u7528B\u4e2d\u5b9e\u73b0\u597d\u7684\u63a5\u53e3\uff1b\u8fd9\u6837A\u7684\u7528\u6237\u5c31\u4e0e\u5176\u5305\u542b\u7684\u989d\u5916\u7684classes\u7684\u5b9e\u73b0\u76f8\u5206\u79bb\uff0c\u90a3\u4e9bclasses\u7684\u4fee\u6539\u4e5f\u4e0d\u4f1a\u9700\u8981A\u7684\u5ba2\u6237\u7aef\u91cd\u65b0\u7f16\u8bd1\u3002 \u2003 interface class \u7684\u505a\u6cd5\u662f\uff1a\u4ee4A\u6210\u4e3a\u4e00\u79cd\u7279\u6b8a\u7684abstract class, \u53ea\u6709\u4e00\u4e2avirtual \u6790\u6784\u51fd\u6570\uff0c\u548c\u4e00\u7ec4\u7eaf\u865a\u51fd\u6570\uff0c\u7528\u4ee5\u63cf\u8ff0\u51fd\u6570\u63a5\u53e3\uff1b\u5e76\u4e14\u5bf9\u4e8e\u6d3e\u751f\u4f53\u7cfb\u5185\u5168\u90e8\u90fd\u76f8\u540c\u7684\u505a\u6cd5\uff0c\u53ef\u4ee5\u8ba9\u5176\u6210\u4e3ainterface class\u4e2dnon-virtual\u51fd\u6570\uff0c\u6d3e\u751f\u7c7b\u5171\u540c\u4f7f\u7528\u8fd9\u4e00\u4efd\u51fd\u6570\u3002 \u2003\u4e0a\u8ff0\u505a\u6cd5\u7684\u7f3a\u70b9\uff0c\u5373\u4e3a\u6bcf\u4e00\u6b21\u8bbf\u95ee\u589e\u52a0\u4e86\u4e00\u5c42\u95f4\u63a5\u6027\uff0c\u5982\u901a\u8fc7pImpl\u6216\u8005\u865a\u51fd\u6570\u8868\uff0c\u8fd9\u90fd\u4f1a\u5e26\u6765\u989d\u5916\u7684\u5f00\u9500\uff0c\u540c\u65f6pImpl\u662f\u901a\u8fc7\u52a8\u6001\u5206\u914d\u5f97\u5230\u7684\uff0c\u9700\u8981\u8003\u8651bad_alloc\u5f02\u5e38\u7684\u53ef\u80fd\u6027\u3002 32\u3001make sure public inheritance model \"is-a\" \u2003public\u7ee7\u627f \u4e3b\u5f20\u80fd\u591f\u65bd\u884c\u4e8ebase class\u5bf9\u8c61\u8eab\u4e0a\u7684\u6bcf\u4ef6\u4e8b\u60c5\uff0c\u4e5f\u53ef\u4ee5\u65bd\u884c\u4e8ederived class\u5bf9\u8c61\u8eab\u4e0a\uff1b\u8ba9\u7c7bA\u4ee5pulic inherit\u5f62\u5f0f\u7ee7\u627f\u7c7bB\uff0c\u9700\u8981\u786e\u4fdd A \u201cis a\u201d B, \u4e14\u5bf9\u4e8eB\u5bf9\u8c61\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u80fd\u65bd\u52a0\u5230A\u5bf9\u8c61\u4e0a\u3002 33\u3001\u907f\u514dhiding\u7ee7\u627f\u800c\u6765\u7684name \u2003\u53ef\u53c2\u8003c_base\u4e2d\u7684\u91cd\u8f7d/\u8986\u76d6/\u9690\u85cf/using\u3002 34\u3001\u533a\u5206\u63a5\u53e3\u7ee7\u627f\u548c\u5b9e\u73b0\u7ee7\u627f \u2003\u58f0\u660e\u4e00\u4e2apure virtual function\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u8ba9derived class\u53ea\u7ee7\u627f\u51fd\u6570\u63a5\u53e3\uff1b\u4e00\u822c\u60c5\u51b5\u4e0b\u57fa\u7c7b\u4e2d\u7eaf\u865a\u4e0d\u9700\u8981\u5b9a\u4e49\uff0c\u4f46\u5176\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u5b9a\u4e49\uff0c\u4f5c\u4e3a\u7f3a\u7701\u5b9e\u73b0\uff1b\u6b64\u65f6\u6d3e\u751f\u7c7b\u5982\u679c\u8986\u76d6\u8fd9\u4e2a\u7eaf\u865a\u51fd\u6570\uff0c\u53ef\u4ee5\u63d0\u4f9b\u81ea\u5df1\u7684\u5b9e\u73b0\uff0c\u6216\u8005\u901a\u8fc7Base::fun(args)\u5f62\u5f0f\u76f4\u63a5\u8c03\u7528\u7eaf\u865a\u51fd\u6570\u7684\u5b9e\u73b0\uff1b\u5982\u679c\u6d3e\u751f\u7c7b\u4e0d\u63d0\u4f9bfun\u7684\u5b9e\u73b0\uff0c\u5219\u4e0d\u4f1a\u901a\u8fc7\u7f16\u8bd1\uff0c\u56e0\u4e3afun\u4e3a\u4e00\u4e2apure virtual function\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u907f\u514d\u5982\u679cfcn\u662f\u666e\u901a\u865a\u51fd\u6570\uff0c\u4f46\u4e0d\u540c\u7684\u6d3e\u751f\u7c7b\u8981\u6c42\u7684\u7f3a\u7701\u5b9e\u73b0\u4e0d\u540c\uff0c\u6240\u4ee5\u5982\u679c\u6d3e\u751f\u7c7b\u60f3\u8981\u57fa\u7c7b\u4e2d\u7684\u7f3a\u7701\u5b9e\u73b0\uff0c\u5fc5\u987b\u4e3b\u52a8\u63d0\u51fa\uff0c\u5426\u5219\u5c31\u91cd\u65b0\u5b9e\u73b0\u3002 \u2003\u58f0\u660e\u4e00\u4e2a\u666e\u901a\u865a\u51fd\u6570\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u8ba9derived class\u7ee7\u627f\u51fd\u6570\u7684\u63a5\u53e3\u548c\u7f3a\u7701\u5b9e\u73b0\u3002 \u2003\u58f0\u660e\u4e00\u4e2a\u666e\u901a\u975e\u865a\u51fd\u6570\uff0c\u610f\u5473\u7740derived class\u4e2d\u7ee7\u627f\u51fd\u6570\u7684\u63a5\u53e3\uff0c\u540c\u65f6\u63d0\u4f9b\u4e00\u4efd\u5f3a\u5236\u7684\u5b9e\u73b0\uff0c\u5373\u671f\u671b\u4e0d\u540c\u7684\u6d3e\u751f\u7c7b\u5bf9\u8c61\u6709\u76f8\u540c\u7684\u884c\u4e3a\uff1b\u5982\u679c\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u58f0\u660e\u4e86\u4e00\u4e2a\u4e0e\u6b64\u540c\u540d\u7684\u51fd\u6570\uff0c\u5219\u65e0\u8bba\u53c2\u6570\u662f\u5426\u76f8\u540c\uff0c\u57fa\u7c7b\u4e2d\u7684\u7248\u672c\u90fd\u5c06\u88ab\u9690\u85cf\u3002 35\u3001\u8003\u8651\u865a\u51fd\u6570\u4ee5\u5916\u7684\u5176\u4ed6\u9009\u62e9 36\u3001\u7edd\u4e0d\u91cd\u65b0\u5b9a\u4e49\u7ee7\u627f\u800c\u6765\u7684non-virtual\u51fd\u6570 \u2003\u5982\u679c\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\uff0c\u5219\u5c06\u8be5\u51fd\u6570\u58f0\u660e\u4e3avirtual function\u3002 37\u3001\u7edd\u4e0d\u91cd\u65b0\u5b9a\u4e49\u7ee7\u627f\u800c\u6765\u7684\u7f3a\u7701\u53c2\u6570\u503c \u56e0\u4e3a\u7f3a\u7701\u53c2\u6570\u503c\u90fd\u662f\u9759\u6001\u7ed1\u5b9a\uff0c\u5728\u4f7f\u7528\u591a\u6001\u65f6(\u6307\u901a\u8fc7pointer\u6216reference\u6765\u8bbf\u95ee\u6d3e\u751f\u7c7b\u5bf9\u8c61)\uff0c\u91cd\u65b0\u5b9a\u4e49\u7ee7\u627f\u800c\u6765\u7684\u865a\u51fd\u6570\u4e2d\u7684\u7f3a\u7701\u53c2\u6570\uff0c\u901a\u5e38\u4e0d\u4f1a\u6709\u5982\u671f\u884c\u4e3a\u53d1\u751f\uff0c\u5b9e\u9645\u4f7f\u7528\u7684\u4f9d\u65e7\u662f\u57fa\u7c7b\u63d0\u4f9b\u7684\u7f3a\u7701\u53c2\u6570\u503c\u3002 38\u3001 Model \"has-a\" or \"is-implemented-in-terms-of\" through composition \u2003\u590d\u5408(composition) \u662f\u7c7b\u578b\u4e4b\u95f4\u7684\u4e00\u79cd\u5173\u7cfb\uff0c\u5f53\u67d0\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\u5305\u542b\u5176\u4ed6\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u4fbf\u662f\u8fd9\u79cd\u5173\u7cfb\u3002 39\u3001\u8c28\u614e\u4f7f\u7528private \u7ee7\u627f private \u7ee7\u627f\u610f\u5473\u7740implemented-in-terms-of(\u6839\u636e\u67d0\u7269\u5b9e\u73b0\u51fa)\uff0c\u5373\u6d3e\u751f\u7c7b\u4e0e\u57fa\u7c7b\u5e76\u4e0d\u5b58\u5728is-a\u7684\u5173\u7cfb\u3002 \u2003\u5f53\u4f60\u9762\u5bf9\u5e76\u4e0d\u5b58\u5728is-a\u5173\u7cfb\u7684\u4e24\u4e2aclasses\uff0c\u5176\u4e2d\u4e00\u4e2a\u9700\u8981\u8bbf\u95ee\u53e6\u4e00\u4e2aprotected\u6210\u5458\uff0c\u6216\u8005\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u5176\u4e00\u6216\u591a\u4e2avirtual\u51fd\u6570\uff0c\u53ef\u4ee5\u8003\u8651private\u7ee7\u627f\u3002 40\u3001\u8c28\u614e\u4f7f\u7528\u591a\u91cd\u7ee7\u627f","title":"implementation"},{"location":"CPP/EffectiveCPPRule/#templates-and-generic-programming","text":"41\u3001\u4e86\u89e3\u9690\u5f0f\u63a5\u53e3\u548c\u7f16\u8bd1\u671f\u591a\u6001 \u2003\u7f16\u8bd1\u5668\u591a\u6001\uff1a\u4ee5\u4e0d\u540c\u7684template\u53c2\u6570\u5177\u73b0\u5316function templates \u4f1a\u5bfc\u81f4\u8c03\u7528\u4e0d\u540c\u7684\u51fd\u6570\uff0c\u548c\u91cd\u8f7d\u7c7b\u4f3c\uff0c\u90fd\u662f\u7f16\u8bd1\u5668\u7ed1\u5b9a\uff1b \u2003\u8fd0\u884c\u671f\u591a\u6001: \u8fd0\u884c\u671f\u6839\u636e\u53c2\u6570\u7684\u52a8\u6001\u7c7b\u578b\u51b3\u5b9a\u52a8\u6001\u7ed1\u5b9a\u54ea\u4e00\u4e2a\u865a\u51fd\u6570\u3002 42\u3001understand the two meanings of typename 43\u3001\u5b66\u4e60\u5904\u7406\u6a21\u677f\u5316\u57fa\u7c7b\u5185\u7684\u540d\u79f0 \u5bf9\u4e8e\u4e00\u4e2a\u7ee7\u627ftemplatized base class\u7684\u6d3e\u751f\u6a21\u677f\u7c7b\uff0c\u5982\u679c\u76f4\u63a5\u5728\u5176\u5185\u90e8\u8c03\u7528\u57fa\u7c7b\u4e2d\u7684public \u6210\u5458\u51fd\u6570\uff0c\u5e76\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\uff1b \u56e0\u4e3a\u7f16\u8bd1\u5668\u77e5\u9053base class template\u6709\u53ef\u80fd\u4f1a\u88ab\u7279\u5316\uff0c\u800c\u7279\u5316\u7248\u672c\u53ef\u80fd\u4e0d\u63d0\u4f9b\u548c\u4e00\u822c\u6027template\u76f8\u540c\u7684\u63a5\u53e3\u3002\u56e0\u6b64\u5b83\u62d2\u7edd\u5728templatized base class\u5185\u5bfb\u627e\u7ee7\u627f\u800c\u6765\u7684\u540d\u79f0\u3002 \u2003\u53ef\u5728derived class templates\u901a\u8fc7 this-> \u6307\u6d89base class templates\u5185\u7684\u6210\u5458\u540d\u79f0\uff0c\u6216\u4f7f\u7528using \u58f0\u660e\u5f0f\uff1b\u6216\u660e\u767d\u6307\u51fa\u88ab\u8c03\u7528\u7684\u51fd\u6570\u4f4d\u4e8ebase class\u5185\u3002 \u2003\u5982\u679c\u63d0\u4f9b\u4e00\u4e2a\u6ca1\u6709sendClear\u63a5\u53e3\u7684\u7279\u5316\u7248\u672c\uff0c\u5c06\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\u3002 template<typename company> class LoggingMsgSender:: public MsgSender<company>{ public: using MsgSender<company>::sendClear; //\u660e\u786e\u544a\u8bc9\u7f16\u8bd1\u5668\u51fd\u6570\u4f4d\u4e8ebase class\u5185 void sendClearMsg(const MsgInfo& info){ ... this->sendClear(info); //\u5047\u8bbesendClear\u88ab\u7ee7\u627f // MsgSender::sendClear(info); //\u8fd9\u79cd\u60c5\u51b5\u4f1a\u7834\u574fvirtual\u7ed1\u5b9a\u884c\u4e3a ... } } 44\u3001\u5c06\u4e0e\u53c2\u6570\u65e0\u5173\u7684\u4ee3\u7801\u5265\u79bbtemplates 45\u3001\u8fd0\u7528\u6210\u5458\u51fd\u6570\u6a21\u677f\u63a5\u53d7\u6240\u6709\u517c\u5bb9\u7c7b\u578b \u2003\u4e00\u4e2atemplate class\u63a5\u53d7\u4e0d\u540c\u7c7b\u578b\u53c2\u6570\u5f97\u5230\u7684\u5b9e\u4f8b\u4e4b\u95f4\u5e76\u4e0d\u5b58\u5728\u56fa\u6709\u5173\u7cfb\uff0c\u5373\u4f7f\u8fd9\u4e9b\u7c7b\u578b\u4e4b\u95f4\u672c\u8eab\u5b58\u5728\u7ee7\u627f\u5173\u7cfb\u3002 \u2003\u6784\u9020\u6a21\u677f: \u2003\u5bf9\u6784\u9020\u6a21\u677f\u65bd\u52a0\u7ea6\u675f: \u2003\u6210\u5458\u51fd\u6570\u6a21\u677f: 46\u3001\u9700\u8981\u7c7b\u578b\u8f6c\u6362\u65f6\u8bf7\u4e3a\u6a21\u677f\u5b9a\u4e49\u975e\u6210\u5458\u51fd\u6570 \u2003\u4e3a\u4e86\u8ba9\u7c7b\u578b\u8f6c\u6362\u53ef\u80fd\u53d1\u751f\u4e8e\u6240\u6709\u5b9e\u53c2\u4e0a\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2anon-member\u51fd\u6570(\u6761\u6b3e24); \u4e3a\u4e86\u4ee4\u8fd9\u4e2a\u51fd\u6570\u88ab\u81ea\u52a8\u5177\u73b0\u5316\uff0c\u6211\u4eec\u9700\u8981\u5c06\u5b83\u58f0\u660e\u5728class\u5185\u90e8\uff0c\u5373\u4ee4\u5b83\u6210\u4e3a\u4e00\u4e2afriend\u51fd\u6570\u3002 \u2003\u5982\u679c\u8fd9\u4e2anon-member\u51fd\u6570\u5b9a\u4e49\u5728class\u5916\u90e8\uff0c\u5219\u5bf9\u4e8e\u53ef\u80fd\u53d1\u751f\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u8c03\u7528\u76f8\u5173\u51fd\u6570\u5e76\u4e0d\u80fd\u6210\u529f\uff1b\u56e0\u4e3atemplate\u5b9e\u53c2\u63a8\u5bfc\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u4f1a\u8003\u8651\u9690\u5f0f\u8f6c\u6362\uff1b\u6240\u4ee5\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u5b9e\u53c2\u53d1\u751f\u9690\u5f0f\u8f6c\u6362\uff0c\u7f16\u8bd1\u5668\u5e76\u4e0d\u80fd\u51c6\u786e\u77e5\u9053\u5e94\u8be5\u5177\u73b0\u5316\u54ea\u4e2a\u51fd\u6570\u3002 47\u3001\u4f7f\u7528traits classes\u8868\u73b0\u7c7b\u578b\u4fe1\u606f \u2003 typedef typename iterator_traits ::value_type valType; 48\u3001\u8ba4\u8bc6\u6a21\u677f\u5143\u7f16\u7a0b","title":"templates and generic programming"},{"location":"CPP/EffectiveCPPRule/#customizing-new-and-delete","text":"49\u3001undertand the behavior of the new handler \u5f53operator new\u629b\u51fa\u5f02\u5e38\u4ee5\u53cd\u6620\u4e00\u4e2a\u672a\u83b7\u6ee1\u8db3\u7684\u5185\u5b58\u9700\u6c42\u4e4b\u524d\uff0c\u5b83\u4f1a\u5148\u8c03\u7528\u4e00\u4e2a\u5ba2\u6237\u6307\u5b9a\u7684\u9519\u8bef\u5904\u7406\u51fd\u6570\uff0c\u5373\u4e00\u4e2anew-handler\u3002 \u4e00\u4e2a\u8bbe\u8ba1\u826f\u597d\u7684handler\u5fc5\u987b\u5305\u542b: \u8ba9\u66f4\u591a\u5185\u5b58\u53ef\u7528\u3001\u5b89\u88c5\u53e6\u4e00\u4e2anew-handler(\u65e0\u9650\u5faa\u73af)\u3001\u5378\u8f7dnew-handler(\u5c06null\u6307\u9488\u4f20\u7ed9set_new_handler)\u3001\u629b\u51fabad_alloc\u5f02\u5e38\u3001\u4e0d\u8fd4\u56de(\u8c03\u7528abort\u6216exit). 50\u3001\u4e86\u89e3new\u548cdelete\u7684\u5408\u7406\u66ff\u6362\u65f6\u95f4 51\u3001\u7f16\u5199new\u548cdelete\u65f6\u9700\u56fa\u5b88\u5e38\u89c4 52\u3001write placement delete if you write placement new","title":"customizing new and delete"},{"location":"CPP/EffectiveCPPRule/#_2","text":"53\u3001 \u4e0d\u7528\u5ffd\u7565\u7f16\u8bd1\u5668\u7684\u8b66\u544a 54\u3001\u719f\u6089\u5305\u62ecTR1\u5728\u5185\u7684\u6807\u51c6\u7a0b\u5e8f\u5e93 55\u3001\u719f\u6089Boost","title":"\u8865\u5145"},{"location":"CPP/callable/","text":"About Callble Object \u2003\u53ef\u8c03\u7528\u5bf9\u8c61\u7c7b\u578b\u5305\u62ec: \u51fd\u6570\u3001\u51fd\u6570\u6307\u9488\u3001lambda\u8868\u8fbe\u5f0f\u3001bind\u521b\u5efa\u7684\u5bf9\u8c61\u4ee5\u53ca\u91cd\u8f7d\u4e86\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u7684\u7c7b(function object)\u3002 \u2003 std::function : \u4e3a\u4e86\u5b58\u50a8\u4e00\u7cfb\u5217\u6709\u76f8\u540c\u8c03\u7528\u5f62\u5f0f\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\uff0c C++11 \u63d0\u4f9b\u4e86function\u6a21\u677f\u7c7b\uff0c \u521b\u5efafunction\u7c7b\u578b\u5bf9\u8c61\u65f6\uff0c\u6307\u5b9a\u8c03\u7528\u5f62\u5f0f\uff0c\u4f8b\u5982 function<int (int, int)> f=add; //add\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488 function<int (int, int)> f2=divide(); //\u4e00\u4e2a function object function<int (int, int)> f3= [](int i, int j) {return i*j;} //lambda\u8868\u8fbe\u5f0f function object \u63d0\u4f9b\u4e86 function call \u8fd0\u7b97\u7b26\u7684class, lambda \u2003C++ 11 introduces lambdas , allowing the definition of inline functionality, which can be used as a parameter or a local object. \u53ef\u8c03\u7528\u5bf9\u8c61, \u5176\u5f62\u5f0f\u4e3a\uff1a [\u6355\u83b7\u5217\u8868]\uff08\u53c2\u6570\u5217\u8868\uff09mutable opt throwSpec opt -> \u8fd4\u56de\u7c7b\u578b {\u51fd\u6570\u4f53}: \u2003\u6355\u83b7\u5217\u8868:lambda\u7684\u51fd\u6570\u4f53\u4e2d\u53ea\u80fd\u4f7f\u7528\u90a3\u4e9b\u5728\u6355\u83b7\u5217\u8868\u4e2d\u51fa\u73b0\u7684\u53d8\u91cf\u6216\u8005\u6240\u5728\u51fd\u6570\u4e2d\u7684\u9759\u6001\u53d8\u91cf\u6216\u8005\u5728\u6240\u5728\u51fd\u6570\u4e4b\u5916\u58f0\u660e\u7684\u5168\u5c40\u53d8\u91cf\u3002 \u2003\u53ef\u53d8lambda\uff0c\u5728\u53c2\u6570\u5217\u8868\u540e\u52a0\u4e0amutable\u5173\u952e\u5b57\uff0c\u8868\u660e\u53ef\u4ee5\u5728\u51fd\u6570\u4f53\u4e2d\u6539\u53d8\u6355\u83b7\u53d8\u91cf\u7684\u503c\uff1b\u56e0\u6b64\u6b64\u65f6\u53c2\u6570\u5217\u8868\u4e0d\u80fd\u7701\u7565\uff1b throwSpec\u5219\u662f\u5f02\u5e38\u629b\u51fa\u8868\u8fbe\u5f0f\u3002 \u2003\u5b9e\u9645\u4e2d\u53ef\u4ee5\u5ffd\u7565\"(\u53c2\u6570\u5217\u8868)\"\u4ee5\u53ca\"-> \u8fd4\u56de\u7c7b\u578b\"\uff0c\u4f46\u5fc5\u987b\u5305\u542b\u6355\u83b7\u5217\u8868\uff08\u53ef\u4ee5\u4e3a\u7a7a\uff09\u548c\u51fd\u6570\u4f53\u3002\u4f46\u5f53mutable\u6216throwSpec\u3001\u8fd4\u56de\u7c7b\u578b\u5b58\u5728\u65f6\uff0c\u5219\u4e0d\u80fd\u7701\u7565\"()\"\u3002 //the minimal lambda function []{ //do something } \u2003lambda\u7684\u53c2\u6570\u5217\u8868\u4e0d\u80fd\u6709\u9ed8\u8ba4\u53c2\u6570\u3002\u53c2\u6570\u662f\u5728lambda\u8c03\u7528\u65f6\u62f7\u8d1d\uff0c\u800c\u6355\u83b7\u5217\u8868\u4e2d\u7684\u53d8\u91cf\u5219\u662f\u5728\u521b\u5efa\u65f6\u62f7\u8d1d\u7684\u3002 \u5b9a\u4e49\u4e00\u4e2alambda\u672c\u8d28\u662f\u751f\u6210\u4e00\u4e2a\u4e0elambda\u5bf9\u5e94\u7684\u65b0\u7684\uff08\u533f\u540d\u7684\uff09\u7c7b\u7c7b\u578b( \u4f46\u5176\u5e76\u6ca1\u6709\u53ef\u88ab\u8c03\u7528\u7684\u6784\u9020\u51fd\u6570\u548cassignment operator ),\u56e0\u6b64\u4f20\u9012\u4e00\u4e2alambda\u5b9e\u9645\u4e0a\u662f\u4f20\u9012\u4e00\u4e2a\u7c7b\u5bf9\u8c61\uff0c\u6545\u4f7f\u7528auto\u5b9a\u4e49\u4e00\u4e2a\u7528lambda\u521d\u59cb\u5316\u7684\u53d8\u91cf\u65f6\uff0c\u4fbf\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4ecelambda\u751f\u6210\u7684\u7c7b\u578b\u7684\u5bf9\u8c61\u3002 \u2003\u9690\u5f0f\u6355\u83b7\uff1a\u5728\u6355\u83b7\u5217\u8868\u4e2d\u4f7f\u7528\u201c=\u201d\u3001\u201c&\u201d\u5206\u522b\u8868\u793a\u503c\u6355\u83b7\u548c\u5f15\u7528\u6355\u83b7; \u4e5f\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528\u9690\u5f0f\u6355\u83b7\u548c\u663e\u5f0f\u6355\u83b7\uff0c[=\uff0c &variable]\uff0c\u8868\u793a\u9664variable\u91c7\u7528\u5f15\u7528\u6355\u83b7\uff0c\u5176\u4f59\u53d8\u91cf\u91c7\u7528\u503c\u6355\u83b7; \u5bf9\u4e8e\u91c7\u7528\u503c\u6355\u83b7\u7684\u53d8\u91cf\uff0c\u6bcf\u4e2a\u5b9a\u4e49\u7684lambda\u5185\u5c06\u5b58\u5728\u4e00\u4e2a\u5355\u72ec\u7248\u672c\uff0c\u4ee5\u5b9a\u4e49\u65f6\u6355\u83b7\u7684\u53d8\u91cf\u503c\u8fdb\u884c\u521d\u59cb\u5316 \uff0c\u6b64\u540e\u6bcf\u6b21\u8c03\u7528\u8be5lambda object\uff0c\u5728\u6b64\u521d\u59cb\u503c\u57fa\u7840\u4e0a\u6539\u53d8\uff0c\u4e0d\u4f1a\u6539\u53d8\u539f\u6709\u53d8\u91cf\u3002 int id=0; auto f=[id]()mutable{ cout<<\"in lambda:\"<<id<<endl; id++; }; id = 22; f(); // in lambda:0 f(); // in lambda:1 f(); // in lambda:2 cout<<\"in main:\"<<id<<endl; // in main:22 \u2003\u6307\u5b9alambda\u8fd4\u56de\u7c7b\u578b\uff1a\u5982\u679clambda\u7684\u51fd\u6570\u4f53\u5305\u542b\u9664return\u4ee5\u5916\u7684\u5176\u4ed6\u8bed\u53e5\uff0c\u5219\u7f16\u8bd1\u5668\u5047\u5b9a\u8be5lambda\u8fd4\u56devoid\uff0c\u5373\u4e0d\u80fd\u8fd4\u56de\u503c\uff0c\u6b64\u65f6\u53ea\u80fd\u901a\u8fc7\u5c3e\u7f6e\u8fd4\u56de\u7c7b\u578b\u201c-> type\u201d\u6307\u5b9alambda\u7684\u8fd4\u56de\u7c7b\u578b\u3002 bind1st\u4e0ebind2nd \u2003\u4e24\u8005\u662f\u5c06\u4e8c\u5143\u51fd\u6570\u8f6c\u6362\u4e3a\u4e00\u5143\u51fd\u6570\uff0c\u5373\u5bf9\u4e0e\u67d0\u4e9b\u51fd\u6570\uff0c\u5176\u5305\u542b\u4e24\u4e2a\u53c2\u6570\uff0c\u901a\u8fc7bind1st\u53ef\u4ee5\u7ed1\u5b9a\u7b2c\u4e00\u4e2a\u53c2\u6570\u503c\uff0c\u901a\u8fc7bind2nd\u53ef\u4ee5\u7ed1\u5b9a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u503c\uff0c\u5219\u8be5\u51fd\u6570\u6b64\u65f6\u5373\u53ef\u89c6\u4e3a\u4e00\u5143\u51fd\u6570\uff0c\u53ef\u4ee5\u88ab\u7528\u4f5c\u5176\u4ed6\u9700\u8981\u4e00\u5143\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570\u7684\u53c2\u6570\u3002 eg. #include <iostream> #include <vector> #include <algorithm> #include <functional> using namespace std; int main() { vector<int> vec ; vec.push_back(40);vec.push_back(50); vec.push_back(60);vec.push_back(70); vec.push_back(80);vec.push_back(90); //\u7edf\u8ba1\u53ca\u683c\u4e2a\u6570 binder1st<less_equal<int>> binder1 = bind1st(less_equal<int>(),60); //==>binder1st(less,60); int nPassCnt = count_if(vec.begin(), vec.end(), binder1 ); //==>less_equal(60,x)==> 60 <= x //\u7edf\u8ba1\u4e0d\u53ca\u683c\u4e2a\u6570 binder2nd<less<int> > binder2 = bind2nd(less<int>(), 60); //==>binder2nd(less,60); int nFailCnt = count_if(vec.begin(), vec.end(), binder2 ); //==>less(x,60);==> x < 60 cout << \"nPassCnt:\" << nPassCnt << endl; cout << \"nFailCnt:\" << nFailCnt << endl; return 0; } \u2003\u65b0\u7248\u7248\u5df2\u7ecf\u5f03\u7528\u4e0a\u8ff0\u4e24\u4e2a\u51fd\u6570\uff0c\u6539\u7528bind\u3002 auto newCallable = bind(callable\uff0c arg_list) auto nf = bind(f, a, b, c, _1, _2); /*\u8868\u793a\u628anf\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9f\u7684\u7b2c4\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9f\u7684\u7b2c5\u4e2a\u53c2\u6570\uff0cf\u7684\u524d\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u7ed1\u5b9a\u4e86a\u3001b\u3001c.*/ \u2003_n\u5373\u5360\u4f4d\u7b26\uff0c\u5b9a\u4e49\u5728placeholder\u547d\u540d\u7a7a\u95f4\u91cc\uff08placeholder\u4e5f\u5b9a\u4e49\u5728std\u547d\u540d\u7a7a\u95f4\u4e2d\uff09\uff0c\u5176\u548cbind\u51fd\u6570\u90fd\u5b9a\u4e49\u5728functional\u5934\u6587\u4ef6\u4e2d\u3002 \u2003\u4f7f\u7528\u5360\u4f4d\u7b26\u524d\uff0c\u9700\u8981\u5bf9\u5e94\u7684\u58f0\u660e\uff0c using namespace std::placeholders; \u5bf9\u4e8e\u975e\u5360\u4f4d\u7b26\u7684\u53c2\u6570\u662f\u88ab\u62f7\u8d1d\u5230bind\u8fd4\u56de\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\u4e2d\u7684\uff0c\u56e0\u6b64\u90a3\u4e9b\u65e0\u6cd5\u62f7\u8d1d\u6216\u8005\u9700\u8981\u5f15\u7528\u4f20\u9012\u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u5e93\u7684ref\u51fd\u6570\uff0c\u5176\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5305\u542b\u7ed9\u5b9a\u7684\u5f15\u7528\uff0c\u4e14\u6b64\u5bf9\u8c61\u662f\u53ef\u4ee5\u62f7\u8d1d\u7684\u3002","title":"About Callble Object"},{"location":"CPP/callable/#about-callble-object","text":"\u53ef\u8c03\u7528\u5bf9\u8c61\u7c7b\u578b\u5305\u62ec: \u51fd\u6570\u3001\u51fd\u6570\u6307\u9488\u3001lambda\u8868\u8fbe\u5f0f\u3001bind\u521b\u5efa\u7684\u5bf9\u8c61\u4ee5\u53ca\u91cd\u8f7d\u4e86\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u7684\u7c7b(function object)\u3002 \u2003 std::function : \u4e3a\u4e86\u5b58\u50a8\u4e00\u7cfb\u5217\u6709\u76f8\u540c\u8c03\u7528\u5f62\u5f0f\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\uff0c C++11 \u63d0\u4f9b\u4e86function\u6a21\u677f\u7c7b\uff0c \u521b\u5efafunction\u7c7b\u578b\u5bf9\u8c61\u65f6\uff0c\u6307\u5b9a\u8c03\u7528\u5f62\u5f0f\uff0c\u4f8b\u5982 function<int (int, int)> f=add; //add\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488 function<int (int, int)> f2=divide(); //\u4e00\u4e2a function object function<int (int, int)> f3= [](int i, int j) {return i*j;} //lambda\u8868\u8fbe\u5f0f","title":"About Callble Object"},{"location":"CPP/callable/#function-object","text":"\u63d0\u4f9b\u4e86 function call \u8fd0\u7b97\u7b26\u7684class,","title":"function object"},{"location":"CPP/callable/#lambda","text":"C++ 11 introduces lambdas , allowing the definition of inline functionality, which can be used as a parameter or a local object. \u53ef\u8c03\u7528\u5bf9\u8c61, \u5176\u5f62\u5f0f\u4e3a\uff1a [\u6355\u83b7\u5217\u8868]\uff08\u53c2\u6570\u5217\u8868\uff09mutable opt throwSpec opt -> \u8fd4\u56de\u7c7b\u578b {\u51fd\u6570\u4f53}: \u2003\u6355\u83b7\u5217\u8868:lambda\u7684\u51fd\u6570\u4f53\u4e2d\u53ea\u80fd\u4f7f\u7528\u90a3\u4e9b\u5728\u6355\u83b7\u5217\u8868\u4e2d\u51fa\u73b0\u7684\u53d8\u91cf\u6216\u8005\u6240\u5728\u51fd\u6570\u4e2d\u7684\u9759\u6001\u53d8\u91cf\u6216\u8005\u5728\u6240\u5728\u51fd\u6570\u4e4b\u5916\u58f0\u660e\u7684\u5168\u5c40\u53d8\u91cf\u3002 \u2003\u53ef\u53d8lambda\uff0c\u5728\u53c2\u6570\u5217\u8868\u540e\u52a0\u4e0amutable\u5173\u952e\u5b57\uff0c\u8868\u660e\u53ef\u4ee5\u5728\u51fd\u6570\u4f53\u4e2d\u6539\u53d8\u6355\u83b7\u53d8\u91cf\u7684\u503c\uff1b\u56e0\u6b64\u6b64\u65f6\u53c2\u6570\u5217\u8868\u4e0d\u80fd\u7701\u7565\uff1b throwSpec\u5219\u662f\u5f02\u5e38\u629b\u51fa\u8868\u8fbe\u5f0f\u3002 \u2003\u5b9e\u9645\u4e2d\u53ef\u4ee5\u5ffd\u7565\"(\u53c2\u6570\u5217\u8868)\"\u4ee5\u53ca\"-> \u8fd4\u56de\u7c7b\u578b\"\uff0c\u4f46\u5fc5\u987b\u5305\u542b\u6355\u83b7\u5217\u8868\uff08\u53ef\u4ee5\u4e3a\u7a7a\uff09\u548c\u51fd\u6570\u4f53\u3002\u4f46\u5f53mutable\u6216throwSpec\u3001\u8fd4\u56de\u7c7b\u578b\u5b58\u5728\u65f6\uff0c\u5219\u4e0d\u80fd\u7701\u7565\"()\"\u3002 //the minimal lambda function []{ //do something } \u2003lambda\u7684\u53c2\u6570\u5217\u8868\u4e0d\u80fd\u6709\u9ed8\u8ba4\u53c2\u6570\u3002\u53c2\u6570\u662f\u5728lambda\u8c03\u7528\u65f6\u62f7\u8d1d\uff0c\u800c\u6355\u83b7\u5217\u8868\u4e2d\u7684\u53d8\u91cf\u5219\u662f\u5728\u521b\u5efa\u65f6\u62f7\u8d1d\u7684\u3002 \u5b9a\u4e49\u4e00\u4e2alambda\u672c\u8d28\u662f\u751f\u6210\u4e00\u4e2a\u4e0elambda\u5bf9\u5e94\u7684\u65b0\u7684\uff08\u533f\u540d\u7684\uff09\u7c7b\u7c7b\u578b( \u4f46\u5176\u5e76\u6ca1\u6709\u53ef\u88ab\u8c03\u7528\u7684\u6784\u9020\u51fd\u6570\u548cassignment operator ),\u56e0\u6b64\u4f20\u9012\u4e00\u4e2alambda\u5b9e\u9645\u4e0a\u662f\u4f20\u9012\u4e00\u4e2a\u7c7b\u5bf9\u8c61\uff0c\u6545\u4f7f\u7528auto\u5b9a\u4e49\u4e00\u4e2a\u7528lambda\u521d\u59cb\u5316\u7684\u53d8\u91cf\u65f6\uff0c\u4fbf\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4ecelambda\u751f\u6210\u7684\u7c7b\u578b\u7684\u5bf9\u8c61\u3002 \u2003\u9690\u5f0f\u6355\u83b7\uff1a\u5728\u6355\u83b7\u5217\u8868\u4e2d\u4f7f\u7528\u201c=\u201d\u3001\u201c&\u201d\u5206\u522b\u8868\u793a\u503c\u6355\u83b7\u548c\u5f15\u7528\u6355\u83b7; \u4e5f\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528\u9690\u5f0f\u6355\u83b7\u548c\u663e\u5f0f\u6355\u83b7\uff0c[=\uff0c &variable]\uff0c\u8868\u793a\u9664variable\u91c7\u7528\u5f15\u7528\u6355\u83b7\uff0c\u5176\u4f59\u53d8\u91cf\u91c7\u7528\u503c\u6355\u83b7; \u5bf9\u4e8e\u91c7\u7528\u503c\u6355\u83b7\u7684\u53d8\u91cf\uff0c\u6bcf\u4e2a\u5b9a\u4e49\u7684lambda\u5185\u5c06\u5b58\u5728\u4e00\u4e2a\u5355\u72ec\u7248\u672c\uff0c\u4ee5\u5b9a\u4e49\u65f6\u6355\u83b7\u7684\u53d8\u91cf\u503c\u8fdb\u884c\u521d\u59cb\u5316 \uff0c\u6b64\u540e\u6bcf\u6b21\u8c03\u7528\u8be5lambda object\uff0c\u5728\u6b64\u521d\u59cb\u503c\u57fa\u7840\u4e0a\u6539\u53d8\uff0c\u4e0d\u4f1a\u6539\u53d8\u539f\u6709\u53d8\u91cf\u3002 int id=0; auto f=[id]()mutable{ cout<<\"in lambda:\"<<id<<endl; id++; }; id = 22; f(); // in lambda:0 f(); // in lambda:1 f(); // in lambda:2 cout<<\"in main:\"<<id<<endl; // in main:22 \u2003\u6307\u5b9alambda\u8fd4\u56de\u7c7b\u578b\uff1a\u5982\u679clambda\u7684\u51fd\u6570\u4f53\u5305\u542b\u9664return\u4ee5\u5916\u7684\u5176\u4ed6\u8bed\u53e5\uff0c\u5219\u7f16\u8bd1\u5668\u5047\u5b9a\u8be5lambda\u8fd4\u56devoid\uff0c\u5373\u4e0d\u80fd\u8fd4\u56de\u503c\uff0c\u6b64\u65f6\u53ea\u80fd\u901a\u8fc7\u5c3e\u7f6e\u8fd4\u56de\u7c7b\u578b\u201c-> type\u201d\u6307\u5b9alambda\u7684\u8fd4\u56de\u7c7b\u578b\u3002","title":"lambda"},{"location":"CPP/callable/#bind1stbind2nd","text":"\u4e24\u8005\u662f\u5c06\u4e8c\u5143\u51fd\u6570\u8f6c\u6362\u4e3a\u4e00\u5143\u51fd\u6570\uff0c\u5373\u5bf9\u4e0e\u67d0\u4e9b\u51fd\u6570\uff0c\u5176\u5305\u542b\u4e24\u4e2a\u53c2\u6570\uff0c\u901a\u8fc7bind1st\u53ef\u4ee5\u7ed1\u5b9a\u7b2c\u4e00\u4e2a\u53c2\u6570\u503c\uff0c\u901a\u8fc7bind2nd\u53ef\u4ee5\u7ed1\u5b9a\u7b2c\u4e8c\u4e2a\u53c2\u6570\u503c\uff0c\u5219\u8be5\u51fd\u6570\u6b64\u65f6\u5373\u53ef\u89c6\u4e3a\u4e00\u5143\u51fd\u6570\uff0c\u53ef\u4ee5\u88ab\u7528\u4f5c\u5176\u4ed6\u9700\u8981\u4e00\u5143\u51fd\u6570\u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570\u7684\u53c2\u6570\u3002 eg. #include <iostream> #include <vector> #include <algorithm> #include <functional> using namespace std; int main() { vector<int> vec ; vec.push_back(40);vec.push_back(50); vec.push_back(60);vec.push_back(70); vec.push_back(80);vec.push_back(90); //\u7edf\u8ba1\u53ca\u683c\u4e2a\u6570 binder1st<less_equal<int>> binder1 = bind1st(less_equal<int>(),60); //==>binder1st(less,60); int nPassCnt = count_if(vec.begin(), vec.end(), binder1 ); //==>less_equal(60,x)==> 60 <= x //\u7edf\u8ba1\u4e0d\u53ca\u683c\u4e2a\u6570 binder2nd<less<int> > binder2 = bind2nd(less<int>(), 60); //==>binder2nd(less,60); int nFailCnt = count_if(vec.begin(), vec.end(), binder2 ); //==>less(x,60);==> x < 60 cout << \"nPassCnt:\" << nPassCnt << endl; cout << \"nFailCnt:\" << nFailCnt << endl; return 0; } \u2003\u65b0\u7248\u7248\u5df2\u7ecf\u5f03\u7528\u4e0a\u8ff0\u4e24\u4e2a\u51fd\u6570\uff0c\u6539\u7528bind\u3002 auto newCallable = bind(callable\uff0c arg_list) auto nf = bind(f, a, b, c, _1, _2); /*\u8868\u793a\u628anf\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9f\u7684\u7b2c4\u4e2a\u53c2\u6570\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9f\u7684\u7b2c5\u4e2a\u53c2\u6570\uff0cf\u7684\u524d\u4e09\u4e2a\u53c2\u6570\u5206\u522b\u7ed1\u5b9a\u4e86a\u3001b\u3001c.*/ \u2003_n\u5373\u5360\u4f4d\u7b26\uff0c\u5b9a\u4e49\u5728placeholder\u547d\u540d\u7a7a\u95f4\u91cc\uff08placeholder\u4e5f\u5b9a\u4e49\u5728std\u547d\u540d\u7a7a\u95f4\u4e2d\uff09\uff0c\u5176\u548cbind\u51fd\u6570\u90fd\u5b9a\u4e49\u5728functional\u5934\u6587\u4ef6\u4e2d\u3002 \u2003\u4f7f\u7528\u5360\u4f4d\u7b26\u524d\uff0c\u9700\u8981\u5bf9\u5e94\u7684\u58f0\u660e\uff0c using namespace std::placeholders; \u5bf9\u4e8e\u975e\u5360\u4f4d\u7b26\u7684\u53c2\u6570\u662f\u88ab\u62f7\u8d1d\u5230bind\u8fd4\u56de\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\u4e2d\u7684\uff0c\u56e0\u6b64\u90a3\u4e9b\u65e0\u6cd5\u62f7\u8d1d\u6216\u8005\u9700\u8981\u5f15\u7528\u4f20\u9012\u7684\u53c2\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u5e93\u7684ref\u51fd\u6570\uff0c\u5176\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5305\u542b\u7ed9\u5b9a\u7684\u5f15\u7528\uff0c\u4e14\u6b64\u5bf9\u8c61\u662f\u53ef\u4ee5\u62f7\u8d1d\u7684\u3002","title":"bind1st\u4e0ebind2nd"},{"location":"CPP/class/","text":"About class \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e0e\u62f7\u8d1d\u8d4b\u503c class Test{ public: Test(){}; Test& operator=(const Test&){ std::cout << \"\u6267\u884c\u4e86\u8d4b\u503c\u64cd\u4f5c\" << std::endl; return *this; }; Test(const Test&){ std::cout << \"\u6267\u884c\u4e86\u62f7\u8d1d\u64cd\u4f5c\" << std::endl; } ~Test(){}; }; int main(){ //\u521d\u59cb\u5316 Test t1; Test t2(t1); Test t3 = t1; Test t4, t5; // \u8d4b\u503c t5 = t4 = t1; return 0; } \u2003Test t2(t1); \u5c5e\u4e8e\u76f4\u63a5\u521d\u59cb\u5316\uff1a\u8981\u6c42\u7f16\u8bd1\u5668\u4f7f\u7528\u666e\u901a\u7684\u51fd\u6570\u5339\u914d\u6765\u9009\u62e9\u4e0e\u6211\u4eec\u63d0\u4f9b\u7684\u53c2\u6570\u6700\u5339\u914d\u7684\u6784\u9020\u51fd\u6570,\u56e0\u6b64\u76f4\u63a5\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6765\u521d\u59cb\u5316\u5bf9\u8c61\u4e5f\u5c5e\u4e8e\u76f4\u63a5\u521d\u59cb\u5316\u3002 \u2003Test t3 = t1; \u5c5e\u4e8e\u62f7\u8d1d\u521d\u59cb\u5316\uff0c\u62f7\u8d1d\u521d\u59cb\u5316\u9996\u5148\u4f7f\u7528\u6307\u5b9a\u6784\u9020\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u7136\u540e\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5c06\u90a3\u4e2a\u4e34\u65f6\u5bf9\u8c61\u590d\u5236\u5230\u6b63\u5728\u521b\u5efa\u7684\u5bf9\u8c61\u3002\uff08\u6240\u4ee5\u5f53\u590d\u5236\u6784\u9020\u51fd\u6570\u88ab\u58f0\u660e\u4e3a\u79c1\u6709\u65f6\uff0c\u6240\u6709\u7684\u590d\u5236\u521d\u59cb\u5316\u90fd\u4e0d\u80fd\u4f7f\u7528\u3002\uff09 \u8fd9\u91cct1\u5df2\u7ecf\u5b58\u5728\uff0c\u56e0\u6b64\u7701\u7565\u4e86\u6784\u9020\u4e34\u65f6\u5bf9\u8c61\u7684\u4e00\u6b65\u3002 \u2003\u4f7f\u7528=\u62f7\u8d1d\u521d\u59cb\u5316\u65f6\uff0c\u8981\u6c42\u7f16\u7ece\u5668\u5c06\u53f3\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u62f7\u8d1d\u5230\u6b63\u5728\u521b\u5efa\u7684\u5bf9\u8c61\u4e2d\uff0c\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c\u56e0\u6b64 \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e0d\u5e94\u8be5\u662fexplicit \u3002 \u2003\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4ec0\u4e48\u65f6\u5019\u4f1a\u88ab\u8c03\u7528\uff1a \u7528 = \u5b9a\u4e49\u53d8\u91cf\u65f6; \u5c06\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u5b9e\u53c2\u4f20\u9012\u7ed9\u4e00\u4e2a\u975e\u5f15\u7528\u7c7b\u578b\u7684\u5f62\u53c2; \u4ece\u4e00\u4e2a\u8fd4\u56de\u7c7b\u578b\u4e3a\u975e\u5f15\u7528\u7c7b\u578b\u7684\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61; \u7528\u82b1\u62ec\u53f7\u5217\u8868\u521d\u59cb\u5316\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u6216\u4e00\u4e2a\u805a\u5408\u7c7b\u4e2d\u7684\u6210\u5458; \u67d0\u4e9b\u7c7b\u7c7b\u578b\u8fd8\u4f1a\u5bf9\u5b83\u4eec\u6240\u5206\u914d\u7684\u5bf9\u8c61\u4f7f\u7528\u62f7\u8d1d\u521d\u59cb\u5316\u3002\u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u521d\u59cb\u5316\u6807\u51c6\u5e93\u5bb9\u5668\u6216\u662f\u8c03\u7528insert\u6216push\u6210\u5458\uff0c\u5bb9\u5668\u4f1a\u5bf9\u5176\u5143\u7d20\u8fdb\u884c\u62f7\u8d1d\u521d\u59cb\u5316\u3002\u4e0e\u4e4b\u76f8\u53cd\uff0c\u7528emplace\u6210\u5458\u521b\u5efa\u7684\u5143\u7d20\u90fd\u8fdb\u884c\u76f4\u63a5\u521d\u59cb\u5316\u3002 \u2003\u8d4b\u503c\u64cd\u4f5c\u7b26\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u64cd\u4f5c\u7b26\u5de6\u4fa7\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u8fd9\u6837\u53ef\u4ee5\u5b9e\u73b0\u94fe\u5f0f\u64cd\u4f5c\uff0c\u201ct5=t4=t1\u201d\u3002 \u2003\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u5fc5\u987b\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u4e0d\u4e00\u5b9a\u662fconst\u7c7b\u578b\uff0c\u4f46\u5728\u4f7f\u7528\u5bb9\u5668\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7c7b\u578b\u65f6\uff0c \u5982\u679c\u81ea\u5b9a\u4e49\u7c7b\u6ca1\u6709\u5b9e\u73b0\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u5219\u8981\u6c42\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u5fc5\u987b\u662fconst\u5f15\u7528\u7c7b\u578b . class CExample { int m_nTest; public: CExample(int x):m_nTest(x) //\u5e26\u53c2\u6570\u6784\u9020\u51fd\u6570 { cout << \"constructor with argument/n\"; } CExample(const CExample & ex) //\u62f7\u8d1d\u6784\u9020\u51fd\u6570 { m_nTest = ex.m_nTest; cout << \"copy constructor/n\"; } CExample& operator = (const CExample &ex)//\u8d4b\u503c\u51fd\u6570(\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d) { cout << \"assignment operator/n\"; m_nTest = ex.m_nTest; return *this; } void myTestFunc(CExample ex) {} }; int main() { CExample aaa(2); // constructor with argument CExample bbb(3); // constructor with argument bbb = aaa; // assignment operator CExample ccc = aaa; // copy constructor bbb.myTestFunc(aaa); // copy constructor return 0; } \u2003\u6784\u9020ccc\uff0c\u5b9e\u8d28\u4e0a\u662fccc.CExample(aaa); \u6211\u4eec\u5047\u5982\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u53c2\u6570\u4e0d\u662f\u5f15\u7528\u7c7b\u578b\u7684\u8bdd\uff0c \u90a3\u4e48\u5c06\u4f7f\u5f97 ccc.CExample(aaa)\u53d8\u6210aaa\u4f20\u503c\u7ed9ccc.CExample(CExample ex)\uff0c\u5373CExample ex = aaa\uff0c\u56e0\u4e3a ex \u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0c \u6240\u4ee5 CExample ex = aaa \u7ee7\u7eed\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u63a5\u4e0b\u6765\u7684\u662f\u6784\u9020ex\uff0c\u4e5f\u5c31\u662f ex.CExample(aaa)\uff0c\u5fc5\u7136\u53c8\u4f1a\u6709aaa\u4f20\u7ed9CExample(CExample ex), \u5373 CExample ex = aaa;\u90a3\u4e48\u53c8\u4f1a\u89e6\u53d1\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5c31\u8fd9\u4e0b\u6c38\u8fdc\u7684\u9012\u5f52\u4e0b\u53bb\u3002 \u6240\u4ee5\uff0c \u4e3a\u4e86\u907f\u514d\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u65e0\u9650\u9012\u5f52\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u5fc5\u987b\u8981\u5e26\u5f15\u7528\u7c7b\u578b\u7684\u53c2\u6570\u7684\uff0c \u800c\u4e14\u8fd9\u4e5f\u662f\u7f16\u8bd1\u5668\u5f3a\u5236\u6027\u8981\u6c42\u7684\u3002 \u2003\u9700\u8981\u6790\u6784\u51fd\u6570 =>> \u9700\u8981\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u62f7\u8d1d\u590d\u5236\u8fd0\u7b97\u7b26; \u9700\u8981\u62f7\u8d1d\u6784\u9020\u51fd\u6570<<=>>\u9700\u8981\u8d4b\u503c\u64cd\u4f5c \u79fb\u52a8\u6784\u9020\u51fd\u6570\u4e0e\u79fb\u52a8\u8d4b\u503c \u2003\u6240\u8c13\u79fb\u52a8\u8bed\u4e49\uff0c\u6307\u7684\u5c31\u662f\u4ee5\u79fb\u52a8\u800c\u975e\u6df1\u62f7\u8d1d\u7684\u65b9\u5f0f\u521d\u59cb\u5316\u542b\u6709\u6307\u9488\u6210\u5458\u7684\u7c7b\u5bf9\u8c61\u3002\u7b80\u5355\u7684\u7406\u89e3\uff0c\u79fb\u52a8\u8bed\u4e49\u6307\u7684\u5c31\u662f\u5c06\u5176\u4ed6\u5bf9\u8c61\uff08\u901a\u5e38\u662f\u4e34\u65f6\u5bf9\u8c61\uff09\u62e5\u6709\u7684\u5185\u5b58\u8d44\u6e90\u201c\u79fb\u4e3a\u5df2\u7528\u201d, \u63d0\u9ad8\u521d\u59cb\u5316\u6548\u7387 \u3002\u5bf9\u4e8e\u4e00\u4e2a\u5305\u542b\u6307\u9488\u6210\u5458\u7684\u5bf9\u8c61\uff0c\u79fb\u52a8\u8bed\u4e49\u5373\u662f\u5bf9\u4e8e\u8be5\u6307\u9488\u6210\u5458\u7684\u6d45\u62f7\u8d1d\uff0c\u5e76\u4e14 \u8ba9\u6e90\u5bf9\u8c61\u4e2d\u7684\u6307\u9488\u6307\u5411nullptr (\u56e0\u4e3a\u6b64\u65f6\u65b0\u5bf9\u8c61\u7684\u6307\u9488\u548c\u6e90\u5bf9\u8c61\u7684\u6307\u9488\u6210\u5458\u76f8\u540c\uff0c\u5982\u679c\u6e90\u5bf9\u8c61\u8c03\u7528\u6790\u6784\u51fd\u6570\u91ca\u653e\u8d44\u6e90\uff0c\u4f1a\u5bfc\u81f4\u65b0\u5bf9\u8c61\u7684\u6307\u9488\u6210\u5458\u5931\u53bb\u610f\u4e49)\u3002 \u2003\u5f53\u7c7b\u4e2d\u540c\u65f6\u5305\u542b\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u79fb\u52a8\u6784\u9020\u51fd\u6570\u65f6\uff0c\u5982\u679c\u4f7f\u7528\u4e34\u65f6\u5bf9\u8c61\u521d\u59cb\u5316\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\uff0c\u7f16\u8bd1\u5668\u4f1a\u4f18\u5148\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\u6765\u5b8c\u6210\u6b64\u64cd\u4f5c\u3002\u53ea\u6709\u5f53\u7c7b\u4e2d\u6ca1\u6709\u5408\u9002\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570\u65f6\uff0c\u7f16\u8bd1\u5668\u624d\u4f1a\u9000\u800c\u6c42\u5176\u6b21\uff0c\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u901a\u5e38\u5728\u7c7b\u4e2d\u81ea\u5b9a\u4e49\u79fb\u52a8\u6784\u9020\u51fd\u6570\u7684\u540c\u65f6\uff0c\u4f1a\u518d\u4e3a\u5176\u81ea\u5b9a\u4e49\u4e00\u4e2a\u9002\u5f53\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7531\u6b64\u5f53\u7528\u6237\u5229\u7528\u53f3\u503c\u521d\u59cb\u5316\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4f1a\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff1b\u4f7f\u7528\u5de6\u503c\uff08\u975e\u53f3\u503c\uff09\u521d\u59cb\u5316\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 // move constructor MyString(MyString&& rhs)noexcept :_len(rhs._len), _data(rhs._data){ ++MCtor; rhs._data=nullptr; rhs._len=0; } // move assignment MyString& operator = (MyString&& rhs) noexcept{ ++MAsign; if(this!=&rhs){ if(_data)delete[] _data; _data=rhs._data; _len = rhs._len; rhs._data=nullptr; rhs._len=0; } return *this; } noexcept : \u2003\u79fb\u52a8\u6784\u9020\u51fd\u6570\u5728\u5bf9\u8c61\u8fdb\u884c\u590d\u5236\u65f6\u901a\u8fc7\u76f4\u63a5\u79fb\u52a8\u539f\u5bf9\u8c61\u5df2\u7ecf\u5206\u914d\u597d\u7684\u8d44\u6e90\uff0c\u53ef\u7701\u53bb\u5206\u914d\u5185\u5b58\u518d\u62f7\u8d1d\u7684\u8fc7\u7a0b\u3002\u5728STL\u4e2d\u5927\u591a\u6570\u5bb9\u5668\u7c7b\u578b\u90fd\u4f1a\u5728\u8c03\u6574\u5bb9\u5668\u5927\u5c0f\uff08resize\uff09\u65f6\u8c03\u7528\u5bb9\u5668\u5143\u7d20\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570\u6765\u79fb\u52a8\u8d44\u6e90\uff0c\u4f46 STL\u4e3a\u4e86\u4fdd\u8bc1\u5bb9\u5668\u7c7b\u578b\u7684\u5185\u5b58\u5b89\u5168\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u53ea\u4f1a\u8c03\u7528\u88ab\u6807\u8bb0\u4e3a\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u5426\u5219\u4f1a\u8c03\u7528\u5176\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6765\u4f5c\u4e3a\u66ff\u4ee3\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u8d44\u6e90\u7684\u79fb\u52a8\u8fc7\u7a0b\u4e2d\u5982\u679c\u629b\u51fa\u4e86\u5f02\u5e38\uff0c\u90a3\u4e48\u90a3\u4e9b\u6b63\u5728\u88ab\u5904\u7406\u7684\u539f\u59cb\u5bf9\u8c61\u6570\u636e\u53ef\u80fd\u56e0\u4e3a\u5f02\u5e38\u800c\u4e22\u5931\uff0c\u800c\u5728\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u7531\u4e8e\u8fdb\u884c\u7684\u662f\u8d44\u6e90\u62f7\u8d1d\u64cd\u4f5c\uff0c\u539f\u59cb\u6570\u636e\u4e0d\u4f1a\u88ab\u66f4\u6539\uff0c\u56e0\u6b64\u5373\u4f7f\u629b\u51fa\u5f02\u5e38\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u6570\u636e\u6700\u7ec8\u7684\u6b63\u786e\u6027 \u3002 struct\u4e0eclass\u533a\u522b \u2003\u5728c++\u4e2d\u4f7f\u7528struct\u548cclass\u5b9a\u4e49\u7c7b\u7684\u533a\u522b\u5728\u4e8e\u9ed8\u8ba4\u7684\u8bbf\u95ee\u6743\u9650\uff1a\u7c7b\u53ef\u4ee5\u5728\u7b2c\u4e00\u4e2a\u8bbf\u95ee\u8bf4\u660e\u7b26\u4e4b\u524d\u5b9a\u4e49\u6210\u5458\uff0c\u82e5\u4f7f\u7528struct\u5173\u952e\u5b57\uff0c\u5219\u8fd9\u4e9b\u6210\u5458\u5c5e\u4e8epublic\uff1b\u82e5\u4f7f\u7528class\uff0c\u5219\u5c5e\u4e8eprivate\u3002 \u2003\u6b64\u5916class\u5173\u952e\u5b57\u5b9a\u4e49\u7684\u6d3e\u751f\u7c7b\u9ed8\u8ba4\u662f\u79c1\u6709\u7ee7\u627f\uff0c\u800cstruct\u5b9a\u4e49\u7684\u5219\u9ed8\u8ba4\u662f\u516c\u6709\u7ee7\u627f\u3002 \u9690\u5f0f\u7c7b\u7c7b\u578b\u8f6c\u6362(\u8f6c\u6362\u6784\u9020\u51fd\u6570) \u2003\u5982\u679c\u7c7b\u7684\u6784\u9020\u51fd\u6570\u53ea\u6709\u4e00\u4e2a\u5b9e\u53c2\uff0c\u5219\u5b83\u5b9e\u9645\u4e0a\u5b9a\u4e49\u4e86\u8f6c\u6362\u4e3a\u6b64\u7c7b\u7c7b\u578b\u7684\u9690\u5f0f\u8f6c\u6362\u673a\u5236\uff1b\u800c\u5173\u952e\u5b57explicit\u5219\u53ef\u4ee5\u6291\u5236\u8fd9\u79cd\u9690\u5f0f\u8f6c\u6362\uff0c\u4e14\u5176\u53ea\u5bf9\u4e00\u4e2a\u5b9e\u53c2\u7684\u6784\u9020\u51fd\u6570\u6709\u6548\uff1b\u7528explicit\u58f0\u660e\u6784\u9020\u51fd\u6570\u65f6\uff0c\u5b83\u5c06\u53ea\u80fd\u4ee5\u76f4\u63a5\u521d\u59cb\u5316\u7684\u5f62\u5f0f\u4f7f\u7528\u3002 \u2003\u4f46\u662f\u7531\u4e8einitializer_list\u7684\u5f15\u5165\uff0c\u5bf9\u4e8emulti-arg\u7684\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u53d1\u751f\u4e0a\u8ff0\u7684\u9690\u5f0f\u7c7b\u7c7b\u578b\u8f6c\u6362\uff1b\u6b64\u65f6\u5982\u679c\u7528explicit\u58f0\u660e\u6784\u9020\u51fd\u6570\uff0c\u5219\u8981\u6c42\u53ea\u80fd\u901a\u8fc7\u76f4\u63a5\u521d\u59cb\u5316\u624d\u6784\u9020\u5bf9\u8c61\u3002 class C{ public: explicit C (int a, int b){cout << \"C(int), a=\"<<a<<\" ,b=\"<<b<<endl;} C (const C& c){cout<<\" copy ctor \" << endl; } }; int main(int argc, char const *argv[]) { C c{1, 2}; C c2 = {1, 2}; // error! copy-list-initialization cannot use a constructor marked 'explicit return 0; } OOP Object Oriented Programming \u6d3e\u751f\u7c7b\u5728\u58f0\u660e\u65f6\u65e0\u9700\u5305\u542b\u7c7b\u6d3e\u751f\u5217\u8868\uff1b \u5982\u679c\u6211\u4eec\u60f3\u5c06\u67d0\u4e2a\u7c7b\u7528\u4f5c\u57fa\u7c7b\uff0c\u5219\u8be5\u7c7b\u5fc5\u987b\u5df2\u7ecf\u5b9a\u4e49\u800c\u975e\u4ec5\u4ec5\u58f0\u660e\u3002 final : \u5728\u7c7b\u540d\u540e\u52a0\u4e0afinla\u5173\u952e\u5b57\uff0c\u8868\u660e\u8be5\u7c7b\u4e0d\u53ef\u88ab\u7ee7\u627f\uff1b\u82e5\u628a\u51fd\u6570\u6307\u5b9a\u4e3afinal\uff0c\u5219\u8be5\u51fd\u6570\u4e0d\u80fd\u88ab\u6d3e\u751f\u7c7b\u8986\u76d6\u3002 \u9759\u6001\u7c7b\u578b\uff1a\u8868\u8fbe\u5f0f\u7684\u9759\u6001\u7c7b\u578b\u5728\u7f16\u8bd1\u65f6\u603b\u662f\u5df2\u77e5\u7684\uff0c\u5b83\u662f\u53d8\u91cf\u58f0\u660e\u65f6\u7684\u7c7b\u578b\u6216\u8005\u8868\u8fbe\u5f0f\u751f\u6210\u7684\u7c7b\u578b\uff1b \u52a8\u6001\u7c7b\u578b\u5219\u662f\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f\u8868\u793a\u7684\u5185\u5b58\u7684\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u52a8\u6001\u7c7b\u578b\u76f4\u5230\u8fd0\u884c\u65f6\u624d\u53ef\u77e5\u3002 \u82e5\u8868\u8fbe\u5f0f\u65e2\u4e0d\u662f\u5f15\u7528\u4e5f\u4e0d\u662f\u6307\u9488\uff0c\u5219\u5b83\u7684\u52a8\u6001\u7c7b\u578b\u6c38\u8fdc\u4e0e\u9759\u6001\u7c7b\u578b\u4e00\u81f4\u3002 \u4ece\u6d3e\u751f\u7c7b\u5411\u57fa\u7c7b\u7684\u7c7b\u578b\u8f6c\u6362\u53ea\u5bf9\u6307\u9488\u6216\u8005\u5f15\u7528\u7c7b\u578b\u6709\u6548\uff1b \u4e0d\u5b58\u5728\u4ece\u57fa\u7c7b\u5411\u6d3e\u751f\u7c7b\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u56e0\u4e3a\u4e00\u4e2a\u57fa\u7c7b\u7684\u5bf9\u8c61\u53ef\u80fd\u662f\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\uff0c\u4e5f\u53ef\u80fd\u4e0d\u662f\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u4ece\u57fa\u7c7b\u5411\u6d3e\u751f\u7c7b\u7684\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u3002 \u5982\u679c\u7528\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e3a\u4e00\u4e2a\u57fa\u7c7b\u5bf9\u8c61\u521d\u59cb\u5316\u6216\u8d4b\u503c\u65f6\uff0c\u53ea\u6709\u8be5\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e2d\u8fc7\u7684\u57fa\u7c7b\u90e8\u5206\u4f1a\u88ab\u62f7\u8d1d\u3001\u79fb\u52a8\u3001\u8d4b\u503c\uff0c\u5b83\u7684\u6d3e\u751f\u7c7b\u90e8\u5206\u4f1a\u88ab\u5ffd\u7565\u3002 class derive: public base{...} \u5176\u4e2dpublic\u79f0\u4e3a\u6d3e\u751f\u8bbf\u95ee\u8bf4\u660e\u7b26\uff0c\u5176\u63a7\u5236\u6d3e\u751f\u7c7b\u7528\u6237\uff08\u5373\u6d3e\u751f\u7c7b\u5bf9\u8c61\u548c\u6d3e\u751f\u7c7b\u7684\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff09\u5bf9\u4e8e\u57fa\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\uff1b \u6b64\u5916\u8fd8\u53ef\u4ee5\u63a7\u5236\u7ee7\u627f\u81ea\u6d3e\u751f\u7c7b\u7684\u65b0\u7c7b\u7684\u5bf9\u4e8e\u57fa\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\u3002\uff08\u89c1inherit/\u7ee7\u627f\u5173\u7cfb\uff09 \u6539\u53d8\u4e2a\u522b\u6210\u5458\u7684\u53ef\u8bbf\u95ee\u6027\uff1a\u5728\u6d3e\u751f\u7c7b\u5185\u90e8\u4f7f\u7528using\u8bf4\u660e\uff0c\u53ef\u4ee5\u5c06\u5176\u76f4\u63a5\u6216\u95f4\u63a5\u57fa\u7c7b\u4e2d\u7684\u4efb\u4f55\u53ef\u8bbf\u95ee\u6210\u5458\u6807\u8bb0\u51fa\u6765\uff0c using\u58f0\u660e\u8bed\u53e5\u4e2d\u540d\u5b57\u7684\u8bbf\u95ee\u6743\u9650\u7531\u8be5using\u58f0\u660e\u8bed\u53e5\u524d\u7684\u8bbf\u95ee\u8bf4\u660e\u7b26\u51b3\u5b9a\uff0c\u4e0e\u6d3e\u751f\u8bbf\u95ee\u8bf4\u660e\u7b26\u65e0\u5173\u3002 class derived: private base{ public: using base::var1; private: using base::var2; } \u2003\u867d\u7136derived\u4f7f\u7528\u4e86\u79c1\u6709\u7ee7\u627f\uff0c\u4f46var1 \u4ecd\u7136\u53ef\u4ee5\u88abderived\u7684\u6240\u6709\u7528\u6237\u8bbf\u95ee\uff1b\u800cvar2\u5219\u53ea\u80fd\u88abderived\u7684\u6210\u5458\u548c\u53cb\u5143\u8bbf\u95ee\u3002 \u4e00\u4e2a\u5bf9\u8c61\u3001\u5f15\u7528\u6216\u8005\u6307\u9488\u7684\u9759\u6001\u7c7b\u578b\u51b3\u5b9a\u4e86\u8be5\u5bf9\u8c61\u7684\u54ea\u4e9b\u6210\u5458\u662f\u53ef\u89c1\u7684 \u3002 \u5373\u4f7f\u9759\u6001\u7c7b\u578b\u4e0e\u52a8\u6001\u7c7b\u578b\u53ef\u80fd\u4e0d\u4e00\u81f4(\u4f8b\u5982\u4f7f\u7528\u57fa\u7c7b\u7684\u5f15\u7528\u6216\u6307\u9488)\uff0c\u4f46\u662f\u6211\u4eec\u80fd\u4f7f\u7528\u54ea\u4e9b\u6210\u5458\u4ecd\u7136\u662f\u7531\u9759\u6001\u7c7b\u578b\u51b3\u5b9a\u7684\u3002 \u5b9a\u4e49\u6d3e\u751f\u7c7b\u4e2d\u7684\u51fd\u6570\u4e0d\u4f1a\u91cd\u8f7d\u5176\u57fa\u7c7b\u4e2d\u7684\u6210\u5458\uff0c\u548c\u5176\u4ed6\u4f5c\u7528\u4e8e\u57df\u4e00\u6837\uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u4e0e\u57fa\u7c7b\u7684\u67d0\u4e2a\u6210\u5458\u540c\u540d\uff0c\u5219\u6d3e\u751f\u7c7b\u5c06\u5728\u5176\u4f5c\u7528\u57df\u5185\u9690\u85cf\u8be5\u57fa\u7c7b\u6210\u5458\u3002\u5373\u4f7f\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u548c\u57fa\u7c7b\u6210\u5458\u51fd\u6570\u7684\u5f62\u53c2\u5217\u8868\u4e0d\u4e00\u81f4\uff0c\u57fa\u7c7b\u6210\u5458\u4e5f\u4ecd\u7136\u4f1a\u88ab\u9690\u85cf\u3002 \u5b9a\u4e49\u6d3e\u751f\u7c7b\u7684\u62f7\u8d1d\u6216\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff1a\u9700\u8981\u4f7f\u7528\u5bf9\u5e94\u7684\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5bf9\u8c61\u7684\u57fa\u7c7b\u90e8\u5206\uff0c\u82e5\u4e0d\u63d0\u4f9b\u521d\u59cb\u503c\uff0c\u5219\u57fa\u7c7b\u90e8\u5206\u662f\u88ab\u9ed8\u8ba4\u521d\u59cb\u5316\uff0c\u800c\u975e\u62f7\u8d1d\u6216\u79fb\u52a8\u3002 // correct usage: class Base{...}; class derived{ derived(const derived& d): Base(d){} } =delete: \u5728\u51fd\u6570\u53c2\u6570\u5217\u8868\u540e\u52a0\u4e0a=delete\u6765\u6307\u51fa\u6211\u4eec\u5e0c\u671b\u5c06\u5b83\u5b9a\u4e49\u4e3a\u5220\u9664\u7684\uff0c\u5176\u5c06\u4e0d\u80fd\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4f7f\u7528\uff0c\u53ef\u4ee5\u7528\u6765\u963b\u6b62\u62f7\u8d1d\u3001\u8d4b\u503c\uff08\u5982iostream\u7c7b\uff09\u3002 \u5982\u679c\u4e00\u4e2a\u7c7b\u6709\u6570\u636e\u6210\u5458\u4e0d\u80fd\u9ed8\u8ba4\u6784\u9020\u3001\u62f7\u8d1d\u3001\u590d\u5236\u6216\u9500\u6bc1\uff0c\u5219\u5bf9\u5e94\u7684\u6210\u5458\u51fd\u6570\u5c06\u5b9a\u4e49\u4e3a\u5220\u9664\u7684\u3002 \u8d4b\u503c\u8fd0\u7b97\u7b26(operator=)\uff1a\u5c06\u4e00\u4e2a\u5bf9\u8c61\u8d4b\u4e88\u5b83\u81ea\u8eab\u65f6\uff0c\u5fc5\u987b\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u56e0\u6b64\u4e00\u5b9a\u8981\u5728operator=\u91cd\u8f7d\u5b9e\u73b0\u4e2d\u68c0\u6d4b\u662f\u5426\u662f\u81ea\u6211\u8d4b\u503c(self assignment)\uff1b \u5927\u591a\u6570\u8d4b\u503c\u8fd0\u7b97\u7b26\u7ec4\u5408\u4e86\u6790\u6784\u51fd\u6570\u548c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u5de5\u4f5c\uff1a\u5373\u9500\u6bc1\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u7684\u8d44\u6e90\u548c\u4ece\u53f3\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u62f7\u8d1d\u6570\u636e\u3002 swap:\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7c7b\u4e0a\u5b9a\u4e49\u7684swap\uff0c\u5176\u4f18\u5148\u7ea7\u9ad8\u4e8estd\u4e2d\u5b9a\u4e49\u7684\u7248\u672c\u3002 \u5408\u6210\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff1a\u53ea\u6709\u5f53\u4e00\u4e2a\u7c7b\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u81ea\u5df1\u7248\u672c\u7684\u62f7\u8d1d\u63a7\u5236\u6210\u5458\uff0c\u4e14\u5b83\u7684\u6240\u6709\u6570\u636e\u6210\u5458\u90fd\u80fd\u79fb\u52a8\u6784\u9020\u6216\u79fb\u52a8\u8d4b\u503c\u65f6\uff0c\u7f16\u8bd1\u5668\u624d\u4f1a\u4e3a\u5b83\u5408\u6210\u79fb\u52a8\u6784\u9020\u51fd\u6570\u6216\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u4e00\u4e2a\u7c7b\u6ca1\u6709\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u901a\u8fc7\u6b63\u5e38\u7684\u51fd\u6570\u5339\u914d\uff0c\u7c7b\u4f1a\u4f7f\u7528\u5bf9\u5e94\u62f7\u8d1d\u64cd\u4f5c\u6765\u4ee3\u66ff\u79fb\u52a8\uff0c\u5373\u4f7f\u6211\u4eec\u8bd5\u56fe\u8c03\u7528move\u6765\u79fb\u52a8\u5b83\u4eec\u65f6\u4e5f\u662f\u5982\u6b64\u3002 \u533a\u5206\u79fb\u52a8\u548c\u62f7\u8d1d\u7684\u91cd\u8f7d\u51fd\u6570\uff1a\u901a\u5e38\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u63a5\u6536\u4e00\u4e2aconst T&, \u800c\u79fb\u52a8\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u63a5\u6536\u4e00\u4e2aT&&\u3002 \u8865\u5145 \u679a\u4e3e\u7c7b\u578b enum class open_modes {x, xx}; //\u9650\u5b9a\u4f5c\u7528\u57df\u7684\u679a\u4e3e\u7c7b\u578b\uff0c \u679a\u4e3e\u6210\u5458\u7684\u540d\u5b57\u5728\u679a\u4e3e\u7c7b\u578b\u4f5c\u7528\u57df\u5916\u4e0d\u53ef\u89c1 enum color {red, yellow}; //\u4e0d\u9650\u5b9a\u4f5c\u7528\u57df\u7684\u679a\u4e3e\u7c7b\u578b\uff0c\u679a\u4e3e\u6210\u5458\u4f5c\u7528\u57df\u4e0e\u679a\u4e3e\u7c7b\u578b\u672c\u8eab\u7684\u4f5c\u7528\u57df\u76f8\u540c\u3002 //\u672a\u547d\u540denum: \u53ea\u80fd\u5728\u5b9a\u4e49\u8be5enum\u65f6\u5b9a\u4e49\u5b83\u7684\u5bf9\u8c61\u3002 enum {xxx} obj; \u5d4c\u5957\u7c7b:\u5b9a\u4e49\u5728\u5176\u4ed6\u7c7b\u5185\u90e8\u7684\u7c7b\uff0c\u4e0e\u5916\u5c42\u7c7b\u7684\u5bf9\u8c61\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff1b\u5d4c\u5957\u7c7b\u7684\u540d\u5b57\u5728\u5916\u5c42\u7c7b\u4f5c\u7528\u57df\u4e2d\u662f\u53ef\u89c1\u7684\uff0c\u5728\u5916\u5c42\u4f5c\u7528\u57df\u4e4b\u5916\u4e0d\u53ef\u89c1\uff1b\u82e5\u5728\u5d4c\u5957\u7c7b\u4e2d\u58f0\u660e\u9759\u6001\u6210\u5458\uff0c\u5219\u8be5\u6210\u5458\u7684\u5b9a\u4e49\u5c06\u4f4d\u4e8e\u5916\u5c42\u7c7b\u7684\u4f5c\u7528\u57df\u4e4b\u5916\u3002 Type outer_class::inner_class::static_memb = xx; \u5c40\u90e8\u7c7b:\u5b9a\u4e49\u5728\u67d0\u4e2a\u51fd\u6570\u7684\u5185\u90e8\uff0c\u53ea\u5728\u5b9a\u4e49\u5b83\u7684\u4f5c\u7528\u57df\u53ef\u89c1\uff0c\u4e14\u4e0d\u5141\u8bb8\u58f0\u660e\u9759\u6001\u6570\u636e\u6210\u5458\u3002\u5c40\u90e8\u7c7b\u53ea\u80fd\u8bbf\u95ee\u5916\u5c42\u4f5c\u7528\u57df\u5b9a\u4e49\u7684\u7c7b\u578b\u540d\u3001\u9759\u6001\u53d8\u91cf\u3001\u679a\u4e3e\u6210\u5458\uff0c\u4e0d\u80fd\u8bbf\u95ee\u51fd\u6570\u7684\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u3002\u540c\u65f6\u5916\u5c42\u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u5c40\u90e8\u7c7b\u7684private member\uff1b \u5c40\u90e8\u7c7b\u7684\u5d4c\u5957\u7c7b\u4e5f\u5c5e\u4e8e\u5c40\u90e8\u7c7b\u3002 \u805a\u5408\u7c7b\uff1a\u6240\u6709\u6210\u5458\u90fd\u662fpublic; \u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u6784\u9020\u51fd\u6570\uff1b\u6ca1\u6709\u7c7b\u5185\u521d\u59cb\u503c\uff1b\u6ca1\u6709\u57fa\u7c7b\uff0c\u4e5f\u6ca1\u6709virtual\u51fd\u6570\u3002 union:\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u6570\u636e\u6210\u5458\uff0c\u4f46\u662f\u5728\u4efb\u610f\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u6570\u636e\u6210\u5458\u53ef\u4ee5\u6709\u503c\u3002\u5f53\u5bf9\u67d0\u4e2a\u6210\u5458\u8d4b\u503c\u540e\uff0c\u5176\u4ed6\u6210\u5458\u5c31\u53d8\u6210\u672a\u5b9a\u4e49\u7684\u72b6\u6001\u3002 \u5982\u679c\u5728\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570 class A { public: A() { printf(\"In A::(). m_x=%d\\n\", m_x); A(0); // \u8fd9\u91cc\u53ea\u662f\u76f8\u5f53\u4e8e\u58f0\u660e\u4e86\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\uff0c\u4e0d\u4f1a\u6539\u53d8m_x // new(this) A(0), \u4f7f\u7528placement new \u6765\u6784\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u8fd9\u91cc\u4f1a\u6539\u53d8m_x\u7684\u503c printf(\"Out A::(). m_x=%d\\n\", m_x); } A(int x) { printf(\"In A::(int x). x=%d\\n\", x); m_x=x; } private: int m_x; };","title":"About class"},{"location":"CPP/class/#about-class","text":"","title":"About class"},{"location":"CPP/class/#_1","text":"class Test{ public: Test(){}; Test& operator=(const Test&){ std::cout << \"\u6267\u884c\u4e86\u8d4b\u503c\u64cd\u4f5c\" << std::endl; return *this; }; Test(const Test&){ std::cout << \"\u6267\u884c\u4e86\u62f7\u8d1d\u64cd\u4f5c\" << std::endl; } ~Test(){}; }; int main(){ //\u521d\u59cb\u5316 Test t1; Test t2(t1); Test t3 = t1; Test t4, t5; // \u8d4b\u503c t5 = t4 = t1; return 0; } \u2003Test t2(t1); \u5c5e\u4e8e\u76f4\u63a5\u521d\u59cb\u5316\uff1a\u8981\u6c42\u7f16\u8bd1\u5668\u4f7f\u7528\u666e\u901a\u7684\u51fd\u6570\u5339\u914d\u6765\u9009\u62e9\u4e0e\u6211\u4eec\u63d0\u4f9b\u7684\u53c2\u6570\u6700\u5339\u914d\u7684\u6784\u9020\u51fd\u6570,\u56e0\u6b64\u76f4\u63a5\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6765\u521d\u59cb\u5316\u5bf9\u8c61\u4e5f\u5c5e\u4e8e\u76f4\u63a5\u521d\u59cb\u5316\u3002 \u2003Test t3 = t1; \u5c5e\u4e8e\u62f7\u8d1d\u521d\u59cb\u5316\uff0c\u62f7\u8d1d\u521d\u59cb\u5316\u9996\u5148\u4f7f\u7528\u6307\u5b9a\u6784\u9020\u51fd\u6570\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u7136\u540e\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5c06\u90a3\u4e2a\u4e34\u65f6\u5bf9\u8c61\u590d\u5236\u5230\u6b63\u5728\u521b\u5efa\u7684\u5bf9\u8c61\u3002\uff08\u6240\u4ee5\u5f53\u590d\u5236\u6784\u9020\u51fd\u6570\u88ab\u58f0\u660e\u4e3a\u79c1\u6709\u65f6\uff0c\u6240\u6709\u7684\u590d\u5236\u521d\u59cb\u5316\u90fd\u4e0d\u80fd\u4f7f\u7528\u3002\uff09 \u8fd9\u91cct1\u5df2\u7ecf\u5b58\u5728\uff0c\u56e0\u6b64\u7701\u7565\u4e86\u6784\u9020\u4e34\u65f6\u5bf9\u8c61\u7684\u4e00\u6b65\u3002 \u2003\u4f7f\u7528=\u62f7\u8d1d\u521d\u59cb\u5316\u65f6\uff0c\u8981\u6c42\u7f16\u7ece\u5668\u5c06\u53f3\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u62f7\u8d1d\u5230\u6b63\u5728\u521b\u5efa\u7684\u5bf9\u8c61\u4e2d\uff0c\u53ef\u80fd\u9700\u8981\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c\u56e0\u6b64 \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e0d\u5e94\u8be5\u662fexplicit \u3002 \u2003\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4ec0\u4e48\u65f6\u5019\u4f1a\u88ab\u8c03\u7528\uff1a \u7528 = \u5b9a\u4e49\u53d8\u91cf\u65f6; \u5c06\u4e00\u4e2a\u5bf9\u8c61\u4f5c\u4e3a\u5b9e\u53c2\u4f20\u9012\u7ed9\u4e00\u4e2a\u975e\u5f15\u7528\u7c7b\u578b\u7684\u5f62\u53c2; \u4ece\u4e00\u4e2a\u8fd4\u56de\u7c7b\u578b\u4e3a\u975e\u5f15\u7528\u7c7b\u578b\u7684\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61; \u7528\u82b1\u62ec\u53f7\u5217\u8868\u521d\u59cb\u5316\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u6216\u4e00\u4e2a\u805a\u5408\u7c7b\u4e2d\u7684\u6210\u5458; \u67d0\u4e9b\u7c7b\u7c7b\u578b\u8fd8\u4f1a\u5bf9\u5b83\u4eec\u6240\u5206\u914d\u7684\u5bf9\u8c61\u4f7f\u7528\u62f7\u8d1d\u521d\u59cb\u5316\u3002\u4f8b\u5982\uff0c\u5f53\u6211\u4eec\u521d\u59cb\u5316\u6807\u51c6\u5e93\u5bb9\u5668\u6216\u662f\u8c03\u7528insert\u6216push\u6210\u5458\uff0c\u5bb9\u5668\u4f1a\u5bf9\u5176\u5143\u7d20\u8fdb\u884c\u62f7\u8d1d\u521d\u59cb\u5316\u3002\u4e0e\u4e4b\u76f8\u53cd\uff0c\u7528emplace\u6210\u5458\u521b\u5efa\u7684\u5143\u7d20\u90fd\u8fdb\u884c\u76f4\u63a5\u521d\u59cb\u5316\u3002 \u2003\u8d4b\u503c\u64cd\u4f5c\u7b26\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u64cd\u4f5c\u7b26\u5de6\u4fa7\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u8fd9\u6837\u53ef\u4ee5\u5b9e\u73b0\u94fe\u5f0f\u64cd\u4f5c\uff0c\u201ct5=t4=t1\u201d\u3002 \u2003\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u5fc5\u987b\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u4e0d\u4e00\u5b9a\u662fconst\u7c7b\u578b\uff0c\u4f46\u5728\u4f7f\u7528\u5bb9\u5668\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7c7b\u578b\u65f6\uff0c \u5982\u679c\u81ea\u5b9a\u4e49\u7c7b\u6ca1\u6709\u5b9e\u73b0\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u5219\u8981\u6c42\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\u5fc5\u987b\u662fconst\u5f15\u7528\u7c7b\u578b . class CExample { int m_nTest; public: CExample(int x):m_nTest(x) //\u5e26\u53c2\u6570\u6784\u9020\u51fd\u6570 { cout << \"constructor with argument/n\"; } CExample(const CExample & ex) //\u62f7\u8d1d\u6784\u9020\u51fd\u6570 { m_nTest = ex.m_nTest; cout << \"copy constructor/n\"; } CExample& operator = (const CExample &ex)//\u8d4b\u503c\u51fd\u6570(\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d) { cout << \"assignment operator/n\"; m_nTest = ex.m_nTest; return *this; } void myTestFunc(CExample ex) {} }; int main() { CExample aaa(2); // constructor with argument CExample bbb(3); // constructor with argument bbb = aaa; // assignment operator CExample ccc = aaa; // copy constructor bbb.myTestFunc(aaa); // copy constructor return 0; } \u2003\u6784\u9020ccc\uff0c\u5b9e\u8d28\u4e0a\u662fccc.CExample(aaa); \u6211\u4eec\u5047\u5982\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u53c2\u6570\u4e0d\u662f\u5f15\u7528\u7c7b\u578b\u7684\u8bdd\uff0c \u90a3\u4e48\u5c06\u4f7f\u5f97 ccc.CExample(aaa)\u53d8\u6210aaa\u4f20\u503c\u7ed9ccc.CExample(CExample ex)\uff0c\u5373CExample ex = aaa\uff0c\u56e0\u4e3a ex \u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0c \u6240\u4ee5 CExample ex = aaa \u7ee7\u7eed\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u63a5\u4e0b\u6765\u7684\u662f\u6784\u9020ex\uff0c\u4e5f\u5c31\u662f ex.CExample(aaa)\uff0c\u5fc5\u7136\u53c8\u4f1a\u6709aaa\u4f20\u7ed9CExample(CExample ex), \u5373 CExample ex = aaa;\u90a3\u4e48\u53c8\u4f1a\u89e6\u53d1\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u5c31\u8fd9\u4e0b\u6c38\u8fdc\u7684\u9012\u5f52\u4e0b\u53bb\u3002 \u6240\u4ee5\uff0c \u4e3a\u4e86\u907f\u514d\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u65e0\u9650\u9012\u5f52\uff0c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u662f\u5fc5\u987b\u8981\u5e26\u5f15\u7528\u7c7b\u578b\u7684\u53c2\u6570\u7684\uff0c \u800c\u4e14\u8fd9\u4e5f\u662f\u7f16\u8bd1\u5668\u5f3a\u5236\u6027\u8981\u6c42\u7684\u3002 \u2003\u9700\u8981\u6790\u6784\u51fd\u6570 =>> \u9700\u8981\u81ea\u5b9a\u4e49\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u62f7\u8d1d\u590d\u5236\u8fd0\u7b97\u7b26; \u9700\u8981\u62f7\u8d1d\u6784\u9020\u51fd\u6570<<=>>\u9700\u8981\u8d4b\u503c\u64cd\u4f5c","title":"\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e0e\u62f7\u8d1d\u8d4b\u503c"},{"location":"CPP/class/#_2","text":"\u6240\u8c13\u79fb\u52a8\u8bed\u4e49\uff0c\u6307\u7684\u5c31\u662f\u4ee5\u79fb\u52a8\u800c\u975e\u6df1\u62f7\u8d1d\u7684\u65b9\u5f0f\u521d\u59cb\u5316\u542b\u6709\u6307\u9488\u6210\u5458\u7684\u7c7b\u5bf9\u8c61\u3002\u7b80\u5355\u7684\u7406\u89e3\uff0c\u79fb\u52a8\u8bed\u4e49\u6307\u7684\u5c31\u662f\u5c06\u5176\u4ed6\u5bf9\u8c61\uff08\u901a\u5e38\u662f\u4e34\u65f6\u5bf9\u8c61\uff09\u62e5\u6709\u7684\u5185\u5b58\u8d44\u6e90\u201c\u79fb\u4e3a\u5df2\u7528\u201d, \u63d0\u9ad8\u521d\u59cb\u5316\u6548\u7387 \u3002\u5bf9\u4e8e\u4e00\u4e2a\u5305\u542b\u6307\u9488\u6210\u5458\u7684\u5bf9\u8c61\uff0c\u79fb\u52a8\u8bed\u4e49\u5373\u662f\u5bf9\u4e8e\u8be5\u6307\u9488\u6210\u5458\u7684\u6d45\u62f7\u8d1d\uff0c\u5e76\u4e14 \u8ba9\u6e90\u5bf9\u8c61\u4e2d\u7684\u6307\u9488\u6307\u5411nullptr (\u56e0\u4e3a\u6b64\u65f6\u65b0\u5bf9\u8c61\u7684\u6307\u9488\u548c\u6e90\u5bf9\u8c61\u7684\u6307\u9488\u6210\u5458\u76f8\u540c\uff0c\u5982\u679c\u6e90\u5bf9\u8c61\u8c03\u7528\u6790\u6784\u51fd\u6570\u91ca\u653e\u8d44\u6e90\uff0c\u4f1a\u5bfc\u81f4\u65b0\u5bf9\u8c61\u7684\u6307\u9488\u6210\u5458\u5931\u53bb\u610f\u4e49)\u3002 \u2003\u5f53\u7c7b\u4e2d\u540c\u65f6\u5305\u542b\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u79fb\u52a8\u6784\u9020\u51fd\u6570\u65f6\uff0c\u5982\u679c\u4f7f\u7528\u4e34\u65f6\u5bf9\u8c61\u521d\u59cb\u5316\u5f53\u524d\u7c7b\u7684\u5bf9\u8c61\uff0c\u7f16\u8bd1\u5668\u4f1a\u4f18\u5148\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\u6765\u5b8c\u6210\u6b64\u64cd\u4f5c\u3002\u53ea\u6709\u5f53\u7c7b\u4e2d\u6ca1\u6709\u5408\u9002\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570\u65f6\uff0c\u7f16\u8bd1\u5668\u624d\u4f1a\u9000\u800c\u6c42\u5176\u6b21\uff0c\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 \u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u901a\u5e38\u5728\u7c7b\u4e2d\u81ea\u5b9a\u4e49\u79fb\u52a8\u6784\u9020\u51fd\u6570\u7684\u540c\u65f6\uff0c\u4f1a\u518d\u4e3a\u5176\u81ea\u5b9a\u4e49\u4e00\u4e2a\u9002\u5f53\u7684\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7531\u6b64\u5f53\u7528\u6237\u5229\u7528\u53f3\u503c\u521d\u59cb\u5316\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4f1a\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff1b\u4f7f\u7528\u5de6\u503c\uff08\u975e\u53f3\u503c\uff09\u521d\u59cb\u5316\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002 // move constructor MyString(MyString&& rhs)noexcept :_len(rhs._len), _data(rhs._data){ ++MCtor; rhs._data=nullptr; rhs._len=0; } // move assignment MyString& operator = (MyString&& rhs) noexcept{ ++MAsign; if(this!=&rhs){ if(_data)delete[] _data; _data=rhs._data; _len = rhs._len; rhs._data=nullptr; rhs._len=0; } return *this; } noexcept : \u2003\u79fb\u52a8\u6784\u9020\u51fd\u6570\u5728\u5bf9\u8c61\u8fdb\u884c\u590d\u5236\u65f6\u901a\u8fc7\u76f4\u63a5\u79fb\u52a8\u539f\u5bf9\u8c61\u5df2\u7ecf\u5206\u914d\u597d\u7684\u8d44\u6e90\uff0c\u53ef\u7701\u53bb\u5206\u914d\u5185\u5b58\u518d\u62f7\u8d1d\u7684\u8fc7\u7a0b\u3002\u5728STL\u4e2d\u5927\u591a\u6570\u5bb9\u5668\u7c7b\u578b\u90fd\u4f1a\u5728\u8c03\u6574\u5bb9\u5668\u5927\u5c0f\uff08resize\uff09\u65f6\u8c03\u7528\u5bb9\u5668\u5143\u7d20\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570\u6765\u79fb\u52a8\u8d44\u6e90\uff0c\u4f46 STL\u4e3a\u4e86\u4fdd\u8bc1\u5bb9\u5668\u7c7b\u578b\u7684\u5185\u5b58\u5b89\u5168\uff0c\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u53ea\u4f1a\u8c03\u7528\u88ab\u6807\u8bb0\u4e3a\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u7684\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u5426\u5219\u4f1a\u8c03\u7528\u5176\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u6765\u4f5c\u4e3a\u66ff\u4ee3\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u8d44\u6e90\u7684\u79fb\u52a8\u8fc7\u7a0b\u4e2d\u5982\u679c\u629b\u51fa\u4e86\u5f02\u5e38\uff0c\u90a3\u4e48\u90a3\u4e9b\u6b63\u5728\u88ab\u5904\u7406\u7684\u539f\u59cb\u5bf9\u8c61\u6570\u636e\u53ef\u80fd\u56e0\u4e3a\u5f02\u5e38\u800c\u4e22\u5931\uff0c\u800c\u5728\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u7531\u4e8e\u8fdb\u884c\u7684\u662f\u8d44\u6e90\u62f7\u8d1d\u64cd\u4f5c\uff0c\u539f\u59cb\u6570\u636e\u4e0d\u4f1a\u88ab\u66f4\u6539\uff0c\u56e0\u6b64\u5373\u4f7f\u629b\u51fa\u5f02\u5e38\u4e5f\u4e0d\u4f1a\u5f71\u54cd\u6570\u636e\u6700\u7ec8\u7684\u6b63\u786e\u6027 \u3002","title":"\u79fb\u52a8\u6784\u9020\u51fd\u6570\u4e0e\u79fb\u52a8\u8d4b\u503c"},{"location":"CPP/class/#structclass","text":"\u5728c++\u4e2d\u4f7f\u7528struct\u548cclass\u5b9a\u4e49\u7c7b\u7684\u533a\u522b\u5728\u4e8e\u9ed8\u8ba4\u7684\u8bbf\u95ee\u6743\u9650\uff1a\u7c7b\u53ef\u4ee5\u5728\u7b2c\u4e00\u4e2a\u8bbf\u95ee\u8bf4\u660e\u7b26\u4e4b\u524d\u5b9a\u4e49\u6210\u5458\uff0c\u82e5\u4f7f\u7528struct\u5173\u952e\u5b57\uff0c\u5219\u8fd9\u4e9b\u6210\u5458\u5c5e\u4e8epublic\uff1b\u82e5\u4f7f\u7528class\uff0c\u5219\u5c5e\u4e8eprivate\u3002 \u2003\u6b64\u5916class\u5173\u952e\u5b57\u5b9a\u4e49\u7684\u6d3e\u751f\u7c7b\u9ed8\u8ba4\u662f\u79c1\u6709\u7ee7\u627f\uff0c\u800cstruct\u5b9a\u4e49\u7684\u5219\u9ed8\u8ba4\u662f\u516c\u6709\u7ee7\u627f\u3002","title":"struct\u4e0eclass\u533a\u522b"},{"location":"CPP/class/#_3","text":"\u5982\u679c\u7c7b\u7684\u6784\u9020\u51fd\u6570\u53ea\u6709\u4e00\u4e2a\u5b9e\u53c2\uff0c\u5219\u5b83\u5b9e\u9645\u4e0a\u5b9a\u4e49\u4e86\u8f6c\u6362\u4e3a\u6b64\u7c7b\u7c7b\u578b\u7684\u9690\u5f0f\u8f6c\u6362\u673a\u5236\uff1b\u800c\u5173\u952e\u5b57explicit\u5219\u53ef\u4ee5\u6291\u5236\u8fd9\u79cd\u9690\u5f0f\u8f6c\u6362\uff0c\u4e14\u5176\u53ea\u5bf9\u4e00\u4e2a\u5b9e\u53c2\u7684\u6784\u9020\u51fd\u6570\u6709\u6548\uff1b\u7528explicit\u58f0\u660e\u6784\u9020\u51fd\u6570\u65f6\uff0c\u5b83\u5c06\u53ea\u80fd\u4ee5\u76f4\u63a5\u521d\u59cb\u5316\u7684\u5f62\u5f0f\u4f7f\u7528\u3002 \u2003\u4f46\u662f\u7531\u4e8einitializer_list\u7684\u5f15\u5165\uff0c\u5bf9\u4e8emulti-arg\u7684\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u53ef\u4ee5\u53d1\u751f\u4e0a\u8ff0\u7684\u9690\u5f0f\u7c7b\u7c7b\u578b\u8f6c\u6362\uff1b\u6b64\u65f6\u5982\u679c\u7528explicit\u58f0\u660e\u6784\u9020\u51fd\u6570\uff0c\u5219\u8981\u6c42\u53ea\u80fd\u901a\u8fc7\u76f4\u63a5\u521d\u59cb\u5316\u624d\u6784\u9020\u5bf9\u8c61\u3002 class C{ public: explicit C (int a, int b){cout << \"C(int), a=\"<<a<<\" ,b=\"<<b<<endl;} C (const C& c){cout<<\" copy ctor \" << endl; } }; int main(int argc, char const *argv[]) { C c{1, 2}; C c2 = {1, 2}; // error! copy-list-initialization cannot use a constructor marked 'explicit return 0; }","title":"\u9690\u5f0f\u7c7b\u7c7b\u578b\u8f6c\u6362(\u8f6c\u6362\u6784\u9020\u51fd\u6570)"},{"location":"CPP/class/#oop","text":"Object Oriented Programming \u6d3e\u751f\u7c7b\u5728\u58f0\u660e\u65f6\u65e0\u9700\u5305\u542b\u7c7b\u6d3e\u751f\u5217\u8868\uff1b \u5982\u679c\u6211\u4eec\u60f3\u5c06\u67d0\u4e2a\u7c7b\u7528\u4f5c\u57fa\u7c7b\uff0c\u5219\u8be5\u7c7b\u5fc5\u987b\u5df2\u7ecf\u5b9a\u4e49\u800c\u975e\u4ec5\u4ec5\u58f0\u660e\u3002 final : \u5728\u7c7b\u540d\u540e\u52a0\u4e0afinla\u5173\u952e\u5b57\uff0c\u8868\u660e\u8be5\u7c7b\u4e0d\u53ef\u88ab\u7ee7\u627f\uff1b\u82e5\u628a\u51fd\u6570\u6307\u5b9a\u4e3afinal\uff0c\u5219\u8be5\u51fd\u6570\u4e0d\u80fd\u88ab\u6d3e\u751f\u7c7b\u8986\u76d6\u3002 \u9759\u6001\u7c7b\u578b\uff1a\u8868\u8fbe\u5f0f\u7684\u9759\u6001\u7c7b\u578b\u5728\u7f16\u8bd1\u65f6\u603b\u662f\u5df2\u77e5\u7684\uff0c\u5b83\u662f\u53d8\u91cf\u58f0\u660e\u65f6\u7684\u7c7b\u578b\u6216\u8005\u8868\u8fbe\u5f0f\u751f\u6210\u7684\u7c7b\u578b\uff1b \u52a8\u6001\u7c7b\u578b\u5219\u662f\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f\u8868\u793a\u7684\u5185\u5b58\u7684\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u52a8\u6001\u7c7b\u578b\u76f4\u5230\u8fd0\u884c\u65f6\u624d\u53ef\u77e5\u3002 \u82e5\u8868\u8fbe\u5f0f\u65e2\u4e0d\u662f\u5f15\u7528\u4e5f\u4e0d\u662f\u6307\u9488\uff0c\u5219\u5b83\u7684\u52a8\u6001\u7c7b\u578b\u6c38\u8fdc\u4e0e\u9759\u6001\u7c7b\u578b\u4e00\u81f4\u3002 \u4ece\u6d3e\u751f\u7c7b\u5411\u57fa\u7c7b\u7684\u7c7b\u578b\u8f6c\u6362\u53ea\u5bf9\u6307\u9488\u6216\u8005\u5f15\u7528\u7c7b\u578b\u6709\u6548\uff1b \u4e0d\u5b58\u5728\u4ece\u57fa\u7c7b\u5411\u6d3e\u751f\u7c7b\u7684\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u56e0\u4e3a\u4e00\u4e2a\u57fa\u7c7b\u7684\u5bf9\u8c61\u53ef\u80fd\u662f\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\uff0c\u4e5f\u53ef\u80fd\u4e0d\u662f\uff0c\u6240\u4ee5\u4e0d\u5b58\u5728\u4ece\u57fa\u7c7b\u5411\u6d3e\u751f\u7c7b\u7684\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u3002 \u5982\u679c\u7528\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e3a\u4e00\u4e2a\u57fa\u7c7b\u5bf9\u8c61\u521d\u59cb\u5316\u6216\u8d4b\u503c\u65f6\uff0c\u53ea\u6709\u8be5\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e2d\u8fc7\u7684\u57fa\u7c7b\u90e8\u5206\u4f1a\u88ab\u62f7\u8d1d\u3001\u79fb\u52a8\u3001\u8d4b\u503c\uff0c\u5b83\u7684\u6d3e\u751f\u7c7b\u90e8\u5206\u4f1a\u88ab\u5ffd\u7565\u3002 class derive: public base{...} \u5176\u4e2dpublic\u79f0\u4e3a\u6d3e\u751f\u8bbf\u95ee\u8bf4\u660e\u7b26\uff0c\u5176\u63a7\u5236\u6d3e\u751f\u7c7b\u7528\u6237\uff08\u5373\u6d3e\u751f\u7c7b\u5bf9\u8c61\u548c\u6d3e\u751f\u7c7b\u7684\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff09\u5bf9\u4e8e\u57fa\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\uff1b \u6b64\u5916\u8fd8\u53ef\u4ee5\u63a7\u5236\u7ee7\u627f\u81ea\u6d3e\u751f\u7c7b\u7684\u65b0\u7c7b\u7684\u5bf9\u4e8e\u57fa\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\u3002\uff08\u89c1inherit/\u7ee7\u627f\u5173\u7cfb\uff09 \u6539\u53d8\u4e2a\u522b\u6210\u5458\u7684\u53ef\u8bbf\u95ee\u6027\uff1a\u5728\u6d3e\u751f\u7c7b\u5185\u90e8\u4f7f\u7528using\u8bf4\u660e\uff0c\u53ef\u4ee5\u5c06\u5176\u76f4\u63a5\u6216\u95f4\u63a5\u57fa\u7c7b\u4e2d\u7684\u4efb\u4f55\u53ef\u8bbf\u95ee\u6210\u5458\u6807\u8bb0\u51fa\u6765\uff0c using\u58f0\u660e\u8bed\u53e5\u4e2d\u540d\u5b57\u7684\u8bbf\u95ee\u6743\u9650\u7531\u8be5using\u58f0\u660e\u8bed\u53e5\u524d\u7684\u8bbf\u95ee\u8bf4\u660e\u7b26\u51b3\u5b9a\uff0c\u4e0e\u6d3e\u751f\u8bbf\u95ee\u8bf4\u660e\u7b26\u65e0\u5173\u3002 class derived: private base{ public: using base::var1; private: using base::var2; } \u2003\u867d\u7136derived\u4f7f\u7528\u4e86\u79c1\u6709\u7ee7\u627f\uff0c\u4f46var1 \u4ecd\u7136\u53ef\u4ee5\u88abderived\u7684\u6240\u6709\u7528\u6237\u8bbf\u95ee\uff1b\u800cvar2\u5219\u53ea\u80fd\u88abderived\u7684\u6210\u5458\u548c\u53cb\u5143\u8bbf\u95ee\u3002 \u4e00\u4e2a\u5bf9\u8c61\u3001\u5f15\u7528\u6216\u8005\u6307\u9488\u7684\u9759\u6001\u7c7b\u578b\u51b3\u5b9a\u4e86\u8be5\u5bf9\u8c61\u7684\u54ea\u4e9b\u6210\u5458\u662f\u53ef\u89c1\u7684 \u3002 \u5373\u4f7f\u9759\u6001\u7c7b\u578b\u4e0e\u52a8\u6001\u7c7b\u578b\u53ef\u80fd\u4e0d\u4e00\u81f4(\u4f8b\u5982\u4f7f\u7528\u57fa\u7c7b\u7684\u5f15\u7528\u6216\u6307\u9488)\uff0c\u4f46\u662f\u6211\u4eec\u80fd\u4f7f\u7528\u54ea\u4e9b\u6210\u5458\u4ecd\u7136\u662f\u7531\u9759\u6001\u7c7b\u578b\u51b3\u5b9a\u7684\u3002 \u5b9a\u4e49\u6d3e\u751f\u7c7b\u4e2d\u7684\u51fd\u6570\u4e0d\u4f1a\u91cd\u8f7d\u5176\u57fa\u7c7b\u4e2d\u7684\u6210\u5458\uff0c\u548c\u5176\u4ed6\u4f5c\u7528\u4e8e\u57df\u4e00\u6837\uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u4e0e\u57fa\u7c7b\u7684\u67d0\u4e2a\u6210\u5458\u540c\u540d\uff0c\u5219\u6d3e\u751f\u7c7b\u5c06\u5728\u5176\u4f5c\u7528\u57df\u5185\u9690\u85cf\u8be5\u57fa\u7c7b\u6210\u5458\u3002\u5373\u4f7f\u6d3e\u751f\u7c7b\u6210\u5458\u51fd\u6570\u548c\u57fa\u7c7b\u6210\u5458\u51fd\u6570\u7684\u5f62\u53c2\u5217\u8868\u4e0d\u4e00\u81f4\uff0c\u57fa\u7c7b\u6210\u5458\u4e5f\u4ecd\u7136\u4f1a\u88ab\u9690\u85cf\u3002 \u5b9a\u4e49\u6d3e\u751f\u7c7b\u7684\u62f7\u8d1d\u6216\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff1a\u9700\u8981\u4f7f\u7528\u5bf9\u5e94\u7684\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5bf9\u8c61\u7684\u57fa\u7c7b\u90e8\u5206\uff0c\u82e5\u4e0d\u63d0\u4f9b\u521d\u59cb\u503c\uff0c\u5219\u57fa\u7c7b\u90e8\u5206\u662f\u88ab\u9ed8\u8ba4\u521d\u59cb\u5316\uff0c\u800c\u975e\u62f7\u8d1d\u6216\u79fb\u52a8\u3002 // correct usage: class Base{...}; class derived{ derived(const derived& d): Base(d){} } =delete: \u5728\u51fd\u6570\u53c2\u6570\u5217\u8868\u540e\u52a0\u4e0a=delete\u6765\u6307\u51fa\u6211\u4eec\u5e0c\u671b\u5c06\u5b83\u5b9a\u4e49\u4e3a\u5220\u9664\u7684\uff0c\u5176\u5c06\u4e0d\u80fd\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4f7f\u7528\uff0c\u53ef\u4ee5\u7528\u6765\u963b\u6b62\u62f7\u8d1d\u3001\u8d4b\u503c\uff08\u5982iostream\u7c7b\uff09\u3002 \u5982\u679c\u4e00\u4e2a\u7c7b\u6709\u6570\u636e\u6210\u5458\u4e0d\u80fd\u9ed8\u8ba4\u6784\u9020\u3001\u62f7\u8d1d\u3001\u590d\u5236\u6216\u9500\u6bc1\uff0c\u5219\u5bf9\u5e94\u7684\u6210\u5458\u51fd\u6570\u5c06\u5b9a\u4e49\u4e3a\u5220\u9664\u7684\u3002 \u8d4b\u503c\u8fd0\u7b97\u7b26(operator=)\uff1a\u5c06\u4e00\u4e2a\u5bf9\u8c61\u8d4b\u4e88\u5b83\u81ea\u8eab\u65f6\uff0c\u5fc5\u987b\u80fd\u6b63\u5e38\u5de5\u4f5c\uff0c\u56e0\u6b64\u4e00\u5b9a\u8981\u5728operator=\u91cd\u8f7d\u5b9e\u73b0\u4e2d\u68c0\u6d4b\u662f\u5426\u662f\u81ea\u6211\u8d4b\u503c(self assignment)\uff1b \u5927\u591a\u6570\u8d4b\u503c\u8fd0\u7b97\u7b26\u7ec4\u5408\u4e86\u6790\u6784\u51fd\u6570\u548c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u7684\u5de5\u4f5c\uff1a\u5373\u9500\u6bc1\u5de6\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u7684\u8d44\u6e90\u548c\u4ece\u53f3\u4fa7\u8fd0\u7b97\u5bf9\u8c61\u62f7\u8d1d\u6570\u636e\u3002 swap:\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7c7b\u4e0a\u5b9a\u4e49\u7684swap\uff0c\u5176\u4f18\u5148\u7ea7\u9ad8\u4e8estd\u4e2d\u5b9a\u4e49\u7684\u7248\u672c\u3002 \u5408\u6210\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff1a\u53ea\u6709\u5f53\u4e00\u4e2a\u7c7b\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u81ea\u5df1\u7248\u672c\u7684\u62f7\u8d1d\u63a7\u5236\u6210\u5458\uff0c\u4e14\u5b83\u7684\u6240\u6709\u6570\u636e\u6210\u5458\u90fd\u80fd\u79fb\u52a8\u6784\u9020\u6216\u79fb\u52a8\u8d4b\u503c\u65f6\uff0c\u7f16\u8bd1\u5668\u624d\u4f1a\u4e3a\u5b83\u5408\u6210\u79fb\u52a8\u6784\u9020\u51fd\u6570\u6216\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\u3002 \u5982\u679c\u4e00\u4e2a\u7c7b\u6ca1\u6709\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c\u901a\u8fc7\u6b63\u5e38\u7684\u51fd\u6570\u5339\u914d\uff0c\u7c7b\u4f1a\u4f7f\u7528\u5bf9\u5e94\u62f7\u8d1d\u64cd\u4f5c\u6765\u4ee3\u66ff\u79fb\u52a8\uff0c\u5373\u4f7f\u6211\u4eec\u8bd5\u56fe\u8c03\u7528move\u6765\u79fb\u52a8\u5b83\u4eec\u65f6\u4e5f\u662f\u5982\u6b64\u3002 \u533a\u5206\u79fb\u52a8\u548c\u62f7\u8d1d\u7684\u91cd\u8f7d\u51fd\u6570\uff1a\u901a\u5e38\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u63a5\u6536\u4e00\u4e2aconst T&, \u800c\u79fb\u52a8\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u63a5\u6536\u4e00\u4e2aT&&\u3002","title":"OOP"},{"location":"CPP/class/#_4","text":"\u679a\u4e3e\u7c7b\u578b enum class open_modes {x, xx}; //\u9650\u5b9a\u4f5c\u7528\u57df\u7684\u679a\u4e3e\u7c7b\u578b\uff0c \u679a\u4e3e\u6210\u5458\u7684\u540d\u5b57\u5728\u679a\u4e3e\u7c7b\u578b\u4f5c\u7528\u57df\u5916\u4e0d\u53ef\u89c1 enum color {red, yellow}; //\u4e0d\u9650\u5b9a\u4f5c\u7528\u57df\u7684\u679a\u4e3e\u7c7b\u578b\uff0c\u679a\u4e3e\u6210\u5458\u4f5c\u7528\u57df\u4e0e\u679a\u4e3e\u7c7b\u578b\u672c\u8eab\u7684\u4f5c\u7528\u57df\u76f8\u540c\u3002 //\u672a\u547d\u540denum: \u53ea\u80fd\u5728\u5b9a\u4e49\u8be5enum\u65f6\u5b9a\u4e49\u5b83\u7684\u5bf9\u8c61\u3002 enum {xxx} obj; \u5d4c\u5957\u7c7b:\u5b9a\u4e49\u5728\u5176\u4ed6\u7c7b\u5185\u90e8\u7684\u7c7b\uff0c\u4e0e\u5916\u5c42\u7c7b\u7684\u5bf9\u8c61\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff1b\u5d4c\u5957\u7c7b\u7684\u540d\u5b57\u5728\u5916\u5c42\u7c7b\u4f5c\u7528\u57df\u4e2d\u662f\u53ef\u89c1\u7684\uff0c\u5728\u5916\u5c42\u4f5c\u7528\u57df\u4e4b\u5916\u4e0d\u53ef\u89c1\uff1b\u82e5\u5728\u5d4c\u5957\u7c7b\u4e2d\u58f0\u660e\u9759\u6001\u6210\u5458\uff0c\u5219\u8be5\u6210\u5458\u7684\u5b9a\u4e49\u5c06\u4f4d\u4e8e\u5916\u5c42\u7c7b\u7684\u4f5c\u7528\u57df\u4e4b\u5916\u3002 Type outer_class::inner_class::static_memb = xx; \u5c40\u90e8\u7c7b:\u5b9a\u4e49\u5728\u67d0\u4e2a\u51fd\u6570\u7684\u5185\u90e8\uff0c\u53ea\u5728\u5b9a\u4e49\u5b83\u7684\u4f5c\u7528\u57df\u53ef\u89c1\uff0c\u4e14\u4e0d\u5141\u8bb8\u58f0\u660e\u9759\u6001\u6570\u636e\u6210\u5458\u3002\u5c40\u90e8\u7c7b\u53ea\u80fd\u8bbf\u95ee\u5916\u5c42\u4f5c\u7528\u57df\u5b9a\u4e49\u7684\u7c7b\u578b\u540d\u3001\u9759\u6001\u53d8\u91cf\u3001\u679a\u4e3e\u6210\u5458\uff0c\u4e0d\u80fd\u8bbf\u95ee\u51fd\u6570\u7684\u666e\u901a\u5c40\u90e8\u53d8\u91cf\u3002\u540c\u65f6\u5916\u5c42\u51fd\u6570\u4e0d\u80fd\u8bbf\u95ee\u5c40\u90e8\u7c7b\u7684private member\uff1b \u5c40\u90e8\u7c7b\u7684\u5d4c\u5957\u7c7b\u4e5f\u5c5e\u4e8e\u5c40\u90e8\u7c7b\u3002 \u805a\u5408\u7c7b\uff1a\u6240\u6709\u6210\u5458\u90fd\u662fpublic; \u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u6784\u9020\u51fd\u6570\uff1b\u6ca1\u6709\u7c7b\u5185\u521d\u59cb\u503c\uff1b\u6ca1\u6709\u57fa\u7c7b\uff0c\u4e5f\u6ca1\u6709virtual\u51fd\u6570\u3002 union:\u4e00\u79cd\u7279\u6b8a\u7684\u7c7b\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a\u6570\u636e\u6210\u5458\uff0c\u4f46\u662f\u5728\u4efb\u610f\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u6570\u636e\u6210\u5458\u53ef\u4ee5\u6709\u503c\u3002\u5f53\u5bf9\u67d0\u4e2a\u6210\u5458\u8d4b\u503c\u540e\uff0c\u5176\u4ed6\u6210\u5458\u5c31\u53d8\u6210\u672a\u5b9a\u4e49\u7684\u72b6\u6001\u3002 \u5982\u679c\u5728\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u4e2d\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570 class A { public: A() { printf(\"In A::(). m_x=%d\\n\", m_x); A(0); // \u8fd9\u91cc\u53ea\u662f\u76f8\u5f53\u4e8e\u58f0\u660e\u4e86\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\uff0c\u4e0d\u4f1a\u6539\u53d8m_x // new(this) A(0), \u4f7f\u7528placement new \u6765\u6784\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u8fd9\u91cc\u4f1a\u6539\u53d8m_x\u7684\u503c printf(\"Out A::(). m_x=%d\\n\", m_x); } A(int x) { printf(\"In A::(int x). x=%d\\n\", x); m_x=x; } private: int m_x; };","title":"\u8865\u5145"},{"location":"CPP/const/","text":"About Const \u521d\u59cb\u5316 \u2003\u5728\u521d\u59cb\u5316const\u5f15\u7528\u65f6\u5141\u8bb8\u7528\u4efb\u610f\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u5176\u521d\u59cb\u503c\uff0c\u53ea\u8981\u8be5\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u80fd\u8f6c\u6362\u6210\u5f15\u7528\u7684\u7c7b\u578b\u5373\u53ef\uff0c\u5c24\u5176\u5141\u8bb8\u4e3a\u4e00\u4e2a\u5e38\u91cf\u5f15\u7528\u7ed1\u5b9a\u975e\u5e38\u91cf\u7684\u5bf9\u8c61\u3001\u5b57\u9762\u503c\u3001\u4e00\u822c\u8868\u8fbe\u5f0f\uff0c\u6216\u8005\u4e3a\u4e00\u4e2a\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\u8d4b\u503c\u975e\u5e38\u91cf\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u4f46\u4e0d\u80fd\u901a\u8fc7\u8be5\u5f15\u7528\u6216\u8005\u6307\u9488\u4fee\u6539\u5176\u7ed1\u5b9a\u6216\u8005\u6307\u5411\u7684\u5bf9\u8c61\u3002 cosnt member fucntion \u2003\u7f16\u8bd1\u5668\u4f1a\u786e\u4fddconst member function\u4e0d\u4f1a\u66f4\u6539\u5176\u8c03\u7528\u8005; \"const\"\u4e5f\u5c5e\u4e8e\u51fd\u6570\u7b7e\u540d\u7684\u4e00\u90e8\u5206 int elem(int) const; \u2003const\u653e\u5728\u53c2\u6570\u5217\u8868\u540e\u9762\uff0c\u4e0e\u653e\u5728\u8fd4\u56de\u503c\u7c7b\u578b\u524d\u9762\u610f\u4e49\u5927\u4e0d\u76f8\u540c\uff0c\u524d\u8005\u8868\u660e\u8be5\u51fd\u6570\u8c03\u7528\u65f6\u4e0d\u4f1a\u4fee\u6539\u4efb\u4f55data member; \u800c\u540e\u8005\u5219\u8868\u660e\u8be5\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u4e3aconst\u3002 \u2003\u4e24\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u540d\u5b57\u548c\u53c2\u6570\u8868\u90fd\u4e00\u6837\uff0c\u4f46\u662f\u4e00\u4e2a\u662fconst\uff0c\u4e00\u4e2a\u4e0d\u662f\uff0c\u90a3\u4e48\u7b97\u662f\u91cd\u8f7d\u3002 \u2003\u5f53\u6210\u5458\u51fd\u6570\u7684const\u548cnon-const\u7248\u672c\u540c\u65f6\u5b58\u5728\u65f6(\u51fd\u6570\u91cd\u8f7d)\uff0cconst object\u53ea\u4f1a(\u53ea\u80fd)\u8c03\u7528const\u7248\u672c\uff1b\u800cnon-const object\u4e5f\u53ea\u4f1a(\u53ea\u80fd)\u8c03\u7528non-const\u7248\u672c\uff1b\u82e5\u65e0\u91cd\u8f7d\uff0c\u975e\u5e38\u91cf\u5bf9\u8c61\u53ef\u4ee5\u8c03\u7528\u7c7b\u5b9a\u4e49\u4e2d\u5e38\u91cf\u6210\u5458\u51fd\u6570\u548c\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\u3002 \u2003\u5e38\u91cf\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8c03\u7528\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\uff0c\u4f46\u53ef\u4ee5\u8c03\u7528\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u51fd\u6570\u3002 \u2003 \u5982\u679c\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e0d\u4f1a\u6539\u53d8\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6210\u5458\u51fd\u6570\u4e00\u822c\u4f1a\u58f0\u660e\u6210const\u7684\u3002\u4f46\u662f\uff0c\u6709\u4e9b\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5728const\u7684\u51fd\u6570\u91cc\u9762\u4fee\u6539\u4e00\u4e9b\u8ddf\u7c7b\u72b6\u6001\u65e0\u5173\u7684\u6570\u636e\u6210\u5458\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u636e\u6210\u5458\u5c31\u5e94\u8be5\u88ab mutalbe \u6765\u4fee\u9970\u3002 const\u5f62\u53c2 \u2003 \u5f53\u7528\u5b9e\u53c2\u521d\u59cb\u5316\u5f62\u53c2\u65f6\u4f1a\u5ffd\u7565\u9876\u5c42const, \u5373\u4f20\u9012\u7ed9\u8be5\u5f62\u53c2\u5e38\u91cf\u5bf9\u8c61\u6216\u975e\u5e38\u91cf\u5bf9\u8c61\u5747\u53ef \u3002\u56e0\u6b64void fcn(const int i)\u3001void fcn(int i)\u672c\u8d28\u4e0a\u662f\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u4e24\u8005\u4e0d\u80fd\u5171\u5b58\u3002 \u2003 \u5982\u679c\u5f62\u53c2\u662f\u67d0\u79cd\u7c7b\u578b\u7684\u6307\u9488\u6216\u5f15\u7528\uff0c\u5219\u901a\u8fc7\u533a\u5206\u5176\u6307\u5411\u7684\u662f\u5e38\u91cf\u5bf9\u8c61\u8fd8\u662f\u975e\u5e38\u91cf\u5bf9\u8c61\u53ef\u4ee5\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d\uff0c\u6b64\u65f6\u7684const\u662f\u5e95\u5c42\u7684. const and constexpr \u2003\u5bf9\u4e8e\u4fee\u9970Object\u6765\u8bf4\uff0cconst\u5e76\u672a\u533a\u5206\u51fa\u7f16\u8bd1\u671f\u5e38\u91cf\u548c\u8fd0\u884c\u671f\u5e38\u91cf; constexpr\u9650\u5b9a\u5728\u4e86\u7f16\u8bd1\u671f\u5e38\u91cf; \u2003\u5bf9\u4e8e\u4fee\u9970\u51fd\u6570\u6765\u8bf4\uff1a constexpr, \u5982\u679c\u5176\u4f20\u5165\u7684\u53c2\u6570\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u671f\u8ba1\u7b97\u51fa\u6765\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c31\u4f1a\u4ea7\u751f\u7f16\u8bd1\u65f6\u671f\u7684\u503c\u3002\u4f46\u662f\u4f20\u5165\u7684\u53c2\u6570\u5982\u679c\u4e0d\u80fd\u5728\u7f16\u8bd1\u65f6\u671f\u8ba1\u7b97\u51fa\u6765\uff0c\u90a3\u4e48constexpr\u4fee\u9970\u7684\u51fd\u6570\u5c31\u548c\u666e\u901a\u51fd\u6570\u4e00\u6837\u4e86\u3002 const \u4e00\u822c\u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u8868\u793a\u4e0d\u4f1a\u4fee\u6539\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff08\u9664\u975e\u8be5\u53d8\u91cf\u6709mutable\u4fee\u9970\uff09\u3002 \u8865\u5145 \u9876\u5c42const, \u8868\u793a\u4efb\u610f\u7684\u5bf9\u8c61\u662f\u5e38\u91cf\uff1b\u5e95\u5c42const\u5219\u4e0e\u6307\u9488\u3001\u5f15\u7528\u7b49\u590d\u5408\u7c7b\u578b\u7684\u57fa\u672c\u7c7b\u578b\u90e8\u5206\u6709\u5173.","title":"About Const"},{"location":"CPP/const/#about-const","text":"","title":"About Const"},{"location":"CPP/const/#_1","text":"\u5728\u521d\u59cb\u5316const\u5f15\u7528\u65f6\u5141\u8bb8\u7528\u4efb\u610f\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u5176\u521d\u59cb\u503c\uff0c\u53ea\u8981\u8be5\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u80fd\u8f6c\u6362\u6210\u5f15\u7528\u7684\u7c7b\u578b\u5373\u53ef\uff0c\u5c24\u5176\u5141\u8bb8\u4e3a\u4e00\u4e2a\u5e38\u91cf\u5f15\u7528\u7ed1\u5b9a\u975e\u5e38\u91cf\u7684\u5bf9\u8c61\u3001\u5b57\u9762\u503c\u3001\u4e00\u822c\u8868\u8fbe\u5f0f\uff0c\u6216\u8005\u4e3a\u4e00\u4e2a\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\u8d4b\u503c\u975e\u5e38\u91cf\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u4f46\u4e0d\u80fd\u901a\u8fc7\u8be5\u5f15\u7528\u6216\u8005\u6307\u9488\u4fee\u6539\u5176\u7ed1\u5b9a\u6216\u8005\u6307\u5411\u7684\u5bf9\u8c61\u3002","title":"\u521d\u59cb\u5316"},{"location":"CPP/const/#cosnt-member-fucntion","text":"\u7f16\u8bd1\u5668\u4f1a\u786e\u4fddconst member function\u4e0d\u4f1a\u66f4\u6539\u5176\u8c03\u7528\u8005; \"const\"\u4e5f\u5c5e\u4e8e\u51fd\u6570\u7b7e\u540d\u7684\u4e00\u90e8\u5206 int elem(int) const; \u2003const\u653e\u5728\u53c2\u6570\u5217\u8868\u540e\u9762\uff0c\u4e0e\u653e\u5728\u8fd4\u56de\u503c\u7c7b\u578b\u524d\u9762\u610f\u4e49\u5927\u4e0d\u76f8\u540c\uff0c\u524d\u8005\u8868\u660e\u8be5\u51fd\u6570\u8c03\u7528\u65f6\u4e0d\u4f1a\u4fee\u6539\u4efb\u4f55data member; \u800c\u540e\u8005\u5219\u8868\u660e\u8be5\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u4e3aconst\u3002 \u2003\u4e24\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u540d\u5b57\u548c\u53c2\u6570\u8868\u90fd\u4e00\u6837\uff0c\u4f46\u662f\u4e00\u4e2a\u662fconst\uff0c\u4e00\u4e2a\u4e0d\u662f\uff0c\u90a3\u4e48\u7b97\u662f\u91cd\u8f7d\u3002 \u2003\u5f53\u6210\u5458\u51fd\u6570\u7684const\u548cnon-const\u7248\u672c\u540c\u65f6\u5b58\u5728\u65f6(\u51fd\u6570\u91cd\u8f7d)\uff0cconst object\u53ea\u4f1a(\u53ea\u80fd)\u8c03\u7528const\u7248\u672c\uff1b\u800cnon-const object\u4e5f\u53ea\u4f1a(\u53ea\u80fd)\u8c03\u7528non-const\u7248\u672c\uff1b\u82e5\u65e0\u91cd\u8f7d\uff0c\u975e\u5e38\u91cf\u5bf9\u8c61\u53ef\u4ee5\u8c03\u7528\u7c7b\u5b9a\u4e49\u4e2d\u5e38\u91cf\u6210\u5458\u51fd\u6570\u548c\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\u3002 \u2003\u5e38\u91cf\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u8c03\u7528\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\uff0c\u4f46\u53ef\u4ee5\u8c03\u7528\u9759\u6001\u6210\u5458\u53d8\u91cf\u548c\u51fd\u6570\u3002 \u2003 \u5982\u679c\u7c7b\u7684\u6210\u5458\u51fd\u6570\u4e0d\u4f1a\u6539\u53d8\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6210\u5458\u51fd\u6570\u4e00\u822c\u4f1a\u58f0\u660e\u6210const\u7684\u3002\u4f46\u662f\uff0c\u6709\u4e9b\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5728const\u7684\u51fd\u6570\u91cc\u9762\u4fee\u6539\u4e00\u4e9b\u8ddf\u7c7b\u72b6\u6001\u65e0\u5173\u7684\u6570\u636e\u6210\u5458\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u636e\u6210\u5458\u5c31\u5e94\u8be5\u88ab mutalbe \u6765\u4fee\u9970\u3002","title":"cosnt member fucntion"},{"location":"CPP/const/#const","text":"\u5f53\u7528\u5b9e\u53c2\u521d\u59cb\u5316\u5f62\u53c2\u65f6\u4f1a\u5ffd\u7565\u9876\u5c42const, \u5373\u4f20\u9012\u7ed9\u8be5\u5f62\u53c2\u5e38\u91cf\u5bf9\u8c61\u6216\u975e\u5e38\u91cf\u5bf9\u8c61\u5747\u53ef \u3002\u56e0\u6b64void fcn(const int i)\u3001void fcn(int i)\u672c\u8d28\u4e0a\u662f\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u4e24\u8005\u4e0d\u80fd\u5171\u5b58\u3002 \u2003 \u5982\u679c\u5f62\u53c2\u662f\u67d0\u79cd\u7c7b\u578b\u7684\u6307\u9488\u6216\u5f15\u7528\uff0c\u5219\u901a\u8fc7\u533a\u5206\u5176\u6307\u5411\u7684\u662f\u5e38\u91cf\u5bf9\u8c61\u8fd8\u662f\u975e\u5e38\u91cf\u5bf9\u8c61\u53ef\u4ee5\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d\uff0c\u6b64\u65f6\u7684const\u662f\u5e95\u5c42\u7684.","title":"const\u5f62\u53c2"},{"location":"CPP/const/#const-and-constexpr","text":"\u5bf9\u4e8e\u4fee\u9970Object\u6765\u8bf4\uff0cconst\u5e76\u672a\u533a\u5206\u51fa\u7f16\u8bd1\u671f\u5e38\u91cf\u548c\u8fd0\u884c\u671f\u5e38\u91cf; constexpr\u9650\u5b9a\u5728\u4e86\u7f16\u8bd1\u671f\u5e38\u91cf; \u2003\u5bf9\u4e8e\u4fee\u9970\u51fd\u6570\u6765\u8bf4\uff1a constexpr, \u5982\u679c\u5176\u4f20\u5165\u7684\u53c2\u6570\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u671f\u8ba1\u7b97\u51fa\u6765\uff0c\u90a3\u4e48\u8fd9\u4e2a\u51fd\u6570\u5c31\u4f1a\u4ea7\u751f\u7f16\u8bd1\u65f6\u671f\u7684\u503c\u3002\u4f46\u662f\u4f20\u5165\u7684\u53c2\u6570\u5982\u679c\u4e0d\u80fd\u5728\u7f16\u8bd1\u65f6\u671f\u8ba1\u7b97\u51fa\u6765\uff0c\u90a3\u4e48constexpr\u4fee\u9970\u7684\u51fd\u6570\u5c31\u548c\u666e\u901a\u51fd\u6570\u4e00\u6837\u4e86\u3002 const \u4e00\u822c\u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u8868\u793a\u4e0d\u4f1a\u4fee\u6539\u7c7b\u7684\u6210\u5458\u53d8\u91cf\uff08\u9664\u975e\u8be5\u53d8\u91cf\u6709mutable\u4fee\u9970\uff09\u3002","title":"const and constexpr"},{"location":"CPP/const/#_2","text":"\u9876\u5c42const, \u8868\u793a\u4efb\u610f\u7684\u5bf9\u8c61\u662f\u5e38\u91cf\uff1b\u5e95\u5c42const\u5219\u4e0e\u6307\u9488\u3001\u5f15\u7528\u7b49\u590d\u5408\u7c7b\u578b\u7684\u57fa\u672c\u7c7b\u578b\u90e8\u5206\u6709\u5173.","title":"\u8865\u5145"},{"location":"CPP/constructor_destructor/","text":"About Constructor and Destructor Constructor function \u2003constructors\u51fd\u6570\u540d\u79f0\u5fc5\u987b\u4e0eclass\u76f8\u540c\uff0c\u4e0d\u80fd\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b\uff0c\u4ea6\u4e0d\u9700\u4efb\u4f55\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u88ab\u91cd\u8f7d\uff1b \u2003\u6784\u9020\u539f\u5219\u5982\u4e0b\uff1a 1. \u5982\u679c\u5b50\u7c7b\u6ca1\u6709\u5b9a\u4e49\u6784\u9020\u65b9\u6cd5\uff0c\u5219\u8c03\u7528\u7236\u7c7b\u7684\u65e0\u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\u3002 2. \u5982\u679c\u5b50\u7c7b\u5b9a\u4e49\u4e86\u6784\u9020\u65b9\u6cd5\uff0c\u4e0d\u8bba\u662f\u65e0\u53c2\u6570\u8fd8\u662f\u5e26\u53c2\u6570\uff0c\u5728\u521b\u5efa\u5b50\u7c7b\u7684\u5bf9\u8c61\u7684\u65f6\u5019,\u9996\u5148\u6267\u884c\u7236\u7c7b\u65e0\u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\uff0c \u7136\u540e\u6267\u884c\u81ea\u5df1\u7684\u6784\u9020\u65b9\u6cd5\u3002 3. \u5728\u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u65f6\u5019\uff0c\u5982\u679c\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6ca1\u6709\u663e\u793a\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u5219\u4f1a\u8c03\u7528\u7236\u7c7b\u7684\u9ed8\u8ba4\u65e0\u53c2\u6784\u9020\u51fd\u6570\u3002 4. \u5728\u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u65f6\u5019\uff0c\u5982\u679c\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6ca1\u6709\u663e\u793a\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e14\u7236\u7c7b\u81ea\u5df1\u63d0\u4f9b\u4e86\u65e0\u53c2\u6784\u9020\u51fd\u6570\uff0c \u5219\u4f1a\u8c03\u7528\u7236\u7c7b\u81ea\u5df1\u7684\u65e0\u53c2\u6784\u9020\u51fd\u6570\u3002 5. \u5728\u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u65f6\u5019\uff0c\u5982\u679c\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6ca1\u6709\u663e\u793a\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e14\u7236\u7c7b\u53ea\u5b9a\u4e49\u4e86\u81ea\u5df1\u7684\u6709\u53c2\u6784\u9020\u51fd\u6570\uff0c \u5219\u4f1a\u51fa\u9519\uff08\u5982\u679c\u7236\u7c7b\u53ea\u6709\u6709\u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5219\u5b50\u7c7b\u5fc5\u987b\u663e\u793a\u8c03\u7528\u6b64\u5e26\u53c2\u6784\u9020\u65b9\u6cd5\uff09\u3002 6. \u5982\u679c\u5b50\u7c7b\u8c03\u7528\u7236\u7c7b\u5e26\u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u9700\u8981\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570\u6765\u521d\u59cb\u5316\u7236\u7c7b\u6210\u5458\u5bf9\u8c61\uff0c\u6bd4\u5982\uff1a child(int arg): father(int arg, ...) {xx;}; destructor \u2003\u6790\u6784\u51fd\u6570\uff0c\u5f53object\u7ed3\u675f\u751f\u547d\u65f6\uff0c\u4fbf\u4f1a\u81ea\u52a8\u8c03\u7528destructor\u91ca\u653e\u6784\u9020\u51fd\u6570\u6216\u5bf9\u8c61\u751f\u547d\u5468\u671f\u4e2d\u914d\u7f6e\u7684\u8d44\u6e90\u3002\u6790\u6784\u51fd\u6570\u7684\u540d\u79f0\u4e0e\u7c7b\u7684\u540d\u79f0\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u53ea\u662f\u5728\u524d\u9762\u52a0\u4e86\u4e2a\u6ce2\u6d6a\u53f7\uff08~\uff09\u4f5c\u4e3a\u524d\u7f00\uff0c\u5b83\u4e0d\u4f1a\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u4e5f\u4e0d\u80fd\u5e26\u6709\u4efb\u4f55\u53c2\u6570\uff0c\u56e0\u6b64 \u6790\u6784\u51fd\u6570\u4e0d\u80fd\u88ab\u91cd\u8f7d \u3002 \u2003\u6790\u6784\u51fd\u6570\u81ea\u8eab\u5e76\u4e0d\u76f4\u63a5\u9500\u6bc1\u6210\u5458\uff0c\u6210\u5458\u662f\u5728\u6790\u6784\u51fd\u6570\u4f53\u4e4b\u540e\u9690\u542b\u7684\u6790\u6784\u9636\u6bb5\u4e2d\u88ab\u9500\u6bc1\u7684\u3002\u6790\u6784\u51fd\u6570\u4f53\u4e00\u822c\u6267\u884c\u8bbe\u8ba1\u8005\u6240\u9700\u7684\u6536\u5c3e\u5de5\u4f5c\u3002","title":"About Constructor and Destructor"},{"location":"CPP/constructor_destructor/#about-constructor-and-destructor","text":"","title":"About Constructor and Destructor"},{"location":"CPP/constructor_destructor/#constructor-function","text":"constructors\u51fd\u6570\u540d\u79f0\u5fc5\u987b\u4e0eclass\u76f8\u540c\uff0c\u4e0d\u80fd\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b\uff0c\u4ea6\u4e0d\u9700\u4efb\u4f55\u8fd4\u56de\u503c\uff0c\u53ef\u4ee5\u88ab\u91cd\u8f7d\uff1b \u2003\u6784\u9020\u539f\u5219\u5982\u4e0b\uff1a 1. \u5982\u679c\u5b50\u7c7b\u6ca1\u6709\u5b9a\u4e49\u6784\u9020\u65b9\u6cd5\uff0c\u5219\u8c03\u7528\u7236\u7c7b\u7684\u65e0\u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\u3002 2. \u5982\u679c\u5b50\u7c7b\u5b9a\u4e49\u4e86\u6784\u9020\u65b9\u6cd5\uff0c\u4e0d\u8bba\u662f\u65e0\u53c2\u6570\u8fd8\u662f\u5e26\u53c2\u6570\uff0c\u5728\u521b\u5efa\u5b50\u7c7b\u7684\u5bf9\u8c61\u7684\u65f6\u5019,\u9996\u5148\u6267\u884c\u7236\u7c7b\u65e0\u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\uff0c \u7136\u540e\u6267\u884c\u81ea\u5df1\u7684\u6784\u9020\u65b9\u6cd5\u3002 3. \u5728\u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u65f6\u5019\uff0c\u5982\u679c\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6ca1\u6709\u663e\u793a\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u5219\u4f1a\u8c03\u7528\u7236\u7c7b\u7684\u9ed8\u8ba4\u65e0\u53c2\u6784\u9020\u51fd\u6570\u3002 4. \u5728\u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u65f6\u5019\uff0c\u5982\u679c\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6ca1\u6709\u663e\u793a\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e14\u7236\u7c7b\u81ea\u5df1\u63d0\u4f9b\u4e86\u65e0\u53c2\u6784\u9020\u51fd\u6570\uff0c \u5219\u4f1a\u8c03\u7528\u7236\u7c7b\u81ea\u5df1\u7684\u65e0\u53c2\u6784\u9020\u51fd\u6570\u3002 5. \u5728\u521b\u5efa\u5b50\u7c7b\u5bf9\u8c61\u65f6\u5019\uff0c\u5982\u679c\u5b50\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6ca1\u6709\u663e\u793a\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e14\u7236\u7c7b\u53ea\u5b9a\u4e49\u4e86\u81ea\u5df1\u7684\u6709\u53c2\u6784\u9020\u51fd\u6570\uff0c \u5219\u4f1a\u51fa\u9519\uff08\u5982\u679c\u7236\u7c7b\u53ea\u6709\u6709\u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5219\u5b50\u7c7b\u5fc5\u987b\u663e\u793a\u8c03\u7528\u6b64\u5e26\u53c2\u6784\u9020\u65b9\u6cd5\uff09\u3002 6. \u5982\u679c\u5b50\u7c7b\u8c03\u7528\u7236\u7c7b\u5e26\u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u9700\u8981\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8c03\u7528\u7236\u7c7b\u6784\u9020\u51fd\u6570\u6765\u521d\u59cb\u5316\u7236\u7c7b\u6210\u5458\u5bf9\u8c61\uff0c\u6bd4\u5982\uff1a child(int arg): father(int arg, ...) {xx;};","title":"Constructor function"},{"location":"CPP/constructor_destructor/#destructor","text":"\u6790\u6784\u51fd\u6570\uff0c\u5f53object\u7ed3\u675f\u751f\u547d\u65f6\uff0c\u4fbf\u4f1a\u81ea\u52a8\u8c03\u7528destructor\u91ca\u653e\u6784\u9020\u51fd\u6570\u6216\u5bf9\u8c61\u751f\u547d\u5468\u671f\u4e2d\u914d\u7f6e\u7684\u8d44\u6e90\u3002\u6790\u6784\u51fd\u6570\u7684\u540d\u79f0\u4e0e\u7c7b\u7684\u540d\u79f0\u662f\u5b8c\u5168\u76f8\u540c\u7684\uff0c\u53ea\u662f\u5728\u524d\u9762\u52a0\u4e86\u4e2a\u6ce2\u6d6a\u53f7\uff08~\uff09\u4f5c\u4e3a\u524d\u7f00\uff0c\u5b83\u4e0d\u4f1a\u8fd4\u56de\u4efb\u4f55\u503c\uff0c\u4e5f\u4e0d\u80fd\u5e26\u6709\u4efb\u4f55\u53c2\u6570\uff0c\u56e0\u6b64 \u6790\u6784\u51fd\u6570\u4e0d\u80fd\u88ab\u91cd\u8f7d \u3002 \u2003\u6790\u6784\u51fd\u6570\u81ea\u8eab\u5e76\u4e0d\u76f4\u63a5\u9500\u6bc1\u6210\u5458\uff0c\u6210\u5458\u662f\u5728\u6790\u6784\u51fd\u6570\u4f53\u4e4b\u540e\u9690\u542b\u7684\u6790\u6784\u9636\u6bb5\u4e2d\u88ab\u9500\u6bc1\u7684\u3002\u6790\u6784\u51fd\u6570\u4f53\u4e00\u822c\u6267\u884c\u8bbe\u8ba1\u8005\u6240\u9700\u7684\u6536\u5c3e\u5de5\u4f5c\u3002","title":"destructor"},{"location":"CPP/container/","text":"About Container \u987a\u5e8f\u5bb9\u5668 \u987a\u5e8f\u5bb9\u5668\u7684\u5143\u7d20\u6392\u5217\u548c\u5143\u7d20\u503c\u5927\u5c0f\u65e0\u5173\uff0c\u800c\u662f\u7531\u5143\u7d20\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\u7684\u6b21\u5e8f\u51b3\u5b9a\u7684\u3002 \uff08vector, list, deque, forward_list, array\uff09 \u2003\u521d\u59cb\u5316\uff1a\u5f53\u5c06\u4e00\u4e2a\u5bb9\u5668\u521d\u59cb\u5316\u4e3a\u53e6\u4e00\u4e2a\u5bb9\u5668\u7684\u62f7\u8d1d\u65f6\uff0c\u4e24\u4e2a\u5bb9\u5668\u7684\u5bb9\u5668\u7c7b\u578b\u548c\u5143\u7d20\u7c7b\u578b\u90fd\u5fc5\u987b\u76f8\u540c\uff1b\u82e5\u4f20\u9012\u8fed\u4ee3\u5668\u53c2\u6570\u6765\u62f7\u8d1d\u4e00\u4e2a\u8303\u56f4\u65f6\uff0c\u5219\u4e0d\u8981\u6c42\u5bb9\u5668\u7c7b\u578b\u548c\u5143\u7d20\u7c7b\u578b\u76f8\u540c\uff0c\u53ea\u8981\u80fd\u5c06\u62f7\u8d1d\u7684\u5143\u7d20\u8f6c\u6362\u4e3a\u8981\u521d\u59cb\u5316\u7684\u5bb9\u5668\u7684\u5143\u7d20\u7c7b\u578b\u5373\u53ef\u3002 \u2003emplace: \u8c03\u7528\u4e00\u4e2aemplace/emplace_back/emplace_front\u6210\u5458\u51fd\u6570\u65f6\uff0c\u662f\u5c06\u53c2\u6570\u4f20\u9012\u7ed9\u5143\u7d20\u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570\uff0cemplace\u6210\u5458\u4f7f\u7528\u8fd9\u4e9b\u53c2\u6570\u5728\u5bb9\u5668\u7ba1\u7406\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\u76f4\u63a5\u6784\u9020\u5143\u7d20\u3002 \u2003\u6539\u53d8\u5bb9\u5668\u5927\u5c0f\uff1a\uff08\u4e0d\u9002\u7528\u4e8earray\uff09 resize:\u589e\u5927\u6216\u51cf\u5c0f\u5bb9\u5668\uff0c\u65b0\u52a0\u7684\u5143\u7d20\u4f1a\u81ea\u52a8\u8fdb\u884c\u503c\u521d\u59cb\u5316/\u591a\u4f59\u7684\u5143\u7d20\u4f1a\u88ab\u5220\u9664\u3002 reserve: \u6539\u53d8\u5bb9\u5668\u7684\u5bb9\u91cf\u5927\u5c0f\uff0c\u5e76\u4e14\u53ea\u6709\u5f53\u6240\u9700\u5185\u5b58\u7a7a\u95f4\u5927\u5c0f\u5927\u4e8e\u5f53\u524d\u5bb9\u91cf\u65f6\uff0c\u624d\u4f1a\u6539\u53d8\u5bb9\u5668\u7684\u5bb9\u91cf,\u82e5\u5c0f\u4e8e\uff0c\u5e76\u4e0d\u4f1a\u9000\u56de\u5185\u5b58\u7a7a\u95f4\u3002resize\u540c\u7406\uff0c\u53ea\u80fd\u6539\u53d8\u5bb9\u5668\u5185\u5143\u7d20\u4e2a\u6570\uff0c\u4e0d\u6539\u53d8\u5bb9\u5668\u9884\u7559\u7684\u5185\u5b58\u7a7a\u95f4\u3002 \u2003\u5bb9\u5668\u64cd\u4f5c\u53ef\u80fd\u4f7f\u8fed\u4ee3\u5668\u5931\u6548 array \u2003\u867d\u7136\u4e0d\u80fd\u5bf9\u5185\u7f6e\u6570\u7ec4\u7c7b\u578b\u8fdb\u884c\u62f7\u8d1d\u6216\u8005\u5bf9\u8c61\u8d4b\u503c\u64cd\u4f5c\uff0c\u4f46\u5bb9\u5668array\u5e76\u65e0\u6b64\u9650\u5236\uff0c\u53ea\u4e0d\u8fc7\u8981\u6c42\u521d\u59cb\u503c\u7684\u7c7b\u578b\u548c\u5bb9\u5668\u5927\u5c0f\u8981\u76f8\u540c, \u56e0\u4e3a\u4e0e\u5185\u7f6e\u6570\u7ec4\u4e00\u6837\uff0carray\u7684\u5927\u5c0f\u4e5f\u662f\u7c7b\u578b\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u5b9a\u4e49\u4e00\u4e2aarray\u65f6\uff0c\u9664\u4e86\u6307\u5b9a\u5143\u7d20\u7c7b\u578b\uff0c\u8fd8\u8981\u6307\u5b9a\u5bb9\u5668\u5927\u5c0f\u3002 vector \u2003vector\u4e0e\u6570\u7ec4\u7c7b\u4f3c\uff0c\u62e5\u6709\u4e00\u6bb5\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5e76\u4e14\u8d77\u59cb\u5730\u5740\u4e0d\u53d8\u3002\u4fbf\u4e8e\u968f\u673a\u8bbf\u95ee\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\uff0c\u4f46\u56e0\u4e3a\u5185\u5b58\u7a7a\u95f4\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u5728\u8fdb\u5165\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u65f6\uff0c\u4f1a\u9020\u6210\u5185\u5b58\u5757\u7684\u62f7\u8d1d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\u3002\u6b64\u5916\uff0c\u5f53\u6570\u7ec4\u5185\u5b58\u7a7a\u95f4\u4e0d\u8db3\uff0c\u4f1a\u91c7\u53d6\u6269\u5bb9\uff0c\u901a\u8fc7\u91cd\u65b0\u7533\u8bf7\u4e00\u5757\u66f4\u5927\u7684\u5185\u5b58\u7a7a\u95f4\u8fdb\u884c\u5185\u5b58\u62f7\u8d1d\u3002 \u2003 \u521d\u59cb\u5316 : // 1. \u9ed8\u8ba4\u521d\u59cb\u5316 vector<int> list1; // 2. \u4e24\u79cd\u65b9\u5f0f\u7b49\u4ef7 \uff0clist2 \u521d\u59cb\u5316\u4e3a list \u7684\u62f7\u8d1d vector<int> list2(list); vector<int> list2 = list; // 3. list \u521d\u59cb\u5316\u4e3a\u5217\u8868\u4e2d\u5143\u7d20\u7684\u62f7\u8d1d\uff0c\u5217\u8868\u4e2d\u5143\u7d20\u5fc5\u987b\u4e0e list \u7684\u5143\u7d20\u7c7b\u578b\u76f8\u5bb9 vector<int> list3 = {1,2,3.0,4,5,6,7}; or vector<int> list3 {1,2,3.0,4,5,6,7}; // 4. \u521d\u59cb\u5316\u4e3a\u4e24\u4e2a\u8fed\u4ee3\u5668\u6307\u5b9a\u8303\u56f4\u4e2d\u5143\u7d20\u7684\u62f7\u8d1d\uff0c\u8303\u56f4\u4e2d\u7684\u5143\u7d20\u7c7b\u578b\u5fc5\u987b\u4e0e list3 \u7684\u5143\u7d20\u7c7b\u578b\u76f8\u5bb9\u3002 vector<int> list5(list.begin() + 2, list.end() - 1); // 5. \u9ed8\u8ba4\u503c\u521d\u59cb\u5316\uff0clist \u4e2d\u5c06\u5305\u542b7\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u7f3a\u7701\u7684\u503c\u521d\u59cb\u5316 vector<int> ilist5(7); // 6. \u6307\u5b9a\u503c\u521d\u59cb\u5316\uff0cilist5\u88ab\u521d\u59cb\u5316\u4e3a\u5305\u542b7\u4e2a\u503c\u4e3a3\u7684int vector<int> ilist6(7, 3); \u2003 list \u2003list\u5e95\u5c42\u662f\u7531\u53cc\u5411\u94fe\u8868\u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u5185\u5b58\u7a7a\u95f4\u4e0d\u662f\u8fde\u7eed\u7684\u3002\u6839\u636e\u94fe\u8868\u7684\u5b9e\u73b0\u539f\u7406\uff0cList\u67e5\u8be2\u6548\u7387\u8f83\u4f4e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u4f46\u63d2\u5165\u548c\u5220\u9664\u6548\u7387\u8f83\u9ad8\u3002\u53ea\u9700\u8981\u5728\u63d2\u5165\u7684\u5730\u65b9\u66f4\u6539\u6307\u9488\u7684\u6307\u5411\u5373\u53ef\uff0c\u4e0d\u7528\u79fb\u52a8\u6570\u636e\u3002 \u5173\u8054\u5bb9\u5668 \u6309\u5173\u952e\u5b57\u6765\u4fdd\u5b58\u548c\u8bbf\u95ee\u7684\uff0c\u652f\u6301\u9ad8\u6548\u7684\u5173\u952e\u5b57\u67e5\u627e\u548c\u8bbf\u95ee\u3002 \u2003map\u7684\u4e0b\u6807\u64cd\u4f5c: \u5bf9\u4e00\u4e2amap\u4f7f\u7528\u4e0b\u6807\u51c6\u64cd\u4f5c\uff0c\u82e5\u4f7f\u7528\u4e00\u4e2a\u4e0d\u5728\u5bb9\u5668\u4e2d\u7684\u5173\u952e\u5b57\u4f5c\u4e3a\u4e0b\u6807\uff0c\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u5177\u6709\u6b64\u5173\u952e\u5b57\u7684\u5143\u7d20\u5230map\u4e2d\uff0c\u5e76\u8fdb\u884c\u503c\u521d\u59cb\u5316; \u82e5\u4f7f\u7528m.at[k], \u82e5k\u4e0d\u5728map\u4e2d\uff0c \u5219\u4f1a\u629b\u51faout_of_range\u5f02\u5e38\u3002 \u2003\u6709\u5e8f\u5bb9\u5668\uff1a\u4f7f\u7528\u6bd4\u8f83\u51fd\u6570\u6765\u6bd4\u8f83\u5173\u952e\u5b57\uff0c\u4ece\u800c\u5c06\u5143\u7d20\u6309\u987a\u5e8f\u5b58\u50a8\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bd4\u8f83\u64cd\u4f5c\u662f\u91c7\u7528\u5173\u952e\u5b57\u7c7b\u578b\u7684<\u8fd0\u7b97\u7b26; \u2003\u65e0\u5e8f\u5bb9\u5668\uff1a\u4f7f\u7528\u5173\u952e\u5b57\u7c7b\u578b\u7684==\u8fd0\u7b97\u7b26\u548c\u4e00\u4e2ahash \u7c7b\u578b\u7684\u5bf9\u8c61\u6765\u7ec4\u7ec7\u5bf9\u8c61\uff0c\u56e0\u6b64\u4e0d\u80fd\u76f4\u63a5\u5b9a\u4e49\u5173\u952e\u5b57\u7c7b\u578b\u4e3a\u81ea\u5b9a\u4e49\u7c7b\u7c7b\u578b\u7684\u65e0\u5e8f\u5bb9\u5668\uff0c\u56e0\u4e3a\u7f3a\u5c11hash\u6a21\u677f\uff0c\u6ca1\u6709\u91cd\u8f7d\u201c==\u201d\u8fd0\u7b97\u7b26\uff0c\u6216\u8005\u7f3a\u5c11\u53ef\u4ee5\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u76f8\u7b49\u7684\u51fd\u6570\u3002 \u4ee5unordered_multiset\u4e3a\u4f8b\uff1a using SD_multiset = unordered_multiset \u5176\u4e2dhasher\u51fd\u6570\u8ba1\u7b97hash\u503c\uff1beqOp\u5224\u65ad\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u76f8\u7b49\u3002","title":"About Container"},{"location":"CPP/container/#about-container","text":"","title":"About Container"},{"location":"CPP/container/#_1","text":"\u987a\u5e8f\u5bb9\u5668\u7684\u5143\u7d20\u6392\u5217\u548c\u5143\u7d20\u503c\u5927\u5c0f\u65e0\u5173\uff0c\u800c\u662f\u7531\u5143\u7d20\u6dfb\u52a0\u5230\u5bb9\u5668\u4e2d\u7684\u6b21\u5e8f\u51b3\u5b9a\u7684\u3002 \uff08vector, list, deque, forward_list, array\uff09 \u2003\u521d\u59cb\u5316\uff1a\u5f53\u5c06\u4e00\u4e2a\u5bb9\u5668\u521d\u59cb\u5316\u4e3a\u53e6\u4e00\u4e2a\u5bb9\u5668\u7684\u62f7\u8d1d\u65f6\uff0c\u4e24\u4e2a\u5bb9\u5668\u7684\u5bb9\u5668\u7c7b\u578b\u548c\u5143\u7d20\u7c7b\u578b\u90fd\u5fc5\u987b\u76f8\u540c\uff1b\u82e5\u4f20\u9012\u8fed\u4ee3\u5668\u53c2\u6570\u6765\u62f7\u8d1d\u4e00\u4e2a\u8303\u56f4\u65f6\uff0c\u5219\u4e0d\u8981\u6c42\u5bb9\u5668\u7c7b\u578b\u548c\u5143\u7d20\u7c7b\u578b\u76f8\u540c\uff0c\u53ea\u8981\u80fd\u5c06\u62f7\u8d1d\u7684\u5143\u7d20\u8f6c\u6362\u4e3a\u8981\u521d\u59cb\u5316\u7684\u5bb9\u5668\u7684\u5143\u7d20\u7c7b\u578b\u5373\u53ef\u3002 \u2003emplace: \u8c03\u7528\u4e00\u4e2aemplace/emplace_back/emplace_front\u6210\u5458\u51fd\u6570\u65f6\uff0c\u662f\u5c06\u53c2\u6570\u4f20\u9012\u7ed9\u5143\u7d20\u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570\uff0cemplace\u6210\u5458\u4f7f\u7528\u8fd9\u4e9b\u53c2\u6570\u5728\u5bb9\u5668\u7ba1\u7406\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\u76f4\u63a5\u6784\u9020\u5143\u7d20\u3002 \u2003\u6539\u53d8\u5bb9\u5668\u5927\u5c0f\uff1a\uff08\u4e0d\u9002\u7528\u4e8earray\uff09 resize:\u589e\u5927\u6216\u51cf\u5c0f\u5bb9\u5668\uff0c\u65b0\u52a0\u7684\u5143\u7d20\u4f1a\u81ea\u52a8\u8fdb\u884c\u503c\u521d\u59cb\u5316/\u591a\u4f59\u7684\u5143\u7d20\u4f1a\u88ab\u5220\u9664\u3002 reserve: \u6539\u53d8\u5bb9\u5668\u7684\u5bb9\u91cf\u5927\u5c0f\uff0c\u5e76\u4e14\u53ea\u6709\u5f53\u6240\u9700\u5185\u5b58\u7a7a\u95f4\u5927\u5c0f\u5927\u4e8e\u5f53\u524d\u5bb9\u91cf\u65f6\uff0c\u624d\u4f1a\u6539\u53d8\u5bb9\u5668\u7684\u5bb9\u91cf,\u82e5\u5c0f\u4e8e\uff0c\u5e76\u4e0d\u4f1a\u9000\u56de\u5185\u5b58\u7a7a\u95f4\u3002resize\u540c\u7406\uff0c\u53ea\u80fd\u6539\u53d8\u5bb9\u5668\u5185\u5143\u7d20\u4e2a\u6570\uff0c\u4e0d\u6539\u53d8\u5bb9\u5668\u9884\u7559\u7684\u5185\u5b58\u7a7a\u95f4\u3002 \u2003\u5bb9\u5668\u64cd\u4f5c\u53ef\u80fd\u4f7f\u8fed\u4ee3\u5668\u5931\u6548","title":"\u987a\u5e8f\u5bb9\u5668"},{"location":"CPP/container/#array","text":"\u867d\u7136\u4e0d\u80fd\u5bf9\u5185\u7f6e\u6570\u7ec4\u7c7b\u578b\u8fdb\u884c\u62f7\u8d1d\u6216\u8005\u5bf9\u8c61\u8d4b\u503c\u64cd\u4f5c\uff0c\u4f46\u5bb9\u5668array\u5e76\u65e0\u6b64\u9650\u5236\uff0c\u53ea\u4e0d\u8fc7\u8981\u6c42\u521d\u59cb\u503c\u7684\u7c7b\u578b\u548c\u5bb9\u5668\u5927\u5c0f\u8981\u76f8\u540c, \u56e0\u4e3a\u4e0e\u5185\u7f6e\u6570\u7ec4\u4e00\u6837\uff0carray\u7684\u5927\u5c0f\u4e5f\u662f\u7c7b\u578b\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64\u5b9a\u4e49\u4e00\u4e2aarray\u65f6\uff0c\u9664\u4e86\u6307\u5b9a\u5143\u7d20\u7c7b\u578b\uff0c\u8fd8\u8981\u6307\u5b9a\u5bb9\u5668\u5927\u5c0f\u3002","title":"array"},{"location":"CPP/container/#vector","text":"vector\u4e0e\u6570\u7ec4\u7c7b\u4f3c\uff0c\u62e5\u6709\u4e00\u6bb5\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u5e76\u4e14\u8d77\u59cb\u5730\u5740\u4e0d\u53d8\u3002\u4fbf\u4e8e\u968f\u673a\u8bbf\u95ee\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(1)\uff0c\u4f46\u56e0\u4e3a\u5185\u5b58\u7a7a\u95f4\u662f\u8fde\u7eed\u7684\uff0c\u6240\u4ee5\u5728\u8fdb\u5165\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u65f6\uff0c\u4f1a\u9020\u6210\u5185\u5b58\u5757\u7684\u62f7\u8d1d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\u3002\u6b64\u5916\uff0c\u5f53\u6570\u7ec4\u5185\u5b58\u7a7a\u95f4\u4e0d\u8db3\uff0c\u4f1a\u91c7\u53d6\u6269\u5bb9\uff0c\u901a\u8fc7\u91cd\u65b0\u7533\u8bf7\u4e00\u5757\u66f4\u5927\u7684\u5185\u5b58\u7a7a\u95f4\u8fdb\u884c\u5185\u5b58\u62f7\u8d1d\u3002 \u2003 \u521d\u59cb\u5316 : // 1. \u9ed8\u8ba4\u521d\u59cb\u5316 vector<int> list1; // 2. \u4e24\u79cd\u65b9\u5f0f\u7b49\u4ef7 \uff0clist2 \u521d\u59cb\u5316\u4e3a list \u7684\u62f7\u8d1d vector<int> list2(list); vector<int> list2 = list; // 3. list \u521d\u59cb\u5316\u4e3a\u5217\u8868\u4e2d\u5143\u7d20\u7684\u62f7\u8d1d\uff0c\u5217\u8868\u4e2d\u5143\u7d20\u5fc5\u987b\u4e0e list \u7684\u5143\u7d20\u7c7b\u578b\u76f8\u5bb9 vector<int> list3 = {1,2,3.0,4,5,6,7}; or vector<int> list3 {1,2,3.0,4,5,6,7}; // 4. \u521d\u59cb\u5316\u4e3a\u4e24\u4e2a\u8fed\u4ee3\u5668\u6307\u5b9a\u8303\u56f4\u4e2d\u5143\u7d20\u7684\u62f7\u8d1d\uff0c\u8303\u56f4\u4e2d\u7684\u5143\u7d20\u7c7b\u578b\u5fc5\u987b\u4e0e list3 \u7684\u5143\u7d20\u7c7b\u578b\u76f8\u5bb9\u3002 vector<int> list5(list.begin() + 2, list.end() - 1); // 5. \u9ed8\u8ba4\u503c\u521d\u59cb\u5316\uff0clist \u4e2d\u5c06\u5305\u542b7\u4e2a\u5143\u7d20\uff0c\u6bcf\u4e2a\u5143\u7d20\u8fdb\u884c\u7f3a\u7701\u7684\u503c\u521d\u59cb\u5316 vector<int> ilist5(7); // 6. \u6307\u5b9a\u503c\u521d\u59cb\u5316\uff0cilist5\u88ab\u521d\u59cb\u5316\u4e3a\u5305\u542b7\u4e2a\u503c\u4e3a3\u7684int vector<int> ilist6(7, 3);","title":"vector"},{"location":"CPP/container/#list","text":"list\u5e95\u5c42\u662f\u7531\u53cc\u5411\u94fe\u8868\u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u5185\u5b58\u7a7a\u95f4\u4e0d\u662f\u8fde\u7eed\u7684\u3002\u6839\u636e\u94fe\u8868\u7684\u5b9e\u73b0\u539f\u7406\uff0cList\u67e5\u8be2\u6548\u7387\u8f83\u4f4e\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(n)\uff0c\u4f46\u63d2\u5165\u548c\u5220\u9664\u6548\u7387\u8f83\u9ad8\u3002\u53ea\u9700\u8981\u5728\u63d2\u5165\u7684\u5730\u65b9\u66f4\u6539\u6307\u9488\u7684\u6307\u5411\u5373\u53ef\uff0c\u4e0d\u7528\u79fb\u52a8\u6570\u636e\u3002","title":"list"},{"location":"CPP/container/#_2","text":"\u6309\u5173\u952e\u5b57\u6765\u4fdd\u5b58\u548c\u8bbf\u95ee\u7684\uff0c\u652f\u6301\u9ad8\u6548\u7684\u5173\u952e\u5b57\u67e5\u627e\u548c\u8bbf\u95ee\u3002 \u2003map\u7684\u4e0b\u6807\u64cd\u4f5c: \u5bf9\u4e00\u4e2amap\u4f7f\u7528\u4e0b\u6807\u51c6\u64cd\u4f5c\uff0c\u82e5\u4f7f\u7528\u4e00\u4e2a\u4e0d\u5728\u5bb9\u5668\u4e2d\u7684\u5173\u952e\u5b57\u4f5c\u4e3a\u4e0b\u6807\uff0c\u4f1a\u6dfb\u52a0\u4e00\u4e2a\u5177\u6709\u6b64\u5173\u952e\u5b57\u7684\u5143\u7d20\u5230map\u4e2d\uff0c\u5e76\u8fdb\u884c\u503c\u521d\u59cb\u5316; \u82e5\u4f7f\u7528m.at[k], \u82e5k\u4e0d\u5728map\u4e2d\uff0c \u5219\u4f1a\u629b\u51faout_of_range\u5f02\u5e38\u3002 \u2003\u6709\u5e8f\u5bb9\u5668\uff1a\u4f7f\u7528\u6bd4\u8f83\u51fd\u6570\u6765\u6bd4\u8f83\u5173\u952e\u5b57\uff0c\u4ece\u800c\u5c06\u5143\u7d20\u6309\u987a\u5e8f\u5b58\u50a8\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bd4\u8f83\u64cd\u4f5c\u662f\u91c7\u7528\u5173\u952e\u5b57\u7c7b\u578b\u7684<\u8fd0\u7b97\u7b26; \u2003\u65e0\u5e8f\u5bb9\u5668\uff1a\u4f7f\u7528\u5173\u952e\u5b57\u7c7b\u578b\u7684==\u8fd0\u7b97\u7b26\u548c\u4e00\u4e2ahash \u7c7b\u578b\u7684\u5bf9\u8c61\u6765\u7ec4\u7ec7\u5bf9\u8c61\uff0c\u56e0\u6b64\u4e0d\u80fd\u76f4\u63a5\u5b9a\u4e49\u5173\u952e\u5b57\u7c7b\u578b\u4e3a\u81ea\u5b9a\u4e49\u7c7b\u7c7b\u578b\u7684\u65e0\u5e8f\u5bb9\u5668\uff0c\u56e0\u4e3a\u7f3a\u5c11hash\u6a21\u677f\uff0c\u6ca1\u6709\u91cd\u8f7d\u201c==\u201d\u8fd0\u7b97\u7b26\uff0c\u6216\u8005\u7f3a\u5c11\u53ef\u4ee5\u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u76f8\u7b49\u7684\u51fd\u6570\u3002 \u4ee5unordered_multiset\u4e3a\u4f8b\uff1a using SD_multiset = unordered_multiset \u5176\u4e2dhasher\u51fd\u6570\u8ba1\u7b97hash\u503c\uff1beqOp\u5224\u65ad\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u76f8\u7b49\u3002","title":"\u5173\u8054\u5bb9\u5668"},{"location":"CPP/exception/","text":"About Exception \u5f02\u5e38\u5bf9\u8c61 \u7f16\u8bd1\u5668\u4f7f\u7528\u5f02\u5e38\u629b\u51fa\u8868\u8fbe\u5f0f\u6765\u5bf9\u5f02\u5e38\u5bf9\u8c61\u8fdb\u884c\u62f7\u8d1d\u521d\u59cb\u5316\u3002 \u5f53\u6211\u4eec\u629b\u51fa\u4e00\u6761\u8868\u8fbe\u5f0f\u65f6\uff0c\u8be5\u8868\u8fbe\u5f0f\u7684\u9759\u6001\u7f16\u8bd1\u65f6\u7c7b\u578b\u51b3\u5b9a\u4e86\u5f02\u5e38\u5bf9\u8c61\u7684\u7c7b\u578b\u3002\u56e0\u6b64\u5982\u679c\u4e00\u6761Throw\u8868\u8fbe\u5f0f\u89e3\u5f15\u7528\u4e00\u4e2a\u57fa\u7c7b\u6307\u9488\uff0c\u800c\u8be5\u6307\u9488\u5b9e\u9645\u6307\u5411\u7684\u662f\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5219\u629b\u51fa\u7684\u5bf9\u8c61\u88ab\u5207\u6389\u4e00\u90e8\u5206\uff0c\u53ea\u6709\u57fa\u7c7b\u90e8\u5206\u88ab\u629b\u51fa\u3002 \u91cd\u65b0\u629b\u51fa\uff1athrow; \u7a7a\u7684throw\u8bed\u53e5\u53ea\u80fd\u51fa\u73b0\u5728catch\u8bed\u53e5\u6216catch\u8bed\u53e5\u76f4\u63a5\u6216\u95f4\u63a5\u8c03\u7528\u7684\u51fd\u6570\u4e4b\u5185\u3002\u5982\u679c\u5728\u5904\u7406\u4ee3\u7801\u4e4b\u5916\u7684\u533a\u57df\u9047\u5230\u4e86\u7a7athrow\u8bed\u53e5\uff0c\u7f16\u8bd1\u5668\u5c06\u8c03\u7528terminate\u3002 \u4e00\u4e2a\u91cd\u65b0\u629b\u51fa\u8bed\u53e5\u5e76\u4e0d\u6307\u5b9a\u65b0\u7684\u8868\u8fbe\u5f0f\uff0c\u800c\u662f\u5c06\u5f53\u524d\u7684\u5f02\u5e38\u5bf9\u8c61\u6cbf\u7740\u8c03\u7528\u94fe\u5411\u4e0a\u4f20\u9012\u3002 \u6355\u83b7\u6240\u6709\u5f02\u5e38\uff1acatch(...)\uff0c \u53ef\u4ee5\u4e0e\u4efb\u610f\u7c7b\u578b\u7684\u5f02\u5e38\u5339\u914d\u3002 noexcept\u8bf4\u660e\u7b26 \u2003\u6307\u660e\u51fd\u6570\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u7d27\u8ddf\u51fd\u6570\u5f62\u53c2\u5217\u8868\u4e4b\u540e\uff0cconst\u53ca\u5f15\u7528\u9650\u5b9a\u7b26\u4e4b\u540e\uff0cfinal\\override\u6216\u865a\u51fd\u6570\u7684=0\u4e4b\u524d\u3002 \u82e5\u5b9e\u9645\u4e2d\u4ecd\u7136\u53d1\u751f\u4e86\u5f02\u5e38\uff0c\u5219\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8c03\u7528terminate\u3002 \u5176\u901a\u5e38\u4e0enoexcept\u8fd0\u7b97\u7b26\u6df7\u5408\u4f7f\u7528\uff0c\u540e\u8005\u8fd4\u56de\u503c\u662f\u4e00\u4e2abool\u7c7b\u578b\u7684\u53f3\u503c\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002 void foo() noexcept; // \u7b49\u4ef7\u4e8e void foo() noexcept(true); void swap(Type& x, Type& y) noexcept(noexcept(x.swap())){ x.swap(y); }","title":"About Exception"},{"location":"CPP/exception/#about-exception","text":"","title":"About Exception"},{"location":"CPP/exception/#_1","text":"\u7f16\u8bd1\u5668\u4f7f\u7528\u5f02\u5e38\u629b\u51fa\u8868\u8fbe\u5f0f\u6765\u5bf9\u5f02\u5e38\u5bf9\u8c61\u8fdb\u884c\u62f7\u8d1d\u521d\u59cb\u5316\u3002 \u5f53\u6211\u4eec\u629b\u51fa\u4e00\u6761\u8868\u8fbe\u5f0f\u65f6\uff0c\u8be5\u8868\u8fbe\u5f0f\u7684\u9759\u6001\u7f16\u8bd1\u65f6\u7c7b\u578b\u51b3\u5b9a\u4e86\u5f02\u5e38\u5bf9\u8c61\u7684\u7c7b\u578b\u3002\u56e0\u6b64\u5982\u679c\u4e00\u6761Throw\u8868\u8fbe\u5f0f\u89e3\u5f15\u7528\u4e00\u4e2a\u57fa\u7c7b\u6307\u9488\uff0c\u800c\u8be5\u6307\u9488\u5b9e\u9645\u6307\u5411\u7684\u662f\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5219\u629b\u51fa\u7684\u5bf9\u8c61\u88ab\u5207\u6389\u4e00\u90e8\u5206\uff0c\u53ea\u6709\u57fa\u7c7b\u90e8\u5206\u88ab\u629b\u51fa\u3002 \u91cd\u65b0\u629b\u51fa\uff1athrow; \u7a7a\u7684throw\u8bed\u53e5\u53ea\u80fd\u51fa\u73b0\u5728catch\u8bed\u53e5\u6216catch\u8bed\u53e5\u76f4\u63a5\u6216\u95f4\u63a5\u8c03\u7528\u7684\u51fd\u6570\u4e4b\u5185\u3002\u5982\u679c\u5728\u5904\u7406\u4ee3\u7801\u4e4b\u5916\u7684\u533a\u57df\u9047\u5230\u4e86\u7a7athrow\u8bed\u53e5\uff0c\u7f16\u8bd1\u5668\u5c06\u8c03\u7528terminate\u3002 \u4e00\u4e2a\u91cd\u65b0\u629b\u51fa\u8bed\u53e5\u5e76\u4e0d\u6307\u5b9a\u65b0\u7684\u8868\u8fbe\u5f0f\uff0c\u800c\u662f\u5c06\u5f53\u524d\u7684\u5f02\u5e38\u5bf9\u8c61\u6cbf\u7740\u8c03\u7528\u94fe\u5411\u4e0a\u4f20\u9012\u3002 \u6355\u83b7\u6240\u6709\u5f02\u5e38\uff1acatch(...)\uff0c \u53ef\u4ee5\u4e0e\u4efb\u610f\u7c7b\u578b\u7684\u5f02\u5e38\u5339\u914d\u3002","title":"\u5f02\u5e38\u5bf9\u8c61"},{"location":"CPP/exception/#noexcept","text":"\u6307\u660e\u51fd\u6570\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u7d27\u8ddf\u51fd\u6570\u5f62\u53c2\u5217\u8868\u4e4b\u540e\uff0cconst\u53ca\u5f15\u7528\u9650\u5b9a\u7b26\u4e4b\u540e\uff0cfinal\\override\u6216\u865a\u51fd\u6570\u7684=0\u4e4b\u524d\u3002 \u82e5\u5b9e\u9645\u4e2d\u4ecd\u7136\u53d1\u751f\u4e86\u5f02\u5e38\uff0c\u5219\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8c03\u7528terminate\u3002 \u5176\u901a\u5e38\u4e0enoexcept\u8fd0\u7b97\u7b26\u6df7\u5408\u4f7f\u7528\uff0c\u540e\u8005\u8fd4\u56de\u503c\u662f\u4e00\u4e2abool\u7c7b\u578b\u7684\u53f3\u503c\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002 void foo() noexcept; // \u7b49\u4ef7\u4e8e void foo() noexcept(true); void swap(Type& x, Type& y) noexcept(noexcept(x.swap())){ x.swap(y); }","title":"noexcept\u8bf4\u660e\u7b26"},{"location":"CPP/friend_template/","text":"About friend and template friend \u2003\u5728\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u628a\u4e00\u4e9b\u51fd\u6570\uff08\u5305\u62ec\u5168\u5c40\u51fd\u6570\u548c\u5176\u4ed6\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff09\u58f0\u660e\u4e3a\u201c\u53cb\u5143\u201d\uff0c\u8fd9\u6837\u90a3\u4e9b\u51fd\u6570\u5c31\u6210\u4e3a\u8be5\u7c7b\u7684\u53cb\u5143\u51fd\u6570\uff0c\u5728\u53cb\u5143\u51fd\u6570\u5185\u90e8\u5c31\u53ef\u4ee5\u8bbf\u95ee\u8be5\u7c7b\u5bf9\u8c61\u7684\u79c1\u6709\u6210\u5458\u4e86\u3002 \u5c06\u5168\u5c40\u51fd\u6570\u58f0\u660e\u4e3a\u53cb\u5143\u7684\u5199\u6cd5\u5982\u4e0b\uff1a friend \u8fd4\u56de\u503c\u7c7b\u578b \u51fd\u6570\u540d(\u53c2\u6570\u8868); \u5c06\u5176\u4ed6\u7c7b\u7684\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a\u53cb\u5143\u7684\u5199\u6cd5\u5982\u4e0b\uff1a friend \u8fd4\u56de\u503c\u7c7b\u578b \u5176\u4ed6\u7c7b\u7684\u7c7b\u540d::\u6210\u5458\u51fd\u6570\u540d(\u53c2\u6570\u8868); \u4f46\u662f\uff0c\u4e0d\u80fd\u628a\u5176\u4ed6\u7c7b\u7684\u79c1\u6709\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a\u53cb\u5143. \u2003\u53cb\u5143\u7684\u58f0\u660e\uff1a\u53ea\u80fd\u51fa\u73b0\u5728\u7c7b\u5b9a\u4e49\u7684\u5185\u90e8\uff0c\u5728\u7c7b\u5185\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e0d\u9650\uff1b\u53cb\u5143\u4e0d\u662f\u7c7b\u7684\u6210\u5458\uff0c\u4e5f\u4e0d\u53d7\u5b83\u6240\u5728\u533a\u57df\u8bbf\u95ee\u63a7\u5236\u7ea7\u522b\u7684\u7ea6\u675f\uff1b\u53cb\u5143\u7684\u58f0\u660e\u4ec5\u4ec5\u6307\u5b9a\u4e86\u8bbf\u95ee\u7684\u6743\u9650\uff0c\u800c\u975e\u4e00\u4e2a\u901a\u5e38\u610f\u4e49\u4e0a\u7684\u51fd\u6570\u58f0\u660e\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u7c7b\u7684\u7528\u6237\u80fd\u8c03\u7528\u67d0\u4e2a\u53cb\u5143\u51fd\u6570\uff0c\u5fc5\u987b\u5728\u53cb\u5143\u58f0\u660e\u4e4b\u5916\u518d\u4e13\u95e8\u5bf9\u51fd\u6570\u8fdb\u884c\u4e00\u6b21\u58f0\u660e\u3002 \u2003\u4e00\u4e2a\u7c7b A \u53ef\u4ee5\u5c06\u53e6\u4e00\u4e2a\u7c7b B \u58f0\u660e\u4e3a\u81ea\u5df1\u7684\u53cb\u5143\uff0c\u7c7b B \u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u5c31\u90fd\u53ef\u4ee5\u8bbf\u95ee\u7c7b A \u5bf9\u8c61\u7684\u79c1\u6709\u6210\u5458\u3002\u5728\u7c7b\u5b9a\u4e49\u4e2d\u58f0\u660e\u53cb\u5143\u7c7b\u7684\u5199\u6cd5\u5982\u4e0b\uff1a friend class \u7c7b\u540d; template \u7c7b\u6a21\u677f\uff1a\u4e00\u4e2a\u7c7b\u6a21\u677f(\u7c7b\u751f\u6210\u7c7b)\u5141\u8bb8\u7528\u6237\u4e3a\u7c7b\u5b9a\u4e49\u4e2a\u4e00\u79cd\u6a21\u5f0f\uff0c\u4f7f\u5f97\u7c7b\u4e2d\u7684\u67d0\u4e9b\u6570\u636e\u6210\u5458\u3001\u9ed8\u8ba4\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\uff0c\u67d0\u4e9b\u6210\u5458\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u80fd\u591f\u53d6\u4efb\u610f\u7c7b\u578b(\u5305\u62ec\u7cfb\u7edf\u9884\u5b9a\u4e49\u7684\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u7684)\u3002\u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u7684\u6570\u636e\u6210\u5458\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u80fd\u786e\u5b9a\uff0c\u6216\u8005\u662f\u67d0\u4e2a\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\u6216\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u4e0d\u80fd\u786e\u5b9a\uff0c\u5c31\u5fc5\u987b\u5c06\u6b64\u7c7b\u58f0\u660e\u4e3a\u6a21\u677f\uff0c\u5b83\u7684\u5b58\u5728\u4e0d\u662f\u4ee3\u8868\u4e00\u4e2a\u5177\u4f53\u7684\u3001\u5b9e\u9645\u7684\u7c7b\uff0c\u800c\u662f\u4ee3\u8868\u4e00\u7c7b\u7c7b\u3002 \u901a\u8fc7 typename \u6216 class \u5173\u952e\u5b57\u5c06T\u89c6\u4e3a\u4e00\u79cd\u672a\u77e5\u7c7b\u578b \u7c7b\u6a21\u677f\u7684\u58f0\u660e\u548c\u5b9e\u73b0\u8981\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5426\u5219\uff0c\u4f1a\u51fa\u73b0\u8fde\u63a5\u9519\u8bef\u3002 C++ - \u7c7b\u6a21\u677f(class template)\u53cb\u5143(friend) \u7684 \u5168\u90e8\u516d\u79cd\u5f62\u5f0f \u53ca\u4ee3\u7801 #include <iostream> #include <string> template <typename T> class Pal; //\u6a21\u677f\u7c7b\u7684\u524d\u7f6e\u58f0\u660e class C { friend class Pal<C>; //\"\u4ee5\u7c7bC\u5b9e\u4f8b\u5316\"\u7684Pal\u7c7b, \u4e3aC\u7684\u53cb\u5143 template <typename T> friend class Pal2; //Pal2\u7c7b\u7684\u6240\u6709\u5b9e\u4f8b\u5316, \u90fd\u4e3aC\u7684\u53cb\u5143 private: void print() { std::cout << \"class C\" << std::endl; } }; template <typename T> class C2 { friend class Pal<T>; //\"\u4e0eC2\u7c7b\u76f8\u540c\u5b9e\u4f8b\u5316\"\u7684Pal\u7c7b, \u4e3aC2\u7684\u53cb\u5143 //Pal2\u7c7b\u7684\u6240\u6709\u5b9e\u4f8b\u5316, \u90fd\u4e3aC2\u7684\u53cb\u5143, \u6ce8\u610f\u6a21\u677f\u53c2\u6570(X)\u4e0d\u80fd\u76f8\u540c template <typename X> friend class Pal2; friend class Pal3; //\u666e\u901a\u53cb\u5143 friend T; //C++11 \u6a21\u677f\u7c7b\u578b\u53c2\u6570\u53cb\u5143 private: void print() { std::cout << \"class C2\" << std::endl; } }; template <typename T> class Pal { C myC; C2<T> myC2; //\u5fc5\u987b\u4e3aT //C2<double> myC2; //\u5b9e\u4f8b\u5316\u4e0d\u540c, \u65e0\u6cd5\u4f7f\u7528 public: void printC() { std::cout << \"this is class Pal : \"; myC.print(); } void printC2() { std::cout << \"this is class Pal : \"; myC2.print(); } }; template <typename T> class Pal2 { C myC; C2<double> myC2; public: void printC() { std::cout << \"this is class Pal2 : \"; myC.print(); } void printC2() { std::cout << \"this is class Pal2 : \"; myC2.print(); } }; class Pal3 { C2<double> myC2; public: void printC2() { std::cout << \"this is class Pal3 : \"; myC2.print(); } }; class Pal4 { C2<Pal4> myC2; //\u6ce8\u610fPal4\u662fC2\u7c7b\u7684\u6a21\u677f\u53c2\u6570 public: void printC2() { std::cout << \"this is class Pal4 : \"; myC2.print(); } }; int main (void) { Pal<C> pc; //Pal\u7c7b\u5fc5\u987b\u5b9e\u4f8b\u5316\u4e3aC pc.printC(); //\u53ef\u4ee5\u4f7f\u7528 //Pal<int> pci; //pci.print(); //\u62a5\u9519, \u8bbf\u95ee\u4e86\u79c1\u6709\u6210\u5458 Pal2<int> pi2; //Pal2\u7c7b\u53ef\u4ee5\u968f\u610f\u5b9e\u4f8b\u5316 pi2.printC(); Pal<int> pi; //\u6709\u76f8\u540c\u7684\u793a\u4f8b\u5316, \u5728\u7c7b\u58f0\u660eC2<T> pi.printC2(); pi2.printC2(); //\u6ce8\u610f, Pal2\u7c7b\u88ab\u5b9e\u4f8b\u5316\u4e3a<int>, \u5185\u90e8C2\u7c7b\u88ab\u5b9e\u4f8b\u5316\u4e3a<double>; Pal3 p3; p3.printC2(); Pal4 p4; p4.printC2(); return 0; } typename \u58f0\u660e\u4e00\u4e2a\u7c7b\u578b \u2003\u9ed8\u8ba4\u60c5\u51b5\uff0cC++\u8bed\u8a00\u5047\u5b9a\u901a\u8fc7\u4f5c\u7528\u57df\u8fd0\u7b97\u7b26\u8bbf\u95ee\u7684\u540d\u5b57\u4e0d\u662f\u7c7b\u578b\uff0c\u800c\u662fstatic\u6210\u5458\uff0c\u5982T::m\uff1b\u4f8b\u5982\u5728\u7c7b\u6a21\u677f\u4e2d\u5982\u679c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53\u6a21\u677f\uff0c\u4e14\u5b58\u5728\u8fd4\u56de\u7c7b\u578b\u4e3a\u8be5\u7ed3\u6784\u4f53\u6307\u9488\u7684\u6210\u5458\u51fd\u6570\uff0c\u5219\u5728\u7c7b\u5916\u5b9e\u73b0\u8be5\u6210\u5458\u51fd\u6570\u5b9a\u4e49\u65f6\uff0c\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u683c\u5f0f\uff1a template<typename T> class A{ private: struct s{ T val; } s* fun(s*); } template<typename T> typename A<T>::s* A<T>::fun(s*){} \u2003\u2003\u6a21\u677f\u4e2d\u4f9d\u8d56\u4e8e\u6a21\u677f\u53c2\u6570\u7684\u540d\u79f0\u5c5e\u4e8edependent name,\u800c\u5176\u5d4c\u5957\u5728\u4e00\u4e2a\u7c7b\u91cc\u9762\u65f6\uff0c\u79f0\u4e3anested dependent name, \u4e0a\u8ff0\u7684A ::s\u5373\u5c5e\u4e8enested dependent name, \u5728\u58f0\u660e\u65f6\u9700\u8981\u7528typename\u58f0\u660e\uff1b \u5f53\u6a21\u677f\u53c2\u6570T\u5df2\u77e5\u65f6\uff0c\u5219\u65e0\u9700typename. // \u6a21\u677f\u7279\u5316 template<> A<double>::s* A<double>::fcn(){..} A<int>::s s1; \u2003\u2003\u5728\u6d3e\u751f\u7c7b\u7684\u57fa\u7c7b\u5217\u8868\u4ee5\u53ca\u6784\u9020\u51fd\u6570\u7684\u57fa\u7c7b\u521d\u59cb\u5316\u5217\u8868\u4e2d\uff0c\u5219\u4e0d\u5141\u8bb8typename template<typename T> class Derived: public Base<T>{ Derived(T t): Base<T>(t){..} } \u5728\u5b9e\u4f8b\u5316\u7c7b\u6a21\u677f\u65f6\uff0c\u7a7a<>\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u6a21\u677f\u5b9e\u53c2 template <class T=int> class Numbers{...}; Numbers<> a; \u63a7\u5236\u5b9e\u4f8b\u5316\uff1a\u5728\u4ee3\u7801\u4e2d\u5305\u542b\u7c7b/\u51fd\u6570\u6a21\u677f\u672c\u8eab\u4e0d\u4f1a\u751f\u6210\u7c7b/\u51fd\u6570\u5b9a\u4e49,\u7f16\u8bd1\u5668\u4f7f\u7528\u6a21\u677f\u4e3a\u7279\u5b9a\u7c7b\u578b\u751f\u6210\u7c7b/\u51fd\u6570\u5b9a\u4e49\u65f6\uff0c\u5f97\u5230\u7684\u662f\u6a21\u677f\u5b9e\u4f8b\uff0c\u56e0\u6b64\u76f8\u540c\u7684\u5b9e\u4f8b(\u5373\u91c7\u7528\u76f8\u540c\u7c7b\u578b\u751f\u6210\u7684\u5b9e\u4f8b)\u53ef\u80fd\u51fa\u73b0\u5728\u591a\u4e2a\u5bf9\u8c61\u6587\u4ef6\u4e2d\uff0c\u5f53\u591a\u4e2a\u72ec\u7acb\u7f16\u8bd1\u7684\u6e90\u6587\u4ef6\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u6a21\u677f\uff0c\u5e76\u63d0\u4f9b\u4e86\u76f8\u540c\u7684\u6a21\u677f\u53c2\u6570\u65f6\uff0c\u6bcf\u4e2a\u6587\u4ef6\u5c31\u4f1a\u6709\u8be5\u6a21\u677f\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u9020\u6210\u4e25\u91cd\u7684\u989d\u5916\u5f00\u9500\u3002 \u4f7f\u7528\u663e\u793a\u5b9e\u4f8b\u5316\u6765\u907f\u514d\u4e0a\u8ff0\u5f00\u9500\uff1a extern template declaration; //\u5b9e\u4f8b\u5316\u58f0\u660e template declaration; //\u663e\u793a\u5b9e\u4f8b\u5316\u7684\u5b9a\u4e49 \u2003\u2003declaration\u662f\u4e00\u4e2a\u7c7b\u6216\u51fd\u6570\u58f0\u660e\uff0c\u5176\u4e2d\u6240\u6709\u6a21\u677f\u53c2\u6570\u5df2\u88ab\u66ff\u6362\u4e3a\u6a21\u677f\u5b9e\u53c2\u3002\u4f8b\u5982: extern template const int & Max (const int &a, const int &b); \u2003\u2003\u5f53\u7f16\u8bd1\u5668\u9047\u5230extern\u6a21\u677f\u58f0\u660e\u65f6\uff0c\u5b83\u4e0d\u4f1a\u5728\u672c\u6587\u4ef6\u4e2d\u751f\u6210\u5b9e\u4f8b\u5316\u4ee3\u7801\u3002\u5c06\u4e00\u4e2a\u5b9e\u4f8b\u5316\u58f0\u660e\u4e3aextern\u5c31\u8868\u793a\u627f\u8bfa\u5728\u7a0b\u5e8f\u5176\u4ed6\u4f4d\u7f6e\u6709\u8be5\u5b9e\u4f8b\u5316\u7684\u4e00\u4e2a\u975eextern\u58f0\u660e\uff08\u5b9a\u4e49\uff09\u3002 \u8fd9\u6837\u4e0d\u540c\u7684\u5bf9\u8c61\u6587\u4ef6\u4e2d\u5173\u4e8e\u8be5\u6a21\u677f\u4ec5\u6709\u4e00\u4efd\u5b9e\u4f8b\u3002 \u2003\u2003\u5728\u4e00\u4e2a\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u5b9a\u4e49\u4e2d\uff0c\u6240\u7528\u7c7b\u578b\u5fc5\u987b\u80fd\u7528\u4e8e\u6a21\u677f\u7684\u6240\u6709\u6210\u5458\u51fd\u6570\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u4f1a\u5b9e\u4f8b\u5316\u8be5\u7c7b\u7684\u6240\u6709\u6210\u5458\u3002 \u800c\u5728\u5904\u7406\u7c7b\u6a21\u677f\u7684\u666e\u901a\u5b9e\u4f8b\u5316\u65f6\uff0c\u5176\u6210\u5458\u53ea\u6709\u5728\u4f7f\u7528\u65f6\u624d\u88ab\u5b9e\u4f8b\u5316\u3002 \u2003\u5c06\u5b9e\u53c2\u4f20\u9012\u7ed9\u5e26\u6a21\u677f\u7c7b\u578b\u7684\u51fd\u6570\u5b9e\u53c2\u65f6\uff0c\u5f62\u53c2\u548c\u5b9e\u53c2\u4e2d\u7684\u9876\u5c42const\u4f1a\u88ab\u5ffd\u7565\uff1b\u80fd\u591f\u81ea\u52a8\u5e94\u7528\u7684\u7c7b\u578b\u8f6c\u6362\u53ea\u6709const\u8f6c\u6362\uff08\u53ef\u4ee5\u5c06\u4e00\u4e2a\u975econst\u5bf9\u8c61\u7684\u5f15\u7528\u6216\u6307\u9488\u4f20\u9012\u7ed9\u4e00\u4e2aconst\u7684\u5f15\u7528\u6216\u6307\u9488\u5f62\u53c2\uff09\uff0c\u4ee5\u53ca\u6570\u7ec4\u6216\u51fd\u6570\u5230\u6307\u9488\u7684\u8f6c\u6362\uff08\u8981\u6c42\u51fd\u6570\u5f62\u53c2\u4e0d\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5426\u5219\u6570\u7ec4\u4e0d\u4f1a\u8f6c\u6362\u4e3a\u6307\u9488\uff09\u3002 \u2003\u82e5\u6a21\u677f\u7c7b\u578b\u53c2\u6570\u7528\u4f5c\u591a\u4e2a\u51fd\u6570\u5f62\u53c2\u7684\u7c7b\u578b\uff0c\u7531\u4e8e\u53ea\u5141\u8bb8\u6709\u9650\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u5219\u4f20\u9012\u7ed9\u8fd9\u4e9b\u5f62\u53c2\u7684\u5b9e\u53c2\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u7c7b\u578b\uff0c\u82e5\u63a8\u65ad\u51fa\u7684\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u5219\u8c03\u7528\u9519\u8bef\u3002\u5bf9\u4e8e\u51fd\u6570\u6a21\u677f\u4e2d\u7684\u666e\u901a\u7c7b\u578b\u5b9a\u4e49\u7684\u53c2\u6570\uff0c\u5176\u53ef\u4ee5\u6b63\u5e38\u8f6c\u6362\u4e3a\u5bf9\u5e94\u5f62\u53c2\u7684\u7c7b\u578b\u3002 \u6a21\u677f\u7279\u4f8b\u5316 \u2003\u4e00\u4e2a\u7279\u4f8b\u5316\u6a21\u677f\u5c31\u662f\u6a21\u677f\u7684\u4e00\u4e2a\u72ec\u7acb\u7684\u5b9a\u4e49\u6216\u8005\u5b9e\u4f8b\uff0c\u5728\u5176\u4e2d\u4e00\u4e2a\u6216\u591a\u4e2a\u6a21\u677f\u53c2\u6570\u88ab\u6307\u5b9a\u4e3a\u7279\u5b9a\u7684\u7c7b\u578b\u3002 \u51fd\u6570\u6a21\u677f\u7279\u4f8b\u5316\u672c\u8d28\u662f\u4e00\u4e2a\u7279\u4f8b\uff0c\u800c\u975e\u51fd\u6570\u540d\u7684\u4e00\u4e2a\u91cd\u8f7d\u7248\u672c\u3002 \u2003\u6a21\u677f\u7279\u4f8b\u5316\u53c8\u5206\u4e3a\u5168\u7279\u5316\u548c\u504f\u7279\u5316(\u4f8b\u5982\u90e8\u5206\u53c2\u6570\u7279\u5316\uff0c\u6216\u8005\u53c2\u6570\u8303\u56f4\u4e0a\u8fdb\u884c\u7279\u5316, < T*>) \u2003\u5bf9\u4e8e\u4e00\u4e9b\u5b9a\u4e49\u5728std namespace\u4e2d\u7684class template \u548c function template\uff0cC++\u5141\u8bb8\u6211\u4eec\u540c\u6837\u5728std namespace\u4e2d\uff0c\u5bf9\u4e24\u8005\u8fdb\u884c\u5168\u7279\u5316\uff0c\u4f46\u53ea\u5141\u8bb8\u5bf9\u524d\u8005\u8fdb\u884c\u504f\u7279\u5316\uff1b\u53ef\u4ee5\u5728name space\u4e2d\u63d0\u4f9bfuntion template\u7684\u91cd\u8f7d\u7248\u672c\uff0c\u4e0d\u8fc7\u6700\u597d\u5728\u81ea\u5b9a\u4e49namespace\u65f6\u4e2d\u5b9e\u73b0 funtion template\u7684\u504f\u7279\u5316\u7248\u672c \u6807\u51c6\u5e93\u6a21\u677ffunction \u2003 function f(obj) or function f=obj; //f\u4e2d\u5b58\u50a8\u4e86\u51fd\u6570\u7c7b\u578b\u4e3aT\u7684\u53ef\u8c03\u7528\u5bf9\u8c61obj\u7684\u526f\u672c\u3002 obj\u53ef\u4ee5\u662f\u51fd\u6570\u6307\u9488\u3001\u51fd\u6570\u5bf9\u8c61\u7c7b\u7684\u5bf9\u8c61\u3001lambda. \u56e0\u6b64\u5bf9\u4e8e\u4e0d\u662f\u53ef\u8c03\u7528\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u6307\u9488,\u53ef\u4ee5\u901a\u8fc7function\u751f\u6210\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\u3002 function<bool (const string&)> fcn = &string::empty; auto fcn = mem_fn(&string::empty); // mem_fn\u53ef\u4ee5\u6839\u636e\u6210\u5458\u6307\u9488\u7684\u7c7b\u578b\u63a8\u65ad\u53ef\u8c03\u7528\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u65e0\u987b\u7528\u6237\u663e\u5f0f\u6307\u5b9a\u3002 Alias Template template <typename T> using Vec = std::vector<T, MyAlloc<t>>; Vec<int> coll; //\u7b49\u4ef7\u4e8e std::vector<int, Myalloc<int>> coll; // \u8fd9\u91cc\u65e0\u6cd5\u91c7\u7528macro\u6216\u8005typedef,\u524d\u8005\u53ea\u662f\u7b80\u5355\u7684\u66ff\u6362\uff1b\u540e\u8005\u4e0d\u80fd\u63a5\u53d7\u53c2\u6570 \u2003 \u601d\u8003:\u5728\u6a21\u677f\u63a5\u53d7\u4e00\u4e2atemplate\u53c2\u6570Container\u65f6\uff0c\u5f53Container\u672c\u8eab\u53c8\u662f\u4e00\u4e2aclass template,\u5982\u4f55\u53d6\u51fa\u5176template\u53c2\u6570\uff0c\u4f8b\u5982\u63a5\u53d7vector , \u53d6\u51fa\u5176\u5143\u7d20\u7c7b\u578b\u3002 // function template+iterator+traits template<typename Container> void test(Contrainer c){ typedef typename iterator_traits<typename Container::iterator>::value_type Valtype; ... } // template template parameter + alias template template<typename T, template<class> class Container> class X{ private: Container<T> c; }; template<typename T> using Vec=vector<T, allocator<T>> //\u4e0d\u80fd\u518dfunction body\u4e2d\u58f0\u660e X<string, Vec> x1; variadic template \u2003\u63a5\u53d7\u53ef\u53d8\u6570\u76ee\u53c2\u6570\u7684\u6a21\u677f\u51fd\u6570\u6216\u6a21\u677f\u7c7b\uff0c\u53ef\u53d8\u6570\u76ee\u7684\u53c2\u6570\u88ab\u79f0\u4e3a\u53c2\u6570\u5305\u3002 \u6a21\u677f\u53c2\u6570\u5305: class...\u6216typename...\u6307\u51fa\u63a5\u4e0b\u6765\u7684\u53c2\u6570\u8868\u793a\u96f6\u4e2a\u6216\u591a\u4e2a\u7c7b\u578b\u7684\u5217\u8868\uff1b \u51fd\u6570\u53c2\u6570\u5305: \u4e00\u4e2a\u7c7b\u578b\u540d\u540e\u9762\u8ddf\u4e00\u4e2a\u7701\u7565\u53f7\u8868\u793a\u96f6\u4e2a\u6216\u591a\u4e2a\u7ed9\u5b9a\u7c7b\u578b\u7684\u975e\u7c7b\u578b\u53c2\u6570\u7684\u5217\u8868\u3002 sizeof...(): \u8fd0\u7b97\u7b26\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5e38\u91cf\u8868\u8fbe\u5f0f\uff0c\u8868\u793a\u53c2\u6570\u5305\u4e2d\u5143\u7d20\u6570\u76ee\u3002 // example 1 void printX(){} // to end the recursion, the non-template overload of printX is provided. template<typename T, typename... Types> void printX(const T& first, const Types&... args){ cout << first<<endl>; printX(args...); } // template <typename... Types> void printX(const Types&... args){} \u53ef\u4ee5\u548c\u4e0a\u9762\u5e76\u5b58\uff0c\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u56e0\u4e3a\u4e0a\u9762\u7684\u5c5e\u4e8e\u7279\u5316\u7248\u672c // example 2 //\u4f8b2\u4e2d\u7684Head::type\u4e0d\u80fd\u88ab\u7f16\u8bd1\u901a\u8fc7\uff0c \u5e94\u4fee\u6539\u4e3a\u4e0b\u9762 // example 3","title":"About friend and template"},{"location":"CPP/friend_template/#about-friend-and-template","text":"","title":"About friend and template"},{"location":"CPP/friend_template/#friend","text":"\u5728\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u628a\u4e00\u4e9b\u51fd\u6570\uff08\u5305\u62ec\u5168\u5c40\u51fd\u6570\u548c\u5176\u4ed6\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff09\u58f0\u660e\u4e3a\u201c\u53cb\u5143\u201d\uff0c\u8fd9\u6837\u90a3\u4e9b\u51fd\u6570\u5c31\u6210\u4e3a\u8be5\u7c7b\u7684\u53cb\u5143\u51fd\u6570\uff0c\u5728\u53cb\u5143\u51fd\u6570\u5185\u90e8\u5c31\u53ef\u4ee5\u8bbf\u95ee\u8be5\u7c7b\u5bf9\u8c61\u7684\u79c1\u6709\u6210\u5458\u4e86\u3002 \u5c06\u5168\u5c40\u51fd\u6570\u58f0\u660e\u4e3a\u53cb\u5143\u7684\u5199\u6cd5\u5982\u4e0b\uff1a friend \u8fd4\u56de\u503c\u7c7b\u578b \u51fd\u6570\u540d(\u53c2\u6570\u8868); \u5c06\u5176\u4ed6\u7c7b\u7684\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a\u53cb\u5143\u7684\u5199\u6cd5\u5982\u4e0b\uff1a friend \u8fd4\u56de\u503c\u7c7b\u578b \u5176\u4ed6\u7c7b\u7684\u7c7b\u540d::\u6210\u5458\u51fd\u6570\u540d(\u53c2\u6570\u8868); \u4f46\u662f\uff0c\u4e0d\u80fd\u628a\u5176\u4ed6\u7c7b\u7684\u79c1\u6709\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a\u53cb\u5143. \u2003\u53cb\u5143\u7684\u58f0\u660e\uff1a\u53ea\u80fd\u51fa\u73b0\u5728\u7c7b\u5b9a\u4e49\u7684\u5185\u90e8\uff0c\u5728\u7c7b\u5185\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e0d\u9650\uff1b\u53cb\u5143\u4e0d\u662f\u7c7b\u7684\u6210\u5458\uff0c\u4e5f\u4e0d\u53d7\u5b83\u6240\u5728\u533a\u57df\u8bbf\u95ee\u63a7\u5236\u7ea7\u522b\u7684\u7ea6\u675f\uff1b\u53cb\u5143\u7684\u58f0\u660e\u4ec5\u4ec5\u6307\u5b9a\u4e86\u8bbf\u95ee\u7684\u6743\u9650\uff0c\u800c\u975e\u4e00\u4e2a\u901a\u5e38\u610f\u4e49\u4e0a\u7684\u51fd\u6570\u58f0\u660e\uff0c\u5982\u679c\u6211\u4eec\u5e0c\u671b\u7c7b\u7684\u7528\u6237\u80fd\u8c03\u7528\u67d0\u4e2a\u53cb\u5143\u51fd\u6570\uff0c\u5fc5\u987b\u5728\u53cb\u5143\u58f0\u660e\u4e4b\u5916\u518d\u4e13\u95e8\u5bf9\u51fd\u6570\u8fdb\u884c\u4e00\u6b21\u58f0\u660e\u3002 \u2003\u4e00\u4e2a\u7c7b A \u53ef\u4ee5\u5c06\u53e6\u4e00\u4e2a\u7c7b B \u58f0\u660e\u4e3a\u81ea\u5df1\u7684\u53cb\u5143\uff0c\u7c7b B \u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u5c31\u90fd\u53ef\u4ee5\u8bbf\u95ee\u7c7b A \u5bf9\u8c61\u7684\u79c1\u6709\u6210\u5458\u3002\u5728\u7c7b\u5b9a\u4e49\u4e2d\u58f0\u660e\u53cb\u5143\u7c7b\u7684\u5199\u6cd5\u5982\u4e0b\uff1a friend class \u7c7b\u540d;","title":"friend"},{"location":"CPP/friend_template/#template","text":"\u7c7b\u6a21\u677f\uff1a\u4e00\u4e2a\u7c7b\u6a21\u677f(\u7c7b\u751f\u6210\u7c7b)\u5141\u8bb8\u7528\u6237\u4e3a\u7c7b\u5b9a\u4e49\u4e2a\u4e00\u79cd\u6a21\u5f0f\uff0c\u4f7f\u5f97\u7c7b\u4e2d\u7684\u67d0\u4e9b\u6570\u636e\u6210\u5458\u3001\u9ed8\u8ba4\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\uff0c\u67d0\u4e9b\u6210\u5458\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u80fd\u591f\u53d6\u4efb\u610f\u7c7b\u578b(\u5305\u62ec\u7cfb\u7edf\u9884\u5b9a\u4e49\u7684\u548c\u7528\u6237\u81ea\u5b9a\u4e49\u7684)\u3002\u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u7684\u6570\u636e\u6210\u5458\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u80fd\u786e\u5b9a\uff0c\u6216\u8005\u662f\u67d0\u4e2a\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\u6216\u8fd4\u56de\u503c\u7684\u7c7b\u578b\u4e0d\u80fd\u786e\u5b9a\uff0c\u5c31\u5fc5\u987b\u5c06\u6b64\u7c7b\u58f0\u660e\u4e3a\u6a21\u677f\uff0c\u5b83\u7684\u5b58\u5728\u4e0d\u662f\u4ee3\u8868\u4e00\u4e2a\u5177\u4f53\u7684\u3001\u5b9e\u9645\u7684\u7c7b\uff0c\u800c\u662f\u4ee3\u8868\u4e00\u7c7b\u7c7b\u3002 \u901a\u8fc7 typename \u6216 class \u5173\u952e\u5b57\u5c06T\u89c6\u4e3a\u4e00\u79cd\u672a\u77e5\u7c7b\u578b \u7c7b\u6a21\u677f\u7684\u58f0\u660e\u548c\u5b9e\u73b0\u8981\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5426\u5219\uff0c\u4f1a\u51fa\u73b0\u8fde\u63a5\u9519\u8bef\u3002 C++ - \u7c7b\u6a21\u677f(class template)\u53cb\u5143(friend) \u7684 \u5168\u90e8\u516d\u79cd\u5f62\u5f0f \u53ca\u4ee3\u7801 #include <iostream> #include <string> template <typename T> class Pal; //\u6a21\u677f\u7c7b\u7684\u524d\u7f6e\u58f0\u660e class C { friend class Pal<C>; //\"\u4ee5\u7c7bC\u5b9e\u4f8b\u5316\"\u7684Pal\u7c7b, \u4e3aC\u7684\u53cb\u5143 template <typename T> friend class Pal2; //Pal2\u7c7b\u7684\u6240\u6709\u5b9e\u4f8b\u5316, \u90fd\u4e3aC\u7684\u53cb\u5143 private: void print() { std::cout << \"class C\" << std::endl; } }; template <typename T> class C2 { friend class Pal<T>; //\"\u4e0eC2\u7c7b\u76f8\u540c\u5b9e\u4f8b\u5316\"\u7684Pal\u7c7b, \u4e3aC2\u7684\u53cb\u5143 //Pal2\u7c7b\u7684\u6240\u6709\u5b9e\u4f8b\u5316, \u90fd\u4e3aC2\u7684\u53cb\u5143, \u6ce8\u610f\u6a21\u677f\u53c2\u6570(X)\u4e0d\u80fd\u76f8\u540c template <typename X> friend class Pal2; friend class Pal3; //\u666e\u901a\u53cb\u5143 friend T; //C++11 \u6a21\u677f\u7c7b\u578b\u53c2\u6570\u53cb\u5143 private: void print() { std::cout << \"class C2\" << std::endl; } }; template <typename T> class Pal { C myC; C2<T> myC2; //\u5fc5\u987b\u4e3aT //C2<double> myC2; //\u5b9e\u4f8b\u5316\u4e0d\u540c, \u65e0\u6cd5\u4f7f\u7528 public: void printC() { std::cout << \"this is class Pal : \"; myC.print(); } void printC2() { std::cout << \"this is class Pal : \"; myC2.print(); } }; template <typename T> class Pal2 { C myC; C2<double> myC2; public: void printC() { std::cout << \"this is class Pal2 : \"; myC.print(); } void printC2() { std::cout << \"this is class Pal2 : \"; myC2.print(); } }; class Pal3 { C2<double> myC2; public: void printC2() { std::cout << \"this is class Pal3 : \"; myC2.print(); } }; class Pal4 { C2<Pal4> myC2; //\u6ce8\u610fPal4\u662fC2\u7c7b\u7684\u6a21\u677f\u53c2\u6570 public: void printC2() { std::cout << \"this is class Pal4 : \"; myC2.print(); } }; int main (void) { Pal<C> pc; //Pal\u7c7b\u5fc5\u987b\u5b9e\u4f8b\u5316\u4e3aC pc.printC(); //\u53ef\u4ee5\u4f7f\u7528 //Pal<int> pci; //pci.print(); //\u62a5\u9519, \u8bbf\u95ee\u4e86\u79c1\u6709\u6210\u5458 Pal2<int> pi2; //Pal2\u7c7b\u53ef\u4ee5\u968f\u610f\u5b9e\u4f8b\u5316 pi2.printC(); Pal<int> pi; //\u6709\u76f8\u540c\u7684\u793a\u4f8b\u5316, \u5728\u7c7b\u58f0\u660eC2<T> pi.printC2(); pi2.printC2(); //\u6ce8\u610f, Pal2\u7c7b\u88ab\u5b9e\u4f8b\u5316\u4e3a<int>, \u5185\u90e8C2\u7c7b\u88ab\u5b9e\u4f8b\u5316\u4e3a<double>; Pal3 p3; p3.printC2(); Pal4 p4; p4.printC2(); return 0; } typename \u58f0\u660e\u4e00\u4e2a\u7c7b\u578b \u2003\u9ed8\u8ba4\u60c5\u51b5\uff0cC++\u8bed\u8a00\u5047\u5b9a\u901a\u8fc7\u4f5c\u7528\u57df\u8fd0\u7b97\u7b26\u8bbf\u95ee\u7684\u540d\u5b57\u4e0d\u662f\u7c7b\u578b\uff0c\u800c\u662fstatic\u6210\u5458\uff0c\u5982T::m\uff1b\u4f8b\u5982\u5728\u7c7b\u6a21\u677f\u4e2d\u5982\u679c\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7ed3\u6784\u4f53\u6a21\u677f\uff0c\u4e14\u5b58\u5728\u8fd4\u56de\u7c7b\u578b\u4e3a\u8be5\u7ed3\u6784\u4f53\u6307\u9488\u7684\u6210\u5458\u51fd\u6570\uff0c\u5219\u5728\u7c7b\u5916\u5b9e\u73b0\u8be5\u6210\u5458\u51fd\u6570\u5b9a\u4e49\u65f6\uff0c\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u683c\u5f0f\uff1a template<typename T> class A{ private: struct s{ T val; } s* fun(s*); } template<typename T> typename A<T>::s* A<T>::fun(s*){} \u2003\u2003\u6a21\u677f\u4e2d\u4f9d\u8d56\u4e8e\u6a21\u677f\u53c2\u6570\u7684\u540d\u79f0\u5c5e\u4e8edependent name,\u800c\u5176\u5d4c\u5957\u5728\u4e00\u4e2a\u7c7b\u91cc\u9762\u65f6\uff0c\u79f0\u4e3anested dependent name, \u4e0a\u8ff0\u7684A ::s\u5373\u5c5e\u4e8enested dependent name, \u5728\u58f0\u660e\u65f6\u9700\u8981\u7528typename\u58f0\u660e\uff1b \u5f53\u6a21\u677f\u53c2\u6570T\u5df2\u77e5\u65f6\uff0c\u5219\u65e0\u9700typename. // \u6a21\u677f\u7279\u5316 template<> A<double>::s* A<double>::fcn(){..} A<int>::s s1; \u2003\u2003\u5728\u6d3e\u751f\u7c7b\u7684\u57fa\u7c7b\u5217\u8868\u4ee5\u53ca\u6784\u9020\u51fd\u6570\u7684\u57fa\u7c7b\u521d\u59cb\u5316\u5217\u8868\u4e2d\uff0c\u5219\u4e0d\u5141\u8bb8typename template<typename T> class Derived: public Base<T>{ Derived(T t): Base<T>(t){..} } \u5728\u5b9e\u4f8b\u5316\u7c7b\u6a21\u677f\u65f6\uff0c\u7a7a<>\u8868\u793a\u4f7f\u7528\u9ed8\u8ba4\u6a21\u677f\u5b9e\u53c2 template <class T=int> class Numbers{...}; Numbers<> a; \u63a7\u5236\u5b9e\u4f8b\u5316\uff1a\u5728\u4ee3\u7801\u4e2d\u5305\u542b\u7c7b/\u51fd\u6570\u6a21\u677f\u672c\u8eab\u4e0d\u4f1a\u751f\u6210\u7c7b/\u51fd\u6570\u5b9a\u4e49,\u7f16\u8bd1\u5668\u4f7f\u7528\u6a21\u677f\u4e3a\u7279\u5b9a\u7c7b\u578b\u751f\u6210\u7c7b/\u51fd\u6570\u5b9a\u4e49\u65f6\uff0c\u5f97\u5230\u7684\u662f\u6a21\u677f\u5b9e\u4f8b\uff0c\u56e0\u6b64\u76f8\u540c\u7684\u5b9e\u4f8b(\u5373\u91c7\u7528\u76f8\u540c\u7c7b\u578b\u751f\u6210\u7684\u5b9e\u4f8b)\u53ef\u80fd\u51fa\u73b0\u5728\u591a\u4e2a\u5bf9\u8c61\u6587\u4ef6\u4e2d\uff0c\u5f53\u591a\u4e2a\u72ec\u7acb\u7f16\u8bd1\u7684\u6e90\u6587\u4ef6\u4f7f\u7528\u4e86\u76f8\u540c\u7684\u6a21\u677f\uff0c\u5e76\u63d0\u4f9b\u4e86\u76f8\u540c\u7684\u6a21\u677f\u53c2\u6570\u65f6\uff0c\u6bcf\u4e2a\u6587\u4ef6\u5c31\u4f1a\u6709\u8be5\u6a21\u677f\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u9020\u6210\u4e25\u91cd\u7684\u989d\u5916\u5f00\u9500\u3002 \u4f7f\u7528\u663e\u793a\u5b9e\u4f8b\u5316\u6765\u907f\u514d\u4e0a\u8ff0\u5f00\u9500\uff1a extern template declaration; //\u5b9e\u4f8b\u5316\u58f0\u660e template declaration; //\u663e\u793a\u5b9e\u4f8b\u5316\u7684\u5b9a\u4e49 \u2003\u2003declaration\u662f\u4e00\u4e2a\u7c7b\u6216\u51fd\u6570\u58f0\u660e\uff0c\u5176\u4e2d\u6240\u6709\u6a21\u677f\u53c2\u6570\u5df2\u88ab\u66ff\u6362\u4e3a\u6a21\u677f\u5b9e\u53c2\u3002\u4f8b\u5982: extern template const int & Max (const int &a, const int &b); \u2003\u2003\u5f53\u7f16\u8bd1\u5668\u9047\u5230extern\u6a21\u677f\u58f0\u660e\u65f6\uff0c\u5b83\u4e0d\u4f1a\u5728\u672c\u6587\u4ef6\u4e2d\u751f\u6210\u5b9e\u4f8b\u5316\u4ee3\u7801\u3002\u5c06\u4e00\u4e2a\u5b9e\u4f8b\u5316\u58f0\u660e\u4e3aextern\u5c31\u8868\u793a\u627f\u8bfa\u5728\u7a0b\u5e8f\u5176\u4ed6\u4f4d\u7f6e\u6709\u8be5\u5b9e\u4f8b\u5316\u7684\u4e00\u4e2a\u975eextern\u58f0\u660e\uff08\u5b9a\u4e49\uff09\u3002 \u8fd9\u6837\u4e0d\u540c\u7684\u5bf9\u8c61\u6587\u4ef6\u4e2d\u5173\u4e8e\u8be5\u6a21\u677f\u4ec5\u6709\u4e00\u4efd\u5b9e\u4f8b\u3002 \u2003\u2003\u5728\u4e00\u4e2a\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u5b9a\u4e49\u4e2d\uff0c\u6240\u7528\u7c7b\u578b\u5fc5\u987b\u80fd\u7528\u4e8e\u6a21\u677f\u7684\u6240\u6709\u6210\u5458\u51fd\u6570\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u4f1a\u5b9e\u4f8b\u5316\u8be5\u7c7b\u7684\u6240\u6709\u6210\u5458\u3002 \u800c\u5728\u5904\u7406\u7c7b\u6a21\u677f\u7684\u666e\u901a\u5b9e\u4f8b\u5316\u65f6\uff0c\u5176\u6210\u5458\u53ea\u6709\u5728\u4f7f\u7528\u65f6\u624d\u88ab\u5b9e\u4f8b\u5316\u3002 \u2003\u5c06\u5b9e\u53c2\u4f20\u9012\u7ed9\u5e26\u6a21\u677f\u7c7b\u578b\u7684\u51fd\u6570\u5b9e\u53c2\u65f6\uff0c\u5f62\u53c2\u548c\u5b9e\u53c2\u4e2d\u7684\u9876\u5c42const\u4f1a\u88ab\u5ffd\u7565\uff1b\u80fd\u591f\u81ea\u52a8\u5e94\u7528\u7684\u7c7b\u578b\u8f6c\u6362\u53ea\u6709const\u8f6c\u6362\uff08\u53ef\u4ee5\u5c06\u4e00\u4e2a\u975econst\u5bf9\u8c61\u7684\u5f15\u7528\u6216\u6307\u9488\u4f20\u9012\u7ed9\u4e00\u4e2aconst\u7684\u5f15\u7528\u6216\u6307\u9488\u5f62\u53c2\uff09\uff0c\u4ee5\u53ca\u6570\u7ec4\u6216\u51fd\u6570\u5230\u6307\u9488\u7684\u8f6c\u6362\uff08\u8981\u6c42\u51fd\u6570\u5f62\u53c2\u4e0d\u662f\u5f15\u7528\u7c7b\u578b\uff0c\u5426\u5219\u6570\u7ec4\u4e0d\u4f1a\u8f6c\u6362\u4e3a\u6307\u9488\uff09\u3002 \u2003\u82e5\u6a21\u677f\u7c7b\u578b\u53c2\u6570\u7528\u4f5c\u591a\u4e2a\u51fd\u6570\u5f62\u53c2\u7684\u7c7b\u578b\uff0c\u7531\u4e8e\u53ea\u5141\u8bb8\u6709\u9650\u7684\u7c7b\u578b\u8f6c\u6362\uff0c\u5219\u4f20\u9012\u7ed9\u8fd9\u4e9b\u5f62\u53c2\u7684\u5b9e\u53c2\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u7c7b\u578b\uff0c\u82e5\u63a8\u65ad\u51fa\u7684\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u5219\u8c03\u7528\u9519\u8bef\u3002\u5bf9\u4e8e\u51fd\u6570\u6a21\u677f\u4e2d\u7684\u666e\u901a\u7c7b\u578b\u5b9a\u4e49\u7684\u53c2\u6570\uff0c\u5176\u53ef\u4ee5\u6b63\u5e38\u8f6c\u6362\u4e3a\u5bf9\u5e94\u5f62\u53c2\u7684\u7c7b\u578b\u3002 \u6a21\u677f\u7279\u4f8b\u5316 \u2003\u4e00\u4e2a\u7279\u4f8b\u5316\u6a21\u677f\u5c31\u662f\u6a21\u677f\u7684\u4e00\u4e2a\u72ec\u7acb\u7684\u5b9a\u4e49\u6216\u8005\u5b9e\u4f8b\uff0c\u5728\u5176\u4e2d\u4e00\u4e2a\u6216\u591a\u4e2a\u6a21\u677f\u53c2\u6570\u88ab\u6307\u5b9a\u4e3a\u7279\u5b9a\u7684\u7c7b\u578b\u3002 \u51fd\u6570\u6a21\u677f\u7279\u4f8b\u5316\u672c\u8d28\u662f\u4e00\u4e2a\u7279\u4f8b\uff0c\u800c\u975e\u51fd\u6570\u540d\u7684\u4e00\u4e2a\u91cd\u8f7d\u7248\u672c\u3002 \u2003\u6a21\u677f\u7279\u4f8b\u5316\u53c8\u5206\u4e3a\u5168\u7279\u5316\u548c\u504f\u7279\u5316(\u4f8b\u5982\u90e8\u5206\u53c2\u6570\u7279\u5316\uff0c\u6216\u8005\u53c2\u6570\u8303\u56f4\u4e0a\u8fdb\u884c\u7279\u5316, < T*>) \u2003\u5bf9\u4e8e\u4e00\u4e9b\u5b9a\u4e49\u5728std namespace\u4e2d\u7684class template \u548c function template\uff0cC++\u5141\u8bb8\u6211\u4eec\u540c\u6837\u5728std namespace\u4e2d\uff0c\u5bf9\u4e24\u8005\u8fdb\u884c\u5168\u7279\u5316\uff0c\u4f46\u53ea\u5141\u8bb8\u5bf9\u524d\u8005\u8fdb\u884c\u504f\u7279\u5316\uff1b\u53ef\u4ee5\u5728name space\u4e2d\u63d0\u4f9bfuntion template\u7684\u91cd\u8f7d\u7248\u672c\uff0c\u4e0d\u8fc7\u6700\u597d\u5728\u81ea\u5b9a\u4e49namespace\u65f6\u4e2d\u5b9e\u73b0 funtion template\u7684\u504f\u7279\u5316\u7248\u672c \u6807\u51c6\u5e93\u6a21\u677ffunction \u2003 function f(obj) or function f=obj; //f\u4e2d\u5b58\u50a8\u4e86\u51fd\u6570\u7c7b\u578b\u4e3aT\u7684\u53ef\u8c03\u7528\u5bf9\u8c61obj\u7684\u526f\u672c\u3002 obj\u53ef\u4ee5\u662f\u51fd\u6570\u6307\u9488\u3001\u51fd\u6570\u5bf9\u8c61\u7c7b\u7684\u5bf9\u8c61\u3001lambda. \u56e0\u6b64\u5bf9\u4e8e\u4e0d\u662f\u53ef\u8c03\u7528\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u6307\u9488,\u53ef\u4ee5\u901a\u8fc7function\u751f\u6210\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u7684\u53ef\u8c03\u7528\u5bf9\u8c61\u3002 function<bool (const string&)> fcn = &string::empty; auto fcn = mem_fn(&string::empty); // mem_fn\u53ef\u4ee5\u6839\u636e\u6210\u5458\u6307\u9488\u7684\u7c7b\u578b\u63a8\u65ad\u53ef\u8c03\u7528\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u65e0\u987b\u7528\u6237\u663e\u5f0f\u6307\u5b9a\u3002","title":"template"},{"location":"CPP/friend_template/#alias-template","text":"template <typename T> using Vec = std::vector<T, MyAlloc<t>>; Vec<int> coll; //\u7b49\u4ef7\u4e8e std::vector<int, Myalloc<int>> coll; // \u8fd9\u91cc\u65e0\u6cd5\u91c7\u7528macro\u6216\u8005typedef,\u524d\u8005\u53ea\u662f\u7b80\u5355\u7684\u66ff\u6362\uff1b\u540e\u8005\u4e0d\u80fd\u63a5\u53d7\u53c2\u6570 \u2003 \u601d\u8003:\u5728\u6a21\u677f\u63a5\u53d7\u4e00\u4e2atemplate\u53c2\u6570Container\u65f6\uff0c\u5f53Container\u672c\u8eab\u53c8\u662f\u4e00\u4e2aclass template,\u5982\u4f55\u53d6\u51fa\u5176template\u53c2\u6570\uff0c\u4f8b\u5982\u63a5\u53d7vector , \u53d6\u51fa\u5176\u5143\u7d20\u7c7b\u578b\u3002 // function template+iterator+traits template<typename Container> void test(Contrainer c){ typedef typename iterator_traits<typename Container::iterator>::value_type Valtype; ... } // template template parameter + alias template template<typename T, template<class> class Container> class X{ private: Container<T> c; }; template<typename T> using Vec=vector<T, allocator<T>> //\u4e0d\u80fd\u518dfunction body\u4e2d\u58f0\u660e X<string, Vec> x1;","title":"Alias Template"},{"location":"CPP/friend_template/#variadic-template","text":"\u63a5\u53d7\u53ef\u53d8\u6570\u76ee\u53c2\u6570\u7684\u6a21\u677f\u51fd\u6570\u6216\u6a21\u677f\u7c7b\uff0c\u53ef\u53d8\u6570\u76ee\u7684\u53c2\u6570\u88ab\u79f0\u4e3a\u53c2\u6570\u5305\u3002 \u6a21\u677f\u53c2\u6570\u5305: class...\u6216typename...\u6307\u51fa\u63a5\u4e0b\u6765\u7684\u53c2\u6570\u8868\u793a\u96f6\u4e2a\u6216\u591a\u4e2a\u7c7b\u578b\u7684\u5217\u8868\uff1b \u51fd\u6570\u53c2\u6570\u5305: \u4e00\u4e2a\u7c7b\u578b\u540d\u540e\u9762\u8ddf\u4e00\u4e2a\u7701\u7565\u53f7\u8868\u793a\u96f6\u4e2a\u6216\u591a\u4e2a\u7ed9\u5b9a\u7c7b\u578b\u7684\u975e\u7c7b\u578b\u53c2\u6570\u7684\u5217\u8868\u3002 sizeof...(): \u8fd0\u7b97\u7b26\u53ef\u4ee5\u8fd4\u56de\u4e00\u4e2a\u5e38\u91cf\u8868\u8fbe\u5f0f\uff0c\u8868\u793a\u53c2\u6570\u5305\u4e2d\u5143\u7d20\u6570\u76ee\u3002 // example 1 void printX(){} // to end the recursion, the non-template overload of printX is provided. template<typename T, typename... Types> void printX(const T& first, const Types&... args){ cout << first<<endl>; printX(args...); } // template <typename... Types> void printX(const Types&... args){} \u53ef\u4ee5\u548c\u4e0a\u9762\u5e76\u5b58\uff0c\u4f46\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c\u56e0\u4e3a\u4e0a\u9762\u7684\u5c5e\u4e8e\u7279\u5316\u7248\u672c // example 2 //\u4f8b2\u4e2d\u7684Head::type\u4e0d\u80fd\u88ab\u7f16\u8bd1\u901a\u8fc7\uff0c \u5e94\u4fee\u6539\u4e3a\u4e0b\u9762 // example 3","title":"variadic template"},{"location":"CPP/function/","text":"About Function \u51fd\u6570\u6307\u9488 type (*p)(param_list); //p\u6307\u5411\u4e00\u4e2a\u5305\u542bparam_list\u5f62\u53c2\u3001\u8fd4\u56de\u503c\u7c7b\u578btype\u7684\u51fd\u6570\uff1b p = fun_name; //\u51fd\u6570\u540d\u53ef\u4ee5\u81ea\u52a8\u8f6c\u6362\u6210\u6307\u9488 p= &fun_name; //\u4e5f\u53ef\u4ee5\u901a\u8fc7&\u83b7\u53d6 // p(..) \u4e0e (*P)(..)\u662f\u7b49\u6548\u7684\uff0c\u5373\u65e0\u9700\u89e3\u5f15\u7528\u51fd\u6570\u6307\u9488\u5373\u53ef\u8c03\u7528\u8be5\u51fd\u6570\uff1b // another test // \u4e0a\u9762\u7684p\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5176\u7c7b\u578b\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488 typedef type(*T)(param_list //\u8fd9\u91cc\u662f\u4e3a\u51fd\u6570\u6307\u9488\u7c7b\u578b\u91cd\u65b0\u5b9a\u4e49\u4e86\u201cT\u201d\u7c7b\u578b\u540d T t1; t1(...); \u2003\u51fd\u6570\u6307\u9488\u5f62\u53c2\uff1a\u4e0d\u80fd\u5b9a\u4e49\u51fd\u6570\u7c7b\u578b\u7684\u5f62\u53c2\uff0c\u4f46\u662f\u5f62\u53c2\u53ef\u4ee5\u662f\u6307\u5411\u51fd\u6570\u7c7b\u578b\u7684\u6307\u9488\u3002 void foo(type fun(param_list)); or void foo(type(*p)(param_list)); \u91cd\u8f7d(overload) \u2003\u51fd\u6570\u91cd\u8f7d: \u51fd\u6570\u540d\u79f0\u76f8\u540c\uff0c\u4f46\u51fd\u6570\u7b7e\u540d\u4e0d\u540c\uff0c\u51fd\u6570\u7b7e\u540d\u5305\u62ec\u53c2\u6570\u5217\u8868\u3001const\uff08const member fucntion\uff09. const\u5f62\u53c2\uff1a\u4e00\u4e2a\u62e5\u6709\u9876\u5c42const\u7684\u5f62\u53c2\u65e0\u6cd5\u548c\u53e6\u4e00\u4e2a\u6ca1\u6709\u9876\u5c42const\u7684\u5f62\u53c2\u533a\u5206\u5f00\u6765\uff1b \u5982\u679c\u5f62\u53c2\u662f\u67d0\u79cd\u7c7b\u578b\u7684\u6307\u9488\u6216\u5f15\u7528\uff0c\u5219\u901a\u8fc7\u533a\u5206\u5176\u6307\u5411\u7684\u662f\u5e38\u91cf\u5bf9\u8c61\u8fd8\u662f\u975e\u5e38\u91cf\u5bf9\u8c61\u53ef\u4ee5\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d\uff0c\u6b64\u65f6\u7684const\u662f\u5e95\u5c42\u7684 \u3002 \u6210\u5458\u51fd\u6570 \u91cd\u8f7d\u7684\u7279\u5f81: \uff081\uff09\u76f8\u540c\u7684\u8303\u56f4\uff08\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d; \uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c; \uff083\uff09\u53c2\u6570\u4e0d\u540c; \uff084\uff09virtual \u5173\u952e\u5b57\u53ef\u6709\u53ef\u65e0, \u5176\u5e76\u975e\u51fd\u6570\u7b7e\u540d\u7684\u4e00\u90e8\u5206\u3002 \u8986\u76d6(override) \u2003\u6307\u6d3e\u751f\u7c7b\u51fd\u6570\u8986\u76d6\u57fa\u7c7b\u51fd\u6570\uff0c\u7279\u5f81\u662f\uff1a \uff081\uff09\u4e0d\u540c\u7684\u8303\u56f4(\u5206\u522b\u4f4d\u4e8e\u6d3e\u751f\u7c7b\u4e0e\u57fa\u7c7b); \uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c; \uff083\uff09\u51fd\u6570\u7b7e\u540d\u76f8\u540c; \uff084\uff09\u57fa\u7c7b\u51fd\u6570\u5fc5\u987b\u6709virtual \u5173\u952e\u5b57; \u9690\u85cf \u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u5c4f\u853d\u4e86\u4e0e\u5176\u540c\u540d\u7684\u57fa\u7c7b\u51fd\u6570\uff0c\u89c4\u5219\u5982\u4e0b\uff1a \u2003\uff081\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u4f46\u662f\u53c2\u6570\u4e0d\u540c\u3002\u6b64\u65f6\uff0c\u4e0d\u8bba\u6709\u65e0virtual\u5173\u952e\u5b57\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u5c06\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u91cd\u8f7d\u6df7\u6dc6\uff09\u3002 \u2003\uff082\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u5e76\u4e14\u53c2\u6570\u4e5f\u76f8\u540c\uff0c\u4f46\u662f\u57fa\u7c7b\u51fd\u6570\u6ca1\u6709virtual \u5173\u952e\u5b57\u3002\u6b64\u65f6\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u8986\u76d6\u6df7\u6dc6\uff09 \u6b64\u65f6\u6b32\u8c03\u7528\u7236\u7c7b\u4e2d\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u5217\u5f62\u5f0f: Derived.Base::fcn(); \u51fd\u6570\u53c2\u6570 \u5f53\u4e00\u4e2a\u51fd\u6570\u53c2\u6570\u662f \u6a21\u677f\u7c7b\u578b\u53c2\u6570 \u7684\u4e00\u4e2a\u666e\u901a\u5de6\u503c\u5f15\u7528\uff0c\u5219\u53ea\u80fd\u4f20\u9012\u4e00\u4e2a\u5de6\u503c\u5b9e\u53c2\uff1b\u800c\u51fd\u6570\u53c2\u6570\u662f\u53f3\u503c\u5f15\u7528\u65f6\uff0c\u5219\u53ef\u4ee5\u4f20\u9012\u4efb\u610f\u5b9e\u53c2\uff1b \u5176\u4e2d\u82e5\u5c06\u4e00\u4e2a\u5de6\u503c\u4f20\u9012\u7ed9\u8fd9\u6837\u7684\u53c2\u6570\uff0c\u5219\u63a8\u65ad\u51fa\u7684\u6a21\u677f\u53c2\u6570\u5b9e\u53c2\u7c7b\u578b\u662f\u4e00\u4e2a\u5de6\u503c\u5f15\u7528\uff08\u6839\u636e\u5f15\u7528\u6298\u53e0\u89c4\u5219\u5f97\u5230\uff09\uff0e \u5bf9\u4e8e\u975e\u51fd\u6570\u6a21\u677f\uff0c\u53f3\u503c\u7c7b\u578b\u53c2\u6570\u53ea\u80fd\u63a5\u53d7\u4e00\u4e2a\u53f3\u503c\u3002 \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u53c2\u6570\u662f\u6307\u5411\u6a21\u677f\u7c7b\u578b\u53c2\u6570\u7684\u53f3\u503c\u5f15\u7528\uff0c\u5b83\u5bf9\u5e94\u7684\u5b9e\u53c2\u7684const\u5c5e\u6027\u548c\u5de6\u503c/\u53f3\u503c\u5c5e\u6027\u5c06\u5f97\u5230\u4fdd\u6301\u3002 \u5f53\u7528\u4e8e\u4e00\u4e2a\u6307\u5411\u6a21\u677f\u53c2\u6570\u7c7b\u578b\u7684\u53f3\u503c\u5f15\u7528\u51fd\u6570\u53c2\u6570\u65f6\uff0cstd::forward \u4f1a\u4fdd\u6301\u5b9e\u53c2\u7c7b\u578b\u7684\u6240\u6709\u7ec6\u8282\u3002 \u5f53\u6709\u591a\u4e2a\u91cd\u8f7d\u6a21\u677f\u5bf9\u4e00\u4e2a\u8c03\u7528\u63d0\u4f9b\u540c\u6837\u597d\u7684\u5339\u914d\u65f6\uff0c\u5e94\u9009\u62e9\u6700\u7279\u4f8b\u5316\u7684\u7248\u672c\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u8c03\u7528\uff0c\u5982\u679c\u4e00\u4e2a\u975e\u51fd\u6570\u6a21\u677f\u4e0e\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\u63d0\u4f9b\u540c\u6837\u7684\u597d\u7684\u5339\u914d\uff0c\u5219\u9009\u62e9\u975e\u6a21\u677f\u7248\u672c\u3002\u3000 \u5982\u679c\u51fd\u6570\u53c2\u6570\u7c7b\u578b\u662f\u6307\u9488\uff0c\u8bb0\u4f4f\u5728\u51fd\u6570\u4f53\u5185\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u662f\u53ef\u4ee5\u540c\u6b65\u7684\uff0c\u800c\u4fee\u6539\u6307\u9488\u672c\u8eab\u4e0d\u4f1a\u540c\u6b65(\u56e0\u4e3a\u4fee\u6539\u7684\u662f\u539f\u6307\u9488\u7684\u62f7\u8d1d)\uff1b\u4f20\u5165\u6307\u9488\u7684\u5f15\u7528\uff0c\u5219\u53ef\u4ee5\u540c\u65f6\u540c\u6b65\u4fee\u6539\u6307\u9488\u672c\u8eab\u548c\u6307\u9488\u6240\u6307\u5411\u5bf9\u8c61 \u3002 \u51fd\u6570\u5b9e\u53c2\u67e5\u627e\u89c4\u5219\uff1a 1>\u7531\u5185\u5411\u5916\uff1b 2>\u5f53\u7ed9\u51fd\u6570\u4f20\u9012\u4e00\u4e2a\u7c7b\u7c7b\u578b\u7684\u5bf9\u8c61\u65f6\uff0c\u9664\u4e86\u5728\u5e38\u89c4\u7684\u4f5c\u7528\u57df\u67e5\u627e\u5916\uff0c\u8fd8\u4f1a\u67e5\u627e\u5b9e\u53c2\u7c7b\u4ee5\u53ca\u5b9e\u53c2\u7c7b\u57fa\u7c7b\u6240\u5c5e\u7684\u547d\u540d\u7a7a\u95f4\u3002 \u5728\u8fd9\u4e9b\u547d\u540d\u7a7a\u95f4\u4e2d\u6240\u6709\u4e0e\u88ab\u8c03\u7528\u51fd\u6570\u540c\u540d\u7684\u51fd\u6570\u90fd\u5c06\u88ab\u6dfb\u52a0\u5230\u5019\u9009\u96c6\u4e2d\uff0c\u5373\u4f7f\u67d0\u4e9b\u51fd\u6570\u5728\u8c03\u7528\u65f6\u4e0d\u53ef\u89c1\uff1b \u8fd9\u4e00\u89c4\u5219\u5bf9\u4e8e\u4f20\u9012\u7c7b\u7684\u5f15\u7528\u6216\u6307\u9488\u7684\u8c03\u7528\u540c\u6837\u6709\u6548\uff1b 3>\u5f53\u7c7b\u58f0\u660e\u4e00\u4e2a\u53cb\u5143\u65f6\uff0c\u8be5\u53cb\u5143\u58f0\u660e\u5e76\u6ca1\u6709\u4f7f\u5f97\u53cb\u5143\u672c\u8eab\u53ef\u89c1\uff0c\u4f46\u53ef\u4ee5\u8ba4\u4e3a\u5176\u662f\u6700\u8fd1\u7684\u5916\u5c42\u547d\u540d\u7a7a\u95f4\u7684\u6210\u5458\u3002 \u51fd\u6570\u53ef\u53d8\u6570\u91cf\u53c2\u6570 \u82e5\u6240\u6709\u7684\u5b9e\u53c2\u7c7b\u578b\u76f8\u540c\uff0c\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u540d\u4e3ainitializer_list\u7684\u6807\u51c6\u5e93\u7c7b\u578b\uff08\u5b9a\u4e49\u5728\u540c\u540d\u5934\u6587\u4ef6\u4e2d\uff09\u3002initializer_list\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20\u7528\u4e8e\u662f\u5e38\u91cf\u503c\uff0c\u65e0\u6cd5\u4fee\u6539\u3002 eg: void print(initializer_list<string> list){...}; print({\u201cerror\u201d, \u201cxx\u201d}); //\u5e8f\u5217\u5fc5\u987b\u653e\u5728{}\u4e2d \u9488\u5bf9\u7c7b\u578b\u4e0d\u540c\u7684\u5b9e\u53c2\uff0c\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u6a21\u677f \u7701\u7565\u7b26\u5f62\u53c2\uff0c\u5176\u53ea\u80fd\u51fa\u73b0\u5728\u5f62\u53c2\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5f62\u5f0f\u5982\u4e0b\uff1a void foo(param_list, ...); void foo(...); \u2003\u2003\u5176\u5e94\u8be5\u4ec5\u4ec5\u7528\u4e8eC\u548cC++\u90fd\u901a\u7528\u7684\u7c7b\u578b\u3002 \u51fd\u6570\u8fd4\u56de\u7c7b\u578b \u2003 return-by-value , \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a \u975e\u4e34\u65f6\u53d8\u91cf\u7684\u5de6\u503c \uff0c\u8fd4\u56de\u65f6\u4f1a\u53d1\u751f\u62f7\u8d1d\uff1b\u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u6216\u8005\u5c31\u662f\u4e00\u4e2a\u4e34\u65f6\u7684\u53f3\u503c\uff0c\u5219\u4f1a\u8f6c\u5316\u4e3a\u79fb\u52a8\u6765\u8282\u7701\u62f7\u8d1d\u5f00\u9500\u3002 \u7528const\u4fee\u9970return-by-value\u4e00\u822c\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u56e0\u4e3a\u8fd4\u56de\u7684\u672c\u8eab\u5c31\u662f\u503c\u7684\u62f7\u8d1d\u3002\u4e0d\u8fc7\u5728\u91cd\u8f7d\u8fd0\u7b97\u7b26\u65f6\uff0c\u5982\u679c\u53c2\u6570\u662f\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u4f7f\u7528const T\u4f5c\u4e3a\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u53ef\u4ee5\u907f\u514d\u5982\u201cif(t1*t2=t3)\u201d\u613f\u610f\u662f\u5224\u65ad\u76f8\u7b49\uff0c\u5374\u53d8\u6210\u4e86\u5411\u4e00\u4e2a\u53f3\u503c\u8d4b\u503c\uff0creturn-by-const-value\u53ef\u4ee5\u68c0\u6d4b\u51fa\u8fd9\u79cd\u9519\u8bef\u3002\u5904\u4e8e\u6b64\u79cd\u8003\u8651 return-by-const-value \u4e5f\u662f\u5341\u5206\u5e38\u89c1\u7684\uff0c\u4e0d\u4f1a\u5e26\u6765\u989d\u5916\u7684\u56f0\u6270\uff0c \u8fd8\u53ef\u4ee5\u907f\u514d\u524d\u8ff0\u95ee\u9898\u3002 \u2003 return-by-const-reference , \u5982\u679c\u4ee5\u4e00\u4e2a\u666e\u901a\u53d8\u91cf\u6765\u63a5\u53d7\u8fd4\u56de\u503c\uff0c\u5219\u4f9d\u65e7\u4f1a\u53d1\u751f\u62f7\u8d1d\uff0c\u800c\u4ee5\u5e38\u91cf\u5f15\u7528\u6765\u63a5\u53d7\uff0c\u5219\u4e0d\u4f1a\u53d1\u9001\u62f7\u8d1d\u8f6c\u6362\uff0c\u6b64\u65f6\u4e5f\u4e0d\u80fd\u5bf9\u8fd4\u56de\u503c\u8fdb\u884c\u4fee\u6539(\u591a\u89c1\u7684\u662fconst-reference\u4f20\u53c2\uff0c\u800c\u975e\u8fd4\u56de)\u3002\u6b64\u5916\u4ee5non-const \u5f15\u7528\u7c7b\u578b\u6765\u63a5\u53d7\u8fd4\u56de\u503c\u662f\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\u7684\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u63a5\u53d7\u8005\u53ef\u80fd\u4f1a\u6539\u53d8\u5bf9\u8c61\u3002 \u2003 return-by-reference , \u591a\u89c1\u4e8e\u8c03\u7528\u8005\u9700\u8981\u5bf9\u8fd4\u56de\u5bf9\u8c61\u7684\u5185\u90e8\u6570\u636e\u8fdb\u884c\u4fee\u6539\uff0c\u6216\u8005\u8fd4\u56de\u7c7b\u578b\u4e0d\u80fd\u88ab\u62f7\u8d1d(\u4f8b\u5982IO\u6d41)\u3002","title":"About Function"},{"location":"CPP/function/#about-function","text":"","title":"About Function"},{"location":"CPP/function/#_1","text":"type (*p)(param_list); //p\u6307\u5411\u4e00\u4e2a\u5305\u542bparam_list\u5f62\u53c2\u3001\u8fd4\u56de\u503c\u7c7b\u578btype\u7684\u51fd\u6570\uff1b p = fun_name; //\u51fd\u6570\u540d\u53ef\u4ee5\u81ea\u52a8\u8f6c\u6362\u6210\u6307\u9488 p= &fun_name; //\u4e5f\u53ef\u4ee5\u901a\u8fc7&\u83b7\u53d6 // p(..) \u4e0e (*P)(..)\u662f\u7b49\u6548\u7684\uff0c\u5373\u65e0\u9700\u89e3\u5f15\u7528\u51fd\u6570\u6307\u9488\u5373\u53ef\u8c03\u7528\u8be5\u51fd\u6570\uff1b // another test // \u4e0a\u9762\u7684p\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5176\u7c7b\u578b\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488 typedef type(*T)(param_list //\u8fd9\u91cc\u662f\u4e3a\u51fd\u6570\u6307\u9488\u7c7b\u578b\u91cd\u65b0\u5b9a\u4e49\u4e86\u201cT\u201d\u7c7b\u578b\u540d T t1; t1(...); \u2003\u51fd\u6570\u6307\u9488\u5f62\u53c2\uff1a\u4e0d\u80fd\u5b9a\u4e49\u51fd\u6570\u7c7b\u578b\u7684\u5f62\u53c2\uff0c\u4f46\u662f\u5f62\u53c2\u53ef\u4ee5\u662f\u6307\u5411\u51fd\u6570\u7c7b\u578b\u7684\u6307\u9488\u3002 void foo(type fun(param_list)); or void foo(type(*p)(param_list));","title":"\u51fd\u6570\u6307\u9488"},{"location":"CPP/function/#overload","text":"\u51fd\u6570\u91cd\u8f7d: \u51fd\u6570\u540d\u79f0\u76f8\u540c\uff0c\u4f46\u51fd\u6570\u7b7e\u540d\u4e0d\u540c\uff0c\u51fd\u6570\u7b7e\u540d\u5305\u62ec\u53c2\u6570\u5217\u8868\u3001const\uff08const member fucntion\uff09. const\u5f62\u53c2\uff1a\u4e00\u4e2a\u62e5\u6709\u9876\u5c42const\u7684\u5f62\u53c2\u65e0\u6cd5\u548c\u53e6\u4e00\u4e2a\u6ca1\u6709\u9876\u5c42const\u7684\u5f62\u53c2\u533a\u5206\u5f00\u6765\uff1b \u5982\u679c\u5f62\u53c2\u662f\u67d0\u79cd\u7c7b\u578b\u7684\u6307\u9488\u6216\u5f15\u7528\uff0c\u5219\u901a\u8fc7\u533a\u5206\u5176\u6307\u5411\u7684\u662f\u5e38\u91cf\u5bf9\u8c61\u8fd8\u662f\u975e\u5e38\u91cf\u5bf9\u8c61\u53ef\u4ee5\u5b9e\u73b0\u51fd\u6570\u91cd\u8f7d\uff0c\u6b64\u65f6\u7684const\u662f\u5e95\u5c42\u7684 \u3002 \u6210\u5458\u51fd\u6570 \u91cd\u8f7d\u7684\u7279\u5f81: \uff081\uff09\u76f8\u540c\u7684\u8303\u56f4\uff08\u5728\u540c\u4e00\u4e2a\u7c7b\u4e2d; \uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c; \uff083\uff09\u53c2\u6570\u4e0d\u540c; \uff084\uff09virtual \u5173\u952e\u5b57\u53ef\u6709\u53ef\u65e0, \u5176\u5e76\u975e\u51fd\u6570\u7b7e\u540d\u7684\u4e00\u90e8\u5206\u3002","title":"\u91cd\u8f7d(overload)"},{"location":"CPP/function/#override","text":"\u6307\u6d3e\u751f\u7c7b\u51fd\u6570\u8986\u76d6\u57fa\u7c7b\u51fd\u6570\uff0c\u7279\u5f81\u662f\uff1a \uff081\uff09\u4e0d\u540c\u7684\u8303\u56f4(\u5206\u522b\u4f4d\u4e8e\u6d3e\u751f\u7c7b\u4e0e\u57fa\u7c7b); \uff082\uff09\u51fd\u6570\u540d\u5b57\u76f8\u540c; \uff083\uff09\u51fd\u6570\u7b7e\u540d\u76f8\u540c; \uff084\uff09\u57fa\u7c7b\u51fd\u6570\u5fc5\u987b\u6709virtual \u5173\u952e\u5b57;","title":"\u8986\u76d6(override)"},{"location":"CPP/function/#_2","text":"\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u5c4f\u853d\u4e86\u4e0e\u5176\u540c\u540d\u7684\u57fa\u7c7b\u51fd\u6570\uff0c\u89c4\u5219\u5982\u4e0b\uff1a \u2003\uff081\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u4f46\u662f\u53c2\u6570\u4e0d\u540c\u3002\u6b64\u65f6\uff0c\u4e0d\u8bba\u6709\u65e0virtual\u5173\u952e\u5b57\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u5c06\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u91cd\u8f7d\u6df7\u6dc6\uff09\u3002 \u2003\uff082\uff09\u5982\u679c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u4e0e\u57fa\u7c7b\u7684\u51fd\u6570\u540c\u540d\uff0c\u5e76\u4e14\u53c2\u6570\u4e5f\u76f8\u540c\uff0c\u4f46\u662f\u57fa\u7c7b\u51fd\u6570\u6ca1\u6709virtual \u5173\u952e\u5b57\u3002\u6b64\u65f6\uff0c\u57fa\u7c7b\u7684\u51fd\u6570\u88ab\u9690\u85cf\uff08\u6ce8\u610f\u522b\u4e0e\u8986\u76d6\u6df7\u6dc6\uff09 \u6b64\u65f6\u6b32\u8c03\u7528\u7236\u7c7b\u4e2d\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e0b\u5217\u5f62\u5f0f: Derived.Base::fcn();","title":"\u9690\u85cf"},{"location":"CPP/function/#_3","text":"\u5f53\u4e00\u4e2a\u51fd\u6570\u53c2\u6570\u662f \u6a21\u677f\u7c7b\u578b\u53c2\u6570 \u7684\u4e00\u4e2a\u666e\u901a\u5de6\u503c\u5f15\u7528\uff0c\u5219\u53ea\u80fd\u4f20\u9012\u4e00\u4e2a\u5de6\u503c\u5b9e\u53c2\uff1b\u800c\u51fd\u6570\u53c2\u6570\u662f\u53f3\u503c\u5f15\u7528\u65f6\uff0c\u5219\u53ef\u4ee5\u4f20\u9012\u4efb\u610f\u5b9e\u53c2\uff1b \u5176\u4e2d\u82e5\u5c06\u4e00\u4e2a\u5de6\u503c\u4f20\u9012\u7ed9\u8fd9\u6837\u7684\u53c2\u6570\uff0c\u5219\u63a8\u65ad\u51fa\u7684\u6a21\u677f\u53c2\u6570\u5b9e\u53c2\u7c7b\u578b\u662f\u4e00\u4e2a\u5de6\u503c\u5f15\u7528\uff08\u6839\u636e\u5f15\u7528\u6298\u53e0\u89c4\u5219\u5f97\u5230\uff09\uff0e \u5bf9\u4e8e\u975e\u51fd\u6570\u6a21\u677f\uff0c\u53f3\u503c\u7c7b\u578b\u53c2\u6570\u53ea\u80fd\u63a5\u53d7\u4e00\u4e2a\u53f3\u503c\u3002 \u5982\u679c\u4e00\u4e2a\u51fd\u6570\u53c2\u6570\u662f\u6307\u5411\u6a21\u677f\u7c7b\u578b\u53c2\u6570\u7684\u53f3\u503c\u5f15\u7528\uff0c\u5b83\u5bf9\u5e94\u7684\u5b9e\u53c2\u7684const\u5c5e\u6027\u548c\u5de6\u503c/\u53f3\u503c\u5c5e\u6027\u5c06\u5f97\u5230\u4fdd\u6301\u3002 \u5f53\u7528\u4e8e\u4e00\u4e2a\u6307\u5411\u6a21\u677f\u53c2\u6570\u7c7b\u578b\u7684\u53f3\u503c\u5f15\u7528\u51fd\u6570\u53c2\u6570\u65f6\uff0cstd::forward \u4f1a\u4fdd\u6301\u5b9e\u53c2\u7c7b\u578b\u7684\u6240\u6709\u7ec6\u8282\u3002 \u5f53\u6709\u591a\u4e2a\u91cd\u8f7d\u6a21\u677f\u5bf9\u4e00\u4e2a\u8c03\u7528\u63d0\u4f9b\u540c\u6837\u597d\u7684\u5339\u914d\u65f6\uff0c\u5e94\u9009\u62e9\u6700\u7279\u4f8b\u5316\u7684\u7248\u672c\u3002 \u5bf9\u4e8e\u4e00\u4e2a\u8c03\u7528\uff0c\u5982\u679c\u4e00\u4e2a\u975e\u51fd\u6570\u6a21\u677f\u4e0e\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\u63d0\u4f9b\u540c\u6837\u7684\u597d\u7684\u5339\u914d\uff0c\u5219\u9009\u62e9\u975e\u6a21\u677f\u7248\u672c\u3002\u3000 \u5982\u679c\u51fd\u6570\u53c2\u6570\u7c7b\u578b\u662f\u6307\u9488\uff0c\u8bb0\u4f4f\u5728\u51fd\u6570\u4f53\u5185\u4fee\u6539\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u662f\u53ef\u4ee5\u540c\u6b65\u7684\uff0c\u800c\u4fee\u6539\u6307\u9488\u672c\u8eab\u4e0d\u4f1a\u540c\u6b65(\u56e0\u4e3a\u4fee\u6539\u7684\u662f\u539f\u6307\u9488\u7684\u62f7\u8d1d)\uff1b\u4f20\u5165\u6307\u9488\u7684\u5f15\u7528\uff0c\u5219\u53ef\u4ee5\u540c\u65f6\u540c\u6b65\u4fee\u6539\u6307\u9488\u672c\u8eab\u548c\u6307\u9488\u6240\u6307\u5411\u5bf9\u8c61 \u3002 \u51fd\u6570\u5b9e\u53c2\u67e5\u627e\u89c4\u5219\uff1a 1>\u7531\u5185\u5411\u5916\uff1b 2>\u5f53\u7ed9\u51fd\u6570\u4f20\u9012\u4e00\u4e2a\u7c7b\u7c7b\u578b\u7684\u5bf9\u8c61\u65f6\uff0c\u9664\u4e86\u5728\u5e38\u89c4\u7684\u4f5c\u7528\u57df\u67e5\u627e\u5916\uff0c\u8fd8\u4f1a\u67e5\u627e\u5b9e\u53c2\u7c7b\u4ee5\u53ca\u5b9e\u53c2\u7c7b\u57fa\u7c7b\u6240\u5c5e\u7684\u547d\u540d\u7a7a\u95f4\u3002 \u5728\u8fd9\u4e9b\u547d\u540d\u7a7a\u95f4\u4e2d\u6240\u6709\u4e0e\u88ab\u8c03\u7528\u51fd\u6570\u540c\u540d\u7684\u51fd\u6570\u90fd\u5c06\u88ab\u6dfb\u52a0\u5230\u5019\u9009\u96c6\u4e2d\uff0c\u5373\u4f7f\u67d0\u4e9b\u51fd\u6570\u5728\u8c03\u7528\u65f6\u4e0d\u53ef\u89c1\uff1b \u8fd9\u4e00\u89c4\u5219\u5bf9\u4e8e\u4f20\u9012\u7c7b\u7684\u5f15\u7528\u6216\u6307\u9488\u7684\u8c03\u7528\u540c\u6837\u6709\u6548\uff1b 3>\u5f53\u7c7b\u58f0\u660e\u4e00\u4e2a\u53cb\u5143\u65f6\uff0c\u8be5\u53cb\u5143\u58f0\u660e\u5e76\u6ca1\u6709\u4f7f\u5f97\u53cb\u5143\u672c\u8eab\u53ef\u89c1\uff0c\u4f46\u53ef\u4ee5\u8ba4\u4e3a\u5176\u662f\u6700\u8fd1\u7684\u5916\u5c42\u547d\u540d\u7a7a\u95f4\u7684\u6210\u5458\u3002","title":"\u51fd\u6570\u53c2\u6570"},{"location":"CPP/function/#_4","text":"\u82e5\u6240\u6709\u7684\u5b9e\u53c2\u7c7b\u578b\u76f8\u540c\uff0c\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u540d\u4e3ainitializer_list\u7684\u6807\u51c6\u5e93\u7c7b\u578b\uff08\u5b9a\u4e49\u5728\u540c\u540d\u5934\u6587\u4ef6\u4e2d\uff09\u3002initializer_list\u5bf9\u8c61\u4e2d\u7684\u5143\u7d20\u7528\u4e8e\u662f\u5e38\u91cf\u503c\uff0c\u65e0\u6cd5\u4fee\u6539\u3002 eg: void print(initializer_list<string> list){...}; print({\u201cerror\u201d, \u201cxx\u201d}); //\u5e8f\u5217\u5fc5\u987b\u653e\u5728{}\u4e2d \u9488\u5bf9\u7c7b\u578b\u4e0d\u540c\u7684\u5b9e\u53c2\uff0c\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\u6a21\u677f \u7701\u7565\u7b26\u5f62\u53c2\uff0c\u5176\u53ea\u80fd\u51fa\u73b0\u5728\u5f62\u53c2\u5217\u8868\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5f62\u5f0f\u5982\u4e0b\uff1a void foo(param_list, ...); void foo(...); \u2003\u2003\u5176\u5e94\u8be5\u4ec5\u4ec5\u7528\u4e8eC\u548cC++\u90fd\u901a\u7528\u7684\u7c7b\u578b\u3002","title":"\u51fd\u6570\u53ef\u53d8\u6570\u91cf\u53c2\u6570"},{"location":"CPP/function/#_5","text":"return-by-value , \u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a \u975e\u4e34\u65f6\u53d8\u91cf\u7684\u5de6\u503c \uff0c\u8fd4\u56de\u65f6\u4f1a\u53d1\u751f\u62f7\u8d1d\uff1b\u5982\u679c\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u4e34\u65f6\u53d8\u91cf\u6216\u8005\u5c31\u662f\u4e00\u4e2a\u4e34\u65f6\u7684\u53f3\u503c\uff0c\u5219\u4f1a\u8f6c\u5316\u4e3a\u79fb\u52a8\u6765\u8282\u7701\u62f7\u8d1d\u5f00\u9500\u3002 \u7528const\u4fee\u9970return-by-value\u4e00\u822c\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u56e0\u4e3a\u8fd4\u56de\u7684\u672c\u8eab\u5c31\u662f\u503c\u7684\u62f7\u8d1d\u3002\u4e0d\u8fc7\u5728\u91cd\u8f7d\u8fd0\u7b97\u7b26\u65f6\uff0c\u5982\u679c\u53c2\u6570\u662f\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u4f7f\u7528const T\u4f5c\u4e3a\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u53ef\u4ee5\u907f\u514d\u5982\u201cif(t1*t2=t3)\u201d\u613f\u610f\u662f\u5224\u65ad\u76f8\u7b49\uff0c\u5374\u53d8\u6210\u4e86\u5411\u4e00\u4e2a\u53f3\u503c\u8d4b\u503c\uff0creturn-by-const-value\u53ef\u4ee5\u68c0\u6d4b\u51fa\u8fd9\u79cd\u9519\u8bef\u3002\u5904\u4e8e\u6b64\u79cd\u8003\u8651 return-by-const-value \u4e5f\u662f\u5341\u5206\u5e38\u89c1\u7684\uff0c\u4e0d\u4f1a\u5e26\u6765\u989d\u5916\u7684\u56f0\u6270\uff0c \u8fd8\u53ef\u4ee5\u907f\u514d\u524d\u8ff0\u95ee\u9898\u3002 \u2003 return-by-const-reference , \u5982\u679c\u4ee5\u4e00\u4e2a\u666e\u901a\u53d8\u91cf\u6765\u63a5\u53d7\u8fd4\u56de\u503c\uff0c\u5219\u4f9d\u65e7\u4f1a\u53d1\u751f\u62f7\u8d1d\uff0c\u800c\u4ee5\u5e38\u91cf\u5f15\u7528\u6765\u63a5\u53d7\uff0c\u5219\u4e0d\u4f1a\u53d1\u9001\u62f7\u8d1d\u8f6c\u6362\uff0c\u6b64\u65f6\u4e5f\u4e0d\u80fd\u5bf9\u8fd4\u56de\u503c\u8fdb\u884c\u4fee\u6539(\u591a\u89c1\u7684\u662fconst-reference\u4f20\u53c2\uff0c\u800c\u975e\u8fd4\u56de)\u3002\u6b64\u5916\u4ee5non-const \u5f15\u7528\u7c7b\u578b\u6765\u63a5\u53d7\u8fd4\u56de\u503c\u662f\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\u7684\uff0c\u56e0\u4e3a\u8fd9\u610f\u5473\u7740\u63a5\u53d7\u8005\u53ef\u80fd\u4f1a\u6539\u53d8\u5bf9\u8c61\u3002 \u2003 return-by-reference , \u591a\u89c1\u4e8e\u8c03\u7528\u8005\u9700\u8981\u5bf9\u8fd4\u56de\u5bf9\u8c61\u7684\u5185\u90e8\u6570\u636e\u8fdb\u884c\u4fee\u6539\uff0c\u6216\u8005\u8fd4\u56de\u7c7b\u578b\u4e0d\u80fd\u88ab\u62f7\u8d1d(\u4f8b\u5982IO\u6d41)\u3002","title":"\u51fd\u6570\u8fd4\u56de\u7c7b\u578b"},{"location":"CPP/inherit/","text":"\u5173\u4e8e\u7ee7\u627f 1. protected \u2003 \u57fa\u7c7b\u4e2d\u88ab\u58f0\u660e\u4e3aprotected\u7684\u6210\u5458\uff0c\u5bf9\u4e8e\u7c7b\u7684\u7528\u6237\u662f\u4e0d\u53ef\u8bbf\u95ee\u7684 \uff1b\u4f46\u5bf9\u4e8e\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u548c\u53cb\u5143\u662f\u53ef\u8bbf\u95ee\u7684; \u9700\u6ce8\u610f\u7684\u662f\uff0c\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u53ea\u80fd\u8bbf\u95ee\u6240\u4f5c\u7528\u7684\u90a3\u4e2a\u5bf9\u8c61\uff08\u5373this\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\uff09\u7684\u57fa\u7c7b\u4fdd\u62a4\u6210\u5458\uff0c\u4e0d\u80fd\u8bbf\u95ee\u5176\u4ed6\u57fa\u7c7b\u5bf9\u8c61\u7684\u57fa\u7c7b\u4fdd\u62a4\u6210\u5458\u3002 \u5728\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u5916\u90e8\uff0c\u4e0d\u80fd\u8bbf\u95ee\u57fa\u7c7b\u7684\u79c1\u6709\u6210\u5458\u548c\u4fdd\u62a4\u6210\u5458\u3002 #include<iostream> using namespace std; class A{ public: int a; A(){ a1 = 1;a2 = 2;a3 = 3;a = 4; } public: int a1; protected: int a2; private: int a3; }; class B : protected A{ public: int a; B(int i){ A(); a = i; } void fun(){ cout << a << endl; //\u6b63\u786e\uff0cpublic\u6210\u5458\uff0c\u8f93\u51fai\u3002 cout << a1 << endl; //\u6b63\u786e\uff0c\u57fa\u7c7b\u7684public\u6210\u5458\uff0c\u5728\u6d3e\u751f\u7c7b\u4e2d\u53d8\u6210\u4e86protected\uff0c\u53ef\u4ee5\u88ab\u6d3e\u751f\u7c7b\u8bbf\u95ee\u3002 cout << a2 << endl; //\u6b63\u786e\uff0c\u57fa\u7c7b\u7684protected\u6210\u5458\uff0c\u5728\u6d3e\u751f\u7c7b\u4e2d\u8fd8\u662fprotected\uff0c\u53ef\u4ee5\u88ab\u6d3e\u751f\u7c7b\u8bbf\u95ee\u3002 cout << a3 << endl; //\u9519\u8bef\uff0c\u57fa\u7c7b\u7684private\u6210\u5458\u4e0d\u80fd\u88ab\u6d3e\u751f\u7c7b\u8bbf\u95ee\u3002 } }; int main(){ B b(10); cout << b.a << endl; //\u6b63\u786e\u3002public\u6210\u5458 cout << b.a1 << endl; //\u9519\u8bef\uff0cprotected\u6210\u5458\u4e0d\u80fd\u5728\u7c7b\u5916\u8bbf\u95ee\u3002 cout << b.a2 << endl; //\u9519\u8bef\uff0cprotected\u6210\u5458\u4e0d\u80fd\u5728\u7c7b\u5916\u8bbf\u95ee\u3002 cout << b.a3 << endl; //\u9519\u8bef\uff0cprivate\u6210\u5458\u4e0d\u80fd\u5728\u7c7b\u5916\u8bbf\u95ee\u3002 return 0; } 2. \u7ee7\u627f\u5173\u7cfb \u2003\u6d3e\u751f\u7c7b\u5728\u7ee7\u627f\u57fa\u7c7b\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9apublic\u3001protected\u3001private\u4e09\u79cd\u7ee7\u627f\u65b9\u5f0f\uff1a public\u7ee7\u627f\uff1a\u57fa\u7c7bpublic\u6210\u5458\uff0cprotected\u6210\u5458\uff0cprivate\u6210\u5458\u7684\u8bbf\u95ee\u5c5e\u6027\u5728\u6d3e\u751f\u7c7b\u4e2d\u5206\u522b\u53d8\u6210\uff1apublic, protected, private protected\u7ee7\u627f\uff1a\u57fa\u7c7bpublic\u6210\u5458\uff0cprotected\u6210\u5458\uff0cprivate\u6210\u5458\u7684\u8bbf\u95ee\u5c5e\u6027\u5728\u6d3e\u751f\u7c7b\u4e2d\u5206\u522b\u53d8\u6210\uff1aprotected, protected, private private\u7ee7\u627f\uff1a\u57fa\u7c7bpublic\u6210\u5458\uff0cprotected\u6210\u5458\uff0cprivate\u6210\u5458\u7684\u8bbf\u95ee\u5c5e\u6027\u5728\u6d3e\u751f\u7c7b\u4e2d\u5206\u522b\u53d8\u6210\uff1aprivate, private, private \u2003\u4f46\u65e0\u8bba\u54ea\u79cd\u7ee7\u627f\u65b9\u5f0f\uff0c\u57fa\u7c7b\u4e2d\u7684private\u6210\u5458\u53ea\u80fd\u88ab\u672c\u7c7b\u6210\u5458\uff08\u7c7b\u5185\uff09\u548c\u53cb\u5143\u8bbf\u95ee\uff0c\u4e0d\u80fd\u88ab\u6d3e\u751f\u7c7b\u8bbf\u95ee\uff1b\u4ee5\u53caprotected\u6210\u5458\u53ef\u4ee5\u88ab\u6d3e\u751f\u7c7b\u8bbf\u95ee\u3002 \u2003\u7ee7\u627f\u5173\u7cfb\u6539\u53d8\u7684\u662f\u6d3e\u751f\u7c7b\u7684\u6d3e\u751f\u7c7b\u5bf9\u4e8e\u57fa\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u4ee5private\u7ee7\u627f\u4e3a\u4f8b\uff0c\u57fa\u7c7b\u7684public\u6210\u5458\u5bf9\u4e8e\u6d3e\u751f\u7c7b\u7684\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e5f\u662f\u4e0d\u53ef\u8bbf\u95ee\u7684\u3002 \u91cd\u70b9\u8bf4\u660e \u2003\u4ee5public \u5f62\u5f0f\u7ee7\u627f\uff0c\u7f16\u8bd1\u5668\u4f1a\u5728\u5fc5\u8981\u65f6\u523b\uff0c\u5c06\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8f6c\u6362\u6210\u57fa\u7c7b\u5bf9\u8c61\uff1b\u800c\u4ee5private\u5f62\u5f0f\u7ee7\u627f\uff0c\u5219\u4e0d\u4f1a\u53d1\u751f\u8fd9\u79cd\u884c\u4e3a\u3002 \u2003 private \u7ee7\u627f\u610f\u5473\u7740implemented-in-terms-of(\u6839\u636e\u67d0\u7269\u5b9e\u73b0\u51fa)\uff0c\u5373\u6d3e\u751f\u7c7b\u4e0e\u57fa\u7c7b\u5e76\u4e0d\u5b58\u5728is-a\u7684\u5173\u7cfb\u3002 \u2003\u5f53\u4f60\u9762\u5bf9\u5e76\u4e0d\u5b58\u5728is-a\u5173\u7cfb\u7684\u4e24\u4e2aclasses\uff0c\u5176\u4e2d\u4e00\u4e2a\u7c7b\u9700\u8981\u8bbf\u95ee\u53e6\u4e00\u4e2a\u7c7bprotected\u6210\u5458\uff0c\u6216\u8005\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u5176\u4e00\u6216\u591a\u4e2avirtual\u51fd\u6570\uff0c\u53ef\u4ee5\u8003\u8651private\u7ee7\u627f\u3002 3.\u591a\u91cd\u7ee7\u627f \u2003\u5141\u8bb8\u6d3e\u751f\u7c7b\u4ece\u5b83\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u57fa\u7c7b\u4e2d\u7ee7\u627f\u6784\u9020\u51fd\u6570\uff0c\u6b64\u5916\u5982\u679c\u4ece\u591a\u4e2a\u57fa\u7c7b\u4e2d\u7ee7\u627f\u4e86\u76f8\u540c\u7684\u6784\u9020\u51fd\u6570\uff08\u5373\u5f62\u53c2\u5217\u8868\u76f8\u540c\uff09\uff0c\u5219\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9a\u4e49\u4e13\u5c5e\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\uff0c\u4e0e\u57fa\u7c7b\u7684\u5f62\u53c2\u5217\u8868\u4e0d\u540c\u3002 \u2003\u57fa\u7c7b\u6216\u6d3e\u751f\u7c7b\u7684\u5408\u6210\u62f7\u8d1d\u63a7\u5236\u6210\u8bed\u3001\u5408\u6210\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u8fd0\u7b97\u7b26\u6216\u6790\u6784\u51fd\u6570\uff0c\u5b83\u4eec\u5bf9\u672c\u8eab\u7684\u6210\u5458\u4f9d\u6b21\u8fdb\u884c\u521d\u59cb\u5316\u3001\u8d4b\u503c\u6216\u9500\u6bc1\u64cd\u4f5c\uff0c\u6b64\u5916\u8fd8\u8d1f\u8d23\u4f7f\u7528\u76f4\u63a5\u57fa\u7c7b\u4e2d\u5bf9\u5e94\u7684\u64cd\u4f5c\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u7684\u76f4\u63a5\u57fa\u7c7b\u90e8\u5206\u8fdb\u884c\u521d\u59cb\u5316\u3001\u8d4b\u503c\u6216\u9500\u6bc1\u76f4\u81f3\u7ee7\u627f\u94fe\u9876\u7aef\u3002 \u2003\u5c3d\u7ba1\u5728\u6d3e\u751f\u5217\u8868\u4e2d\u540c\u4e00\u4e2a\u57fa\u7c7b\u53ea\u80fd\u51fa\u73b0\u5728\u4e00\u6b21\uff0c\u4f46\u6d3e\u751f\u7c7b\u53ef\u4ee5\u591a\u6b21\u7ee7\u627f\u540c\u4e00\u4e2a\u7c7b\u3002\u6d3e\u751f\u7c7b\u53ef\u4ee5\u901a\u8fc7\u5176\u591a\u4e2a\u57fa\u7c7b\u5206\u522b\u7ee7\u627f\u540c\u4e00\u4e2a\u95f4\u63a5\u57fa\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f\u67d0\u4e2a\u57fa\u7c7b\uff0c\u7136\u540e\u901a\u8fc7\u53e6\u4e00\u4e2a\u57fa\u7c7b\u518d\u4e00\u6b21\u95f4\u63a5\u7ee7\u627f\u8be5\u7c7b\u3002 \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6d3e\u751f\u7c7b\u4e2d\u542b\u6709\u7ee7\u627f\u94fe\u4e0a\u6bcf\u4e2a\u7c7b\u5bf9\u5e94\u7684\u5b50\u90e8\u5206\uff0c \u5982\u679c\u67d0\u4e2a\u7c7b\u5728\u6d3e\u751f\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4e86\u591a\u6b21\uff0c\u5219\u6d3e\u751f\u7c7b\u4e2d\u5c06\u5305\u542b\u8be5\u7c7b\u7684\u591a\u4e2a\u5b50\u5bf9\u8c61\u3002 \u2003 \u865a\u7ee7\u627f \uff1a\u4ee4\u67d0\u4e2a\u7c7b\u505a\u51fa\u58f0\u660e\uff0c\u627f\u8bfa\u613f\u610f\u5171\u4eab\u5b83\u7684\u57fa\u7c7b\u3002\u5176\u4e2d\u5171\u4eab\u7684\u57fa\u7c7b\u5b50\u5bf9\u8c61\u79f0\u4e3a\u865a\u57fa\u7c7b\u3002\u5728\u8fd9\u79cd\u673a\u5236\u4e0b\uff0c\u4e0d\u8bba\u865a\u57fa\u7c7b\u5728\u7ee7\u627f\u4f53\u7cfb\u4e2d\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u5728\u6d3e\u751f\u7c7b\u4e2d\u90fd\u53ea\u5305\u542b\u552f\u4e00\u4e00\u4e2a\u5171\u4eab\u7684\u865a\u57fa\u7c7b\u5b50\u5bf9\u8c61\u3002 class Bear: virtual public ZooAnimal{} //virtual\u548cpublic\u987a\u5e8f\u968f\u610f\uff0c virtual\u8bf4\u660e\u4e86\u4e00\u79cd\u610f\u613f\uff0c\u5373\u5728\u540e\u7eed\u7684\u6d3e\u751f\u7c7b\u5f53\u4e2d\u5171\u4eab\u865a\u57fa\u7c7b\u7684\u540c\u4e00\u4efd\u5b9e\u4f8b \u865a\u6d3e\u751f\u53ea\u5f71\u54cd\u4ece\u6307\u5b9a\u4e86\u865a\u57fa\u7c7b\u7684\u6d3e\u751f\u8fdb\u4e00\u6b65\u6d3e\u751f\u51fa\u7684\u7c7b\uff0c\u4e0d\u4f1a\u5f71\u54cd\u6d3e\u751f\u7c7b\u672c\u8eab\u3002\uff08eg.\u5373\u5f71\u54cd\u7684\u662fBear\u7684\u6d3e\u751f\u7c7b\uff09 \u5f71\u54cd\u5305\u62ec: \u865a\u57fa\u7c7b\u662f\u7531\u6700\u5e95\u5c42\u7684\u6d3e\u751f\u7c7b\u521d\u59cb\u5316\u7684\uff1b \u865a\u57fa\u7c7b\u6210\u5458\u7684\u53ef\u89c1\u6027 : \u5047\u5b9aB\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3ax\u7684\u6210\u5458\uff0cD1\u548cD2\u90fd\u662f\u4eceB\u865a\u7ee7\u627f\u5f97\u5230\u7684\uff0cD\u7ee7\u627f\u4e86D1\u548cD2\uff0c\u5219\u5728D\u7684\u4f5c\u7528\u57df\u4e2d\uff0cx\u901a\u8fc7D\u7684\u4fe9\u4e2a\u57fa\u7c7b\u90fd\u662f\u53ef\u89c1\u7684\uff0c\u5982\u679c\u6211\u4eec\u901a\u8fc7D\u7684\u5bf9\u8c61\u4f7f\u7528x\uff0c\u6709\u4e09\u79cd\u53ef\u80fd\u6027\uff1a \u20031.\u5982\u679c\u5728D1\u548cD2\u4e2d\u90fd\u6ca1\u6709x\u7684\u5b9a\u4e49\uff0c\u5219x\u5c06\u88ab\u89e3\u6790\u4e3aB\u7684\u6210\u5458\uff0c\u6b64\u65f6\u4e0d\u5b58\u5728\u4e8c\u4e49\u6027\uff0c\u4e00\u4e2aD\u7684\u5bf9\u8c61\u53ea\u542b\u6709x\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff1b \u20032.\u5982\u679cx\u662fB\u7684\u6210\u5458\uff0c\u540c\u65f6\u662fD1\u548cD2\u4e2d\u67d0\u4e00\u4e2a\u7684\u6210\u5458\uff0c\u5219\u540c\u6837\u6ca1\u6709\u4e8c\u4e49\u6027\uff0c\u6d3e\u751f\u7c7b\u7684x\u6bd4\u5171\u4eab\u865a\u57fa\u7c7bB\u7684x\u4f18\u5148\u7ea7\u66f4\u9ad8\uff1b \u20033.\u5982\u679c\u5728D1\u548cD2\u4e2d\u90fd\u6709x\u7684\u5b9a\u4e49\uff0c\u5219\u76f4\u63a5\u8bbf\u95eex\u5c06\u4ea7\u751f\u4e8c\u4e49\u6027\u95ee\u9898\uff1b\u4e0e\u975e\u865a\u7684\u591a\u91cd\u7ee7\u627f\u4f53\u7cfb\u4e00\u6837\uff0c\u89e3\u51b3\u8fd9\u79cd\u4e8c\u4e49\u6027\u95ee\u9898\u6700\u597d\u7684\u65b9\u6cd5\u662f\u5728\u6d3e\u751f\u7c7b\u4e2d\u4e3a\u6210\u5458\u81ea\u5b9a\u4e49\u65b0\u7684\u5b9e\u4f8b\u3002 \u542b\u6709\u865a\u57fa\u7c7b\u7684\u5bf9\u8c61\u7684\u6784\u9020\u987a\u5e8f\u4e0e\u4e00\u822c\u7684\u987a\u5e8f\u533a\u522b\uff1a\u9996\u5148\u4f7f\u7528\u63d0\u4f9b\u7ed9\u6700\u5e95\u5c42\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u503c\u521d\u59cb\u5316\u8be5\u5bf9\u8c61\u7684\u865a\u57fa\u7c7b\u90e8\u5206\uff0c\u63a5\u4e0b\u6765\u6309\u7167\u76f4\u63a5\u57fa\u7c7b\u5728\u6d3e\u751f\u5217\u8868\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u4f9d\u6b21\u8fdb\u884c\u521d\u59cb\u5316\uff1b \u6790\u6784\u51fd\u6570\u987a\u5e8f\u4e0e\u6b64\u76f8\u53cd\u3002","title":"\u5173\u4e8e\u7ee7\u627f"},{"location":"CPP/inherit/#_1","text":"","title":"\u5173\u4e8e\u7ee7\u627f"},{"location":"CPP/inherit/#1-protected","text":"\u57fa\u7c7b\u4e2d\u88ab\u58f0\u660e\u4e3aprotected\u7684\u6210\u5458\uff0c\u5bf9\u4e8e\u7c7b\u7684\u7528\u6237\u662f\u4e0d\u53ef\u8bbf\u95ee\u7684 \uff1b\u4f46\u5bf9\u4e8e\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u548c\u53cb\u5143\u662f\u53ef\u8bbf\u95ee\u7684; \u9700\u6ce8\u610f\u7684\u662f\uff0c\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u53ea\u80fd\u8bbf\u95ee\u6240\u4f5c\u7528\u7684\u90a3\u4e2a\u5bf9\u8c61\uff08\u5373this\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\uff09\u7684\u57fa\u7c7b\u4fdd\u62a4\u6210\u5458\uff0c\u4e0d\u80fd\u8bbf\u95ee\u5176\u4ed6\u57fa\u7c7b\u5bf9\u8c61\u7684\u57fa\u7c7b\u4fdd\u62a4\u6210\u5458\u3002 \u5728\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u5916\u90e8\uff0c\u4e0d\u80fd\u8bbf\u95ee\u57fa\u7c7b\u7684\u79c1\u6709\u6210\u5458\u548c\u4fdd\u62a4\u6210\u5458\u3002 #include<iostream> using namespace std; class A{ public: int a; A(){ a1 = 1;a2 = 2;a3 = 3;a = 4; } public: int a1; protected: int a2; private: int a3; }; class B : protected A{ public: int a; B(int i){ A(); a = i; } void fun(){ cout << a << endl; //\u6b63\u786e\uff0cpublic\u6210\u5458\uff0c\u8f93\u51fai\u3002 cout << a1 << endl; //\u6b63\u786e\uff0c\u57fa\u7c7b\u7684public\u6210\u5458\uff0c\u5728\u6d3e\u751f\u7c7b\u4e2d\u53d8\u6210\u4e86protected\uff0c\u53ef\u4ee5\u88ab\u6d3e\u751f\u7c7b\u8bbf\u95ee\u3002 cout << a2 << endl; //\u6b63\u786e\uff0c\u57fa\u7c7b\u7684protected\u6210\u5458\uff0c\u5728\u6d3e\u751f\u7c7b\u4e2d\u8fd8\u662fprotected\uff0c\u53ef\u4ee5\u88ab\u6d3e\u751f\u7c7b\u8bbf\u95ee\u3002 cout << a3 << endl; //\u9519\u8bef\uff0c\u57fa\u7c7b\u7684private\u6210\u5458\u4e0d\u80fd\u88ab\u6d3e\u751f\u7c7b\u8bbf\u95ee\u3002 } }; int main(){ B b(10); cout << b.a << endl; //\u6b63\u786e\u3002public\u6210\u5458 cout << b.a1 << endl; //\u9519\u8bef\uff0cprotected\u6210\u5458\u4e0d\u80fd\u5728\u7c7b\u5916\u8bbf\u95ee\u3002 cout << b.a2 << endl; //\u9519\u8bef\uff0cprotected\u6210\u5458\u4e0d\u80fd\u5728\u7c7b\u5916\u8bbf\u95ee\u3002 cout << b.a3 << endl; //\u9519\u8bef\uff0cprivate\u6210\u5458\u4e0d\u80fd\u5728\u7c7b\u5916\u8bbf\u95ee\u3002 return 0; }","title":"1. protected"},{"location":"CPP/inherit/#2","text":"\u6d3e\u751f\u7c7b\u5728\u7ee7\u627f\u57fa\u7c7b\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9apublic\u3001protected\u3001private\u4e09\u79cd\u7ee7\u627f\u65b9\u5f0f\uff1a public\u7ee7\u627f\uff1a\u57fa\u7c7bpublic\u6210\u5458\uff0cprotected\u6210\u5458\uff0cprivate\u6210\u5458\u7684\u8bbf\u95ee\u5c5e\u6027\u5728\u6d3e\u751f\u7c7b\u4e2d\u5206\u522b\u53d8\u6210\uff1apublic, protected, private protected\u7ee7\u627f\uff1a\u57fa\u7c7bpublic\u6210\u5458\uff0cprotected\u6210\u5458\uff0cprivate\u6210\u5458\u7684\u8bbf\u95ee\u5c5e\u6027\u5728\u6d3e\u751f\u7c7b\u4e2d\u5206\u522b\u53d8\u6210\uff1aprotected, protected, private private\u7ee7\u627f\uff1a\u57fa\u7c7bpublic\u6210\u5458\uff0cprotected\u6210\u5458\uff0cprivate\u6210\u5458\u7684\u8bbf\u95ee\u5c5e\u6027\u5728\u6d3e\u751f\u7c7b\u4e2d\u5206\u522b\u53d8\u6210\uff1aprivate, private, private \u2003\u4f46\u65e0\u8bba\u54ea\u79cd\u7ee7\u627f\u65b9\u5f0f\uff0c\u57fa\u7c7b\u4e2d\u7684private\u6210\u5458\u53ea\u80fd\u88ab\u672c\u7c7b\u6210\u5458\uff08\u7c7b\u5185\uff09\u548c\u53cb\u5143\u8bbf\u95ee\uff0c\u4e0d\u80fd\u88ab\u6d3e\u751f\u7c7b\u8bbf\u95ee\uff1b\u4ee5\u53caprotected\u6210\u5458\u53ef\u4ee5\u88ab\u6d3e\u751f\u7c7b\u8bbf\u95ee\u3002 \u2003\u7ee7\u627f\u5173\u7cfb\u6539\u53d8\u7684\u662f\u6d3e\u751f\u7c7b\u7684\u6d3e\u751f\u7c7b\u5bf9\u4e8e\u57fa\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u4ee5private\u7ee7\u627f\u4e3a\u4f8b\uff0c\u57fa\u7c7b\u7684public\u6210\u5458\u5bf9\u4e8e\u6d3e\u751f\u7c7b\u7684\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e5f\u662f\u4e0d\u53ef\u8bbf\u95ee\u7684\u3002 \u91cd\u70b9\u8bf4\u660e \u2003\u4ee5public \u5f62\u5f0f\u7ee7\u627f\uff0c\u7f16\u8bd1\u5668\u4f1a\u5728\u5fc5\u8981\u65f6\u523b\uff0c\u5c06\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8f6c\u6362\u6210\u57fa\u7c7b\u5bf9\u8c61\uff1b\u800c\u4ee5private\u5f62\u5f0f\u7ee7\u627f\uff0c\u5219\u4e0d\u4f1a\u53d1\u751f\u8fd9\u79cd\u884c\u4e3a\u3002 \u2003 private \u7ee7\u627f\u610f\u5473\u7740implemented-in-terms-of(\u6839\u636e\u67d0\u7269\u5b9e\u73b0\u51fa)\uff0c\u5373\u6d3e\u751f\u7c7b\u4e0e\u57fa\u7c7b\u5e76\u4e0d\u5b58\u5728is-a\u7684\u5173\u7cfb\u3002 \u2003\u5f53\u4f60\u9762\u5bf9\u5e76\u4e0d\u5b58\u5728is-a\u5173\u7cfb\u7684\u4e24\u4e2aclasses\uff0c\u5176\u4e2d\u4e00\u4e2a\u7c7b\u9700\u8981\u8bbf\u95ee\u53e6\u4e00\u4e2a\u7c7bprotected\u6210\u5458\uff0c\u6216\u8005\u9700\u8981\u91cd\u65b0\u5b9a\u4e49\u5176\u4e00\u6216\u591a\u4e2avirtual\u51fd\u6570\uff0c\u53ef\u4ee5\u8003\u8651private\u7ee7\u627f\u3002","title":"2. \u7ee7\u627f\u5173\u7cfb"},{"location":"CPP/inherit/#3","text":"\u5141\u8bb8\u6d3e\u751f\u7c7b\u4ece\u5b83\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u57fa\u7c7b\u4e2d\u7ee7\u627f\u6784\u9020\u51fd\u6570\uff0c\u6b64\u5916\u5982\u679c\u4ece\u591a\u4e2a\u57fa\u7c7b\u4e2d\u7ee7\u627f\u4e86\u76f8\u540c\u7684\u6784\u9020\u51fd\u6570\uff08\u5373\u5f62\u53c2\u5217\u8868\u76f8\u540c\uff09\uff0c\u5219\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9a\u4e49\u4e13\u5c5e\u7248\u672c\u7684\u6784\u9020\u51fd\u6570\uff0c\u4e0e\u57fa\u7c7b\u7684\u5f62\u53c2\u5217\u8868\u4e0d\u540c\u3002 \u2003\u57fa\u7c7b\u6216\u6d3e\u751f\u7c7b\u7684\u5408\u6210\u62f7\u8d1d\u63a7\u5236\u6210\u8bed\u3001\u5408\u6210\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u8fd0\u7b97\u7b26\u6216\u6790\u6784\u51fd\u6570\uff0c\u5b83\u4eec\u5bf9\u672c\u8eab\u7684\u6210\u5458\u4f9d\u6b21\u8fdb\u884c\u521d\u59cb\u5316\u3001\u8d4b\u503c\u6216\u9500\u6bc1\u64cd\u4f5c\uff0c\u6b64\u5916\u8fd8\u8d1f\u8d23\u4f7f\u7528\u76f4\u63a5\u57fa\u7c7b\u4e2d\u5bf9\u5e94\u7684\u64cd\u4f5c\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u7684\u76f4\u63a5\u57fa\u7c7b\u90e8\u5206\u8fdb\u884c\u521d\u59cb\u5316\u3001\u8d4b\u503c\u6216\u9500\u6bc1\u76f4\u81f3\u7ee7\u627f\u94fe\u9876\u7aef\u3002 \u2003\u5c3d\u7ba1\u5728\u6d3e\u751f\u5217\u8868\u4e2d\u540c\u4e00\u4e2a\u57fa\u7c7b\u53ea\u80fd\u51fa\u73b0\u5728\u4e00\u6b21\uff0c\u4f46\u6d3e\u751f\u7c7b\u53ef\u4ee5\u591a\u6b21\u7ee7\u627f\u540c\u4e00\u4e2a\u7c7b\u3002\u6d3e\u751f\u7c7b\u53ef\u4ee5\u901a\u8fc7\u5176\u591a\u4e2a\u57fa\u7c7b\u5206\u522b\u7ee7\u627f\u540c\u4e00\u4e2a\u95f4\u63a5\u57fa\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f\u67d0\u4e2a\u57fa\u7c7b\uff0c\u7136\u540e\u901a\u8fc7\u53e6\u4e00\u4e2a\u57fa\u7c7b\u518d\u4e00\u6b21\u95f4\u63a5\u7ee7\u627f\u8be5\u7c7b\u3002 \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6d3e\u751f\u7c7b\u4e2d\u542b\u6709\u7ee7\u627f\u94fe\u4e0a\u6bcf\u4e2a\u7c7b\u5bf9\u5e94\u7684\u5b50\u90e8\u5206\uff0c \u5982\u679c\u67d0\u4e2a\u7c7b\u5728\u6d3e\u751f\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4e86\u591a\u6b21\uff0c\u5219\u6d3e\u751f\u7c7b\u4e2d\u5c06\u5305\u542b\u8be5\u7c7b\u7684\u591a\u4e2a\u5b50\u5bf9\u8c61\u3002 \u2003 \u865a\u7ee7\u627f \uff1a\u4ee4\u67d0\u4e2a\u7c7b\u505a\u51fa\u58f0\u660e\uff0c\u627f\u8bfa\u613f\u610f\u5171\u4eab\u5b83\u7684\u57fa\u7c7b\u3002\u5176\u4e2d\u5171\u4eab\u7684\u57fa\u7c7b\u5b50\u5bf9\u8c61\u79f0\u4e3a\u865a\u57fa\u7c7b\u3002\u5728\u8fd9\u79cd\u673a\u5236\u4e0b\uff0c\u4e0d\u8bba\u865a\u57fa\u7c7b\u5728\u7ee7\u627f\u4f53\u7cfb\u4e2d\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\uff0c\u5728\u6d3e\u751f\u7c7b\u4e2d\u90fd\u53ea\u5305\u542b\u552f\u4e00\u4e00\u4e2a\u5171\u4eab\u7684\u865a\u57fa\u7c7b\u5b50\u5bf9\u8c61\u3002 class Bear: virtual public ZooAnimal{} //virtual\u548cpublic\u987a\u5e8f\u968f\u610f\uff0c virtual\u8bf4\u660e\u4e86\u4e00\u79cd\u610f\u613f\uff0c\u5373\u5728\u540e\u7eed\u7684\u6d3e\u751f\u7c7b\u5f53\u4e2d\u5171\u4eab\u865a\u57fa\u7c7b\u7684\u540c\u4e00\u4efd\u5b9e\u4f8b \u865a\u6d3e\u751f\u53ea\u5f71\u54cd\u4ece\u6307\u5b9a\u4e86\u865a\u57fa\u7c7b\u7684\u6d3e\u751f\u8fdb\u4e00\u6b65\u6d3e\u751f\u51fa\u7684\u7c7b\uff0c\u4e0d\u4f1a\u5f71\u54cd\u6d3e\u751f\u7c7b\u672c\u8eab\u3002\uff08eg.\u5373\u5f71\u54cd\u7684\u662fBear\u7684\u6d3e\u751f\u7c7b\uff09 \u5f71\u54cd\u5305\u62ec: \u865a\u57fa\u7c7b\u662f\u7531\u6700\u5e95\u5c42\u7684\u6d3e\u751f\u7c7b\u521d\u59cb\u5316\u7684\uff1b \u865a\u57fa\u7c7b\u6210\u5458\u7684\u53ef\u89c1\u6027 : \u5047\u5b9aB\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3ax\u7684\u6210\u5458\uff0cD1\u548cD2\u90fd\u662f\u4eceB\u865a\u7ee7\u627f\u5f97\u5230\u7684\uff0cD\u7ee7\u627f\u4e86D1\u548cD2\uff0c\u5219\u5728D\u7684\u4f5c\u7528\u57df\u4e2d\uff0cx\u901a\u8fc7D\u7684\u4fe9\u4e2a\u57fa\u7c7b\u90fd\u662f\u53ef\u89c1\u7684\uff0c\u5982\u679c\u6211\u4eec\u901a\u8fc7D\u7684\u5bf9\u8c61\u4f7f\u7528x\uff0c\u6709\u4e09\u79cd\u53ef\u80fd\u6027\uff1a \u20031.\u5982\u679c\u5728D1\u548cD2\u4e2d\u90fd\u6ca1\u6709x\u7684\u5b9a\u4e49\uff0c\u5219x\u5c06\u88ab\u89e3\u6790\u4e3aB\u7684\u6210\u5458\uff0c\u6b64\u65f6\u4e0d\u5b58\u5728\u4e8c\u4e49\u6027\uff0c\u4e00\u4e2aD\u7684\u5bf9\u8c61\u53ea\u542b\u6709x\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff1b \u20032.\u5982\u679cx\u662fB\u7684\u6210\u5458\uff0c\u540c\u65f6\u662fD1\u548cD2\u4e2d\u67d0\u4e00\u4e2a\u7684\u6210\u5458\uff0c\u5219\u540c\u6837\u6ca1\u6709\u4e8c\u4e49\u6027\uff0c\u6d3e\u751f\u7c7b\u7684x\u6bd4\u5171\u4eab\u865a\u57fa\u7c7bB\u7684x\u4f18\u5148\u7ea7\u66f4\u9ad8\uff1b \u20033.\u5982\u679c\u5728D1\u548cD2\u4e2d\u90fd\u6709x\u7684\u5b9a\u4e49\uff0c\u5219\u76f4\u63a5\u8bbf\u95eex\u5c06\u4ea7\u751f\u4e8c\u4e49\u6027\u95ee\u9898\uff1b\u4e0e\u975e\u865a\u7684\u591a\u91cd\u7ee7\u627f\u4f53\u7cfb\u4e00\u6837\uff0c\u89e3\u51b3\u8fd9\u79cd\u4e8c\u4e49\u6027\u95ee\u9898\u6700\u597d\u7684\u65b9\u6cd5\u662f\u5728\u6d3e\u751f\u7c7b\u4e2d\u4e3a\u6210\u5458\u81ea\u5b9a\u4e49\u65b0\u7684\u5b9e\u4f8b\u3002 \u542b\u6709\u865a\u57fa\u7c7b\u7684\u5bf9\u8c61\u7684\u6784\u9020\u987a\u5e8f\u4e0e\u4e00\u822c\u7684\u987a\u5e8f\u533a\u522b\uff1a\u9996\u5148\u4f7f\u7528\u63d0\u4f9b\u7ed9\u6700\u5e95\u5c42\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u503c\u521d\u59cb\u5316\u8be5\u5bf9\u8c61\u7684\u865a\u57fa\u7c7b\u90e8\u5206\uff0c\u63a5\u4e0b\u6765\u6309\u7167\u76f4\u63a5\u57fa\u7c7b\u5728\u6d3e\u751f\u5217\u8868\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u4f9d\u6b21\u8fdb\u884c\u521d\u59cb\u5316\uff1b \u6790\u6784\u51fd\u6570\u987a\u5e8f\u4e0e\u6b64\u76f8\u53cd\u3002","title":"3.\u591a\u91cd\u7ee7\u627f"},{"location":"CPP/initialization/","text":"About Initialization \u58f0\u660e \u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u53ea\u662f\u5c06\u53d8\u91cf\u540d\u6807\u8bc6\u7b26\u7684\u6709\u5173\u4fe1\u606f\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u4f7f\u7f16\u8bd1\u5668\u201c\u8ba4\u8bc6\u201d\u8be5\u6807\u8bc6\u7b26\uff0c\u4f46\u58f0\u660e\u4e0d\u4e00\u5b9a\u5f15\u8d77\u5185\u5b58\u7684\u5206\u914d\u3002 \u5b9a\u4e49 \u5b9a\u4e49\u53d8\u91cf\u610f\u5473\u7740\u7ed9\u53d8\u91cf\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u7528\u4e8e\u5b58\u653e\u5bf9\u5e94\u7c7b\u578b\u7684\u6570\u636e\uff0c\u53d8\u91cf\u540d\u5c31\u662f\u5bf9\u76f8\u5e94\u7684\u5185\u5b58\u5355\u5143\u7684\u547d\u540d\u3002\u800c\u5728C++\u7a0b\u5e8f\u4e2d\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u53d8\u91cf\u58f0\u660e\u4e5f\u5c31\u662f\u53d8\u91cf\u5b9a\u4e49\uff0c\u58f0\u660e\u53d8\u91cf\u7684\u540c\u65f6\u4e5f\u5c31\u5b8c\u6210\u4e86\u53d8\u91cf\u7684\u5b9a\u4e49\uff0c\u4e0d\u8fc7\u4e5f\u6709\u4f8b\u5916\u3002\u5982\u679c\u60f3\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u800c\u975e\u5b9a\u4e49\u5b83\uff0c\u5219\u53ef\u52a0\u4e0aextern\u5173\u952e\u5b57\uff0c\u800c\u4e14\u4e0d\u7528\u663e\u793a\u521d\u59cb\u5316\u53d8\u91cf\u3002 \u4efb\u4f55\u5305\u542b\u4e86\u663e\u793a\u521d\u59cb\u5316\u7684\u58f0\u660e\u5373\u6210\u4e3a\u5b9a\u4e49, \u5373extern\u8bed\u53e5\u5982\u679c\u5305\u542b\u521d\u59cb\u503c\u5c31\u4e0d\u518d\u662f\u58f0\u660e\uff0c\u800c\u53d8\u6210\u5b9a\u4e49\u4e86\u3002 extern int a; //\u4ec5\u4ec5\u58f0\u660e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf \uff0c\u6ca1\u6709\u5b9a\u4e49\uff0c int a; //\u58f0\u660e\u5e76\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf extern int a = 0;//\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\u5e76\u521d\u59cb\u5316\u521d\u503c int a = 0; //\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\u5e76\u521d\u59cb\u5316\u521d\u503c \u53d8\u91cf\u7684\u5b9a\u4e49\u5fc5\u987b\u51fa\u73b0\u4e14\u53ea\u80fd\u51fa\u73b0\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u800c\u5176\u4ed6\u7528\u5230\u8be5\u53d8\u91cf\u7684\u6587\u4ef6\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u8bf4\u660e\uff0c\u4f46\u7edd\u4e0d\u80fd\u91cd\u590d\u5b9a\u4e49\u3002\u5f53\u4f60\u8981\u5f15\u7528\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u65f6\uff0c\u4f60\u5c31\u8981\u58f0\u660eextern int a;\u8fd9\u4e2a\u65f6\u5019extern\u4e0d\u80fd\u7701\uff0c\u5426\u5219\u5c31\u6210\u5b9a\u4e49\u4e86\u3002\u4f8b\u5982\u5982\u679c\u60f3\u8981\u5728\u591a\u4e2a\u6587\u4ef6\u4e4b\u95f4\u5171\u4eabconst\u5bf9\u8c61\u65f6\uff0c\u5fc5\u987b\u5728\u53d8\u91cf\u7684\u5b9a\u4e49\u4e4b\u524d\u6dfb\u52a0extern\u3002 header.h extern const int a =1; main.cpp main(){ extern const int a; cout << a; //\u8f93\u51fa1 } \u4e0d\u80fd\u5728\u4efb\u4f55\u51fd\u6570\u4f53\u5185\u90e8(\u5305\u62ecmain\u51fd\u6570)\u521d\u59cb\u5316\u4e00\u4e2a\u7531extern\u5173\u952e\u5b57\u6807\u8bb0\u7684\u53d8\u91cf\u3002 \u521d\u59cb\u5316 \u521d\u59cb\u5316\u4e0d\u662f\u8d4b\u503c\uff0c\u5176\u542b\u4e49\u662f\u521b\u5efa\u4e00\u4e2a\u53d8\u91cf\u65f6\u8d4b\u4e88\u5176\u4e00\u4e2a\u521d\u59cb\u503c\uff0c\u800c\u8d4b\u503c\u7684\u542b\u4e49\u662f\u628a\u5bf9\u8c61\u5f53\u524d\u503c\u64e6\u9664\uff0c\u800c\u4ee5\u4e00\u4e2a\u65b0\u503c\u6765\u66ff\u4ee3\u3002 int a=1; //\u521d\u59cb\u5316 a=2; //\u8d4b\u503c \u5217\u8868\u521d\u59cb\u5316\uff0c \u8981\u6c42\u63d0\u4f9b\u7684\u521d\u59cb\u503c\u4e0e\u8981\u521d\u59cb\u5316\u7684\u53d8\u91cf\u7c7b\u578b\u4e25\u683c\u7edf\u4e00\uff0c\u5728 \u4f7f\u7528\u5217\u8868\u521d\u59cb\u5316\u65f6\uff0c\u82e5\u521d\u59cb\u503c\u5b58\u5728\u4e22\u5931\u4fe1\u606f\u7684\u98ce\u9669(\u5982\u7528long\u3001double\u7684\u503c\u53bb\u521d\u59cb\u5316int\u53d8\u91cf\uff0c\u6709\u53ef\u80fd\u4e22\u5931\u6570\u636e\u6216\u8005\u6ea2\u51fa)\uff0c\u5219\u7f16\u8bd1\u5668\u5c06\u62a5\u9519\u3002 int a ={0}; int b{0}; \u521d\u59cb\u5316\u4e0e\u5b9a\u4e49\uff0c\u5b9a\u4e49\u53d1\u751f\u65f6\u4e0d\u4e00\u5b9a\u4f1a\u8fdb\u884c\u521d\u59cb\u5316\uff1a \u5f53\u53d8\u91cf\u4e3a\u81ea\u5b9a\u4e49\u7c7b\u7c7b\u578b: \u2003\u8c03\u7528\u81ea\u8eab\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u5f53\u53d8\u91cf\u4e3a\u5185\u7f6e\u7c7b\u578b\u65f6: \u2003\u8be5\u53d8\u91cf\u5b9a\u4e49\u5728\u51fd\u6570\u4f53\u5916\u65f6\uff0c\u5c06\u88ab\u521d\u59cb\u5316\u4e3a0\u3002 \u2003\u8be5\u53d8\u91cf\u5b9a\u4e49\u5728\u51fd\u6570\u4f53\u5185\u65f6\uff0c\u5c06\u4e0d\u4f1a\u8fdb\u884c\u521d\u59cb\u5316, \u4e00\u4e2a\u672a\u88ab\u521d\u59cb\u5316\u7684\u5185\u7f6e\u7c7b\u578b\u53d8\u91cf\u7684\u503c\u662f\u672a\u5b9a\u4e49\u7684\u3002 \u7c7b\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316\uff1a\u521d\u59cb\u5316\u5217\u8868\u548c\u8d4b\u503c\u521d\u59cb\u5316 \u521d\u59cb\u5316\u5217\u8868: \u683c\u5f0f: Base(int a1, int a2, A a): data1(a1), data2(a2), data3(a); \u2003\u5fc5\u987b\u7528\u521d\u59cb\u5316\u5217\u8868\u7684\u60c5\u51b5\uff1a \u20031\uff09\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u7c7b\u6210\u5458\uff0c\u5b83\u672c\u8eab\u662f\u4e00\u4e2a\u7c7b\u6216\u8005\u662f\u4e00\u4e2a\u7ed3\u6784\uff0c\u800c\u4e14\u8fd9\u4e2a\u6210\u5458\u5b83\u53ea\u6709\u4e00\u4e2a\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6ca1\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002\u8fd9\u65f6\u8981\u5bf9\u8fd9\u4e2a\u7c7b\u6210\u5458\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5c31\u5fc5\u987b\u8c03\u7528\u8fd9\u4e2a\u7c7b\u6210\u5458\u7684\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u3002 \u20032\uff09\u5f53\u7c7b\u6210\u5458\u4e2d\u542b\u6709\u4e00\u4e2aconst\u5bf9\u8c61\u65f6\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u5f15\u7528\u65f6\uff0c\u4ed6\u4eec\u4e5f\u5fc5\u987b\u8981\u901a\u8fc7\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u8fd9\u4e24\u79cd\u5bf9\u8c61\u8981\u5728\u58f0\u660e\u540e\u9a6c\u4e0a\u521d\u59cb\u5316\uff0c\u800c\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u505a\u7684\u662f\u5bf9\u4ed6\u4eec\u7684\u8d4b\u503c\uff0c\u8fd9\u6837\u662f\u4e0d\u88ab\u5141\u8bb8\u7684\u3002 \u20033\uff09 \u5b50\u7c7b\u521d\u59cb\u5316\u7236\u7c7b\u7684\u79c1\u6709\u6210\u5458\uff0c\u9700\u8981\u5728(\u5e76\u4e14\u4e5f\u53ea\u80fd\u5728)\u53c2\u6570\u521d\u59cb\u5316\u5217\u8868\u4e2d\u663e\u793a\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u3002 \u20034)\u6210\u5458\u53d8\u91cf\u7684\u521d\u59cb\u5316\u987a\u5e8f\u4e0e\u58f0\u660e\u7684\u987a\u5e8f\u76f8\u5173\uff0c\u4e0e\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u65e0\u5173\uff1b\u521d\u59cb\u5316\u5217\u8868\u5148\u4e8e\u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u4f53\u6267\u884c\u3002 \u7c7b\u5185\u521d\u59cb\u503c\uff1a\u63d0\u4f9b\u4e00\u4e2a \u7c7b\u5185\u521d\u59cb\u503c \u65f6\uff0c\u5fc5\u987b\u4ee5\u7b26\u5408=\u6216\u8005\u82b1\u62ec\u53f7\u8868\u793a\uff0c\u4e0d\u80fd\u7528()\u62ec\u53f7\uff1b eg: vector f{type_item}; //\u6b63\u786e vector f(n, type_item); //\u610f\u56fe\u521d\u59cb\u5316\u5305\u542bn\u4e2atype_item\u7684vector\uff0c\u9519\u8bef\u539f\u56e0\u662f\u5bb9\u6613\u548c\u51fd\u6570\u58f0\u660e\u51b2\u7a81\uff1b\u8be5\u53e5\u5728\u7c7b\u5916\u4f7f\u7528\u65f6\u662f\u53ef\u4ee5\u7684\u3002 static member data initialization \u2003\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e0d\u5c5e\u4e8e\u7c7b\u7684\u4efb\u4f55\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6240\u4ee5\u5b83\u4eec\u5e76\u4e0d\u662f\u5728\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\u65f6\u88ab\u5b9a\u4e49\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u4e0d\u662f\u7531\u7c7b\u7684\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u7684\u3002\u5373\u5728\u7c7b\u5185\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u58f0\u660e\u5e76\u975e\u5b9a\u4e49\uff0c \u53ea\u6709\u5728\u7c7b\u5916\u5b9a\u4e49\u6216\u8005\u521d\u59cb\u5316\u540e\uff0c\u624d\u80fd\u8bbf\u95ee\u8be5\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002 \u6240\u4ee5static \u6210\u5458\u53d8\u91cf\u4e0d\u968f\u5bf9\u8c61\u7684\u521b\u5efa\u800c\u5206\u914d\u5185\u5b58\uff0c\u4e5f\u4e0d\u968f\u5bf9\u8c61\u7684\u9500\u6bc1\u800c\u91ca\u653e\u5185\u5b58\u3002\u800c\u666e\u901a\u6210\u5458\u53d8\u91cf\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\u5206\u914d\u5185\u5b58\uff0c\u5728\u5bf9\u8c61\u9500\u6bc1\u65f6\u91ca\u653e\u5185\u5b58\u3002 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e0d\u5728\u7c7b\u5185\u521d\u59cb\u5316\u9759\u6001\u6210\u5458\uff0c\u800c\u662f\u5728\u7c7b\u5916\u5bf9\u5176\u521d\u59cb\u5316\uff0c eg: \u7c7b\u5185\u58f0\u660e\u4e3a static vector< int > elems; \u7c7b\u5916\u521d\u59cb\u5316\u4e3a vector< int > class_name::elems; \u8fd9\u91cc\u53ef\u4ee5\u8d4b\u521d\u503c\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u8d4b\u3002 \u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u4e3a\u9759\u6001\u6210\u5458\u53d8\u91cf\u63d0\u4f9b\u7c7b\u5185const\u521d\u59cb\u503c\uff0c\u4f46\u8981\u6c42\u9759\u6001\u6210\u5458\u5fc5\u987b\u662f\u5b57\u9762\u503c\u5e38\u91cf\u7c7b\u578b\u7684constexpr\uff0c\u521d\u59cb\u503c\u4e5f\u5fc5\u987b\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002 eg. static contestexpr int period = 20; static const int _buf_size =1024; \u5373\u4f7f\u4e00\u4e2astatic member data\u5728\u7c7b\u5185\u88ab\u521d\u59cb\u5316\u540e\uff0c\u4e5f\u5e94\u5728\u7c7b\u7684\u5916\u90e8\u5b9a\u4e49\u4e00\u4e0b\u8be5\u6210\u5458\u3002 \u503c\u521d\u59cb\u5316\u4e0e\u9ed8\u8ba4\u521d\u59cb\u5316 \u2003\u503c\u521d\u59cb\u5316\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u7528\u6570\u503c\u521d\u59cb\u5316\u53d8\u91cf\u3002 \u2003\u9ed8\u8ba4\u521d\u59cb\u5316\uff1a\u5982\u679c\u5b9a\u4e49\u53d8\u91cf\u65f6\u6ca1\u6709\u6307\u5b9a\u521d\u503c\uff0c\u5219\u53d8\u91cf\u88ab\u9ed8\u8ba4\u521d\u59cb\u5316\u3002\u5176\u521d\u59cb\u503c\u548c\u53d8\u91cf\u7684\u7c7b\u578b\u4ee5\u53ca\u53d8\u91cf\u5b9a\u4e49\u7684\u4f4d\u7f6e\u76f8\u5173\u3002 \u9ed8\u8ba4\u521d\u59cb\u5316\u7c7b\u5bf9\u8c61\u548c\u9ed8\u8ba4\u521d\u59cb\u5316\u5185\u7f6e\u7c7b\u578b\u53d8\u91cf\u6709\u6240\u4e0d\u540c \u3002 \u2003\u5bf9\u4e8e\u9ed8\u8ba4\u521d\u59cb\u5316\u5185\u7f6e\u7c7b\u578b\u53d8\u91cf\u6765\u8bf4\uff1a\u5b9a\u4e49\u5728\u51fd\u6570\u4f53\u4e4b\u5916\u7684\u53d8\u91cf\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u4e00\u822c\u5b58\u50a8\u5728\u5168\u5c40\u533a\uff0c\u5b58\u50a8\u5728\u5168\u5c40\u533a\u7684\u53d8\u91cf\u4e00\u822c\u4f1a\u6267\u884c\u503c\u521d\u59cb\u5316\u3002\u6b64\u65f6\uff0c\u5176\u521d\u59cb\u503c\u548c\u53d8\u91cf\u7684\u7c7b\u578b\u6709\u5173\u3002\u5bf9\u4e8eint\u7c7b\u578b\u5176\u521d\u59cb\u503c\u4e3a0\uff0c\u5bf9\u4e8echar\u7c7b\u578b\u5176\u9ed8\u8ba4\u521d\u59cb\u503c\u4e3a''\u3002 \u2003\u5b9a\u4e49\u5728\u51fd\u6570\u4f53\u5185\u90e8\u7684\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5176\u5b58\u50a8\u5728\u6808\u533a\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u521d\u503c\uff0c\u90a3\u4e48\u8be5\u5c40\u90e8\u53d8\u91cf\u5c06\u4e0d\u4f1a\u88ab\u521d\u59cb\u5316\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u662f\u4e2a\u968f\u673a\u503c\u3002\u6b64\u65f6\uff0c\u5982\u679c\u4e0d\u7ed9\u8fd9\u4e2a\u5c40\u90e8\u53d8\u91cf\u8d4b\u503c\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u4f7f\u7528\u8be5\u5c40\u90e8\u53d8\u91cf\uff0c\u5426\u5219\u5c31\u4f1a\u51fa\u9519\uff0c\u6ce8\u610f\u8fd9\u79cd\u60c5\u51b5\u662f\u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0c\u65e2\u6ca1\u6709\u4f7f\u7528\u9ed8\u8ba4\u521d\u59cb\u5316\u4e5f\u6ca1\u6709\u4f7f\u7528\u503c\u521d\u59cb\u5316\uff0c\u6ca1\u6709\u521d\u59cb\u5316\u7684\u503c\u662f\u4e0d\u80fd\u4f7f\u7528\u7684. Uniform Initialization \u2003Since C++ 11, for any initialization, you can use one common syntax, that is brace, \"{}\". int va[] {1, 2, 3}; vector<int> vec {1, 2, 3}; complex<double> c{4.0, 2.0}; \u2003 \u7f16\u8bd1\u5668\u770b\u5230\"{}\"\u4f1a\u5c06\u5176\u89c6\u4e3ainitializer_list , \u5176\u53c8\u5173\u8054\u4e00\u4e2aarray (intializer_list\u5185\u90e8\u6709\u4e00\u4e2a\u6307\u5411array\u7684\u6307\u9488\uff0c\u62f7\u8d1d\u4e00\u4e2ainitializer_list\u5c5e\u4e8e\u6d45\u62f7\u8d1d\uff0c\u9020\u6210\u4e24\u4e2a\u5bf9\u8c61\u4e2d\u7684\u6307\u9488\u6307\u5411\u540c\u4e00\u4e2aarray)\u3002\u8c03\u7528\u6784\u9020\u51fd\u6570\u65f6: \u82e5\u5b58\u5728\u4e00\u4e2a\u7248\u672c\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u901a\u8fc7{}\u521d\u59cb\u5316\u65f6\uff0c\u5173\u8054\u7684array\u5185\u7684\u5143\u7d20\u53ef\u88ab\u7f16\u8bd1\u5668\u5206\u89e3\u9010\u4e00\u4f20\u9012\u7ed9\u51fd\u6570\uff1b \u901a\u8fc7()\u521d\u59cb\u5316\u65f6\uff0c\u63d0\u4f9b\u548c\u6784\u9020\u51fd\u6570\u76f8\u540c\u6570\u91cf\u3001\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u4e5f\u53ef\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u82e5\u5b58\u5728\u4e00\u4e2a\u7248\u672c\u63a5\u53d7initializaer_list \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u5219\u901a\u8fc7{}\u521d\u59cb\u5316\u65f6\uff0c\u4f1a\u4f18\u5148\u4f7f\u7528\u8be5\u7248\u672c\u3002 class P{ public: P(int a, b){cout<<\"P(int,int), a=\"<<a<<\" , b=\"<<b;} P(initializer_list<int> initlist){ cout <<\"P{initializer_list<int>}, vlaues=\"; for(auto& v: initlist){ cout<<v<<\" \"; } } } //\u6d4b\u8bd5 P p(1, 2); // \u8f93\u51faP(int, int), a=1, b=2 P p2{1, 2}; // \u8f93\u51faP{initializer_list<int>}, values=1, 2 P p3{1, 2, 3}; // \u8f93\u51faP{initializer_list<int>}, values=1, 2, 3 P p4={1, 2, 2}; // \u8f93\u51faP{initializer_list<int>}, values=1, 2, 2","title":"About Initialization"},{"location":"CPP/initialization/#about-initialization","text":"","title":"About Initialization"},{"location":"CPP/initialization/#_1","text":"\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u53ea\u662f\u5c06\u53d8\u91cf\u540d\u6807\u8bc6\u7b26\u7684\u6709\u5173\u4fe1\u606f\u544a\u8bc9\u7f16\u8bd1\u5668\uff0c\u4f7f\u7f16\u8bd1\u5668\u201c\u8ba4\u8bc6\u201d\u8be5\u6807\u8bc6\u7b26\uff0c\u4f46\u58f0\u660e\u4e0d\u4e00\u5b9a\u5f15\u8d77\u5185\u5b58\u7684\u5206\u914d\u3002","title":"\u58f0\u660e"},{"location":"CPP/initialization/#_2","text":"\u5b9a\u4e49\u53d8\u91cf\u610f\u5473\u7740\u7ed9\u53d8\u91cf\u5206\u914d\u5185\u5b58\u7a7a\u95f4\uff0c\u7528\u4e8e\u5b58\u653e\u5bf9\u5e94\u7c7b\u578b\u7684\u6570\u636e\uff0c\u53d8\u91cf\u540d\u5c31\u662f\u5bf9\u76f8\u5e94\u7684\u5185\u5b58\u5355\u5143\u7684\u547d\u540d\u3002\u800c\u5728C++\u7a0b\u5e8f\u4e2d\uff0c\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u53d8\u91cf\u58f0\u660e\u4e5f\u5c31\u662f\u53d8\u91cf\u5b9a\u4e49\uff0c\u58f0\u660e\u53d8\u91cf\u7684\u540c\u65f6\u4e5f\u5c31\u5b8c\u6210\u4e86\u53d8\u91cf\u7684\u5b9a\u4e49\uff0c\u4e0d\u8fc7\u4e5f\u6709\u4f8b\u5916\u3002\u5982\u679c\u60f3\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u800c\u975e\u5b9a\u4e49\u5b83\uff0c\u5219\u53ef\u52a0\u4e0aextern\u5173\u952e\u5b57\uff0c\u800c\u4e14\u4e0d\u7528\u663e\u793a\u521d\u59cb\u5316\u53d8\u91cf\u3002 \u4efb\u4f55\u5305\u542b\u4e86\u663e\u793a\u521d\u59cb\u5316\u7684\u58f0\u660e\u5373\u6210\u4e3a\u5b9a\u4e49, \u5373extern\u8bed\u53e5\u5982\u679c\u5305\u542b\u521d\u59cb\u503c\u5c31\u4e0d\u518d\u662f\u58f0\u660e\uff0c\u800c\u53d8\u6210\u5b9a\u4e49\u4e86\u3002 extern int a; //\u4ec5\u4ec5\u58f0\u660e\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf \uff0c\u6ca1\u6709\u5b9a\u4e49\uff0c int a; //\u58f0\u660e\u5e76\u5b9a\u4e49\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf extern int a = 0;//\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\u5e76\u521d\u59cb\u5316\u521d\u503c int a = 0; //\u5b9a\u4e49\u5168\u5c40\u53d8\u91cf\u5e76\u521d\u59cb\u5316\u521d\u503c \u53d8\u91cf\u7684\u5b9a\u4e49\u5fc5\u987b\u51fa\u73b0\u4e14\u53ea\u80fd\u51fa\u73b0\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u800c\u5176\u4ed6\u7528\u5230\u8be5\u53d8\u91cf\u7684\u6587\u4ef6\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u8bf4\u660e\uff0c\u4f46\u7edd\u4e0d\u80fd\u91cd\u590d\u5b9a\u4e49\u3002\u5f53\u4f60\u8981\u5f15\u7528\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u65f6\uff0c\u4f60\u5c31\u8981\u58f0\u660eextern int a;\u8fd9\u4e2a\u65f6\u5019extern\u4e0d\u80fd\u7701\uff0c\u5426\u5219\u5c31\u6210\u5b9a\u4e49\u4e86\u3002\u4f8b\u5982\u5982\u679c\u60f3\u8981\u5728\u591a\u4e2a\u6587\u4ef6\u4e4b\u95f4\u5171\u4eabconst\u5bf9\u8c61\u65f6\uff0c\u5fc5\u987b\u5728\u53d8\u91cf\u7684\u5b9a\u4e49\u4e4b\u524d\u6dfb\u52a0extern\u3002 header.h extern const int a =1; main.cpp main(){ extern const int a; cout << a; //\u8f93\u51fa1 } \u4e0d\u80fd\u5728\u4efb\u4f55\u51fd\u6570\u4f53\u5185\u90e8(\u5305\u62ecmain\u51fd\u6570)\u521d\u59cb\u5316\u4e00\u4e2a\u7531extern\u5173\u952e\u5b57\u6807\u8bb0\u7684\u53d8\u91cf\u3002","title":"\u5b9a\u4e49"},{"location":"CPP/initialization/#_3","text":"\u521d\u59cb\u5316\u4e0d\u662f\u8d4b\u503c\uff0c\u5176\u542b\u4e49\u662f\u521b\u5efa\u4e00\u4e2a\u53d8\u91cf\u65f6\u8d4b\u4e88\u5176\u4e00\u4e2a\u521d\u59cb\u503c\uff0c\u800c\u8d4b\u503c\u7684\u542b\u4e49\u662f\u628a\u5bf9\u8c61\u5f53\u524d\u503c\u64e6\u9664\uff0c\u800c\u4ee5\u4e00\u4e2a\u65b0\u503c\u6765\u66ff\u4ee3\u3002 int a=1; //\u521d\u59cb\u5316 a=2; //\u8d4b\u503c \u5217\u8868\u521d\u59cb\u5316\uff0c \u8981\u6c42\u63d0\u4f9b\u7684\u521d\u59cb\u503c\u4e0e\u8981\u521d\u59cb\u5316\u7684\u53d8\u91cf\u7c7b\u578b\u4e25\u683c\u7edf\u4e00\uff0c\u5728 \u4f7f\u7528\u5217\u8868\u521d\u59cb\u5316\u65f6\uff0c\u82e5\u521d\u59cb\u503c\u5b58\u5728\u4e22\u5931\u4fe1\u606f\u7684\u98ce\u9669(\u5982\u7528long\u3001double\u7684\u503c\u53bb\u521d\u59cb\u5316int\u53d8\u91cf\uff0c\u6709\u53ef\u80fd\u4e22\u5931\u6570\u636e\u6216\u8005\u6ea2\u51fa)\uff0c\u5219\u7f16\u8bd1\u5668\u5c06\u62a5\u9519\u3002 int a ={0}; int b{0}; \u521d\u59cb\u5316\u4e0e\u5b9a\u4e49\uff0c\u5b9a\u4e49\u53d1\u751f\u65f6\u4e0d\u4e00\u5b9a\u4f1a\u8fdb\u884c\u521d\u59cb\u5316\uff1a \u5f53\u53d8\u91cf\u4e3a\u81ea\u5b9a\u4e49\u7c7b\u7c7b\u578b: \u2003\u8c03\u7528\u81ea\u8eab\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u5f53\u53d8\u91cf\u4e3a\u5185\u7f6e\u7c7b\u578b\u65f6: \u2003\u8be5\u53d8\u91cf\u5b9a\u4e49\u5728\u51fd\u6570\u4f53\u5916\u65f6\uff0c\u5c06\u88ab\u521d\u59cb\u5316\u4e3a0\u3002 \u2003\u8be5\u53d8\u91cf\u5b9a\u4e49\u5728\u51fd\u6570\u4f53\u5185\u65f6\uff0c\u5c06\u4e0d\u4f1a\u8fdb\u884c\u521d\u59cb\u5316, \u4e00\u4e2a\u672a\u88ab\u521d\u59cb\u5316\u7684\u5185\u7f6e\u7c7b\u578b\u53d8\u91cf\u7684\u503c\u662f\u672a\u5b9a\u4e49\u7684\u3002 \u7c7b\u6210\u5458\u53d8\u91cf\u521d\u59cb\u5316\uff1a\u521d\u59cb\u5316\u5217\u8868\u548c\u8d4b\u503c\u521d\u59cb\u5316 \u521d\u59cb\u5316\u5217\u8868: \u683c\u5f0f: Base(int a1, int a2, A a): data1(a1), data2(a2), data3(a); \u2003\u5fc5\u987b\u7528\u521d\u59cb\u5316\u5217\u8868\u7684\u60c5\u51b5\uff1a \u20031\uff09\u5982\u679c\u6211\u4eec\u6709\u4e00\u4e2a\u7c7b\u6210\u5458\uff0c\u5b83\u672c\u8eab\u662f\u4e00\u4e2a\u7c7b\u6216\u8005\u662f\u4e00\u4e2a\u7ed3\u6784\uff0c\u800c\u4e14\u8fd9\u4e2a\u6210\u5458\u5b83\u53ea\u6709\u4e00\u4e2a\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff0c\u6ca1\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002\u8fd9\u65f6\u8981\u5bf9\u8fd9\u4e2a\u7c7b\u6210\u5458\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5c31\u5fc5\u987b\u8c03\u7528\u8fd9\u4e2a\u7c7b\u6210\u5458\u7684\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\u3002 \u20032\uff09\u5f53\u7c7b\u6210\u5458\u4e2d\u542b\u6709\u4e00\u4e2aconst\u5bf9\u8c61\u65f6\uff0c\u6216\u8005\u662f\u4e00\u4e2a\u5f15\u7528\u65f6\uff0c\u4ed6\u4eec\u4e5f\u5fc5\u987b\u8981\u901a\u8fc7\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u56e0\u4e3a\u8fd9\u4e24\u79cd\u5bf9\u8c61\u8981\u5728\u58f0\u660e\u540e\u9a6c\u4e0a\u521d\u59cb\u5316\uff0c\u800c\u5728\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u505a\u7684\u662f\u5bf9\u4ed6\u4eec\u7684\u8d4b\u503c\uff0c\u8fd9\u6837\u662f\u4e0d\u88ab\u5141\u8bb8\u7684\u3002 \u20033\uff09 \u5b50\u7c7b\u521d\u59cb\u5316\u7236\u7c7b\u7684\u79c1\u6709\u6210\u5458\uff0c\u9700\u8981\u5728(\u5e76\u4e14\u4e5f\u53ea\u80fd\u5728)\u53c2\u6570\u521d\u59cb\u5316\u5217\u8868\u4e2d\u663e\u793a\u8c03\u7528\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570 \u3002 \u20034)\u6210\u5458\u53d8\u91cf\u7684\u521d\u59cb\u5316\u987a\u5e8f\u4e0e\u58f0\u660e\u7684\u987a\u5e8f\u76f8\u5173\uff0c\u4e0e\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u65e0\u5173\uff1b\u521d\u59cb\u5316\u5217\u8868\u5148\u4e8e\u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u4f53\u6267\u884c\u3002 \u7c7b\u5185\u521d\u59cb\u503c\uff1a\u63d0\u4f9b\u4e00\u4e2a \u7c7b\u5185\u521d\u59cb\u503c \u65f6\uff0c\u5fc5\u987b\u4ee5\u7b26\u5408=\u6216\u8005\u82b1\u62ec\u53f7\u8868\u793a\uff0c\u4e0d\u80fd\u7528()\u62ec\u53f7\uff1b eg: vector f{type_item}; //\u6b63\u786e vector f(n, type_item); //\u610f\u56fe\u521d\u59cb\u5316\u5305\u542bn\u4e2atype_item\u7684vector\uff0c\u9519\u8bef\u539f\u56e0\u662f\u5bb9\u6613\u548c\u51fd\u6570\u58f0\u660e\u51b2\u7a81\uff1b\u8be5\u53e5\u5728\u7c7b\u5916\u4f7f\u7528\u65f6\u662f\u53ef\u4ee5\u7684\u3002 static member data initialization \u2003\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e0d\u5c5e\u4e8e\u7c7b\u7684\u4efb\u4f55\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6240\u4ee5\u5b83\u4eec\u5e76\u4e0d\u662f\u5728\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\u65f6\u88ab\u5b9a\u4e49\u7684\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u4e0d\u662f\u7531\u7c7b\u7684\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u7684\u3002\u5373\u5728\u7c7b\u5185\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\u58f0\u660e\u5e76\u975e\u5b9a\u4e49\uff0c \u53ea\u6709\u5728\u7c7b\u5916\u5b9a\u4e49\u6216\u8005\u521d\u59cb\u5316\u540e\uff0c\u624d\u80fd\u8bbf\u95ee\u8be5\u9759\u6001\u6210\u5458\u53d8\u91cf\u3002 \u6240\u4ee5static \u6210\u5458\u53d8\u91cf\u4e0d\u968f\u5bf9\u8c61\u7684\u521b\u5efa\u800c\u5206\u914d\u5185\u5b58\uff0c\u4e5f\u4e0d\u968f\u5bf9\u8c61\u7684\u9500\u6bc1\u800c\u91ca\u653e\u5185\u5b58\u3002\u800c\u666e\u901a\u6210\u5458\u53d8\u91cf\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\u5206\u914d\u5185\u5b58\uff0c\u5728\u5bf9\u8c61\u9500\u6bc1\u65f6\u91ca\u653e\u5185\u5b58\u3002 \u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4e0d\u5728\u7c7b\u5185\u521d\u59cb\u5316\u9759\u6001\u6210\u5458\uff0c\u800c\u662f\u5728\u7c7b\u5916\u5bf9\u5176\u521d\u59cb\u5316\uff0c eg: \u7c7b\u5185\u58f0\u660e\u4e3a static vector< int > elems; \u7c7b\u5916\u521d\u59cb\u5316\u4e3a vector< int > class_name::elems; \u8fd9\u91cc\u53ef\u4ee5\u8d4b\u521d\u503c\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u8d4b\u3002 \u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u4e3a\u9759\u6001\u6210\u5458\u53d8\u91cf\u63d0\u4f9b\u7c7b\u5185const\u521d\u59cb\u503c\uff0c\u4f46\u8981\u6c42\u9759\u6001\u6210\u5458\u5fc5\u987b\u662f\u5b57\u9762\u503c\u5e38\u91cf\u7c7b\u578b\u7684constexpr\uff0c\u521d\u59cb\u503c\u4e5f\u5fc5\u987b\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002 eg. static contestexpr int period = 20; static const int _buf_size =1024; \u5373\u4f7f\u4e00\u4e2astatic member data\u5728\u7c7b\u5185\u88ab\u521d\u59cb\u5316\u540e\uff0c\u4e5f\u5e94\u5728\u7c7b\u7684\u5916\u90e8\u5b9a\u4e49\u4e00\u4e0b\u8be5\u6210\u5458\u3002 \u503c\u521d\u59cb\u5316\u4e0e\u9ed8\u8ba4\u521d\u59cb\u5316 \u2003\u503c\u521d\u59cb\u5316\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u7528\u6570\u503c\u521d\u59cb\u5316\u53d8\u91cf\u3002 \u2003\u9ed8\u8ba4\u521d\u59cb\u5316\uff1a\u5982\u679c\u5b9a\u4e49\u53d8\u91cf\u65f6\u6ca1\u6709\u6307\u5b9a\u521d\u503c\uff0c\u5219\u53d8\u91cf\u88ab\u9ed8\u8ba4\u521d\u59cb\u5316\u3002\u5176\u521d\u59cb\u503c\u548c\u53d8\u91cf\u7684\u7c7b\u578b\u4ee5\u53ca\u53d8\u91cf\u5b9a\u4e49\u7684\u4f4d\u7f6e\u76f8\u5173\u3002 \u9ed8\u8ba4\u521d\u59cb\u5316\u7c7b\u5bf9\u8c61\u548c\u9ed8\u8ba4\u521d\u59cb\u5316\u5185\u7f6e\u7c7b\u578b\u53d8\u91cf\u6709\u6240\u4e0d\u540c \u3002 \u2003\u5bf9\u4e8e\u9ed8\u8ba4\u521d\u59cb\u5316\u5185\u7f6e\u7c7b\u578b\u53d8\u91cf\u6765\u8bf4\uff1a\u5b9a\u4e49\u5728\u51fd\u6570\u4f53\u4e4b\u5916\u7684\u53d8\u91cf\u662f\u5168\u5c40\u53d8\u91cf\uff0c\u4e00\u822c\u5b58\u50a8\u5728\u5168\u5c40\u533a\uff0c\u5b58\u50a8\u5728\u5168\u5c40\u533a\u7684\u53d8\u91cf\u4e00\u822c\u4f1a\u6267\u884c\u503c\u521d\u59cb\u5316\u3002\u6b64\u65f6\uff0c\u5176\u521d\u59cb\u503c\u548c\u53d8\u91cf\u7684\u7c7b\u578b\u6709\u5173\u3002\u5bf9\u4e8eint\u7c7b\u578b\u5176\u521d\u59cb\u503c\u4e3a0\uff0c\u5bf9\u4e8echar\u7c7b\u578b\u5176\u9ed8\u8ba4\u521d\u59cb\u503c\u4e3a''\u3002 \u2003\u5b9a\u4e49\u5728\u51fd\u6570\u4f53\u5185\u90e8\u7684\u662f\u5c40\u90e8\u53d8\u91cf\uff0c\u5176\u5b58\u50a8\u5728\u6808\u533a\u4e2d\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u521d\u503c\uff0c\u90a3\u4e48\u8be5\u5c40\u90e8\u53d8\u91cf\u5c06\u4e0d\u4f1a\u88ab\u521d\u59cb\u5316\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u4e2a\u5c40\u90e8\u53d8\u91cf\u7684\u503c\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u662f\u4e2a\u968f\u673a\u503c\u3002\u6b64\u65f6\uff0c\u5982\u679c\u4e0d\u7ed9\u8fd9\u4e2a\u5c40\u90e8\u53d8\u91cf\u8d4b\u503c\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u4f7f\u7528\u8be5\u5c40\u90e8\u53d8\u91cf\uff0c\u5426\u5219\u5c31\u4f1a\u51fa\u9519\uff0c\u6ce8\u610f\u8fd9\u79cd\u60c5\u51b5\u662f\u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0c\u65e2\u6ca1\u6709\u4f7f\u7528\u9ed8\u8ba4\u521d\u59cb\u5316\u4e5f\u6ca1\u6709\u4f7f\u7528\u503c\u521d\u59cb\u5316\uff0c\u6ca1\u6709\u521d\u59cb\u5316\u7684\u503c\u662f\u4e0d\u80fd\u4f7f\u7528\u7684.","title":"\u521d\u59cb\u5316"},{"location":"CPP/initialization/#uniform-initialization","text":"Since C++ 11, for any initialization, you can use one common syntax, that is brace, \"{}\". int va[] {1, 2, 3}; vector<int> vec {1, 2, 3}; complex<double> c{4.0, 2.0}; \u2003 \u7f16\u8bd1\u5668\u770b\u5230\"{}\"\u4f1a\u5c06\u5176\u89c6\u4e3ainitializer_list , \u5176\u53c8\u5173\u8054\u4e00\u4e2aarray (intializer_list\u5185\u90e8\u6709\u4e00\u4e2a\u6307\u5411array\u7684\u6307\u9488\uff0c\u62f7\u8d1d\u4e00\u4e2ainitializer_list\u5c5e\u4e8e\u6d45\u62f7\u8d1d\uff0c\u9020\u6210\u4e24\u4e2a\u5bf9\u8c61\u4e2d\u7684\u6307\u9488\u6307\u5411\u540c\u4e00\u4e2aarray)\u3002\u8c03\u7528\u6784\u9020\u51fd\u6570\u65f6: \u82e5\u5b58\u5728\u4e00\u4e2a\u7248\u672c\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u901a\u8fc7{}\u521d\u59cb\u5316\u65f6\uff0c\u5173\u8054\u7684array\u5185\u7684\u5143\u7d20\u53ef\u88ab\u7f16\u8bd1\u5668\u5206\u89e3\u9010\u4e00\u4f20\u9012\u7ed9\u51fd\u6570\uff1b \u901a\u8fc7()\u521d\u59cb\u5316\u65f6\uff0c\u63d0\u4f9b\u548c\u6784\u9020\u51fd\u6570\u76f8\u540c\u6570\u91cf\u3001\u7c7b\u578b\u7684\u53c2\u6570\uff0c\u4e5f\u53ef\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u82e5\u5b58\u5728\u4e00\u4e2a\u7248\u672c\u63a5\u53d7initializaer_list \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u5219\u901a\u8fc7{}\u521d\u59cb\u5316\u65f6\uff0c\u4f1a\u4f18\u5148\u4f7f\u7528\u8be5\u7248\u672c\u3002 class P{ public: P(int a, b){cout<<\"P(int,int), a=\"<<a<<\" , b=\"<<b;} P(initializer_list<int> initlist){ cout <<\"P{initializer_list<int>}, vlaues=\"; for(auto& v: initlist){ cout<<v<<\" \"; } } } //\u6d4b\u8bd5 P p(1, 2); // \u8f93\u51faP(int, int), a=1, b=2 P p2{1, 2}; // \u8f93\u51faP{initializer_list<int>}, values=1, 2 P p3{1, 2, 3}; // \u8f93\u51faP{initializer_list<int>}, values=1, 2, 3 P p4={1, 2, 2}; // \u8f93\u51faP{initializer_list<int>}, values=1, 2, 2","title":"Uniform Initialization"},{"location":"CPP/inline/","text":"About Inline inline : \u53ea\u6709\u4e0e\u51fd\u6570\u7684\u5b9a\u4e49\u5728\u4e00\u8d77\u624d\u8d77\u4f5c\u7528\u3002 \u5b9a\u4e49\u5728class\u4e2d\u7684\u6210\u5458\u51fd\u6570\u81ea\u52a8\u89c6\u4e3ainline\u51fd\u6570 inline\u51fd\u6570\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5bf9\u7f16\u8bd1\u5668\u7684\u5efa\u8bae\uff0c\u6240\u4ee5\u6700\u540e\u80fd\u5426\u771f\u6b63\u5185\u8054\uff0c\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\uff1a\u5b83\u5982\u679c\u8ba4\u4e3a\u51fd\u6570\u4e0d\u590d\u6742\uff0c\u80fd\u5728\u8c03\u7528\u70b9\u5c55\u5f00\uff0c\u5c31\u4f1a\u771f\u6b63\u5185\u8054\uff0c\u5e76\u4e0d\u662f\u8bf4\u58f0\u660e\u4e86\u5185\u8054\u5c31\u4f1a\u5185\u8054\uff0c\u58f0\u660e\u5185\u8054\u53ea\u662f\u4e00\u4e2a\u5efa\u8bae\u800c\u5df2\u3002 \u5185\u8054\u662f\u4ee5\u4ee3\u7801\u81a8\u80c0(\u590d\u5236)\u4e3a\u4ee3\u4ef7\uff0c\u4ec5\u4ec5\u7701\u53bb\u4e86\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\uff0c\u4ece\u800c\u63d0\u9ad8\u51fd\u6570\u7684\u6267\u884c\u6548\u7387\u3002\u5982\u679c\u6267\u884c\u51fd\u6570\u4f53\u5185\u4ee3\u7801\u7684\u65f6\u95f4\u76f8\u6bd4\u4e8e\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\u8f83\u5927\uff0c\u90a3\u4e48\u6548\u7387\u7684\u6536\u83b7\u4f1a\u66f4\u5c11\uff01\u53e6\u4e00\u65b9\u9762\uff0c\u6bcf\u4e00\u5904\u5185\u8054\u51fd\u6570\u7684\u8c03\u7528\u90fd\u8981\u590d\u5236\u4ee3\u7801\uff0c\u5c06\u4f7f\u7a0b\u5e8f\u7684\u603b\u4ee3\u7801\u91cf\u589e\u5927\uff0c\u6d88\u8017\u66f4\u591a\u7684\u5185\u5b58\u7a7a\u95f4\u3002 \u4ee5\u4e0b\u60c5\u51b5\u4e0d\u5b9c\u4f7f\u7528\u5185\u8054\uff1a \u5982\u679c\u51fd\u6570\u4f53\u5185\u7684\u4ee3\u7801\u6bd4\u8f83\u957f\uff0c\u4f7f\u7528\u5185\u8054\u5c06\u5bfc\u81f4\u5185\u5b58\u6d88\u8017\u4ee3\u4ef7\u8f83\u9ad8\u3002 \u5982\u679c\u51fd\u6570\u4f53\u5185\u51fa\u73b0\u5faa\u73af\uff0c\u90a3\u4e48\u6267\u884c\u51fd\u6570\u4f53\u5185\u4ee3\u7801\u7684\u65f6\u95f4\u8981\u6bd4\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\u5927\u3002 with virtual function \u865a\u51fd\u6570\u53ef\u4ee5\u662f\u5185\u8054\u51fd\u6570\uff0c\u5185\u8054\u662f\u53ef\u4ee5\u4fee\u9970\u865a\u51fd\u6570\u7684\uff0c\u4f46\u662f\u5f53\u865a\u51fd\u6570\u8868\u73b0\u591a\u6001\u6027\u7684\u65f6\u5019\u4e0d\u80fd\u5185\u8054\u3002\u5185\u8054\u662f\u5728\u7f16\u8bd1\u671f\u5efa\u8bae\u7f16\u8bd1\u5668\u5185\u8054\uff0c\u800c\u865a\u51fd\u6570\u7684\u591a\u6001\u6027\u5728\u8fd0\u884c\u671f\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u77e5\u9053\u8fd0\u884c\u671f\u8c03\u7528\u54ea\u4e2a\u4ee3\u7801\uff0c\u56e0\u6b64\u865a\u51fd\u6570\u8868\u73b0\u4e3a\u591a\u6001\u6027\u65f6\uff08\u8fd0\u884c\u671f\uff09\u4e0d\u53ef\u4ee5\u5185\u8054\u3002 inline virtual \u552f\u4e00\u53ef\u4ee5\u5185\u8054\u7684\u65f6\u5019\u662f\uff1a\u7f16\u8bd1\u5668\u77e5\u9053\u6240\u8c03\u7528\u7684\u5bf9\u8c61\u662f\u54ea\u4e2a\u7c7b\u3002","title":"About Inline"},{"location":"CPP/inline/#about-inline","text":"","title":"About Inline"},{"location":"CPP/inline/#inline","text":"\u53ea\u6709\u4e0e\u51fd\u6570\u7684\u5b9a\u4e49\u5728\u4e00\u8d77\u624d\u8d77\u4f5c\u7528\u3002 \u5b9a\u4e49\u5728class\u4e2d\u7684\u6210\u5458\u51fd\u6570\u81ea\u52a8\u89c6\u4e3ainline\u51fd\u6570 inline\u51fd\u6570\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5bf9\u7f16\u8bd1\u5668\u7684\u5efa\u8bae\uff0c\u6240\u4ee5\u6700\u540e\u80fd\u5426\u771f\u6b63\u5185\u8054\uff0c\u53d6\u51b3\u4e8e\u7f16\u8bd1\u5668\uff1a\u5b83\u5982\u679c\u8ba4\u4e3a\u51fd\u6570\u4e0d\u590d\u6742\uff0c\u80fd\u5728\u8c03\u7528\u70b9\u5c55\u5f00\uff0c\u5c31\u4f1a\u771f\u6b63\u5185\u8054\uff0c\u5e76\u4e0d\u662f\u8bf4\u58f0\u660e\u4e86\u5185\u8054\u5c31\u4f1a\u5185\u8054\uff0c\u58f0\u660e\u5185\u8054\u53ea\u662f\u4e00\u4e2a\u5efa\u8bae\u800c\u5df2\u3002 \u5185\u8054\u662f\u4ee5\u4ee3\u7801\u81a8\u80c0(\u590d\u5236)\u4e3a\u4ee3\u4ef7\uff0c\u4ec5\u4ec5\u7701\u53bb\u4e86\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\uff0c\u4ece\u800c\u63d0\u9ad8\u51fd\u6570\u7684\u6267\u884c\u6548\u7387\u3002\u5982\u679c\u6267\u884c\u51fd\u6570\u4f53\u5185\u4ee3\u7801\u7684\u65f6\u95f4\u76f8\u6bd4\u4e8e\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\u8f83\u5927\uff0c\u90a3\u4e48\u6548\u7387\u7684\u6536\u83b7\u4f1a\u66f4\u5c11\uff01\u53e6\u4e00\u65b9\u9762\uff0c\u6bcf\u4e00\u5904\u5185\u8054\u51fd\u6570\u7684\u8c03\u7528\u90fd\u8981\u590d\u5236\u4ee3\u7801\uff0c\u5c06\u4f7f\u7a0b\u5e8f\u7684\u603b\u4ee3\u7801\u91cf\u589e\u5927\uff0c\u6d88\u8017\u66f4\u591a\u7684\u5185\u5b58\u7a7a\u95f4\u3002","title":"inline:"},{"location":"CPP/inline/#_1","text":"\u5982\u679c\u51fd\u6570\u4f53\u5185\u7684\u4ee3\u7801\u6bd4\u8f83\u957f\uff0c\u4f7f\u7528\u5185\u8054\u5c06\u5bfc\u81f4\u5185\u5b58\u6d88\u8017\u4ee3\u4ef7\u8f83\u9ad8\u3002 \u5982\u679c\u51fd\u6570\u4f53\u5185\u51fa\u73b0\u5faa\u73af\uff0c\u90a3\u4e48\u6267\u884c\u51fd\u6570\u4f53\u5185\u4ee3\u7801\u7684\u65f6\u95f4\u8981\u6bd4\u51fd\u6570\u8c03\u7528\u7684\u5f00\u9500\u5927\u3002","title":"\u4ee5\u4e0b\u60c5\u51b5\u4e0d\u5b9c\u4f7f\u7528\u5185\u8054\uff1a"},{"location":"CPP/inline/#with-virtual-function","text":"\u865a\u51fd\u6570\u53ef\u4ee5\u662f\u5185\u8054\u51fd\u6570\uff0c\u5185\u8054\u662f\u53ef\u4ee5\u4fee\u9970\u865a\u51fd\u6570\u7684\uff0c\u4f46\u662f\u5f53\u865a\u51fd\u6570\u8868\u73b0\u591a\u6001\u6027\u7684\u65f6\u5019\u4e0d\u80fd\u5185\u8054\u3002\u5185\u8054\u662f\u5728\u7f16\u8bd1\u671f\u5efa\u8bae\u7f16\u8bd1\u5668\u5185\u8054\uff0c\u800c\u865a\u51fd\u6570\u7684\u591a\u6001\u6027\u5728\u8fd0\u884c\u671f\uff0c\u7f16\u8bd1\u5668\u65e0\u6cd5\u77e5\u9053\u8fd0\u884c\u671f\u8c03\u7528\u54ea\u4e2a\u4ee3\u7801\uff0c\u56e0\u6b64\u865a\u51fd\u6570\u8868\u73b0\u4e3a\u591a\u6001\u6027\u65f6\uff08\u8fd0\u884c\u671f\uff09\u4e0d\u53ef\u4ee5\u5185\u8054\u3002 inline virtual \u552f\u4e00\u53ef\u4ee5\u5185\u8054\u7684\u65f6\u5019\u662f\uff1a\u7f16\u8bd1\u5668\u77e5\u9053\u6240\u8c03\u7528\u7684\u5bf9\u8c61\u662f\u54ea\u4e2a\u7c7b\u3002","title":"with virtual function"},{"location":"CPP/iterator/","text":"About iterator \u8fed\u4ee3\u5668\u7c7b\u578b struct input_iterator_tag{}; \u53ea\u80fd\u5411\u524d\u79fb\u52a8\uff0c\u5982istream_iterator, \u652f\u6301++iter\u6216iter++, \u5bf9\u4e8e\u6240\u6307\u5bf9\u8c61\u53ea\u8bfb; struct output_iterator_tag{}; \u53ea\u80fd\u5411\u524d\u79fb\u52a8\uff0c\u5982ostream_iterator, \u652f\u6301++iter\u6216iter++, \u5bf9\u4e8e\u6240\u6307\u5bf9\u8c61\u53ea\u5199; struct forward_iterator_tag:: public input_iterator_tag{}; \u53ea\u80fd\u5411\u524d\u79fb\u52a8\uff0c\u4f46\u5bf9\u4e8e\u6240\u6307\u5bf9\u8c61\u540c\u65f6\u53ef\u8bfb\u53ef\u5199 struct bidirectional_iterator_tag:: public forward_iterator{}; \u53ef\u524d\u540e\u79fb\u52a8\uff0c \u5982map\u3001set\u3001multimap\u3001multiset\u7684\u8fed\u4ee3\u5668\u3002 struct random_access_iterator_tag:: public bidirectional_iterator_tag{}; \u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\uff0c\u53ef\u8fdb\u884c\u8fed\u4ee3\u5668\u7b97\u672f\u8fd0\u7b97, \u5bb9\u5668\u5143\u7d20\u5b58\u50a8\u5728\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\u5185, \u5982vector\u3001string\u3001deque\u3002 //\u8fed\u4ee3\u5668\u6307\u793a\u7684\u65b0\u4f4d\u7f6e\u4e0e\u539f\u6765\u76f8\u6bd4\u5411\u524d\uff08\u5411\u540e\uff09\u79fb\u52a8n\u4e2a\u5143\u7d20\uff0c\u7ed3\u679c\u8fed\u4ee3\u5668\u6216\u6307\u793a\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\u6216\u4e3a\u5c3e\u540e\u8fed\u4ee3\u5668\u3002 iter+n or iter-n iter+=n \u6216\u8005 iter-=n; //\u4e24\u4e2a\u8fed\u4ee3\u5668\u76f8\u51cf\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u53c2\u4e0e\u8fd0\u7b97\u7684\u4e24\u4e2a\u8fed\u4ee3\u5668\u5fc5\u987b\u6307\u5411\u540c\u4e00\u4e2a\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u6216\u4e3a\u5c3e\u540e\u8fed\u4ee3\u5668\uff0c //\u5176\u7c7b\u578b\u4e3adifference_type\u7684\u5e26\u7b26\u53f7\u6574\u578b\u6570\u3002 iter1-iter2 iter:\u89e3\u5f15\u7528\u8fed\u4ee3\u5668\uff0c\u8fd4\u56de\u5176\u6240\u6307\u5143\u7d20\u7684\u5f15\u7528\u3002 iter++: iter\u5411\u540e\u79fb\u52a8\u4e00\u4f4d\uff0c\u8fd4\u56de\u4e00\u4e2aiter\u79fb\u52a8\u524d\u7684\u4e34\u65f6\u5bf9\u8c61\uff0c\u4e00\u4e2a\u53f3\u503c ++iter: \u8fd4\u56de iter\u79fb\u52a8\u540e\u7684\u5f15\u7528, \u4e00\u4e2a\u5de6\u503c\uff0c++iter=&variable;//\u6b63\u786e\uff0c\u4f46\u5176\u4fee\u6539\u7684\u662fiter\u6307\u9488\u503c\uff0c\u800c\u975e\u5176\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u5bb9\u5668\u5185\u5143\u7d20\u6ca1\u6709\u6539\u53d8\u3002 iter++: \u7b49\u4ef7\u4e8e (iter++), \u662f\u4e00\u4e2a\u5de6\u503c ++iter: \u7b49\u4ef7\u4e8e *(++iter) iterator\uff1a\u4f46\u51e1\u4f7f\u7528\u4e86\u8fed\u4ee3\u5668\u7684\u5faa\u73af\u4f53\uff0c\u90fd\u4e0d\u8981\u5411\u8fed\u4ee3\u5668\u6240\u5c5e\u7684\u5bb9\u5668\u6dfb\u52a0\u6216\u8005\u51cf\u5c11\u5143\u7d20\uff0c\u5373\u4e0d\u8981\u6539\u53d8\u5176\u5bf9\u8c61\u5bb9\u91cf\u5927\u5c0f\u3002 /* \u5b9e\u8d28\u662f\u4e00\u4e2a int* const\u6307\u9488\uff0c\u8868\u793aiter\u4e0d\u80fd\u6307\u5411\u5176\u4ed6\u5bf9\u8c61\uff0c++iter\u4f1a\u62a5\u9519\uff0c\u4f46\u4f9d\u65e7\u6240\u6307\u5411\u5bf9\u8c61\u5185\u5bb9\u4f9d\u65e7\u53ef\u88ab\u4fee\u6539 */ const vector<int>::iterator iter=vec.begin(); /* \u5b9e\u8d28\u662f\u4e00\u4e2aconst int*\u6307\u9488 */ vector<int>::const_iterator citer = vec.cbegin()","title":"About iterator"},{"location":"CPP/iterator/#about-iterator","text":"","title":"About iterator"},{"location":"CPP/iterator/#_1","text":"struct input_iterator_tag{}; \u53ea\u80fd\u5411\u524d\u79fb\u52a8\uff0c\u5982istream_iterator, \u652f\u6301++iter\u6216iter++, \u5bf9\u4e8e\u6240\u6307\u5bf9\u8c61\u53ea\u8bfb; struct output_iterator_tag{}; \u53ea\u80fd\u5411\u524d\u79fb\u52a8\uff0c\u5982ostream_iterator, \u652f\u6301++iter\u6216iter++, \u5bf9\u4e8e\u6240\u6307\u5bf9\u8c61\u53ea\u5199; struct forward_iterator_tag:: public input_iterator_tag{}; \u53ea\u80fd\u5411\u524d\u79fb\u52a8\uff0c\u4f46\u5bf9\u4e8e\u6240\u6307\u5bf9\u8c61\u540c\u65f6\u53ef\u8bfb\u53ef\u5199 struct bidirectional_iterator_tag:: public forward_iterator{}; \u53ef\u524d\u540e\u79fb\u52a8\uff0c \u5982map\u3001set\u3001multimap\u3001multiset\u7684\u8fed\u4ee3\u5668\u3002 struct random_access_iterator_tag:: public bidirectional_iterator_tag{}; \u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\uff0c\u53ef\u8fdb\u884c\u8fed\u4ee3\u5668\u7b97\u672f\u8fd0\u7b97, \u5bb9\u5668\u5143\u7d20\u5b58\u50a8\u5728\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\u5185, \u5982vector\u3001string\u3001deque\u3002 //\u8fed\u4ee3\u5668\u6307\u793a\u7684\u65b0\u4f4d\u7f6e\u4e0e\u539f\u6765\u76f8\u6bd4\u5411\u524d\uff08\u5411\u540e\uff09\u79fb\u52a8n\u4e2a\u5143\u7d20\uff0c\u7ed3\u679c\u8fed\u4ee3\u5668\u6216\u6307\u793a\u5bb9\u5668\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\u6216\u4e3a\u5c3e\u540e\u8fed\u4ee3\u5668\u3002 iter+n or iter-n iter+=n \u6216\u8005 iter-=n; //\u4e24\u4e2a\u8fed\u4ee3\u5668\u76f8\u51cf\u662f\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u53c2\u4e0e\u8fd0\u7b97\u7684\u4e24\u4e2a\u8fed\u4ee3\u5668\u5fc5\u987b\u6307\u5411\u540c\u4e00\u4e2a\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u6216\u4e3a\u5c3e\u540e\u8fed\u4ee3\u5668\uff0c //\u5176\u7c7b\u578b\u4e3adifference_type\u7684\u5e26\u7b26\u53f7\u6574\u578b\u6570\u3002 iter1-iter2 iter:\u89e3\u5f15\u7528\u8fed\u4ee3\u5668\uff0c\u8fd4\u56de\u5176\u6240\u6307\u5143\u7d20\u7684\u5f15\u7528\u3002 iter++: iter\u5411\u540e\u79fb\u52a8\u4e00\u4f4d\uff0c\u8fd4\u56de\u4e00\u4e2aiter\u79fb\u52a8\u524d\u7684\u4e34\u65f6\u5bf9\u8c61\uff0c\u4e00\u4e2a\u53f3\u503c ++iter: \u8fd4\u56de iter\u79fb\u52a8\u540e\u7684\u5f15\u7528, \u4e00\u4e2a\u5de6\u503c\uff0c++iter=&variable;//\u6b63\u786e\uff0c\u4f46\u5176\u4fee\u6539\u7684\u662fiter\u6307\u9488\u503c\uff0c\u800c\u975e\u5176\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u5bb9\u5668\u5185\u5143\u7d20\u6ca1\u6709\u6539\u53d8\u3002 iter++: \u7b49\u4ef7\u4e8e (iter++), \u662f\u4e00\u4e2a\u5de6\u503c ++iter: \u7b49\u4ef7\u4e8e *(++iter) iterator\uff1a\u4f46\u51e1\u4f7f\u7528\u4e86\u8fed\u4ee3\u5668\u7684\u5faa\u73af\u4f53\uff0c\u90fd\u4e0d\u8981\u5411\u8fed\u4ee3\u5668\u6240\u5c5e\u7684\u5bb9\u5668\u6dfb\u52a0\u6216\u8005\u51cf\u5c11\u5143\u7d20\uff0c\u5373\u4e0d\u8981\u6539\u53d8\u5176\u5bf9\u8c61\u5bb9\u91cf\u5927\u5c0f\u3002 /* \u5b9e\u8d28\u662f\u4e00\u4e2a int* const\u6307\u9488\uff0c\u8868\u793aiter\u4e0d\u80fd\u6307\u5411\u5176\u4ed6\u5bf9\u8c61\uff0c++iter\u4f1a\u62a5\u9519\uff0c\u4f46\u4f9d\u65e7\u6240\u6307\u5411\u5bf9\u8c61\u5185\u5bb9\u4f9d\u65e7\u53ef\u88ab\u4fee\u6539 */ const vector<int>::iterator iter=vec.begin(); /* \u5b9e\u8d28\u662f\u4e00\u4e2aconst int*\u6307\u9488 */ vector<int>::const_iterator citer = vec.cbegin()","title":"\u8fed\u4ee3\u5668\u7c7b\u578b"},{"location":"CPP/memory/","text":"C++ \u5185\u5b58\u7ba1\u7406 \u5185\u5b58\u5206\u533a \u2003\u5173\u4e8enew\u548cmalloc\u5206\u914d\u7684\u5185\u5b58\uff0c\u6216\u8c13\uff0cnew\u5206\u914d\u7684\u5185\u5b58\u5728\u5806\u533a\uff0cmalloc\u5206\u914d\u7684\u5185\u5b58\u5728\u81ea\u7531\u5b58\u50a8\u533a\uff1b\u4f46\u5927\u591a\u6570\u7f16\u8bd1\u5668\u5b9e\u73b0new\u90fd\u662f\u901a\u8fc7malloc\uff0c\u4e24\u8005\u5206\u914d\u7684\u5185\u5b58\u5e76\u65e0\u533a\u522b\uff1b\u8fd9\u4e00\u53eb\u6cd5\u53ea\u662f\u7528\u6765\u533a\u522bC++\u548cC\u5206\u914d\u7684\u5185\u5b58\uff0c\u540e\u8005\u53ea\u80fd\u901a\u8fc7malloc\u5206\u914d\u5185\u5b58\u3002 \u2003\u5728C\u8bed\u8a00\u4e2d\uff0c\u5168\u5c40\u533a\u53c8\u5206\u4e3a\u521d\u59cb\u5316\u7684\u548c\u672a\u521d\u59cb\u5316\u7684\uff0c\u5728C++\u91cc\u9762\u6ca1\u6709\u8fd9\u4e2a\u533a\u5206\u4e86\uff0c\u4ed6\u4eec\u5171\u540c\u5360\u7528\u540c\u4e00\u5757\u5185\u5b58\u533a\u3002","title":"C++ \u5185\u5b58\u7ba1\u7406"},{"location":"CPP/memory/#c","text":"","title":"C++ \u5185\u5b58\u7ba1\u7406"},{"location":"CPP/memory/#_1","text":"\u5173\u4e8enew\u548cmalloc\u5206\u914d\u7684\u5185\u5b58\uff0c\u6216\u8c13\uff0cnew\u5206\u914d\u7684\u5185\u5b58\u5728\u5806\u533a\uff0cmalloc\u5206\u914d\u7684\u5185\u5b58\u5728\u81ea\u7531\u5b58\u50a8\u533a\uff1b\u4f46\u5927\u591a\u6570\u7f16\u8bd1\u5668\u5b9e\u73b0new\u90fd\u662f\u901a\u8fc7malloc\uff0c\u4e24\u8005\u5206\u914d\u7684\u5185\u5b58\u5e76\u65e0\u533a\u522b\uff1b\u8fd9\u4e00\u53eb\u6cd5\u53ea\u662f\u7528\u6765\u533a\u522bC++\u548cC\u5206\u914d\u7684\u5185\u5b58\uff0c\u540e\u8005\u53ea\u80fd\u901a\u8fc7malloc\u5206\u914d\u5185\u5b58\u3002 \u2003\u5728C\u8bed\u8a00\u4e2d\uff0c\u5168\u5c40\u533a\u53c8\u5206\u4e3a\u521d\u59cb\u5316\u7684\u548c\u672a\u521d\u59cb\u5316\u7684\uff0c\u5728C++\u91cc\u9762\u6ca1\u6709\u8fd9\u4e2a\u533a\u5206\u4e86\uff0c\u4ed6\u4eec\u5171\u540c\u5360\u7528\u540c\u4e00\u5757\u5185\u5b58\u533a\u3002","title":"\u5185\u5b58\u5206\u533a"},{"location":"CPP/new_delete/","text":"About new and delete new \u2003 \u5148\u5206\u914d\u5185\u5b58\uff0c\u518d\u8c03\u7528\u6784\u9020\u51fd\u6570 string* ps = new string(\"hello\"); // \u7f16\u8bd1\u5668\u4f1a\u8f6c\u5316\u4e3a\u4ee5\u4e0b\u5f62\u5f0f void* mem = operator new(sizeof(string)); // \u5206\u914d\u5185\u5b58 ps = static_cast<string*>(mem); //\u8f6c\u578b ps->string::string(\"hello\"); //\u8c03\u7528\u6784\u9020\u51fd\u6570 delete \u2003 \u5148\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u518d\u91ca\u653e\u5185\u5b58 delete ps; // \u7f16\u8bd1\u5668\u4f1a\u8f6c\u5316\u4e3a\u4ee5\u4e0b\u5f62\u5f0f string::~string(ps); // \u6790\u6784\u51fd\u6570 operator delete(ps); // \u91ca\u653e\u5185\u5b58 \u2003 array new \u5fc5\u987b\u8981\u642d\u914darray delete(\u5373delete []); \u5bf9\u4e8e\u5185\u7f6e\u7c7b\u578b\uff0c\u5982int\u3001double, \u91c7\u7528delete\u4e5f\u53ef\uff0c\u56e0\u4e3aint\u3001double\u7c7b\u578b\u6ca1\u6709\u6790\u6784\u51fd\u6570\uff0c\u5185\u5b58\u4f1a\u88ab\u6b63\u5e38\u91ca\u653e\uff1b\u5bf9\u4e8e\u7c7b\u7c7b\u578b\uff0c\u5982\u679c\u8be5\u7c7b\u6ca1\u6709\u63d0\u4f9b\u6790\u6784\u51fd\u6570\uff0c\u4e14\u8be5\u7c7b\u7684\u6210\u5458\u4e2d\u4e0d\u5305\u542b\u7c7b\u7c7b\u578b\uff0c\u53ea\u6709\u5185\u7f6e\u7c7b\u578b\uff0c\u91c7\u7528delte\u4e5f\u4e0d\u4f1a\u6709\u5185\u5b58\u6cc4\u6f0f\uff1b\u4f46\u5982\u679c\u5176\u4e2d\u5305\u542b\u7c7b\u7c7b\u578b\u6210\u5458\u6216\u6307\u9488\u6210\u5458\uff0c\u5219delete\u53ea\u4f1a\u91ca\u653e\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u5360\u7528\u7684\u5185\u5b58\uff0c\u5176\u4f59\u5143\u7d20\u5185\u5b58\u5c06\u4f1a\u6cc4\u6f0f\uff0c\u6b64\u65f6\u7a0b\u5e8f\u4e0d\u4f1a\u62a5\u9519\uff1b \u2003\u6216\u82e5\u5982\u4e0b\u9762\u60c5\u51b5\uff0cDemo\u4e2d\u63d0\u4f9b\u4e86\u6790\u6784\u51fd\u6570(\u5373\u4f7f\u51fd\u6570\u4f53\u4e3a\u7a7a)\uff0c\u65e0\u8bba\u7c7b\u6210\u5458\u7c7b\u578b\u662f\u5185\u7f6e\u7c7b\u578b\uff0c\u8fd8\u662f\u7c7b\u7c7b\u578b\u3001\u6307\u9488\u7c7b\u578b\uff0c\u7531\u4e8e\u5185\u5b58\u5e03\u5c40\u4e2d\u5305\u542b\u4e86\u6570\u7ec4\u957f\u5ea6\uff0c\u91c7\u7528delete\u6765\u8bd5\u56fe\u91ca\u653e\u5185\u5b58\u90fd\u4f1a\u62a5\u9519\u3002 \u91cd\u590ddelete \u2003delete\u4e00\u6b21\u7684\u6307\u9488\u5e76\u975eNULL\uff0c\u800c\u662f\u6210\u4e86\u7a7a\u60ac\u6307\u9488(dangling pointer)\uff0c\u867d\u7136\u6307\u9488\u5df2\u7ecf\u65e0\u6548\uff0c\u4f46\u5728\u5f88\u591a\u673a\u5668\u4e0a\u6307\u9488\u4ecd\u7136\u4fdd\u5b58\u7740(\u5df2\u7ecf\u91ca\u653e\u4e86\u7684)\u52a8\u6001\u5185\u5b58\u7684\u5730\u5740\u3002 \u2003 \u91cd\u590ddelete\u4f1a\u9020\u6210\u4e0d\u53ef\u77e5\u7684\u9519\u8bef\uff0c\u867d\u7136\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u68c0\u6d4b\u51fa\u91cd\u590ddelete\u7684\u53d1\u751f\uff0c\u4f46\u4e0d\u8981\u4f9d\u8d56\u7f16\u8bd1\u5668\u81ea\u8eab\u7684\u9009\u62e9\u3002 \u2003 \u5bf9\u4e8edelete\u4e00\u6b21\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u663e\u793a\u4ee4\u5176\u4e3aNULL\uff0c\u6e05\u695a\u6307\u51fa\u8be5\u6307\u9488\u4e0d\u6307\u5411\u4efb\u4f55\u5bf9\u8c61\uff0cdelete\u4e00\u4e2a\u7a7a\u6307\u9488\u4e0d\u4f1a\u6709\u4efb\u4f55\u95ee\u9898 int\\* p = new int(1); delete p; p=NULL; delete p; //\u5220\u9664\u4e00\u4e2a\u7a7a\u6307\u9488\uff0c\u4e0d\u4f1a\u62a5\u9519 \u5173\u4e8e\u91cd\u8f7d class FF { public: FF() :_id(0) { std::cout << \"default ctor.this=\" << this << \" id=\" << _id << std::endl; } FF(int i) :_id(i) { std::cout << \"ctor.this=\" << this << \" id=\" << _id << std::endl; } ~FF() { std::cout << \"dtor.this=\" << this << \" id=\" << _id << std::endl; } static void* operator new(size_t size); static void operator delete(void* pdead, size_t size); static void* operator new[](size_t size); static void operator delete[](void* pdead, size_t size); private: int _id; }; void* FF::operator new(size_t size) { FF* p = (FF*)malloc(size); std::cout << \"\u8c03\u7528\u4e86Foo::operator new\" << std::endl; return p; } void FF::operator delete(void* pdead, size_t size) { std::cout << \"\u8c03\u7528\u4e86Foo::operator delete\" << std::endl; free(pdead); } void* FF::operator new[](size_t size) { FF* p = (FF*)malloc(size); std::cout << \"\u8c03\u7528\u4e86Foo::operator new[]\" << std::endl; return p; } void FF::operator delete[](void* pdead, size_t size) { std::cout << \"\u8c03\u7528\u4e86Foo::operator delete[]\" << std::endl; free(pdead); } // main FF* pf = new FF(7); FF* pf1 = new FF[3]; delete pf; delete[] pf1; // \u8f93\u51fa // \u8c03\u7528\u4e86Foo::operator new // ctor.this=011D62B8 id=7 // \u8c03\u7528\u4e86Foo::operator new[] // default ctor.this=011E0DCC id // default ctor.this=011E0DD0 id // default ctor.this=011E0DD4 id // dtor.this=011D62B8 id=7 // \u8c03\u7528\u4e86Foo::operator delete // dtor.this=011E0DD4 id=0 // dtor.this=011E0DD0 id=0 // dtor.this=011E0DCC id=0 // \u8c03\u7528\u4e86Foo::operator delete[] \u2003\u901a\u8fc7::new\u548c::delete\u53ef\u4ee5\u5f3a\u5236\u4f7f\u7528\u5168\u5c40\u7684operator new\u548coperator delete\uff0c\u800c\u975e\u91cd\u8f7d\u7248\u672c\u3002 \u2003\u7c7b\u4e2d\u7684operator new\u548coperatir delete\u7684\u91cd\u8f7d\u51fd\u6570\u5fc5\u987b\u662fstatic\uff0c\u56e0\u4e3aoperator new\u5c31\u662f\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u88ab\u8c03\u7528\uff0c\u6b64\u65f6\u5c1a\u672a\u6709\u5bf9\u8c61\u5b58\u5728\uff0c\u5982\u679c\u51fd\u6570\u662f\u975e\u9759\u6001\u7684\uff0c\u81ea\u7136\u662f\u4e0d\u80fd\u88ab\u8c03\u7528\u7684\u3002 \u603b\u7ed3 new/delete and operator new/delete and placement new new/delete\u5c5e\u4e8e\u64cd\u4f5c\u7b26\uff0c\u800coperator new/operator delete\u662f\u51fd\u6570. new: \u8c03\u7528operator new\u5206\u914d\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u5e76\u8c03\u7528\u76f8\u5173\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570; \u4e0d\u53ef\u4ee5\u88ab\u91cd\u8f7d operator new \uff081\uff09\u53ea\u5206\u914d\u6240\u8981\u6c42\u7684\u7a7a\u95f4\uff0c\u4e0d\u8c03\u7528\u76f8\u5173\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u3002\u5f53\u65e0\u6cd5\u6ee1\u8db3\u6240\u8981\u6c42\u5206\u914d\u7684\u7a7a\u95f4\u65f6\uff0c\u5219 ->\u5982\u679c\u6709new_handler\uff0c\u5219\u8c03\u7528new_handler\uff0c\u5426\u5219 ->\u5982\u679c\u6ca1\u8981\u6c42\u4e0d\u629b\u51fa\u5f02\u5e38\uff08\u4ee5nothrow\u53c2\u6570\u8868\u8fbe\uff09\uff0c\u5219\u6267\u884cbad_alloc\u5f02\u5e38\uff0c\u5426\u5219 ->\u8fd4\u56de0 \uff082\uff09\u53ef\u4ee5\u88ab\u91cd\u8f7d \uff083\uff09\u91cd\u8f7d\u65f6\uff0c\u8fd4\u56de\u7c7b\u578b\u5fc5\u987b\u58f0\u660e\u4e3avoid* \uff084\uff09\u91cd\u8f7d\u65f6\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u7c7b\u578b\u5fc5\u987b\u4e3a\u8868\u8fbe\u8981\u6c42\u5206\u914d\u7a7a\u95f4\u7684\u5927\u5c0f\uff08\u5b57\u8282\uff09\uff0c\u7c7b\u578b\u4e3asize_t \uff085\uff09\u91cd\u8f7d\u65f6\uff0c\u53ef\u4ee5\u5e26\u5176\u5b83\u53c2\u6570\uff0c\u5373\u6240\u8c13\u7684placement new\uff0c \u5f62\u5982operator new(size_t, string)\u3001operator new(size_t, void*)\u5f62\u5f0f; (6)placement new\u5bf9\u5e94\u5f62\u5f0f\u7684\u91cd\u8f7doperator delete\u4e5f\u53ef\u53eb\u505a placement delete , \u4f46\u5176\u6b63\u5e38\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c \u53ea\u6709\u5f53\u76f8\u5e94\u7248\u672c\u7684placement new\u8c03\u7528\u6784\u9020\u51fd\u6570\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u5f02\u5e38\u65f6\uff0c\u624d\u4f1a\u88ab\u8c03\u7528(\u4e8b\u5b9e\u4e0a\u4e0d\u540c\u7f16\u8bd1\u5668\u5bf9\u6b64\u6709\u4e0d\u540c\u8868\u73b0)\uff0c \u7528\u6765\u5f52\u8fd8\u672a\u5b8c\u5168\u521b\u5efa\u6210\u529f\u7684object\u6240\u5360\u7528\u7684memory\uff1b \u82e5\u7f3a\u5c11\u5bf9\u5e94\u7248\u672c\u7684placement delete,\u5e76\u4e0d\u4f1a\u62a5\u9519\uff0c\u610f\u5473\u7740\u653e\u5f03\u6784\u9020\u51fd\u6570\u629b\u51fa\u7684\u5f02\u5e38\u3002 \u5982\u679cplacement new\u6784\u9020\u6210\u529f\u540e, \u8c03\u7528delete\u91ca\u653e\u5185\u5b58, \u6240\u8c03\u7528\u7684\u662f\u6b63\u5e38\u5f62\u5f0f\u7684operator delete(\u53ef\u80fd\u662f\u5168\u5c40\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49\u7684)\u3002 \u63a5\u53d7\u7b2c\u4e8c\u4e2a\u6307\u9488\u53c2\u6570\u7684placement new, \u6267\u884c\u65f6\u5ffd\u7565size_t\u53c2\u6570\uff0c\u53ea\u8fd4\u8fd8\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a \u6307\u5411\u5df2\u7ecf\u5206\u914d\u597d\u7684\u67d0\u6bb5\u5185\u5b58\u7684\u4e00\u4e2a\u6307\u9488 \uff0c\u8fd9\u6bb5\u5185\u5b58\u53ef\u80fd\u5728\u6808\u4e2d\u6216\u8005\u9759\u6001\u5168\u5c40\u533a\uff0c\u800cdelete\u53ea\u80fd\u91ca\u653e\u5206\u914d\u5728\u5806\u4e2d\u7684\u5185\u5b58\uff0c\u56e0\u6b64\u901a\u8fc7\u6b64\u79cdplacement new\u5f97\u5230\u7684\u6307\u9488\u4e0d\u80fd\u8c03\u7528delete\uff0c\u53ea\u9700\u8c03\u7528\u6307\u5411\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u3002 new (place_address) type new (place_address) type (initializers) new (place_address) type [size] new (place_address) type [size] { brace initializer list} \u2003\u5176\u4e2dplace_address\u662f\u4e00\u4e2a\u6307\u9488\uff0c \u540c\u65f6\u5728initializers\u63d0\u4f9b\u7684\u4e00\u4e2a(\u53ef\u4e3a\u7a7a)\u4ee5\u9017\u53f7\u5206\u9694\u7684\u521d\u59cb\u503c\u5217\u8868\uff0c\u8be5\u521d\u59cb\u503c\u5217\u8868\u5c06\u7528\u4e8e\u6784\u9020\u65b0\u5206\u914d\u7684\u5bf9\u8c61\u3002 \u5f53\u53ea\u4f20\u5165\u4e00\u4e2a\u6307\u9488\u7c7b\u578b\u7684\u5b9e\u53c2\u65f6\uff0c\u5b9a\u4f4dnew\u8868\u8fbe\u5f0f\u6784\u9020\u5bf9\u8c61\u4f46\u662f\u4e0d\u5206\u914d\u5185\u5b58\u3002\u8fd9\u79cd\u91cd\u8f7d\u5f62\u5f0f\u7684operator new\u5e38\u88ab\u7ffb\u8bd1\u4e3a\u5b9a\u4f4dnew\uff0cC++\u5e93\u4e2d\u5df2\u7ecf\u63d0\u4f9b\u4e86\u8be5\u7248\u672c\u3002 \u4f18\u70b9: 1.\u7528placement new \u89e3\u51b3buffer\u7684\u95ee\u9898 \u95ee\u9898\u63cf\u8ff0:\u7528new\u5206\u914d\u7684\u6570\u7ec4\u7f13\u51b2\u65f6,\u7531\u4e8e\u8c03\u7528\u4e86\u9ed8\u8ba4\u6784\u9020\u51fd\u6570,\u56e0\u6b64\u6267\u884c\u6548\u7387\u4e0a\u4e0d\u4f73\u3002\u82e5\u6ca1\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5219\u4f1a\u53d1\u751f\u7f16\u8bd1\u65f6\u9519\u8bef\u3002 \u5982\u679c\u4f60\u60f3\u5728\u9884\u5206\u914d\u7684\u5185\u5b58\u4e0a\u521b\u5efa\u5bf9\u8c61\uff0c\u7528\u7f3a\u7701\u7684new\u64cd\u4f5c\u7b26\u662f\u884c\u4e0d\u901a\u7684\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c \u4f60\u53ef\u4ee5\u7528placement new\u6784\u9020\u3002\u5b83\u5141\u8bb8\u4f60\u6784\u9020\u4e00\u4e2a\u65b0\u5bf9\u8c61\u5230\u9884\u5206\u914d\u7684\u5185\u5b58\u4e0a\u3002 2.\u589e\u5927\u65f6\u7a7a\u6548\u7387\u7684\u95ee\u9898 \u4f7f\u7528new\u64cd\u4f5c\u7b26\u5206\u914d\u5185\u5b58\u9700\u8981\u5728\u5806\u4e2d\u67e5\u627e\u8db3\u591f\u5927\u7684\u5269\u4f59\u7a7a\u95f4\uff0c\u663e\u7136\u8fd9\u4e2a\u64cd\u4f5c\u901f\u5ea6\u662f\u5f88\u6162\u7684\uff0c \u800c\u4e14\u6709\u53ef\u80fd\u51fa\u73b0\u65e0\u6cd5\u5206\u914d\u5185\u5b58\u7684\u5f02\u5e38\uff08\u7a7a\u95f4\u4e0d\u591f\uff09\u3002 placement new\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u6784\u9020\u5bf9\u8c61\u90fd\u662f\u5728\u4e00\u4e2a\u9884\u5148\u51c6\u5907\u597d\u4e86\u7684\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\u8fdb\u884c\uff0c\u4e0d\u9700\u8981\u67e5\u627e\u5185\u5b58\uff0c \u5185\u5b58\u5206\u914d\u7684\u65f6\u95f4\u662f\u5e38\u6570\uff1b\u800c\u4e14\u4e0d\u4f1a\u51fa\u73b0\u5728\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u9014\u51fa\u73b0\u5185\u5b58\u4e0d\u8db3\u7684\u5f02\u5e38\u3002 \u6240\u4ee5\uff0cplacement new\u975e\u5e38\u9002\u5408\u90a3\u4e9b\u5bf9\u65f6\u95f4\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u957f\u65f6\u95f4\u8fd0\u884c\u4e0d\u5e0c\u671b\u88ab\u6253\u65ad\u7684\u5e94\u7528\u7a0b\u5e8f\u3002","title":"About new and delete"},{"location":"CPP/new_delete/#about-new-and-delete","text":"","title":"About new and delete"},{"location":"CPP/new_delete/#new","text":"\u5148\u5206\u914d\u5185\u5b58\uff0c\u518d\u8c03\u7528\u6784\u9020\u51fd\u6570 string* ps = new string(\"hello\"); // \u7f16\u8bd1\u5668\u4f1a\u8f6c\u5316\u4e3a\u4ee5\u4e0b\u5f62\u5f0f void* mem = operator new(sizeof(string)); // \u5206\u914d\u5185\u5b58 ps = static_cast<string*>(mem); //\u8f6c\u578b ps->string::string(\"hello\"); //\u8c03\u7528\u6784\u9020\u51fd\u6570","title":"new"},{"location":"CPP/new_delete/#delete","text":"\u5148\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u518d\u91ca\u653e\u5185\u5b58 delete ps; // \u7f16\u8bd1\u5668\u4f1a\u8f6c\u5316\u4e3a\u4ee5\u4e0b\u5f62\u5f0f string::~string(ps); // \u6790\u6784\u51fd\u6570 operator delete(ps); // \u91ca\u653e\u5185\u5b58 \u2003 array new \u5fc5\u987b\u8981\u642d\u914darray delete(\u5373delete []); \u5bf9\u4e8e\u5185\u7f6e\u7c7b\u578b\uff0c\u5982int\u3001double, \u91c7\u7528delete\u4e5f\u53ef\uff0c\u56e0\u4e3aint\u3001double\u7c7b\u578b\u6ca1\u6709\u6790\u6784\u51fd\u6570\uff0c\u5185\u5b58\u4f1a\u88ab\u6b63\u5e38\u91ca\u653e\uff1b\u5bf9\u4e8e\u7c7b\u7c7b\u578b\uff0c\u5982\u679c\u8be5\u7c7b\u6ca1\u6709\u63d0\u4f9b\u6790\u6784\u51fd\u6570\uff0c\u4e14\u8be5\u7c7b\u7684\u6210\u5458\u4e2d\u4e0d\u5305\u542b\u7c7b\u7c7b\u578b\uff0c\u53ea\u6709\u5185\u7f6e\u7c7b\u578b\uff0c\u91c7\u7528delte\u4e5f\u4e0d\u4f1a\u6709\u5185\u5b58\u6cc4\u6f0f\uff1b\u4f46\u5982\u679c\u5176\u4e2d\u5305\u542b\u7c7b\u7c7b\u578b\u6210\u5458\u6216\u6307\u9488\u6210\u5458\uff0c\u5219delete\u53ea\u4f1a\u91ca\u653e\u6570\u7ec4\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u5360\u7528\u7684\u5185\u5b58\uff0c\u5176\u4f59\u5143\u7d20\u5185\u5b58\u5c06\u4f1a\u6cc4\u6f0f\uff0c\u6b64\u65f6\u7a0b\u5e8f\u4e0d\u4f1a\u62a5\u9519\uff1b \u2003\u6216\u82e5\u5982\u4e0b\u9762\u60c5\u51b5\uff0cDemo\u4e2d\u63d0\u4f9b\u4e86\u6790\u6784\u51fd\u6570(\u5373\u4f7f\u51fd\u6570\u4f53\u4e3a\u7a7a)\uff0c\u65e0\u8bba\u7c7b\u6210\u5458\u7c7b\u578b\u662f\u5185\u7f6e\u7c7b\u578b\uff0c\u8fd8\u662f\u7c7b\u7c7b\u578b\u3001\u6307\u9488\u7c7b\u578b\uff0c\u7531\u4e8e\u5185\u5b58\u5e03\u5c40\u4e2d\u5305\u542b\u4e86\u6570\u7ec4\u957f\u5ea6\uff0c\u91c7\u7528delete\u6765\u8bd5\u56fe\u91ca\u653e\u5185\u5b58\u90fd\u4f1a\u62a5\u9519\u3002 \u91cd\u590ddelete \u2003delete\u4e00\u6b21\u7684\u6307\u9488\u5e76\u975eNULL\uff0c\u800c\u662f\u6210\u4e86\u7a7a\u60ac\u6307\u9488(dangling pointer)\uff0c\u867d\u7136\u6307\u9488\u5df2\u7ecf\u65e0\u6548\uff0c\u4f46\u5728\u5f88\u591a\u673a\u5668\u4e0a\u6307\u9488\u4ecd\u7136\u4fdd\u5b58\u7740(\u5df2\u7ecf\u91ca\u653e\u4e86\u7684)\u52a8\u6001\u5185\u5b58\u7684\u5730\u5740\u3002 \u2003 \u91cd\u590ddelete\u4f1a\u9020\u6210\u4e0d\u53ef\u77e5\u7684\u9519\u8bef\uff0c\u867d\u7136\u7f16\u8bd1\u5668\u53ef\u80fd\u4f1a\u68c0\u6d4b\u51fa\u91cd\u590ddelete\u7684\u53d1\u751f\uff0c\u4f46\u4e0d\u8981\u4f9d\u8d56\u7f16\u8bd1\u5668\u81ea\u8eab\u7684\u9009\u62e9\u3002 \u2003 \u5bf9\u4e8edelete\u4e00\u6b21\u7684\u6307\u9488\uff0c\u53ef\u4ee5\u663e\u793a\u4ee4\u5176\u4e3aNULL\uff0c\u6e05\u695a\u6307\u51fa\u8be5\u6307\u9488\u4e0d\u6307\u5411\u4efb\u4f55\u5bf9\u8c61\uff0cdelete\u4e00\u4e2a\u7a7a\u6307\u9488\u4e0d\u4f1a\u6709\u4efb\u4f55\u95ee\u9898 int\\* p = new int(1); delete p; p=NULL; delete p; //\u5220\u9664\u4e00\u4e2a\u7a7a\u6307\u9488\uff0c\u4e0d\u4f1a\u62a5\u9519","title":"delete"},{"location":"CPP/new_delete/#_1","text":"class FF { public: FF() :_id(0) { std::cout << \"default ctor.this=\" << this << \" id=\" << _id << std::endl; } FF(int i) :_id(i) { std::cout << \"ctor.this=\" << this << \" id=\" << _id << std::endl; } ~FF() { std::cout << \"dtor.this=\" << this << \" id=\" << _id << std::endl; } static void* operator new(size_t size); static void operator delete(void* pdead, size_t size); static void* operator new[](size_t size); static void operator delete[](void* pdead, size_t size); private: int _id; }; void* FF::operator new(size_t size) { FF* p = (FF*)malloc(size); std::cout << \"\u8c03\u7528\u4e86Foo::operator new\" << std::endl; return p; } void FF::operator delete(void* pdead, size_t size) { std::cout << \"\u8c03\u7528\u4e86Foo::operator delete\" << std::endl; free(pdead); } void* FF::operator new[](size_t size) { FF* p = (FF*)malloc(size); std::cout << \"\u8c03\u7528\u4e86Foo::operator new[]\" << std::endl; return p; } void FF::operator delete[](void* pdead, size_t size) { std::cout << \"\u8c03\u7528\u4e86Foo::operator delete[]\" << std::endl; free(pdead); } // main FF* pf = new FF(7); FF* pf1 = new FF[3]; delete pf; delete[] pf1; // \u8f93\u51fa // \u8c03\u7528\u4e86Foo::operator new // ctor.this=011D62B8 id=7 // \u8c03\u7528\u4e86Foo::operator new[] // default ctor.this=011E0DCC id // default ctor.this=011E0DD0 id // default ctor.this=011E0DD4 id // dtor.this=011D62B8 id=7 // \u8c03\u7528\u4e86Foo::operator delete // dtor.this=011E0DD4 id=0 // dtor.this=011E0DD0 id=0 // dtor.this=011E0DCC id=0 // \u8c03\u7528\u4e86Foo::operator delete[] \u2003\u901a\u8fc7::new\u548c::delete\u53ef\u4ee5\u5f3a\u5236\u4f7f\u7528\u5168\u5c40\u7684operator new\u548coperator delete\uff0c\u800c\u975e\u91cd\u8f7d\u7248\u672c\u3002 \u2003\u7c7b\u4e2d\u7684operator new\u548coperatir delete\u7684\u91cd\u8f7d\u51fd\u6570\u5fc5\u987b\u662fstatic\uff0c\u56e0\u4e3aoperator new\u5c31\u662f\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u88ab\u8c03\u7528\uff0c\u6b64\u65f6\u5c1a\u672a\u6709\u5bf9\u8c61\u5b58\u5728\uff0c\u5982\u679c\u51fd\u6570\u662f\u975e\u9759\u6001\u7684\uff0c\u81ea\u7136\u662f\u4e0d\u80fd\u88ab\u8c03\u7528\u7684\u3002","title":"\u5173\u4e8e\u91cd\u8f7d"},{"location":"CPP/new_delete/#_2","text":"new/delete and operator new/delete and placement new new/delete\u5c5e\u4e8e\u64cd\u4f5c\u7b26\uff0c\u800coperator new/operator delete\u662f\u51fd\u6570. new: \u8c03\u7528operator new\u5206\u914d\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u5e76\u8c03\u7528\u76f8\u5173\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570; \u4e0d\u53ef\u4ee5\u88ab\u91cd\u8f7d operator new \uff081\uff09\u53ea\u5206\u914d\u6240\u8981\u6c42\u7684\u7a7a\u95f4\uff0c\u4e0d\u8c03\u7528\u76f8\u5173\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u3002\u5f53\u65e0\u6cd5\u6ee1\u8db3\u6240\u8981\u6c42\u5206\u914d\u7684\u7a7a\u95f4\u65f6\uff0c\u5219 ->\u5982\u679c\u6709new_handler\uff0c\u5219\u8c03\u7528new_handler\uff0c\u5426\u5219 ->\u5982\u679c\u6ca1\u8981\u6c42\u4e0d\u629b\u51fa\u5f02\u5e38\uff08\u4ee5nothrow\u53c2\u6570\u8868\u8fbe\uff09\uff0c\u5219\u6267\u884cbad_alloc\u5f02\u5e38\uff0c\u5426\u5219 ->\u8fd4\u56de0 \uff082\uff09\u53ef\u4ee5\u88ab\u91cd\u8f7d \uff083\uff09\u91cd\u8f7d\u65f6\uff0c\u8fd4\u56de\u7c7b\u578b\u5fc5\u987b\u58f0\u660e\u4e3avoid* \uff084\uff09\u91cd\u8f7d\u65f6\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u7c7b\u578b\u5fc5\u987b\u4e3a\u8868\u8fbe\u8981\u6c42\u5206\u914d\u7a7a\u95f4\u7684\u5927\u5c0f\uff08\u5b57\u8282\uff09\uff0c\u7c7b\u578b\u4e3asize_t \uff085\uff09\u91cd\u8f7d\u65f6\uff0c\u53ef\u4ee5\u5e26\u5176\u5b83\u53c2\u6570\uff0c\u5373\u6240\u8c13\u7684placement new\uff0c \u5f62\u5982operator new(size_t, string)\u3001operator new(size_t, void*)\u5f62\u5f0f; (6)placement new\u5bf9\u5e94\u5f62\u5f0f\u7684\u91cd\u8f7doperator delete\u4e5f\u53ef\u53eb\u505a placement delete , \u4f46\u5176\u6b63\u5e38\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u88ab\u8c03\u7528\uff0c \u53ea\u6709\u5f53\u76f8\u5e94\u7248\u672c\u7684placement new\u8c03\u7528\u6784\u9020\u51fd\u6570\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u5f02\u5e38\u65f6\uff0c\u624d\u4f1a\u88ab\u8c03\u7528(\u4e8b\u5b9e\u4e0a\u4e0d\u540c\u7f16\u8bd1\u5668\u5bf9\u6b64\u6709\u4e0d\u540c\u8868\u73b0)\uff0c \u7528\u6765\u5f52\u8fd8\u672a\u5b8c\u5168\u521b\u5efa\u6210\u529f\u7684object\u6240\u5360\u7528\u7684memory\uff1b \u82e5\u7f3a\u5c11\u5bf9\u5e94\u7248\u672c\u7684placement delete,\u5e76\u4e0d\u4f1a\u62a5\u9519\uff0c\u610f\u5473\u7740\u653e\u5f03\u6784\u9020\u51fd\u6570\u629b\u51fa\u7684\u5f02\u5e38\u3002 \u5982\u679cplacement new\u6784\u9020\u6210\u529f\u540e, \u8c03\u7528delete\u91ca\u653e\u5185\u5b58, \u6240\u8c03\u7528\u7684\u662f\u6b63\u5e38\u5f62\u5f0f\u7684operator delete(\u53ef\u80fd\u662f\u5168\u5c40\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u81ea\u5b9a\u4e49\u7684)\u3002 \u63a5\u53d7\u7b2c\u4e8c\u4e2a\u6307\u9488\u53c2\u6570\u7684placement new, \u6267\u884c\u65f6\u5ffd\u7565size_t\u53c2\u6570\uff0c\u53ea\u8fd4\u8fd8\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u4e00\u4e2a \u6307\u5411\u5df2\u7ecf\u5206\u914d\u597d\u7684\u67d0\u6bb5\u5185\u5b58\u7684\u4e00\u4e2a\u6307\u9488 \uff0c\u8fd9\u6bb5\u5185\u5b58\u53ef\u80fd\u5728\u6808\u4e2d\u6216\u8005\u9759\u6001\u5168\u5c40\u533a\uff0c\u800cdelete\u53ea\u80fd\u91ca\u653e\u5206\u914d\u5728\u5806\u4e2d\u7684\u5185\u5b58\uff0c\u56e0\u6b64\u901a\u8fc7\u6b64\u79cdplacement new\u5f97\u5230\u7684\u6307\u9488\u4e0d\u80fd\u8c03\u7528delete\uff0c\u53ea\u9700\u8c03\u7528\u6307\u5411\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u3002 new (place_address) type new (place_address) type (initializers) new (place_address) type [size] new (place_address) type [size] { brace initializer list} \u2003\u5176\u4e2dplace_address\u662f\u4e00\u4e2a\u6307\u9488\uff0c \u540c\u65f6\u5728initializers\u63d0\u4f9b\u7684\u4e00\u4e2a(\u53ef\u4e3a\u7a7a)\u4ee5\u9017\u53f7\u5206\u9694\u7684\u521d\u59cb\u503c\u5217\u8868\uff0c\u8be5\u521d\u59cb\u503c\u5217\u8868\u5c06\u7528\u4e8e\u6784\u9020\u65b0\u5206\u914d\u7684\u5bf9\u8c61\u3002 \u5f53\u53ea\u4f20\u5165\u4e00\u4e2a\u6307\u9488\u7c7b\u578b\u7684\u5b9e\u53c2\u65f6\uff0c\u5b9a\u4f4dnew\u8868\u8fbe\u5f0f\u6784\u9020\u5bf9\u8c61\u4f46\u662f\u4e0d\u5206\u914d\u5185\u5b58\u3002\u8fd9\u79cd\u91cd\u8f7d\u5f62\u5f0f\u7684operator new\u5e38\u88ab\u7ffb\u8bd1\u4e3a\u5b9a\u4f4dnew\uff0cC++\u5e93\u4e2d\u5df2\u7ecf\u63d0\u4f9b\u4e86\u8be5\u7248\u672c\u3002 \u4f18\u70b9: 1.\u7528placement new \u89e3\u51b3buffer\u7684\u95ee\u9898 \u95ee\u9898\u63cf\u8ff0:\u7528new\u5206\u914d\u7684\u6570\u7ec4\u7f13\u51b2\u65f6,\u7531\u4e8e\u8c03\u7528\u4e86\u9ed8\u8ba4\u6784\u9020\u51fd\u6570,\u56e0\u6b64\u6267\u884c\u6548\u7387\u4e0a\u4e0d\u4f73\u3002\u82e5\u6ca1\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5219\u4f1a\u53d1\u751f\u7f16\u8bd1\u65f6\u9519\u8bef\u3002 \u5982\u679c\u4f60\u60f3\u5728\u9884\u5206\u914d\u7684\u5185\u5b58\u4e0a\u521b\u5efa\u5bf9\u8c61\uff0c\u7528\u7f3a\u7701\u7684new\u64cd\u4f5c\u7b26\u662f\u884c\u4e0d\u901a\u7684\u3002\u8981\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c \u4f60\u53ef\u4ee5\u7528placement new\u6784\u9020\u3002\u5b83\u5141\u8bb8\u4f60\u6784\u9020\u4e00\u4e2a\u65b0\u5bf9\u8c61\u5230\u9884\u5206\u914d\u7684\u5185\u5b58\u4e0a\u3002 2.\u589e\u5927\u65f6\u7a7a\u6548\u7387\u7684\u95ee\u9898 \u4f7f\u7528new\u64cd\u4f5c\u7b26\u5206\u914d\u5185\u5b58\u9700\u8981\u5728\u5806\u4e2d\u67e5\u627e\u8db3\u591f\u5927\u7684\u5269\u4f59\u7a7a\u95f4\uff0c\u663e\u7136\u8fd9\u4e2a\u64cd\u4f5c\u901f\u5ea6\u662f\u5f88\u6162\u7684\uff0c \u800c\u4e14\u6709\u53ef\u80fd\u51fa\u73b0\u65e0\u6cd5\u5206\u914d\u5185\u5b58\u7684\u5f02\u5e38\uff08\u7a7a\u95f4\u4e0d\u591f\uff09\u3002 placement new\u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u6211\u4eec\u6784\u9020\u5bf9\u8c61\u90fd\u662f\u5728\u4e00\u4e2a\u9884\u5148\u51c6\u5907\u597d\u4e86\u7684\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\u8fdb\u884c\uff0c\u4e0d\u9700\u8981\u67e5\u627e\u5185\u5b58\uff0c \u5185\u5b58\u5206\u914d\u7684\u65f6\u95f4\u662f\u5e38\u6570\uff1b\u800c\u4e14\u4e0d\u4f1a\u51fa\u73b0\u5728\u7a0b\u5e8f\u8fd0\u884c\u4e2d\u9014\u51fa\u73b0\u5185\u5b58\u4e0d\u8db3\u7684\u5f02\u5e38\u3002 \u6240\u4ee5\uff0cplacement new\u975e\u5e38\u9002\u5408\u90a3\u4e9b\u5bf9\u65f6\u95f4\u8981\u6c42\u6bd4\u8f83\u9ad8\uff0c\u957f\u65f6\u95f4\u8fd0\u884c\u4e0d\u5e0c\u671b\u88ab\u6253\u65ad\u7684\u5e94\u7528\u7a0b\u5e8f\u3002","title":"\u603b\u7ed3"},{"location":"CPP/pointer_reference/","text":"\u6307\u9488 and \u5f15\u7528 \u6307\u9488 \u7c7b\u578b: \u5185\u7f6e\u6307\u9488\uff1a\u7531new\u64cd\u4f5c\u8fd4\u56de\u7684\u6307\u9488\uff0c\u7ed1\u5b9a\u7684\u662f\u52a8\u6001\u5206\u914d\u5bf9\u8c61\uff1b\u666e\u901a\u6307\u9488\uff1a\u7c7b\u4f3c int *p =1; \u667a\u80fd\u6307\u9488; \u9690\u5f0f\u9500\u6bc1\u4e00\u4e2a\u5185\u7f6e\u6307\u9488\u7c7b\u578b\u7684\u6210\u5458\u4e0d\u4f1adelete\u5b83\u6240\u6307\u5411\u7684\u5bf9\u8c61\uff1b\u5f53\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u6216\u8005\u6307\u9488\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\uff0c\u6790\u6784\u51fd\u6570\u4e0d\u4f1a\u6267\u884c\u3002\uff08\u662f\u4e3a\u4e86\u907f\u514d\u5b58\u5728\u591a\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\u65f6\uff0c\u8bef\u56de\u6536\uff09\u4f46\u662f\u6307\u9488\u53d8\u91cf\u672c\u8eab\u6240\u5360\u7684\u5185\u5b58\u4f1a\u88ab\u56de\u6536\u3002 \u6307\u9488\u672c\u8eab\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u5176\u5141\u8bb8\u5bf9\u6307\u9488\u8d4b\u503c\u548c\u62f7\u8d1d\uff0c\u5728\u5b9a\u4e49\u65f6\u65e0\u987b\u8d4b\u521d\u503c\uff1b\u800c\u5728\u5757\u4f5c\u7528\u57df\u5185\u5b9a\u4e49\u7684\u6307\u9488\u5982\u679c\u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0c\u5c06\u662f\u4e00\u4e2a\u4e0d\u786e\u5b9a\u7684\u503c\u3002 \u7a7a\u6307\u9488\uff1aint *p = nullptr; int *p =0; int *p =NULL; \u4e0d\u5141\u8bb8\u5c06int\u53d8\u91cf\u8d4b\u503c\u7ed9\u6307\u9488\uff0c\u5373\u4f7f\u5176\u503c\u662f0\uff0c\u5373 int a =0; int * p = a; //\u9519\u8bef \u7a7a\u6307\u9488\u6307\u5411\u7684\u5730\u5740\u662f\u7279\u6b8a\u7684\uff0c\u8be5\u5730\u5740\u4e0d\u5141\u8bb8\u5b58\u653e\u6570\u636e\u548c\u4e0d\u5141\u8bb8\u7a0b\u5e8f\u8bbf\u95ee\uff0c\u6240\u4ee5\u7a7a\u6307\u9488\u4e0d\u80fd\u64cd\u4f5c\u8be5\u5730\u5740\u91cc\u7684\u4e1c\u897f\uff0c \u53ef\u4ee5\u7406\u89e3\u4e3a\u201c\u6307\u9488\u6307\u5411\u4e86\u7a7a\uff0c\u65e0\u6cd5\u64cd\u4f5c\u4e86\u201d \u6307\u9488\u6709\u4e24\u4e2a\u5c5e\u6027:\u6307\u5411\u53d8\u91cf/\u5bf9\u8c61\u7684\u5730\u5740\u548c\u957f\u5ea6\uff0c\u4f46\u662f\u6307\u9488\u53ea\u5b58\u50a8\u5730\u5740,\u957f\u5ea6\u5219\u53d6\u51b3\u4e8e\u6307\u9488\u7684\u7c7b\u578b\uff1b \u7f16\u8bd1\u5668\u6839\u636e\u6307\u9488\u7684\u7c7b\u578b\u4ece\u6307\u9488\u6307\u5411\u7684\u5730\u5740\u5411\u540e\u5bfb\u5740\uff0c\u6307\u9488\u7c7b\u578b\u4e0d\u540c\u5219\u5bfb\u5740\u8303\u56f4\u4e5f\u4e0d\u540c, \u6bd4\u5982:int*\u4ece\u6307\u5b9a\u5730\u5740\u5411\u540e\u5bfb\u627e4\u5b57\u8282\u4f5c\u4e3a\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143; double*\u4ece\u6307\u5b9a\u5730\u5740\u5411\u540e\u5bfb\u627e8\u5b57\u8282\u4f5c\u4e3a\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u3002 \u800cvoid* \u6307\u9488\u5219\u6ca1\u6709\u7c7b\u578b\uff0c\u5176\u53ef\u4ee5\u5b58\u653e\u4efb\u610f\u7c7b\u578b\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u4f46\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u64cd\u4f5cvoid* \u6307\u9488\u6240\u6307\u5411\u7684\u5bf9\u8c61\u3002 void\u6307\u9488\u4e0d\u80fd\u53c2\u4e0e\u6307\u9488\u8fd0\u7b97,\u9664\u975e\u8fdb\u884c\u8f6c\u6362\uff0c(type*) vp++; const\u6307\u9488\uff1a int * const a; \u8bb0\u4f4f*\u653e\u5728const\u4e4b\u524d\u7528\u4ee5\u8bf4\u660e\u6307\u9488\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u4e0d\u53d8\u7684\u662f\u6307\u9488\u672c\u8eab\u800c\u975e\u6307\u5411\u7684\u5bf9\u8c61\u7684\u503c constexpr\u6307\u9488\uff1a constexpr int * p = nullptr; p\u662f\u4e00\u4e2a\u6307\u5411\u6574\u6570\u7684\u5e38\u91cf\u6307\u9488\uff0c\u56e0\u4e3aconstexpr\u628a\u5b83\u6240\u5b9a\u4e49\u7684\u5bf9\u8c61\u7f6e\u4e3a\u4e86\u9876\u5c42const\u3002 \u89e3\u5f15\u7528\uff1a\u5bf9\u6307\u9488\u89e3\u5f15\u7528\u4f1a\u5f97\u5230\u6240\u6307\u7684\u5bf9\u8c61\uff0c\u662f\u4e00\u4e2a\u5de6\u503c\uff1b\u800c\u8fed\u4ee3\u5668\u7684\u89e3\u5f15\u7528\u662f\u91cd\u8f7d\u4e86*\u8fd0\u7b97\u7b26\uff0c\u5176\u8fd4\u56de\u6240\u6307\u5143\u7d20\u7684\u5f15\u7528\u3002 \u6307\u9488\u7684\u7c7b\u578b\u5fc5\u987b\u548c\u5176\u6240\u6307\u5411\u5bf9\u8c61\u7684\u7c7b\u578b\u4e00\u81f4\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\u4f8b\u5916: \u2003\u7b2c\u4e00\u79cd\uff0c\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\u6ca1\u6709\u89c4\u5b9a\u5176\u6240\u6307\u5411\u7684\u5bf9\u8c61\u5fc5\u987b\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u4ec5\u4ec5\u8981\u6c42\u4e0d\u80fd\u901a\u8fc7\u8be5\u6307\u9488\u6539\u53d8\u5bf9\u8c61\u7684\u503c\u3002 \u2003\u7b2c\u4e8c\u79cd\uff0c\u6307\u9488\u7c7b\u578b\u6307\u5411\u57fa\u7c7b\uff0c\u4f46\u5176\u6240\u6307\u5411\u5b9e\u9645\u5bf9\u8c61\u662f\u6d3e\u751f\u7c7b\u7c7b\u578b\u3002 int *p: p\u662f\u6307\u5411int\u578b\u53d8\u91cf\u7684\u6307\u9488\u53d8\u91cf int* *p\uff1a p\u662f\u6307\u5411int*\u578b\u53d8\u91cf\u7684\u6307\u9488\u53d8\u91cf\uff0c\u5373\u6307\u5411\u6307\u9488\u7684\u6307\u9488\u3002 T *p; // p+1 \u5b9e\u9645\u4e3ap+sizeof(T)*1; \u667a\u80fd\u6307\u9488 \uff1a\u81ea\u52a8\u91ca\u653e\u6240\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u5176\u662f\u4e00\u79cd\u6a21\u677f\uff0c\u5728\u521b\u5efa\u667a\u80fd\u6307\u9488\u65f6\uff0c\u9700\u8981\u63d0\u4f9b\u6307\u9488\u53ef\u4ee5\u6307\u5411\u7684\u7c7b\u578b\uff0c\u6709\u4e09\u79cd\u7c7b\u578b\uff0c\u90fd\u5b9a\u4e49\u5728memory\u5934\u6587\u4ef6\u4e2d\u3002 shared_ptr \u2003\u5141\u8bb8\u591a\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61; \u2003\u5f53\u7528\u4e00\u4e2ashared_ptr\u521d\u59cb\u5316\u53e6\u4e00\u4e2ashared_ptr\u6216\u8005\u5c06\u5b83\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u4e00\u4e2a\u51fd\u6570\u4ee5\u53ca\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u5b83\u6240\u5173\u8054\u7684\u8ba1\u6570\u5668\uff08\u5f15\u7528\u8ba1\u6570\uff09\u5c31\u4f1a\u9012\u589e\uff1b\u82e5\u662f\u7ed9\u5176\u8d4b\u4e88\u65b0\u503c\uff0c\u6216\u662fshared_ptr\u88ab\u9500\u6bc1\uff0c \u5b83\u5c31\u4f1a\u81ea\u52a8\u91ca\u653e\u81ea\u5df1\u6240\u7ba1\u7406\u7684\u5bf9\u8c61\u3002 \u2003 \u7528\u6765\u521d\u59cb\u5316\u667a\u80fd\u6307\u9488\u7684\u666e\u901a\u6307\u9488\u5fc5\u987b\u6307\u5411\u52a8\u6001\u5185\u5b58(\u901a\u8fc7new\u5206\u914d\u7684\u5185\u5b58)\uff0c\u56e0\u4e3a\u667a\u80fd\u6307\u9488\u9ed8\u8ba4\u4f7f\u7528delete \u6765\u91ca\u653e\u6240\u5173\u8054\u7684\u5bf9\u8c61\u3002\u5982\u679c\u5c06\u667a\u80fd\u6307\u9488\u7ed1\u5b9a\u5230\u4e00\u4e2a\u6307\u5411\u5176\u4ed6\u7c7b\u578b\u7684\u8d44\u6e90\u7684\u6307\u9488\u4e0a\uff0c\u5fc5\u987b\u63d0\u4f9b\u81ea\u5df1\u7684\u64cd\u4f5c\u6765\u66ff\u4ee3delete. \u2003 \u63a5\u53d7\u6307\u9488\u53c2\u6570\u7684\u667a\u80fd\u6307\u9488\u6784\u9020\u51fd\u6570\u662fexplicit, \u610f\u5473\u7740\u5fc5\u987b\u7528\u76f4\u63a5\u521d\u59cb\u5316\u5f62\u5f0f\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u667a\u80fd\u6307\u9488\uff1a shared_ptr < int > p1(new int(1)); shared_ptr < int > p2 = new int(1); //\u9519\u8bef unique_ptr \u2003\u72ec\u5360\u6240\u6307\u5411\u7684\u5bf9\u8c61, \u67d0\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2aunique_ptr\u6307\u5411\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5bf9\u8c61\uff0c\u6545\u5176\u4e0d\u652f\u6301\u62f7\u8d1d\u548c\u8d4b\u503c\u64cd\u4f5c; \u2003\u901a\u8fc7\u8c03\u7528release\u6216\u8005reset\u53ef\u4ee5\u5c06\u6307\u9488\u7684\u6240\u6709\u6743\u4ece\u4e00\u4e2a\u975econst unique_ptr\u4f20\u7ed9\u53e6\u4e00\u4e2aunique_ptr: \u2003 unique_ptr p(p1.release()); p2.reset(p3.release()); \u2003\u4e0d\u80fd\u62f7\u8d1dunique_ptr\u7684\u89c4\u5219\u6709\u4e00\u4e2a\u4f8b\u5916\uff1a\u5373\u53ef\u4ee5\u62f7\u8d1d\u548c\u8d4b\u503c\u4e00\u4e2a\u5c06\u8981\u88ab\u9500\u6bc1\u7684unique_ptr, \u4f8b\u5982\u4ece\u51fd\u6570\u8fd4\u56de\u4e00\u4e2aunique_ptr\u3002 weak_ptr \u2003\u5c5e\u4e8e\u4e00\u79cd\u5f31\u5f15\u7528\uff0c\u6307\u5411shared_ptr\u6240\u7ba1\u7406\u7684\u5bf9\u8c61\u3002 \u2003weak_ptr\u4e3b\u8981\u7528\u6765\u89e3\u51b3\u5faa\u73af\u5f15\u7528\u7684\u95ee\u9898\u3002 class CB; class CA { public: CA() { cout << \"CA() called! \" << endl; } ~CA() { cout << \"~CA() called! \" << endl; } void set_ptr(shared_ptr<CB>& ptr) { m_ptr_b = ptr; } void b_use_count() { cout << \"b use count : \" << m_ptr_b.use_count() << endl; } private: shared_ptr<CB> m_ptr_b; }; class CB { public: CB() { cout << \"CB() called! \" << endl; } ~CB() { cout << \"~CB() called! \" << endl; } void set_ptr(shared_ptr<CA>& ptr) { m_ptr_a = ptr; } void a_use_count() { cout << \"a use count : \" << m_ptr_a.use_count() << endl; } private: shared_ptr<CA> m_ptr_a; //weak_ptr<CA> m_ptr_a; }; void test_refer_to_each_other() { shared_ptr<CA> ptr_a(new CA()); shared_ptr<CB> ptr_b(new CB()); cout << \"a use count : \" << ptr_a.use_count() << endl; cout << \"b use count : \" << ptr_b.use_count() << endl; ptr_a->set_ptr(ptr_b); ptr_b->set_ptr(ptr_a); cout << \"a use count : \" << ptr_a.use_count() << endl; cout << \"b use count : \" << ptr_b.use_count() << endl; } /* CA() called! CB() called! a use count : 1 b use count : 1 a use count : 2 b use count : 2 //\u5c06CB\u4e2dm_ptr_a\u7c7b\u578b\u6539\u4e3aweak_ptr CA() called! CB() called! a use count : 1 b use count : 1 a use count : 1 b use count : 2 ~CA() called! ~CB() called! */ \u6700\u540eCA\u548cCB\u7684\u5bf9\u8c61\u5e76\u6ca1\u6709\u88ab\u6790\u6784\uff0c\u5176\u4e2d\u7684\u5f15\u7528\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8d77\u521d\u5b9a\u4e49\u5b8cptr_a\u548cptr_b\u65f6\uff0c \u53ea\u6709\u2460\u2462\u4e24\u6761\u5f15\u7528\uff0c\u7136\u540e\u8c03\u7528\u51fd\u6570set_ptr\u540e\u53c8\u589e\u52a0\u4e86\u2461\u2463\u4e24\u6761\u5f15\u7528\uff0c\u5f53test_refer_to_each_other\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u65f6\uff0c \u5bf9\u8c61ptr_a\u548cptr_b\u88ab\u9500\u6bc1\uff0c\u4e5f\u5c31\u662f\u2460\u2462\u4e24\u6761\u5f15\u7528\u4f1a\u88ab\u65ad\u5f00\uff0c\u4f46\u662f\u2461\u2463\u4e24\u6761\u5f15\u7528\u4f9d\u7136\u5b58\u5728\uff0c\u6bcf\u4e00\u4e2a\u7684\u5f15\u7528\u8ba1\u6570\u90fd\u4e0d\u4e3a0\uff0c \u7ed3\u679c\u5c31\u5bfc\u81f4\u5176\u6307\u5411\u7684\u5185\u90e8\u5bf9\u8c61\u65e0\u6cd5\u6790\u6784\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u5c06\u4e24\u4e2a\u7c7b\u4e2d\u7684\u4e00\u4e2a\u6210\u5458\u53d8\u91cf\u6539\u4e3aweak_ptr\u5bf9\u8c61\uff0c\u56e0\u4e3aweak_ptr\u4e0d\u4f1a\u589e\u52a0\u5f15\u7528\u8ba1\u6570\uff0c\u4f7f\u5f97\u5f15\u7528\u5f62\u4e0d\u6210\u73af\uff0c \u6700\u540e\u5c31\u53ef\u4ee5\u6b63\u5e38\u7684\u91ca\u653e\u5185\u90e8\u7684\u5bf9\u8c61\uff0c\u4e0d\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\uff0c\u6bd4\u5982\u5c06CB\u4e2d\u7684\u6210\u5458\u53d8\u91cf\u6539\u4e3aweak_ptr\u5bf9\u8c61\u3002 \u2463\u8fd9\u6761\u5f15\u7528\u662f\u901a\u8fc7weak_ptr\u5efa\u7acb\u7684\uff0c\u5e76\u4e0d\u4f1a\u589e\u52a0\u5f15\u7528\u8ba1\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4CA\u7684\u5bf9\u8c61\u53ea\u6709\u4e00\u4e2a\u5f15\u7528\u8ba1\u6570\uff0c\u800cCB\u7684\u5bf9\u8c61\u53ea\u67092\u4e2a\u5f15\u7528\u8ba1\u6570\uff0c \u5f53test_refer_to_each_other\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u65f6\uff0c\u5bf9\u8c61ptr_a\u548cptr_b\u88ab\u9500\u6bc1\uff0c\u4e5f\u5c31\u662f\u2460\u2462\u4e24\u6761\u5f15\u7528\u4f1a\u88ab\u65ad\u5f00\uff0c \u6b64\u65f6CA\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u4f1a\u51cf\u4e3a0\uff0c\u5bf9\u8c61\u88ab\u9500\u6bc1\uff0c\u5176\u5185\u90e8\u7684m_ptr_b\u6210\u5458\u53d8\u91cf\u4e5f\u4f1a\u88ab\u6790\u6784\uff0c\u5bfc\u81f4CB\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u4f1a\u51cf\u4e3a0\uff0c \u5bf9\u8c61\u88ab\u9500\u6bc1\uff0c\u8fdb\u800c\u89e3\u51b3\u4e86\u5f15\u7528\u6210\u73af\u7684\u95ee\u9898\u3002 \u667a\u80fd\u6307\u9488\u4f7f\u7528\u89c4\u8303\uff1a \u2003\u4e0d\u4f7f\u7528\u76f8\u540c\u7684\u5185\u7f6e\u6307\u9488\u503c\u521d\u59cb\u5316\u6216reset\u591a\u4e2a\u667a\u80fd\u6307\u9488\uff1b \u2003\u4e0ddelete get()\u8fd4\u56de\u7684\u6307\u9488\uff1b \u2003\u4e0d\u4f7f\u7528get()\u521d\u59cb\u5316\u6216reset\u53e6\u4e00\u4e2a\u667a\u80fd\u6307\u9488\uff1b \u2003\u5982\u679c\u4f7f\u7528get()\u8fd4\u56de\u7684\u6307\u9488\uff0c\u8bb0\u4f4f\u5f53\u6700\u540e\u4e00\u4e2a\u5bf9\u5e94\u7684\u667a\u80fd\u6307\u9488\u9500\u6bc1\u540e\uff0c\u6307\u9488\u5c31\u53d8\u4e3a\u65e0\u6548\u4e86\uff1b \u2003\u5f53\u4f7f\u7528\u667a\u80fd\u6307\u9488\u7ba1\u7406\u7684\u8d44\u6e90\u4e0d\u662fnew\u5206\u914d\u7684\u5185\u5b58\uff0c\u8bb0\u4f4f\u4f20\u9012\u7ed9\u5b83\u4e00\u4e2a\u5220\u9664\u5668\u3002 \u2003\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u667a\u80fd\u6307\u9488\u7684\u9ed8\u8ba4\u5220\u9664\u5668\u5373\u53ef\u91ca\u653e\u4fdd\u5b58\u7684\u6307\u9488\uff0c\u4f46\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u5982\uff1a\u8d44\u6e90\u4e0d\u662f new \u51fa\u6765\u7684(\u4e00\u822c\u4e5f\u610f\u5473\u7740\u4e0d\u80fd delete), \u53ef\u80fd\u662f malloc \u51fa\u6765\u7684\u6216\u8005\u8d44\u6e90\u662f\u88ab\u7b2c\u4e09\u65b9\u5e93\u7ba1\u7406\u7684 (\u7b2c\u4e09\u65b9\u63d0\u4f9b\u8d44\u6e90\u83b7\u53d6\u548c\u8d44\u6e90\u91ca\u653e\u63a5\u53e3)\uff1b\u8d44\u6e90\u4e0d\u662f RAII \u7684, \u610f\u5473\u7740\u6790\u6784\u51fd\u6570\u4e0d\u4f1a\u628a\u8d44\u6e90\u5b8c\u5168\u91ca\u653e\u6389.\uff0c\u5373\u5355\u7eaf delete \u8fd8\u4e0d\u591f\uff1b \u2003 \u5982\u679cptr\u4e0d\u662f\u6307\u5411\u4e2aobject\uff0c\u800c\u662f\u4e00\u4e2aobject\u7684\u6570\u7ec4\u3002\u90a3\u4e48\u6784\u9020shared_ptr\u65f6\u5019\u5c31\u5f97\u81ea\u5df1\u4f20\u5165\u5220\u9664\u5668 , \u4f8b\u5982\u8fd9\u91cc\u4f20\u5165\u4e00\u4e2alambda\u7c7b\u578b\u7684deletor, shared_ptr(ptr, [](void*){delete [] ptr}) \u667a\u80fd\u6307\u9488\u4e0e\u52a8\u6001\u6570\u7ec4 \u2003\u53ef\u4ee5\u4f7f\u7528unique_ptr\u6765\u7ba1\u7406new\u5206\u914d\u7684\u6570\u7ec4; shared_ptr\u4e0d\u76f4\u63a5\u652f\u6301\u7ba1\u7406\u52a8\u6001\u6570\u7ec4\uff0c\u5fc5\u987b\u63d0\u4f9b\u81ea\u5df1\u5b9a\u4e49\u7684\u5220\u9664\u5668. unique_ptr< T [] > up(new T [10]); auto p = up.release(); //up\u653e\u5f03\u6307\u9488\u7684\u63a7\u5236\u6743\uff0c\u5e76\u8fd4\u56de\u6307\u9488\uff0c\u7136\u540e\u5c06up\u7f6e\u4e3a\u7a7a delete p; or up.reset(); // \u91ca\u653eup\u6307\u5411\u7684\u5bf9\u8c61\uff0c up.reset(q); up\u91ca\u653e\u539f\u5148\u5360\u6709\u5185\u5b58\uff0c\u6539\u4e3a\u6307\u5411q\u6240\u6307\u5411\u7684\u5185\u5b58 /*\u6b64\u65f6\u4e0d\u80fd\u4f7f\u7528\u70b9\u548c\u7bad\u5934\u6210\u5458\u8fd0\u7b97\u7b26\uff0c\u56e0\u4e3aup\u4e0d\u662f\u6307\u5411\u5355\u4e2a\u5bf9\u8c61;\u4f46\u53ef\u4ee5\u4f7f\u7528\u4e0b\u6807\u8fd0\u7b97\u7b26\u8bbf\u95ee\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u3002*/ shared_ptr< int > sp(new int[10], [](int * p){delete [] p;}); sp.reset(); /* \u4e0d\u8fc7shared_ptr\u6ca1\u6709\u5b9a\u4e49\u4e0b\u6807\u8fd0\u7b97\u7b26\uff0c\u4e14\u6240\u6709\u667a\u80fd\u6307\u9488\u7c7b\u578b\u90fd\u4e0d\u652f\u6301\u6307\u9488\u7b97\u672f\u8fd0\u7b97\uff0c\u56e0\u6b64\u53ea\u80fd\u901a\u8fc7get()\u83b7\u53d6\u5185\u7f6e\u6307\u9488\uff0c \u7528\u6765\u8bbf\u95ee\u6570\u7ec4\u5143\u7d20\u3002*/ \u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u52a8\u6001\u5185\u5b58\uff1f \u2003\u7a0b\u5e8f\u4e0d\u77e5\u9053\u81ea\u5df1\u9700\u8981\u4f7f\u7528\u591a\u5c11\u5bf9\u8c61, \u5982\u5bb9\u5668; \u7a0b\u5e8f\u4e0d\u77e5\u9053\u6240\u9700\u5bf9\u8c61\u7684\u51c6\u786e\u7c7b\u578b\uff1b\u7a0b\u5e8f\u9700\u8981\u5728\u591a\u4e2a\u5bf9\u8c61\u95f4\u5171\u4eab\u6570\u636e\u3002 shared_ptr\u4e0eunique_ptr\u7684\u53e6\u4e00\u4e2a\u5dee\u5f02\uff1a\u5141\u8bb8\u7528\u6237\u91cd\u8f7d\u9ed8\u8ba4\u5220\u9664\u5668\u7684\u65b9\u5f0f \u524d\u8005\u53ea\u8981\u5728\u521b\u5efa\u6216reset\u6307\u9488\u65f6\u4f20\u9012\u4e00\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61\u5373\u53ef\uff0c\u540e\u8005\u53ea\u80fd\u5728\u5b9a\u4e49\u65f6\u4ee5\u663e\u5f0f\u6a21\u677f\u5b9e\u53c2\u7684\u5f62\u5f0f\u63d0\u4f9b\u5220\u9664\u5668\u7684\u7c7b\u578b\u3002 \u901a\u8fc7\u5728\u7f16\u8bd1\u65f6\u7ed1\u5b9a\u5220\u9664\u5668\uff0cunique_ptr\u907f\u514d\u4e86\u95f4\u63a5\u8c03\u7528\u5220\u9664\u5668\u7684\u8fd0\u884c\u65f6\u5f00\u9500\uff1b\u800c\u5728\u8fd0\u884c\u65f6\u7ed1\u5b9a\u5220\u9664\u5668\uff0cshared_ptr\u4f7f\u5f97\u7528\u6237\u91cd\u8f7d\u5220\u9664\u5668\u66f4\u4e3a\u65b9\u4fbf\u3002 shared_ptr p(q, d); p.reset(q, d); //\u65e0\u9700\u5728\u5b9a\u4e49\u65f6\u6307\u660e ................................................................................. unique_ptr(connection, decltype(end_connection)*) p(&c, end_connection); //end_connection \u4e0eend_connection_2\u4e24\u8005\u8fd4\u56de\u7c7b\u578b\u76f8\u540c\uff0c\u5373\u8981\u6c42\u5fc5\u987b\u5728\u5b9a\u4e49\u65f6\u63d0\u4f9b\u5220\u9664\u5668\u7684\u7c7b\u578b\u3002 p.reset(&c, end_connection_2) About this pointer \u2003 this\u6307\u9488\uff0c\u5728 C++ \u4e2d\uff0c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u80fd\u901a\u8fc7 this \u6307\u9488\u6765\u8bbf\u95ee\u81ea\u5df1\u7684\u5730\u5740\u3002 this \u6307\u9488\u662f\u6240\u6709\u6210\u5458\u51fd\u6570\u7684\u9690\u542b\u53c2\u6570\u3002 \u56e0\u6b64\uff0c\u5728\u6210\u5458\u51fd\u6570\u5185\u90e8\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u6307\u5411\u8c03\u7528\u5bf9\u8c61\u3002\u5f53\u6211\u4eec\u8c03\u7528\u6210\u5458\u51fd\u6570\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u66ff\u67d0\u4e2a\u5bf9\u8c61\u8c03\u7528\u5b83\u3002 \u2003\u6210\u5458\u51fd\u6570\u901a\u8fc7\u4e00\u4e2a\u540d\u4e3a this \u7684\u989d\u5916\u9690\u5f0f\u53c2\u6570\u6765\u8bbf\u95ee\u8c03\u7528\u5b83\u7684\u90a3\u4e2a\u5bf9\u8c61\uff0c\u5f53\u6211\u4eec\u8c03\u7528\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u65f6\uff0c\u7528\u8bf7\u6c42\u8be5\u51fd\u6570\u7684\u5bf9\u8c61\u5730\u5740\u521d\u59cb\u5316 this\uff1b\u5bf9\u4e8e\u6211\u4eec\u6765\u8bf4\uff0cthis \u5f62\u53c2\u662f\u9690\u5f0f\u5b9a\u4e49\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u4efb\u4f55\u81ea\u5b9a\u4e49\u540d\u4e3a this \u7684\u53c2\u6570\u6216\u53d8\u91cf\u7684\u884c\u4e3a\u90fd\u662f\u975e\u6cd5\u7684\u3002 \u2003\u4e00\u822c\u6765\u8bf4\uff0cthis\u7c7b\u578b\u662f\u4e00\u4e2a\u6307\u5411 \u975e\u5e38\u91cf\u7c7b \u7c7b\u578b\u7684const\u6307\u9488\uff08eg. class_name* const this\uff09\uff0c\u56e0\u6b64\u4e0d\u80fd\u5c06this\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5e38\u91cf\u5bf9\u8c61\u4e0a\uff1b\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u8c03\u7528\u5e38\u91cf\u5bf9\u8c61\u7684\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u7528\u8be5\u5e38\u91cf\u5bf9\u8c61\u7684\u5730\u5740\u521d\u59cb\u5316this\uff0c\u4f46this\u6307\u5411\u7684\u662f\u975e\u5e38\u91cf\u7c7b\u7c7b\u578b\uff0c\u5c06\u5f15\u53d1\u7f16\u8bd1\u5668\u62a5\u9519\u3002 \u2003c++\u5141\u8bb8\u7684\u505a\u6cd5\u662f\u628aconst\u5173\u952e\u5b57\u653e\u5728\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e4b\u540e\uff0c\u4ee5\u6b64\u6765\u6539\u53d8this\u6307\u9488\u7684\u7c7b\u578b\u3002\u56e0\u6b64\u5728\u5e38\u91cf\u5bf9\u8c61\u8c03\u7528\u5e38\u91cf\u6210\u5458\u51fd\u6570\u65f6\uff0cthis\u6307\u9488\u7c7b\u578b\u4e3a\u6307\u5411 const \u5bf9\u8c61\u7684 const \u6307\u9488\u3002 \u5f15\u7528 \u2003\u5f15\u7528\u5e76\u975e\u5bf9\u8c61\uff0c\u800c\u662f\u4e3a\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u6240\u8d77\u7684\u53e6\u5916\u4e00\u4e2a\u540d\u5b57\uff0c\u56e0\u6b64\u4e0d\u5b58\u5728\u5f15\u7528\u7684\u5f15\u7528\u3002\u5b9a\u4e49\u5f15\u7528\u65f6\uff0c\u7a0b\u5e8f\u628a\u5f15\u7528\u548c\u5b83\u7684\u521d\u59cb\u503c\u5bf9\u8c61\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u800c\u4e0d\u662f\u628a\u521d\u59cb\u503c\u62f7\u8d1d\u7ed9\u5f15\u7528\u3002 \u2003\u5f15\u7528\u7684\u7c7b\u578b\u5fc5\u987b\u4e0e\u5176\u6240\u5f15\u7528\u5bf9\u8c61\u7684\u7c7b\u578b\u4e00\u81f4\uff0c\u4f46\u662f\u6709\u4e24\u79cd\u4f8b\u5916\uff1a \u7b2c\u4e00\u79cd\uff1a\u5728\u521d\u59cb\u5316\u5e38\u91cf\u5f15\u7528\u65f6\u5141\u8bb8\u7528\u4efb\u610f\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u521d\u59cb\u503c\uff0c\u53ea\u8981\u8be5\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u80fd\u8f6c\u6362\u6210\u5f15\u7528\u7684\u7c7b\u578b\u5373\u53ef\uff0c\u5c24\u5176\uff0c\u5141\u8bb8\u4e3a\u4e00\u4e2a\u5e38\u91cf\u5f15\u7528\u7ed1\u5b9a\u975e\u5e38\u91cf\u7684\u5bf9\u8c61\u3001\u5b57\u9762\u503c\u3001\u751a\u81f3\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002\u6b64\u65f6\uff0c\u901a\u8fc7\u8be5\u5e38\u91cf\u5f15\u7528\u4e0d\u80fd\u4fee\u6539\u5668\u7ed1\u5b9a\u7684\u5bf9\u8c61\u7684\u503c\uff0c\u4f46\u82e5\u8be5\u7ed1\u5b9a\u7684\u5bf9\u8c61\u672c\u8eab\u662f\u975e\u5e38\u91cf\uff0c\u53ef\u4ee5\u81ea\u6211\u4fee\u6539\u3002 \u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f\u6d3e\u751f\u7c7b\u5f15\u7528\u5411\u57fa\u7c7b\u5f15\u7528\u7684\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u3002 \u2003 return by reference: \u4f20\u9012\u8005\u65e0\u9700\u77e5\u9053\u63a5\u6536\u8005\u662f\u5426\u662f\u4ee5reference\u5f62\u5f0f\u63a5\u6536\uff1b\u800creturen by pointer\u8981\u6c42\u63a5\u6536\u8005\u5fc5\u987b\u662f\u4ee5pointer\u5f62\u5f0f\u3002 C++ 11 \u5f15\u7528 \u5de6\u503c\u5f15\u7528 and \u53f3\u503c\u5f15\u7528 \u2003\u5de6\u503c\u5f15\u7528\u201c&\u201d\u548c\u53f3\u503c\u5f15\u7528\u201c&&\u201d\uff1aC++\u4e2d\u6240\u6709\u7684\u503c\u90fd\u5fc5\u7136\u5c5e\u4e8e\u5de6\u503c\u3001\u53f3\u503c\u4e8c\u8005\u4e4b\u4e00\u3002\u5de6\u503c\u662f\u6307\u8868\u8fbe\u5f0f\u7ed3\u675f\u540e\u4f9d\u7136\u5b58\u5728\u7684\u6301\u4e45\u5316\u5bf9\u8c61\uff0c \u53f3\u503c\u662f\u6307\u8868\u8fbe\u5f0f\u7ed3\u675f\u65f6\u5c31\u4e0d\u518d\u5b58\u5728\u7684\u4e34\u65f6\u5bf9\u8c61 \u3002\u6240\u6709\u7684\u5177\u540d\u53d8\u91cf\u6216\u8005\u5bf9\u8c61\u90fd\u662f\u5de6\u503c\uff0c\u800c\u53f3\u503c\u4e0d\u5177\u540d\u3002\u533a\u5206\u5de6\u503c\u548c\u53f3\u503c\u7684\u4fbf\u6377\u65b9\u6cd5\uff1a\u770b\u80fd\u4e0d\u80fd\u5bf9\u8868\u8fbe\u5f0f\u53d6\u5730\u5740\uff0c\u5982\u679c\u80fd\uff0c\u5219\u4e3a\u5de6\u503c\uff0c\u5426\u5219\u4e3a\u53f3\u503c\u3002 \u2003 \u867d\u7136\u5de6\u503c\u5f15\u7528\u4e0d\u53ef\u4ee5\u7ed1\u5b9a\u53f3\u503c\uff0c\u4f46\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u5374\u53ef\u4ee5\u7ed1\u5b9aconst\u53f3\u503c \u2003 const int &a = 1; //a\u5e76\u4e0d\u80fd\u88ab\u4fee\u6539 \u89c4\u52191. \u5f15\u7528\u6298\u53e0 \u5982\u679c\u95f4\u63a5\u7684\u521b\u5efa\u4e00\u4e2a\u5f15\u7528\u7684\u5f15\u7528\uff0c\u5219\u8fd9\u4e9b\u5f15\u7528\u5c31\u4f1a\u201c\u6298\u53e0\u201d\u3002\u5728\u6240\u6709\u60c5\u51b5\u4e0b\uff08\u9664\u4e86\u4e00\u4e2a\u4f8b\u5916\uff09\uff0c\u5f15\u7528\u6298\u53e0\u6210\u4e00\u4e2a\u666e\u901a\u7684\u5de6\u503c\u5f15\u7528\u7c7b\u578b\u3002\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u5f15\u7528\u4f1a\u6298\u53e0\u6210\u53f3\u503c\u5f15\u7528\uff0c\u5373\u53f3\u503c\u5f15\u7528\u7684\u53f3\u503c\u5f15\u7528\uff0c T&& &&\u3002\u5373 X& &\u3001X& &&\u3001X&& &\u90fd\u6298\u53e0\u6210X& X&& &&\u6298\u53e0\u4e3aX&& \u89c4\u52192. \u53f3\u503c\u5f15\u7528\u7279\u6b8a\u7c7b\u578b\u63a8\u65ad\u89c4\u5219 \u2003\u5f53\u5c06\u4e00\u4e2a\u5de6\u503c\u4f20\u9012\u7ed9\u4e00\u4e2a\u53c2\u6570\u662f\u53f3\u503c\u5f15\u7528\u7684\u51fd\u6570\uff0c\u4e14\u6b64\u53f3\u503c\u5f15\u7528\u6307\u5411\u6a21\u677f\u7c7b\u578b\u53c2\u6570(T&&)\u65f6\uff0c\u7f16\u8bd1\u5668\u63a8\u65ad\u6a21\u677f\u53c2\u6570\u7c7b\u578b\u4e3a\u5b9e\u53c2\u7684\u5de6\u503c\u5f15\u7528\uff0c\u5982 template<typename T> void f(T&&); int i = 42; f(i) // \u6a21\u677f\u53c2\u6570\u7c7b\u578bT\u5c06\u63a8\u65ad\u4e3aint&\u7c7b\u578b\uff0c\u800c\u975eint\u3002 \u2003\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u5f62\u53c2\u662f\u4e00\u4e2a\u6307\u5411 \u6a21\u677f\u7c7b\u578b \u7684\u53f3\u503c\u5f15\u7528\uff0c\u5219\u8be5\u53c2\u6570\u53ef\u4ee5\u88ab\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5de6\u503c\u4e0a\u3002 \u89c4\u52193 \u2003\u867d\u7136\u4e0d\u80fd\u9690\u5f0f\u7684\u5c06\u4e00\u4e2a\u5de6\u503c\u8f6c\u6362\u4e3a\u53f3\u503c\u5f15\u7528\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7static_cast\u663e\u793a\u5730\u5c06\u4e00\u4e2a\u5de6\u503c\u8f6c\u6362\u4e3a\u4e00\u4e2a\u53f3\u503c\u3002 std::move \u2003\u5728C++11\u4e2d\uff0c\u6807\u51c6\u5e93\u5728 \u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6709\u7528\u7684\u51fd\u6570std::move\uff0cstd::move\u5e76\u4e0d\u80fd\u79fb\u52a8\u4efb\u4f55\u4e1c\u897f\uff0c\u5b83\u552f\u4e00\u7684\u529f\u80fd\u662f\u5c06\u4e00\u4e2a\u5de6\u503c\u5f3a\u5236\u8f6c\u5316\u4e3a\u53f3\u503c\u5f15\u7528\uff0c\u7ee7\u800c\u53ef\u4ee5\u901a\u8fc7\u53f3\u503c\u5f15\u7528\u4f7f\u7528\u8be5\u503c\uff0c\u4ee5\u7528\u4e8e\u79fb\u52a8\u8bed\u4e49\u3002\u4ece\u5b9e\u73b0\u4e0a\u8bb2\uff0cstd::move\u81ea\u8eab\u9664\u4e86\u505a\u4e00\u4e9b\u53c2\u6570\u7684\u63a8\u65ad\u4e4b\u5916\uff0c\u8fd4\u56de\u53f3\u503c\u5f15\u7528\u672c\u8d28\u4e0a\u8fd8\u662f\u9760static_cast \u5b8c\u6210\u7684\u3002 template<typename T> typename remove_reference<T>::type && move(T&& t) { return static_cast<typename remove_reference<T>::type &&>(t); } \u2003\u2003\u6839\u636e\u89c4\u52191\uff0c2\u53ef\u77e5\uff0cmove\u65e2\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u5de6\u503c\uff0c\u4e5f\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u53f3\u503c\u3002 \u2003\u2003 std::move\u662f\u5c06\u5bf9\u8c61\u7684\u72b6\u6001\u6216\u8005\u6240\u6709\u6743\u4ece\u4e00\u4e2a\u5bf9\u8c61\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u53ea\u662f\u8f6c\u79fb \uff0c\u6ca1\u6709\u5185\u5b58\u7684\u642c\u8fc1\u6216\u8005\u5185\u5b58\u62f7\u8d1d\u6240\u4ee5\u53ef\u4ee5\u63d0\u9ad8\u5229\u7528\u6548\u7387,\u6539\u5584\u6027\u80fd\u3002 \u2003\u2003 eg: int && rr1 = std::move(rr); //\u8c03\u7528move\u610f\u5473\u7740\u9664\u5bf9rr\u8d4b\u503c\u6216\u9500\u6bc1\u5b83\u65f6\uff0c\u6211\u4eec\u5c06\u4e0d\u518d\u4f7f\u7528\u5b83\u3002 std::forward \u2003\u5b8c\u7f8e\u8f6c\u53d1: \u5b8c\u7f8e\u8f6c\u53d1\u5b9e\u73b0\u4e86\u53c2\u6570\u5728\u4f20\u9012\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u5176\u503c\u5c5e\u6027\u7684\u529f\u80fd\uff0c\u5373\u82e5\u662f\u5de6\u503c\uff0c\u5219\u4f20\u9012\u4e4b\u540e\u4ecd\u7136\u662f\u5de6\u503c\uff0c\u82e5\u662f\u53f3\u503c\uff0c\u5219\u4f20\u9012\u4e4b\u540e\u4ecd\u7136\u662f\u53f3\u503c\u3002 \u2003std::forward\u53ea\u6709\u5728\u5b83\u7684\u53c2\u6570\u7ed1\u5b9a\u5230\u4e00\u4e2a\u53f3\u503c\u4e0a\u7684\u65f6\u5019\uff0c\u5b83\u624d\u8f6c\u6362\u5b83\u7684\u53c2\u6570\u5230\u4e00\u4e2a\u53f3\u503c\u3002 class Foo { public: std::string member; template<typename T> Foo(T&& member): member{std::forward<T>(member)} {} }; /* \u4f20\u9012\u4e00\u4e2alvalue\u6216\u8005\u4f20\u9012\u4e00\u4e2aconst lvaue: \u4f20\u9012\u4e00\u4e2alvalue\uff0c\u6a21\u677f\u63a8\u5bfc\u4e4b\u540e T = std::string& \u4f20\u9012\u4e00\u4e2aconst lvaue, \u6a21\u677f\u63a8\u5bfc\u4e4b\u540eT = const std::string& T& &&\u5c06\u6298\u53e0\u4e3aT&\uff0c\u5373std::string& && \u6298\u53e0\u4e3a std::string& \u6700\u7ec8\u51fd\u6570\u4e3a: Foo(string& member): member{std::forward<string&>(member)} {} std::forward<string&>(member)\u5c06\u8fd4\u56de\u4e00\u4e2a\u5de6\u503c\uff0c\u6700\u7ec8\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570, \u4f20\u9012\u4e00\u4e2arvalue \u4f20\u9012\u4e00\u4e2arvalue: \u6a21\u677f\u63a8\u5bfc\u4e4b\u540e T = std::string \u6700\u7ec8\u51fd\u6570\u4e3a: Foo(string&& member): member{std::forward<string>(member)} {} std::forward<string>(member) \u5c06\u8fd4\u56de\u4e00\u4e2a\u53f3\u503c\uff0c\u6700\u7ec8\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff1b */ \u5f15\u7528\u9650\u5b9a\u7b26 \u2003\u5728\u53c2\u6570\u5217\u8868\u540e\u653e\u7f6e& \u6216\u8005&&, \u5206\u522b\u6307\u51fathis\u6307\u9488\u6307\u5411\u4e00\u4e2a\u5de6\u503c\u6216\u53f3\u503c\uff1b\u53ea\u80fd\u4f5c\u7528\u4e8e\u975estatic\u6210\u5458\u51fd\u6570\uff0c\u4e14\u5fc5\u987b\u540c\u65f6\u51fa\u73b0\u5728\u51fd\u6570\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u4e2d\uff1b\u82e5\u540c\u65f6\u91c7\u7528const\u9650\u5b9a\uff0c\u5219\u5f15\u7528\u9650\u5b9a\u7b26\u5fc5\u987b\u653e\u5728const\u540e\u9762\u3002\u4e14\u5982\u679c\u5b9a\u4e49\u4e24\u4e2a\u6216\u4ee5\u4e0a\u5177\u6709\u76f8\u540c\u540d\u5b57\u548c\u53c2\u6570\u5217\u8868\u7684\u6210\u5458\u51fd\u6570\uff0c\u5fc5\u987b\u5168\u90e8\u52a0\u4e0a\u5f15\u7528\u9650\u5b9a\u7b26\uff08\u4e0d\u540c\u4e8econst\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u662f\u5426\u52a0const\u6765\u91cd\u8f7d\uff09\u3002 \u6307\u9488\u4e0e\u5f15\u7528\u533a\u522b","title":"\u6307\u9488 and \u5f15\u7528"},{"location":"CPP/pointer_reference/#and","text":"","title":"\u6307\u9488 and \u5f15\u7528"},{"location":"CPP/pointer_reference/#_1","text":"\u7c7b\u578b: \u5185\u7f6e\u6307\u9488\uff1a\u7531new\u64cd\u4f5c\u8fd4\u56de\u7684\u6307\u9488\uff0c\u7ed1\u5b9a\u7684\u662f\u52a8\u6001\u5206\u914d\u5bf9\u8c61\uff1b\u666e\u901a\u6307\u9488\uff1a\u7c7b\u4f3c int *p =1; \u667a\u80fd\u6307\u9488; \u9690\u5f0f\u9500\u6bc1\u4e00\u4e2a\u5185\u7f6e\u6307\u9488\u7c7b\u578b\u7684\u6210\u5458\u4e0d\u4f1adelete\u5b83\u6240\u6307\u5411\u7684\u5bf9\u8c61\uff1b\u5f53\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u6216\u8005\u6307\u9488\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\uff0c\u6790\u6784\u51fd\u6570\u4e0d\u4f1a\u6267\u884c\u3002\uff08\u662f\u4e3a\u4e86\u907f\u514d\u5b58\u5728\u591a\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u5757\u5185\u5b58\u65f6\uff0c\u8bef\u56de\u6536\uff09\u4f46\u662f\u6307\u9488\u53d8\u91cf\u672c\u8eab\u6240\u5360\u7684\u5185\u5b58\u4f1a\u88ab\u56de\u6536\u3002 \u6307\u9488\u672c\u8eab\u5c5e\u4e8e\u5bf9\u8c61\uff0c\u5176\u5141\u8bb8\u5bf9\u6307\u9488\u8d4b\u503c\u548c\u62f7\u8d1d\uff0c\u5728\u5b9a\u4e49\u65f6\u65e0\u987b\u8d4b\u521d\u503c\uff1b\u800c\u5728\u5757\u4f5c\u7528\u57df\u5185\u5b9a\u4e49\u7684\u6307\u9488\u5982\u679c\u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0c\u5c06\u662f\u4e00\u4e2a\u4e0d\u786e\u5b9a\u7684\u503c\u3002 \u7a7a\u6307\u9488\uff1aint *p = nullptr; int *p =0; int *p =NULL; \u4e0d\u5141\u8bb8\u5c06int\u53d8\u91cf\u8d4b\u503c\u7ed9\u6307\u9488\uff0c\u5373\u4f7f\u5176\u503c\u662f0\uff0c\u5373 int a =0; int * p = a; //\u9519\u8bef \u7a7a\u6307\u9488\u6307\u5411\u7684\u5730\u5740\u662f\u7279\u6b8a\u7684\uff0c\u8be5\u5730\u5740\u4e0d\u5141\u8bb8\u5b58\u653e\u6570\u636e\u548c\u4e0d\u5141\u8bb8\u7a0b\u5e8f\u8bbf\u95ee\uff0c\u6240\u4ee5\u7a7a\u6307\u9488\u4e0d\u80fd\u64cd\u4f5c\u8be5\u5730\u5740\u91cc\u7684\u4e1c\u897f\uff0c \u53ef\u4ee5\u7406\u89e3\u4e3a\u201c\u6307\u9488\u6307\u5411\u4e86\u7a7a\uff0c\u65e0\u6cd5\u64cd\u4f5c\u4e86\u201d \u6307\u9488\u6709\u4e24\u4e2a\u5c5e\u6027:\u6307\u5411\u53d8\u91cf/\u5bf9\u8c61\u7684\u5730\u5740\u548c\u957f\u5ea6\uff0c\u4f46\u662f\u6307\u9488\u53ea\u5b58\u50a8\u5730\u5740,\u957f\u5ea6\u5219\u53d6\u51b3\u4e8e\u6307\u9488\u7684\u7c7b\u578b\uff1b \u7f16\u8bd1\u5668\u6839\u636e\u6307\u9488\u7684\u7c7b\u578b\u4ece\u6307\u9488\u6307\u5411\u7684\u5730\u5740\u5411\u540e\u5bfb\u5740\uff0c\u6307\u9488\u7c7b\u578b\u4e0d\u540c\u5219\u5bfb\u5740\u8303\u56f4\u4e5f\u4e0d\u540c, \u6bd4\u5982:int*\u4ece\u6307\u5b9a\u5730\u5740\u5411\u540e\u5bfb\u627e4\u5b57\u8282\u4f5c\u4e3a\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143; double*\u4ece\u6307\u5b9a\u5730\u5740\u5411\u540e\u5bfb\u627e8\u5b57\u8282\u4f5c\u4e3a\u53d8\u91cf\u7684\u5b58\u50a8\u5355\u5143\u3002 \u800cvoid* \u6307\u9488\u5219\u6ca1\u6709\u7c7b\u578b\uff0c\u5176\u53ef\u4ee5\u5b58\u653e\u4efb\u610f\u7c7b\u578b\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u4f46\u6211\u4eec\u4e0d\u80fd\u76f4\u63a5\u64cd\u4f5cvoid* \u6307\u9488\u6240\u6307\u5411\u7684\u5bf9\u8c61\u3002 void\u6307\u9488\u4e0d\u80fd\u53c2\u4e0e\u6307\u9488\u8fd0\u7b97,\u9664\u975e\u8fdb\u884c\u8f6c\u6362\uff0c(type*) vp++; const\u6307\u9488\uff1a int * const a; \u8bb0\u4f4f*\u653e\u5728const\u4e4b\u524d\u7528\u4ee5\u8bf4\u660e\u6307\u9488\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u4e0d\u53d8\u7684\u662f\u6307\u9488\u672c\u8eab\u800c\u975e\u6307\u5411\u7684\u5bf9\u8c61\u7684\u503c constexpr\u6307\u9488\uff1a constexpr int * p = nullptr; p\u662f\u4e00\u4e2a\u6307\u5411\u6574\u6570\u7684\u5e38\u91cf\u6307\u9488\uff0c\u56e0\u4e3aconstexpr\u628a\u5b83\u6240\u5b9a\u4e49\u7684\u5bf9\u8c61\u7f6e\u4e3a\u4e86\u9876\u5c42const\u3002 \u89e3\u5f15\u7528\uff1a\u5bf9\u6307\u9488\u89e3\u5f15\u7528\u4f1a\u5f97\u5230\u6240\u6307\u7684\u5bf9\u8c61\uff0c\u662f\u4e00\u4e2a\u5de6\u503c\uff1b\u800c\u8fed\u4ee3\u5668\u7684\u89e3\u5f15\u7528\u662f\u91cd\u8f7d\u4e86*\u8fd0\u7b97\u7b26\uff0c\u5176\u8fd4\u56de\u6240\u6307\u5143\u7d20\u7684\u5f15\u7528\u3002 \u6307\u9488\u7684\u7c7b\u578b\u5fc5\u987b\u548c\u5176\u6240\u6307\u5411\u5bf9\u8c61\u7684\u7c7b\u578b\u4e00\u81f4\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\u4f8b\u5916: \u2003\u7b2c\u4e00\u79cd\uff0c\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\u6ca1\u6709\u89c4\u5b9a\u5176\u6240\u6307\u5411\u7684\u5bf9\u8c61\u5fc5\u987b\u662f\u4e00\u4e2a\u5e38\u91cf\uff0c\u4ec5\u4ec5\u8981\u6c42\u4e0d\u80fd\u901a\u8fc7\u8be5\u6307\u9488\u6539\u53d8\u5bf9\u8c61\u7684\u503c\u3002 \u2003\u7b2c\u4e8c\u79cd\uff0c\u6307\u9488\u7c7b\u578b\u6307\u5411\u57fa\u7c7b\uff0c\u4f46\u5176\u6240\u6307\u5411\u5b9e\u9645\u5bf9\u8c61\u662f\u6d3e\u751f\u7c7b\u7c7b\u578b\u3002 int *p: p\u662f\u6307\u5411int\u578b\u53d8\u91cf\u7684\u6307\u9488\u53d8\u91cf int* *p\uff1a p\u662f\u6307\u5411int*\u578b\u53d8\u91cf\u7684\u6307\u9488\u53d8\u91cf\uff0c\u5373\u6307\u5411\u6307\u9488\u7684\u6307\u9488\u3002 T *p; // p+1 \u5b9e\u9645\u4e3ap+sizeof(T)*1; \u667a\u80fd\u6307\u9488 \uff1a\u81ea\u52a8\u91ca\u653e\u6240\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u5176\u662f\u4e00\u79cd\u6a21\u677f\uff0c\u5728\u521b\u5efa\u667a\u80fd\u6307\u9488\u65f6\uff0c\u9700\u8981\u63d0\u4f9b\u6307\u9488\u53ef\u4ee5\u6307\u5411\u7684\u7c7b\u578b\uff0c\u6709\u4e09\u79cd\u7c7b\u578b\uff0c\u90fd\u5b9a\u4e49\u5728memory\u5934\u6587\u4ef6\u4e2d\u3002 shared_ptr \u2003\u5141\u8bb8\u591a\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61; \u2003\u5f53\u7528\u4e00\u4e2ashared_ptr\u521d\u59cb\u5316\u53e6\u4e00\u4e2ashared_ptr\u6216\u8005\u5c06\u5b83\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u4e00\u4e2a\u51fd\u6570\u4ee5\u53ca\u4f5c\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u5b83\u6240\u5173\u8054\u7684\u8ba1\u6570\u5668\uff08\u5f15\u7528\u8ba1\u6570\uff09\u5c31\u4f1a\u9012\u589e\uff1b\u82e5\u662f\u7ed9\u5176\u8d4b\u4e88\u65b0\u503c\uff0c\u6216\u662fshared_ptr\u88ab\u9500\u6bc1\uff0c \u5b83\u5c31\u4f1a\u81ea\u52a8\u91ca\u653e\u81ea\u5df1\u6240\u7ba1\u7406\u7684\u5bf9\u8c61\u3002 \u2003 \u7528\u6765\u521d\u59cb\u5316\u667a\u80fd\u6307\u9488\u7684\u666e\u901a\u6307\u9488\u5fc5\u987b\u6307\u5411\u52a8\u6001\u5185\u5b58(\u901a\u8fc7new\u5206\u914d\u7684\u5185\u5b58)\uff0c\u56e0\u4e3a\u667a\u80fd\u6307\u9488\u9ed8\u8ba4\u4f7f\u7528delete \u6765\u91ca\u653e\u6240\u5173\u8054\u7684\u5bf9\u8c61\u3002\u5982\u679c\u5c06\u667a\u80fd\u6307\u9488\u7ed1\u5b9a\u5230\u4e00\u4e2a\u6307\u5411\u5176\u4ed6\u7c7b\u578b\u7684\u8d44\u6e90\u7684\u6307\u9488\u4e0a\uff0c\u5fc5\u987b\u63d0\u4f9b\u81ea\u5df1\u7684\u64cd\u4f5c\u6765\u66ff\u4ee3delete. \u2003 \u63a5\u53d7\u6307\u9488\u53c2\u6570\u7684\u667a\u80fd\u6307\u9488\u6784\u9020\u51fd\u6570\u662fexplicit, \u610f\u5473\u7740\u5fc5\u987b\u7528\u76f4\u63a5\u521d\u59cb\u5316\u5f62\u5f0f\u6765\u521d\u59cb\u5316\u4e00\u4e2a\u667a\u80fd\u6307\u9488\uff1a shared_ptr < int > p1(new int(1)); shared_ptr < int > p2 = new int(1); //\u9519\u8bef unique_ptr \u2003\u72ec\u5360\u6240\u6307\u5411\u7684\u5bf9\u8c61, \u67d0\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2aunique_ptr\u6307\u5411\u4e00\u4e2a\u7ed9\u5b9a\u7684\u5bf9\u8c61\uff0c\u6545\u5176\u4e0d\u652f\u6301\u62f7\u8d1d\u548c\u8d4b\u503c\u64cd\u4f5c; \u2003\u901a\u8fc7\u8c03\u7528release\u6216\u8005reset\u53ef\u4ee5\u5c06\u6307\u9488\u7684\u6240\u6709\u6743\u4ece\u4e00\u4e2a\u975econst unique_ptr\u4f20\u7ed9\u53e6\u4e00\u4e2aunique_ptr: \u2003 unique_ptr p(p1.release()); p2.reset(p3.release()); \u2003\u4e0d\u80fd\u62f7\u8d1dunique_ptr\u7684\u89c4\u5219\u6709\u4e00\u4e2a\u4f8b\u5916\uff1a\u5373\u53ef\u4ee5\u62f7\u8d1d\u548c\u8d4b\u503c\u4e00\u4e2a\u5c06\u8981\u88ab\u9500\u6bc1\u7684unique_ptr, \u4f8b\u5982\u4ece\u51fd\u6570\u8fd4\u56de\u4e00\u4e2aunique_ptr\u3002 weak_ptr \u2003\u5c5e\u4e8e\u4e00\u79cd\u5f31\u5f15\u7528\uff0c\u6307\u5411shared_ptr\u6240\u7ba1\u7406\u7684\u5bf9\u8c61\u3002 \u2003weak_ptr\u4e3b\u8981\u7528\u6765\u89e3\u51b3\u5faa\u73af\u5f15\u7528\u7684\u95ee\u9898\u3002 class CB; class CA { public: CA() { cout << \"CA() called! \" << endl; } ~CA() { cout << \"~CA() called! \" << endl; } void set_ptr(shared_ptr<CB>& ptr) { m_ptr_b = ptr; } void b_use_count() { cout << \"b use count : \" << m_ptr_b.use_count() << endl; } private: shared_ptr<CB> m_ptr_b; }; class CB { public: CB() { cout << \"CB() called! \" << endl; } ~CB() { cout << \"~CB() called! \" << endl; } void set_ptr(shared_ptr<CA>& ptr) { m_ptr_a = ptr; } void a_use_count() { cout << \"a use count : \" << m_ptr_a.use_count() << endl; } private: shared_ptr<CA> m_ptr_a; //weak_ptr<CA> m_ptr_a; }; void test_refer_to_each_other() { shared_ptr<CA> ptr_a(new CA()); shared_ptr<CB> ptr_b(new CB()); cout << \"a use count : \" << ptr_a.use_count() << endl; cout << \"b use count : \" << ptr_b.use_count() << endl; ptr_a->set_ptr(ptr_b); ptr_b->set_ptr(ptr_a); cout << \"a use count : \" << ptr_a.use_count() << endl; cout << \"b use count : \" << ptr_b.use_count() << endl; } /* CA() called! CB() called! a use count : 1 b use count : 1 a use count : 2 b use count : 2 //\u5c06CB\u4e2dm_ptr_a\u7c7b\u578b\u6539\u4e3aweak_ptr CA() called! CB() called! a use count : 1 b use count : 1 a use count : 1 b use count : 2 ~CA() called! ~CB() called! */ \u6700\u540eCA\u548cCB\u7684\u5bf9\u8c61\u5e76\u6ca1\u6709\u88ab\u6790\u6784\uff0c\u5176\u4e2d\u7684\u5f15\u7528\u6548\u679c\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u8d77\u521d\u5b9a\u4e49\u5b8cptr_a\u548cptr_b\u65f6\uff0c \u53ea\u6709\u2460\u2462\u4e24\u6761\u5f15\u7528\uff0c\u7136\u540e\u8c03\u7528\u51fd\u6570set_ptr\u540e\u53c8\u589e\u52a0\u4e86\u2461\u2463\u4e24\u6761\u5f15\u7528\uff0c\u5f53test_refer_to_each_other\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u65f6\uff0c \u5bf9\u8c61ptr_a\u548cptr_b\u88ab\u9500\u6bc1\uff0c\u4e5f\u5c31\u662f\u2460\u2462\u4e24\u6761\u5f15\u7528\u4f1a\u88ab\u65ad\u5f00\uff0c\u4f46\u662f\u2461\u2463\u4e24\u6761\u5f15\u7528\u4f9d\u7136\u5b58\u5728\uff0c\u6bcf\u4e00\u4e2a\u7684\u5f15\u7528\u8ba1\u6570\u90fd\u4e0d\u4e3a0\uff0c \u7ed3\u679c\u5c31\u5bfc\u81f4\u5176\u6307\u5411\u7684\u5185\u90e8\u5bf9\u8c61\u65e0\u6cd5\u6790\u6784\uff0c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u5c06\u4e24\u4e2a\u7c7b\u4e2d\u7684\u4e00\u4e2a\u6210\u5458\u53d8\u91cf\u6539\u4e3aweak_ptr\u5bf9\u8c61\uff0c\u56e0\u4e3aweak_ptr\u4e0d\u4f1a\u589e\u52a0\u5f15\u7528\u8ba1\u6570\uff0c\u4f7f\u5f97\u5f15\u7528\u5f62\u4e0d\u6210\u73af\uff0c \u6700\u540e\u5c31\u53ef\u4ee5\u6b63\u5e38\u7684\u91ca\u653e\u5185\u90e8\u7684\u5bf9\u8c61\uff0c\u4e0d\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\uff0c\u6bd4\u5982\u5c06CB\u4e2d\u7684\u6210\u5458\u53d8\u91cf\u6539\u4e3aweak_ptr\u5bf9\u8c61\u3002 \u2463\u8fd9\u6761\u5f15\u7528\u662f\u901a\u8fc7weak_ptr\u5efa\u7acb\u7684\uff0c\u5e76\u4e0d\u4f1a\u589e\u52a0\u5f15\u7528\u8ba1\u6570\uff0c\u4e5f\u5c31\u662f\u8bf4CA\u7684\u5bf9\u8c61\u53ea\u6709\u4e00\u4e2a\u5f15\u7528\u8ba1\u6570\uff0c\u800cCB\u7684\u5bf9\u8c61\u53ea\u67092\u4e2a\u5f15\u7528\u8ba1\u6570\uff0c \u5f53test_refer_to_each_other\u8fd9\u4e2a\u51fd\u6570\u8fd4\u56de\u65f6\uff0c\u5bf9\u8c61ptr_a\u548cptr_b\u88ab\u9500\u6bc1\uff0c\u4e5f\u5c31\u662f\u2460\u2462\u4e24\u6761\u5f15\u7528\u4f1a\u88ab\u65ad\u5f00\uff0c \u6b64\u65f6CA\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u4f1a\u51cf\u4e3a0\uff0c\u5bf9\u8c61\u88ab\u9500\u6bc1\uff0c\u5176\u5185\u90e8\u7684m_ptr_b\u6210\u5458\u53d8\u91cf\u4e5f\u4f1a\u88ab\u6790\u6784\uff0c\u5bfc\u81f4CB\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u4f1a\u51cf\u4e3a0\uff0c \u5bf9\u8c61\u88ab\u9500\u6bc1\uff0c\u8fdb\u800c\u89e3\u51b3\u4e86\u5f15\u7528\u6210\u73af\u7684\u95ee\u9898\u3002 \u667a\u80fd\u6307\u9488\u4f7f\u7528\u89c4\u8303\uff1a \u2003\u4e0d\u4f7f\u7528\u76f8\u540c\u7684\u5185\u7f6e\u6307\u9488\u503c\u521d\u59cb\u5316\u6216reset\u591a\u4e2a\u667a\u80fd\u6307\u9488\uff1b \u2003\u4e0ddelete get()\u8fd4\u56de\u7684\u6307\u9488\uff1b \u2003\u4e0d\u4f7f\u7528get()\u521d\u59cb\u5316\u6216reset\u53e6\u4e00\u4e2a\u667a\u80fd\u6307\u9488\uff1b \u2003\u5982\u679c\u4f7f\u7528get()\u8fd4\u56de\u7684\u6307\u9488\uff0c\u8bb0\u4f4f\u5f53\u6700\u540e\u4e00\u4e2a\u5bf9\u5e94\u7684\u667a\u80fd\u6307\u9488\u9500\u6bc1\u540e\uff0c\u6307\u9488\u5c31\u53d8\u4e3a\u65e0\u6548\u4e86\uff1b \u2003\u5f53\u4f7f\u7528\u667a\u80fd\u6307\u9488\u7ba1\u7406\u7684\u8d44\u6e90\u4e0d\u662fnew\u5206\u914d\u7684\u5185\u5b58\uff0c\u8bb0\u4f4f\u4f20\u9012\u7ed9\u5b83\u4e00\u4e2a\u5220\u9664\u5668\u3002 \u2003\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u667a\u80fd\u6307\u9488\u7684\u9ed8\u8ba4\u5220\u9664\u5668\u5373\u53ef\u91ca\u653e\u4fdd\u5b58\u7684\u6307\u9488\uff0c\u4f46\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u5982\uff1a\u8d44\u6e90\u4e0d\u662f new \u51fa\u6765\u7684(\u4e00\u822c\u4e5f\u610f\u5473\u7740\u4e0d\u80fd delete), \u53ef\u80fd\u662f malloc \u51fa\u6765\u7684\u6216\u8005\u8d44\u6e90\u662f\u88ab\u7b2c\u4e09\u65b9\u5e93\u7ba1\u7406\u7684 (\u7b2c\u4e09\u65b9\u63d0\u4f9b\u8d44\u6e90\u83b7\u53d6\u548c\u8d44\u6e90\u91ca\u653e\u63a5\u53e3)\uff1b\u8d44\u6e90\u4e0d\u662f RAII \u7684, \u610f\u5473\u7740\u6790\u6784\u51fd\u6570\u4e0d\u4f1a\u628a\u8d44\u6e90\u5b8c\u5168\u91ca\u653e\u6389.\uff0c\u5373\u5355\u7eaf delete \u8fd8\u4e0d\u591f\uff1b \u2003 \u5982\u679cptr\u4e0d\u662f\u6307\u5411\u4e2aobject\uff0c\u800c\u662f\u4e00\u4e2aobject\u7684\u6570\u7ec4\u3002\u90a3\u4e48\u6784\u9020shared_ptr\u65f6\u5019\u5c31\u5f97\u81ea\u5df1\u4f20\u5165\u5220\u9664\u5668 , \u4f8b\u5982\u8fd9\u91cc\u4f20\u5165\u4e00\u4e2alambda\u7c7b\u578b\u7684deletor, shared_ptr(ptr, [](void*){delete [] ptr}) \u667a\u80fd\u6307\u9488\u4e0e\u52a8\u6001\u6570\u7ec4 \u2003\u53ef\u4ee5\u4f7f\u7528unique_ptr\u6765\u7ba1\u7406new\u5206\u914d\u7684\u6570\u7ec4; shared_ptr\u4e0d\u76f4\u63a5\u652f\u6301\u7ba1\u7406\u52a8\u6001\u6570\u7ec4\uff0c\u5fc5\u987b\u63d0\u4f9b\u81ea\u5df1\u5b9a\u4e49\u7684\u5220\u9664\u5668. unique_ptr< T [] > up(new T [10]); auto p = up.release(); //up\u653e\u5f03\u6307\u9488\u7684\u63a7\u5236\u6743\uff0c\u5e76\u8fd4\u56de\u6307\u9488\uff0c\u7136\u540e\u5c06up\u7f6e\u4e3a\u7a7a delete p; or up.reset(); // \u91ca\u653eup\u6307\u5411\u7684\u5bf9\u8c61\uff0c up.reset(q); up\u91ca\u653e\u539f\u5148\u5360\u6709\u5185\u5b58\uff0c\u6539\u4e3a\u6307\u5411q\u6240\u6307\u5411\u7684\u5185\u5b58 /*\u6b64\u65f6\u4e0d\u80fd\u4f7f\u7528\u70b9\u548c\u7bad\u5934\u6210\u5458\u8fd0\u7b97\u7b26\uff0c\u56e0\u4e3aup\u4e0d\u662f\u6307\u5411\u5355\u4e2a\u5bf9\u8c61;\u4f46\u53ef\u4ee5\u4f7f\u7528\u4e0b\u6807\u8fd0\u7b97\u7b26\u8bbf\u95ee\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u3002*/ shared_ptr< int > sp(new int[10], [](int * p){delete [] p;}); sp.reset(); /* \u4e0d\u8fc7shared_ptr\u6ca1\u6709\u5b9a\u4e49\u4e0b\u6807\u8fd0\u7b97\u7b26\uff0c\u4e14\u6240\u6709\u667a\u80fd\u6307\u9488\u7c7b\u578b\u90fd\u4e0d\u652f\u6301\u6307\u9488\u7b97\u672f\u8fd0\u7b97\uff0c\u56e0\u6b64\u53ea\u80fd\u901a\u8fc7get()\u83b7\u53d6\u5185\u7f6e\u6307\u9488\uff0c \u7528\u6765\u8bbf\u95ee\u6570\u7ec4\u5143\u7d20\u3002*/ \u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u52a8\u6001\u5185\u5b58\uff1f \u2003\u7a0b\u5e8f\u4e0d\u77e5\u9053\u81ea\u5df1\u9700\u8981\u4f7f\u7528\u591a\u5c11\u5bf9\u8c61, \u5982\u5bb9\u5668; \u7a0b\u5e8f\u4e0d\u77e5\u9053\u6240\u9700\u5bf9\u8c61\u7684\u51c6\u786e\u7c7b\u578b\uff1b\u7a0b\u5e8f\u9700\u8981\u5728\u591a\u4e2a\u5bf9\u8c61\u95f4\u5171\u4eab\u6570\u636e\u3002 shared_ptr\u4e0eunique_ptr\u7684\u53e6\u4e00\u4e2a\u5dee\u5f02\uff1a\u5141\u8bb8\u7528\u6237\u91cd\u8f7d\u9ed8\u8ba4\u5220\u9664\u5668\u7684\u65b9\u5f0f \u524d\u8005\u53ea\u8981\u5728\u521b\u5efa\u6216reset\u6307\u9488\u65f6\u4f20\u9012\u4e00\u4e2a\u53ef\u8c03\u7528\u5bf9\u8c61\u5373\u53ef\uff0c\u540e\u8005\u53ea\u80fd\u5728\u5b9a\u4e49\u65f6\u4ee5\u663e\u5f0f\u6a21\u677f\u5b9e\u53c2\u7684\u5f62\u5f0f\u63d0\u4f9b\u5220\u9664\u5668\u7684\u7c7b\u578b\u3002 \u901a\u8fc7\u5728\u7f16\u8bd1\u65f6\u7ed1\u5b9a\u5220\u9664\u5668\uff0cunique_ptr\u907f\u514d\u4e86\u95f4\u63a5\u8c03\u7528\u5220\u9664\u5668\u7684\u8fd0\u884c\u65f6\u5f00\u9500\uff1b\u800c\u5728\u8fd0\u884c\u65f6\u7ed1\u5b9a\u5220\u9664\u5668\uff0cshared_ptr\u4f7f\u5f97\u7528\u6237\u91cd\u8f7d\u5220\u9664\u5668\u66f4\u4e3a\u65b9\u4fbf\u3002 shared_ptr p(q, d); p.reset(q, d); //\u65e0\u9700\u5728\u5b9a\u4e49\u65f6\u6307\u660e ................................................................................. unique_ptr(connection, decltype(end_connection)*) p(&c, end_connection); //end_connection \u4e0eend_connection_2\u4e24\u8005\u8fd4\u56de\u7c7b\u578b\u76f8\u540c\uff0c\u5373\u8981\u6c42\u5fc5\u987b\u5728\u5b9a\u4e49\u65f6\u63d0\u4f9b\u5220\u9664\u5668\u7684\u7c7b\u578b\u3002 p.reset(&c, end_connection_2)","title":"\u6307\u9488"},{"location":"CPP/pointer_reference/#about-this-pointer","text":"this\u6307\u9488\uff0c\u5728 C++ \u4e2d\uff0c\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u80fd\u901a\u8fc7 this \u6307\u9488\u6765\u8bbf\u95ee\u81ea\u5df1\u7684\u5730\u5740\u3002 this \u6307\u9488\u662f\u6240\u6709\u6210\u5458\u51fd\u6570\u7684\u9690\u542b\u53c2\u6570\u3002 \u56e0\u6b64\uff0c\u5728\u6210\u5458\u51fd\u6570\u5185\u90e8\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u6307\u5411\u8c03\u7528\u5bf9\u8c61\u3002\u5f53\u6211\u4eec\u8c03\u7528\u6210\u5458\u51fd\u6570\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u66ff\u67d0\u4e2a\u5bf9\u8c61\u8c03\u7528\u5b83\u3002 \u2003\u6210\u5458\u51fd\u6570\u901a\u8fc7\u4e00\u4e2a\u540d\u4e3a this \u7684\u989d\u5916\u9690\u5f0f\u53c2\u6570\u6765\u8bbf\u95ee\u8c03\u7528\u5b83\u7684\u90a3\u4e2a\u5bf9\u8c61\uff0c\u5f53\u6211\u4eec\u8c03\u7528\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u65f6\uff0c\u7528\u8bf7\u6c42\u8be5\u51fd\u6570\u7684\u5bf9\u8c61\u5730\u5740\u521d\u59cb\u5316 this\uff1b\u5bf9\u4e8e\u6211\u4eec\u6765\u8bf4\uff0cthis \u5f62\u53c2\u662f\u9690\u5f0f\u5b9a\u4e49\u7684\u3002\u5b9e\u9645\u4e0a\uff0c\u4efb\u4f55\u81ea\u5b9a\u4e49\u540d\u4e3a this \u7684\u53c2\u6570\u6216\u53d8\u91cf\u7684\u884c\u4e3a\u90fd\u662f\u975e\u6cd5\u7684\u3002 \u2003\u4e00\u822c\u6765\u8bf4\uff0cthis\u7c7b\u578b\u662f\u4e00\u4e2a\u6307\u5411 \u975e\u5e38\u91cf\u7c7b \u7c7b\u578b\u7684const\u6307\u9488\uff08eg. class_name* const this\uff09\uff0c\u56e0\u6b64\u4e0d\u80fd\u5c06this\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5e38\u91cf\u5bf9\u8c61\u4e0a\uff1b\u6240\u4ee5\u6211\u4eec\u4e0d\u80fd\u8c03\u7528\u5e38\u91cf\u5bf9\u8c61\u7684\u975e\u5e38\u91cf\u6210\u5458\u51fd\u6570\uff0c\u56e0\u4e3a\u8fd9\u4f1a\u7528\u8be5\u5e38\u91cf\u5bf9\u8c61\u7684\u5730\u5740\u521d\u59cb\u5316this\uff0c\u4f46this\u6307\u5411\u7684\u662f\u975e\u5e38\u91cf\u7c7b\u7c7b\u578b\uff0c\u5c06\u5f15\u53d1\u7f16\u8bd1\u5668\u62a5\u9519\u3002 \u2003c++\u5141\u8bb8\u7684\u505a\u6cd5\u662f\u628aconst\u5173\u952e\u5b57\u653e\u5728\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\u5217\u8868\u4e4b\u540e\uff0c\u4ee5\u6b64\u6765\u6539\u53d8this\u6307\u9488\u7684\u7c7b\u578b\u3002\u56e0\u6b64\u5728\u5e38\u91cf\u5bf9\u8c61\u8c03\u7528\u5e38\u91cf\u6210\u5458\u51fd\u6570\u65f6\uff0cthis\u6307\u9488\u7c7b\u578b\u4e3a\u6307\u5411 const \u5bf9\u8c61\u7684 const \u6307\u9488\u3002","title":"About this pointer"},{"location":"CPP/pointer_reference/#_2","text":"\u5f15\u7528\u5e76\u975e\u5bf9\u8c61\uff0c\u800c\u662f\u4e3a\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5bf9\u8c61\u6240\u8d77\u7684\u53e6\u5916\u4e00\u4e2a\u540d\u5b57\uff0c\u56e0\u6b64\u4e0d\u5b58\u5728\u5f15\u7528\u7684\u5f15\u7528\u3002\u5b9a\u4e49\u5f15\u7528\u65f6\uff0c\u7a0b\u5e8f\u628a\u5f15\u7528\u548c\u5b83\u7684\u521d\u59cb\u503c\u5bf9\u8c61\u7ed1\u5b9a\u5728\u4e00\u8d77\uff0c\u800c\u4e0d\u662f\u628a\u521d\u59cb\u503c\u62f7\u8d1d\u7ed9\u5f15\u7528\u3002 \u2003\u5f15\u7528\u7684\u7c7b\u578b\u5fc5\u987b\u4e0e\u5176\u6240\u5f15\u7528\u5bf9\u8c61\u7684\u7c7b\u578b\u4e00\u81f4\uff0c\u4f46\u662f\u6709\u4e24\u79cd\u4f8b\u5916\uff1a \u7b2c\u4e00\u79cd\uff1a\u5728\u521d\u59cb\u5316\u5e38\u91cf\u5f15\u7528\u65f6\u5141\u8bb8\u7528\u4efb\u610f\u8868\u8fbe\u5f0f\u4f5c\u4e3a\u521d\u59cb\u503c\uff0c\u53ea\u8981\u8be5\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u80fd\u8f6c\u6362\u6210\u5f15\u7528\u7684\u7c7b\u578b\u5373\u53ef\uff0c\u5c24\u5176\uff0c\u5141\u8bb8\u4e3a\u4e00\u4e2a\u5e38\u91cf\u5f15\u7528\u7ed1\u5b9a\u975e\u5e38\u91cf\u7684\u5bf9\u8c61\u3001\u5b57\u9762\u503c\u3001\u751a\u81f3\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002\u6b64\u65f6\uff0c\u901a\u8fc7\u8be5\u5e38\u91cf\u5f15\u7528\u4e0d\u80fd\u4fee\u6539\u5668\u7ed1\u5b9a\u7684\u5bf9\u8c61\u7684\u503c\uff0c\u4f46\u82e5\u8be5\u7ed1\u5b9a\u7684\u5bf9\u8c61\u672c\u8eab\u662f\u975e\u5e38\u91cf\uff0c\u53ef\u4ee5\u81ea\u6211\u4fee\u6539\u3002 \u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f\u6d3e\u751f\u7c7b\u5f15\u7528\u5411\u57fa\u7c7b\u5f15\u7528\u7684\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u3002 \u2003 return by reference: \u4f20\u9012\u8005\u65e0\u9700\u77e5\u9053\u63a5\u6536\u8005\u662f\u5426\u662f\u4ee5reference\u5f62\u5f0f\u63a5\u6536\uff1b\u800creturen by pointer\u8981\u6c42\u63a5\u6536\u8005\u5fc5\u987b\u662f\u4ee5pointer\u5f62\u5f0f\u3002","title":"\u5f15\u7528"},{"location":"CPP/pointer_reference/#c-11","text":"\u5de6\u503c\u5f15\u7528 and \u53f3\u503c\u5f15\u7528 \u2003\u5de6\u503c\u5f15\u7528\u201c&\u201d\u548c\u53f3\u503c\u5f15\u7528\u201c&&\u201d\uff1aC++\u4e2d\u6240\u6709\u7684\u503c\u90fd\u5fc5\u7136\u5c5e\u4e8e\u5de6\u503c\u3001\u53f3\u503c\u4e8c\u8005\u4e4b\u4e00\u3002\u5de6\u503c\u662f\u6307\u8868\u8fbe\u5f0f\u7ed3\u675f\u540e\u4f9d\u7136\u5b58\u5728\u7684\u6301\u4e45\u5316\u5bf9\u8c61\uff0c \u53f3\u503c\u662f\u6307\u8868\u8fbe\u5f0f\u7ed3\u675f\u65f6\u5c31\u4e0d\u518d\u5b58\u5728\u7684\u4e34\u65f6\u5bf9\u8c61 \u3002\u6240\u6709\u7684\u5177\u540d\u53d8\u91cf\u6216\u8005\u5bf9\u8c61\u90fd\u662f\u5de6\u503c\uff0c\u800c\u53f3\u503c\u4e0d\u5177\u540d\u3002\u533a\u5206\u5de6\u503c\u548c\u53f3\u503c\u7684\u4fbf\u6377\u65b9\u6cd5\uff1a\u770b\u80fd\u4e0d\u80fd\u5bf9\u8868\u8fbe\u5f0f\u53d6\u5730\u5740\uff0c\u5982\u679c\u80fd\uff0c\u5219\u4e3a\u5de6\u503c\uff0c\u5426\u5219\u4e3a\u53f3\u503c\u3002 \u2003 \u867d\u7136\u5de6\u503c\u5f15\u7528\u4e0d\u53ef\u4ee5\u7ed1\u5b9a\u53f3\u503c\uff0c\u4f46\u5e38\u91cf\u5de6\u503c\u5f15\u7528\u5374\u53ef\u4ee5\u7ed1\u5b9aconst\u53f3\u503c \u2003 const int &a = 1; //a\u5e76\u4e0d\u80fd\u88ab\u4fee\u6539 \u89c4\u52191. \u5f15\u7528\u6298\u53e0 \u5982\u679c\u95f4\u63a5\u7684\u521b\u5efa\u4e00\u4e2a\u5f15\u7528\u7684\u5f15\u7528\uff0c\u5219\u8fd9\u4e9b\u5f15\u7528\u5c31\u4f1a\u201c\u6298\u53e0\u201d\u3002\u5728\u6240\u6709\u60c5\u51b5\u4e0b\uff08\u9664\u4e86\u4e00\u4e2a\u4f8b\u5916\uff09\uff0c\u5f15\u7528\u6298\u53e0\u6210\u4e00\u4e2a\u666e\u901a\u7684\u5de6\u503c\u5f15\u7528\u7c7b\u578b\u3002\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u5f15\u7528\u4f1a\u6298\u53e0\u6210\u53f3\u503c\u5f15\u7528\uff0c\u5373\u53f3\u503c\u5f15\u7528\u7684\u53f3\u503c\u5f15\u7528\uff0c T&& &&\u3002\u5373 X& &\u3001X& &&\u3001X&& &\u90fd\u6298\u53e0\u6210X& X&& &&\u6298\u53e0\u4e3aX&& \u89c4\u52192. \u53f3\u503c\u5f15\u7528\u7279\u6b8a\u7c7b\u578b\u63a8\u65ad\u89c4\u5219 \u2003\u5f53\u5c06\u4e00\u4e2a\u5de6\u503c\u4f20\u9012\u7ed9\u4e00\u4e2a\u53c2\u6570\u662f\u53f3\u503c\u5f15\u7528\u7684\u51fd\u6570\uff0c\u4e14\u6b64\u53f3\u503c\u5f15\u7528\u6307\u5411\u6a21\u677f\u7c7b\u578b\u53c2\u6570(T&&)\u65f6\uff0c\u7f16\u8bd1\u5668\u63a8\u65ad\u6a21\u677f\u53c2\u6570\u7c7b\u578b\u4e3a\u5b9e\u53c2\u7684\u5de6\u503c\u5f15\u7528\uff0c\u5982 template<typename T> void f(T&&); int i = 42; f(i) // \u6a21\u677f\u53c2\u6570\u7c7b\u578bT\u5c06\u63a8\u65ad\u4e3aint&\u7c7b\u578b\uff0c\u800c\u975eint\u3002 \u2003\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u5f62\u53c2\u662f\u4e00\u4e2a\u6307\u5411 \u6a21\u677f\u7c7b\u578b \u7684\u53f3\u503c\u5f15\u7528\uff0c\u5219\u8be5\u53c2\u6570\u53ef\u4ee5\u88ab\u7ed1\u5b9a\u5230\u4e00\u4e2a\u5de6\u503c\u4e0a\u3002 \u89c4\u52193 \u2003\u867d\u7136\u4e0d\u80fd\u9690\u5f0f\u7684\u5c06\u4e00\u4e2a\u5de6\u503c\u8f6c\u6362\u4e3a\u53f3\u503c\u5f15\u7528\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7static_cast\u663e\u793a\u5730\u5c06\u4e00\u4e2a\u5de6\u503c\u8f6c\u6362\u4e3a\u4e00\u4e2a\u53f3\u503c\u3002 std::move \u2003\u5728C++11\u4e2d\uff0c\u6807\u51c6\u5e93\u5728 \u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6709\u7528\u7684\u51fd\u6570std::move\uff0cstd::move\u5e76\u4e0d\u80fd\u79fb\u52a8\u4efb\u4f55\u4e1c\u897f\uff0c\u5b83\u552f\u4e00\u7684\u529f\u80fd\u662f\u5c06\u4e00\u4e2a\u5de6\u503c\u5f3a\u5236\u8f6c\u5316\u4e3a\u53f3\u503c\u5f15\u7528\uff0c\u7ee7\u800c\u53ef\u4ee5\u901a\u8fc7\u53f3\u503c\u5f15\u7528\u4f7f\u7528\u8be5\u503c\uff0c\u4ee5\u7528\u4e8e\u79fb\u52a8\u8bed\u4e49\u3002\u4ece\u5b9e\u73b0\u4e0a\u8bb2\uff0cstd::move\u81ea\u8eab\u9664\u4e86\u505a\u4e00\u4e9b\u53c2\u6570\u7684\u63a8\u65ad\u4e4b\u5916\uff0c\u8fd4\u56de\u53f3\u503c\u5f15\u7528\u672c\u8d28\u4e0a\u8fd8\u662f\u9760static_cast \u5b8c\u6210\u7684\u3002 template<typename T> typename remove_reference<T>::type && move(T&& t) { return static_cast<typename remove_reference<T>::type &&>(t); } \u2003\u2003\u6839\u636e\u89c4\u52191\uff0c2\u53ef\u77e5\uff0cmove\u65e2\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u5de6\u503c\uff0c\u4e5f\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u53f3\u503c\u3002 \u2003\u2003 std::move\u662f\u5c06\u5bf9\u8c61\u7684\u72b6\u6001\u6216\u8005\u6240\u6709\u6743\u4ece\u4e00\u4e2a\u5bf9\u8c61\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u53ea\u662f\u8f6c\u79fb \uff0c\u6ca1\u6709\u5185\u5b58\u7684\u642c\u8fc1\u6216\u8005\u5185\u5b58\u62f7\u8d1d\u6240\u4ee5\u53ef\u4ee5\u63d0\u9ad8\u5229\u7528\u6548\u7387,\u6539\u5584\u6027\u80fd\u3002 \u2003\u2003 eg: int && rr1 = std::move(rr); //\u8c03\u7528move\u610f\u5473\u7740\u9664\u5bf9rr\u8d4b\u503c\u6216\u9500\u6bc1\u5b83\u65f6\uff0c\u6211\u4eec\u5c06\u4e0d\u518d\u4f7f\u7528\u5b83\u3002 std::forward \u2003\u5b8c\u7f8e\u8f6c\u53d1: \u5b8c\u7f8e\u8f6c\u53d1\u5b9e\u73b0\u4e86\u53c2\u6570\u5728\u4f20\u9012\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u5176\u503c\u5c5e\u6027\u7684\u529f\u80fd\uff0c\u5373\u82e5\u662f\u5de6\u503c\uff0c\u5219\u4f20\u9012\u4e4b\u540e\u4ecd\u7136\u662f\u5de6\u503c\uff0c\u82e5\u662f\u53f3\u503c\uff0c\u5219\u4f20\u9012\u4e4b\u540e\u4ecd\u7136\u662f\u53f3\u503c\u3002 \u2003std::forward\u53ea\u6709\u5728\u5b83\u7684\u53c2\u6570\u7ed1\u5b9a\u5230\u4e00\u4e2a\u53f3\u503c\u4e0a\u7684\u65f6\u5019\uff0c\u5b83\u624d\u8f6c\u6362\u5b83\u7684\u53c2\u6570\u5230\u4e00\u4e2a\u53f3\u503c\u3002 class Foo { public: std::string member; template<typename T> Foo(T&& member): member{std::forward<T>(member)} {} }; /* \u4f20\u9012\u4e00\u4e2alvalue\u6216\u8005\u4f20\u9012\u4e00\u4e2aconst lvaue: \u4f20\u9012\u4e00\u4e2alvalue\uff0c\u6a21\u677f\u63a8\u5bfc\u4e4b\u540e T = std::string& \u4f20\u9012\u4e00\u4e2aconst lvaue, \u6a21\u677f\u63a8\u5bfc\u4e4b\u540eT = const std::string& T& &&\u5c06\u6298\u53e0\u4e3aT&\uff0c\u5373std::string& && \u6298\u53e0\u4e3a std::string& \u6700\u7ec8\u51fd\u6570\u4e3a: Foo(string& member): member{std::forward<string&>(member)} {} std::forward<string&>(member)\u5c06\u8fd4\u56de\u4e00\u4e2a\u5de6\u503c\uff0c\u6700\u7ec8\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570, \u4f20\u9012\u4e00\u4e2arvalue \u4f20\u9012\u4e00\u4e2arvalue: \u6a21\u677f\u63a8\u5bfc\u4e4b\u540e T = std::string \u6700\u7ec8\u51fd\u6570\u4e3a: Foo(string&& member): member{std::forward<string>(member)} {} std::forward<string>(member) \u5c06\u8fd4\u56de\u4e00\u4e2a\u53f3\u503c\uff0c\u6700\u7ec8\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff1b */","title":"C++ 11 \u5f15\u7528"},{"location":"CPP/pointer_reference/#_3","text":"\u5728\u53c2\u6570\u5217\u8868\u540e\u653e\u7f6e& \u6216\u8005&&, \u5206\u522b\u6307\u51fathis\u6307\u9488\u6307\u5411\u4e00\u4e2a\u5de6\u503c\u6216\u53f3\u503c\uff1b\u53ea\u80fd\u4f5c\u7528\u4e8e\u975estatic\u6210\u5458\u51fd\u6570\uff0c\u4e14\u5fc5\u987b\u540c\u65f6\u51fa\u73b0\u5728\u51fd\u6570\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u4e2d\uff1b\u82e5\u540c\u65f6\u91c7\u7528const\u9650\u5b9a\uff0c\u5219\u5f15\u7528\u9650\u5b9a\u7b26\u5fc5\u987b\u653e\u5728const\u540e\u9762\u3002\u4e14\u5982\u679c\u5b9a\u4e49\u4e24\u4e2a\u6216\u4ee5\u4e0a\u5177\u6709\u76f8\u540c\u540d\u5b57\u548c\u53c2\u6570\u5217\u8868\u7684\u6210\u5458\u51fd\u6570\uff0c\u5fc5\u987b\u5168\u90e8\u52a0\u4e0a\u5f15\u7528\u9650\u5b9a\u7b26\uff08\u4e0d\u540c\u4e8econst\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u662f\u5426\u52a0const\u6765\u91cd\u8f7d\uff09\u3002","title":"\u5f15\u7528\u9650\u5b9a\u7b26"},{"location":"CPP/pointer_reference/#_4","text":"","title":"\u6307\u9488\u4e0e\u5f15\u7528\u533a\u522b"},{"location":"CPP/static/","text":"About Static \u9759\u6001\u4e0e\u52a8\u6001 \u2003\u9759\u6001\u7c7b\u578b: \u5bf9\u8c61\u7684\u9759\u6001\u7c7b\u578b\u6307\u5176\u5728\u7a0b\u5e8f\u4e2d\u88ab\u58f0\u660e\u65f6\u6240\u91c7\u7528\u7684\u7c7b\u578b; \u52a8\u6001\u7c7b\u578b\u5219\u662f\u6307\u201c\u76ee\u524d\u6240\u6307\u5bf9\u8c61\u7c7b\u578b\u201d, \u53ef\u5728\u8fd0\u884c\u671f\u53d1\u751f\u6539\u53d8; \u2003\u8003\u8651\u5e26\u6709\u7f3a\u7701\u53c2\u6570\u7684virtual\u51fd\u6570: virtual\u51fd\u6570\u662f\u52a8\u6001\u7ed1\u5b9a\uff0c\u7f3a\u7701\u53c2\u6570\u662f\u9759\u6001\u7ed1\u5b9a, \u610f\u5473\u7740\u4f60\u53ef\u80fd\u5728\"\u8c03\u7528\u4e00\u4e2a\u5b9a\u4e49\u4e8ederived class \u5185\u7684\u865a\u51fd\u6570\uff0c\u4f46\u4f7f\u7528base class\u63d0\u4f9b\u7684\u7f3a\u7701\u53c2\u6570\u503c\" \u51fd\u6570\u4e2d\u7684\u9759\u6001\u53d8\u91cf \u2003\u5f53\u53d8\u91cf\u58f0\u660e\u4e3astatic\u65f6\uff0c\u7a7a\u95f4\u5c06\u5728\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u5185\u5206\u914d\u3002\u5373\u4f7f\u591a\u6b21\u8c03\u7528\u8be5\u51fd\u6570\uff0c\u9759\u6001\u53d8\u91cf\u7684\u7a7a\u95f4\u4e5f\u53ea\u5206\u914d\u4e00\u6b21\uff0c\u524d\u4e00\u6b21\u8c03\u7528\u4e2d\u7684\u53d8\u91cf\u503c\u901a\u8fc7\u4e0b\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u4f20\u9012\u3002\u8fd9\u5bf9\u4e8e\u5728C / C ++\u6216\u9700\u8981\u5b58\u50a8\u5148\u524d\u51fd\u6570\u72b6\u6001\u7684\u4efb\u4f55\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u975e\u5e38\u6709\u7528\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570 \u2003\u5176\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u56e0\u4e3a\u9759\u6001\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u7c7b\uff0c\u901a\u8fc7\u7c7b\u8bbf\u95ee\uff0c\u8c03\u7528\u51fd\u6570\u65f6\u6ca1\u6709\u63d0\u4f9bthis\u6307\u9488, \u6240\u4ee5\u5176\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\uff08\u56e0\u4e3a\u5176\u5c5e\u4e8e\u67d0\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\uff09\u3002","title":"About Static"},{"location":"CPP/static/#about-static","text":"","title":"About Static"},{"location":"CPP/static/#_1","text":"\u9759\u6001\u7c7b\u578b: \u5bf9\u8c61\u7684\u9759\u6001\u7c7b\u578b\u6307\u5176\u5728\u7a0b\u5e8f\u4e2d\u88ab\u58f0\u660e\u65f6\u6240\u91c7\u7528\u7684\u7c7b\u578b; \u52a8\u6001\u7c7b\u578b\u5219\u662f\u6307\u201c\u76ee\u524d\u6240\u6307\u5bf9\u8c61\u7c7b\u578b\u201d, \u53ef\u5728\u8fd0\u884c\u671f\u53d1\u751f\u6539\u53d8; \u2003\u8003\u8651\u5e26\u6709\u7f3a\u7701\u53c2\u6570\u7684virtual\u51fd\u6570: virtual\u51fd\u6570\u662f\u52a8\u6001\u7ed1\u5b9a\uff0c\u7f3a\u7701\u53c2\u6570\u662f\u9759\u6001\u7ed1\u5b9a, \u610f\u5473\u7740\u4f60\u53ef\u80fd\u5728\"\u8c03\u7528\u4e00\u4e2a\u5b9a\u4e49\u4e8ederived class \u5185\u7684\u865a\u51fd\u6570\uff0c\u4f46\u4f7f\u7528base class\u63d0\u4f9b\u7684\u7f3a\u7701\u53c2\u6570\u503c\"","title":"\u9759\u6001\u4e0e\u52a8\u6001"},{"location":"CPP/static/#_2","text":"\u5f53\u53d8\u91cf\u58f0\u660e\u4e3astatic\u65f6\uff0c\u7a7a\u95f4\u5c06\u5728\u7a0b\u5e8f\u7684\u751f\u547d\u5468\u671f\u5185\u5206\u914d\u3002\u5373\u4f7f\u591a\u6b21\u8c03\u7528\u8be5\u51fd\u6570\uff0c\u9759\u6001\u53d8\u91cf\u7684\u7a7a\u95f4\u4e5f\u53ea\u5206\u914d\u4e00\u6b21\uff0c\u524d\u4e00\u6b21\u8c03\u7528\u4e2d\u7684\u53d8\u91cf\u503c\u901a\u8fc7\u4e0b\u4e00\u6b21\u51fd\u6570\u8c03\u7528\u4f20\u9012\u3002\u8fd9\u5bf9\u4e8e\u5728C / C ++\u6216\u9700\u8981\u5b58\u50a8\u5148\u524d\u51fd\u6570\u72b6\u6001\u7684\u4efb\u4f55\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u975e\u5e38\u6709\u7528\u3002","title":"\u51fd\u6570\u4e2d\u7684\u9759\u6001\u53d8\u91cf"},{"location":"CPP/static/#_3","text":"\u5176\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u56e0\u4e3a\u9759\u6001\u6210\u5458\u51fd\u6570\u5c5e\u4e8e\u7c7b\uff0c\u901a\u8fc7\u7c7b\u8bbf\u95ee\uff0c\u8c03\u7528\u51fd\u6570\u65f6\u6ca1\u6709\u63d0\u4f9bthis\u6307\u9488, \u6240\u4ee5\u5176\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458\u53d8\u91cf\uff08\u56e0\u4e3a\u5176\u5c5e\u4e8e\u67d0\u4e2a\u5177\u4f53\u7684\u5bf9\u8c61\uff09\u3002","title":"\u9759\u6001\u6210\u5458\u51fd\u6570"},{"location":"CPP/virtual/","text":"About Virtual Function \u865a\u51fd\u6570\u5b9e\u73b0\u4e86C++\u7684\u591a\u6001 \u2003\u5728c++\u4e2d\uff0c\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\u53ef\u4ee5\u6307\u5411\u6216\u8005\u5f15\u7528\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u3002\u5bf9\u4e8e\u57fa\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\uff0c\u5176\u542b\u4e49\u662f\uff1a\u5f53\u901a\u8fc7\u57fa\u7c7b\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\u8c03\u7528\u8be5\u6210\u5458\u51fd\u6570\u65f6\uff0c\u82e5\u6d3e\u751f\u7c7b\u8986\u76d6(override)\u4e86\u57fa\u7c7b\u4e2d\u7684\u865a\u6210\u5458\u51fd\u6570\uff0c\u5c06\u6839\u636e\u6307\u9488\u5b9e\u9645\u6307\u5411\u7684\u5bf9\u8c61\u7c7b\u578b\u786e\u5b9a\u8c03\u7528\u7684\u51fd\u6570\uff0c\u800c\u975e\u6307\u9488\u7684\u7c7b\u578b\u3002 \u2003\u4e0a\u8ff0\u884c\u4e3a\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u52a8\u6001\u7ed1\u5b9a\uff08\u8fd0\u884c\u65f6\u7ed1\u5b9a\uff09\uff0c\u5373\u51fd\u6570\u7684\u8fd0\u884c\u7248\u672c\u7531\u5b9e\u53c2\u51b3\u5b9a\uff0c\u5728\u8fd0\u884c\u65f6\u9009\u62e9\u51fd\u6570\u7684\u7248\u672c\u3002 class Base{ public: virtual void test(){ cout << \u201c\u57fa\u7c7b\u65b9\u6cd5\u201d}; virtual ~Base(){}; } class Derived:public Base{ public: void test(){ cout << \u201c\u6d3e\u751f\u7c7b\u65b9\u6cd5\u201d}; } \u53ea\u9700\u5c06\u57fa\u7c7b\u4e2d\u7684\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u5373\u53ef\uff0c\u6d3e\u751f\u7c7b\u4e2d\u91cd\u5199\u7684virtual\u51fd\u6570\u81ea\u52a8\u6210\u4e3a\u865a\u51fd\u6570\uff1b \u6d3e\u751f\u7c7b\u82e5\u5b58\u5728\u548c\u7236\u7c7b\u865a\u51fd\u6570\u540c\u540d\u4f46\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\u7684\u51fd\u6570\u65f6\uff0c\u4f1a\u5bfc\u81f4\u7236\u7c7b\u4e2d\u7684\u8fd9\u4e2a\u865a\u51fd\u6570\u5bf9\u4e8e\u5b50\u7c7b\u5bf9\u8c61\u4e0d\u53ef\u89c1\u3002\u6b64\u65f6\u53ef\u901a\u8fc7 Derived.Base::fcn() \u6765\u8c03\u7528\u88ab\u9690\u85cf\u7684\u51fd\u6570 \u57fa\u7c7b\u4e2d\u7684\u6790\u6784\u51fd\u6570\u5fc5\u987b\u4e3a\u865a\u51fd\u6570 \uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u5bf9\u8c61\u91ca\u653e\u9519\u8bef\u3002\u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u5219\u5220\u9664\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u7684\u65f6\u5019\uff0cC++\u4e0d\u7ba1\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2a\u57fa\u7c7b\u5bf9\u8c61\u8fd8\u662f\u4e00\u4e2a\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\uff0c\u8c03\u7528\u7684\u90fd\u662f\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u800c\u4e0d\u662f\u6d3e\u751f\u7c7b\u7684\u3002\u5982\u679c\u5b9e\u9645\u6307\u5411\u7684\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4f9d\u8d56\u4e8e\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u7684\u4ee3\u7801\u6765\u91ca\u653e\u8d44\u6e90\uff0c\u8fd9\u6837\u505a\u5c31\u4f1a\u9020\u6210\u8d44\u6e90\u6cc4\u6f0f\u3002\u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u5e76\u4e14\u6d3e\u751f\u7c7b\u63d0\u4f9b\u81ea\u5df1\u7684\u6790\u6784\u51fd\u6570\uff0c\u5219\u5220\u9664\u57fa\u7c7b\u6307\u9488\u65f6\uff0c\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002 \u865a\u51fd\u6570\u7684\u4f7f\u7528\u5c06\u5bfc\u81f4\u7c7b\u5bf9\u8c61\u5360\u7528\u66f4\u5927\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u7f16\u8bd1\u5668\u7ed9\u6bcf\u4e00\u4e2a\u5305\u62ec\u865a\u51fd\u6570\u7684\u5bf9\u8c61\u6dfb\u52a0\u4e86\u4e00\u4e2a\u9690\u85cf\u6210\u5458\uff1a\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u6307\u9488 vptr \u3002 \u2003 \u865a\u51fd\u6570\u8868\u662f\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u8bbe\u7f6e\u7684\u9759\u6001\u6570\u7ec4\uff0c\u5c5e\u4e8e\u7c7b\u800c\u975e\u67d0\u4e2a\u5177\u4f53\u7684\u5b9e\u4f8b \u3002\u865a\u51fd\u6570\u8868\u5305\u542b\u53ef\u7531\u7c7b\u7684\u5bf9\u8c61\u8c03\u7528\u7684\u6bcf\u4e2a\u865a\u51fd\u6570\u7684\u4e00\u4e2a\u6761\u76ee\u3002\u6b64\u8868\u4e2d\u7684\u6bcf\u4e2a\u6761\u76ee\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u8be5\u7c7b\u53ef\u8bbf\u95ee\u7684\u51fd\u6570\u3002 \u2003vptr\u5728\u521b\u5efa\u7c7b\u5b9e\u4f8b\u65f6\u81ea\u52a8\u8bbe\u7f6e\uff0c\u4ee5\u4fbf\u6307\u5411\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u8868(\u4e0ethis\u6307\u9488\u4e0d\u540c\uff0cthis\u6307\u9488\u5b9e\u9645\u4e0a\u662f\u7f16\u8bd1\u5668\u7528\u6765\u89e3\u6790\u81ea\u5f15\u7528\u7684\u51fd\u6570\u53c2\u6570\uff0cvptr\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u6307\u9488)\u3002\u5f53\u6d3e\u751f\u7c7b\u91cd\u65b0\u5b9a\u4e49\u865a\u51fd\u6570\u65f6\uff0c\u5219\u5c06\u8be5\u51fd\u6570\u7684\u5730\u5740\u6dfb\u52a0\u5230\u865a\u51fd\u6570\u8868\u4e2d\u3002\u65e0\u8bba\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u4e2d\u5b9a\u4e49\u4e86\u591a\u5c11\u4e2a\u865a\u51fd\u6570\uff0c\u865a\u51fd\u6570\u6307\u9488\u53ea\u6709\u4e00\u4e2a\u3002\u76f8\u5e94\u5730\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5927\u5c0f\u8981\u6bd4\u6ca1\u6709\u865a\u51fd\u6570\u65f6\u59274\u4e2a\u5b57\u8282\uff0832\u4f4d\u4e3b\u673a, 64\u4f4d\u673a\u5668\u5219\u4e3a8\u5b57\u8282)\u3002 \u6784\u9020\u51fd\u6570\u4e0d\u53ef\u4ee5\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1a\u5c3d\u7ba1\u865a\u51fd\u6570\u8868vtable\u662f\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u5df2\u7ecf\u5efa\u7acb\u7684\uff0c\u4f46\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u6307\u9488vptr\u662f\u5728\u8fd0\u884c\u9636\u6bb5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u65f6\u624d\u4ea7\u751f\u7684 \u3002 \u5982\u679c\u6784\u9020\u51fd\u6570\u662f\u865a\u7684\uff0c\u5c31\u9700\u8981\u901a\u8fc7\u865a\u6307\u9488\u6307\u5411\u7684\u865a\u51fd\u6570\u8868\u6765\u8c03\u7528\uff0c\u53ef\u662f\u6b64\u65f6\u5bf9\u8c61\u8fd8\u6ca1\u6709\u5b9e\u4f8b\u5316\uff0c\u5c1a\u672a\u5206\u914d\u5185\u5b58\uff0c\u5c31\u6ca1\u6709\u865a\u6307\u9488\uff0c\u6240\u4ee5\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570\u3002 \u9759\u6001\u51fd\u6570\u4e0d\u53ef\u4ee5\u58f0\u660e\u4e3a\u865a\u51fd\u6570: static\u6210\u5458\u51fd\u6570\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u7c7b\u5bf9\u8c61\u6216\u7c7b\u5b9e\u4f8b\uff0c\u4e14\u865a\u51fd\u6570\u4f9d\u9760vptr\u548cvtable\u6765\u5904\u7406\u3002vptr\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5728\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u521b\u5efa\u751f\u6210\uff0c\u901a\u8fc7this\u6307\u9488\u6765\u8bbf\u95ee\u5b83\uff0c\u9759\u6001\u6210\u5458\u51fd\u6570\u6ca1\u6709this\u6307\u9488\uff0c\u6240\u4ee5\u65e0\u6cd5\u8bbf\u95eevptr\u3002 \u6790\u6784\u51fd\u6570\u53ef\u4ee5\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002\u5982\u679c\u6211\u4eec\u9700\u8981\u5220\u9664\u4e00\u4e2a\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u57fa\u7c7b\u6307\u9488\u65f6\uff0c\u5e94\u8be5\u628a\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u53ea\u8981\u4e00\u4e2a\u7c7b\u6709\u53ef\u80fd\u4f1a\u88ab\u5176\u5b83\u7c7b\u6240\u7ee7\u627f\uff0c \u5c31\u5e94\u8be5\u58f0\u660e\u865a\u6790\u6784\u51fd\u6570(\u54ea\u6015\u8be5\u6790\u6784\u51fd\u6570\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c)\u3002 class A { public: virtual void vfunc1(); virtual void vfunc2(); void func1(); void func2(); private: int m_data1, m_data2; }; class B : public A { public: virtual void vfunc1(); void func1(); private: int m_data3; }; class C: public B { public: virtual void vfunc2(); void func2(); private: int m_data1, m_data4; }; \u901a\u8fc7\u865a\u51fd\u6570\u8868\u8c03\u7528\u865a\u51fd\u6570 class CTest { public: virtual void Test1(void){cout<< \"CTest Test1\\n\";} virtual void Test2(void){cout<< \"CTest Test2\\n\";} }; typedef void(*fun)(); void testT(){ CTest cc; typedef long long int64; // 64\u4f4d\u673a\u4e0a\uff0c\u6307\u9488\u5927\u5c0f\u662f8\u4e2aByte, \u6307\u9488+1\u504f\u79fb64\u4f4d\u957f\u5ea6 int64* Vptr=(int64*)(&cc); //\u865a\u6307\u9488\u503c\u4ee3\u8868\u7684\u662f\u865a\u51fd\u6570\u8868\u5165\u53e3\u5730\u5740 int64* pVtbl = (int64*)*Vptr; //\u865a\u51fd\u6570\u8868\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u5143\u7d20\u662f\u51fd\u6570\u6307\u9488\uff0cpVtbl\u76f8\u5f53\u4e8e\u6570\u7ec4\u5143\u7d20\u9996\u5730\u5740 int64* pFirstVf = (int64*)(pVtbl[0]); //pVtbl[0] \u7b49\u4ef7\u4e8e *(pVtbl) int64* pFirstVf2 = (int64*)*pVtbl; int64* pSecondVf = (int64*)(pVtbl[1]); //pVtbl[1] \u7b49\u4ef7\u4e8e *(pVtbl+1) int64* pSecondVf2 = (int64*)*(pVtbl+1); fun pf; pf = (fun)pFirstVf; pf(); // CTest Test1 pf = (fun)pFirstVf2; pf(); //CTest Test1 pf = (fun)pSecondVf; pf(); //CTest Test2 pf = (fun)pSecondVf2; pf(); //CTest Test2 } \u591a\u91cd\u7ee7\u627f\u673a\u5236\u4e0b\u7684\u865a\u51fd\u6570\u8868 \u2003\u5b50\u7c7b\u5bf9\u8c61\u4f1a\u6709\u591a\u4e2a\u865a\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u4e0d\u540c\u7684\u865a\u51fd\u6570\u8868\uff0c\u865a\u51fd\u6570\u6307\u9488\u987a\u5e8f\u6309\u7167\u6d3e\u751f\u987a\u5e8f\uff1b\u5982\u679c\u5b50\u7c7b\u6539\u5199\u4e86\u7236\u7c7b\u7684\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u4f1a\u7528\u5b50\u7c7b\u81ea\u5df1\u7684\u865a\u51fd\u6570\u8986\u76d6\u76f8\u5e94\u7684\u7236\u7c7b\u865a\u51fd\u6570\uff1b\u5982\u679c\u5b50\u7c7b\u6709\u65b0\u7684\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u6dfb\u52a0\u5230\u7b2c\u4e00\u4e2a\u865a\u51fd\u6570\u8868\u7684\u672b\u5c3e\u3002 \u865a\u51fd\u6570\u7684\u9759\u6001\u51b3\u8bae \u2003\u5728\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u865a\u51fd\u6570\u4e0d\u4f1a\u51fa\u73b0\u9884\u671f\u884c\u4e3a: \u5728\u57fa\u7c7b\u7684constructor\u548cdestructor\u5185\uff0c\u56e0\u4e3a\u5f53\u6211\u4eec\u6784\u9020\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4f1a\u9996\u5148\u8c03\u7528\u57fa\u7c7b\u7684constructor\uff0c\u82e5\u57fa\u7c7b\u4e2d\u5b58\u5728\u865a\u51fd\u6570\uff0c\u5219\u8c03\u7528\u7684\u662f\u4e00\u5b9a\u662f\u57fa\u7c7b\u81ea\u8eab\u7684\uff0c\u800c\u975e\u6d3e\u751f\u7c7b\u7684\uff0c\u56e0\u4e3a\u6b64\u65f6\u6d3e\u751f\u7c7b\u7684data members\u5c1a\u672a\u521d\u59cb\u5316\uff1b\u540c\u7406\uff0c\u5728\u57fa\u7c7bdeconstructor\u4e2d\u5b58\u5728\u865a\u51fd\u6570\u4e5f\u9002\u7528\u6b64\u89c4\u5219\uff0c\u56e0\u4e3a\u6d3e\u751f\u7c7b\u7684deconstructor\u5148\u88ab\u8c03\u7528\uff0c\u5176date members\u5df2\u7ecf\u88ab\u91ca\u653e\u3002 \u5f53\u6211\u4eec\u4f7f\u7528\u57fa\u7c7b\u7684\u5bf9\u8c61\uff0c\u800c\u975e\u6307\u9488\u6216\u5f15\u7528\u65f6\uff1b\u4e3a\u4e86\u80fd\u5728\u5355\u4e00\u5bf9\u8c61\u4e2d\u5c55\u73b0\u591a\u79cd\u578b\u522b\uff0c\u591a\u6001\u9700\u8981\u4e00\u5c42\u95f4\u63a5\u6027\uff0c\u5728C++\u4e2d\uff0c \u60df\u6709\u4ee5\u57fa\u7c7b\u7684\u6307\u9488\u548c\u5f15\u7528\u624d\u80fd\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u6982\u5ff5 \u3002\u5f53\u6211\u4eec\u4e3a\u57fa\u7c7b\u58f0\u660e\u4e00\u4e2a\u5b9e\u9645\u5bf9\u8c61\u65f6\uff0c\u540c\u65f6\u4e5f\u5c31\u914d\u7f6e\u51fa\u8db3\u4ee5\u5bb9\u7eb3\u8be5\u5bf9\u8c61\u7684\u5b9e\u9645\u5185\u5b58\u7a7a\u95f4\uff0c\u5982\u679c\u4f20\u5165\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u90a3\u4e48\u5c31\u4e0d\u4e00\u5b9a\u6709\u8db3\u591f\u7684\u5185\u5b58\u653e\u7f6e\u6d3e\u751f\u7c7b\u7684\u5404\u4e2adata members, \u90a3\u4e9b\u5c5e\u4e8e\u6d3e\u751f\u7c7b\u800c\u975e\u57fa\u7c7b\u7684\u6210\u5458\u5c06\u88ab\u5207\u6389\u3002 \u7eaf\u865a\u51fd\u6570 \u5728\u666e\u901a\u7684\u7eaf\u865a\u51fd\u6570\u540e\u9762\u52a0\u4e0a\u201c=0\u201d\uff0c eg. virtual void test() = 0; \u2003\u4f55\u65f6\u4f7f\u7528\u7eaf\u865a\u51fd\u6570: \u5f53\u60f3\u5728\u57fa\u7c7b\u4e2d\u62bd\u8c61\u51fa\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4e14\u8be5\u57fa\u7c7b\u53ea\u505a\u80fd\u88ab\u7ee7\u627f\uff08\u5373\u4e3a\u62bd\u8c61\u57fa\u7c7b\uff09\uff0c\u800c\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\uff1b \u8fd9\u4e2a\u65b9\u6cd5\u5fc5\u987b\u5728\u6d3e\u751f\u7c7b(derived class)\u4e2d\u88ab\u5b9e\u73b0\uff1b \u5982\u679c\u6ee1\u8db3\u4ee5\u4e0a\u4e24\u70b9\uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u8be5\u65b9\u6cd5\u7533\u660e\u4e3apure virtual function; \u53ef\u4ee5\u4e3a\u7eaf\u865a\u51fd\u6570\u63d0\u4f9b\u5b9a\u4e49\uff0c\u4e0d\u8fc7\u51fd\u6570\u4f53\u5fc5\u987b\u5b9a\u4e49\u5728\u7c7b\u7684\u5916\u90e8\u3002","title":"About Virtual Function"},{"location":"CPP/virtual/#about-virtual-function","text":"","title":"About Virtual Function"},{"location":"CPP/virtual/#c","text":"\u5728c++\u4e2d\uff0c\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\u53ef\u4ee5\u6307\u5411\u6216\u8005\u5f15\u7528\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u3002\u5bf9\u4e8e\u57fa\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\uff0c\u5176\u542b\u4e49\u662f\uff1a\u5f53\u901a\u8fc7\u57fa\u7c7b\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\u8c03\u7528\u8be5\u6210\u5458\u51fd\u6570\u65f6\uff0c\u82e5\u6d3e\u751f\u7c7b\u8986\u76d6(override)\u4e86\u57fa\u7c7b\u4e2d\u7684\u865a\u6210\u5458\u51fd\u6570\uff0c\u5c06\u6839\u636e\u6307\u9488\u5b9e\u9645\u6307\u5411\u7684\u5bf9\u8c61\u7c7b\u578b\u786e\u5b9a\u8c03\u7528\u7684\u51fd\u6570\uff0c\u800c\u975e\u6307\u9488\u7684\u7c7b\u578b\u3002 \u2003\u4e0a\u8ff0\u884c\u4e3a\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u52a8\u6001\u7ed1\u5b9a\uff08\u8fd0\u884c\u65f6\u7ed1\u5b9a\uff09\uff0c\u5373\u51fd\u6570\u7684\u8fd0\u884c\u7248\u672c\u7531\u5b9e\u53c2\u51b3\u5b9a\uff0c\u5728\u8fd0\u884c\u65f6\u9009\u62e9\u51fd\u6570\u7684\u7248\u672c\u3002 class Base{ public: virtual void test(){ cout << \u201c\u57fa\u7c7b\u65b9\u6cd5\u201d}; virtual ~Base(){}; } class Derived:public Base{ public: void test(){ cout << \u201c\u6d3e\u751f\u7c7b\u65b9\u6cd5\u201d}; } \u53ea\u9700\u5c06\u57fa\u7c7b\u4e2d\u7684\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u5373\u53ef\uff0c\u6d3e\u751f\u7c7b\u4e2d\u91cd\u5199\u7684virtual\u51fd\u6570\u81ea\u52a8\u6210\u4e3a\u865a\u51fd\u6570\uff1b \u6d3e\u751f\u7c7b\u82e5\u5b58\u5728\u548c\u7236\u7c7b\u865a\u51fd\u6570\u540c\u540d\u4f46\u53c2\u6570\u7c7b\u578b\u4e0d\u540c\u7684\u51fd\u6570\u65f6\uff0c\u4f1a\u5bfc\u81f4\u7236\u7c7b\u4e2d\u7684\u8fd9\u4e2a\u865a\u51fd\u6570\u5bf9\u4e8e\u5b50\u7c7b\u5bf9\u8c61\u4e0d\u53ef\u89c1\u3002\u6b64\u65f6\u53ef\u901a\u8fc7 Derived.Base::fcn() \u6765\u8c03\u7528\u88ab\u9690\u85cf\u7684\u51fd\u6570 \u57fa\u7c7b\u4e2d\u7684\u6790\u6784\u51fd\u6570\u5fc5\u987b\u4e3a\u865a\u51fd\u6570 \uff0c\u5426\u5219\u4f1a\u51fa\u73b0\u5bf9\u8c61\u91ca\u653e\u9519\u8bef\u3002\u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e0d\u662f\u865a\u51fd\u6570\uff0c\u5219\u5220\u9664\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u7684\u65f6\u5019\uff0cC++\u4e0d\u7ba1\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u4e00\u4e2a\u57fa\u7c7b\u5bf9\u8c61\u8fd8\u662f\u4e00\u4e2a\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\uff0c\u8c03\u7528\u7684\u90fd\u662f\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u800c\u4e0d\u662f\u6d3e\u751f\u7c7b\u7684\u3002\u5982\u679c\u5b9e\u9645\u6307\u5411\u7684\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4f9d\u8d56\u4e8e\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u7684\u4ee3\u7801\u6765\u91ca\u653e\u8d44\u6e90\uff0c\u8fd9\u6837\u505a\u5c31\u4f1a\u9020\u6210\u8d44\u6e90\u6cc4\u6f0f\u3002\u5982\u679c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u662f\u865a\u51fd\u6570\uff0c\u5e76\u4e14\u6d3e\u751f\u7c7b\u63d0\u4f9b\u81ea\u5df1\u7684\u6790\u6784\u51fd\u6570\uff0c\u5219\u5220\u9664\u57fa\u7c7b\u6307\u9488\u65f6\uff0c\u4f1a\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u3002 \u865a\u51fd\u6570\u7684\u4f7f\u7528\u5c06\u5bfc\u81f4\u7c7b\u5bf9\u8c61\u5360\u7528\u66f4\u5927\u7684\u5185\u5b58\u7a7a\u95f4\u3002\u7f16\u8bd1\u5668\u7ed9\u6bcf\u4e00\u4e2a\u5305\u62ec\u865a\u51fd\u6570\u7684\u5bf9\u8c61\u6dfb\u52a0\u4e86\u4e00\u4e2a\u9690\u85cf\u6210\u5458\uff1a\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u6307\u9488 vptr \u3002 \u2003 \u865a\u51fd\u6570\u8868\u662f\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u8bbe\u7f6e\u7684\u9759\u6001\u6570\u7ec4\uff0c\u5c5e\u4e8e\u7c7b\u800c\u975e\u67d0\u4e2a\u5177\u4f53\u7684\u5b9e\u4f8b \u3002\u865a\u51fd\u6570\u8868\u5305\u542b\u53ef\u7531\u7c7b\u7684\u5bf9\u8c61\u8c03\u7528\u7684\u6bcf\u4e2a\u865a\u51fd\u6570\u7684\u4e00\u4e2a\u6761\u76ee\u3002\u6b64\u8868\u4e2d\u7684\u6bcf\u4e2a\u6761\u76ee\u662f\u4e00\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u8be5\u7c7b\u53ef\u8bbf\u95ee\u7684\u51fd\u6570\u3002 \u2003vptr\u5728\u521b\u5efa\u7c7b\u5b9e\u4f8b\u65f6\u81ea\u52a8\u8bbe\u7f6e\uff0c\u4ee5\u4fbf\u6307\u5411\u8be5\u7c7b\u7684\u865a\u51fd\u6570\u8868(\u4e0ethis\u6307\u9488\u4e0d\u540c\uff0cthis\u6307\u9488\u5b9e\u9645\u4e0a\u662f\u7f16\u8bd1\u5668\u7528\u6765\u89e3\u6790\u81ea\u5f15\u7528\u7684\u51fd\u6570\u53c2\u6570\uff0cvptr\u662f\u4e00\u4e2a\u771f\u6b63\u7684\u6307\u9488)\u3002\u5f53\u6d3e\u751f\u7c7b\u91cd\u65b0\u5b9a\u4e49\u865a\u51fd\u6570\u65f6\uff0c\u5219\u5c06\u8be5\u51fd\u6570\u7684\u5730\u5740\u6dfb\u52a0\u5230\u865a\u51fd\u6570\u8868\u4e2d\u3002\u65e0\u8bba\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u4e2d\u5b9a\u4e49\u4e86\u591a\u5c11\u4e2a\u865a\u51fd\u6570\uff0c\u865a\u51fd\u6570\u6307\u9488\u53ea\u6709\u4e00\u4e2a\u3002\u76f8\u5e94\u5730\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u7684\u5927\u5c0f\u8981\u6bd4\u6ca1\u6709\u865a\u51fd\u6570\u65f6\u59274\u4e2a\u5b57\u8282\uff0832\u4f4d\u4e3b\u673a, 64\u4f4d\u673a\u5668\u5219\u4e3a8\u5b57\u8282)\u3002 \u6784\u9020\u51fd\u6570\u4e0d\u53ef\u4ee5\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff1a\u5c3d\u7ba1\u865a\u51fd\u6570\u8868vtable\u662f\u5728\u7f16\u8bd1\u9636\u6bb5\u5c31\u5df2\u7ecf\u5efa\u7acb\u7684\uff0c\u4f46\u6307\u5411\u865a\u51fd\u6570\u8868\u7684\u6307\u9488vptr\u662f\u5728\u8fd0\u884c\u9636\u6bb5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u65f6\u624d\u4ea7\u751f\u7684 \u3002 \u5982\u679c\u6784\u9020\u51fd\u6570\u662f\u865a\u7684\uff0c\u5c31\u9700\u8981\u901a\u8fc7\u865a\u6307\u9488\u6307\u5411\u7684\u865a\u51fd\u6570\u8868\u6765\u8c03\u7528\uff0c\u53ef\u662f\u6b64\u65f6\u5bf9\u8c61\u8fd8\u6ca1\u6709\u5b9e\u4f8b\u5316\uff0c\u5c1a\u672a\u5206\u914d\u5185\u5b58\uff0c\u5c31\u6ca1\u6709\u865a\u6307\u9488\uff0c\u6240\u4ee5\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u662f\u865a\u51fd\u6570\u3002 \u9759\u6001\u51fd\u6570\u4e0d\u53ef\u4ee5\u58f0\u660e\u4e3a\u865a\u51fd\u6570: static\u6210\u5458\u51fd\u6570\u4e0d\u5c5e\u4e8e\u4efb\u4f55\u7c7b\u5bf9\u8c61\u6216\u7c7b\u5b9e\u4f8b\uff0c\u4e14\u865a\u51fd\u6570\u4f9d\u9760vptr\u548cvtable\u6765\u5904\u7406\u3002vptr\u662f\u4e00\u4e2a\u6307\u9488\uff0c\u5728\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\u521b\u5efa\u751f\u6210\uff0c\u901a\u8fc7this\u6307\u9488\u6765\u8bbf\u95ee\u5b83\uff0c\u9759\u6001\u6210\u5458\u51fd\u6570\u6ca1\u6709this\u6307\u9488\uff0c\u6240\u4ee5\u65e0\u6cd5\u8bbf\u95eevptr\u3002 \u6790\u6784\u51fd\u6570\u53ef\u4ee5\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002\u5982\u679c\u6211\u4eec\u9700\u8981\u5220\u9664\u4e00\u4e2a\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u57fa\u7c7b\u6307\u9488\u65f6\uff0c\u5e94\u8be5\u628a\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002 \u4e8b\u5b9e\u4e0a\uff0c\u53ea\u8981\u4e00\u4e2a\u7c7b\u6709\u53ef\u80fd\u4f1a\u88ab\u5176\u5b83\u7c7b\u6240\u7ee7\u627f\uff0c \u5c31\u5e94\u8be5\u58f0\u660e\u865a\u6790\u6784\u51fd\u6570(\u54ea\u6015\u8be5\u6790\u6784\u51fd\u6570\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c)\u3002 class A { public: virtual void vfunc1(); virtual void vfunc2(); void func1(); void func2(); private: int m_data1, m_data2; }; class B : public A { public: virtual void vfunc1(); void func1(); private: int m_data3; }; class C: public B { public: virtual void vfunc2(); void func2(); private: int m_data1, m_data4; }; \u901a\u8fc7\u865a\u51fd\u6570\u8868\u8c03\u7528\u865a\u51fd\u6570 class CTest { public: virtual void Test1(void){cout<< \"CTest Test1\\n\";} virtual void Test2(void){cout<< \"CTest Test2\\n\";} }; typedef void(*fun)(); void testT(){ CTest cc; typedef long long int64; // 64\u4f4d\u673a\u4e0a\uff0c\u6307\u9488\u5927\u5c0f\u662f8\u4e2aByte, \u6307\u9488+1\u504f\u79fb64\u4f4d\u957f\u5ea6 int64* Vptr=(int64*)(&cc); //\u865a\u6307\u9488\u503c\u4ee3\u8868\u7684\u662f\u865a\u51fd\u6570\u8868\u5165\u53e3\u5730\u5740 int64* pVtbl = (int64*)*Vptr; //\u865a\u51fd\u6570\u8868\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u5143\u7d20\u662f\u51fd\u6570\u6307\u9488\uff0cpVtbl\u76f8\u5f53\u4e8e\u6570\u7ec4\u5143\u7d20\u9996\u5730\u5740 int64* pFirstVf = (int64*)(pVtbl[0]); //pVtbl[0] \u7b49\u4ef7\u4e8e *(pVtbl) int64* pFirstVf2 = (int64*)*pVtbl; int64* pSecondVf = (int64*)(pVtbl[1]); //pVtbl[1] \u7b49\u4ef7\u4e8e *(pVtbl+1) int64* pSecondVf2 = (int64*)*(pVtbl+1); fun pf; pf = (fun)pFirstVf; pf(); // CTest Test1 pf = (fun)pFirstVf2; pf(); //CTest Test1 pf = (fun)pSecondVf; pf(); //CTest Test2 pf = (fun)pSecondVf2; pf(); //CTest Test2 } \u591a\u91cd\u7ee7\u627f\u673a\u5236\u4e0b\u7684\u865a\u51fd\u6570\u8868 \u2003\u5b50\u7c7b\u5bf9\u8c61\u4f1a\u6709\u591a\u4e2a\u865a\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u4e0d\u540c\u7684\u865a\u51fd\u6570\u8868\uff0c\u865a\u51fd\u6570\u6307\u9488\u987a\u5e8f\u6309\u7167\u6d3e\u751f\u987a\u5e8f\uff1b\u5982\u679c\u5b50\u7c7b\u6539\u5199\u4e86\u7236\u7c7b\u7684\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u4f1a\u7528\u5b50\u7c7b\u81ea\u5df1\u7684\u865a\u51fd\u6570\u8986\u76d6\u76f8\u5e94\u7684\u7236\u7c7b\u865a\u51fd\u6570\uff1b\u5982\u679c\u5b50\u7c7b\u6709\u65b0\u7684\u865a\u51fd\u6570\uff0c\u90a3\u4e48\u5c31\u6dfb\u52a0\u5230\u7b2c\u4e00\u4e2a\u865a\u51fd\u6570\u8868\u7684\u672b\u5c3e\u3002","title":"\u865a\u51fd\u6570\u5b9e\u73b0\u4e86C++\u7684\u591a\u6001"},{"location":"CPP/virtual/#_1","text":"\u5728\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5\u4e0b\uff0c\u865a\u51fd\u6570\u4e0d\u4f1a\u51fa\u73b0\u9884\u671f\u884c\u4e3a: \u5728\u57fa\u7c7b\u7684constructor\u548cdestructor\u5185\uff0c\u56e0\u4e3a\u5f53\u6211\u4eec\u6784\u9020\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u4f1a\u9996\u5148\u8c03\u7528\u57fa\u7c7b\u7684constructor\uff0c\u82e5\u57fa\u7c7b\u4e2d\u5b58\u5728\u865a\u51fd\u6570\uff0c\u5219\u8c03\u7528\u7684\u662f\u4e00\u5b9a\u662f\u57fa\u7c7b\u81ea\u8eab\u7684\uff0c\u800c\u975e\u6d3e\u751f\u7c7b\u7684\uff0c\u56e0\u4e3a\u6b64\u65f6\u6d3e\u751f\u7c7b\u7684data members\u5c1a\u672a\u521d\u59cb\u5316\uff1b\u540c\u7406\uff0c\u5728\u57fa\u7c7bdeconstructor\u4e2d\u5b58\u5728\u865a\u51fd\u6570\u4e5f\u9002\u7528\u6b64\u89c4\u5219\uff0c\u56e0\u4e3a\u6d3e\u751f\u7c7b\u7684deconstructor\u5148\u88ab\u8c03\u7528\uff0c\u5176date members\u5df2\u7ecf\u88ab\u91ca\u653e\u3002 \u5f53\u6211\u4eec\u4f7f\u7528\u57fa\u7c7b\u7684\u5bf9\u8c61\uff0c\u800c\u975e\u6307\u9488\u6216\u5f15\u7528\u65f6\uff1b\u4e3a\u4e86\u80fd\u5728\u5355\u4e00\u5bf9\u8c61\u4e2d\u5c55\u73b0\u591a\u79cd\u578b\u522b\uff0c\u591a\u6001\u9700\u8981\u4e00\u5c42\u95f4\u63a5\u6027\uff0c\u5728C++\u4e2d\uff0c \u60df\u6709\u4ee5\u57fa\u7c7b\u7684\u6307\u9488\u548c\u5f15\u7528\u624d\u80fd\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u6982\u5ff5 \u3002\u5f53\u6211\u4eec\u4e3a\u57fa\u7c7b\u58f0\u660e\u4e00\u4e2a\u5b9e\u9645\u5bf9\u8c61\u65f6\uff0c\u540c\u65f6\u4e5f\u5c31\u914d\u7f6e\u51fa\u8db3\u4ee5\u5bb9\u7eb3\u8be5\u5bf9\u8c61\u7684\u5b9e\u9645\u5185\u5b58\u7a7a\u95f4\uff0c\u5982\u679c\u4f20\u5165\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u90a3\u4e48\u5c31\u4e0d\u4e00\u5b9a\u6709\u8db3\u591f\u7684\u5185\u5b58\u653e\u7f6e\u6d3e\u751f\u7c7b\u7684\u5404\u4e2adata members, \u90a3\u4e9b\u5c5e\u4e8e\u6d3e\u751f\u7c7b\u800c\u975e\u57fa\u7c7b\u7684\u6210\u5458\u5c06\u88ab\u5207\u6389\u3002","title":"\u865a\u51fd\u6570\u7684\u9759\u6001\u51b3\u8bae"},{"location":"CPP/virtual/#_2","text":"\u5728\u666e\u901a\u7684\u7eaf\u865a\u51fd\u6570\u540e\u9762\u52a0\u4e0a\u201c=0\u201d\uff0c eg. virtual void test() = 0; \u2003\u4f55\u65f6\u4f7f\u7528\u7eaf\u865a\u51fd\u6570: \u5f53\u60f3\u5728\u57fa\u7c7b\u4e2d\u62bd\u8c61\u51fa\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4e14\u8be5\u57fa\u7c7b\u53ea\u505a\u80fd\u88ab\u7ee7\u627f\uff08\u5373\u4e3a\u62bd\u8c61\u57fa\u7c7b\uff09\uff0c\u800c\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\uff1b \u8fd9\u4e2a\u65b9\u6cd5\u5fc5\u987b\u5728\u6d3e\u751f\u7c7b(derived class)\u4e2d\u88ab\u5b9e\u73b0\uff1b \u5982\u679c\u6ee1\u8db3\u4ee5\u4e0a\u4e24\u70b9\uff0c\u53ef\u4ee5\u8003\u8651\u5c06\u8be5\u65b9\u6cd5\u7533\u660e\u4e3apure virtual function; \u53ef\u4ee5\u4e3a\u7eaf\u865a\u51fd\u6570\u63d0\u4f9b\u5b9a\u4e49\uff0c\u4e0d\u8fc7\u51fd\u6570\u4f53\u5fc5\u987b\u5b9a\u4e49\u5728\u7c7b\u7684\u5916\u90e8\u3002","title":"\u7eaf\u865a\u51fd\u6570"},{"location":"DataStruct/API/","text":"API C++ string //\u81ea\u8eab\u7279\u6027\u65b9\u9762\u7684API \u3000\u30001\u3001int capacity()\uff1a\u8fd4\u56de\u5f53\u524d\u5bb9\u91cf\u3010\u5373string\u4e2d\u5728\u4e0d\u9700\u8981\u589e\u52a0\u5185\u5b58\u7684\u60c5\u51b5\u4e0b\u8fd8\u53ef\u5b58\u653e\u7684\u5143\u7d20\u4e2a\u6570\u3011\u3002 \u3000\u30002\u3001int max_size()\uff1a\u8fd4\u56destring\u5bf9\u8c61\u4e2d\u53ef\u5b58\u653e\u7684\u6700\u5927\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 \u3000\u30003\u3001int size()\uff1a\u8fd4\u56de\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u5927\u5c0f \u3000\u30004\u3001int length()\uff1a\u8fd4\u56de\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 \u3000\u30005\u3001bool empty()\uff1a\u5224\u65ad\u5f53\u524d\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u7a7a \u3000\u30006\u3001void resize(int len, char c)\uff1a\u628a\u5b57\u7b26\u4e32\u5f53\u524d\u5927\u5c0f\u8bbe\u7f6e\u4e3alen\uff0c\u591a\u53bb\u5c11\u8865\uff0c\u5b57\u7b26c\u586b\u5145\u4e0d\u8db3\u7684\u90e8\u5206 //\u5173\u4e8e\u67e5\u627e 1\u3001size_type find ( const string &str, size_type index ) \u3000\u3000\u529f\u80fd\u4ecb\u7ecd\uff1a\u8fd4\u56destr\u5728\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u4eceindex\u5f00\u59cb\u67e5\u627e\uff0c\u5982\u679c\u67e5\u627e\u5931\u8d25\uff0c\u5219\u8fd4\u56destring::npos\u3002 \u3000\u3000size_type find( const char *str, size_type index, size_type length )\uff1a \u8fd4\u56destr\u5728\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff08\u4eceindex\u5f00\u59cb\u67e5\u627e\uff0c\u957f\u5ea6\u4e3alength\uff09\uff0c\u5982\u679c\u6ca1\u627e\u5230\u5c31\u8fd4\u56destring::npos\u3002 \u3000\u3000size_type find( char ch, size_type index )\uff1a\u8fd4\u56de\u5b57\u7b26ch\u5728\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff08\u4eceindex\u5f00\u59cb\u67e5\u627e\uff09\uff0c \u5982\u679c\u6ca1\u627e\u5230\u5c31\u8fd4\u56destring::npos\u3002 \u3000\u3000//\u4ee5\u4e0a\u7684\u67e5\u627e\u529f\u80fd\u90fd\u662f\u6309\u7167\u4ece\u524d\u5f80\u540e\u7684\u987a\u5e8f\u8fdb\u884c\u67e5\u627e\uff0c\u5982\u679c\u60f3\u8981\u6309\u7167\u4ece\u540e\u5f80\u524d\u7684\u987a\u5e8f\u8fdb\u884c\u67e5\u627e\u7684\u8bdd\uff0c\u53ef\u4ee5\u7528\"rfind\"\u8bed\u53e5\u3002 \u3000\u30002\u3001size_type find_first_of ( const string& str, size_type pos = 0 ) \u3000\u3000\u3000\u529f\u80fd\u4ecb\u7ecd\uff1a\u8fd4\u56destr\u4e2d\u4efb\u610f\u5b57\u7b26\u5728\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u4ece\u4f4d\u7f6e0\u5f00\u59cb\u67e5\u627e\u3002 \u3000\u3000\u3000size_type find_first_of ( const char* s, size_type pos, size_t n ) \u3000\u3000\u3000size_type find_first_of ( const char* s, size_type pos = 0 ) \u3000\u3000\u3000size_type find_first_of ( char c, size_type pos = 0 ) \u3000\u30003\u3001find_first_not_of\u529f\u80fd\u4e0efind_first_of()\u51fd\u6570\u7684\u529f\u80fd\u6b63\u597d\u76f8\u53cd\u3002 \u3000\u30004\u3001find_last_of \u3000\u3000\u4e0efind_first_of()\u51fd\u6570\u76f8\u6bd4\u800c\u8a00\uff0c\u5176\u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e\uff1afind_last_of()\u662f\u627e\u51fa\u6700\u540e\u4e00\u4e2a\u76f8\u540c\u7684\u4f4d\u7f6e\u3002 \u3000\u30005\u3001find_last_not_of \u4e0efind_last_of()\u529f\u80fd\u51fd\u6570\u6b63\u597d\u76f8\u53cd\u3002 //\u5176\u4ed6\u65b9\u9762\u7684\u51fd\u6570 \u3000\u30001\u3001string &insert(int p,const string &s)\uff1a\u5728p\u4f4d\u7f6e\u63d2\u5165\u5b57\u7b26\u4e32s \u3000\u30002\u3001string &replace(int p, int n,const char *s)\uff1a\u5220\u9664\u4ecep\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\uff0c\u7136\u540e\u5728p\u5904\u63d2\u5165\u5b57\u7b26\u4e32s \u3000\u30003\u3001string &erase(int p, int n)\uff1a\u5220\u9664p\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\uff0c\u8fd4\u56de\u4fee\u6539\u540e\u7684\u5b57\u7b26\u4e32 \u3000\u30004\u3001string substr(int pos, int n )\uff1a\u8fd4\u56depos\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 \u3000\u30005\u3001void swap(string &s2)\uff1a\u4ea4\u6362\u5f53\u524d\u5b57\u7b26\u4e32\u4e0es2\u7684\u503c \u3000\u30006\u3001string &append(const char *s)\uff1a\u628a\u5b57\u7b26\u4e32s\u8fde\u63a5\u5230\u5f53\u524d\u5b57\u7b26\u4e32\u7ed3\u5c3e \u3000\u30007\u3001void push_back(char c)\uff1a\u5f53\u524d\u5b57\u7b26\u4e32\u5c3e\u90e8\u52a0\u4e00\u4e2a\u5b57\u7b26c \u3000\u30008\u3001const char *data()\uff1a\u8fd4\u56de\u4e00\u4e2a\u975enull\u7ec8\u6b62\u7684c\u5b57\u7b26\u6570\u7ec4\uff0c \u3000\u30009\u3001const char *c_str()\uff1a\u8fd4\u56de\u4e00\u4e2a\u4ee5null\u7ec8\u6b62\u7684c\u5b57\u7b26\u4e32\uff0c\u5373c_str()\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u6b63\u89c4C\u5b57\u7b26\u4e32\u7684\u6307\u9488, \u5185\u5bb9\u4e0e\u672cstring\u4e32\u76f8\u540c,\u7528\u4e8estring\u8f6cconst char* C string 1\u3001strcpy(char* s1, const char*s2)\uff1a\u590d\u5236\u5b57\u7b26\u4e32s2\u5230s1\u3002 \u3000\u30002\u3001strcat(char* s1, const char* s2)\uff1a\u8fde\u63a5\u5b57\u7b26\u4e32s2\u5230\u5b57\u7b26\u4e32s1\u7684\u672b\u5c3e\u3010\u5982\u679c\u5728\u8fdb\u884c\u8fde\u63a5\u64cd\u4f5c\u4e4b\u540e\uff0c s1\u7684\u957f\u5ea6\u8d85\u8fc7\u7684s1\u7684buffer size\uff0c\u7f16\u8bd1\u4f1a\u51fa\u9519\u3011\u3002 \u3000\u30003\u3001strlen(const char* s1)\uff1a\u8fd4\u56de\u5b57\u7b26\u4e32s1\u7684\u957f\u5ea6\uff08int\uff09\u3002 \u3000\u30004\u3001strcmp(const char* s1, const char* s2)\uff1a\u6bd4\u8f83\u5b57\u7b26\u4e32s1\u548cs2\uff0c\u5982\u679c\u4e8c\u8005\u662f\u76f8\u540c\u7684\uff0c\u8fd4\u56de0\uff1b \u5982\u679cs1 < s2\uff0c\u8fd4\u56de\u503c\u5c0f\u4e8e0\uff1b\u5982\u679cs1 > s2\uff0c\u8fd4\u56de\u503c\u5927\u4e8e0\u3002 \u3000\u30005\u3001strchr(char* s1, int ch)\uff1a\u8fd4\u56de\u4e00\u4e2a\u6307\u9488\uff08char *\uff09\uff0c\u6307\u5411\u7684\u662f\u5728\u5b57\u7b26\u4e32s1\u4e2d\u5b57\u7b26ch\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 \u3000\u30006\u3001strstr(const char* s1, const char* s2)\uff1a\u8fd4\u56de\u4e00\u4e2a\u6307\u9488\uff08char *\uff09\uff0c\u6307\u5411\u5b57\u7b26\u4e32s1\u4e2d\u5b57\u7b26\u4e32s2\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 priority_queue \u2003\u4f18\u5148\u7ea7\u961f\u5217/\u5806 auto cmp=greater<int>(); vector<int> vec{..}; // \u6700\u5c0f\u5806\uff0c\u5806\u9876\u5143\u7d20\u662f\u6700\u5c0f\u7684\u4e00\u4e2a\u5143\u7d20 priority_queue<int, vector<int>, greater<int>> heap(cmp, vec); // \u9ed8\u8ba4\u662f\u6700\u5927\u5806 priority_queue<int> maxHeap; //\u6b64\u65f6\u4e0d\u80fd\u4f20\u5165\u4e00\u4e2avector\u8fdb\u884c\u521d\u59cb\u5316 auto lessCmp = less<int>(); priority_queue<int, vector<int>, less<int>> maxHeap(lessCmp, vec);","title":"API"},{"location":"DataStruct/API/#api","text":"","title":"API"},{"location":"DataStruct/API/#c-string","text":"//\u81ea\u8eab\u7279\u6027\u65b9\u9762\u7684API \u3000\u30001\u3001int capacity()\uff1a\u8fd4\u56de\u5f53\u524d\u5bb9\u91cf\u3010\u5373string\u4e2d\u5728\u4e0d\u9700\u8981\u589e\u52a0\u5185\u5b58\u7684\u60c5\u51b5\u4e0b\u8fd8\u53ef\u5b58\u653e\u7684\u5143\u7d20\u4e2a\u6570\u3011\u3002 \u3000\u30002\u3001int max_size()\uff1a\u8fd4\u56destring\u5bf9\u8c61\u4e2d\u53ef\u5b58\u653e\u7684\u6700\u5927\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002 \u3000\u30003\u3001int size()\uff1a\u8fd4\u56de\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u5927\u5c0f \u3000\u30004\u3001int length()\uff1a\u8fd4\u56de\u5f53\u524d\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 \u3000\u30005\u3001bool empty()\uff1a\u5224\u65ad\u5f53\u524d\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u7a7a \u3000\u30006\u3001void resize(int len, char c)\uff1a\u628a\u5b57\u7b26\u4e32\u5f53\u524d\u5927\u5c0f\u8bbe\u7f6e\u4e3alen\uff0c\u591a\u53bb\u5c11\u8865\uff0c\u5b57\u7b26c\u586b\u5145\u4e0d\u8db3\u7684\u90e8\u5206 //\u5173\u4e8e\u67e5\u627e 1\u3001size_type find ( const string &str, size_type index ) \u3000\u3000\u529f\u80fd\u4ecb\u7ecd\uff1a\u8fd4\u56destr\u5728\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u4eceindex\u5f00\u59cb\u67e5\u627e\uff0c\u5982\u679c\u67e5\u627e\u5931\u8d25\uff0c\u5219\u8fd4\u56destring::npos\u3002 \u3000\u3000size_type find( const char *str, size_type index, size_type length )\uff1a \u8fd4\u56destr\u5728\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff08\u4eceindex\u5f00\u59cb\u67e5\u627e\uff0c\u957f\u5ea6\u4e3alength\uff09\uff0c\u5982\u679c\u6ca1\u627e\u5230\u5c31\u8fd4\u56destring::npos\u3002 \u3000\u3000size_type find( char ch, size_type index )\uff1a\u8fd4\u56de\u5b57\u7b26ch\u5728\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff08\u4eceindex\u5f00\u59cb\u67e5\u627e\uff09\uff0c \u5982\u679c\u6ca1\u627e\u5230\u5c31\u8fd4\u56destring::npos\u3002 \u3000\u3000//\u4ee5\u4e0a\u7684\u67e5\u627e\u529f\u80fd\u90fd\u662f\u6309\u7167\u4ece\u524d\u5f80\u540e\u7684\u987a\u5e8f\u8fdb\u884c\u67e5\u627e\uff0c\u5982\u679c\u60f3\u8981\u6309\u7167\u4ece\u540e\u5f80\u524d\u7684\u987a\u5e8f\u8fdb\u884c\u67e5\u627e\u7684\u8bdd\uff0c\u53ef\u4ee5\u7528\"rfind\"\u8bed\u53e5\u3002 \u3000\u30002\u3001size_type find_first_of ( const string& str, size_type pos = 0 ) \u3000\u3000\u3000\u529f\u80fd\u4ecb\u7ecd\uff1a\u8fd4\u56destr\u4e2d\u4efb\u610f\u5b57\u7b26\u5728\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u4ece\u4f4d\u7f6e0\u5f00\u59cb\u67e5\u627e\u3002 \u3000\u3000\u3000size_type find_first_of ( const char* s, size_type pos, size_t n ) \u3000\u3000\u3000size_type find_first_of ( const char* s, size_type pos = 0 ) \u3000\u3000\u3000size_type find_first_of ( char c, size_type pos = 0 ) \u3000\u30003\u3001find_first_not_of\u529f\u80fd\u4e0efind_first_of()\u51fd\u6570\u7684\u529f\u80fd\u6b63\u597d\u76f8\u53cd\u3002 \u3000\u30004\u3001find_last_of \u3000\u3000\u4e0efind_first_of()\u51fd\u6570\u76f8\u6bd4\u800c\u8a00\uff0c\u5176\u4e0d\u540c\u7684\u5730\u65b9\u5728\u4e8e\uff1afind_last_of()\u662f\u627e\u51fa\u6700\u540e\u4e00\u4e2a\u76f8\u540c\u7684\u4f4d\u7f6e\u3002 \u3000\u30005\u3001find_last_not_of \u4e0efind_last_of()\u529f\u80fd\u51fd\u6570\u6b63\u597d\u76f8\u53cd\u3002 //\u5176\u4ed6\u65b9\u9762\u7684\u51fd\u6570 \u3000\u30001\u3001string &insert(int p,const string &s)\uff1a\u5728p\u4f4d\u7f6e\u63d2\u5165\u5b57\u7b26\u4e32s \u3000\u30002\u3001string &replace(int p, int n,const char *s)\uff1a\u5220\u9664\u4ecep\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\uff0c\u7136\u540e\u5728p\u5904\u63d2\u5165\u5b57\u7b26\u4e32s \u3000\u30003\u3001string &erase(int p, int n)\uff1a\u5220\u9664p\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\uff0c\u8fd4\u56de\u4fee\u6539\u540e\u7684\u5b57\u7b26\u4e32 \u3000\u30004\u3001string substr(int pos, int n )\uff1a\u8fd4\u56depos\u5f00\u59cb\u7684n\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32 \u3000\u30005\u3001void swap(string &s2)\uff1a\u4ea4\u6362\u5f53\u524d\u5b57\u7b26\u4e32\u4e0es2\u7684\u503c \u3000\u30006\u3001string &append(const char *s)\uff1a\u628a\u5b57\u7b26\u4e32s\u8fde\u63a5\u5230\u5f53\u524d\u5b57\u7b26\u4e32\u7ed3\u5c3e \u3000\u30007\u3001void push_back(char c)\uff1a\u5f53\u524d\u5b57\u7b26\u4e32\u5c3e\u90e8\u52a0\u4e00\u4e2a\u5b57\u7b26c \u3000\u30008\u3001const char *data()\uff1a\u8fd4\u56de\u4e00\u4e2a\u975enull\u7ec8\u6b62\u7684c\u5b57\u7b26\u6570\u7ec4\uff0c \u3000\u30009\u3001const char *c_str()\uff1a\u8fd4\u56de\u4e00\u4e2a\u4ee5null\u7ec8\u6b62\u7684c\u5b57\u7b26\u4e32\uff0c\u5373c_str()\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u6b63\u89c4C\u5b57\u7b26\u4e32\u7684\u6307\u9488, \u5185\u5bb9\u4e0e\u672cstring\u4e32\u76f8\u540c,\u7528\u4e8estring\u8f6cconst char*","title":"C++ string"},{"location":"DataStruct/API/#c-string_1","text":"1\u3001strcpy(char* s1, const char*s2)\uff1a\u590d\u5236\u5b57\u7b26\u4e32s2\u5230s1\u3002 \u3000\u30002\u3001strcat(char* s1, const char* s2)\uff1a\u8fde\u63a5\u5b57\u7b26\u4e32s2\u5230\u5b57\u7b26\u4e32s1\u7684\u672b\u5c3e\u3010\u5982\u679c\u5728\u8fdb\u884c\u8fde\u63a5\u64cd\u4f5c\u4e4b\u540e\uff0c s1\u7684\u957f\u5ea6\u8d85\u8fc7\u7684s1\u7684buffer size\uff0c\u7f16\u8bd1\u4f1a\u51fa\u9519\u3011\u3002 \u3000\u30003\u3001strlen(const char* s1)\uff1a\u8fd4\u56de\u5b57\u7b26\u4e32s1\u7684\u957f\u5ea6\uff08int\uff09\u3002 \u3000\u30004\u3001strcmp(const char* s1, const char* s2)\uff1a\u6bd4\u8f83\u5b57\u7b26\u4e32s1\u548cs2\uff0c\u5982\u679c\u4e8c\u8005\u662f\u76f8\u540c\u7684\uff0c\u8fd4\u56de0\uff1b \u5982\u679cs1 < s2\uff0c\u8fd4\u56de\u503c\u5c0f\u4e8e0\uff1b\u5982\u679cs1 > s2\uff0c\u8fd4\u56de\u503c\u5927\u4e8e0\u3002 \u3000\u30005\u3001strchr(char* s1, int ch)\uff1a\u8fd4\u56de\u4e00\u4e2a\u6307\u9488\uff08char *\uff09\uff0c\u6307\u5411\u7684\u662f\u5728\u5b57\u7b26\u4e32s1\u4e2d\u5b57\u7b26ch\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 \u3000\u30006\u3001strstr(const char* s1, const char* s2)\uff1a\u8fd4\u56de\u4e00\u4e2a\u6307\u9488\uff08char *\uff09\uff0c\u6307\u5411\u5b57\u7b26\u4e32s1\u4e2d\u5b57\u7b26\u4e32s2\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002","title":"C string"},{"location":"DataStruct/API/#priority_queue","text":"\u4f18\u5148\u7ea7\u961f\u5217/\u5806 auto cmp=greater<int>(); vector<int> vec{..}; // \u6700\u5c0f\u5806\uff0c\u5806\u9876\u5143\u7d20\u662f\u6700\u5c0f\u7684\u4e00\u4e2a\u5143\u7d20 priority_queue<int, vector<int>, greater<int>> heap(cmp, vec); // \u9ed8\u8ba4\u662f\u6700\u5927\u5806 priority_queue<int> maxHeap; //\u6b64\u65f6\u4e0d\u80fd\u4f20\u5165\u4e00\u4e2avector\u8fdb\u884c\u521d\u59cb\u5316 auto lessCmp = less<int>(); priority_queue<int, vector<int>, less<int>> maxHeap(lessCmp, vec);","title":"priority_queue"},{"location":"DataStruct/Algorithm/","text":"Algorithm Binary Search //\u4e8c\u5206\u67e5\u627e, vec\u9012\u589e\uff0c int binarySerach(std::vector<int> &vec, int target){ if(vec.size()==0 || target<vec[0] || target>vec[vec.size()-1])return -1; int left=0, right=vec.size()-1; while(left<=right){ int mid=left+(right-left)/2; if(target==vec[mid])return mid; else if(vec[mid] < target) left=mid+1; else if(vec[mid] > target) right=mid-1; } return -1; } // \u4e8c\u5206\u67e5\u627e\uff0c\u5bfb\u627e\u5de6\u4fa7\u8fb9\u754c, \u5373\u6700\u5de6\u8fb9\u7684target int binarySearchLSide(std::vector<int>& vec, int target){ if(vec.size()==0 || target<vec[0] || target>vec[vec.size()-1])return -1; int left=0, right=vec.size()-1; while(left<=right){ int mid=left+(right-left)/2; if(target==vec[mid])right=mid-1; //\u6536\u7f29\u53f3\u4fa7\u8fb9\u754c\uff0c\u9501\u5b9a\u5de6\u4fa7 else if(vec[mid] < target) left=mid+1; else if(vec[mid] > target) right=mid-1; } if(left>=vec.size() || vec[left]!=target) return -1; return left; } // \u4e8c\u5206\u67e5\u627e\uff0c\u5bfb\u627e\u53f3\u4fa7\u8fb9\u754c\uff0c\u5373\u6700\u53f3\u8fb9\u7684target int binarySearchRSide(std::vector<int>& vec, int target){ if(vec.size()==0 || target<vec[0] || target>vec[vec.size()-1])return -1; int left=0, right=vec.size()-1; while(left<=right){ //\u7ed3\u675f\u5faa\u73af\u6761\u4ef6 right=left-1 int mid=left+(right-left)/2; if(target==vec[mid])left=mid+1; //\u6536\u7f29\u5de6\u4fa7\u8fb9\u754c\uff0c\u9501\u5b9a\u53f3\u4fa7 else if(vec[mid] < target) left=mid+1; else if(vec[mid] > target) right=mid-1; } if(right<0 || vec[right]!=target) return -1; else return right; } // \u4e8c\u5206\u67e5\u627e\u53d8\u5f62 // \u6570\u7ec4A,\u5c06\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u65cb\u8f6c\uff0c\u524d\u9762\u90e8\u5206\u79fb\u52a8\u5230\u540e\u9762\uff0c\u6240\u4ee5 A[0:x]\u662f\u9012\u589e\u7684\uff0cA[x+1:-1]\u662f\u9012\u589e\u7684\uff0c // \u5373A[x+1]<A[-1]<A[0]<A[x-1]; // \u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e92\u4e0d\u76f8\u540c; \u5f53\u7136\u4e5f\u53ef\u4ee5\u4e0d\u65cb\u8f6c // \u6c42\u6570\u7ec4\u4e2d\u6700\u5c0f\u503c int findMin(vector<int>& nums) { int left=1, right=nums.size()-1, target=nums[0]; // \u5728\u6bd4nums[0]\u5c0f\u7684\u5143\u7d20\u4e2d\u5bfb\u627e\u6700\u5de6\u4fa7 while(left<=right){ int mid=(left+right)/2; if(nums[mid]<target)right=mid-1; else left=mid+1; } if(left==nums.size())return nums[0];// \u8bf4\u660e\u6574\u4e2a\u6570\u7ec4\u6709\u5e8f return min(nums[0], nums[left]); // \u7531\u4e8e\u524d\u9762\u9012\u589e\u90e8\u5206\u6709\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u9700\u8981\u5224\u65adnums[0]\u548c // \u540e\u9762\u9012\u589e\u90e8\u5206\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20nums[left]\u5927\u5c0f } \u6811\u5f62DP vector<int> num_son; //\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2a\u6570 vector<vector<int>> sons; //\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9 vector<int> w; //\u5b58\u50a8\u5feb\u4e50\u6307\u6570 vector<bool> father; //\u8be5\u8282\u70b9\u662f\u5426\u6709\u7236\u8282\u70b9 void dfs(int root, vector<vector<int>>& dp){ dp[root][1] = w[root]; for(int i=0;i<num_son[root];i++){ int son = sons[root][i]; dfs(son, dp); dp[root][1] += dp[son][0]; dp[root][0] += max(dp[son][0], dp[son][1]); } } int main(){ int N; cin >> N; num_son.resize(N); sons.resize(N); w.resize(N); father.resize(N); vector<vector<int>> dp(N, vector<int>(2)); for(int i=0;i<N;i++)cin >> w[i]; //\u8f93\u5165\u5b50\u8282\u70b9\u548c\u5176\u7236\u8282\u70b9\uff0c0~N-1 for(int i=0;i<N-1;i++){ int x, y; //x\u4e3a\u5b50\u8282\u70b9\uff0cy\u4e3a\u7236\u8282\u70b9 cin>>x>>y; num_son[y]++; sons[y].push_back(x); father[x]=true; } int root=0; while(father[root])root++; dfs(root, dp); cout<<\"result:\"<<max(dp[root][0], dp[root][1])<<endl; return 0; } \u5b9e\u73b0shuffle \u2003\u8981\u53d6\u5f97 [a,b] \u7684\u968f\u673a\u6574\u6570\uff0c\u4f7f\u7528 (rand() % (b-a+1)) + a; \u2003\u8981\u53d6\u5f97 (a,b] \u7684\u968f\u673a\u6574\u6570\uff0c\u4f7f\u7528 (rand() % (b-a)) +a+1; #define randInt(a, b) ((rand()%(b-a+1))+a) //\u4ea7\u751f[a, b]\u4e4b\u95f4\u7684\u968f\u673a\u6574\u6570 int N=20; vector<int> vec(N); for(int i=0;i<N;i++)vec[i]=i; void shuffle(vector<int>& vec){ srand((unsigned)time(NULL)); //\u91c7\u7528\u65f6\u95f4\u4f5c\u4e3a\u968f\u673a\u6570\u79cd\u5b50 for(int i=N-1;i>0;i--){ // i>0\u4e0ei>=0\u6548\u679c\u4e00\u81f4 int j = randInt(0, i); swap(vec[i], vec[j]); } //\u4e0b\u9762\u4ea6\u53ef // for(int i=0;i<N;i++) // i<N\u4e0ei<N-1, \u6548\u679c\u4e00\u81f4\uff0c // { // int j = randInt(i, N-1); // swap(vec[i], vec[j]); // } } \u2003\u5982\u4f55\u9a8c\u8bc1shuffle\u6548\u679c: \u2003\u9996\u5148\u7b97\u6cd5\u4ea7\u751f\u7684\u7ed3\u679c\u5fc5\u987b\u6709N!\u79cd\uff0c\u5176\u6b21\u5bf9\u4e8e\u6bcf\u79cd\u53ef\u80fd\u51fa\u73b0\u7684\u7ed3\u679c\u7684\u6982\u7387\u5fc5\u987b\u76f8\u7b49\u3002 \u2003\u9488\u5bf9\u5e8f\u52170~N-1\uff0c\u6267\u884cM\u6b21(\u59821\u4e07\u6b21\u6216\u5341\u4e07\u6b21)shuffle\u7b97\u6cd5\uff0c\u8bb0\u5f55\u5404\u79cd\u7ed3\u679c\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5404\u79cd\u7ed3\u679c\u7684\u7684\u51fa\u73b0\u6b21\u6570\u5e94\u63a5\u8fd11/N!\uff0c\u8fd9\u91ccN\u4e00\u822c\u53d6\u4e2a\u6bd4\u8f83\u5c0f\u7684\u6570\uff0c\u59825\u62166; \u2003\u6216\u8005\u8ba9\u6570\u7ec4\u4e2d\u53ea\u6709\u67d0\u4e00\u4f4d\u4e3a1\uff0c\u5176\u4f59\u4f4d\u4e3a0\uff0c\u4f9d\u65e7\u6267\u884cM\u6b21shuffle\u7b97\u6cd5\uff0c\u8bb0\u5f551\u51fa\u73b0\u57280~N-1\u4f4d\u4e0a\u7684\u6b21\u6570\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u51fa\u73b0\u6b21\u6570\u5e94\u8be5\u63a5\u8fd1\u3002 void testShuffle(){ vector<int> vec{1, 0, 0, 0, 0}; int M=10000; vector<int> res(5); for(int i=0;i<M;i++){ shuffle(vec); int j=0; while(vec[j]==0)j++; res[j]++; } for(auto& v:res){ cout<<v<<\" \"; } } \u7ea6\u745f\u592b\u73af //0,1,\u00b7\u00b7\u00b7,n-1\u8fd9n\u4e2a\u6570\u5b57\u6392\u6210\u4e00\u4e2a\u5706\u5708\uff0c //\u4ece\u6570\u5b570\u5f00\u59cb\uff0c\u6bcf\u6b21\u4ece\u8fd9\u4e2a\u5706\u5708\u91cc\u5220\u9664\u7b2cM\u4e2a\u6570\u5b57\uff08\u5220\u9664\u540e\u4ece\u4e0b\u4e00\u4e2a\u6570\u5b57\u5f00\u59cb\u8ba1\u6570\uff09\u3002 //\u8fd9\u91cc\u6253\u5370\u7684\u662f\u5220\u9664\u987a\u5e8f\uff0c\u4e0b\u6807\u57fa1 void Josephus2_1(int M, int N){ int a[N+1]; //\u5b58\u653e\u6307\u9488\uff0ca[i]\u5b58\u653e\u7740\u4e0b\u4e00\u4e2a\u5143\u7d20 int b[N+1]; //\u51fa\u94fe\u987a\u5e8f int i, j, k; for(int i=1;i<N;i++)a[i]=i+1; a[N]=1; //\u5f62\u6210\u95ed\u73af k=1; j=N; for(i=1;i<=N;i++){ while(k<M){ j=a[j]; //\u79fb\u52a8\u6307\u9488 k++; } b[i]=a[j]; a[j] = a[a[j]]; k=1; printf(\"%dout a[%d]=%d\\n\", b[i], j, a[j]); } for(int i=1;i<=N;i++)std::cout<<b[i]<<\" \"; //cout<<b[i]-1, \u53ef\u4ee5\u57fa0 std::cout<<std::endl; } //\u8fd9\u91cc\u4ec5\u6c42\u51fa\u8fd9\u4e2a\u5706\u5708\u91cc\u5269\u4e0b\u7684\u6700\u540e\u4e00\u4e2a\u6570\u5b57 void Josephus3(int M, int N){ int f=0; for(int i=2;i<=N;i++) f = (f+M)%i; std::cout<<f<<std::endl; } \u5341\u8fdb\u5236\u8f6c\u6362 \u2003\u8f97\u8f6c\u76f8\u9664\u6cd5 void trans(int target, int num){ //\u89c4\u5b9a\u8f93\u51fa\u8d1f\u6570\u7684num\u8fdb\u5236\u5f62\u5f0f\u4e3a \u201c-\u201d+abs(target)\u7684num\u8fdb\u5236 stack<int> st; bool neg=false; if(target<0){ target*=-1; neg=true; } do{ st.push(target%num); target /= num; }while(target!=0); if(neg)cout<<\"-\"; while(!st.empty()){ cout<<st.top(); st.pop(); } } // \u8f6c\u4e3a16\u8fdb\u5236\uff0c\u5bf9\u4e8e\u8d1f\u6570\uff0c\u91c7\u7528\u8865\u7801\u5f62\u5f0f class Solution { public: string toHex(int num) { if(num==0)return \"0\"; string ans=\"\"; unsigned int x = num; while(x){ int c = x%16; if(c>=10) c = (c-10)+'a'; else c += '0'; ans += c; x >>= 4; } reverse(ans.begin(), ans.end()); return ans; } }; \u5feb\u901f\u9009\u62e9\u6cd5 // \u5bfb\u627e\u7b2cK\u5927\u5143\u7d20\uff0c\u4e5f\u53ef\u7528\u4e8e\u8ba1\u7b97TOPK\uff0c class Solution { public: int findKth(vector<int> vec, int n, int k) { // write code here int left=0, right=n-1; k = n-k; // \u8fd9\u91cc\u4fee\u6539 k=k-1; \u5219\u6c42\u5f97\u5c31\u662f\u7b2ck\u5c0f\u7684\u5143\u7d20 int pos=0; while(true){ pos = quickFind(vec, left, right); if(pos==k)break; else if(pos < k)left=pos+1; else right=pos-1; } return vec[pos]; //\u6b64\u65f6\u4f4d\u7f6e>=pos\u7684\u5143\u7d20\uff0c\u5373\u4e3aTOPK\uff0c\u6574\u4e2a\u6570\u7ec4\u662f\u6309\u589e\u5e8f\u8fdb\u884c\u5feb\u6392\u7684 } private: void median3(vector<int>& vec, int left, int right){ int mid = (left+right)/2; if(vec[mid] < vec[left]) swap(vec[mid], vec[left]); if(vec[right] < vec[left])swap(vec[left], vec[right]); if(vec[mid] > vec[right])swap(vec[mid], vec[right]); swap(vec[mid], vec[right-1]); } int quickFind(vector<int>& vec, int left, int right){ if(left==right)return left; else if(left+2<=right){ median3(vec, left, right); int pivot=vec[right-1]; int i=left, j=right-1; while(true){ while(vec[++i] < pivot); while(vec[--j] > pivot); if(i<j)swap(vec[i], vec[j]); else break; } swap(vec[i], vec[right-1]); return i; }else{ if(vec[left]>vec[right]) swap(vec[left], vec[right]); return left; } } }; LRU // \u624b\u52a8\u5b9e\u73b0\u53cc\u5411\u94fe\u8868 struct DNode{ int key, val; DNode* next, *prev; DNode(int k, int v):key(k), val(v), next(nullptr), prev(nullptr){} }; class DoubleList{ //\u9760\u8fd1\u94fe\u8868\u5c3e\u90e8\u7684\u6570\u636e\u8868\u793a\u6700\u8fd1\u4f7f\u7528\u7684 private: DNode* head, *tail; int _size; public: DoubleList():_size(0){ head = new DNode(0, 0); tail = new DNode(0, 0); head->next=tail; tail->prev=head; } void addLast(DNode* x){ x->prev=tail->prev; x->next=tail; tail->prev->next = x; tail->prev=x; _size++; } void remove(DNode* x, bool reuse){ //\u8981\u6c42x\u4e00\u5b9a\u5728\u94fe\u8868\u4e2d x->prev->next=x->next; x->next->prev = x->prev; _size--; if(!reuse) //\u56e0\u4e3ax\u8282\u70b9\u53ef\u80fd\u662f\u88ab\u6c38\u4e45\u5220\u9664\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u88ab\u79fb\u5230\u94fe\u8868\u5c3e delete x; } int removeFirst(){ if(head->next == tail)return 0; int key=head->next->key; remove(head->next, false); return key; } int size() const{return _size;} }; class LRUCache{ private: unordered_map<int, DNode*> umap; DoubleList cache; int cap; //\u6700\u5927\u5bb9\u91cf //\u5c06\u67d0\u4e2akey\u63d0\u5347\u4e3a\u6700\u8fd1\u4f7f\u7528\u7684 void makeRecently(int key){ DNode* x=umap[key]; cache.remove(x, true); cache.addLast(x); } //\u6dfb\u52a0\u6700\u8fd1\u4f7f\u7528\u7684 void addRecently(int key, int val){ DNode *x=new DNode(key, val); cache.addLast(x); umap[key] = x; } //\u5220\u9664\u67d0\u4e2akey void deleteKey(int key){ if(umap.count(key)==0)return; DNode *x=umap[key]; cache.remove(x, false); umap.erase(key); } //\u5220\u9664\u6700\u4e45\u672a\u4f7f\u7528\u7684 void removeLeastRecently(){ umap.erase(cache.removeFirst()); } public: LRUCache(int capacity): cap(capacity){} int get(int key){ if(umap.count(key)==0) return -1; makeRecently(key); //\u5c06\u8be5\u6570\u636e\u63d0\u5347\u4e3a\u6700\u8fd1\u4f7f\u7528 return umap[key]->val; } void put(int key, int val){ if(umap.count(key)){ // deleteKey(key); // addRecently(key, val); umap[key]->val = val; makeRecently(key); return; } if(cache.size() == cap) removeLeastRecently(); addRecently(key, val); } }; // \u501f\u7528list\u5bb9\u5668 typedef list<int>::iterator LI; struct node{ int val; LI store; node(int v, LI x): val(v), store(x){} }; class LRUCache{ private: int cap; unordered_map<int, node*> key2node; list<int> cache; void makeRecently(int key){ node* x = key2node[key]; cache.erase(x->store); cache.push_back(key); x->store = --cache.end(); } void removeLeastRecently(){ int key = cache.front(); key2node.erase(key); cache.pop_front(); } public: LRUCache(int capacity): cap(capacity){} int get(int key){ if(key2node.count(key)==0)return -1; makeRecently(key); return key2node[key]->val; } void put(int key, int val){ if(cap==0)return; if(key2node.count(key)!=0){ key2node[key]->val = val; makeRecently(key); }else{ if(cache.size()==cap) removeLeastRecently(); cache.push_back(key); key2node[key] = new node(val, --cache.end()); } } }; LFU // \u624b\u52a8\u5b9e\u73b0\u53cc\u5411has\u94fe\u8868 struct DNode2{ int key; DNode2 *next, *prev; DNode2(int k):key(k){} }; class linkHash{ private: unordered_map<int, DNode2*> umap; DNode2 *head, *tail; int _size=0; public: linkHash(){ head = new DNode2(-1); tail=new DNode2(-1); head->next = tail; tail->prev=head; } ~linkHash(){ while(head){ DNode2 *tmp=head->next; delete head; head=tmp; } } void push_back(int key){//\u4ece\u5c3e\u90e8\u63d2\u5165\u6700\u65b0\u8bbf\u95ee\u7684 DNode2* x = new DNode2(key); umap[key]=x; x->prev = tail->prev; x->next = tail; tail->prev->next=x; tail->prev=x; _size++; } void remove(int key){ DNode2 *x=umap[key]; umap.erase(key); x->prev->next = x->next; x->next->prev = x->prev; delete x; _size--; } int removeFront(){//\u8fd4\u56de\u88ab\u5220\u9664\u8282\u70b9\u7684key DNode2 *x=head->next; int key = x->key; remove(key); return key; } int size()const {return _size;} }; class LFUCache { public: LFUCache(int capacity): cap(capacity) {} int get(int key) { if(key2VF.count(key)==0)return -1; increaseFre(key); return key2VF[key].first; } void put(int key, int value) { if(cap==0)return; if(key2VF.count(key)!=0){ key2VF[key].first=value; }else{ if(key2VF.size()==cap) deleteLeastFreqKey(); key2VF[key] = make_pair(value, 0); minFreq = 1; //\u63d2\u5165\u65b0\u8282\u70b9\u540e } increaseFre(key); } private: unordered_map<int, linkHash*> freq2key; // frequency -> list of key order by time unordered_map<int, pair<int, int>> key2VF; // key-> val+fre int cap=10; //\u9ed8\u8ba4\u503c int minFreq; void increaseFre(int key){ int oldFreq = key2VF[key].second++; int newFreq = key2VF[key].second; if(oldFreq!=0){ freq2key[oldFreq]->remove(key); if(freq2key[oldFreq]->size()==0) { freq2key.erase(oldFreq); if(oldFreq==minFreq)minFreq++; } } if(freq2key.count(newFreq)==0) freq2key[newFreq] = new linkHash(); freq2key[newFreq]->push_back(key); } void deleteLeastFreqKey(){ linkHash* x = freq2key[minFreq]; int key = x->removeFront(); if(x->size()==0) freq2key.erase(minFreq); key2VF.erase(key); } }; //\u501f\u52a9list\u5bb9\u5668 typedef list<int>::iterator LI; typedef list<int>* LP; struct node{ int val; int freq; LI store; node(int v, int f): val(v), freq(f){} }; class LFUCache{ private: size_t cap; unordered_map<int, node*> key2VFI; unordered_map<int, LP> freq2list; int minFreq; void increaseFreq(int key){ node *cur = key2VFI[key]; int oldFreq = (cur->freq)++; int newFreq = cur->freq; if(freq2list.count(oldFreq)!=0){ freq2list[oldFreq]->erase(cur->store); if(freq2list[oldFreq]->size()==0){ freq2list.erase(oldFreq); if(oldFreq==minFreq)minFreq++; } } if(freq2list.count(newFreq)==0) freq2list[newFreq] = new list<int>(); freq2list[newFreq]->push_back(key); key2VFI[key]->store = --(freq2list[newFreq]->end()); } void removeLeastFreqKey(){ int key = freq2list[minFreq]->front(); key2VFI.erase(key); freq2list[minFreq]->pop_front(); if(freq2list[minFreq]->size()==0) freq2list.erase(minFreq); } public: LFUCache(int capacity):cap(capacity){} int get(int key){ if(key2VFI.count(key)==0)return -1; increaseFreq(key); return key2VFI[key]->val; } void set(int key, int value){ if(cap==0)return; if(key2VFI.count(key)!=0){ key2VFI[key]->val = value; }else{ if(key2VFI.size()==cap)removeLeastFreqKey(); key2VFI[key] = new node(value, 0); minFreq = 1; } increaseFreq(key); } }; KMP \u2003\u9012\u63a8\u6c42\u89e3next\u6570\u7ec4: \u5df2\u77e5next[j](\u5b50\u4e32P[0, j-1]\u4e2d\u524d\u7f00\u4e0e\u540e\u7f00\u7684\u4ea4\u96c6\u4e2d\u6700\u957f\u5143\u7d20\u957f\u5ea6), \u6c42\u89e3next[j+1]\u65f6\uff0c \u82e5P[next[j]] == P[j]\uff0c\u5219next[j+1]=next[j]+1=k+1; \u5426\u5219\u9700\u8981\u5bfb\u627e\u957f\u5ea6\u66f4\u77ed\u7684\u76f8\u540c\u524d\u7f00\u540e\u7f00, \u5373\u8ba9k=next[k]\uff0c\u8ba9\u65b0\u7684P[k]\u4e0eP[j]\u6bd4\u8f83\uff0c\u5982\u679ck==-1\uff0c\u5219next[j]=0\u3002 void getPMT(string p, vector<int>& pmt){ int n=p.size(); int j=1, k=0; while(j<n){ if(p[j]==p[k]){ pmt[j++] = ++k; }else{ if(k)k=pmt[k-1]; else j++; } } } void getNext(std::vector<int>& next, string& p){ next[0] = -1; int j=0, k=-1; while(j<p.size()-1){ if(k==-1 || p[j]==p[k]){ next[++j] = ++k; }else k = next[k]; } } int KMP(string& s, string& p){ if(p.size() == 0 || s.size()<p.size())return -1; vector<int> next(p.size()); /* \u4e0b\u6807\u4ece0\u5f00\u59cb: \u524d\u7f00\u5b50\u4e32\uff0c\u5373\u7531p[0, i]\uff080<=i<p.size()-2\uff09\u6784\u6210\u7684\u96c6\u5408 \u540e\u7f00\u5b50\u4e32\uff0c\u5373\u7531p[j, p.size()-1](1<=j<=p.size()-1)\u6784\u6210\u7684\u96c6\u5408 PMT:\u90e8\u5206\u5339\u914d\u8868 PMT[i]\u7684\u542b\u4e49\u662f\u4ee5p[i]\u5b57\u7b26\u7ed3\u5c3e\u7684\u540e\u7f00\u5b50\u4e32\u96c6\u5408\u4e2d\uff0c\u4e0e\u4ee5p[0]\u5b57\u7b26\u5f00\u5934\u7684\u524d\u7f00\u5b50\u4e32\u96c6\u5408\uff0c\u4e24\u8005\u4ea4\u96c6\u7684\u6700\u5927\u503c\uff1b \u5f53\u4e3b\u4e32\u6307\u9488\u6307\u5411i, \u6a21\u5f0f\u4e32\u6307\u5411j\u65f6\u53d1\u751f\u5931\u914d\uff0c\u53ef\u77e5s[i-j, i-1]\u4e0ep[0, j-1]\u662f\u76f8\u7b49\u7684\uff0c \u5219s[i-PMT[j-1], i-1]\u81ea\u7136\u4e0ep[0, PMT[j-1]-1]\u662f\u76f8\u7b49\u7684(\u5206\u522b\u662f\u6a21\u5f0f\u5b50\u4e32p[0, j]\u6709\u6700\u5927\u4ea4\u96c6\u7684\u540e\u7f00\u548c\u524d\u7f00, \u6700\u5927\u4ea4\u96c6\u7684\u957f\u5ea6\u5373\u4e3aPMT[j-1]) \u5219\u6b64\u65f6\u8ba9i\u4fdd\u6301\u4e0d\u53d8\uff0cj\u56de\u9000\u5230PMT[j-1]\u5373\u53ef \u4e3a\u4e86\u65b9\u4fbf\u7f16\u7a0b\uff0c\u91c7\u7528next\u6570\u7ec4\u4ee3\u66ffPMT\uff0c\u5c06PMT\u6570\u7ec4\u53f3\u79fb\u4e00\u4f4d\uff0c\u7b2c\u4e00\u4f4d\u7f6e\u4e3a-1(\u5373\u89c4\u5b9anext[0]=-1)\u5f62\u6210\uff0c \u8fd9\u6837j\u56de\u9000\u5230next[j]\u5373\u53ef */ getNext(next, p); int i=0, j=0; int sLen = s.size(), pLen = p.size(); while(i<sLen && j<pLen){ if(j==-1 || s[i]==p[j]){ i++; j++; }else j=next[j]; } if(j==pLen)return i-j; else return -1; } //\u5bfb\u627e\u6a21\u677f\u4e32p\u5728\u6e90\u4e32s\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 class KMPSolution { public: int kmp(string p, string s) { if(s.size()<p.size())return 0; int i=0,j=0, slen=s.size(), plen=p.size(), pos=0; vector<int> next(plen); getNext(p, next); int ans=0; for(int i = 0, j = -1; i < slen; ++i) { /* \u76f8\u5f53\u4e8ep\u5728s\u6ed1\u52a8\uff0c\u5339\u914d\u6210\u529f\u4e00\u6b21ans++ */ while(j >= 0 && s[i] != p[j + 1])j = next[j]; if(s[i] == p[j + 1])++j; if(j + 1 == plen) { ++ans; j = next[j]; /* \u6b64\u65f6s[i+1-plen, i]\u4e0ep\u662f\u76f8\u540c\u7684\uff0c\u4e0b\u4e00\u6b65i\u5411\u540e\u79fb\u52a8 \u6b64\u65f6j\u56de\u9000\u5230next[j]\u4f4d\u7f6e\uff0c\u56e0\u4e3ap[0, next[j]-1]\u4e0es[i+1-next[j], i]\u662f\u76f8\u540c\u7684 */ } } return ans; } private: void getNext(const string& p, vector<int>& next){ next[0]=-1; int j=0,k=-1; int len=p.size(); while(j<len-1){ if(k==-1 || p[j]==p[k]){ next[++j] = ++k; }else k=next[k]; } } }; SunDay\u7b97\u6cd5 int SundayStrMatch(string source, string pattern) { int sSize = source.size(), pSize = pattern.size(); if(sSize<pSize || pSize==0)return -1; unordered_map<char, int> shift; for(int i=0;i<pSize;i++)shift[pattern[i]]=pSize-i; int idx=0; while(idx+pSize<=sSize){ string sub = source.substr(idx, pSize); if(sub == pattern)return idx; if(idx+pSize>=sSize)return -1; if(shift.find(source[idx+pSize]) == shift.end())idx += pSize; else idx += shift[source[idx+pSize]]; } return -1; } \u7ec4\u5408-\u6811 \u5c06\u6392\u5217\u7ec4\u5408\u95ee\u9898\u62bd\u8c61\u4e3a\u6811\u5f62\u7ed3\u6784 \u7ed9\u5b9a\u4e00\u4e2a\u53ef\u5305\u542b\u91cd\u590d\u6570\u5b57\u7684\u5e8f\u5217 nums \uff0c\u6309 \u4efb\u610f\u987a\u5e8f \u8fd4\u56de\u6240\u6709 \u4e0d\u91cd\u590d \u7684\u5168\u6392\u5217\u3002 class Solution { public: vector<vector<int>> permuteUnique(vector<int>& nums) { bool visited[nums.size()]; memset(visited, 0, nums.size()); vector<int> track; sort(nums.begin(), nums.end()); backtrack(nums, track, visited); return ans; } private: vector<vector<int>> ans; void backtrack(vector<int>& nums, vector<int>& track, bool* visited){ if(track.size()==nums.size()){ ans.emplace_back(track); return; } for(int i=0;i<nums.size();i++){ /* \u8fd9\u662f\u4e0e46\u9898\u4e2d\uff0c\u4e0d\u5305\u542b\u91cd\u590d\u6570\u5b57\u7684\u5168\u6392\u5217\u7684\u91cd\u8981\u533a\u522b\uff1b \u56e0\u4e3a\u4e8b\u5148\u9700\u8981\u5bf9\u6570\u7ec4\u6392\u5e8f\uff0c\u76f8\u540c\u7684\u5143\u7d20\u5c06\u4f1a\u5728\u76f8\u90bb\u7684\u4f4d\u7f6e \u5982: 1,1',1'',2; \u4f9d\u6b21\u4e3a[1,1',1'',2]\u3001[1,1',2,1''],\u6b64\u65f6\u56de\u5230\u4ee4visited[1]=true\uff0c\u7136\u540e\u8fdb\u5165\u9012\u5f52\u7684\u65f6\u523b \u4ecebacktrack\u51fa\u6765\u540e\uff0c\u4ee4visited[1]=false,\u6b64\u65f6visited[2]\u548cvisited[3]\u4e5f\u4e3afalse, \u5faa\u73af\u5230i=2\u65f6\uff0c\u7531\u4e8enums[i]==nums[i-1]\u4ee5\u53ca !visited[i-1]\u6240\u4ee5\u8df3\u8fc7 \u7ed3\u679c\u4e2d\u76841\u6392\u5e8f\u4e00\u5b9a\u662f 1,1',1''\uff1b \u5982\u679c\u91c7\u7528i>0 && visited[i-1] && nums[i]==nums[i-1]\uff0c\u7ed3\u679c\u4e2d\u76841\u6392\u5e8f\u4e00\u5b9a\u662f1'',1',1 */ if(visited[i] || (i>0 && !visited[i-1] && nums[i]==nums[i-1])) continue; track.emplace_back(nums[i]); visited[i]=true; backtrack(nums, track, visited); visited[i]=false; track.pop_back(); } } }; \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u53ef\u80fd\u5305\u542b\u91cd\u590d\u5143\u7d20\uff0c\u8fd4\u56de\u8be5\u6570\u7ec4\u6240\u6709\u53ef\u80fd\u7684\u5b50\u96c6\uff08\u5e42\u96c6\uff09\u3002 \u89e3\u96c6\u4e0d\u80fd\u5305\u542b\u91cd\u590d\u7684\u5b50\u96c6\u3002 class Solution { public: vector<vector<int>> subsetsWithDup(vector<int>& nums) { sort(nums.begin(), nums.end()); vector<int> track; bool visited[nums.size()]; memset(visited, 0, nums.size()); dfs(nums, track, 0, visited); return ans; } private: vector<vector<int>> ans; void dfs(vector<int>& nums, vector<int>& track, int start, bool* visited){ ans.push_back(track); for(int i=start;i<nums.size();i++){ if(i>start && !visited[i-1] && nums[i]==nums[i-1])continue; track.push_back(nums[i]); visited[i] = true; dfs(nums, track, i+1, visited); visited[i] = false; track.pop_back(); } } }; class Solution { public: vector<vector<int>> subsetsWithDup(vector<int>& nums) { sort(nums.begin(), nums.end()); vector<int> track; dfs(nums, 0, track); return ans; } private: vector<vector<int>> ans; void dfs(vector<int>& nums, int start, vector<int>& track){ ans.push_back(track); for(int i=start;i<nums.size();i++){ if(i>start && nums[i]==nums[i-1])continue; track.push_back(nums[i]); dfs(nums, i+1, track); track.pop_back(); } } }; \u94fe\u8868\u6392\u5e8f class Solution { public: // \u5f52\u5e76\u6392\u5e8f\uff0c\u81ea\u9876\u5411\u4e0b\uff0ctime:O(nlog n), space:O(log N), \u6808\u7a7a\u95f4 ListNode* sortList(ListNode* head) { if(!head || !head->next)return head; else if(!head->next->next){ int val1 = head->val; int val2 = head->next->val; if(val1 > val2){ head->val = val2; head->next->val = val1; } return head; } ListNode *fast = head, *slow=head; while(fast && fast->next){ fast = fast->next->next; slow = slow->next; } ListNode *lastHalf=slow->next; lastHalf = sortList(lastHalf); slow->next = nullptr; ListNode *prevHalf = sortList(head); ListNode *another; if(prevHalf->val <= lastHalf->val){ head = prevHalf; another = lastHalf; }else{ head = lastHalf; another = prevHalf; } // merge ListNode *cur = head, *prev; while(cur && another){ if(cur->val <= another->val){ prev = cur; cur = cur->next; }else{ ListNode *tmp=another->next; prev->next=another; another->next=cur; prev = another; another = tmp; } } if(!cur)prev->next=another; return head; } // space:O(1),\u81ea\u5e95\u5411\u4e0a ListNode* sortList(ListNode* head) { if (head == nullptr) return head; int length = 0; ListNode* node = head; // \u8ba1\u7b97\u94fe\u8868\u957f\u5ea6 while (node != nullptr) { length++; node = node->next; } ListNode* dummyHead = new ListNode(0, head); // \u4f2a\u5934\u8282\u70b9 for (int subLength = 1; subLength < length; subLength <<= 1) { ListNode* prev = dummyHead, *curr = dummyHead->next; // while\u5faa\u73af\u5148\u4e24\u4e24\u5408\u5e76\u957f\u5ea6\u4e3asubLength\u7684\u6709\u5e8f\u94fe\u8868\uff0c // for\u5faa\u73af\u4e2d\uff0csubLength\u957f\u5ea6\u6bcf\u6b21\u6269\u5927\u4e00\u500d // \u6574\u4f53\u6a21\u578b\u5f52\u5e76\u6392\u5e8f\u65f6\uff0c\u81ea\u9876\u5411\u4e0b\u5206\u6cbb\u7684\u9006\u8fc7\u7a0b while (curr != nullptr) { ListNode* head1 = curr; for (int i = 1; i < subLength && curr->next != nullptr; i++) { curr = curr->next; } ListNode* head2 = curr->next; curr->next = nullptr; curr = head2; for (int i = 1; i < subLength && curr != nullptr && curr->next != nullptr; i++) { curr = curr->next; } ListNode* next = nullptr; if (curr != nullptr) { next = curr->next; curr->next = nullptr; } ListNode* merged = merge(head1, head2); prev->next = merged; while (prev->next != nullptr) { prev = prev->next; } curr = next; } } return dummyHead->next; } ListNode* merge(ListNode* head1, ListNode* head2) { ListNode* dummyHead = new ListNode(0); ListNode* temp = dummyHead, *temp1 = head1, *temp2 = head2; while (temp1 != nullptr && temp2 != nullptr) { if (temp1->val <= temp2->val) { temp->next = temp1; temp1 = temp1->next; } else { temp->next = temp2; temp2 = temp2->next; } temp = temp->next; } if (temp1 != nullptr) { temp->next = temp1; } else if (temp2 != nullptr) { temp->next = temp2; } return dummyHead->next; } }; \u5206\u6570\u5230\u5c0f\u6570 \u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\u5206\u6570\u7684\u5206\u5b50 numerator \u548c\u5206\u6bcd denominator\uff0c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u5c0f\u6570\u3002 \u5982\u679c\u5c0f\u6570\u90e8\u5206\u4e3a\u5faa\u73af\u5c0f\u6570\uff0c\u5219\u5c06\u5faa\u73af\u7684\u90e8\u5206\u62ec\u5728\u62ec\u53f7\u5185\u3002 class Solution { public: string fractionToDecimal(int numerator, int denominator) { if(numerator==0)return \"0\"; else if(numerator==denominator)return \"1\"; unordered_map< int, int> memo; string ans=\"\", extra=\"\"; //if((numerator>0 && denominator<0) || (numerator<0 && denominator>0)) if((numerator>0)^(denominator>0)) ans+='-'; long num=abs(numerator), denom = abs(denominator); extra+=to_string(num/denom); num %= denom; if(num)extra+='.'; else return ans+extra; // \u8bf4\u660e\u4f59\u6570\u4e3a0\uff0c\u76f4\u63a5\u8fd4\u56de while(num!=0){ memo[num]=extra.size(); num*=10; extra+=to_string(num/denom); num %= denom; if(memo.count(num)){ // \u4f59\u6570\u91cd\u590d\u51fa\u73b0\uff0c\u8bf4\u660e\u51fa\u73b0\u5faa\u73af int pos=memo[num]; // \u7b2c\u4e00\u6b21\u51fa\u73b0\u524d\uff0cextra\u7684\u957f\u5ea6\uff0c[0, pos]\u4e0d\u5faa\u73af\uff0c[pos:-1]\u5faa\u73af extra = extra.substr(0, pos)+\"(\"+extra.substr(pos, extra.size()-pos)+\")\"; break; } } return ans+extra; } }; \u7edf\u8ba1\u4e8c\u8fdb\u5236\u4e2d 1 \u7684\u4e2a\u6570 int num1(int num){ int bit=0; while(num){ bit++; num &= num-1; } return bit; } \u5b8c\u5168\u4e8c\u53c9\u6811\u8282\u70b9\u4e2a\u6570 /* \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(logN * logN) \u9996\u5148\u8ba1\u7b97\u5de6\u53f3\u5b50\u6811\u9ad8\u590d\u6742\u5ea6\u4e3a logN; \u800c\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\u6ee1\u8db3\u4e00\u4e2a\u7279\u6027\u662f\u4e24\u4e2a\u5b50\u6811\u5fc5\u5b9a\u4e00\u4e2a\u662f\u6ee1\u4e8c\u53c9\u6811\uff0c\u53e6\u4e00\u4e2a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811 \u5219 \u4ee3\u7801\u4e2d\u6700\u540e\u4e00\u4e2areturn\uff0c\u53ea\u6709\u5176\u4e2d\u4e00\u4e2acountNodes\u4f1a\u9012\u5f52\u4e0b\u53bb\uff0c\u53e6\u4e00\u4e2a\u4f1a\u89e6\u53d1 hl==hr, \u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\uff1b \u9012\u5f52\u7684\u590d\u6742\u5ea6\u4e3a logN(\u6811\u7684\u9ad8\u5ea6)*logN(\u6bcf\u4e00\u5c42\u8ba1\u7b97\u5b50\u6811\u9ad8\u5ea6\u9700\u8981\u7684\u590d\u6742\u5ea6)\u3002 */ // java public int countNodes(TreeNode root){ TreenNode left=root, rigth=root; // \u8ba1\u7b97\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6 int hl=0, hr=0; while(left!=null){ hl++; left = root.left; } while(right!=null){ hr++; right = root.right; } if(left==right) // \u8bf4\u660e\u662f\u6ee1\u4e8c\u53c9\u6811 return (int)Math.pow(2, hl) - 1; return 1 + countNodes(root.left) + countNodes(root.right); }","title":"Algorithm"},{"location":"DataStruct/Algorithm/#algorithm","text":"","title":"Algorithm"},{"location":"DataStruct/Algorithm/#binary-search","text":"//\u4e8c\u5206\u67e5\u627e, vec\u9012\u589e\uff0c int binarySerach(std::vector<int> &vec, int target){ if(vec.size()==0 || target<vec[0] || target>vec[vec.size()-1])return -1; int left=0, right=vec.size()-1; while(left<=right){ int mid=left+(right-left)/2; if(target==vec[mid])return mid; else if(vec[mid] < target) left=mid+1; else if(vec[mid] > target) right=mid-1; } return -1; } // \u4e8c\u5206\u67e5\u627e\uff0c\u5bfb\u627e\u5de6\u4fa7\u8fb9\u754c, \u5373\u6700\u5de6\u8fb9\u7684target int binarySearchLSide(std::vector<int>& vec, int target){ if(vec.size()==0 || target<vec[0] || target>vec[vec.size()-1])return -1; int left=0, right=vec.size()-1; while(left<=right){ int mid=left+(right-left)/2; if(target==vec[mid])right=mid-1; //\u6536\u7f29\u53f3\u4fa7\u8fb9\u754c\uff0c\u9501\u5b9a\u5de6\u4fa7 else if(vec[mid] < target) left=mid+1; else if(vec[mid] > target) right=mid-1; } if(left>=vec.size() || vec[left]!=target) return -1; return left; } // \u4e8c\u5206\u67e5\u627e\uff0c\u5bfb\u627e\u53f3\u4fa7\u8fb9\u754c\uff0c\u5373\u6700\u53f3\u8fb9\u7684target int binarySearchRSide(std::vector<int>& vec, int target){ if(vec.size()==0 || target<vec[0] || target>vec[vec.size()-1])return -1; int left=0, right=vec.size()-1; while(left<=right){ //\u7ed3\u675f\u5faa\u73af\u6761\u4ef6 right=left-1 int mid=left+(right-left)/2; if(target==vec[mid])left=mid+1; //\u6536\u7f29\u5de6\u4fa7\u8fb9\u754c\uff0c\u9501\u5b9a\u53f3\u4fa7 else if(vec[mid] < target) left=mid+1; else if(vec[mid] > target) right=mid-1; } if(right<0 || vec[right]!=target) return -1; else return right; } // \u4e8c\u5206\u67e5\u627e\u53d8\u5f62 // \u6570\u7ec4A,\u5c06\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u65cb\u8f6c\uff0c\u524d\u9762\u90e8\u5206\u79fb\u52a8\u5230\u540e\u9762\uff0c\u6240\u4ee5 A[0:x]\u662f\u9012\u589e\u7684\uff0cA[x+1:-1]\u662f\u9012\u589e\u7684\uff0c // \u5373A[x+1]<A[-1]<A[0]<A[x-1]; // \u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u90fd\u4e92\u4e0d\u76f8\u540c; \u5f53\u7136\u4e5f\u53ef\u4ee5\u4e0d\u65cb\u8f6c // \u6c42\u6570\u7ec4\u4e2d\u6700\u5c0f\u503c int findMin(vector<int>& nums) { int left=1, right=nums.size()-1, target=nums[0]; // \u5728\u6bd4nums[0]\u5c0f\u7684\u5143\u7d20\u4e2d\u5bfb\u627e\u6700\u5de6\u4fa7 while(left<=right){ int mid=(left+right)/2; if(nums[mid]<target)right=mid-1; else left=mid+1; } if(left==nums.size())return nums[0];// \u8bf4\u660e\u6574\u4e2a\u6570\u7ec4\u6709\u5e8f return min(nums[0], nums[left]); // \u7531\u4e8e\u524d\u9762\u9012\u589e\u90e8\u5206\u6709\u53ef\u80fd\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u9700\u8981\u5224\u65adnums[0]\u548c // \u540e\u9762\u9012\u589e\u90e8\u5206\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20nums[left]\u5927\u5c0f }","title":"Binary Search"},{"location":"DataStruct/Algorithm/#dp","text":"vector<int> num_son; //\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2a\u6570 vector<vector<int>> sons; //\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u8282\u70b9 vector<int> w; //\u5b58\u50a8\u5feb\u4e50\u6307\u6570 vector<bool> father; //\u8be5\u8282\u70b9\u662f\u5426\u6709\u7236\u8282\u70b9 void dfs(int root, vector<vector<int>>& dp){ dp[root][1] = w[root]; for(int i=0;i<num_son[root];i++){ int son = sons[root][i]; dfs(son, dp); dp[root][1] += dp[son][0]; dp[root][0] += max(dp[son][0], dp[son][1]); } } int main(){ int N; cin >> N; num_son.resize(N); sons.resize(N); w.resize(N); father.resize(N); vector<vector<int>> dp(N, vector<int>(2)); for(int i=0;i<N;i++)cin >> w[i]; //\u8f93\u5165\u5b50\u8282\u70b9\u548c\u5176\u7236\u8282\u70b9\uff0c0~N-1 for(int i=0;i<N-1;i++){ int x, y; //x\u4e3a\u5b50\u8282\u70b9\uff0cy\u4e3a\u7236\u8282\u70b9 cin>>x>>y; num_son[y]++; sons[y].push_back(x); father[x]=true; } int root=0; while(father[root])root++; dfs(root, dp); cout<<\"result:\"<<max(dp[root][0], dp[root][1])<<endl; return 0; }","title":"\u6811\u5f62DP"},{"location":"DataStruct/Algorithm/#shuffle","text":"\u8981\u53d6\u5f97 [a,b] \u7684\u968f\u673a\u6574\u6570\uff0c\u4f7f\u7528 (rand() % (b-a+1)) + a; \u2003\u8981\u53d6\u5f97 (a,b] \u7684\u968f\u673a\u6574\u6570\uff0c\u4f7f\u7528 (rand() % (b-a)) +a+1; #define randInt(a, b) ((rand()%(b-a+1))+a) //\u4ea7\u751f[a, b]\u4e4b\u95f4\u7684\u968f\u673a\u6574\u6570 int N=20; vector<int> vec(N); for(int i=0;i<N;i++)vec[i]=i; void shuffle(vector<int>& vec){ srand((unsigned)time(NULL)); //\u91c7\u7528\u65f6\u95f4\u4f5c\u4e3a\u968f\u673a\u6570\u79cd\u5b50 for(int i=N-1;i>0;i--){ // i>0\u4e0ei>=0\u6548\u679c\u4e00\u81f4 int j = randInt(0, i); swap(vec[i], vec[j]); } //\u4e0b\u9762\u4ea6\u53ef // for(int i=0;i<N;i++) // i<N\u4e0ei<N-1, \u6548\u679c\u4e00\u81f4\uff0c // { // int j = randInt(i, N-1); // swap(vec[i], vec[j]); // } } \u2003\u5982\u4f55\u9a8c\u8bc1shuffle\u6548\u679c: \u2003\u9996\u5148\u7b97\u6cd5\u4ea7\u751f\u7684\u7ed3\u679c\u5fc5\u987b\u6709N!\u79cd\uff0c\u5176\u6b21\u5bf9\u4e8e\u6bcf\u79cd\u53ef\u80fd\u51fa\u73b0\u7684\u7ed3\u679c\u7684\u6982\u7387\u5fc5\u987b\u76f8\u7b49\u3002 \u2003\u9488\u5bf9\u5e8f\u52170~N-1\uff0c\u6267\u884cM\u6b21(\u59821\u4e07\u6b21\u6216\u5341\u4e07\u6b21)shuffle\u7b97\u6cd5\uff0c\u8bb0\u5f55\u5404\u79cd\u7ed3\u679c\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5404\u79cd\u7ed3\u679c\u7684\u7684\u51fa\u73b0\u6b21\u6570\u5e94\u63a5\u8fd11/N!\uff0c\u8fd9\u91ccN\u4e00\u822c\u53d6\u4e2a\u6bd4\u8f83\u5c0f\u7684\u6570\uff0c\u59825\u62166; \u2003\u6216\u8005\u8ba9\u6570\u7ec4\u4e2d\u53ea\u6709\u67d0\u4e00\u4f4d\u4e3a1\uff0c\u5176\u4f59\u4f4d\u4e3a0\uff0c\u4f9d\u65e7\u6267\u884cM\u6b21shuffle\u7b97\u6cd5\uff0c\u8bb0\u5f551\u51fa\u73b0\u57280~N-1\u4f4d\u4e0a\u7684\u6b21\u6570\uff0c\u6bcf\u4e2a\u4f4d\u7f6e\u51fa\u73b0\u6b21\u6570\u5e94\u8be5\u63a5\u8fd1\u3002 void testShuffle(){ vector<int> vec{1, 0, 0, 0, 0}; int M=10000; vector<int> res(5); for(int i=0;i<M;i++){ shuffle(vec); int j=0; while(vec[j]==0)j++; res[j]++; } for(auto& v:res){ cout<<v<<\" \"; } }","title":"\u5b9e\u73b0shuffle"},{"location":"DataStruct/Algorithm/#_1","text":"//0,1,\u00b7\u00b7\u00b7,n-1\u8fd9n\u4e2a\u6570\u5b57\u6392\u6210\u4e00\u4e2a\u5706\u5708\uff0c //\u4ece\u6570\u5b570\u5f00\u59cb\uff0c\u6bcf\u6b21\u4ece\u8fd9\u4e2a\u5706\u5708\u91cc\u5220\u9664\u7b2cM\u4e2a\u6570\u5b57\uff08\u5220\u9664\u540e\u4ece\u4e0b\u4e00\u4e2a\u6570\u5b57\u5f00\u59cb\u8ba1\u6570\uff09\u3002 //\u8fd9\u91cc\u6253\u5370\u7684\u662f\u5220\u9664\u987a\u5e8f\uff0c\u4e0b\u6807\u57fa1 void Josephus2_1(int M, int N){ int a[N+1]; //\u5b58\u653e\u6307\u9488\uff0ca[i]\u5b58\u653e\u7740\u4e0b\u4e00\u4e2a\u5143\u7d20 int b[N+1]; //\u51fa\u94fe\u987a\u5e8f int i, j, k; for(int i=1;i<N;i++)a[i]=i+1; a[N]=1; //\u5f62\u6210\u95ed\u73af k=1; j=N; for(i=1;i<=N;i++){ while(k<M){ j=a[j]; //\u79fb\u52a8\u6307\u9488 k++; } b[i]=a[j]; a[j] = a[a[j]]; k=1; printf(\"%dout a[%d]=%d\\n\", b[i], j, a[j]); } for(int i=1;i<=N;i++)std::cout<<b[i]<<\" \"; //cout<<b[i]-1, \u53ef\u4ee5\u57fa0 std::cout<<std::endl; } //\u8fd9\u91cc\u4ec5\u6c42\u51fa\u8fd9\u4e2a\u5706\u5708\u91cc\u5269\u4e0b\u7684\u6700\u540e\u4e00\u4e2a\u6570\u5b57 void Josephus3(int M, int N){ int f=0; for(int i=2;i<=N;i++) f = (f+M)%i; std::cout<<f<<std::endl; }","title":"\u7ea6\u745f\u592b\u73af"},{"location":"DataStruct/Algorithm/#_2","text":"\u8f97\u8f6c\u76f8\u9664\u6cd5 void trans(int target, int num){ //\u89c4\u5b9a\u8f93\u51fa\u8d1f\u6570\u7684num\u8fdb\u5236\u5f62\u5f0f\u4e3a \u201c-\u201d+abs(target)\u7684num\u8fdb\u5236 stack<int> st; bool neg=false; if(target<0){ target*=-1; neg=true; } do{ st.push(target%num); target /= num; }while(target!=0); if(neg)cout<<\"-\"; while(!st.empty()){ cout<<st.top(); st.pop(); } } // \u8f6c\u4e3a16\u8fdb\u5236\uff0c\u5bf9\u4e8e\u8d1f\u6570\uff0c\u91c7\u7528\u8865\u7801\u5f62\u5f0f class Solution { public: string toHex(int num) { if(num==0)return \"0\"; string ans=\"\"; unsigned int x = num; while(x){ int c = x%16; if(c>=10) c = (c-10)+'a'; else c += '0'; ans += c; x >>= 4; } reverse(ans.begin(), ans.end()); return ans; } };","title":"\u5341\u8fdb\u5236\u8f6c\u6362"},{"location":"DataStruct/Algorithm/#_3","text":"// \u5bfb\u627e\u7b2cK\u5927\u5143\u7d20\uff0c\u4e5f\u53ef\u7528\u4e8e\u8ba1\u7b97TOPK\uff0c class Solution { public: int findKth(vector<int> vec, int n, int k) { // write code here int left=0, right=n-1; k = n-k; // \u8fd9\u91cc\u4fee\u6539 k=k-1; \u5219\u6c42\u5f97\u5c31\u662f\u7b2ck\u5c0f\u7684\u5143\u7d20 int pos=0; while(true){ pos = quickFind(vec, left, right); if(pos==k)break; else if(pos < k)left=pos+1; else right=pos-1; } return vec[pos]; //\u6b64\u65f6\u4f4d\u7f6e>=pos\u7684\u5143\u7d20\uff0c\u5373\u4e3aTOPK\uff0c\u6574\u4e2a\u6570\u7ec4\u662f\u6309\u589e\u5e8f\u8fdb\u884c\u5feb\u6392\u7684 } private: void median3(vector<int>& vec, int left, int right){ int mid = (left+right)/2; if(vec[mid] < vec[left]) swap(vec[mid], vec[left]); if(vec[right] < vec[left])swap(vec[left], vec[right]); if(vec[mid] > vec[right])swap(vec[mid], vec[right]); swap(vec[mid], vec[right-1]); } int quickFind(vector<int>& vec, int left, int right){ if(left==right)return left; else if(left+2<=right){ median3(vec, left, right); int pivot=vec[right-1]; int i=left, j=right-1; while(true){ while(vec[++i] < pivot); while(vec[--j] > pivot); if(i<j)swap(vec[i], vec[j]); else break; } swap(vec[i], vec[right-1]); return i; }else{ if(vec[left]>vec[right]) swap(vec[left], vec[right]); return left; } } };","title":"\u5feb\u901f\u9009\u62e9\u6cd5"},{"location":"DataStruct/Algorithm/#lru","text":"// \u624b\u52a8\u5b9e\u73b0\u53cc\u5411\u94fe\u8868 struct DNode{ int key, val; DNode* next, *prev; DNode(int k, int v):key(k), val(v), next(nullptr), prev(nullptr){} }; class DoubleList{ //\u9760\u8fd1\u94fe\u8868\u5c3e\u90e8\u7684\u6570\u636e\u8868\u793a\u6700\u8fd1\u4f7f\u7528\u7684 private: DNode* head, *tail; int _size; public: DoubleList():_size(0){ head = new DNode(0, 0); tail = new DNode(0, 0); head->next=tail; tail->prev=head; } void addLast(DNode* x){ x->prev=tail->prev; x->next=tail; tail->prev->next = x; tail->prev=x; _size++; } void remove(DNode* x, bool reuse){ //\u8981\u6c42x\u4e00\u5b9a\u5728\u94fe\u8868\u4e2d x->prev->next=x->next; x->next->prev = x->prev; _size--; if(!reuse) //\u56e0\u4e3ax\u8282\u70b9\u53ef\u80fd\u662f\u88ab\u6c38\u4e45\u5220\u9664\uff0c\u4e5f\u6709\u53ef\u80fd\u662f\u88ab\u79fb\u5230\u94fe\u8868\u5c3e delete x; } int removeFirst(){ if(head->next == tail)return 0; int key=head->next->key; remove(head->next, false); return key; } int size() const{return _size;} }; class LRUCache{ private: unordered_map<int, DNode*> umap; DoubleList cache; int cap; //\u6700\u5927\u5bb9\u91cf //\u5c06\u67d0\u4e2akey\u63d0\u5347\u4e3a\u6700\u8fd1\u4f7f\u7528\u7684 void makeRecently(int key){ DNode* x=umap[key]; cache.remove(x, true); cache.addLast(x); } //\u6dfb\u52a0\u6700\u8fd1\u4f7f\u7528\u7684 void addRecently(int key, int val){ DNode *x=new DNode(key, val); cache.addLast(x); umap[key] = x; } //\u5220\u9664\u67d0\u4e2akey void deleteKey(int key){ if(umap.count(key)==0)return; DNode *x=umap[key]; cache.remove(x, false); umap.erase(key); } //\u5220\u9664\u6700\u4e45\u672a\u4f7f\u7528\u7684 void removeLeastRecently(){ umap.erase(cache.removeFirst()); } public: LRUCache(int capacity): cap(capacity){} int get(int key){ if(umap.count(key)==0) return -1; makeRecently(key); //\u5c06\u8be5\u6570\u636e\u63d0\u5347\u4e3a\u6700\u8fd1\u4f7f\u7528 return umap[key]->val; } void put(int key, int val){ if(umap.count(key)){ // deleteKey(key); // addRecently(key, val); umap[key]->val = val; makeRecently(key); return; } if(cache.size() == cap) removeLeastRecently(); addRecently(key, val); } }; // \u501f\u7528list\u5bb9\u5668 typedef list<int>::iterator LI; struct node{ int val; LI store; node(int v, LI x): val(v), store(x){} }; class LRUCache{ private: int cap; unordered_map<int, node*> key2node; list<int> cache; void makeRecently(int key){ node* x = key2node[key]; cache.erase(x->store); cache.push_back(key); x->store = --cache.end(); } void removeLeastRecently(){ int key = cache.front(); key2node.erase(key); cache.pop_front(); } public: LRUCache(int capacity): cap(capacity){} int get(int key){ if(key2node.count(key)==0)return -1; makeRecently(key); return key2node[key]->val; } void put(int key, int val){ if(cap==0)return; if(key2node.count(key)!=0){ key2node[key]->val = val; makeRecently(key); }else{ if(cache.size()==cap) removeLeastRecently(); cache.push_back(key); key2node[key] = new node(val, --cache.end()); } } };","title":"LRU"},{"location":"DataStruct/Algorithm/#lfu","text":"// \u624b\u52a8\u5b9e\u73b0\u53cc\u5411has\u94fe\u8868 struct DNode2{ int key; DNode2 *next, *prev; DNode2(int k):key(k){} }; class linkHash{ private: unordered_map<int, DNode2*> umap; DNode2 *head, *tail; int _size=0; public: linkHash(){ head = new DNode2(-1); tail=new DNode2(-1); head->next = tail; tail->prev=head; } ~linkHash(){ while(head){ DNode2 *tmp=head->next; delete head; head=tmp; } } void push_back(int key){//\u4ece\u5c3e\u90e8\u63d2\u5165\u6700\u65b0\u8bbf\u95ee\u7684 DNode2* x = new DNode2(key); umap[key]=x; x->prev = tail->prev; x->next = tail; tail->prev->next=x; tail->prev=x; _size++; } void remove(int key){ DNode2 *x=umap[key]; umap.erase(key); x->prev->next = x->next; x->next->prev = x->prev; delete x; _size--; } int removeFront(){//\u8fd4\u56de\u88ab\u5220\u9664\u8282\u70b9\u7684key DNode2 *x=head->next; int key = x->key; remove(key); return key; } int size()const {return _size;} }; class LFUCache { public: LFUCache(int capacity): cap(capacity) {} int get(int key) { if(key2VF.count(key)==0)return -1; increaseFre(key); return key2VF[key].first; } void put(int key, int value) { if(cap==0)return; if(key2VF.count(key)!=0){ key2VF[key].first=value; }else{ if(key2VF.size()==cap) deleteLeastFreqKey(); key2VF[key] = make_pair(value, 0); minFreq = 1; //\u63d2\u5165\u65b0\u8282\u70b9\u540e } increaseFre(key); } private: unordered_map<int, linkHash*> freq2key; // frequency -> list of key order by time unordered_map<int, pair<int, int>> key2VF; // key-> val+fre int cap=10; //\u9ed8\u8ba4\u503c int minFreq; void increaseFre(int key){ int oldFreq = key2VF[key].second++; int newFreq = key2VF[key].second; if(oldFreq!=0){ freq2key[oldFreq]->remove(key); if(freq2key[oldFreq]->size()==0) { freq2key.erase(oldFreq); if(oldFreq==minFreq)minFreq++; } } if(freq2key.count(newFreq)==0) freq2key[newFreq] = new linkHash(); freq2key[newFreq]->push_back(key); } void deleteLeastFreqKey(){ linkHash* x = freq2key[minFreq]; int key = x->removeFront(); if(x->size()==0) freq2key.erase(minFreq); key2VF.erase(key); } }; //\u501f\u52a9list\u5bb9\u5668 typedef list<int>::iterator LI; typedef list<int>* LP; struct node{ int val; int freq; LI store; node(int v, int f): val(v), freq(f){} }; class LFUCache{ private: size_t cap; unordered_map<int, node*> key2VFI; unordered_map<int, LP> freq2list; int minFreq; void increaseFreq(int key){ node *cur = key2VFI[key]; int oldFreq = (cur->freq)++; int newFreq = cur->freq; if(freq2list.count(oldFreq)!=0){ freq2list[oldFreq]->erase(cur->store); if(freq2list[oldFreq]->size()==0){ freq2list.erase(oldFreq); if(oldFreq==minFreq)minFreq++; } } if(freq2list.count(newFreq)==0) freq2list[newFreq] = new list<int>(); freq2list[newFreq]->push_back(key); key2VFI[key]->store = --(freq2list[newFreq]->end()); } void removeLeastFreqKey(){ int key = freq2list[minFreq]->front(); key2VFI.erase(key); freq2list[minFreq]->pop_front(); if(freq2list[minFreq]->size()==0) freq2list.erase(minFreq); } public: LFUCache(int capacity):cap(capacity){} int get(int key){ if(key2VFI.count(key)==0)return -1; increaseFreq(key); return key2VFI[key]->val; } void set(int key, int value){ if(cap==0)return; if(key2VFI.count(key)!=0){ key2VFI[key]->val = value; }else{ if(key2VFI.size()==cap)removeLeastFreqKey(); key2VFI[key] = new node(value, 0); minFreq = 1; } increaseFreq(key); } };","title":"LFU"},{"location":"DataStruct/Algorithm/#kmp","text":"\u9012\u63a8\u6c42\u89e3next\u6570\u7ec4: \u5df2\u77e5next[j](\u5b50\u4e32P[0, j-1]\u4e2d\u524d\u7f00\u4e0e\u540e\u7f00\u7684\u4ea4\u96c6\u4e2d\u6700\u957f\u5143\u7d20\u957f\u5ea6), \u6c42\u89e3next[j+1]\u65f6\uff0c \u82e5P[next[j]] == P[j]\uff0c\u5219next[j+1]=next[j]+1=k+1; \u5426\u5219\u9700\u8981\u5bfb\u627e\u957f\u5ea6\u66f4\u77ed\u7684\u76f8\u540c\u524d\u7f00\u540e\u7f00, \u5373\u8ba9k=next[k]\uff0c\u8ba9\u65b0\u7684P[k]\u4e0eP[j]\u6bd4\u8f83\uff0c\u5982\u679ck==-1\uff0c\u5219next[j]=0\u3002 void getPMT(string p, vector<int>& pmt){ int n=p.size(); int j=1, k=0; while(j<n){ if(p[j]==p[k]){ pmt[j++] = ++k; }else{ if(k)k=pmt[k-1]; else j++; } } } void getNext(std::vector<int>& next, string& p){ next[0] = -1; int j=0, k=-1; while(j<p.size()-1){ if(k==-1 || p[j]==p[k]){ next[++j] = ++k; }else k = next[k]; } } int KMP(string& s, string& p){ if(p.size() == 0 || s.size()<p.size())return -1; vector<int> next(p.size()); /* \u4e0b\u6807\u4ece0\u5f00\u59cb: \u524d\u7f00\u5b50\u4e32\uff0c\u5373\u7531p[0, i]\uff080<=i<p.size()-2\uff09\u6784\u6210\u7684\u96c6\u5408 \u540e\u7f00\u5b50\u4e32\uff0c\u5373\u7531p[j, p.size()-1](1<=j<=p.size()-1)\u6784\u6210\u7684\u96c6\u5408 PMT:\u90e8\u5206\u5339\u914d\u8868 PMT[i]\u7684\u542b\u4e49\u662f\u4ee5p[i]\u5b57\u7b26\u7ed3\u5c3e\u7684\u540e\u7f00\u5b50\u4e32\u96c6\u5408\u4e2d\uff0c\u4e0e\u4ee5p[0]\u5b57\u7b26\u5f00\u5934\u7684\u524d\u7f00\u5b50\u4e32\u96c6\u5408\uff0c\u4e24\u8005\u4ea4\u96c6\u7684\u6700\u5927\u503c\uff1b \u5f53\u4e3b\u4e32\u6307\u9488\u6307\u5411i, \u6a21\u5f0f\u4e32\u6307\u5411j\u65f6\u53d1\u751f\u5931\u914d\uff0c\u53ef\u77e5s[i-j, i-1]\u4e0ep[0, j-1]\u662f\u76f8\u7b49\u7684\uff0c \u5219s[i-PMT[j-1], i-1]\u81ea\u7136\u4e0ep[0, PMT[j-1]-1]\u662f\u76f8\u7b49\u7684(\u5206\u522b\u662f\u6a21\u5f0f\u5b50\u4e32p[0, j]\u6709\u6700\u5927\u4ea4\u96c6\u7684\u540e\u7f00\u548c\u524d\u7f00, \u6700\u5927\u4ea4\u96c6\u7684\u957f\u5ea6\u5373\u4e3aPMT[j-1]) \u5219\u6b64\u65f6\u8ba9i\u4fdd\u6301\u4e0d\u53d8\uff0cj\u56de\u9000\u5230PMT[j-1]\u5373\u53ef \u4e3a\u4e86\u65b9\u4fbf\u7f16\u7a0b\uff0c\u91c7\u7528next\u6570\u7ec4\u4ee3\u66ffPMT\uff0c\u5c06PMT\u6570\u7ec4\u53f3\u79fb\u4e00\u4f4d\uff0c\u7b2c\u4e00\u4f4d\u7f6e\u4e3a-1(\u5373\u89c4\u5b9anext[0]=-1)\u5f62\u6210\uff0c \u8fd9\u6837j\u56de\u9000\u5230next[j]\u5373\u53ef */ getNext(next, p); int i=0, j=0; int sLen = s.size(), pLen = p.size(); while(i<sLen && j<pLen){ if(j==-1 || s[i]==p[j]){ i++; j++; }else j=next[j]; } if(j==pLen)return i-j; else return -1; } //\u5bfb\u627e\u6a21\u677f\u4e32p\u5728\u6e90\u4e32s\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 class KMPSolution { public: int kmp(string p, string s) { if(s.size()<p.size())return 0; int i=0,j=0, slen=s.size(), plen=p.size(), pos=0; vector<int> next(plen); getNext(p, next); int ans=0; for(int i = 0, j = -1; i < slen; ++i) { /* \u76f8\u5f53\u4e8ep\u5728s\u6ed1\u52a8\uff0c\u5339\u914d\u6210\u529f\u4e00\u6b21ans++ */ while(j >= 0 && s[i] != p[j + 1])j = next[j]; if(s[i] == p[j + 1])++j; if(j + 1 == plen) { ++ans; j = next[j]; /* \u6b64\u65f6s[i+1-plen, i]\u4e0ep\u662f\u76f8\u540c\u7684\uff0c\u4e0b\u4e00\u6b65i\u5411\u540e\u79fb\u52a8 \u6b64\u65f6j\u56de\u9000\u5230next[j]\u4f4d\u7f6e\uff0c\u56e0\u4e3ap[0, next[j]-1]\u4e0es[i+1-next[j], i]\u662f\u76f8\u540c\u7684 */ } } return ans; } private: void getNext(const string& p, vector<int>& next){ next[0]=-1; int j=0,k=-1; int len=p.size(); while(j<len-1){ if(k==-1 || p[j]==p[k]){ next[++j] = ++k; }else k=next[k]; } } };","title":"KMP"},{"location":"DataStruct/Algorithm/#sunday","text":"int SundayStrMatch(string source, string pattern) { int sSize = source.size(), pSize = pattern.size(); if(sSize<pSize || pSize==0)return -1; unordered_map<char, int> shift; for(int i=0;i<pSize;i++)shift[pattern[i]]=pSize-i; int idx=0; while(idx+pSize<=sSize){ string sub = source.substr(idx, pSize); if(sub == pattern)return idx; if(idx+pSize>=sSize)return -1; if(shift.find(source[idx+pSize]) == shift.end())idx += pSize; else idx += shift[source[idx+pSize]]; } return -1; }","title":"SunDay\u7b97\u6cd5"},{"location":"DataStruct/Algorithm/#-","text":"\u5c06\u6392\u5217\u7ec4\u5408\u95ee\u9898\u62bd\u8c61\u4e3a\u6811\u5f62\u7ed3\u6784 \u7ed9\u5b9a\u4e00\u4e2a\u53ef\u5305\u542b\u91cd\u590d\u6570\u5b57\u7684\u5e8f\u5217 nums \uff0c\u6309 \u4efb\u610f\u987a\u5e8f \u8fd4\u56de\u6240\u6709 \u4e0d\u91cd\u590d \u7684\u5168\u6392\u5217\u3002 class Solution { public: vector<vector<int>> permuteUnique(vector<int>& nums) { bool visited[nums.size()]; memset(visited, 0, nums.size()); vector<int> track; sort(nums.begin(), nums.end()); backtrack(nums, track, visited); return ans; } private: vector<vector<int>> ans; void backtrack(vector<int>& nums, vector<int>& track, bool* visited){ if(track.size()==nums.size()){ ans.emplace_back(track); return; } for(int i=0;i<nums.size();i++){ /* \u8fd9\u662f\u4e0e46\u9898\u4e2d\uff0c\u4e0d\u5305\u542b\u91cd\u590d\u6570\u5b57\u7684\u5168\u6392\u5217\u7684\u91cd\u8981\u533a\u522b\uff1b \u56e0\u4e3a\u4e8b\u5148\u9700\u8981\u5bf9\u6570\u7ec4\u6392\u5e8f\uff0c\u76f8\u540c\u7684\u5143\u7d20\u5c06\u4f1a\u5728\u76f8\u90bb\u7684\u4f4d\u7f6e \u5982: 1,1',1'',2; \u4f9d\u6b21\u4e3a[1,1',1'',2]\u3001[1,1',2,1''],\u6b64\u65f6\u56de\u5230\u4ee4visited[1]=true\uff0c\u7136\u540e\u8fdb\u5165\u9012\u5f52\u7684\u65f6\u523b \u4ecebacktrack\u51fa\u6765\u540e\uff0c\u4ee4visited[1]=false,\u6b64\u65f6visited[2]\u548cvisited[3]\u4e5f\u4e3afalse, \u5faa\u73af\u5230i=2\u65f6\uff0c\u7531\u4e8enums[i]==nums[i-1]\u4ee5\u53ca !visited[i-1]\u6240\u4ee5\u8df3\u8fc7 \u7ed3\u679c\u4e2d\u76841\u6392\u5e8f\u4e00\u5b9a\u662f 1,1',1''\uff1b \u5982\u679c\u91c7\u7528i>0 && visited[i-1] && nums[i]==nums[i-1]\uff0c\u7ed3\u679c\u4e2d\u76841\u6392\u5e8f\u4e00\u5b9a\u662f1'',1',1 */ if(visited[i] || (i>0 && !visited[i-1] && nums[i]==nums[i-1])) continue; track.emplace_back(nums[i]); visited[i]=true; backtrack(nums, track, visited); visited[i]=false; track.pop_back(); } } }; \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\uff0c\u53ef\u80fd\u5305\u542b\u91cd\u590d\u5143\u7d20\uff0c\u8fd4\u56de\u8be5\u6570\u7ec4\u6240\u6709\u53ef\u80fd\u7684\u5b50\u96c6\uff08\u5e42\u96c6\uff09\u3002 \u89e3\u96c6\u4e0d\u80fd\u5305\u542b\u91cd\u590d\u7684\u5b50\u96c6\u3002 class Solution { public: vector<vector<int>> subsetsWithDup(vector<int>& nums) { sort(nums.begin(), nums.end()); vector<int> track; bool visited[nums.size()]; memset(visited, 0, nums.size()); dfs(nums, track, 0, visited); return ans; } private: vector<vector<int>> ans; void dfs(vector<int>& nums, vector<int>& track, int start, bool* visited){ ans.push_back(track); for(int i=start;i<nums.size();i++){ if(i>start && !visited[i-1] && nums[i]==nums[i-1])continue; track.push_back(nums[i]); visited[i] = true; dfs(nums, track, i+1, visited); visited[i] = false; track.pop_back(); } } }; class Solution { public: vector<vector<int>> subsetsWithDup(vector<int>& nums) { sort(nums.begin(), nums.end()); vector<int> track; dfs(nums, 0, track); return ans; } private: vector<vector<int>> ans; void dfs(vector<int>& nums, int start, vector<int>& track){ ans.push_back(track); for(int i=start;i<nums.size();i++){ if(i>start && nums[i]==nums[i-1])continue; track.push_back(nums[i]); dfs(nums, i+1, track); track.pop_back(); } } };","title":"\u7ec4\u5408-\u6811"},{"location":"DataStruct/Algorithm/#_4","text":"class Solution { public: // \u5f52\u5e76\u6392\u5e8f\uff0c\u81ea\u9876\u5411\u4e0b\uff0ctime:O(nlog n), space:O(log N), \u6808\u7a7a\u95f4 ListNode* sortList(ListNode* head) { if(!head || !head->next)return head; else if(!head->next->next){ int val1 = head->val; int val2 = head->next->val; if(val1 > val2){ head->val = val2; head->next->val = val1; } return head; } ListNode *fast = head, *slow=head; while(fast && fast->next){ fast = fast->next->next; slow = slow->next; } ListNode *lastHalf=slow->next; lastHalf = sortList(lastHalf); slow->next = nullptr; ListNode *prevHalf = sortList(head); ListNode *another; if(prevHalf->val <= lastHalf->val){ head = prevHalf; another = lastHalf; }else{ head = lastHalf; another = prevHalf; } // merge ListNode *cur = head, *prev; while(cur && another){ if(cur->val <= another->val){ prev = cur; cur = cur->next; }else{ ListNode *tmp=another->next; prev->next=another; another->next=cur; prev = another; another = tmp; } } if(!cur)prev->next=another; return head; } // space:O(1),\u81ea\u5e95\u5411\u4e0a ListNode* sortList(ListNode* head) { if (head == nullptr) return head; int length = 0; ListNode* node = head; // \u8ba1\u7b97\u94fe\u8868\u957f\u5ea6 while (node != nullptr) { length++; node = node->next; } ListNode* dummyHead = new ListNode(0, head); // \u4f2a\u5934\u8282\u70b9 for (int subLength = 1; subLength < length; subLength <<= 1) { ListNode* prev = dummyHead, *curr = dummyHead->next; // while\u5faa\u73af\u5148\u4e24\u4e24\u5408\u5e76\u957f\u5ea6\u4e3asubLength\u7684\u6709\u5e8f\u94fe\u8868\uff0c // for\u5faa\u73af\u4e2d\uff0csubLength\u957f\u5ea6\u6bcf\u6b21\u6269\u5927\u4e00\u500d // \u6574\u4f53\u6a21\u578b\u5f52\u5e76\u6392\u5e8f\u65f6\uff0c\u81ea\u9876\u5411\u4e0b\u5206\u6cbb\u7684\u9006\u8fc7\u7a0b while (curr != nullptr) { ListNode* head1 = curr; for (int i = 1; i < subLength && curr->next != nullptr; i++) { curr = curr->next; } ListNode* head2 = curr->next; curr->next = nullptr; curr = head2; for (int i = 1; i < subLength && curr != nullptr && curr->next != nullptr; i++) { curr = curr->next; } ListNode* next = nullptr; if (curr != nullptr) { next = curr->next; curr->next = nullptr; } ListNode* merged = merge(head1, head2); prev->next = merged; while (prev->next != nullptr) { prev = prev->next; } curr = next; } } return dummyHead->next; } ListNode* merge(ListNode* head1, ListNode* head2) { ListNode* dummyHead = new ListNode(0); ListNode* temp = dummyHead, *temp1 = head1, *temp2 = head2; while (temp1 != nullptr && temp2 != nullptr) { if (temp1->val <= temp2->val) { temp->next = temp1; temp1 = temp1->next; } else { temp->next = temp2; temp2 = temp2->next; } temp = temp->next; } if (temp1 != nullptr) { temp->next = temp1; } else if (temp2 != nullptr) { temp->next = temp2; } return dummyHead->next; } };","title":"\u94fe\u8868\u6392\u5e8f"},{"location":"DataStruct/Algorithm/#_5","text":"\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\uff0c\u5206\u522b\u8868\u793a\u5206\u6570\u7684\u5206\u5b50 numerator \u548c\u5206\u6bcd denominator\uff0c\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u8fd4\u56de\u5c0f\u6570\u3002 \u5982\u679c\u5c0f\u6570\u90e8\u5206\u4e3a\u5faa\u73af\u5c0f\u6570\uff0c\u5219\u5c06\u5faa\u73af\u7684\u90e8\u5206\u62ec\u5728\u62ec\u53f7\u5185\u3002 class Solution { public: string fractionToDecimal(int numerator, int denominator) { if(numerator==0)return \"0\"; else if(numerator==denominator)return \"1\"; unordered_map< int, int> memo; string ans=\"\", extra=\"\"; //if((numerator>0 && denominator<0) || (numerator<0 && denominator>0)) if((numerator>0)^(denominator>0)) ans+='-'; long num=abs(numerator), denom = abs(denominator); extra+=to_string(num/denom); num %= denom; if(num)extra+='.'; else return ans+extra; // \u8bf4\u660e\u4f59\u6570\u4e3a0\uff0c\u76f4\u63a5\u8fd4\u56de while(num!=0){ memo[num]=extra.size(); num*=10; extra+=to_string(num/denom); num %= denom; if(memo.count(num)){ // \u4f59\u6570\u91cd\u590d\u51fa\u73b0\uff0c\u8bf4\u660e\u51fa\u73b0\u5faa\u73af int pos=memo[num]; // \u7b2c\u4e00\u6b21\u51fa\u73b0\u524d\uff0cextra\u7684\u957f\u5ea6\uff0c[0, pos]\u4e0d\u5faa\u73af\uff0c[pos:-1]\u5faa\u73af extra = extra.substr(0, pos)+\"(\"+extra.substr(pos, extra.size()-pos)+\")\"; break; } } return ans+extra; } };","title":"\u5206\u6570\u5230\u5c0f\u6570"},{"location":"DataStruct/Algorithm/#1","text":"int num1(int num){ int bit=0; while(num){ bit++; num &= num-1; } return bit; }","title":"\u7edf\u8ba1\u4e8c\u8fdb\u5236\u4e2d 1 \u7684\u4e2a\u6570"},{"location":"DataStruct/Algorithm/#_6","text":"/* \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(logN * logN) \u9996\u5148\u8ba1\u7b97\u5de6\u53f3\u5b50\u6811\u9ad8\u590d\u6742\u5ea6\u4e3a logN; \u800c\u4e00\u4e2a\u5b8c\u5168\u4e8c\u53c9\u6811\u6ee1\u8db3\u4e00\u4e2a\u7279\u6027\u662f\u4e24\u4e2a\u5b50\u6811\u5fc5\u5b9a\u4e00\u4e2a\u662f\u6ee1\u4e8c\u53c9\u6811\uff0c\u53e6\u4e00\u4e2a\u662f\u5b8c\u5168\u4e8c\u53c9\u6811 \u5219 \u4ee3\u7801\u4e2d\u6700\u540e\u4e00\u4e2areturn\uff0c\u53ea\u6709\u5176\u4e2d\u4e00\u4e2acountNodes\u4f1a\u9012\u5f52\u4e0b\u53bb\uff0c\u53e6\u4e00\u4e2a\u4f1a\u89e6\u53d1 hl==hr, \u76f4\u63a5\u8fd4\u56de\u7ed3\u679c\uff1b \u9012\u5f52\u7684\u590d\u6742\u5ea6\u4e3a logN(\u6811\u7684\u9ad8\u5ea6)*logN(\u6bcf\u4e00\u5c42\u8ba1\u7b97\u5b50\u6811\u9ad8\u5ea6\u9700\u8981\u7684\u590d\u6742\u5ea6)\u3002 */ // java public int countNodes(TreeNode root){ TreenNode left=root, rigth=root; // \u8ba1\u7b97\u5de6\u53f3\u5b50\u6811\u9ad8\u5ea6 int hl=0, hr=0; while(left!=null){ hl++; left = root.left; } while(right!=null){ hr++; right = root.right; } if(left==right) // \u8bf4\u660e\u662f\u6ee1\u4e8c\u53c9\u6811 return (int)Math.pow(2, hl) - 1; return 1 + countNodes(root.left) + countNodes(root.right); }","title":"\u5b8c\u5168\u4e8c\u53c9\u6811\u8282\u70b9\u4e2a\u6570"},{"location":"DataStruct/Graph/","text":"\u56fe\u8bba\u7b97\u6cd5 \u5173\u4e8e\u56fe 1\u3001n\u4e2a\u9876\u70b9\u7684\u65e0\u5411\u5b8c\u5168\u56fe\u6709n(n-1)/2\u6761\u8fb9\u3002 \u2003 2\u3001\u5bf9\u4e8e\u65e0\u5411\u56feG(V,E)\uff0c\u5982\u679c\u8fb9\uff08v,v'\uff09\u2208E\uff0c\u5219\u79f0\u9876\u70b9v\u548cv\u2019\u4e92\u4e3a\u90bb\u63a5\u70b9\uff08Adjacent\uff09,\u5373v\u548cv'\u76f8\u5173\u8054\u3002 \u8fb9(v,v')\u4f9d\u9644 (incident) \u4e8e\u9876\u70b9v\u548c v', \u6216\u8005\u8bf4\uff08vv'\uff09\u4e0e\u9876\u70b9v\u548c v'\u76f8\u5173\u8054\u3002 \u9876\u70b9v\u7684\u5ea6(Degree)\u662f\u548cv\u5173\u8054\u7684\u8fb9\u7684\u6570\u76ee\uff0c\u8bb0\u4e3aTD(v)\u3002 \u5728\u65e0\u5411\u5b8c\u5168\u56fe\u4e2d\uff0c\u5404\u9876\u70b9\u7684\u5ea6\u548c\u7b49\u4e8e\u8fb9\u6570\u76842\u500d \u3002 \u2003 3\u3001\u5728\u6709\u5411\u56fe\u4e2d\uff0c\u5982\u679c\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u90fd\u5b58\u5728\u65b9\u5411\u76f8\u53cd\u7684\u4e24\u6761\u5f27\uff0c\u5219\u79f0\u8be5\u56fe\u4e3a\u6709\u5411\u5b8c\u5168\u56fe\u3002 n\u4e2a\u9876\u70b9\u7684\u6709\u5411\u5b8c\u5168\u56fe\u6709n(n-1)\u6761\u8fb9\u3002 \u4ee5\u9876\u70b9v\u4e3a\u7ec8\u70b9\u7684\u8fb9\u7684\u6570\u91cf\u79f0\u4e3av\u7684\u5165\u5ea6\uff08InDegree\uff09,ID(v); \u4ee5\u9876\u70b9v\u4e3a\u8d77\u70b9\u7684\u8fb9\u7684\u6570\u91cf\u79f0\u4e3av\u7684\u51fa\u5ea6\uff08OutDegree\uff09,OD(v); \u9876\u70b9v\u7684\u5ea6 TD(v) = ID(v) + OD(v)\u3002 \u5728\u6709\u5411\u5b8c\u5168\u56fe\u4e2d\uff0c\u5404\u9876\u70b9\u7684\u5165\u5ea6\u548c\u7b49\u4e8e\u51fa\u5ea6\u548c\uff0c\u7b49\u4e8e\u5f27\u7684\u6570\u76ee\u3002 BFS && DFS struct Vertex{ Vertex(std::string str): name(str){} std::list<std::pair<Vertex*, int>> adj; //\u90bb\u63a5\u8868, int\u578b\u53c2\u6570\u4ee3\u8868\u8fb9\u4e0a\u6743\u503c std::string name; bool known=false; //\u5728dijkrstra\u548cprim\u7b97\u6cd5\u4e2d\u6709\u7528 int dist=INT32_MAX; Vertex* prev=nullptr; }; void dfs(Vertex& ver){ std::cout<<ver.name<<\" \"; ver.known=true; for(std::pair<Vertex*, int>& p:ver.adj){ Vertex& v= *(p.first); if(!v.known)//\u8282\u70b9\u5c1a\u672a\u8bbf\u95ee dfs(v); } } void bfs(Vertex* ver){ std::queue<Vertex*> q; ver->known=true; q.push(ver); while(!q.empty()){ Vertex* head=q.front(); std::cout<<head->name<<\" \"; q.pop(); for(auto& p: head->adj){ if(!p.first->known){ p.first->known=true; q.push(p.first); } } } } \u62d3\u6251\u6392\u5e8f \u2003\u5728\u4e00\u4e2a\u8868\u793a\u5de5\u7a0b\u7684\u6709\u5411\u56fe\u4e2d\uff0c\u7528\u9876\u70b9\u8868\u793a\u6d3b\u52a8\uff0c\u7528\u5f27\u8868\u793a\u6d3b\u52a8\u4e4b\u95f4\u7684\u4f18\u5148\u5173\u7cfb\uff0c\u8fd9\u6837\u7684\u6709\u5411\u56fe\u4e3a\u9876\u70b9\u8868\u793a\u6d3b\u52a8\u7684\u7f51\uff0c\u6211\u4eec\u79f0\u4e3a AOV \u7f51(Activity on Vertex Network)\u3002 \u2003\u82e5\u4e00\u4e2a\u7531\u56fe\u4e2d\u6240\u6709\u70b9\u6784\u6210\u7684\u5e8f\u5217A\u6ee1\u8db3\uff1a\u5bf9\u4e8e\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9(x, y)\uff0cx\u5728A\u4e2d\u90fd\u51fa\u73b0\u5728y\u4e4b\u524d\uff0c\u5219\u79f0A\u662f\u8be5\u56fe\u7684\u4e00\u4e2a\u62d3\u6251\u5e8f\u5217\u3002 AOV\u7f51\u63cf\u8ff0\u4e86\u6d3b\u52a8\u4e4b\u95f4\u7684\u5236\u7ea6\u5173\u7cfb\u3002 \u2003\u62d3\u6251\u6392\u5e8f\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9\u4e00\u4e2a\u6709\u5411\u56fe\u6784\u9020\u62d3\u6251\u5e8f\u5217\u7684\u8fc7\u7a0b\u3002\u6784\u9020\u65f6\u4f1a\u6709\u4e24\u4e2a\u7ed3\u679c\uff0c\u5982\u679c\u6b64\u7f51\u7684\u5168\u90e8\u9876\u70b9\u90fd\u88ab\u8f93\u51fa\uff0c\u5219\u8bf4\u660e\u5b83\u662f\u4e0d\u5b58\u5728\u73af(\u56de\u8def)\u7684 AOV\uff1b \u5982\u679c\u8f93\u51fa\u9876\u70b9\u6570\u5c11\u4e86\uff0c\u8bf4\u660e\u8fd9\u4e2a\u7f51\u5b58\u5728\u73af(\u56de\u8def)\uff0c\u4e0d\u662f AOV\u7f51\u3002 /* \u8f93\u5165: numCourses=4, prerequisites=[[1,0],[2,0],[3,1],[3,2]]*/ // \u57fa\u4e8eDFS class Solution { private: vector<vector<int> > edges; vector<int> ans_stack; vector<int> visited; bool valid=true; void dfs(int u) { visited[u] = 1;//\u6807\u8bb0\u5df2\u7ecf\u8bbf\u95ee for (int v: edges[u]) { if (visited[v] == 0) { dfs(v); if (!valid) { return; } } else if (visited[v] == 1) { //\u9047\u5230\u5df2\u7ecf\u8bbf\u95ee\u7684\u8282\u70b9\uff0c\u8bf4\u660e\u5b58\u5728\u73af valid = false; return; } } visited[u] = 2; //\u8be5\u8282\u70b9\u6b63\u5e38 ans_stack.push_back(u); } public: vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) { edges.resize(numCourses); visited.resize(numCourses); for (const auto& info: prerequisites) { edges[info[1]].push_back(info[0]); } for (int i = 0; i < numCourses && valid; ++i) { if (!visited[i]) {//i\u8282\u70b9\u5c1a\u672a\u8bbf\u95ee\uff0c\u8fdb\u5165dfs dfs(i); } } if(ans_stack.size() != numCourses) return {}; reverse(ans_stack.begin(), ans_stack.end()); return ans_stack; } }; //\u57fa\u4e8eBFS class Solution { public: vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) { vector<vector<int> > edges(numCourses); vector<int> indegrees(numCourses, 0); for(auto& v:prerequisites){ edges[v[1]].push_back(v[0]); ++indegrees[v[0]]; } queue<int> q; for(int i=0;i<numCourses;i++){ if(indegrees[i]==0) q.push(i); } vector<int> ans; while(!q.empty()){ int node = q.front(); q.pop(); ans.push_back(node); for(auto& adj:edges[node]){ --indegrees[adj]; if(indegrees[adj]==0)q.push(adj); } } if(ans.size()<numCourses)return{};//\u5b58\u5728\u73af return ans; } }; \u6700\u77ed\u8def\u5f84 \u76ee\u524d\uff0c\u8fd8\u4e0d\u5b58\u5728\u627e\u51fa\u9876\u70b9v\u5230\u4efb\u610f\u4e00\u4e2a\u9876\u70b9\u8def\u5f84\u8981\u6bd4\u627e\u51fa\u9876\u70b9v\u5230\u6240\u6709\u9876\u70b9\u8def\u5f84\u66f4\u5feb\u7684\u7b97\u6cd5 Dijkstra\u7b97\u6cd5 \u5bf9\u4e8e\u8d4b\u6743\u56fe\uff0c\u91c7\u7528Djkstra\u7b97\u6cd5(\u8d2a\u5a6a\u7b97\u6cd5\u7684\u4e00\u4e2a\u8303\u4f8b)\u66f4\u4f18\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(E+V^2)=O(V^2);\u4e0d\u9002\u7528\u6743\u503c\u4e3a\u8d1f\uff1b \u82e5\u4f7f\u7528\u6700\u5c0f\u5806\u6765\u5bfb\u627e\u6700\u8fd1\u8282\u70b9\uff0c\u5219\u590d\u6742\u5ea6\u4e3aO(Elog V + Vlog V)=O(Elog V). void printPath(Vertex v){ if(v.prev){ printPath((*v.prev)); std::cout<<\" to \"; } std::cout<<v.name; } void dijkrsta(std::vector<Vertex*>& vertexs, Vertex* start, Vertex* target){ start->dist=0; bool visitedAll = true; while(true){ //\u5bfb\u627e\u672a\u88ab\u6807\u8bb0\u8fc7\u7684\u8ddd\u79bbstart\u6700\u8fd1\u7684\u8282\u70b9, \u53ef\u4ee5\u901a\u8fc7\u6784\u5efa\u6700\u5c0f\u5806\u6765\u8fdb\u884c\u4f18\u5316 //\u7b2c\u4e00\u6b21\u627e\u5230\u7684\u5373\u662fstart\u672c\u8eab int minDist = INT32_MAX, minIndex=0; for(int i=0;i<vertexs.size();i++){ if(!vertexs[i]->known && vertexs[i]->dist<minDist){ minDist=vertexs[i]->dist; minIndex=i; visitedAll=false; } } //\u5168\u90e8\u6807\u8bb0\u8fc7\uff0c\u8df3\u51fa if(visitedAll) break; Vertex* front=vertexs[minIndex]; front->known=true; //\u6807\u8bb0\u8282\u70b9\u5df2\u88ab\u8bbf\u95ee for(auto& pp:front->adj){//\u904d\u5386front\u7684\u672a\u88ab\u8bbf\u95ee\u7684\u90bb\u5c45\u8282\u70b9pp if(!pp.first->known){ int neighbor_cost=pp.second; //front\u5230\u76f8\u90bb\u8282\u70b9\u7684\u8ddd\u79bb if(front->dist+neighbor_cost<pp.first->dist){ //pp.first->dist\u4ee3\u8868\u4e4b\u524d\u7531start\u76f4\u63a5\u5230pp\u7684\u8ddd\u79bb //\u8bf4\u660e\u7ecf\u7531front\u5230\u8fbepp\u8ddd\u79bb\u66f4\u5c0f //\u66f4\u65b0start\u5230pp\u6240\u9700\u7684\u8ddd\u79bb pp.first->dist=front->dist+neighbor_cost; pp.first->prev=front; } } } visitedAll=true; } printPath(*target); } Floyd\u7b97\u6cd5 \u8ba1\u7b97\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5373\u4f7f\u6743\u503c\u4e3a\u8d1f\u4e5f\u53ef\u3002\u9002\u5408\u7a20\u5bc6\u56fe void floyd(std::vector<std::vector<std::pair<int, int>> >&adjacents){ //adjacents\u5b58\u50a8\u6240\u6709\u8282\u70b9\u7684\u76f8\u90bb\u8282\u70b9\uff0c\u82e5\u6ca1\u6709\uff0c\u5219adjacent[i]={}; //pair<\u76f8\u90bb\u8282\u70b9\uff0c\u8fb9\u7684\u6743\u503c> int numVertexs = adjacents.size(); std::vector<std::vector<int> > edges(numVertexs, std::vector<int>(numVertexs, INT32_MAX/2)); for(int i=0;i<numVertexs;i++){ edges[i][i] = 0; for(auto& p:adjacents[i]){ edges[i][p.first] = p.second; } } for(int k=0;k<numVertexs;k++){ for(int i=0;i<numVertexs;i++){ for(int j=0;j<numVertexs;j++){ edges[i][j] = std::min(edges[i][j], edges[i][k]+edges[k][j]); } } } //edge\u5b58\u50a8\u4e86\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u95f4\u7684\u6700\u5c0f\u52a0\u6743\u8def\u5f84\u957f\u5ea6 } \u6700\u5c0f\u751f\u6210\u6811 \u2003\u8fde\u901a\u56fe\u7684\u751f\u6210\u6811\uff1a\u662f\u4e00\u4e2a\u6781\u5c0f\u8fde\u901a\u5b50\u56fe\uff0c\u5b83\u542b\u6709\u56fe\u4e2d\u5168\u90e8\u7684n\u4e2a\u9876\u70b9\uff0c\u4f46\u53ea\u6709\u8db3\u4ee5\u6784\u6210\u4e00\u68f5\u6811\u7684n-1\u6761\u8fb9\u3002 \u6b64\u5916\u628a\u6784\u6210\u8fde\u901a\u7f51\u7684\u6700\u5c0f\u4ee3\u4ef7\u751f\u6210\u6811\u79f0\u4e3a\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5373\u5404\u8fb9\u6743\u503c\u548c\u6700\u5c0f\u3002 \u2003\u4e00\u822c\u901a\u8fc7Prim\u548cKruskal\u7b97\u6cd5\u6784\u5efaMinimum Spanning Tree. Prim //Prim\u4e0eDijkstra\u8fc7\u7a0b\u57fa\u672c\u76f8\u540c\uff0c\u53ea\u4e0d\u8fc7\u4fee\u6539\u4e86\u66f4\u65b0dist\u7684\u89c4\u5219 //Prim\u662f\u5728\u65e0\u5411\u56fe\u4e0a\u8fd0\u884c\u7684\uff0c\u6240\u4ee5\u6bcf\u4e00\u6761\u8fb9\u90fd\u5b58\u5728\u4e8e\u4e24\u4e2a\u94fe\u8868\u4e2d void Prim(std::vector<Vertex*>& vertexs, Vertex* start){ start->dist=0; bool visitedAll=false; /* \u6b64\u65f6Vertex\u4e2d\u7684dist\u4ee3\u8868\u7531\u6240\u6709konwn=true\u7684\u9876\u70b9\u5230\u8be5\u8282\u70b9\u4e2d\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c \u5177\u6709\u6700\u5c0f\u8ddd\u79bb\u7684\u90a3\u4e2a\u8282\u70b9\u5c31\u662fprev */ while(true){ //\u5bfb\u627e\u672a\u88ab\u6807\u8bb0\u8fc7\u7684\u8ddd\u79bbstart\u6700\u8fd1\u7684\u8282\u70b9 int minDist = INT32_MAX, minIndex=0; for(int i=0;i<vertexs.size();i++){ if(!vertexs[i]->known && vertexs[i]->dist<minDist){ minDist=vertexs[i]->dist; minIndex=i; visitedAll=false; } } //\u5168\u90e8\u6807\u8bb0\u8fc7\uff0c\u8df3\u51fa if(visitedAll) break; Vertex* front=vertexs[minIndex]; front->known=true; for(auto& pp:front->adj){ if(!pp.first->known){ int neighbor_cost=pp.second; if(neighbor_cost<pp.first->dist){ //\u8fd9\u91cc\u4e0eDijkstra\u4e0d\u540c pp.first->dist=front->dist+neighbor_cost; pp.first->prev=front; } } } visitedAll=true; } std::cout<<\"Minimum Spanning Tree:\"<<std::endl; for(auto& v:vertexs){ if(v->prev) std::cout<<\"(\"<<v->prev->name<<\",\"<<v->name<<\")\"<<std::endl; } } Kruskal","title":"Graph"},{"location":"DataStruct/Graph/#_1","text":"","title":"\u56fe\u8bba\u7b97\u6cd5"},{"location":"DataStruct/Graph/#_2","text":"1\u3001n\u4e2a\u9876\u70b9\u7684\u65e0\u5411\u5b8c\u5168\u56fe\u6709n(n-1)/2\u6761\u8fb9\u3002 \u2003 2\u3001\u5bf9\u4e8e\u65e0\u5411\u56feG(V,E)\uff0c\u5982\u679c\u8fb9\uff08v,v'\uff09\u2208E\uff0c\u5219\u79f0\u9876\u70b9v\u548cv\u2019\u4e92\u4e3a\u90bb\u63a5\u70b9\uff08Adjacent\uff09,\u5373v\u548cv'\u76f8\u5173\u8054\u3002 \u8fb9(v,v')\u4f9d\u9644 (incident) \u4e8e\u9876\u70b9v\u548c v', \u6216\u8005\u8bf4\uff08vv'\uff09\u4e0e\u9876\u70b9v\u548c v'\u76f8\u5173\u8054\u3002 \u9876\u70b9v\u7684\u5ea6(Degree)\u662f\u548cv\u5173\u8054\u7684\u8fb9\u7684\u6570\u76ee\uff0c\u8bb0\u4e3aTD(v)\u3002 \u5728\u65e0\u5411\u5b8c\u5168\u56fe\u4e2d\uff0c\u5404\u9876\u70b9\u7684\u5ea6\u548c\u7b49\u4e8e\u8fb9\u6570\u76842\u500d \u3002 \u2003 3\u3001\u5728\u6709\u5411\u56fe\u4e2d\uff0c\u5982\u679c\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u90fd\u5b58\u5728\u65b9\u5411\u76f8\u53cd\u7684\u4e24\u6761\u5f27\uff0c\u5219\u79f0\u8be5\u56fe\u4e3a\u6709\u5411\u5b8c\u5168\u56fe\u3002 n\u4e2a\u9876\u70b9\u7684\u6709\u5411\u5b8c\u5168\u56fe\u6709n(n-1)\u6761\u8fb9\u3002 \u4ee5\u9876\u70b9v\u4e3a\u7ec8\u70b9\u7684\u8fb9\u7684\u6570\u91cf\u79f0\u4e3av\u7684\u5165\u5ea6\uff08InDegree\uff09,ID(v); \u4ee5\u9876\u70b9v\u4e3a\u8d77\u70b9\u7684\u8fb9\u7684\u6570\u91cf\u79f0\u4e3av\u7684\u51fa\u5ea6\uff08OutDegree\uff09,OD(v); \u9876\u70b9v\u7684\u5ea6 TD(v) = ID(v) + OD(v)\u3002 \u5728\u6709\u5411\u5b8c\u5168\u56fe\u4e2d\uff0c\u5404\u9876\u70b9\u7684\u5165\u5ea6\u548c\u7b49\u4e8e\u51fa\u5ea6\u548c\uff0c\u7b49\u4e8e\u5f27\u7684\u6570\u76ee\u3002","title":"\u5173\u4e8e\u56fe"},{"location":"DataStruct/Graph/#bfs-dfs","text":"struct Vertex{ Vertex(std::string str): name(str){} std::list<std::pair<Vertex*, int>> adj; //\u90bb\u63a5\u8868, int\u578b\u53c2\u6570\u4ee3\u8868\u8fb9\u4e0a\u6743\u503c std::string name; bool known=false; //\u5728dijkrstra\u548cprim\u7b97\u6cd5\u4e2d\u6709\u7528 int dist=INT32_MAX; Vertex* prev=nullptr; }; void dfs(Vertex& ver){ std::cout<<ver.name<<\" \"; ver.known=true; for(std::pair<Vertex*, int>& p:ver.adj){ Vertex& v= *(p.first); if(!v.known)//\u8282\u70b9\u5c1a\u672a\u8bbf\u95ee dfs(v); } } void bfs(Vertex* ver){ std::queue<Vertex*> q; ver->known=true; q.push(ver); while(!q.empty()){ Vertex* head=q.front(); std::cout<<head->name<<\" \"; q.pop(); for(auto& p: head->adj){ if(!p.first->known){ p.first->known=true; q.push(p.first); } } } }","title":"BFS &amp;&amp; DFS"},{"location":"DataStruct/Graph/#_3","text":"\u5728\u4e00\u4e2a\u8868\u793a\u5de5\u7a0b\u7684\u6709\u5411\u56fe\u4e2d\uff0c\u7528\u9876\u70b9\u8868\u793a\u6d3b\u52a8\uff0c\u7528\u5f27\u8868\u793a\u6d3b\u52a8\u4e4b\u95f4\u7684\u4f18\u5148\u5173\u7cfb\uff0c\u8fd9\u6837\u7684\u6709\u5411\u56fe\u4e3a\u9876\u70b9\u8868\u793a\u6d3b\u52a8\u7684\u7f51\uff0c\u6211\u4eec\u79f0\u4e3a AOV \u7f51(Activity on Vertex Network)\u3002 \u2003\u82e5\u4e00\u4e2a\u7531\u56fe\u4e2d\u6240\u6709\u70b9\u6784\u6210\u7684\u5e8f\u5217A\u6ee1\u8db3\uff1a\u5bf9\u4e8e\u56fe\u4e2d\u7684\u6bcf\u6761\u8fb9(x, y)\uff0cx\u5728A\u4e2d\u90fd\u51fa\u73b0\u5728y\u4e4b\u524d\uff0c\u5219\u79f0A\u662f\u8be5\u56fe\u7684\u4e00\u4e2a\u62d3\u6251\u5e8f\u5217\u3002 AOV\u7f51\u63cf\u8ff0\u4e86\u6d3b\u52a8\u4e4b\u95f4\u7684\u5236\u7ea6\u5173\u7cfb\u3002 \u2003\u62d3\u6251\u6392\u5e8f\uff0c\u5176\u5b9e\u5c31\u662f\u5bf9\u4e00\u4e2a\u6709\u5411\u56fe\u6784\u9020\u62d3\u6251\u5e8f\u5217\u7684\u8fc7\u7a0b\u3002\u6784\u9020\u65f6\u4f1a\u6709\u4e24\u4e2a\u7ed3\u679c\uff0c\u5982\u679c\u6b64\u7f51\u7684\u5168\u90e8\u9876\u70b9\u90fd\u88ab\u8f93\u51fa\uff0c\u5219\u8bf4\u660e\u5b83\u662f\u4e0d\u5b58\u5728\u73af(\u56de\u8def)\u7684 AOV\uff1b \u5982\u679c\u8f93\u51fa\u9876\u70b9\u6570\u5c11\u4e86\uff0c\u8bf4\u660e\u8fd9\u4e2a\u7f51\u5b58\u5728\u73af(\u56de\u8def)\uff0c\u4e0d\u662f AOV\u7f51\u3002 /* \u8f93\u5165: numCourses=4, prerequisites=[[1,0],[2,0],[3,1],[3,2]]*/ // \u57fa\u4e8eDFS class Solution { private: vector<vector<int> > edges; vector<int> ans_stack; vector<int> visited; bool valid=true; void dfs(int u) { visited[u] = 1;//\u6807\u8bb0\u5df2\u7ecf\u8bbf\u95ee for (int v: edges[u]) { if (visited[v] == 0) { dfs(v); if (!valid) { return; } } else if (visited[v] == 1) { //\u9047\u5230\u5df2\u7ecf\u8bbf\u95ee\u7684\u8282\u70b9\uff0c\u8bf4\u660e\u5b58\u5728\u73af valid = false; return; } } visited[u] = 2; //\u8be5\u8282\u70b9\u6b63\u5e38 ans_stack.push_back(u); } public: vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) { edges.resize(numCourses); visited.resize(numCourses); for (const auto& info: prerequisites) { edges[info[1]].push_back(info[0]); } for (int i = 0; i < numCourses && valid; ++i) { if (!visited[i]) {//i\u8282\u70b9\u5c1a\u672a\u8bbf\u95ee\uff0c\u8fdb\u5165dfs dfs(i); } } if(ans_stack.size() != numCourses) return {}; reverse(ans_stack.begin(), ans_stack.end()); return ans_stack; } }; //\u57fa\u4e8eBFS class Solution { public: vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) { vector<vector<int> > edges(numCourses); vector<int> indegrees(numCourses, 0); for(auto& v:prerequisites){ edges[v[1]].push_back(v[0]); ++indegrees[v[0]]; } queue<int> q; for(int i=0;i<numCourses;i++){ if(indegrees[i]==0) q.push(i); } vector<int> ans; while(!q.empty()){ int node = q.front(); q.pop(); ans.push_back(node); for(auto& adj:edges[node]){ --indegrees[adj]; if(indegrees[adj]==0)q.push(adj); } } if(ans.size()<numCourses)return{};//\u5b58\u5728\u73af return ans; } };","title":"\u62d3\u6251\u6392\u5e8f"},{"location":"DataStruct/Graph/#_4","text":"\u76ee\u524d\uff0c\u8fd8\u4e0d\u5b58\u5728\u627e\u51fa\u9876\u70b9v\u5230\u4efb\u610f\u4e00\u4e2a\u9876\u70b9\u8def\u5f84\u8981\u6bd4\u627e\u51fa\u9876\u70b9v\u5230\u6240\u6709\u9876\u70b9\u8def\u5f84\u66f4\u5feb\u7684\u7b97\u6cd5 Dijkstra\u7b97\u6cd5 \u5bf9\u4e8e\u8d4b\u6743\u56fe\uff0c\u91c7\u7528Djkstra\u7b97\u6cd5(\u8d2a\u5a6a\u7b97\u6cd5\u7684\u4e00\u4e2a\u8303\u4f8b)\u66f4\u4f18\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(E+V^2)=O(V^2);\u4e0d\u9002\u7528\u6743\u503c\u4e3a\u8d1f\uff1b \u82e5\u4f7f\u7528\u6700\u5c0f\u5806\u6765\u5bfb\u627e\u6700\u8fd1\u8282\u70b9\uff0c\u5219\u590d\u6742\u5ea6\u4e3aO(Elog V + Vlog V)=O(Elog V). void printPath(Vertex v){ if(v.prev){ printPath((*v.prev)); std::cout<<\" to \"; } std::cout<<v.name; } void dijkrsta(std::vector<Vertex*>& vertexs, Vertex* start, Vertex* target){ start->dist=0; bool visitedAll = true; while(true){ //\u5bfb\u627e\u672a\u88ab\u6807\u8bb0\u8fc7\u7684\u8ddd\u79bbstart\u6700\u8fd1\u7684\u8282\u70b9, \u53ef\u4ee5\u901a\u8fc7\u6784\u5efa\u6700\u5c0f\u5806\u6765\u8fdb\u884c\u4f18\u5316 //\u7b2c\u4e00\u6b21\u627e\u5230\u7684\u5373\u662fstart\u672c\u8eab int minDist = INT32_MAX, minIndex=0; for(int i=0;i<vertexs.size();i++){ if(!vertexs[i]->known && vertexs[i]->dist<minDist){ minDist=vertexs[i]->dist; minIndex=i; visitedAll=false; } } //\u5168\u90e8\u6807\u8bb0\u8fc7\uff0c\u8df3\u51fa if(visitedAll) break; Vertex* front=vertexs[minIndex]; front->known=true; //\u6807\u8bb0\u8282\u70b9\u5df2\u88ab\u8bbf\u95ee for(auto& pp:front->adj){//\u904d\u5386front\u7684\u672a\u88ab\u8bbf\u95ee\u7684\u90bb\u5c45\u8282\u70b9pp if(!pp.first->known){ int neighbor_cost=pp.second; //front\u5230\u76f8\u90bb\u8282\u70b9\u7684\u8ddd\u79bb if(front->dist+neighbor_cost<pp.first->dist){ //pp.first->dist\u4ee3\u8868\u4e4b\u524d\u7531start\u76f4\u63a5\u5230pp\u7684\u8ddd\u79bb //\u8bf4\u660e\u7ecf\u7531front\u5230\u8fbepp\u8ddd\u79bb\u66f4\u5c0f //\u66f4\u65b0start\u5230pp\u6240\u9700\u7684\u8ddd\u79bb pp.first->dist=front->dist+neighbor_cost; pp.first->prev=front; } } } visitedAll=true; } printPath(*target); } Floyd\u7b97\u6cd5 \u8ba1\u7b97\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8ddd\u79bb\uff0c\u5373\u4f7f\u6743\u503c\u4e3a\u8d1f\u4e5f\u53ef\u3002\u9002\u5408\u7a20\u5bc6\u56fe void floyd(std::vector<std::vector<std::pair<int, int>> >&adjacents){ //adjacents\u5b58\u50a8\u6240\u6709\u8282\u70b9\u7684\u76f8\u90bb\u8282\u70b9\uff0c\u82e5\u6ca1\u6709\uff0c\u5219adjacent[i]={}; //pair<\u76f8\u90bb\u8282\u70b9\uff0c\u8fb9\u7684\u6743\u503c> int numVertexs = adjacents.size(); std::vector<std::vector<int> > edges(numVertexs, std::vector<int>(numVertexs, INT32_MAX/2)); for(int i=0;i<numVertexs;i++){ edges[i][i] = 0; for(auto& p:adjacents[i]){ edges[i][p.first] = p.second; } } for(int k=0;k<numVertexs;k++){ for(int i=0;i<numVertexs;i++){ for(int j=0;j<numVertexs;j++){ edges[i][j] = std::min(edges[i][j], edges[i][k]+edges[k][j]); } } } //edge\u5b58\u50a8\u4e86\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u95f4\u7684\u6700\u5c0f\u52a0\u6743\u8def\u5f84\u957f\u5ea6 }","title":"\u6700\u77ed\u8def\u5f84"},{"location":"DataStruct/Graph/#_5","text":"\u8fde\u901a\u56fe\u7684\u751f\u6210\u6811\uff1a\u662f\u4e00\u4e2a\u6781\u5c0f\u8fde\u901a\u5b50\u56fe\uff0c\u5b83\u542b\u6709\u56fe\u4e2d\u5168\u90e8\u7684n\u4e2a\u9876\u70b9\uff0c\u4f46\u53ea\u6709\u8db3\u4ee5\u6784\u6210\u4e00\u68f5\u6811\u7684n-1\u6761\u8fb9\u3002 \u6b64\u5916\u628a\u6784\u6210\u8fde\u901a\u7f51\u7684\u6700\u5c0f\u4ee3\u4ef7\u751f\u6210\u6811\u79f0\u4e3a\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5373\u5404\u8fb9\u6743\u503c\u548c\u6700\u5c0f\u3002 \u2003\u4e00\u822c\u901a\u8fc7Prim\u548cKruskal\u7b97\u6cd5\u6784\u5efaMinimum Spanning Tree. Prim //Prim\u4e0eDijkstra\u8fc7\u7a0b\u57fa\u672c\u76f8\u540c\uff0c\u53ea\u4e0d\u8fc7\u4fee\u6539\u4e86\u66f4\u65b0dist\u7684\u89c4\u5219 //Prim\u662f\u5728\u65e0\u5411\u56fe\u4e0a\u8fd0\u884c\u7684\uff0c\u6240\u4ee5\u6bcf\u4e00\u6761\u8fb9\u90fd\u5b58\u5728\u4e8e\u4e24\u4e2a\u94fe\u8868\u4e2d void Prim(std::vector<Vertex*>& vertexs, Vertex* start){ start->dist=0; bool visitedAll=false; /* \u6b64\u65f6Vertex\u4e2d\u7684dist\u4ee3\u8868\u7531\u6240\u6709konwn=true\u7684\u9876\u70b9\u5230\u8be5\u8282\u70b9\u4e2d\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c \u5177\u6709\u6700\u5c0f\u8ddd\u79bb\u7684\u90a3\u4e2a\u8282\u70b9\u5c31\u662fprev */ while(true){ //\u5bfb\u627e\u672a\u88ab\u6807\u8bb0\u8fc7\u7684\u8ddd\u79bbstart\u6700\u8fd1\u7684\u8282\u70b9 int minDist = INT32_MAX, minIndex=0; for(int i=0;i<vertexs.size();i++){ if(!vertexs[i]->known && vertexs[i]->dist<minDist){ minDist=vertexs[i]->dist; minIndex=i; visitedAll=false; } } //\u5168\u90e8\u6807\u8bb0\u8fc7\uff0c\u8df3\u51fa if(visitedAll) break; Vertex* front=vertexs[minIndex]; front->known=true; for(auto& pp:front->adj){ if(!pp.first->known){ int neighbor_cost=pp.second; if(neighbor_cost<pp.first->dist){ //\u8fd9\u91cc\u4e0eDijkstra\u4e0d\u540c pp.first->dist=front->dist+neighbor_cost; pp.first->prev=front; } } } visitedAll=true; } std::cout<<\"Minimum Spanning Tree:\"<<std::endl; for(auto& v:vertexs){ if(v->prev) std::cout<<\"(\"<<v->prev->name<<\",\"<<v->name<<\")\"<<std::endl; } } Kruskal","title":"\u6700\u5c0f\u751f\u6210\u6811"},{"location":"DataStruct/OtherStruct/","text":"\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u8865\u5145 \u6563\u5217 \u2003\u662f\u6839\u636e\u952e\uff08Key\uff09\u800c\u76f4\u63a5\u8bbf\u95ee\u5728\u5185\u5b58\u5b58\u50a8\u4f4d\u7f6e\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u901a\u8fc7\u8ba1\u7b97\u4e00\u4e2a\u5173\u4e8e\u952e\u503c\u7684\u51fd\u6570(\u6563\u5217\u51fd\u6570)\uff0c\u5c06\u6240\u9700\u67e5\u8be2\u7684\u6570\u636e\u6620\u5c04\u5230\u8868\u4e2d\u4e00\u4e2a\u4f4d\u7f6e\u6765\u8bbf\u95ee\u8bb0\u5f55\uff1b\u6563\u5217(hashing)\u662f\u4e00\u79cd\u4ee5\u5e38\u6570\u5e73\u5747\u65f6\u95f4\u6267\u884c\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u627e\u7684\u6280\u672f\u3002 \u2003\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u63d2\u5165\u65f6\u4e0e\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5143\u7d20\u6563\u5217\u5230\u76f8\u540c\u7684\u503c\u65f6\uff0c\u5219\u4ea7\u751f\u4e86\u4e00\u4e2a \u51b2\u7a81 \uff0c\u6709\u4e24\u79cd\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6cd5: \u5206\u79bb\u94fe\u63a5\u6cd5\u548c\u5f00\u653e\u5b9a\u5740\u6cd5\u3002 \u5206\u79bb\u94fe\u63a5\u6cd5 : \u5c06\u6563\u5217\u5230\u540c\u4e00\u4e2a\u503c\u5f97\u6240\u6709\u5143\u7d20\u4fdd\u7559\u5230\u4e00\u4e2a\u94fe\u8868\u4e2d\uff0c\u65b0\u5143\u7d20\u4e00\u822c\u88ab\u63d2\u5165\u5230\u94fe\u8868\u7684\u524d\u7aef\uff0c\u56e0\u4e3a\u65b0\u8fd1\u63d2\u5165\u7684\u5143\u7d20\u6700\u6709\u53ef\u80fd\u4e0d\u4e45\u88ab\u8bbf\u95ee\u3002 \u88c5\u586b\u56e0\u5b50: \u6563\u5217\u8868\u7684\u5143\u7d20\u4e2a\u6570\u5bf9\u6563\u5217\u8868\u5927\u5c0f\u7684\u6bd4\u503c\u03bb\u3002 \u6267\u884c\u4e00\u6b21\u67e5\u627e\u7684\u8bc4\u4ef7\u4ee3\u4ef7\u4e3a1+\u03bb/2\uff1b\u5206\u79bb\u94fe\u63a5\u6563\u5217\u6cd5\u7684\u4e00\u822c\u6cd5\u5219\u662f\u8ba9\u8868\u7684\u5927\u5c0f\u4e0e\u9884\u6599\u7684\u5143\u7d20\u4e2a\u6570\u4e00\u81f4\uff0c\u5373\u03bb\u22481\uff0c\u5f53\u03bb\u8d85\u8fc71\u65f6\uff0c\u5c31\u6269\u5927\u6563\u5217\u8868\u7684\u5927\u5c0f\u3002 \u5f00\u653e\u5b9a\u5740\u6cd5 \uff1a\u91c7\u7528\u63a2\u6d4b\u6563\u5217\u8868\uff0c\u4e00\u79cd\u4e0d\u91c7\u7528\u94fe\u8868\u7684\u6563\u5217\u8868\uff0c\u5bf9\u4e8e\u51b2\u7a81\u7684\u5143\u7d20\u5c1d\u8bd5\u53e6\u5916\u7684\u5355\u5143(h i (x)=(hash(x)+f(i))mod TableSize, f\u662f\u51b2\u7a81\u89e3\u51b3\u65b9\u6848)\uff0c\u8fd9\u79cd\u5f62\u5f0f\u7684\u8868\u8981\u6bd4\u5206\u79bb\u94fe\u63a5\u6cd5\u9700\u8981\u7684\u8868\u66f4\u5927\uff0c\u8981\u6c42\u03bb\u5c0f\u4e8e0.5\u3002 \u2003\u5e38\u89c1\u51b2\u7a81\u89e3\u51b3\u5305\u62ec\u7ebf\u6027\u63a2\u6d4b\u6cd5(f\u662fi\u7684\u7ebf\u6027\u51fd\u6570, eg.f(i)=i)\u3001\u5e73\u65b9\u63a2\u6d4b\u6cd5\u548c\u53cc\u6563\u5217\u3002 \u2003\u5bf9\u4e8ef(i)=i\u7684\u7ebf\u6027\u63a2\u6d4b\uff0c\u76f8\u5f53\u4e8e\u76f8\u7ee7\u63a2\u6d4b\u9010\u4e2a\u5355\u5143(\u53ef\u4ee5\u5faa\u73af)\u4ee5\u627e\u5230\u7b2c\u4e00\u4e2a\u7a7a\u5355\u5143\uff1b\u7531\u4e8e\u5b9e\u73b0\u7b80\u5355\uff0c\u5177\u6709\u826f\u597d\u7684\u5c40\u90e8\u6027\uff0c\u5728\u786c\u4ef6\u4e0a\u7684\u6807\u51c6\u5b9e\u73b0\u4e2d\u5341\u5206\u6d41\u884c; \u4f46\u67d0\u79cd\u60c5\u51b5\u4e0b\uff0c\u51b2\u7a81\u9020\u6210\u5143\u7d20\u5360\u636e\u7684\u4f4d\u7f6e\u5f62\u6210\u533a\u5757\uff0c\u5373\u4e00\u6b21\u805a\u96c6\uff0c\u5bfc\u81f4\u6563\u5217\u5230\u533a\u5757\u4e2d\u7684\u4efb\u4f55\u5173\u952e\u5b57\u90fd\u9700\u8981\u591a\u6b21\u63a2\u6d4b\u5355\u5143\u624d\u80fd\u89e3\u51b3\u51b2\u7a81\u3002 \u2003\u5e73\u65b9\u63a2\u6d4b\uff0cf(i)=i^2, \u4f1a\u5f15\u8d77\u4e8c\u6b21\u805a\u96c6(\u6563\u5217\u5230\u540c\u4e00\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u5c06\u63a2\u6d4b\u76f8\u540c\u7684\u5907\u9009\u4f4d\u7f6e)\uff0c\u88c5\u586b\u56e0\u5b50\u4e0d\u80fd\u5927\u4e8e0.5\uff0c\u5373\u81f3\u5c11\u6709\u4e00\u534a\u4e3a\u7a7a\u4e14\u8868\u5927\u5c0f\u4e3a\u7d20\u6570\u624d\u80fd\u4fdd\u8bc1\u63d2\u5165\u5143\u7d20\u603b\u80fd\u6210\u529f\u3002 \u2003\u53cc\u6563\u5217\uff0cf(i)=i*hash 2 (i)\u3002 \u2003 \u518d\u6563\u5217 (rehash)\uff0c\u5373\u6269\u5927\u6563\u5217\u8868\u7684\u5927\u5c0f\uff0c\u5c06\u65e7\u8868\u4e2d\u7684\u5143\u7d20\u63d2\u5165\u5230\u65b0\u8868\u4e2d\u3002\u4e00\u822c\u6709\u4e09\u79cd\u7b56\u7565\uff1a\u8868\u6ee1\u4e00\u534a\u5c31rehash\uff1b\u63d2\u5165\u5931\u8d25\u518drehash\uff1b\u88c5\u586b\u56e0\u5b50\u03bb\u8fbe\u5230\u7279\u5b9a\u503c\u5c31rehash\u3002 \u2003\u5b8c\u7f8e\u6563\u5217 \u4f7f\u7528\u4e8c\u7ea7\u6563\u5217\u8868\u4ee3\u66ff\u94fe\u8868\uff0c\u800c\u4e8c\u7ea7\u6563\u5217\u8868\u7684\u5927\u5c0f\u4e0e\u6563\u5217\u5230\u5176\u5bf9\u5e94\u7684hash\u503c\u5f97\u5143\u7d20\u4e2a\u6570N\u6709\u5173\uff0cSecondTableSize=\u03a9(N^2)\uff0c\u4e8c\u7ea7\u6563\u5217\u8868\u7684\u5143\u7d20\u4e2a\u6570\u5c06\u8f83\u4e3b\u6563\u5217\u8868\u5c11\u5f88\u591a\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4fdd\u8bc1\u81f3\u5c11\u67091/2\u6982\u7387\u4e0d\u5b58\u5728\u51b2\u7a81(\u5373\u4e8c\u7ea7\u8868\u7684\u03bb<=0.5)\uff0c\u5982\u679c\u4ecd\u7136\u51b2\u7a81\uff0c\u5219\u76f4\u63a5\u6362\u7528\u65b0\u7684\u6563\u5217\u51fd\u6570\u5bf9\u8be5\u4e8c\u7ea7\u8868\u4e2d\u5143\u7d20\u91cd\u65b0\u63d2\u5165\uff0c\u5c1d\u8bd5\u7684\u671f\u671b\u6b21\u6570\u4e3a2\u3002\u5982\u679c\u6240\u4ea7\u751f\u7684\u51b2\u7a81\u6b21\u6570\u5927\u4e8e\u8981\u6c42\uff0c\u5219\u4e3b\u6563\u5217\u8868\u8fd8\u53ef\u4ee5\u6784\u9020\u591a\u6b21\u3002 \u2003\u675c\u9e43\u6563\u5217 \u4ee5\u4e24\u4e2ahash table\u4e3a\u4f8b\uff1a \u5047\u8bbe\u6709N\u4e2a\u9879\uff0c\u6211\u4eec\u7ef4\u62a4\u4e24\u4e2a\u5206\u522b\u8d85\u8fc7\u534a\u7a7a\u7684\u8868\uff0c\u4e14\u6709\u72ec\u7acb\u7684\u6563\u5217\u51fd\u6570\uff0c\u53ef\u4ee5\u628a\u6bcf\u4e2a\u9879\u5206\u914d\u5230\u6bcf\u4e2a\u8868\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c \u675c\u9e43\u6563\u5217\u4fdd\u6301\u4e0d\u53d8\u7684\u662f\u4e00\u4e2a\u9879\u603b\u662f\u4f1a\u88ab\u5b58\u50a8\u5728\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u4e4b\u4e00\u3002 1\u3001\u4e24\u4e2a\u4f4d\u7f6e\u5747\u4e3a\u7a7a\uff0c\u5219\u4efb\u9009\u4e00\u4e2a\u63d2\u5165\uff1b 2\u3001\u4e24\u4e2a\u4f4d\u7f6e\u4e2d\u4e00\u4e2a\u4e3a\u7a7a\uff0c\u5219\u63d2\u5165\u5230\u7a7a\u7684\u90a3\u4e2a\u4f4d\u7f6e 3\u3001\u4e24\u4e2a\u4f4d\u7f6e\u5747\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8e22\u51fa\u4e00\u4e2a\u4f4d\u7f6e\u540e\u63d2\u5165\uff0c\u88ab\u8e22\u51fa\u7684\u5bf9\u8c03\u7528\u8be5\u7b97\u6cd5\uff0c \u518d\u6267\u884c\u8be5\u7b97\u6cd5\u627e\u5176\u53e6\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5faa\u73af\u76f4\u5230\u63d2\u5165\u6210\u529f\u3002 4\u3001\u5982\u679c\u88ab\u8e22\u51fa\u7684\u6b21\u6570\u8fbe\u5230\u4e00\u5b9a\u7684\u9608\u503c\uff0c\u5219\u8ba4\u4e3ahash\u8868\u5df2\u6ee1\uff0c\u5e76\u8fdb\u884c\u91cd\u65b0\u54c8\u5e0crehash\u3002 \u4f18\u70b9\uff1a \u6700\u574f\u60c5\u51b5\u4e0b\u5e38\u6570\u7ea7\u7684\u67e5\u627e\u548c\u5220\u9664\u65f6\u95f4\u3002 \u907f\u514d\u4e86\u61d2\u60f0\u5220\u9664\u548c\u989d\u5916\u7684\u6570\u636e\u4ee5\u53ca\u5e76\u884c\u5316\u7684\u53ef\u80fd\u6027\u3002 \u7f3a\u70b9\uff1a \u5982\u679c\u6563\u5217\u503c\u4e0d\u597d\uff0c\u5219\u5f88\u5bb9\u6613\u53d1\u751f\u5faa\u73af\uff0c\u5373\u63d2\u5165\u5bfc\u81f4\u6c38\u8fdc\u7684\u5728\u6324\u8d70\u51b2\u7a81\u5143\u7d20\uff0c\u6c38\u8fdc\u90fd\u5728\u51b2\u7a81\u72b6\u6001\u3002 \u4e0d\u8fc7\u53ef\u4ee5\u8bc1\u660e\uff0c\u5982\u679c\u03bb<0.5\uff0c\u5faa\u73af\u7684\u6982\u7387\u662f\u6bd4\u8f83\u5c0f\u7684\u3002 \u2003\u8df3\u623f\u5b50\u6563\u5217 \u7528\u4e8b\u5148\u786e\u5b9a\u7684\uff0c\u5bf9\u8ba1\u7b97\u673a\u5e95\u5c42\u4f53\u7cfb\u7ed3\u6784\u800c\u8a00\u6700\u4f18\u7684\u4e00\u4e2a\u5e38\u6570\uff0c \u7ed9\u63a2\u6d4b\u5e8f\u5217\u7684\u6700\u5927\u957f\u5ea6\u52a0\u4e2a\u4e0a\u754c(\u4f9d\u65e7\u662f\u7ebf\u6027\u63a2\u6d4b)\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u7ed9\u51fa\u5e38\u6570\u7ea7\u7684\u6700\u574f\u67e5\u8be2\u65f6\u95f4\uff0c \u5e76\u4e14\u4e0e\u675c\u9e43\u6563\u5217\u4e00\u6837\uff0c\u67e5\u8be2\u53ef\u4ee5\u5e76\u884c\u5316\uff0c\u4ee5\u540c\u65f6\u68c0\u67e5\u53ef\u7528\u4f4d\u7f6e\u7684\u6709\u9650\u96c6\u3002 \u2003 \u8df3\u623f\u5b50\u6563\u5217\u89c4\u5219\uff1a a\uff09\u4ee5\u6700\u5927\u63a2\u6d4b\u4e0a\u754cMAX_DIST\u200b = 4\u4e3a\u4f8b b\uff09\u6563\u5217\u4f4d\u7f6ehash(x)\uff0c\u5219\u63a2\u6d4b\u4f4d\u7f6e\u4e3a hash(x)+0\u3001hash(x)+1\u3001hash(x)+2\u3001hash(x)+3\u3002 hash(A)=7, hop(7)=1000; //\u8868\u660e\u5f53\u524d\u4f4d\u7f6e\u88ab\u5360\uff1b hash(B)=9, hop(9)=1000; hash(C)=6, hop(6)=1000; \u2003 //\u53d1\u751f\u51b2\u7a81\uff0cD\u5b58\u653e\u5230\u4f4d\u7f6e8\uff0chop(7)=1100\u8868\u793a7\u30018\u88ab\u5360\uff0chop(8)=0000\u8868\u793a\u5c1a\u672a\u6709\u5143\u7d20\u6563\u5217\u503c\u4e3a8 hash(D)=7, hop(7)=1100, hop(8)=0000; //\u53d1\u751f\u51b2\u7a81\uff0c\u4e148\u30019\u5df2\u7ecf\u88ab\u5360\uff0cE\u5b58\u653e\u523010\uff0chop(8)=0010\uff0c\u8868\u793a\u6563\u5217\u503c\u4e3a8\u7684\u5143\u7d20\u5360\u636e10\u53f7\u4f4d\u7f6e hash(E)=8, hop(8)=0010, hop(10)=0000; //\u7ee7\u7eed\u5411\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u63a2\u6d4b\uff0chop(8)=0011, \u6563\u5217\u503c\u4e3a8\u7684\u5143\u7d20\u5360\u636e10\u300111\u53f7\u4f4d\u7f6e hash(F)=8, hop(8)=0011, hop(11)=0000; \u6563\u5217\u7528\u9014 \u7b26\u53f7\u8868\uff1a\u8ddf\u8e2a\u6e90\u4ee3\u7801\u4e2d\u7684\u53d8\u91cf \u9002\u7528\u4e8e\u56fe\u8bba\u95ee\u9898 \u7f6e\u6362\u8868 \u5728\u7ebf\u62fc\u5199\u68c0\u9a8c\u7a0b\u5e8f \u5b9e\u73b0\u9ad8\u901f\u7f13\u51b2\u5b58\u50a8\u533a \u5806 \u2003\u8fd9\u91cc\u7279\u6307\u4e8c\u53c9\u5806\uff0c\u5176\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c \u5982\u679c\u5c06\u6811\u4e2d\u5168\u90e8\u8282\u70b9\u5b58\u6309\u5c42\u5e8f\u904d\u5386\u5b58\u653e\u5728\u6570\u7ec4\u4e0b\u68071\u5f00\u59cb\u7684\u4f4d\u7f6e\uff0c\u5219\u4f4d\u7f6ei\u4e0a\u7684\u8282\u70b9\uff0c\u5176\u5de6\u5b69\u5b50\u4f4d\u4e8e\u6570\u7ec42i\u4f4d\u7f6e\u4e0a\uff0c\u53f3\u5b69\u5b50\u5219\u4f4d\u4e8e2i+1\u4f4d\u7f6e\u4e0a \uff0c\u56e0\u6b64\u5b9e\u9645\u4e2d\u5806\u90fd\u91c7\u7528\u6570\u7ec4\u6765\u5b9e\u73b0\u3002 \u2003\u7528\u4e8c\u53c9\u5806\u6765\u5b9e\u73b0\u4f18\u5148\u961f\u5217\uff0c\u5728\u67e5\u627e\u4e00\u7ec4\u6570\u4e2d\u7b2ck\u4e2a\u6700\u5927/\u5c0f\u6570\u65f6\uff0c\u901a\u8fc7\u4f18\u5148\u961f\u5217\uff0c\u8fdb\u884ck\u6b21\u5220\u9664\u8fd4\u56de\u7ed3\u679c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N+klog N)\u3002 \u5806\u5e8f\u6027\u8d28\uff1a\u5728\u4e00\u4e2a\u5806\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9X(\u6839\u8282\u70b9\u9664\u5916\uff0c\u5b83\u6ca1\u6709\u7236\u4eb2)\uff0cX\u7684\u7236\u4eb2\u7684key\u8981\u5c0f\u4e8e\u7b49\u4e8eX\u4e2d\u7684key\uff0c\u56e0\u6b64\u6700\u5c0f\u5143\u6c38\u8fdc\u5728\u6839\u8282\u70b9\u5904\u3002 \u2003\u63d2\u5165\u548c\u5220\u9664\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u4e3aO(log N) \u2003\u5bf9\u4e00\u7ec4\u6570\u8fdb\u884c\u6784\u5806\u64cd\u4f5c( \u4ece\u7b2ch-1\u5c42\u7684\u6700\u53f3\u4fa7\u8282\u70b9(i=N/2)\u5f00\u59cb\uff0c\u4f9d\u6b64\u5411\u53f3\u5411\u4e0a\u904d\u5386\u8282\u70b9\uff0c\u6267\u884c\u4e0b\u6ee4\u64cd\u4f5c, \u6574\u4e2a\u8fc7\u7a0b\u7684\u4e0a\u754c\u662f\u6bcf\u4e2a\u8282\u70b9\u5230\u5176\u6700\u957f\u53f6\u8282\u70b9\u7684\u8def\u5f84\u548c\uff0c\u4e5f\u5373\u5168\u90e8\u7ed3\u70b9\u7684\u9ad8\u5ea6\u548c )\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(N). \u5e76\u67e5\u96c6(union/find sets) \u2003\u8981\u7528\u4e8e\u89e3\u51b3\u4e00\u4e9b\u5143\u7d20\u5206\u7ec4\u7684\u95ee\u9898\u3002\u5b83\u7ba1\u7406\u4e00\u7cfb\u5217\u4e0d\u76f8\u4ea4\u7684\u96c6\u5408\uff0c\u5e76\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a \u2003\u5408\u5e76\uff08Union\uff09\uff1a\u628a\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u96c6\u5408\u5408\u5e76\u4e3a\u4e00\u4e2a\u96c6\u5408; \u2003\u67e5\u8be2\uff08Find\uff09\uff1a\u67e5\u8be2\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d. \u521d\u59cb\u5316:\u628a\u6bcf\u4e2a\u70b9\u6240\u5728\u96c6\u5408\u521d\u59cb\u5316\u4e3a\u5176\u81ea\u8eab\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u8fd9\u4e2a\u6b65\u9aa4\u5728\u6bcf\u6b21\u4f7f\u7528\u8be5\u6570\u636e\u7ed3\u6784\u65f6\u53ea\u9700\u8981\u6267\u884c\u4e00\u6b21\uff0c\u65e0\u8bba\u4f55\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3aO(N)\u3002 class DisjSets{ private: std::vector<int> father; //\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u521d\u59cb\u8bbe\u4e3a\u5176\u81ea\u8eab std::vector<int> rank; //\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u4f30\u8ba1\u9ad8\u5ea6\uff0c\u56e0\u4e3a\u968f\u7740\u8def\u5f84\u538b\u7f29\uff0c\u6811\u7684\u7ed3\u6784\u53d1\u751f\u6539\u53d8\uff0c\u9ad8\u5ea6\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u521d\u59cb\u503c\u8bbe\u4e3a1 public: explicit DisjSets(int numElements): father(numElements), rank(numElements, 1){ for(int i=0;i<numElements;i++)father[i]=i; } int find(int x); void unionSets(int , int ); }; int DisjSets::find(int x){ //\u5728\u67e5\u8be2\u65f6\u6267\u884c\u8def\u5f84\u538b\u7f29\uff0c\u5373\u8ba9\u6cbf\u9014\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u90fd\u4e3a\u6839\u8282\u70b9 return find(x)==x?x:(father[x]=find(father[x])); } void DisjSets::unionSets(int elem1, int elem2){ int root1=find(elem1), root2=find(elem2); if(root1==root2)return; if(rank[root1] <= rank[root2]) father[root1] = root2; //\u8ba9\u8f83\u6df1\u7684\u6811\u7684\u6839\u8282\u70b9\u6210\u4e3a\u6d45\u6811\u7684\u6839\u7684\u7236\u8282\u70b9\uff0c\u8fd9\u6837\u4e0d\u4f1a\u589e\u52a0\u6574\u68f5\u6811\u7684\u9ad8\u5ea6 else father[root2] = root1; //\u53ea\u6709rank[root1]\u4e0erank[root2]\u76f8\u7b49\u65f6\uff0c\u5408\u5e76\u624d\u4f1a\u589e\u52a0\u6839\u8282\u70b9\u7684\u9ad8\u5ea6\uff0c\u4e14\u6b64\u65f6\u662froot1\u88ab\u5408\u5e76\u5230root2 //\u56e0\u6b64\u53ea\u6709rank[root2]++ if(rank[root1]==rank[root2] && root1!=root2) rank[root2]++; } \u8865\u5145 C++11\u4e2d\u7684\u5bb9\u5668 map\\set: \u901a\u8fc7\u7ea2\u9ed1\u6811\u5b9e\u73b0 unordered_map\\unordered_set\u901a\u8fc7\u6563\u5217\u8868\u5b9e\u73b0 \u6839\u636e\u9012\u5f52\u65b9\u7a0b\u4f30\u8ba1\u65f6\u95f4\u590d\u6742\u5ea6 \u4f4d\u8fd0\u7b97: \u2003\u628a\u4e00\u4e2a\u6574\u6570\u51cf\u53bb1\u4e4b\u540e\u518d\u548c\u539f\u6765\u7684\u6574\u6570\u505a\u6309\u4f4d\u4e0e\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u76f8\u5f53\u4e8e\u628a\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6700\u53f3\u8fb9\u76841\u53d8\u62100\uff0c\u800c\u5176\u4f59\u4f4d\u4e0d\u53d8\u3002\u4f8b\u5982: 1100b & 1011b = 1000b \u2003 n>0, n&=~(n-1); //\u5f97\u5230\u7684n\u9664\u4e86\u53f3\u4fa7\u7b2c\u4e00\u4e2a1\u4e4b\u5916\uff0c\u90fd\u53d8\u4e3a0\uff0c n=23 = 00..10111b, ~(n-1)=11..01001b, \u5219n&=~(n-1) = 00..00001b \u2003 \u53d6\u4f59\u8fd0\u7b97\u5bf9\u4e8e\u52a0\u51cf\u4e58\u9664\u5747\u6ee1\u8db3\u5206\u914d\u5f8b \u5224\u65ad\u4e24\u4e2a\u6d6e\u70b9\u6570\u662f\u5426\u76f8\u7b49: \u7531\u4e8e\u5b58\u5728\u7cbe\u5ea6\u8bef\u5dee\uff0c\u4e0d\u80fd\u4f7f\u7528\"==\"\u6765\u5224\u65ad\u4e24\u4e2a\u6d6e\u70b9\u6570\u662f\u5426\u76f8\u7b49\uff1b\u53ef\u4ee5\u5224\u65ad\u4e24\u4e2a\u6570\u4e4b\u95f4\u7684\u5dee\u503c\u662f\u5426\u5c0f\u4e8e\u4e00\u4e2a\u6bd4\u8f83\u5c0f\u7684\u6570\uff0c\u59821e-6\u62161e-7\u3002 Linux\u5185\u6838\u4e2d\u7684\u6570\u636e\u7ed3\u6784 \u94fe\u8868: linux\u5185\u6838\u4e2d\u7684\u6807\u51c6\u94fe\u8868\u91c7\u7528\u73af\u5f62\u53cc\u5411\u94fe\u8868\uff0c\u5177\u4f53\u5b9e\u73b0\u4e3a: struct list_head{ struct list_head* prev; struct list_head* next; }; \u2003\u5bf9\u4e8e\u5176\u4ed6\u81ea\u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\uff0c\u901a\u8fc7\u6dfb\u52a0struct list_head\u7c7b\u578b\u7684\u6210\u5458\uff0c\u4ece\u800c\u83b7\u5f97\u6307\u5411\u524d\u540e\u5143\u7d20\u7684\u6307\u9488\u3002\u5e76\u4e14\u4e3a\u4e86\u901a\u8fc7\u94fe\u8868\u6307\u9488\u627e\u5230\u7236\u7ed3\u6784\u4e2d\u5305\u542b\u7684\u4efb\u4f55\u53d8\u91cf\uff0clinux\u5b9a\u4e49\u4e86container_of\u5b8f\uff0c\u5176\u53ef\u4ee5\u4ece\u7ed3\u6784\u4f53\u6210\u5458\u83b7\u53d6\u7ed3\u6784\u4f53\u7684\u5730\u5740\uff0c\u56e0\u4e3a\u5728C\u8bed\u8a00\u4e2d\uff0c\u4e00\u4e2a\u7ed9\u5b9a\u7ed3\u6784\u4e2d\u7684\u53d8\u91cf\u504f\u79fb\u5728\u7f16\u8bd1\u65f6\u5730\u5740\u5c31\u88abABI\u56fa\u5b9a\u4e0b\u6765\uff0c\u8fd9\u4e2a\u504f\u79fb\u53ef\u4ee5\u901a\u8fc7offsetof\u83b7\u5f97\u3002 #define offsetof(TYPE, MEMBER) ((size_t) &((TYPE *)0)->MEMBER) #define container_of(ptr, type, member) ({ \\ const typeof( ( (type*)0)->member )* __mptr=(ptr); \\ (type*) ( (char*)_mptr - offsetof(type, member) );}) \\ #define list_entry(ptr, type, member)\\ container_of(ptr, type, member) \u2003ptr\uff08type\u7684\u6210\u5458\u7684\u5730\u5740\uff09\uff0ctype\uff08\u7ed3\u6784\u4f53\u7c7b\u578b\uff09\uff0cmember\uff08\u6210\u5458\u7684\u540d\u79f0)\uff1b \u2003offsetof\u628a0\u5730\u5740\u5f3a\u5236\u8f6c\u5316\u6210\u4e86TYPE*\u7c7b\u578b\uff0c\u7136\u540e\u5c06\u5b83\u7684MEMBER\u6210\u5458\u7684\u5730\u5740\u8f6c\u5316\u4e3asize_t\u7c7b\u578b\u3002\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u4e3aTYPE\u7684\u7ed3 \u6784\u4f53\u5730\u5740\u4ece0\u5f00\u59cb\uff0c\u90a3\u4e48\u5b83\u7684MEMBER\u6210\u5458\u7684\u5730\u5740\u5c31\u662fMEMBER\u6210\u5458\u4e0eTYPE\u7c7b\u578b\u5730\u5740\u4e4b\u95f4\u7684\u76f8\u5bf9\u504f\u79fb\u91cf\uff08\u4ee5char\u8ba1\u6570\u7684\uff09\uff1b \u2003container_of\u5b9a\u4e49\u4e2d\u7b2c\u4e00\u884c\u901a\u8fc7typeof\u53d6\u5f97member\u7684\u7c7b\u578b\uff0c\u7136\u540e__mptr\u662fmember\u7c7b\u578b\u7684\u6307\u5411ptr\u5730\u5740\u7684\u5e38\u91cf\u6307\u9488\uff0c\u8fd9\u91cc\u7684\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u5bf9ptr\u4e0emember\u505a\u7c7b\u578b\u68c0\u67e5,\u5982\u679c\u7528typeof\u6c42\u51fa\u6765\u7684\u7c7b\u578b\u548cptr\u4e0d\u4e00\u81f4\uff0c\u90a3\u4e48\u5728\u8d4b\u503c\u64cd\u4f5c\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\uff1b \u2003\u7b2c\u4e8c\u884c\uff0c\u5728\u53d6\u5f97\u4e86member\u7684\u5730\u5740\u4e4b\u540e\uff0c\u53ea\u8981\u628a\u5b83\u51cf\u53bbmember\u76f8\u5bf9\u4e8e\u7ed3\u6784\u4f53\u7684\u504f\u79fb\u91cf\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u7ed3\u6784\u4f53\u7684\u5730\u5740\u4e86\u3002\u6700\u540e\uff0c\u518d\u628a\u8fd9\u4e2a\u5730\u5740\u8f6c\u5316\u6210type*\uff0c\u5c31\u5b8c\u6210\u4e86\u6574\u4e2a\u903b\u8f91\u3002 \u2003\u4f9d\u9760list_entry\u65b9\u6cd5\uff0c\u5185\u6838\u63d0\u4f9b\u4e86\u521b\u5efa\u3001\u64cd\u4f5c\u7b49\u7ba1\u7406\u94fe\u8868\u7684\u5404\u79cd\u65b9\u6cd5\uff0c\u800c\u8fd9\u4e9b\u65b9\u6cd5\u5e76\u4e0d\u9700\u77e5\u9053list_head\u6240\u5d4c\u5165\u5bf9\u8c61\u7684\u6570\u636e\u7ed3\u6784\u3002","title":"Others"},{"location":"DataStruct/OtherStruct/#_1","text":"","title":"\u5176\u4ed6\u6570\u636e\u7ed3\u6784\u4ee5\u53ca\u8865\u5145"},{"location":"DataStruct/OtherStruct/#_2","text":"\u662f\u6839\u636e\u952e\uff08Key\uff09\u800c\u76f4\u63a5\u8bbf\u95ee\u5728\u5185\u5b58\u5b58\u50a8\u4f4d\u7f6e\u7684\u6570\u636e\u7ed3\u6784\u3002\u5b83\u901a\u8fc7\u8ba1\u7b97\u4e00\u4e2a\u5173\u4e8e\u952e\u503c\u7684\u51fd\u6570(\u6563\u5217\u51fd\u6570)\uff0c\u5c06\u6240\u9700\u67e5\u8be2\u7684\u6570\u636e\u6620\u5c04\u5230\u8868\u4e2d\u4e00\u4e2a\u4f4d\u7f6e\u6765\u8bbf\u95ee\u8bb0\u5f55\uff1b\u6563\u5217(hashing)\u662f\u4e00\u79cd\u4ee5\u5e38\u6570\u5e73\u5747\u65f6\u95f4\u6267\u884c\u63d2\u5165\u3001\u5220\u9664\u548c\u67e5\u627e\u7684\u6280\u672f\u3002 \u2003\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u63d2\u5165\u65f6\u4e0e\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u5143\u7d20\u6563\u5217\u5230\u76f8\u540c\u7684\u503c\u65f6\uff0c\u5219\u4ea7\u751f\u4e86\u4e00\u4e2a \u51b2\u7a81 \uff0c\u6709\u4e24\u79cd\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6cd5: \u5206\u79bb\u94fe\u63a5\u6cd5\u548c\u5f00\u653e\u5b9a\u5740\u6cd5\u3002 \u5206\u79bb\u94fe\u63a5\u6cd5 : \u5c06\u6563\u5217\u5230\u540c\u4e00\u4e2a\u503c\u5f97\u6240\u6709\u5143\u7d20\u4fdd\u7559\u5230\u4e00\u4e2a\u94fe\u8868\u4e2d\uff0c\u65b0\u5143\u7d20\u4e00\u822c\u88ab\u63d2\u5165\u5230\u94fe\u8868\u7684\u524d\u7aef\uff0c\u56e0\u4e3a\u65b0\u8fd1\u63d2\u5165\u7684\u5143\u7d20\u6700\u6709\u53ef\u80fd\u4e0d\u4e45\u88ab\u8bbf\u95ee\u3002 \u88c5\u586b\u56e0\u5b50: \u6563\u5217\u8868\u7684\u5143\u7d20\u4e2a\u6570\u5bf9\u6563\u5217\u8868\u5927\u5c0f\u7684\u6bd4\u503c\u03bb\u3002 \u6267\u884c\u4e00\u6b21\u67e5\u627e\u7684\u8bc4\u4ef7\u4ee3\u4ef7\u4e3a1+\u03bb/2\uff1b\u5206\u79bb\u94fe\u63a5\u6563\u5217\u6cd5\u7684\u4e00\u822c\u6cd5\u5219\u662f\u8ba9\u8868\u7684\u5927\u5c0f\u4e0e\u9884\u6599\u7684\u5143\u7d20\u4e2a\u6570\u4e00\u81f4\uff0c\u5373\u03bb\u22481\uff0c\u5f53\u03bb\u8d85\u8fc71\u65f6\uff0c\u5c31\u6269\u5927\u6563\u5217\u8868\u7684\u5927\u5c0f\u3002 \u5f00\u653e\u5b9a\u5740\u6cd5 \uff1a\u91c7\u7528\u63a2\u6d4b\u6563\u5217\u8868\uff0c\u4e00\u79cd\u4e0d\u91c7\u7528\u94fe\u8868\u7684\u6563\u5217\u8868\uff0c\u5bf9\u4e8e\u51b2\u7a81\u7684\u5143\u7d20\u5c1d\u8bd5\u53e6\u5916\u7684\u5355\u5143(h i (x)=(hash(x)+f(i))mod TableSize, f\u662f\u51b2\u7a81\u89e3\u51b3\u65b9\u6848)\uff0c\u8fd9\u79cd\u5f62\u5f0f\u7684\u8868\u8981\u6bd4\u5206\u79bb\u94fe\u63a5\u6cd5\u9700\u8981\u7684\u8868\u66f4\u5927\uff0c\u8981\u6c42\u03bb\u5c0f\u4e8e0.5\u3002 \u2003\u5e38\u89c1\u51b2\u7a81\u89e3\u51b3\u5305\u62ec\u7ebf\u6027\u63a2\u6d4b\u6cd5(f\u662fi\u7684\u7ebf\u6027\u51fd\u6570, eg.f(i)=i)\u3001\u5e73\u65b9\u63a2\u6d4b\u6cd5\u548c\u53cc\u6563\u5217\u3002 \u2003\u5bf9\u4e8ef(i)=i\u7684\u7ebf\u6027\u63a2\u6d4b\uff0c\u76f8\u5f53\u4e8e\u76f8\u7ee7\u63a2\u6d4b\u9010\u4e2a\u5355\u5143(\u53ef\u4ee5\u5faa\u73af)\u4ee5\u627e\u5230\u7b2c\u4e00\u4e2a\u7a7a\u5355\u5143\uff1b\u7531\u4e8e\u5b9e\u73b0\u7b80\u5355\uff0c\u5177\u6709\u826f\u597d\u7684\u5c40\u90e8\u6027\uff0c\u5728\u786c\u4ef6\u4e0a\u7684\u6807\u51c6\u5b9e\u73b0\u4e2d\u5341\u5206\u6d41\u884c; \u4f46\u67d0\u79cd\u60c5\u51b5\u4e0b\uff0c\u51b2\u7a81\u9020\u6210\u5143\u7d20\u5360\u636e\u7684\u4f4d\u7f6e\u5f62\u6210\u533a\u5757\uff0c\u5373\u4e00\u6b21\u805a\u96c6\uff0c\u5bfc\u81f4\u6563\u5217\u5230\u533a\u5757\u4e2d\u7684\u4efb\u4f55\u5173\u952e\u5b57\u90fd\u9700\u8981\u591a\u6b21\u63a2\u6d4b\u5355\u5143\u624d\u80fd\u89e3\u51b3\u51b2\u7a81\u3002 \u2003\u5e73\u65b9\u63a2\u6d4b\uff0cf(i)=i^2, \u4f1a\u5f15\u8d77\u4e8c\u6b21\u805a\u96c6(\u6563\u5217\u5230\u540c\u4e00\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u5c06\u63a2\u6d4b\u76f8\u540c\u7684\u5907\u9009\u4f4d\u7f6e)\uff0c\u88c5\u586b\u56e0\u5b50\u4e0d\u80fd\u5927\u4e8e0.5\uff0c\u5373\u81f3\u5c11\u6709\u4e00\u534a\u4e3a\u7a7a\u4e14\u8868\u5927\u5c0f\u4e3a\u7d20\u6570\u624d\u80fd\u4fdd\u8bc1\u63d2\u5165\u5143\u7d20\u603b\u80fd\u6210\u529f\u3002 \u2003\u53cc\u6563\u5217\uff0cf(i)=i*hash 2 (i)\u3002 \u2003 \u518d\u6563\u5217 (rehash)\uff0c\u5373\u6269\u5927\u6563\u5217\u8868\u7684\u5927\u5c0f\uff0c\u5c06\u65e7\u8868\u4e2d\u7684\u5143\u7d20\u63d2\u5165\u5230\u65b0\u8868\u4e2d\u3002\u4e00\u822c\u6709\u4e09\u79cd\u7b56\u7565\uff1a\u8868\u6ee1\u4e00\u534a\u5c31rehash\uff1b\u63d2\u5165\u5931\u8d25\u518drehash\uff1b\u88c5\u586b\u56e0\u5b50\u03bb\u8fbe\u5230\u7279\u5b9a\u503c\u5c31rehash\u3002 \u2003\u5b8c\u7f8e\u6563\u5217 \u4f7f\u7528\u4e8c\u7ea7\u6563\u5217\u8868\u4ee3\u66ff\u94fe\u8868\uff0c\u800c\u4e8c\u7ea7\u6563\u5217\u8868\u7684\u5927\u5c0f\u4e0e\u6563\u5217\u5230\u5176\u5bf9\u5e94\u7684hash\u503c\u5f97\u5143\u7d20\u4e2a\u6570N\u6709\u5173\uff0cSecondTableSize=\u03a9(N^2)\uff0c\u4e8c\u7ea7\u6563\u5217\u8868\u7684\u5143\u7d20\u4e2a\u6570\u5c06\u8f83\u4e3b\u6563\u5217\u8868\u5c11\u5f88\u591a\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4fdd\u8bc1\u81f3\u5c11\u67091/2\u6982\u7387\u4e0d\u5b58\u5728\u51b2\u7a81(\u5373\u4e8c\u7ea7\u8868\u7684\u03bb<=0.5)\uff0c\u5982\u679c\u4ecd\u7136\u51b2\u7a81\uff0c\u5219\u76f4\u63a5\u6362\u7528\u65b0\u7684\u6563\u5217\u51fd\u6570\u5bf9\u8be5\u4e8c\u7ea7\u8868\u4e2d\u5143\u7d20\u91cd\u65b0\u63d2\u5165\uff0c\u5c1d\u8bd5\u7684\u671f\u671b\u6b21\u6570\u4e3a2\u3002\u5982\u679c\u6240\u4ea7\u751f\u7684\u51b2\u7a81\u6b21\u6570\u5927\u4e8e\u8981\u6c42\uff0c\u5219\u4e3b\u6563\u5217\u8868\u8fd8\u53ef\u4ee5\u6784\u9020\u591a\u6b21\u3002 \u2003\u675c\u9e43\u6563\u5217 \u4ee5\u4e24\u4e2ahash table\u4e3a\u4f8b\uff1a \u5047\u8bbe\u6709N\u4e2a\u9879\uff0c\u6211\u4eec\u7ef4\u62a4\u4e24\u4e2a\u5206\u522b\u8d85\u8fc7\u534a\u7a7a\u7684\u8868\uff0c\u4e14\u6709\u72ec\u7acb\u7684\u6563\u5217\u51fd\u6570\uff0c\u53ef\u4ee5\u628a\u6bcf\u4e2a\u9879\u5206\u914d\u5230\u6bcf\u4e2a\u8868\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\uff0c \u675c\u9e43\u6563\u5217\u4fdd\u6301\u4e0d\u53d8\u7684\u662f\u4e00\u4e2a\u9879\u603b\u662f\u4f1a\u88ab\u5b58\u50a8\u5728\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u4e4b\u4e00\u3002 1\u3001\u4e24\u4e2a\u4f4d\u7f6e\u5747\u4e3a\u7a7a\uff0c\u5219\u4efb\u9009\u4e00\u4e2a\u63d2\u5165\uff1b 2\u3001\u4e24\u4e2a\u4f4d\u7f6e\u4e2d\u4e00\u4e2a\u4e3a\u7a7a\uff0c\u5219\u63d2\u5165\u5230\u7a7a\u7684\u90a3\u4e2a\u4f4d\u7f6e 3\u3001\u4e24\u4e2a\u4f4d\u7f6e\u5747\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8e22\u51fa\u4e00\u4e2a\u4f4d\u7f6e\u540e\u63d2\u5165\uff0c\u88ab\u8e22\u51fa\u7684\u5bf9\u8c03\u7528\u8be5\u7b97\u6cd5\uff0c \u518d\u6267\u884c\u8be5\u7b97\u6cd5\u627e\u5176\u53e6\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5faa\u73af\u76f4\u5230\u63d2\u5165\u6210\u529f\u3002 4\u3001\u5982\u679c\u88ab\u8e22\u51fa\u7684\u6b21\u6570\u8fbe\u5230\u4e00\u5b9a\u7684\u9608\u503c\uff0c\u5219\u8ba4\u4e3ahash\u8868\u5df2\u6ee1\uff0c\u5e76\u8fdb\u884c\u91cd\u65b0\u54c8\u5e0crehash\u3002 \u4f18\u70b9\uff1a \u6700\u574f\u60c5\u51b5\u4e0b\u5e38\u6570\u7ea7\u7684\u67e5\u627e\u548c\u5220\u9664\u65f6\u95f4\u3002 \u907f\u514d\u4e86\u61d2\u60f0\u5220\u9664\u548c\u989d\u5916\u7684\u6570\u636e\u4ee5\u53ca\u5e76\u884c\u5316\u7684\u53ef\u80fd\u6027\u3002 \u7f3a\u70b9\uff1a \u5982\u679c\u6563\u5217\u503c\u4e0d\u597d\uff0c\u5219\u5f88\u5bb9\u6613\u53d1\u751f\u5faa\u73af\uff0c\u5373\u63d2\u5165\u5bfc\u81f4\u6c38\u8fdc\u7684\u5728\u6324\u8d70\u51b2\u7a81\u5143\u7d20\uff0c\u6c38\u8fdc\u90fd\u5728\u51b2\u7a81\u72b6\u6001\u3002 \u4e0d\u8fc7\u53ef\u4ee5\u8bc1\u660e\uff0c\u5982\u679c\u03bb<0.5\uff0c\u5faa\u73af\u7684\u6982\u7387\u662f\u6bd4\u8f83\u5c0f\u7684\u3002 \u2003\u8df3\u623f\u5b50\u6563\u5217 \u7528\u4e8b\u5148\u786e\u5b9a\u7684\uff0c\u5bf9\u8ba1\u7b97\u673a\u5e95\u5c42\u4f53\u7cfb\u7ed3\u6784\u800c\u8a00\u6700\u4f18\u7684\u4e00\u4e2a\u5e38\u6570\uff0c \u7ed9\u63a2\u6d4b\u5e8f\u5217\u7684\u6700\u5927\u957f\u5ea6\u52a0\u4e2a\u4e0a\u754c(\u4f9d\u65e7\u662f\u7ebf\u6027\u63a2\u6d4b)\u3002\u8fd9\u6837\u505a\u53ef\u4ee5\u7ed9\u51fa\u5e38\u6570\u7ea7\u7684\u6700\u574f\u67e5\u8be2\u65f6\u95f4\uff0c \u5e76\u4e14\u4e0e\u675c\u9e43\u6563\u5217\u4e00\u6837\uff0c\u67e5\u8be2\u53ef\u4ee5\u5e76\u884c\u5316\uff0c\u4ee5\u540c\u65f6\u68c0\u67e5\u53ef\u7528\u4f4d\u7f6e\u7684\u6709\u9650\u96c6\u3002 \u2003 \u8df3\u623f\u5b50\u6563\u5217\u89c4\u5219\uff1a a\uff09\u4ee5\u6700\u5927\u63a2\u6d4b\u4e0a\u754cMAX_DIST\u200b = 4\u4e3a\u4f8b b\uff09\u6563\u5217\u4f4d\u7f6ehash(x)\uff0c\u5219\u63a2\u6d4b\u4f4d\u7f6e\u4e3a hash(x)+0\u3001hash(x)+1\u3001hash(x)+2\u3001hash(x)+3\u3002 hash(A)=7, hop(7)=1000; //\u8868\u660e\u5f53\u524d\u4f4d\u7f6e\u88ab\u5360\uff1b hash(B)=9, hop(9)=1000; hash(C)=6, hop(6)=1000; \u2003 //\u53d1\u751f\u51b2\u7a81\uff0cD\u5b58\u653e\u5230\u4f4d\u7f6e8\uff0chop(7)=1100\u8868\u793a7\u30018\u88ab\u5360\uff0chop(8)=0000\u8868\u793a\u5c1a\u672a\u6709\u5143\u7d20\u6563\u5217\u503c\u4e3a8 hash(D)=7, hop(7)=1100, hop(8)=0000; //\u53d1\u751f\u51b2\u7a81\uff0c\u4e148\u30019\u5df2\u7ecf\u88ab\u5360\uff0cE\u5b58\u653e\u523010\uff0chop(8)=0010\uff0c\u8868\u793a\u6563\u5217\u503c\u4e3a8\u7684\u5143\u7d20\u5360\u636e10\u53f7\u4f4d\u7f6e hash(E)=8, hop(8)=0010, hop(10)=0000; //\u7ee7\u7eed\u5411\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u63a2\u6d4b\uff0chop(8)=0011, \u6563\u5217\u503c\u4e3a8\u7684\u5143\u7d20\u5360\u636e10\u300111\u53f7\u4f4d\u7f6e hash(F)=8, hop(8)=0011, hop(11)=0000; \u6563\u5217\u7528\u9014 \u7b26\u53f7\u8868\uff1a\u8ddf\u8e2a\u6e90\u4ee3\u7801\u4e2d\u7684\u53d8\u91cf \u9002\u7528\u4e8e\u56fe\u8bba\u95ee\u9898 \u7f6e\u6362\u8868 \u5728\u7ebf\u62fc\u5199\u68c0\u9a8c\u7a0b\u5e8f \u5b9e\u73b0\u9ad8\u901f\u7f13\u51b2\u5b58\u50a8\u533a","title":"\u6563\u5217"},{"location":"DataStruct/OtherStruct/#_3","text":"\u8fd9\u91cc\u7279\u6307\u4e8c\u53c9\u5806\uff0c\u5176\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c \u5982\u679c\u5c06\u6811\u4e2d\u5168\u90e8\u8282\u70b9\u5b58\u6309\u5c42\u5e8f\u904d\u5386\u5b58\u653e\u5728\u6570\u7ec4\u4e0b\u68071\u5f00\u59cb\u7684\u4f4d\u7f6e\uff0c\u5219\u4f4d\u7f6ei\u4e0a\u7684\u8282\u70b9\uff0c\u5176\u5de6\u5b69\u5b50\u4f4d\u4e8e\u6570\u7ec42i\u4f4d\u7f6e\u4e0a\uff0c\u53f3\u5b69\u5b50\u5219\u4f4d\u4e8e2i+1\u4f4d\u7f6e\u4e0a \uff0c\u56e0\u6b64\u5b9e\u9645\u4e2d\u5806\u90fd\u91c7\u7528\u6570\u7ec4\u6765\u5b9e\u73b0\u3002 \u2003\u7528\u4e8c\u53c9\u5806\u6765\u5b9e\u73b0\u4f18\u5148\u961f\u5217\uff0c\u5728\u67e5\u627e\u4e00\u7ec4\u6570\u4e2d\u7b2ck\u4e2a\u6700\u5927/\u5c0f\u6570\u65f6\uff0c\u901a\u8fc7\u4f18\u5148\u961f\u5217\uff0c\u8fdb\u884ck\u6b21\u5220\u9664\u8fd4\u56de\u7ed3\u679c\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N+klog N)\u3002 \u5806\u5e8f\u6027\u8d28\uff1a\u5728\u4e00\u4e2a\u5806\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9X(\u6839\u8282\u70b9\u9664\u5916\uff0c\u5b83\u6ca1\u6709\u7236\u4eb2)\uff0cX\u7684\u7236\u4eb2\u7684key\u8981\u5c0f\u4e8e\u7b49\u4e8eX\u4e2d\u7684key\uff0c\u56e0\u6b64\u6700\u5c0f\u5143\u6c38\u8fdc\u5728\u6839\u8282\u70b9\u5904\u3002 \u2003\u63d2\u5165\u548c\u5220\u9664\u7684\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u90fd\u4e3aO(log N) \u2003\u5bf9\u4e00\u7ec4\u6570\u8fdb\u884c\u6784\u5806\u64cd\u4f5c( \u4ece\u7b2ch-1\u5c42\u7684\u6700\u53f3\u4fa7\u8282\u70b9(i=N/2)\u5f00\u59cb\uff0c\u4f9d\u6b64\u5411\u53f3\u5411\u4e0a\u904d\u5386\u8282\u70b9\uff0c\u6267\u884c\u4e0b\u6ee4\u64cd\u4f5c, \u6574\u4e2a\u8fc7\u7a0b\u7684\u4e0a\u754c\u662f\u6bcf\u4e2a\u8282\u70b9\u5230\u5176\u6700\u957f\u53f6\u8282\u70b9\u7684\u8def\u5f84\u548c\uff0c\u4e5f\u5373\u5168\u90e8\u7ed3\u70b9\u7684\u9ad8\u5ea6\u548c )\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(N).","title":"\u5806"},{"location":"DataStruct/OtherStruct/#unionfind-sets","text":"\u8981\u7528\u4e8e\u89e3\u51b3\u4e00\u4e9b\u5143\u7d20\u5206\u7ec4\u7684\u95ee\u9898\u3002\u5b83\u7ba1\u7406\u4e00\u7cfb\u5217\u4e0d\u76f8\u4ea4\u7684\u96c6\u5408\uff0c\u5e76\u652f\u6301\u4e24\u79cd\u64cd\u4f5c\uff1a \u2003\u5408\u5e76\uff08Union\uff09\uff1a\u628a\u4e24\u4e2a\u4e0d\u76f8\u4ea4\u7684\u96c6\u5408\u5408\u5e76\u4e3a\u4e00\u4e2a\u96c6\u5408; \u2003\u67e5\u8be2\uff08Find\uff09\uff1a\u67e5\u8be2\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d. \u521d\u59cb\u5316:\u628a\u6bcf\u4e2a\u70b9\u6240\u5728\u96c6\u5408\u521d\u59cb\u5316\u4e3a\u5176\u81ea\u8eab\u3002\u901a\u5e38\u6765\u8bf4\uff0c\u8fd9\u4e2a\u6b65\u9aa4\u5728\u6bcf\u6b21\u4f7f\u7528\u8be5\u6570\u636e\u7ed3\u6784\u65f6\u53ea\u9700\u8981\u6267\u884c\u4e00\u6b21\uff0c\u65e0\u8bba\u4f55\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3aO(N)\u3002 class DisjSets{ private: std::vector<int> father; //\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u521d\u59cb\u8bbe\u4e3a\u5176\u81ea\u8eab std::vector<int> rank; //\u5b58\u50a8\u6bcf\u4e2a\u8282\u70b9\u7684\u4f30\u8ba1\u9ad8\u5ea6\uff0c\u56e0\u4e3a\u968f\u7740\u8def\u5f84\u538b\u7f29\uff0c\u6811\u7684\u7ed3\u6784\u53d1\u751f\u6539\u53d8\uff0c\u9ad8\u5ea6\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u521d\u59cb\u503c\u8bbe\u4e3a1 public: explicit DisjSets(int numElements): father(numElements), rank(numElements, 1){ for(int i=0;i<numElements;i++)father[i]=i; } int find(int x); void unionSets(int , int ); }; int DisjSets::find(int x){ //\u5728\u67e5\u8be2\u65f6\u6267\u884c\u8def\u5f84\u538b\u7f29\uff0c\u5373\u8ba9\u6cbf\u9014\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u90fd\u4e3a\u6839\u8282\u70b9 return find(x)==x?x:(father[x]=find(father[x])); } void DisjSets::unionSets(int elem1, int elem2){ int root1=find(elem1), root2=find(elem2); if(root1==root2)return; if(rank[root1] <= rank[root2]) father[root1] = root2; //\u8ba9\u8f83\u6df1\u7684\u6811\u7684\u6839\u8282\u70b9\u6210\u4e3a\u6d45\u6811\u7684\u6839\u7684\u7236\u8282\u70b9\uff0c\u8fd9\u6837\u4e0d\u4f1a\u589e\u52a0\u6574\u68f5\u6811\u7684\u9ad8\u5ea6 else father[root2] = root1; //\u53ea\u6709rank[root1]\u4e0erank[root2]\u76f8\u7b49\u65f6\uff0c\u5408\u5e76\u624d\u4f1a\u589e\u52a0\u6839\u8282\u70b9\u7684\u9ad8\u5ea6\uff0c\u4e14\u6b64\u65f6\u662froot1\u88ab\u5408\u5e76\u5230root2 //\u56e0\u6b64\u53ea\u6709rank[root2]++ if(rank[root1]==rank[root2] && root1!=root2) rank[root2]++; }","title":"\u5e76\u67e5\u96c6(union/find sets)"},{"location":"DataStruct/OtherStruct/#_4","text":"","title":"\u8865\u5145"},{"location":"DataStruct/OtherStruct/#c11","text":"map\\set: \u901a\u8fc7\u7ea2\u9ed1\u6811\u5b9e\u73b0 unordered_map\\unordered_set\u901a\u8fc7\u6563\u5217\u8868\u5b9e\u73b0 \u6839\u636e\u9012\u5f52\u65b9\u7a0b\u4f30\u8ba1\u65f6\u95f4\u590d\u6742\u5ea6 \u4f4d\u8fd0\u7b97: \u2003\u628a\u4e00\u4e2a\u6574\u6570\u51cf\u53bb1\u4e4b\u540e\u518d\u548c\u539f\u6765\u7684\u6574\u6570\u505a\u6309\u4f4d\u4e0e\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u76f8\u5f53\u4e8e\u628a\u6574\u6570\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u4e2d\u6700\u53f3\u8fb9\u76841\u53d8\u62100\uff0c\u800c\u5176\u4f59\u4f4d\u4e0d\u53d8\u3002\u4f8b\u5982: 1100b & 1011b = 1000b \u2003 n>0, n&=~(n-1); //\u5f97\u5230\u7684n\u9664\u4e86\u53f3\u4fa7\u7b2c\u4e00\u4e2a1\u4e4b\u5916\uff0c\u90fd\u53d8\u4e3a0\uff0c n=23 = 00..10111b, ~(n-1)=11..01001b, \u5219n&=~(n-1) = 00..00001b \u2003 \u53d6\u4f59\u8fd0\u7b97\u5bf9\u4e8e\u52a0\u51cf\u4e58\u9664\u5747\u6ee1\u8db3\u5206\u914d\u5f8b \u5224\u65ad\u4e24\u4e2a\u6d6e\u70b9\u6570\u662f\u5426\u76f8\u7b49: \u7531\u4e8e\u5b58\u5728\u7cbe\u5ea6\u8bef\u5dee\uff0c\u4e0d\u80fd\u4f7f\u7528\"==\"\u6765\u5224\u65ad\u4e24\u4e2a\u6d6e\u70b9\u6570\u662f\u5426\u76f8\u7b49\uff1b\u53ef\u4ee5\u5224\u65ad\u4e24\u4e2a\u6570\u4e4b\u95f4\u7684\u5dee\u503c\u662f\u5426\u5c0f\u4e8e\u4e00\u4e2a\u6bd4\u8f83\u5c0f\u7684\u6570\uff0c\u59821e-6\u62161e-7\u3002","title":"C++11\u4e2d\u7684\u5bb9\u5668"},{"location":"DataStruct/OtherStruct/#linux","text":"\u94fe\u8868: linux\u5185\u6838\u4e2d\u7684\u6807\u51c6\u94fe\u8868\u91c7\u7528\u73af\u5f62\u53cc\u5411\u94fe\u8868\uff0c\u5177\u4f53\u5b9e\u73b0\u4e3a: struct list_head{ struct list_head* prev; struct list_head* next; }; \u2003\u5bf9\u4e8e\u5176\u4ed6\u81ea\u5b9a\u4e49\u7684\u7ed3\u6784\u4f53\uff0c\u901a\u8fc7\u6dfb\u52a0struct list_head\u7c7b\u578b\u7684\u6210\u5458\uff0c\u4ece\u800c\u83b7\u5f97\u6307\u5411\u524d\u540e\u5143\u7d20\u7684\u6307\u9488\u3002\u5e76\u4e14\u4e3a\u4e86\u901a\u8fc7\u94fe\u8868\u6307\u9488\u627e\u5230\u7236\u7ed3\u6784\u4e2d\u5305\u542b\u7684\u4efb\u4f55\u53d8\u91cf\uff0clinux\u5b9a\u4e49\u4e86container_of\u5b8f\uff0c\u5176\u53ef\u4ee5\u4ece\u7ed3\u6784\u4f53\u6210\u5458\u83b7\u53d6\u7ed3\u6784\u4f53\u7684\u5730\u5740\uff0c\u56e0\u4e3a\u5728C\u8bed\u8a00\u4e2d\uff0c\u4e00\u4e2a\u7ed9\u5b9a\u7ed3\u6784\u4e2d\u7684\u53d8\u91cf\u504f\u79fb\u5728\u7f16\u8bd1\u65f6\u5730\u5740\u5c31\u88abABI\u56fa\u5b9a\u4e0b\u6765\uff0c\u8fd9\u4e2a\u504f\u79fb\u53ef\u4ee5\u901a\u8fc7offsetof\u83b7\u5f97\u3002 #define offsetof(TYPE, MEMBER) ((size_t) &((TYPE *)0)->MEMBER) #define container_of(ptr, type, member) ({ \\ const typeof( ( (type*)0)->member )* __mptr=(ptr); \\ (type*) ( (char*)_mptr - offsetof(type, member) );}) \\ #define list_entry(ptr, type, member)\\ container_of(ptr, type, member) \u2003ptr\uff08type\u7684\u6210\u5458\u7684\u5730\u5740\uff09\uff0ctype\uff08\u7ed3\u6784\u4f53\u7c7b\u578b\uff09\uff0cmember\uff08\u6210\u5458\u7684\u540d\u79f0)\uff1b \u2003offsetof\u628a0\u5730\u5740\u5f3a\u5236\u8f6c\u5316\u6210\u4e86TYPE*\u7c7b\u578b\uff0c\u7136\u540e\u5c06\u5b83\u7684MEMBER\u6210\u5458\u7684\u5730\u5740\u8f6c\u5316\u4e3asize_t\u7c7b\u578b\u3002\u4e5f\u5c31\u662f\u8bf4\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u4e3aTYPE\u7684\u7ed3 \u6784\u4f53\u5730\u5740\u4ece0\u5f00\u59cb\uff0c\u90a3\u4e48\u5b83\u7684MEMBER\u6210\u5458\u7684\u5730\u5740\u5c31\u662fMEMBER\u6210\u5458\u4e0eTYPE\u7c7b\u578b\u5730\u5740\u4e4b\u95f4\u7684\u76f8\u5bf9\u504f\u79fb\u91cf\uff08\u4ee5char\u8ba1\u6570\u7684\uff09\uff1b \u2003container_of\u5b9a\u4e49\u4e2d\u7b2c\u4e00\u884c\u901a\u8fc7typeof\u53d6\u5f97member\u7684\u7c7b\u578b\uff0c\u7136\u540e__mptr\u662fmember\u7c7b\u578b\u7684\u6307\u5411ptr\u5730\u5740\u7684\u5e38\u91cf\u6307\u9488\uff0c\u8fd9\u91cc\u7684\u4e3b\u8981\u76ee\u7684\u662f\u4e3a\u4e86\u5bf9ptr\u4e0emember\u505a\u7c7b\u578b\u68c0\u67e5,\u5982\u679c\u7528typeof\u6c42\u51fa\u6765\u7684\u7c7b\u578b\u548cptr\u4e0d\u4e00\u81f4\uff0c\u90a3\u4e48\u5728\u8d4b\u503c\u64cd\u4f5c\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\uff1b \u2003\u7b2c\u4e8c\u884c\uff0c\u5728\u53d6\u5f97\u4e86member\u7684\u5730\u5740\u4e4b\u540e\uff0c\u53ea\u8981\u628a\u5b83\u51cf\u53bbmember\u76f8\u5bf9\u4e8e\u7ed3\u6784\u4f53\u7684\u504f\u79fb\u91cf\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u7ed3\u6784\u4f53\u7684\u5730\u5740\u4e86\u3002\u6700\u540e\uff0c\u518d\u628a\u8fd9\u4e2a\u5730\u5740\u8f6c\u5316\u6210type*\uff0c\u5c31\u5b8c\u6210\u4e86\u6574\u4e2a\u903b\u8f91\u3002 \u2003\u4f9d\u9760list_entry\u65b9\u6cd5\uff0c\u5185\u6838\u63d0\u4f9b\u4e86\u521b\u5efa\u3001\u64cd\u4f5c\u7b49\u7ba1\u7406\u94fe\u8868\u7684\u5404\u79cd\u65b9\u6cd5\uff0c\u800c\u8fd9\u4e9b\u65b9\u6cd5\u5e76\u4e0d\u9700\u77e5\u9053list_head\u6240\u5d4c\u5165\u5bf9\u8c61\u7684\u6570\u636e\u7ed3\u6784\u3002","title":"Linux\u5185\u6838\u4e2d\u7684\u6570\u636e\u7ed3\u6784"},{"location":"DataStruct/Sort/","text":"\u6392\u5e8f \u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5 \u2003\u4fdd\u8bc1\u5728\u6392\u5e8f\u4e4b\u524d\uff0c2\u4e2a\u76f8\u7b49\u7684\u6570\u5176\u5728\u5e8f\u5217\u7684\u524d\u540e\u4f4d\u7f6e\u987a\u5e8f\u548c\u6392\u5e8f\u4e4b\u540e\u5b83\u4eec\u4e24\u4e2a\u7684\u524d\u540e\u4f4d\u7f6e\u987a\u5e8f\u76f8\u540c\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u5982\u679cAi = Aj\uff0cAi\u539f\u6765\u5728\u4f4d\u7f6e\u524d\uff0c\u6392\u5e8f\u540eAi\u8fd8\u662f\u8981\u5728Aj\u4f4d\u7f6e\u524d\u3002 \u2003 \u5806\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\u3001\u5e0c\u5c14\u6392\u5e8f\u3001\u9009\u62e9\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u800c\u57fa\u6570\u6392\u5e8f\u3001\u5192\u6ce1\u6392\u5e8f\u3001\u63d2\u5165\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u2003\u8981\u6392\u5e8f\u7684\u5185\u5bb9\u662f\u4e00\u4e2a\u590d\u6742\u5bf9\u8c61\u7684\u591a\u4e2a\u6570\u5b57\u5c5e\u6027\uff0c\u4e14\u5176\u539f\u672c\u7684\u521d\u59cb\u987a\u5e8f\u5b58\u5728\u610f\u4e49\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5728\u4e8c\u6b21\u6392\u5e8f\u7684\u57fa\u7840\u4e0a\u4fdd\u6301\u539f\u6709\u6392\u5e8f\u7684\u610f\u4e49\uff0c\u624d\u9700\u8981\u4f7f\u7528\u5230\u7a33\u5b9a\u6027\u7684\u7b97\u6cd5 \u4e5d\u79cd\u6392\u5e8f 1\u3001\u9009\u62e9\u6392\u5e8f void selection_sort(std::vector<int>& vec){ for(int i=0;i<vec.size();i++){ int minIndex=i; for(int j=i+1;j<vec.size();j++){ if(vec[j]<vec[minIndex])minIndex=j; } std::swap(vec[i], vec[minIndex]); } } 2\u3001\u5192\u6ce1\u6392\u5e8f void maopao_sort(std::vector<int>& vec){ for(int i=0;i<vec.size()-1;i++){ for(int j=0;j<vec.size()-1-i;j++){ if(vec[j]>vec[j+1]) std::swap(vec[j], vec[j+1]); } } } 3\u3001\u63d2\u5165\u6392\u5e8f void insertion_sort(std::vector<int>& vec){ for(int i=1;i<vec.size();i++){ int tmp=std::move(vec[i]); int j=i; for(;j>0&&vec[j-1]>tmp;--j){ vec[j]=std::move(vec[j-1]); //\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u907f\u514d\u4e2d\u95f4\u8fc7\u7a0b\u7684\u76f8\u4e92\u4ea4\u6362 } vec[j]=std::move(tmp); } } //\u5bf9\u6570\u7ec4\u8303\u56f4\u5185\u7684\u5143\u7d20\u8fdb\u884c\u63d2\u5165\u6392\u5e8f void inside_insertion_sort(std::vector<int>& vec, int left, int right){ for(int i=left+1;i<right+1;i++){ int tmp=std::move(vec[i]); int j=i; for(;j>=left+1&&vec[j-1]>tmp;--j){ vec[j]=std::move(vec[j-1]); //\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u907f\u514d\u4e2d\u95f4\u8fc7\u7a0b\u7684\u76f8\u4e92\u4ea4\u6362 } vec[j]=std::move(tmp); } } // \u5bf9\u94fe\u8868\u8fdb\u884c\u63d2\u5165\u6392\u5e8f ListNode* insertionSortList(ListNode* head) { ListNode *dumpy = new ListNode(-1, head), *lastSorted=head, *cur = head->next; while(cur){ if(lastSorted->val <= cur->val){ lastSorted = lastSorted->next; }else{ ListNode *prev=dumpy; while(prev->next->val <=cur->val){ prev=prev->next; } lastSorted->next = cur->next; cur->next = prev->next; prev->next = cur; } cur = lastSorted->next; } return dumpy->next; } \u7b80\u5355\u6392\u5e8f\u7b97\u6cd5\u7684\u4e0b\u754c : \u2003N\u4e2a\u4e92\u5f02\u5143\u7d20\u7684\u6570\u7ec4\u5176\u548c\u81ea\u8eab\u9006\u5e8f\u540e\u6570\u7ec4\uff0c\u4e24\u4e2a\u6570\u7ec4\u4e2d\u5b58\u5728\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u548c\u662fC 2 N =N(N-1)/2\uff0c\u6545N\u4e2a\u4e92\u5f02\u5143\u7d20\u7684\u6570\u7ec4\u4e2d\u5b58\u5728\u7684\u5e73\u5747\u9006\u5e8f\u5bf9\u6570\u662fN(N-1)/4\u3002 \u2003\u5728\u7b80\u5355\u6392\u5e8f\u7b97\u6cd5\u4e2d(\u4e0a\u8ff0\u4e09\u4e2a)\uff0c\u4ea4\u6362\u4e00\u5bf9\u9006\u5e8f\u6570\uff0c\u53ef\u4ee5\u6d88\u9664\u4e00\u5bf9\u9006\u5e8f\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u7b97\u6cd5\u4e2d\u8fd8\u6709O(N)\u9879\u5de5\u4f5c\uff0c\u56e0\u6b64\u6574\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u4e3aO(N+I)\uff0cI\u4e3a\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\uff0c\u53ef\u77e5\uff0c\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u4e0b\u754c\u4e3a\u03a9(N+N(N-1)/4) = O(N^2)\u3002 \u2003\u4e3a\u4e86\u4f7f\u5f97\u6392\u5e8f\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u964d\u4f4e\u5230\u4e8c\u6b21\u4e00\u4e0b\uff0c\u5c31\u610f\u5473\u7740\u6bcf\u6b21\u4ea4\u6362\u5220\u9664\u4e0d\u6b62\u4e00\u4e2a\u9006\u5e8f 4\u3001\u5e0c\u5c14\u6392\u5e8f(\u7f29\u51cf\u589e\u91cf\u6392\u5e8f) \u5e0c\u5c14\u6392\u5e8f\u4e2d\u5bf9\u4e8e\u589e\u91cf\u5e8f\u5217\u7684\u9009\u62e9\u5341\u5206\u91cd\u8981\uff0c\u76f4\u63a5\u5f71\u54cd\u5230\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4e0b\u9762\u9009\u62e9\u7684\u589e\u91cf\u5e8f\u5217\u4e3a{N/2,(N/2)/2, ..., 1}(\u5e0c\u5c14\u589e\u91cf)\uff0c\u5176\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u4e3aO(n 2 )\uff0c\u4e00\u4e9b\u7ecf\u8fc7\u4f18\u5316\u7684\u589e\u91cf\u5e8f\u5217\u5982Hibbard\u7ecf\u8fc7\u590d\u6742\u8bc1\u660e\u53ef\u4f7f\u5f97\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N 3/2 )\u3002 void shell_sort(std::vector<int>& vec){ for(int gap=vec.size()/2; gap>0;gap/=2){ for(int i=gap;i<vec.size();i++){ // \u4e0b\u9762\u548c\u63d2\u5165\u6392\u5e8f\u8fc7\u7a0b\u76f8\u540c\uff0c\u53ea\u4e0d\u8fc7\u4ea4\u6362\u7684\u5143\u7d20\u95f4\u9694\u4e3agap int temp=std::move(vec[i]); int j=i; for(;j>=gap && temp<vec[j-gap];j-=gap){ vec[j] = std::move(vec[j-gap]); } vec[j]=std::move(temp); } } } 5\u3001\u5806\u6392\u5e8f \u2003\u5efa\u7acbN\u4e2a\u5143\u7d20\u7684\u4e8c\u53c9\u5806\uff0c\u82b1\u8d39O(N)\u65f6\u95f4\uff1b\u7136\u540e\u6267\u884cN\u6b21deleteMin\u64cd\u4f5c\uff0c\u6700\u5c0f\u7684\u5143\u7d20\u79bb\u5f00\u5806(\u5b9e\u9645\u4e0a\u662f\u79fb\u52a8\u5230\u5b58\u50a8\u5806\u7684\u6570\u7ec4\u6700\u540e\u7684\u4f4d\u7f6e)\uff0c\u5219N\u6b21\u5220\u9664\u540e\uff0c\u6570\u7ec4\u4e2d\u5143\u7d20\u6309\u9012\u51cf\u7684\u987a\u5e8f\u5b58\u50a8\uff0c\u6bcf\u6b21\u5220\u9664\u8017\u65f6O(log N), \u5219\u7b97\u6cd5\u8017\u65f6\u4e3aO(N+Nlog N)=O(Nlog N). \u2003\u5982\u679c\u6784\u5efa\u7684\u5806\u662f\u6700\u5927\u5806\uff0c\u5219\u6700\u540e\u5f97\u5230\u7684\u6570\u7ec4\u5143\u7d20\u6b63\u597d\u6309\u589e\u5e8f\u5b58\u50a8\u3002 # define leftchild(i) (2*i+1) //i\u4f4d\u7f6e\u7684\u8282\u70b9\u7684\u5de6\u513f\u5b50\u4e0b\u6807\uff0c\u56e0\u4e3a\u6570\u7ec4\u662f\u4ece0\u5f00\u59cb\u5b58\u50a8\u7684 template<typename comparable> // i:\u4e0b\u6ee4\u4f4d\u7f6e\uff0cn: \u5806\u7684\u903b\u8f91\u5927\u5c0f void percDown(std::vector<comparable>& vec, int i, int n){ int child; comparable tmp; for(tmp=std::move(vec[i]); leftchild(i)<n;i=child){ child = leftchild(i); if(child!=n-1 && vec[child]<vec[child+1]) child++; if(tmp<vec[child]) vec[i]=std::move(vec[child]); //\u7a7a\u7a74\u4e0b\u6ee4 else break; } vec[i]=std::move(tmp); } void heap_sort(std::vector<int>& vec){ //\u6784\u5efa\u6700\u5927\u5806 for(int i=vec.size()/2 - 1; i>=0; i--)// i<=len/2-1, \u5219\u5176\u5de6\u5b69\u5b50\u4e0b\u6807<=len-1, \u7b49\u4e8e\u8bf4\u660ei\u8282\u70b9\u6ca1\u6709\u53f3\u5b69\u5b50 percDown(vec, i, vec.size()); // \u5220\u9664 for(int j=vec.size()-1;j>0;--j){ std::swap(vec[0], vec[j]); percDown(vec, 0, j); } } 6\u3001\u5f52\u5e76\u6392\u5e8f, \u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(Nlog N) \u2003\u5f52\u5e76\u6392\u5e8f\u7684\u6bd4\u8f83\u6b21\u6570\u662f\u6700\u5c11\u7684\uff0c\u4f46\u5176\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u6765\u5b58\u50a8\u4e34\u65f6\u6570\u7ec4\uff0c\u5e76\u4e14\u8017\u8d39\u7ebf\u6027\u65f6\u95f4\uff0c\u5728\u4e24\u8005\u4e4b\u95f4\u590d\u5236\u5143\u7d20\u3002 void merge(std::vector<int>& a, std::vector<int>& tmpArr, int leftPos, int rightPos, int rightEnd){ int leftEnd = rightPos-1; int tmpPos=leftPos; int numElements = rightEnd-leftPos+1; while(leftPos<=leftEnd && rightPos<=rightEnd){ if(a[leftPos]<=a[rightPos]) tmpArr[tmpPos++]=std::move(a[leftPos++]); else tmpArr[tmpPos++] = std::move(a[rightPos++]); } while(leftPos<=leftEnd) tmpArr[tmpPos++]=std::move(a[leftPos++]); while(rightPos<=rightEnd) tmpArr[tmpPos++]=std::move(a[rightPos++]); //\u5c06\u6392\u5e8f\u540e\u7684\u4e34\u65f6\u6570\u7ec4\u590d\u5236\u56de\u539f\u6570\u7ec4 for(int i=0;i<numElements;++i, --rightEnd){ a[rightEnd] = std::move(tmpArr[rightEnd]); } } void mergeSort(std::vector<int>& a, std::vector<int>& tmpArr, int left, int right){ if(left<right){ int mid=(left+right)/2; mergeSort(a, tmpArr, left, mid); mergeSort(a, tmpArr, mid+1, right); merge(a, tmpArr, left, mid+1, right); } } //\u7b80\u6d01\u5199\u6cd5\uff0c\u63a8\u8350 void mergeSort2(vector<int>& nums, vector<int>& tmpArr, int left, int right){ if(left>=right)return; int mid=(left+right)/2; mergeSort(nums, tmpArr, left, mid); mergeSort(nums, tmpArr, mid+1, right); for(int p=left;p<=right;p++){ tmpArr[p]=nums[p]; } int i=left, j=mid+1; //i,j\u5206\u522b\u662f\u5de6\u53f3\u6570\u7ec4\u9996\u5143\u7d20\u7684\u4e0b\u6807 for(int k=left; k<=right;k++){ if(j==right+1 || tmpArr[i]<=tmpArr[j]) nums[k]=std::move(tmpArr[i++]); else nums[k]=std::move(tmpArr[j++]); // i==mid+1 || tmpArr[j]<tmpArr[i] } } void merge_sort(std::vector<int>& a){ std::vector<int> tmpArr(a.size()); mergeSort(a, tmpArr, 0, a.size()-1); } 7\u3001\u5feb\u901f\u6392\u5e8f, \u65f6\u95f4\u590d\u6742\u5ea6O(Nlog N) \u2003\u5c06\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u67a2\u7ebd\u5143\uff0c\u5982\u679c\u8f93\u5165\u662f\u968f\u673a\u7684\uff0c\u90a3\u4e48\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u4f46\u5982\u679c\u8f93\u5165\u662f\u9884\u6392\u5e8f\u7684\u6216\u8005\u9006\u5e8f\u7684\uff0c\u90a3\u5c06\u4ea7\u751f\u4e00\u4e2a\u52a3\u8d28\u7684\u5206\u5272\uff0c\u6240\u6709\u7684\u5143\u7d20\u90fd\u88ab\u5212\u5206\u5230\u4e00\u4e2a\u96c6\u5408\u4e2d\uff1b \u2003\u968f\u673a\u9009\u53d6\u67a2\u7ebd\u5143\uff0c\u662f\u5b89\u5168\u7684\uff0c\u4f46\u662f\u751f\u6210\u968f\u673a\u6570\u4f1a\u6709\u989d\u5916\u7684\u5f00\u9500\uff0c\u4f1a\u589e\u52a0\u7b97\u6cd5\u5176\u4f59\u90e8\u5206\u7684\u5e73\u5747\u8fd0\u884c\u65f6\u95f4\u3002 \u2003\u67a2\u7ebd\u5143\u7684\u6700\u4f73\u9009\u62e9\u662f\u6570\u7ec4\u7684\u4e2d\u503c\uff0c\u4f46\u662f\u65e0\u6cd5\u63d0\u524d\u83b7\u77e5\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u91c7\u7528\u4e09\u5143\u4e2d\u503c\u6cd5\u9009\u53d6\u67a2\u7ebd\uff0c\u5373\u5f00\u59cb\u3001\u4e2d\u95f4\u3001\u672b\u5c3e\u4e09\u4e2a\u5143\u7d20\u7684\u4e2d\u503c\u4f5c\u4e3a\u67a2\u7ebd\u5143\u6765\u8fd1\u4f3c\u4f30\u8ba1\u3002 //\u5feb\u901f\u6392\u5e8f \u7b80\u6613\u7248 void simple_quick_sort(std::vector<int>& vec){ if(vec.size()>1){ std::vector<int> smaller, same, larger; auto pivot = vec[vec.size()/2]; for(auto &v:vec){ if(v<pivot)smaller.push_back(v); else if(v>pivot) larger.push_back(v); else same.push_back(v); } simple_quick_sort(smaller); simple_quick_sort(larger); std::move(begin(smaller), end(smaller), begin(vec)); std::move(begin(same), end(same), begin(vec)+smaller.size()); std::move(begin(larger), end(larger), end(vec)-larger.size()); } } // \u5feb\u901f\u6392\u5e8f void median3(std::vector<int>& a, int left, int right){ /*\u4e09\u6570\u4e2d\u503c\u5206\u5272\uff1a\u6d88\u9664\u8f93\u5165\u6570\u636e\u9884\u5148\u6392\u5e8f\u7684\u574f\u60c5\u5f62*/ int center = (left+right)/2; //\u4e0b\u9762\u7684\u987a\u5e8f\u662f\u56fa\u5b9a\u7684\uff0c\u4e0d\u80fd\u968f\u610f\u8c03\u6362\u987a\u5e8f\uff0c\u5148\u786e\u4fddleft\u4f4d\u7f6e\u4e0a\u5143\u7d20\u6700\u5c0f\uff0c\u518d\u786e\u4fdd\u4e2d\u95f4\u4f4d\u7f6e\u5143\u7d20\u6b21\u5c0f if(a[center]<a[left]) std::swap(a[center], a[left]); if(a[right] < a[left]) std::swap(a[right], a[left]); if(a[right]<a[center]) std::swap(a[center], a[right]); //\u5c06pivot\u7f6e\u4e8eright-1\u5904 std::swap(a[center], a[right-1]); } //\u91c7\u7528median3\u786e\u5b9apivot void _partition1(std::vector<int>& a, int left, int right){ if(left+2<=right){ median3(a, left, right); const int pivot= a[right-1]; //\u7ecf\u8fc7\u4e09\u6570\u4e2d\u503c\u5206\u5272\u540e\uff0c\u9009\u62e9\u5012\u6570\u7b2c\u4e8c\u4e2a\u6570\u4e3apivot //\u5f00\u59cb\u5206\u5272 int i=left, j=right-1; for(;;){ while(a[++i]<pivot); while(a[--j]>pivot); if(i<j){ std::swap(a[i], a[j]); //\u6b64\u65f6i\u4f9d\u65e7\u5728j\u5de6\u4fa7\uff0ca[i]>=pivot, a[j]<=pivot, \u4ea4\u6362\u4e24\u8005 }else break; // i\u5df2\u7ecf\u79fb\u52a8\u5230j\u53f3\u4fa7\uff0c\u8df3\u51fa\u5faa\u73af } //\u6b64\u65f6 pos<i\u7684\u5143\u7d20\u5747\u5c0f\u4e8e\u7b49\u4e8epivot, pos>j\u7684\u5143\u7d20\u5747\u5927\u4e8e\u7b49\u4e8epivot\uff0c //i\u4e24\u4fa7\u7684\u5143\u7d20\u5e76\u975e\u4e00\u5b9a\u6709\u5e8f\u7684\uff0c\u53ea\u662f\u5747\u5c0f\u4e8e\u7b49\u4e8e\u6216\u5927\u4e8e\u7b49\u4e8epivot //\u518d\u5c06pivot\u4ece\u4f4d\u7f6eright-1\u6362\u5230i, \u518d\u5bf9i\u4e24\u4fa7\u7684\u5143\u7d20\u505a\u9012\u5f52\u8c03\u7528 std::swap(a[i], a[right-1]); _partition1(a, left, i-1); _partition1(a, i+1, right); }else{ //\u6570\u7ec4\u5143\u7d20\u5c0f\u4e8e5\uff0c \u91c7\u7528\u63d2\u5165\u6392\u5e8f // inside_insertion_sort(a, left, right); //\u6570\u7ec4\u5143\u7d20\u7b49\u4e8e2\uff0c\u76f4\u63a5\u5224\u65ad\u4e24\u8005 if(a[left]>a[right]) std::swap(a[left], a[right]); } } //\u56fa\u5b9aright\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u4e3apivot void _partition2(std::vector<int>& vec, int left, int right){ if(left>=right)return; int pivot=vec[right]; int i=left, j=right; while(i<j){ while(i<j && vec[i]<=pivot)i++; while(i<j && vec[j]>=pivot)j--; if(i<j){ swap(vec[i], vec[j]); } } swap(vec[i], vec[right]); _partition2(vec, left, i-1); _partition2(vec, i+1, right); } void quick_sort(std::vector<int>& vec){ std::cout<<\"median3:\\n\"; _partition1(vec, 0, vec.size()-1); // std::cout<<\"fix right:\" // _partition2(vec, 0, vec.size()-1); } \u7ebf\u6027\u65f6\u95f4\u6392\u5e8f 8\u3001\u6876\u6392\u5e8f\uff0c \u5f53\u9700\u8981\u6392\u5e8f\u7684\u6570\u8303\u56f4\u8fc7\u5927\u65f6\uff0c\u5c06\u9700\u8981\u975e\u5e38\u5927\u7684\u989d\u5916\u7a7a\u95f4\u5f00\u9500 \u57fa\u6570\u6392\u5e8f \u2003\u5bf9\u6570\u5b57\u578b\u6216\u5b57\u7b26\u578b\u7684\u5355\u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u770b\u4f5c\u7531\u591a\u4e2a\u6570\u4f4d\u6216\u591a\u4e2a\u5b57\u7b26\u6784\u6210\u7684\u591a\u5173\u952e\uff0c\u5176\u4e2d\u6bcf\u4e2a\u6570\u5b57\u6216\u5b57\u7b26\u53ef\u80fd\u7684\u53d6\u503c\u4e2a\u6570\u79f0\u4e3a\u57fa\u6570\u3002\u4f8b\u59820~999\u7684\u6570\u5b57\uff0c\u5171\u67093\u4f4d\uff0c\u6bcf\u4f4d\u4e0a\u670910\u79cd\u53ef\u80fd\u3002\u5728\u6309\u7b2ck\u4f4d\u6392\u5e8f\u65f6\uff0c\u843d\u5728\u540c\u4e00\u4e2a\u6876\u4e2d\u7684\u5143\u7d20\uff0c\u662f\u6309\u7167\u7b2ck-1\u4f4d\u6392\u5e8f\u7684\u3002 \u2003 \u65f6\u95f4\u590d\u6742\u5ea6O(d*N) , d\u4ee3\u8868\u6700\u5927\u5143\u7d20\u7684\u4f4d\u6570\u3002 \u2003\u9488\u5bf9\u6b63\u8d1f\u6df7\u5408\u7684\u6570\u636e\uff0c\u9700\u8981\u5206\u79bb\u6210\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u6392\u5e8f; \u800c\u4e14\u4e0d\u9002\u7528\u6d6e\u70b9\u6570\u6392\u5e8f\uff0c\u4e00\u822c\u7528\u4f5c\u6574\u6570\u6216\u8005\u5b57\u7b26\u4e32\u6392\u5e8f(\u91c7\u7528\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684ascii\u7801) //num\u4ee3\u8868vec\u4e2d\u6240\u6709\u6570\u5b57\u6700\u5927\u6709\u51e0\u4f4d void inside_radix_sort(std::vector<int>& vec, int num){ std::vector<int>* buckets= new std::vector<int>[10]; for(int i=0;i<num;i++){ for(auto &v:vec){ int j=i; auto copy=v; int tmp; while(j-- >= 0){ tmp=copy%10; copy = (copy-tmp)/10; } tmp = tmp<0?-1*tmp:tmp; //\u7b2ck\u4f4d\u6570\uff0c tmp\u53d6\u503c\u8303\u56f40\u52309 buckets[tmp].push_back(v); } int k=0; for(int p=0;p<10;p++){ for(auto& v:buckets[p]){ vec[k++]=v; } buckets[p].clear(); } } delete[] buckets; } void inside_radix_sort2(std::vector<int>& vec){ std::vector<int> odd; //\u5947\u6570 std::vector<int> even; //\u5076\u6570 for(int i=0;i<32;i++){ //\u5c06\u6574\u6570\u770b\u621032\u4f4d\u7684\u4e8c\u8fdb\u5236 for(auto &v:vec){ if((v>>i & 1)==0) even.push_back(v); else odd.push_back(v); } int j=0; for(auto& v:even) vec[j++]=v; for(auto& v:odd) vec[j++]=v; even.clear(); odd.clear(); } } /*binary:true, \u4ee3\u8868\u5c06\u6bcf\u4e2a\u6574\u6570\u770b\u621032\u4f4d\u7684\u4e8c\u8fdb\u5236\u4f4d\uff0c\u8fd9\u6837\u5c31\u65e0\u9700\u8ba1\u7b97\u6700\u5927\u5143\u7d20\u7684\u4f4d\u6570\u4e86; radix_sort\u662f\u4e3b\u51fd\u6570\uff0c\u5c06\u6570\u7ec4\u4e2d\u7684\u6b63\u8d1f\u6570\u5206\u79bb */ void radix_sort(std::vector<int>& vec, bool binary=false){ std::vector<int> negative, positive; int minNeg=0, maxPos=0; for(auto& v:vec){ if(v<0){ minNeg=v<minNeg?v:minNeg; negative.push_back(v); }else{ maxPos=v>maxPos?v:maxPos; positive.push_back(v); } } int k=0; if(!binary){ minNeg*=-1; int numNeg=0, numPos=0; while(minNeg){ minNeg/=10; numNeg++; } while(maxPos){ maxPos/=10; numPos++; } inside_radix_sort(negative, numNeg); inside_radix_sort(positive, numPos); for(int i=negative.size()-1; i>=0;i--){ vec[k++]=negative[i]; } }else{ inside_radix_sort2(negative); inside_radix_sort2(positive); for(auto& v:negative) vec[k++]=v; } for(auto& v:positive) vec[k++]=v; } \u8ba1\u6570\u57fa\u6570\u6392\u5e8f \u2003\u57fa\u6570\u6392\u5e8f\u7684\u53e6\u4e00\u79cd\u5b9e\u73b0\uff0c\u907f\u514d\u4e86\u4f7f\u7528\u989d\u5916\u7684vector< vector< int > >\u6765\u8868\u793a\u6876, \u4ec5\u9700\u8981\u8868\u793a\u6bcf\u4e2a\u57fa\u6570\u6570\u91cf\u7684count\u6570\u7ec4\uff0c\u548c\u6876\u4e2d\u5143\u7d20\u5728\u4e2d\u95f4\u8fc7\u7a0b\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6eoffset, \u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u8fd8\u53ef\u4ee5\u540c\u65f6\u7528count\u6765\u8ba1\u7b97\u5f97\u5230offset\u3002 void inside_counting_radix_sort(std::vector<int>& vec, int num){ for(int i=0;i<num;i++){ int mod = 1, j=i; while(j-->0)mod*=10; // std::vector<int> count(10, 0), offset(10, 0); // for(int k=0;k<vec.size();k++){ // int tmp=(vec[k]/mod)%10; // tmp = tmp>=0?tmp:-1*tmp; //\u6c42\u7b2ci\u4f4d\u4e0a\u6570\u5b57\u4e3a\u591a\u5c11 // count[tmp]++; // } /*offset[k]\u4ee3\u8868\u7b2c\u4e00\u4e2a\u4f4d\u6570\u4e3ak\u7684\u5143\u7d20\u5728\u65b0\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6epos\uff0c\u6bcf\u6b21\u5b89\u6392\u6876\u4e2d\u4e00\u4e2a\u5143\u7d20\u540e\uff0c\u8ba9pos\u503c\u81ea\u589e\uff0c \u8fd9\u6837\u6876\u4e2d\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u5c31\u4f1a\u9012\u589e\u5230\u4e0b\u4e00\u4f4d*/ // for(int m=1;m<10;m++) // offset[m]=offset[m-1]+count[m-1]; // std::vector<int> copyVec=vec; // for(int n=0;n<copyVec.size();n++){ // int bit = (copyVec[n]/mod)%10; // bit=bit<0?-1*bit:bit; // vec[offset[bit]++]=copyVec[n]; //offset[bit]++ \u8868\u793a\u6876\u4e2d\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u5411\u540e\u79fb\u52a8\u4e00\u4f4d // } /*\u901a\u8fc7\u590d\u7528count\u6765\u907f\u514doffset, count[k+1]\u8868\u793a\u4f4d\u6570\u4e3ak\u7684\u4e2a\u6570\uff0c \u4ece\u5c0f\u5230\u5927\u626b\u63cf\uff0ccoutn[k]+=count[k-1]\uff0c \u5f97\u5230\u7684count\u524d10\u4f4d\u6b63\u597d\u5c31\u662f\u4e4b\u524d\u7684offset*/ std::vector<int> count(11, 0); for(int k=0;k<vec.size();k++){ int tmp=(vec[k]/mod)%10; tmp = tmp>=0?tmp:-1*tmp; //\u6c42\u7b2ci\u4f4d\u4e0a\u6570\u5b57\u4e3a\u591a\u5c11 count[tmp+1]++; } for(int m=1;m<11;m++) count[m]+=count[m-1]; std::vector<int> copyVec=vec; for(int n=0;n<copyVec.size();n++){ int bit = (copyVec[n]/mod)%10; bit=bit<0?-1*bit:bit; vec[count[bit]++]=copyVec[n]; } } } void count_radix_sort(std::vector<int>& vec){ std::vector<int> negative, positive; int minNeg=0, maxPos=0; for(auto& v:vec){ if(v<0){ minNeg=v<minNeg?v:minNeg; negative.push_back(v); }else{ maxPos=v>maxPos?v:maxPos; positive.push_back(v); } } minNeg*=-1; int numNeg=0, numPos=0; while(minNeg){ minNeg/=10; numNeg++; } while(maxPos){ maxPos/=10; numPos++; } inside_counting_radix_sort(negative, numNeg); inside_counting_radix_sort(positive, numPos); int k=0; for(int i=negative.size()-1; i>=0;i--){ vec[k++]=negative[i]; } for(auto& v:positive) vec[k++]=v; }","title":"Sort"},{"location":"DataStruct/Sort/#_1","text":"","title":"\u6392\u5e8f"},{"location":"DataStruct/Sort/#_2","text":"\u4fdd\u8bc1\u5728\u6392\u5e8f\u4e4b\u524d\uff0c2\u4e2a\u76f8\u7b49\u7684\u6570\u5176\u5728\u5e8f\u5217\u7684\u524d\u540e\u4f4d\u7f6e\u987a\u5e8f\u548c\u6392\u5e8f\u4e4b\u540e\u5b83\u4eec\u4e24\u4e2a\u7684\u524d\u540e\u4f4d\u7f6e\u987a\u5e8f\u76f8\u540c\u3002\u7b80\u800c\u8a00\u4e4b\uff0c\u5982\u679cAi = Aj\uff0cAi\u539f\u6765\u5728\u4f4d\u7f6e\u524d\uff0c\u6392\u5e8f\u540eAi\u8fd8\u662f\u8981\u5728Aj\u4f4d\u7f6e\u524d\u3002 \u2003 \u5806\u6392\u5e8f\u3001\u5feb\u901f\u6392\u5e8f\u3001\u5e0c\u5c14\u6392\u5e8f\u3001\u9009\u62e9\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u800c\u57fa\u6570\u6392\u5e8f\u3001\u5192\u6ce1\u6392\u5e8f\u3001\u63d2\u5165\u6392\u5e8f\u3001\u5f52\u5e76\u6392\u5e8f\u662f\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\u3002 \u2003\u8981\u6392\u5e8f\u7684\u5185\u5bb9\u662f\u4e00\u4e2a\u590d\u6742\u5bf9\u8c61\u7684\u591a\u4e2a\u6570\u5b57\u5c5e\u6027\uff0c\u4e14\u5176\u539f\u672c\u7684\u521d\u59cb\u987a\u5e8f\u5b58\u5728\u610f\u4e49\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u5728\u4e8c\u6b21\u6392\u5e8f\u7684\u57fa\u7840\u4e0a\u4fdd\u6301\u539f\u6709\u6392\u5e8f\u7684\u610f\u4e49\uff0c\u624d\u9700\u8981\u4f7f\u7528\u5230\u7a33\u5b9a\u6027\u7684\u7b97\u6cd5","title":"\u7a33\u5b9a\u6392\u5e8f\u7b97\u6cd5"},{"location":"DataStruct/Sort/#_3","text":"1\u3001\u9009\u62e9\u6392\u5e8f void selection_sort(std::vector<int>& vec){ for(int i=0;i<vec.size();i++){ int minIndex=i; for(int j=i+1;j<vec.size();j++){ if(vec[j]<vec[minIndex])minIndex=j; } std::swap(vec[i], vec[minIndex]); } } 2\u3001\u5192\u6ce1\u6392\u5e8f void maopao_sort(std::vector<int>& vec){ for(int i=0;i<vec.size()-1;i++){ for(int j=0;j<vec.size()-1-i;j++){ if(vec[j]>vec[j+1]) std::swap(vec[j], vec[j+1]); } } } 3\u3001\u63d2\u5165\u6392\u5e8f void insertion_sort(std::vector<int>& vec){ for(int i=1;i<vec.size();i++){ int tmp=std::move(vec[i]); int j=i; for(;j>0&&vec[j-1]>tmp;--j){ vec[j]=std::move(vec[j-1]); //\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u907f\u514d\u4e2d\u95f4\u8fc7\u7a0b\u7684\u76f8\u4e92\u4ea4\u6362 } vec[j]=std::move(tmp); } } //\u5bf9\u6570\u7ec4\u8303\u56f4\u5185\u7684\u5143\u7d20\u8fdb\u884c\u63d2\u5165\u6392\u5e8f void inside_insertion_sort(std::vector<int>& vec, int left, int right){ for(int i=left+1;i<right+1;i++){ int tmp=std::move(vec[i]); int j=i; for(;j>=left+1&&vec[j-1]>tmp;--j){ vec[j]=std::move(vec[j-1]); //\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u907f\u514d\u4e2d\u95f4\u8fc7\u7a0b\u7684\u76f8\u4e92\u4ea4\u6362 } vec[j]=std::move(tmp); } } // \u5bf9\u94fe\u8868\u8fdb\u884c\u63d2\u5165\u6392\u5e8f ListNode* insertionSortList(ListNode* head) { ListNode *dumpy = new ListNode(-1, head), *lastSorted=head, *cur = head->next; while(cur){ if(lastSorted->val <= cur->val){ lastSorted = lastSorted->next; }else{ ListNode *prev=dumpy; while(prev->next->val <=cur->val){ prev=prev->next; } lastSorted->next = cur->next; cur->next = prev->next; prev->next = cur; } cur = lastSorted->next; } return dumpy->next; } \u7b80\u5355\u6392\u5e8f\u7b97\u6cd5\u7684\u4e0b\u754c : \u2003N\u4e2a\u4e92\u5f02\u5143\u7d20\u7684\u6570\u7ec4\u5176\u548c\u81ea\u8eab\u9006\u5e8f\u540e\u6570\u7ec4\uff0c\u4e24\u4e2a\u6570\u7ec4\u4e2d\u5b58\u5728\u7684\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\u548c\u662fC 2 N =N(N-1)/2\uff0c\u6545N\u4e2a\u4e92\u5f02\u5143\u7d20\u7684\u6570\u7ec4\u4e2d\u5b58\u5728\u7684\u5e73\u5747\u9006\u5e8f\u5bf9\u6570\u662fN(N-1)/4\u3002 \u2003\u5728\u7b80\u5355\u6392\u5e8f\u7b97\u6cd5\u4e2d(\u4e0a\u8ff0\u4e09\u4e2a)\uff0c\u4ea4\u6362\u4e00\u5bf9\u9006\u5e8f\u6570\uff0c\u53ef\u4ee5\u6d88\u9664\u4e00\u5bf9\u9006\u5e8f\uff0c\u9664\u6b64\u4e4b\u5916\uff0c\u7b97\u6cd5\u4e2d\u8fd8\u6709O(N)\u9879\u5de5\u4f5c\uff0c\u56e0\u6b64\u6574\u4e2a\u7b97\u6cd5\u7684\u65f6\u95f4\u4e3aO(N+I)\uff0cI\u4e3a\u9006\u5e8f\u5bf9\u7684\u6570\u91cf\uff0c\u53ef\u77e5\uff0c\u7b97\u6cd5\u65f6\u95f4\u590d\u6742\u5ea6\u7684\u4e0b\u754c\u4e3a\u03a9(N+N(N-1)/4) = O(N^2)\u3002 \u2003\u4e3a\u4e86\u4f7f\u5f97\u6392\u5e8f\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u964d\u4f4e\u5230\u4e8c\u6b21\u4e00\u4e0b\uff0c\u5c31\u610f\u5473\u7740\u6bcf\u6b21\u4ea4\u6362\u5220\u9664\u4e0d\u6b62\u4e00\u4e2a\u9006\u5e8f 4\u3001\u5e0c\u5c14\u6392\u5e8f(\u7f29\u51cf\u589e\u91cf\u6392\u5e8f) \u5e0c\u5c14\u6392\u5e8f\u4e2d\u5bf9\u4e8e\u589e\u91cf\u5e8f\u5217\u7684\u9009\u62e9\u5341\u5206\u91cd\u8981\uff0c\u76f4\u63a5\u5f71\u54cd\u5230\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u4e0b\u9762\u9009\u62e9\u7684\u589e\u91cf\u5e8f\u5217\u4e3a{N/2,(N/2)/2, ..., 1}(\u5e0c\u5c14\u589e\u91cf)\uff0c\u5176\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4f9d\u7136\u4e3aO(n 2 )\uff0c\u4e00\u4e9b\u7ecf\u8fc7\u4f18\u5316\u7684\u589e\u91cf\u5e8f\u5217\u5982Hibbard\u7ecf\u8fc7\u590d\u6742\u8bc1\u660e\u53ef\u4f7f\u5f97\u6700\u574f\u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(N 3/2 )\u3002 void shell_sort(std::vector<int>& vec){ for(int gap=vec.size()/2; gap>0;gap/=2){ for(int i=gap;i<vec.size();i++){ // \u4e0b\u9762\u548c\u63d2\u5165\u6392\u5e8f\u8fc7\u7a0b\u76f8\u540c\uff0c\u53ea\u4e0d\u8fc7\u4ea4\u6362\u7684\u5143\u7d20\u95f4\u9694\u4e3agap int temp=std::move(vec[i]); int j=i; for(;j>=gap && temp<vec[j-gap];j-=gap){ vec[j] = std::move(vec[j-gap]); } vec[j]=std::move(temp); } } } 5\u3001\u5806\u6392\u5e8f \u2003\u5efa\u7acbN\u4e2a\u5143\u7d20\u7684\u4e8c\u53c9\u5806\uff0c\u82b1\u8d39O(N)\u65f6\u95f4\uff1b\u7136\u540e\u6267\u884cN\u6b21deleteMin\u64cd\u4f5c\uff0c\u6700\u5c0f\u7684\u5143\u7d20\u79bb\u5f00\u5806(\u5b9e\u9645\u4e0a\u662f\u79fb\u52a8\u5230\u5b58\u50a8\u5806\u7684\u6570\u7ec4\u6700\u540e\u7684\u4f4d\u7f6e)\uff0c\u5219N\u6b21\u5220\u9664\u540e\uff0c\u6570\u7ec4\u4e2d\u5143\u7d20\u6309\u9012\u51cf\u7684\u987a\u5e8f\u5b58\u50a8\uff0c\u6bcf\u6b21\u5220\u9664\u8017\u65f6O(log N), \u5219\u7b97\u6cd5\u8017\u65f6\u4e3aO(N+Nlog N)=O(Nlog N). \u2003\u5982\u679c\u6784\u5efa\u7684\u5806\u662f\u6700\u5927\u5806\uff0c\u5219\u6700\u540e\u5f97\u5230\u7684\u6570\u7ec4\u5143\u7d20\u6b63\u597d\u6309\u589e\u5e8f\u5b58\u50a8\u3002 # define leftchild(i) (2*i+1) //i\u4f4d\u7f6e\u7684\u8282\u70b9\u7684\u5de6\u513f\u5b50\u4e0b\u6807\uff0c\u56e0\u4e3a\u6570\u7ec4\u662f\u4ece0\u5f00\u59cb\u5b58\u50a8\u7684 template<typename comparable> // i:\u4e0b\u6ee4\u4f4d\u7f6e\uff0cn: \u5806\u7684\u903b\u8f91\u5927\u5c0f void percDown(std::vector<comparable>& vec, int i, int n){ int child; comparable tmp; for(tmp=std::move(vec[i]); leftchild(i)<n;i=child){ child = leftchild(i); if(child!=n-1 && vec[child]<vec[child+1]) child++; if(tmp<vec[child]) vec[i]=std::move(vec[child]); //\u7a7a\u7a74\u4e0b\u6ee4 else break; } vec[i]=std::move(tmp); } void heap_sort(std::vector<int>& vec){ //\u6784\u5efa\u6700\u5927\u5806 for(int i=vec.size()/2 - 1; i>=0; i--)// i<=len/2-1, \u5219\u5176\u5de6\u5b69\u5b50\u4e0b\u6807<=len-1, \u7b49\u4e8e\u8bf4\u660ei\u8282\u70b9\u6ca1\u6709\u53f3\u5b69\u5b50 percDown(vec, i, vec.size()); // \u5220\u9664 for(int j=vec.size()-1;j>0;--j){ std::swap(vec[0], vec[j]); percDown(vec, 0, j); } } 6\u3001\u5f52\u5e76\u6392\u5e8f, \u65f6\u95f4\u590d\u6742\u5ea6\u4e3aO(Nlog N) \u2003\u5f52\u5e76\u6392\u5e8f\u7684\u6bd4\u8f83\u6b21\u6570\u662f\u6700\u5c11\u7684\uff0c\u4f46\u5176\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u6765\u5b58\u50a8\u4e34\u65f6\u6570\u7ec4\uff0c\u5e76\u4e14\u8017\u8d39\u7ebf\u6027\u65f6\u95f4\uff0c\u5728\u4e24\u8005\u4e4b\u95f4\u590d\u5236\u5143\u7d20\u3002 void merge(std::vector<int>& a, std::vector<int>& tmpArr, int leftPos, int rightPos, int rightEnd){ int leftEnd = rightPos-1; int tmpPos=leftPos; int numElements = rightEnd-leftPos+1; while(leftPos<=leftEnd && rightPos<=rightEnd){ if(a[leftPos]<=a[rightPos]) tmpArr[tmpPos++]=std::move(a[leftPos++]); else tmpArr[tmpPos++] = std::move(a[rightPos++]); } while(leftPos<=leftEnd) tmpArr[tmpPos++]=std::move(a[leftPos++]); while(rightPos<=rightEnd) tmpArr[tmpPos++]=std::move(a[rightPos++]); //\u5c06\u6392\u5e8f\u540e\u7684\u4e34\u65f6\u6570\u7ec4\u590d\u5236\u56de\u539f\u6570\u7ec4 for(int i=0;i<numElements;++i, --rightEnd){ a[rightEnd] = std::move(tmpArr[rightEnd]); } } void mergeSort(std::vector<int>& a, std::vector<int>& tmpArr, int left, int right){ if(left<right){ int mid=(left+right)/2; mergeSort(a, tmpArr, left, mid); mergeSort(a, tmpArr, mid+1, right); merge(a, tmpArr, left, mid+1, right); } } //\u7b80\u6d01\u5199\u6cd5\uff0c\u63a8\u8350 void mergeSort2(vector<int>& nums, vector<int>& tmpArr, int left, int right){ if(left>=right)return; int mid=(left+right)/2; mergeSort(nums, tmpArr, left, mid); mergeSort(nums, tmpArr, mid+1, right); for(int p=left;p<=right;p++){ tmpArr[p]=nums[p]; } int i=left, j=mid+1; //i,j\u5206\u522b\u662f\u5de6\u53f3\u6570\u7ec4\u9996\u5143\u7d20\u7684\u4e0b\u6807 for(int k=left; k<=right;k++){ if(j==right+1 || tmpArr[i]<=tmpArr[j]) nums[k]=std::move(tmpArr[i++]); else nums[k]=std::move(tmpArr[j++]); // i==mid+1 || tmpArr[j]<tmpArr[i] } } void merge_sort(std::vector<int>& a){ std::vector<int> tmpArr(a.size()); mergeSort(a, tmpArr, 0, a.size()-1); } 7\u3001\u5feb\u901f\u6392\u5e8f, \u65f6\u95f4\u590d\u6742\u5ea6O(Nlog N) \u2003\u5c06\u7b2c\u4e00\u4e2a\u5143\u7d20\u4f5c\u4e3a\u67a2\u7ebd\u5143\uff0c\u5982\u679c\u8f93\u5165\u662f\u968f\u673a\u7684\uff0c\u90a3\u4e48\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u4f46\u5982\u679c\u8f93\u5165\u662f\u9884\u6392\u5e8f\u7684\u6216\u8005\u9006\u5e8f\u7684\uff0c\u90a3\u5c06\u4ea7\u751f\u4e00\u4e2a\u52a3\u8d28\u7684\u5206\u5272\uff0c\u6240\u6709\u7684\u5143\u7d20\u90fd\u88ab\u5212\u5206\u5230\u4e00\u4e2a\u96c6\u5408\u4e2d\uff1b \u2003\u968f\u673a\u9009\u53d6\u67a2\u7ebd\u5143\uff0c\u662f\u5b89\u5168\u7684\uff0c\u4f46\u662f\u751f\u6210\u968f\u673a\u6570\u4f1a\u6709\u989d\u5916\u7684\u5f00\u9500\uff0c\u4f1a\u589e\u52a0\u7b97\u6cd5\u5176\u4f59\u90e8\u5206\u7684\u5e73\u5747\u8fd0\u884c\u65f6\u95f4\u3002 \u2003\u67a2\u7ebd\u5143\u7684\u6700\u4f73\u9009\u62e9\u662f\u6570\u7ec4\u7684\u4e2d\u503c\uff0c\u4f46\u662f\u65e0\u6cd5\u63d0\u524d\u83b7\u77e5\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u91c7\u7528\u4e09\u5143\u4e2d\u503c\u6cd5\u9009\u53d6\u67a2\u7ebd\uff0c\u5373\u5f00\u59cb\u3001\u4e2d\u95f4\u3001\u672b\u5c3e\u4e09\u4e2a\u5143\u7d20\u7684\u4e2d\u503c\u4f5c\u4e3a\u67a2\u7ebd\u5143\u6765\u8fd1\u4f3c\u4f30\u8ba1\u3002 //\u5feb\u901f\u6392\u5e8f \u7b80\u6613\u7248 void simple_quick_sort(std::vector<int>& vec){ if(vec.size()>1){ std::vector<int> smaller, same, larger; auto pivot = vec[vec.size()/2]; for(auto &v:vec){ if(v<pivot)smaller.push_back(v); else if(v>pivot) larger.push_back(v); else same.push_back(v); } simple_quick_sort(smaller); simple_quick_sort(larger); std::move(begin(smaller), end(smaller), begin(vec)); std::move(begin(same), end(same), begin(vec)+smaller.size()); std::move(begin(larger), end(larger), end(vec)-larger.size()); } } // \u5feb\u901f\u6392\u5e8f void median3(std::vector<int>& a, int left, int right){ /*\u4e09\u6570\u4e2d\u503c\u5206\u5272\uff1a\u6d88\u9664\u8f93\u5165\u6570\u636e\u9884\u5148\u6392\u5e8f\u7684\u574f\u60c5\u5f62*/ int center = (left+right)/2; //\u4e0b\u9762\u7684\u987a\u5e8f\u662f\u56fa\u5b9a\u7684\uff0c\u4e0d\u80fd\u968f\u610f\u8c03\u6362\u987a\u5e8f\uff0c\u5148\u786e\u4fddleft\u4f4d\u7f6e\u4e0a\u5143\u7d20\u6700\u5c0f\uff0c\u518d\u786e\u4fdd\u4e2d\u95f4\u4f4d\u7f6e\u5143\u7d20\u6b21\u5c0f if(a[center]<a[left]) std::swap(a[center], a[left]); if(a[right] < a[left]) std::swap(a[right], a[left]); if(a[right]<a[center]) std::swap(a[center], a[right]); //\u5c06pivot\u7f6e\u4e8eright-1\u5904 std::swap(a[center], a[right-1]); } //\u91c7\u7528median3\u786e\u5b9apivot void _partition1(std::vector<int>& a, int left, int right){ if(left+2<=right){ median3(a, left, right); const int pivot= a[right-1]; //\u7ecf\u8fc7\u4e09\u6570\u4e2d\u503c\u5206\u5272\u540e\uff0c\u9009\u62e9\u5012\u6570\u7b2c\u4e8c\u4e2a\u6570\u4e3apivot //\u5f00\u59cb\u5206\u5272 int i=left, j=right-1; for(;;){ while(a[++i]<pivot); while(a[--j]>pivot); if(i<j){ std::swap(a[i], a[j]); //\u6b64\u65f6i\u4f9d\u65e7\u5728j\u5de6\u4fa7\uff0ca[i]>=pivot, a[j]<=pivot, \u4ea4\u6362\u4e24\u8005 }else break; // i\u5df2\u7ecf\u79fb\u52a8\u5230j\u53f3\u4fa7\uff0c\u8df3\u51fa\u5faa\u73af } //\u6b64\u65f6 pos<i\u7684\u5143\u7d20\u5747\u5c0f\u4e8e\u7b49\u4e8epivot, pos>j\u7684\u5143\u7d20\u5747\u5927\u4e8e\u7b49\u4e8epivot\uff0c //i\u4e24\u4fa7\u7684\u5143\u7d20\u5e76\u975e\u4e00\u5b9a\u6709\u5e8f\u7684\uff0c\u53ea\u662f\u5747\u5c0f\u4e8e\u7b49\u4e8e\u6216\u5927\u4e8e\u7b49\u4e8epivot //\u518d\u5c06pivot\u4ece\u4f4d\u7f6eright-1\u6362\u5230i, \u518d\u5bf9i\u4e24\u4fa7\u7684\u5143\u7d20\u505a\u9012\u5f52\u8c03\u7528 std::swap(a[i], a[right-1]); _partition1(a, left, i-1); _partition1(a, i+1, right); }else{ //\u6570\u7ec4\u5143\u7d20\u5c0f\u4e8e5\uff0c \u91c7\u7528\u63d2\u5165\u6392\u5e8f // inside_insertion_sort(a, left, right); //\u6570\u7ec4\u5143\u7d20\u7b49\u4e8e2\uff0c\u76f4\u63a5\u5224\u65ad\u4e24\u8005 if(a[left]>a[right]) std::swap(a[left], a[right]); } } //\u56fa\u5b9aright\u4f4d\u7f6e\u4e0a\u7684\u5143\u7d20\u4e3apivot void _partition2(std::vector<int>& vec, int left, int right){ if(left>=right)return; int pivot=vec[right]; int i=left, j=right; while(i<j){ while(i<j && vec[i]<=pivot)i++; while(i<j && vec[j]>=pivot)j--; if(i<j){ swap(vec[i], vec[j]); } } swap(vec[i], vec[right]); _partition2(vec, left, i-1); _partition2(vec, i+1, right); } void quick_sort(std::vector<int>& vec){ std::cout<<\"median3:\\n\"; _partition1(vec, 0, vec.size()-1); // std::cout<<\"fix right:\" // _partition2(vec, 0, vec.size()-1); }","title":"\u4e5d\u79cd\u6392\u5e8f"},{"location":"DataStruct/Sort/#_4","text":"8\u3001\u6876\u6392\u5e8f\uff0c \u5f53\u9700\u8981\u6392\u5e8f\u7684\u6570\u8303\u56f4\u8fc7\u5927\u65f6\uff0c\u5c06\u9700\u8981\u975e\u5e38\u5927\u7684\u989d\u5916\u7a7a\u95f4\u5f00\u9500 \u57fa\u6570\u6392\u5e8f \u2003\u5bf9\u6570\u5b57\u578b\u6216\u5b57\u7b26\u578b\u7684\u5355\u5173\u952e\u5b57\uff0c\u53ef\u4ee5\u770b\u4f5c\u7531\u591a\u4e2a\u6570\u4f4d\u6216\u591a\u4e2a\u5b57\u7b26\u6784\u6210\u7684\u591a\u5173\u952e\uff0c\u5176\u4e2d\u6bcf\u4e2a\u6570\u5b57\u6216\u5b57\u7b26\u53ef\u80fd\u7684\u53d6\u503c\u4e2a\u6570\u79f0\u4e3a\u57fa\u6570\u3002\u4f8b\u59820~999\u7684\u6570\u5b57\uff0c\u5171\u67093\u4f4d\uff0c\u6bcf\u4f4d\u4e0a\u670910\u79cd\u53ef\u80fd\u3002\u5728\u6309\u7b2ck\u4f4d\u6392\u5e8f\u65f6\uff0c\u843d\u5728\u540c\u4e00\u4e2a\u6876\u4e2d\u7684\u5143\u7d20\uff0c\u662f\u6309\u7167\u7b2ck-1\u4f4d\u6392\u5e8f\u7684\u3002 \u2003 \u65f6\u95f4\u590d\u6742\u5ea6O(d*N) , d\u4ee3\u8868\u6700\u5927\u5143\u7d20\u7684\u4f4d\u6570\u3002 \u2003\u9488\u5bf9\u6b63\u8d1f\u6df7\u5408\u7684\u6570\u636e\uff0c\u9700\u8981\u5206\u79bb\u6210\u4e24\u4e2a\u6570\u7ec4\u5206\u522b\u6392\u5e8f; \u800c\u4e14\u4e0d\u9002\u7528\u6d6e\u70b9\u6570\u6392\u5e8f\uff0c\u4e00\u822c\u7528\u4f5c\u6574\u6570\u6216\u8005\u5b57\u7b26\u4e32\u6392\u5e8f(\u91c7\u7528\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684ascii\u7801) //num\u4ee3\u8868vec\u4e2d\u6240\u6709\u6570\u5b57\u6700\u5927\u6709\u51e0\u4f4d void inside_radix_sort(std::vector<int>& vec, int num){ std::vector<int>* buckets= new std::vector<int>[10]; for(int i=0;i<num;i++){ for(auto &v:vec){ int j=i; auto copy=v; int tmp; while(j-- >= 0){ tmp=copy%10; copy = (copy-tmp)/10; } tmp = tmp<0?-1*tmp:tmp; //\u7b2ck\u4f4d\u6570\uff0c tmp\u53d6\u503c\u8303\u56f40\u52309 buckets[tmp].push_back(v); } int k=0; for(int p=0;p<10;p++){ for(auto& v:buckets[p]){ vec[k++]=v; } buckets[p].clear(); } } delete[] buckets; } void inside_radix_sort2(std::vector<int>& vec){ std::vector<int> odd; //\u5947\u6570 std::vector<int> even; //\u5076\u6570 for(int i=0;i<32;i++){ //\u5c06\u6574\u6570\u770b\u621032\u4f4d\u7684\u4e8c\u8fdb\u5236 for(auto &v:vec){ if((v>>i & 1)==0) even.push_back(v); else odd.push_back(v); } int j=0; for(auto& v:even) vec[j++]=v; for(auto& v:odd) vec[j++]=v; even.clear(); odd.clear(); } } /*binary:true, \u4ee3\u8868\u5c06\u6bcf\u4e2a\u6574\u6570\u770b\u621032\u4f4d\u7684\u4e8c\u8fdb\u5236\u4f4d\uff0c\u8fd9\u6837\u5c31\u65e0\u9700\u8ba1\u7b97\u6700\u5927\u5143\u7d20\u7684\u4f4d\u6570\u4e86; radix_sort\u662f\u4e3b\u51fd\u6570\uff0c\u5c06\u6570\u7ec4\u4e2d\u7684\u6b63\u8d1f\u6570\u5206\u79bb */ void radix_sort(std::vector<int>& vec, bool binary=false){ std::vector<int> negative, positive; int minNeg=0, maxPos=0; for(auto& v:vec){ if(v<0){ minNeg=v<minNeg?v:minNeg; negative.push_back(v); }else{ maxPos=v>maxPos?v:maxPos; positive.push_back(v); } } int k=0; if(!binary){ minNeg*=-1; int numNeg=0, numPos=0; while(minNeg){ minNeg/=10; numNeg++; } while(maxPos){ maxPos/=10; numPos++; } inside_radix_sort(negative, numNeg); inside_radix_sort(positive, numPos); for(int i=negative.size()-1; i>=0;i--){ vec[k++]=negative[i]; } }else{ inside_radix_sort2(negative); inside_radix_sort2(positive); for(auto& v:negative) vec[k++]=v; } for(auto& v:positive) vec[k++]=v; } \u8ba1\u6570\u57fa\u6570\u6392\u5e8f \u2003\u57fa\u6570\u6392\u5e8f\u7684\u53e6\u4e00\u79cd\u5b9e\u73b0\uff0c\u907f\u514d\u4e86\u4f7f\u7528\u989d\u5916\u7684vector< vector< int > >\u6765\u8868\u793a\u6876, \u4ec5\u9700\u8981\u8868\u793a\u6bcf\u4e2a\u57fa\u6570\u6570\u91cf\u7684count\u6570\u7ec4\uff0c\u548c\u6876\u4e2d\u5143\u7d20\u5728\u4e2d\u95f4\u8fc7\u7a0b\u6392\u5e8f\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6eoffset, \u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u8fd8\u53ef\u4ee5\u540c\u65f6\u7528count\u6765\u8ba1\u7b97\u5f97\u5230offset\u3002 void inside_counting_radix_sort(std::vector<int>& vec, int num){ for(int i=0;i<num;i++){ int mod = 1, j=i; while(j-->0)mod*=10; // std::vector<int> count(10, 0), offset(10, 0); // for(int k=0;k<vec.size();k++){ // int tmp=(vec[k]/mod)%10; // tmp = tmp>=0?tmp:-1*tmp; //\u6c42\u7b2ci\u4f4d\u4e0a\u6570\u5b57\u4e3a\u591a\u5c11 // count[tmp]++; // } /*offset[k]\u4ee3\u8868\u7b2c\u4e00\u4e2a\u4f4d\u6570\u4e3ak\u7684\u5143\u7d20\u5728\u65b0\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6epos\uff0c\u6bcf\u6b21\u5b89\u6392\u6876\u4e2d\u4e00\u4e2a\u5143\u7d20\u540e\uff0c\u8ba9pos\u503c\u81ea\u589e\uff0c \u8fd9\u6837\u6876\u4e2d\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u5c31\u4f1a\u9012\u589e\u5230\u4e0b\u4e00\u4f4d*/ // for(int m=1;m<10;m++) // offset[m]=offset[m-1]+count[m-1]; // std::vector<int> copyVec=vec; // for(int n=0;n<copyVec.size();n++){ // int bit = (copyVec[n]/mod)%10; // bit=bit<0?-1*bit:bit; // vec[offset[bit]++]=copyVec[n]; //offset[bit]++ \u8868\u793a\u6876\u4e2d\u4e0b\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e\u5411\u540e\u79fb\u52a8\u4e00\u4f4d // } /*\u901a\u8fc7\u590d\u7528count\u6765\u907f\u514doffset, count[k+1]\u8868\u793a\u4f4d\u6570\u4e3ak\u7684\u4e2a\u6570\uff0c \u4ece\u5c0f\u5230\u5927\u626b\u63cf\uff0ccoutn[k]+=count[k-1]\uff0c \u5f97\u5230\u7684count\u524d10\u4f4d\u6b63\u597d\u5c31\u662f\u4e4b\u524d\u7684offset*/ std::vector<int> count(11, 0); for(int k=0;k<vec.size();k++){ int tmp=(vec[k]/mod)%10; tmp = tmp>=0?tmp:-1*tmp; //\u6c42\u7b2ci\u4f4d\u4e0a\u6570\u5b57\u4e3a\u591a\u5c11 count[tmp+1]++; } for(int m=1;m<11;m++) count[m]+=count[m-1]; std::vector<int> copyVec=vec; for(int n=0;n<copyVec.size();n++){ int bit = (copyVec[n]/mod)%10; bit=bit<0?-1*bit:bit; vec[count[bit]++]=copyVec[n]; } } } void count_radix_sort(std::vector<int>& vec){ std::vector<int> negative, positive; int minNeg=0, maxPos=0; for(auto& v:vec){ if(v<0){ minNeg=v<minNeg?v:minNeg; negative.push_back(v); }else{ maxPos=v>maxPos?v:maxPos; positive.push_back(v); } } minNeg*=-1; int numNeg=0, numPos=0; while(minNeg){ minNeg/=10; numNeg++; } while(maxPos){ maxPos/=10; numPos++; } inside_counting_radix_sort(negative, numNeg); inside_counting_radix_sort(positive, numPos); int k=0; for(int i=negative.size()-1; i>=0;i--){ vec[k++]=negative[i]; } for(auto& v:positive) vec[k++]=v; }","title":"\u7ebf\u6027\u65f6\u95f4\u6392\u5e8f"},{"location":"DataStruct/Tree/","text":"\u6570\u636e\u7ed3\u6784 \u6811-\u57fa\u672c\u6982\u5ff5 \u8282\u70b9\u6df1\u5ea6: \u4ece\u6839\u8282\u70b9\u5230\u8be5\u8282\u70b9\u7684\u552f\u4e00\u8def\u5f84\u7684\u957f\u5ea6 \u8282\u70b9\u9ad8\uff1a\u8be5\u8282\u70b9\u5230\u4e00\u4e2a\u53f6\u8282\u70b9\u7684\u6700\u957f\u8def\u5f84\u7684\u957f\u5ea6 \u6811\u7684\u6df1\u5ea6\u7b49\u4e8e\u6811\u7684\u9ad8\u5ea6\uff0c\u662f\u6839\u8282\u70b9\u5230\u5176\u6700\u6df1\u6811\u53f6\u7684\u957f\u5ea6 \u6ee1\u4e8c\u53c9\u6811\uff1a\u9664\u6700\u540e\u4e00\u5c42\u65e0\u4efb\u4f55\u5b50\u8282\u70b9\u5916\uff0c\u6bcf\u4e00\u5c42\u4e0a\u7684\u6240\u6709\u7ed3\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\u3002\u9ad8\u5ea6\u4e3ah,\u5219\u8282\u70b9\u6570N=2 h+1 -1; h=O(log N) \u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u4e00\u68f5\u6df1\u5ea6\u4e3ak\u7684\u6709n\u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u5bf9\u6811\u4e2d\u7684\u7ed3\u70b9\u6309\u4ece\u4e0a\u81f3\u4e0b\u3001\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8fdb\u884c\u7f16\u53f7\uff0c\u5982\u679c\u7f16\u53f7\u4e3ai\uff081\u2264i\u2264n\uff09\u7684\u7ed3\u70b9\u4e0e\u6ee1\u4e8c\u53c9\u6811\u4e2d\u7f16\u53f7\u4e3ai\u7684\u7ed3\u70b9\u5728\u4e8c\u53c9\u6811\u4e2d\u7684\u4f4d\u7f6e\u76f8\u540c\uff0c\u5219\u8fd9\u68f5\u4e8c\u53c9\u6811\u79f0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002 \u2003\u9ad8\u5ea6h\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u8282\u70b9\u65702 h <=N<=2 h+1 -1\u3002 \u4e8c\u53c9\u67e5\u627e\u6811: \u4efb\u4f55\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u7684key\u503c\u90fd\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684key\uff0c\u800c\u53f3\u5b50\u8282\u70b9\u7684key\u90fd\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u7684key(\u8fd9\u91cckey\u5373\u662f\u7d22\u5f15)\uff1b\u4e8c\u53c9\u67e5\u627e\u6811\u7684\u5e73\u5747\u9ad8\u5ea6\u4e3aO(log N), N\u4e3a\u8282\u70b9\u4e2a\u6570\uff1b\u4f46\u5982\u679c\u5bf9\u5411\u4e00\u68f5\u6811\u8f93\u5165\u9884\u5148\u6392\u5e8f\u7684\u6570\u636e\uff0c\u6b64\u65f6\u4e8c\u53c9\u67e5\u627e\u6811\u4f1a\u9000\u5316\u6210\u5355\u5411\u94fe\u8868\uff0c\u67e5\u627e\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u53d8\u6210O(N)\u3002\u6545\u5f15\u51fa\u5e73\u8861\u4e8c\u53c9\u6811\u3002 \u4e8c\u53c9\u6811\u7684\u524d\u3001\u4e2d\u3001\u540e\u5e8f\u904d\u5386\u90fd\u53ef\u4ee5\u901a\u8fc7\u6808\u6765\u5b9e\u73b0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(N), \u7a7a\u95f4\u590d\u6742\u5ea6O(N); \u82e5\u91c7\u7528\u9012\u5f52\u8c03\u7528\uff0c\u989d\u5916\u7684\u9700\u8981\u51fd\u6570\u6808\u7a7a\u95f4O(N); \u91c7\u7528Morris\u904d\u5386\uff0c\u53ef\u4ee5\u5c06\u7a7a\u95f4\u590d\u6742\u5ea6\u964d\u5230O(1) \u3002 0\u3001 \u8bb0\u4f5c\u5f53\u524d\u8282\u70b9\u4e3acur\u3002 1\u3001 1_1. \u5982\u679ccur\u65e0\u5de6\u5b69\u5b50\uff0ccur=cur.right, \u76f4\u63a5\u5230\u7b2c3\u6b65 1_2. \u5982\u679ccur\u6709\u5de6\u5b69\u5b50\uff0c\u627e\u5230cur\u5de6\u5b50\u6811\u4e0a\u6700\u53f3\u7684\u8282\u70b9\uff0c\u8bb0\u4e3amostright 2\u3001 2_1. if(mostright.right==NULL), then mostright.right=cur, cur=cur.left 2_2. if(mostright.right==cur), then mostright.right=NULL, cur=cur.right \u2003 3\u3001 \u91cd\u590d1\u30012\u76f4\u81f3cur\u4e3a\u7a7a 4\u3001 \u8fd4\u56de\u7ed3\u679c \u2003 \u524d\u5e8f\u904d\u5386:\u57281_1\u6b65,\u628acur\u52a0\u5165\u5230\u7ed3\u679c\u540e\uff0ccur=cur.right; \u4ee5\u53ca\u57282_1\u6b65, \u5148\u628acur\u52a0\u5165\u5230\u7ed3\u679c\u4e2d, then cur=cur.left \u4e2d\u5e8f\u904d\u5386:\u57281_1\u6b65,\u628acur\u52a0\u5165\u5230\u7ed3\u679c\u540e\uff0ccur=cur.right; \u4ee5\u53ca\u57282_2\u6b65, \u5148\u628acur\u52a0\u5165\u5230\u7ed3\u679c\u4e2d, then cur=cur.right \u540e\u5e8f\u904d\u5386:\u57282_2\u8fd9\u4e00\u6b65,\u5c06\u4ececur\u7684\u5de6\u8282\u70b9\u5230mostright\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9\u5012\u5e8f\u6dfb\u52a0\u7684\u7ed3\u679c\u4e2d(\u901a\u8fc7\u4e0b\u9762\u7684addPaths\u51fd\u6570); \u57284\u6b65, \u7ed3\u675f\u5faa\u73af\u540e\uff0c\u6b64\u65f6\u53ea\u5269\u4e0b\u6700\u53f3\u4fa7\u4e00\u6761\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9(\u5305\u62ec\u6839\u8282\u70b9)\u5c1a\u672a\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u603b\u7ed3: \u53ef\u4ee5\u770b\u51fa\u4e09\u79cd\u904d\u5386\uff0c\u5728morris\u7b97\u6cd5\u4e0b\uff0c\u6709\u76f8\u540c\u7684\u7ed3\u6784\uff0c \u533a\u522b\u5728\u4e8e\u6dfb\u52a0\u7ed3\u679c\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u540e\u5e8f\u904d\u5386\u4f7f\u9700\u8981\u989d\u5916\u7684\u51fd\u6570\u6765\u5012\u5e8f\u6dfb\u52a0\u7ed3\u679c \u800c\u5c42\u5e8f\u904d\u5386\u9700\u8981\u901a\u8fc7\u961f\u5217\u5b9e\u73b0\u3002 #include<vector> #include<stack> #include<queue> struct TreeNode { int val; TreeNode* left; TreeNode* right; TreeNode() : val(0), left(nullptr), right(nullptr) {} TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} TreeNode(int x, TreeNode* left, TreeNode* right) : val(x), left(left), right(right) {} }; class solution{ public: //\u524d\u5e8f\u904d\u5386 std::vector<int> preorderTraversal(TreeNode* root){ if(!root)return {}; std::vector<int> ans; std::stack<TreeNode*> st; while(root || !st.empty()){ while(root){ ans.push_back(root->val); st.push(root); root=root->left; } root = st.top()->right; st.pop(); } return ans; } //\u4e2d\u5e8f\u904d\u5386 std::vector<int> inorderTraversal(TreeNode* root){ if(!root)return {}; std::vector<int> ans; std::stack<TreeNode*> st; while(root || !st.empty()){ while(root){ st.push(root); root=root->left; } root=st.top(); st.pop(); ans.push_back(root->val); root=root->right; } return ans; } //\u540e\u5e8f\u904d\u5386, \u9664\u53bb\u9012\u5f52\uff0c\u63d0\u4f9b\u4e864\u79cd\u65b9\u6cd5\uff0c\u524d\u4e09\u79cd\u90fd\u9700\u8981O(N)\u7684\u7a7a\u95f4\u590d\u6742\u5ea6, morris\u53ea\u9700O(1)\u7a7a\u95f4\u590d\u6742\u5ea6 std::vector<int> postorderTraversal(TreeNode* root){ if(!root)return {}; std::vector<int> ans; std::stack<TreeNode*> st; st.push(root); TreeNode* cur; while(!st.empty()){ cur=st.top();st.pop(); if(cur){ st.push(cur->left); st.push(cur->right); ans.push_back(cur->val); //\u8bbf\u95ee\u987a\u5e8f: \u6839\u3001\u53f3\u3001\u5de6\uff0c\u5bf9\u7ed3\u679c\u9006\u5e8f } } std::reverse(ans.begin(), ans.end()); return ans; } std::vector<int> postorderTraversal2(TreeNode* root){ if(!root)return {}; std::vector<int> ans; std::stack<std::pair<TreeNode*, bool>> st; st.push(std::make_pair(root, false)); std::pair<TreeNode*, bool>* cur; while (!st.empty()) { cur = &st.top(); if(cur->second){//bool=true, \u8bf4\u660e\u662f\u5b50\u8282\u70b9\u5df2\u7ecf\u8bbf\u95ee\u4e86 ans.push_back(cur->first->val); st.pop(); }else{ //bool=false, \u8bf4\u660e\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u5c1a\u672a\u8bbf\u95ee\uff0c\u5c06\u53f3\u5b69\u5b50\u548c\u5de6\u5b69\u5b50\u5148\u540e\u5165\u6808 cur->second=true; if(cur->first->right) st.push(std::make_pair(cur->first->right, false)); if(cur->first->left) st.push(std::make_pair(cur->first->left, false)); } } return ans; } std::vector<int> postorderTraversal3(TreeNode* root){ if(!root)return {}; std::vector<int> ans; std::stack<TreeNode*> st; TreeNode* prev; while(root || !st.empty()){ while(root){ st.push(root); root=root->left; } root = st.top(); if(!root->right || root->right==prev){ ans.push_back(root->val); prev=root; st.pop(); root=nullptr; }else root=root->right; } return ans; } //morros\u524d\u5e8f\u904d\u5386 std::vector<int> preorderTraversal2(TreeNode* root){ if(!root)return {}; std::vector<int> ans; TreeNode* cur=root, *next=nullptr; while (cur) { next=cur->left; if(next){ while(next->right && next->right!=cur) next=next->right; if(!next->right){ next->right=cur; ans.push_back(cur->val); cur=cur->left; }else{ next->right=nullptr; cur=cur->right; } }else { ans.push_back(cur->val); cur=cur->right; } } return ans; } //moris\u4e2d\u5e8f\u904d\u5386 std::vector<int> inorderTranversal2(TreeNode* root){ if(!root)return {}; std::vector<int> ans; TreeNode *cur=root, *next=nullptr; while(cur){ next=cur->left; if(next){ while (next->right && next->right!=cur) next=next->right; if(!next->right){ next->right=cur; cur=cur->left; }else{ next->right=nullptr; ans.push_back(cur->val); cur=cur->right; } }else{ ans.push_back(cur->val); cur=cur->right; } } return ans; } //morris\u540e\u5e8f\u904d\u5386 void addPath(vector<int> &vec, TreeNode *node) { int count = 0; while (node != nullptr) { ++count; vec.emplace_back(node->val); node = node->right; } reverse(vec.end() - count, vec.end()); } std::vector<int> postorderTraversal4(TreeNode* root){ if(!root)return {}; std::vector<int> ans; TreeNode *cur=root, *next=nullptr; while(cur){ next=cur->left; if(next){ while (next->right && next->right!=cur) next=next->right; if(!next->right){ next->right=cur; cur=cur->left; }else{ next->right=nullptr; addPath(ans, cur->left); cur=cur->right; } }else cur=cur->right; } addPath(ans, root); return ans; } //\u5c42\u5e8f\u904d\u5386 std::vector<int> LayerTraversal(TreeNode* root){ if(!root)return {}; std::vector<int> ans; std::queue<TreeNode*> qu; qu.push(root); while(!qu.empty()){ root=qu.front(); qu.pop(); ans.push_back(root->val); if(root->left)qu.push(root->left); if(root->right)qu.push(root->right); } return ans; } //\u7b2c\u4e8c\u79cd\u5f62\u5f0f\u7684\u5c42\u5e8f\u904d\u5386\uff0c\u53ea\u662f\u8fd4\u56de\u5f62\u5f0f\u4e0d\u540c std::vector<std::vector<int>> MulLayerTraversal(TreeNode* root){ if(!root)return {}; std::vector<std::vector<int>> ans; std::queue<TreeNode*> qu; qu.push(root); while(!qu.empty()){ int len=qu.size(); std::vector<int> tmp(len); for(int i=0;i<len;i++){ root=qu.front(); qu.pop(); tmp[i]=root->val; if(root->left)qu.push(root->left); if(root->right)qu.push(root->right); } ans.push_back(tmp); } return ans; } }; AVL\u6811 \u2003 \u5e73\u8861\u4e8c\u53c9\u6811 \uff0c\u5177\u6709\u4e8c\u53c9\u67e5\u627e\u6811\u5168\u90e8\u7279\u6027\uff0c\u4f46 \u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u6700\u591a\u5dee1\u7684\u4e8c\u53c9\u67e5\u627e\u6811 ( \u7a7a\u6811\u9ad8\u5ea6\u5b9a\u4e49\u4e3a-1 )\u3002 \u2003\u5728\u9ad8\u5ea6\u4e3ah\u7684AVL\u6811\u4e2d\uff0c\u6700\u5c11\u8282\u70b9\u6570S(h)=S(h-1)+S(h-2)+1\u5f97\u5230\u3002(S(0)=1, S(1)=2) \u2003\u5bf9\u4e8eN\u4e2a\u8282\u70b9\u7684AVL\u6811\uff0c\u6700\u574f\u67e5\u627e\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e3aO(log N), \u4f46\u7531\u4e8e\u63d2\u5165\u6216\u5220\u9664\u8282\u70b9\u4f1a\u7834\u574f\u5e73\u8861\u6027\uff0c\u56e0\u6b64\u9700\u8981\u901a\u8fc7 \u65cb\u8f6c \u6765\u6062\u590d\u6811\u7684\u5e73\u8861\u6027\u3002\u5728\u9891\u7e41\u63d2\u5165\u548c\u5220\u9664\u573a\u666f\u4e0b\uff0c\u65cb\u8f6c\u662f\u5341\u5206\u8017\u65f6\u7684\uff0c\u56e0\u6b64\u53c8\u5f15\u51fa \u7ea2\u9ed1\u6811 \u3002 \u65cb\u8f6c\uff1a \u5728\u4e00\u6b21\u63d2\u5165\u4e4b\u548c\uff0c\u53ea\u6709\u90a3\u4e9b\u4ece\u63d2\u5165\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u7684\u5e73\u8861\u53ef\u80fd\u4f1a\u88ab\u6539\u53d8\uff0c\u56e0\u4e3a\u53ea\u6709\u8fd9\u4e9b\u8282\u70b9\u7684\u5b50\u6811\u53ef\u80fd\u53d1\u751f\u53d8\u5316\u3002 \u6cbf\u63d2\u5165\u8282\u70b9\u4e0a\u884c\uff0c\u5c06\u6bcf\u4e00\u4e2a\u5fc5\u987b\u91cd\u65b0\u5e73\u8861\u7684\u8282\u70b9 \u53eb\u505a\u03b1\uff0c\u7531\u4e8e\u4efb\u610f\u8282\u70b9\u6700\u591a\u6709\u4e24\u4e2a\u513f\u5b50\uff0c\u53ef\u77e5\u5176\u4e24\u9897\u5b50\u6811\u7684\u9ad8\u5ea6\u4e00\u5b9a\u76f8\u5dee2\u3002 \u4e0d\u5e73\u8861\u53ef\u80fd\u67094\u79cd\u60c5\u51b5\uff1a \\1. \u5bf9\u03b1\u7684\u5de6\u513f\u5b50\u7684\u5de6\u5b50\u6811\u8fdb\u884c\u4e00\u6b21\u63d2\u5165(\u5de6-\u5de6)\uff1b \\2. \u5bf9\u03b1\u7684\u5de6\u513f\u5b50\u7684\u53f3\u5b50\u6811\u8fdb\u884c\u4e00\u6b21\u63d2\u5165(\u5de6-\u53f3)\uff1b \\3. \u5bf9\u03b1\u7684\u53f3\u513f\u5b50\u7684\u5de6\u5b50\u6811\u8fdb\u884c\u4e00\u6b21\u63d2\u5165(\u53f3-\u5de6)\uff1b \\4. \u5bf9\u03b1\u7684\u53f3\u513f\u5b50\u7684\u53f3\u5b50\u6811\u8fdb\u884c\u4e00\u6b21\u63d2\u5165(\u53f3-\u53f3)\uff1b \u60c5\u51b51\u548c4\uff0c2\u548c3\u5404\u81ea\u6210\u955c\u50cf \u5de6-\u5de6\u548c\u53f3-\u53f3\u53ef\u4ee5\u901a\u8fc7\u5355\u65cb\u8f6c\u6765\u5b8c\u6210\u8c03\u6574\uff0c\u5de6-\u53f3\u548c\u53f3-\u5de6\u5219\u9700\u901a\u8fc7\u53cc\u65cb\u8f6c\u6765\u8c03\u6574\u3002 1\u3001\u5de6-\u5de6\u578b\uff1a\u505a\u53f3\u65cb\u3002 2\u3001\u53f3-\u53f3\u578b\uff1a\u505a\u5de6\u65cb\u3002 3\u3001\u5de6-\u53f3\u578b\uff1a\u5148\u505a\u5de6\u65cb\uff0c\u540e\u505a\u53f3\u65cb\u3002 4\u3001\u53f3-\u5de6\u578b\uff1a\u5148\u505a\u53f3\u65cb\uff0c\u518d\u505a\u5de6\u65cb\u3002 \u53f3\u65cb: \u4ee5\u03b1\u7684\u5de6\u5b50\u8282\u70b9\u4ee3\u66ff\u5176\u4f4d\u7f6e\uff0c\u03b1\u6210\u4e3a\u65b0\u4f4d\u7f6e\u7684\u7684\u53f3\u8282\u70b9\uff0c\u539f\u5de6\u5b50\u8282\u70b9\u7684\u53f3\u5b50\u8282\u70b9\u6210\u4e3a\u03b1\u7684\u5de6\u5b50\u8282\u70b9\u3002 \u5de6\u65cb\uff1a\u4ee5\u03b1\u7684\u53f3\u5b50\u8282\u70b9\u4ee3\u66ff\u5176\u4f4d\u7f6e\uff0c\u03b1\u6210\u4e3a\u65b0\u4f4d\u7f6e\u7684\u7684\u5de6\u8282\u70b9\uff0c\u539f\u53f3\u5b50\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u6210\u4e3a\u03b1\u7684\u53f3\u5b50\u8282\u70b9\u3002 \u5bf9\u4e8e\u5de6-\u53f3\u578b\uff0c\u5148\u5bf9\u03b1\u7684\u5de6\u8282\u70b9\u505a\u5de6\u65cb\uff0c\u7136\u540e\u518d\u5bf9\u03b1\u505a\u53f3\u65cb\uff1b \u5bf9\u4e8e\u53f3-\u5de6\u578b\uff0c\u73b0\u5bf9\u03b1\u7684\u53f3\u8282\u70b9\u505a\u53f3\u65cb\uff0c\u7136\u540e\u518d\u5bf9\u03b1\u505a\u5de6\u65cb B\u6811(B-Tree) \u2003\u5bf9\u4e8e\u6d77\u91cf\u6570\u636e\u53ea\u80fd\u5b58\u50a8\u5728\u78c1\u76d8\u4e2d\uff0c\u800c\u8bfb\u53d6\u78c1\u76d8\u901f\u5ea6\u8fdc\u5c0f\u4e8e\u8bfb\u53d6\u5185\u5b58\u901f\u5ea6\uff0c\u4e14\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u6570\u636e\u65f6\uff0c\u662f\u6309\u7167\u5757\u8fdb\u884c\u8bfb\u53d6\uff0c\u800c\u975e\u4e00\u6761\u4e00\u6761\u8bfb\u53d6\u3002\u5982\u679c\u91c7\u7528\u6811\u8fd9\u79cd\u7ed3\u6784\u4f5c\u4e3a\u6570\u636e\u7d22\u5f15\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5219\u6bcf\u6b21\u67e5\u627e\u6570\u636e\uff0c\u5373\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u8282\u70b9(\u4e5f\u5373\u4e00\u4e2a\u78c1\u76d8\u5757)\uff1b\u4f46\u65e0\u8bba\u662f\u4e8c\u53c9\u67e5\u627e\u6811\u8fd8\u662fAVL\u6811\uff0c\u5176\u6bcf\u4e2a\u8282\u70b9\u4ec5\u5b58\u50a8\u4e00\u5bf9key-value\uff0c\u56e0\u6b64\u6d77\u91cf\u6570\u636e\u4f1a\u9020\u6210\u975e\u5e38\u591a\u7684\u8282\u70b9\u6570\uff0c\u67e5\u627e\u6548\u7387\u4e5f\u5c06\u53d8\u5f97\u4f4e\u6548\u3002 \u2003\u800c\u9636\u6570\u4e3aM\u7684B\u6811\u662f\u4e00\u68f5M\u53c9\u6811\uff0c \u6bcf\u4e2a\u8282\u70b9\u53ef\u4ee5\u5b58\u50a8\u66f4\u591a\u5bf9key-value\uff0c\u4e14\u6bcf\u4e2a\u8282\u70b9\u4e5f\u5c06\u6709\u66f4\u591a\u7684\u5b50\u8282\u70b9\uff0c\u6574\u68f5\u6811\u7684\u9ad8\u5ea6\u5c06\u53d8\u5f97\u5f88\u4f4e( \u6700\u5c0f\u9ad8\u5ea6\u4e3aO(log M N), N\u4e3a\u8282\u70b9\u4e2a\u6570 )\uff0c\u67e5\u627e\u8282\u70b9(\u8bfb\u53d6\u78c1\u76d8)\u7684\u6b21\u6570\u4e5f\u5c06\u51cf\u5c11\u3002 B\u6811\u7684\u5177\u4f53\u5b9a\u4e49\u4e3a: 1\u3001\u6bcf\u4e2a\u8282\u70b9\u90fd\u5b58\u6709\u7d22\u5f15\u548c\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u5bf9\u5e94\u7684key\u548cvalue\u3002 2\u3001\u6839\u8282\u70b9\u5173\u952e\u5b57\u4e2a\u6570\u4e3a[1, M-1], \u5219\u5176\u5b50\u8282\u70b9\u4e2a\u6570\u4e3a[2, M]\u3002 3\u3001\u975e\u6839\u8282\u70b9\u5173\u952e\u5b57\u4e2a\u6570[M/2, M-1]\uff0c\u3002 4\u3001\u6bcf\u4e2a\u8282\u70b9\u4e2d\u7684\u5173\u952e\u5b57\u90fd\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5217\uff0c\u6bcf\u4e2a\u5173\u952e\u5b57\u7684\u5de6\u5b50\u6811\u4e2d\u7684\u6240\u6709\u5173\u952e\u5b57\u90fd\u5c0f\u4e8e\u5b83\uff0c \u800c\u53f3\u5b50\u6811\u4e2d\u7684\u6240\u6709\u5173\u952e\u5b57\u90fd\u5927\u4e8e\u5b83\u3002 5\u3001\u6240\u6709\u53f6\u5b50\u8282\u70b9\u90fd\u4f4d\u4e8e\u540c\u4e00\u5c42\uff0c\u6216\u8005\u8bf4\u6839\u8282\u70b9\u5230\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u957f\u5ea6\u90fd\u76f8\u540c\u3002 B\u6811\u63d2\u5165 \uff1a\u5224\u65ad\u5f53\u524d\u7ed3\u70b9key\u7684\u4e2a\u6570\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8eM-1\uff0c\u5982\u679c\u6ee1\u8db3\uff0c\u76f4\u63a5\u63d2\u5165\u5373\u53ef\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u8282\u70b9\u7684\u4e2d\u95f4\u7684key\u5c06\u8fd9\u4e2a\u8282\u70b9\u5206\u4e3a\u5de6\u53f3\u4e24\u90e8\u5206\uff0c\u4e2d\u95f4\u7684\u8282\u70b9\u653e\u5230\u7236\u8282\u70b9\u4e2d\u5373\u53ef B+\u6811 \uff1a \u5176\u4e0eB\u6811\u7684\u4e3b\u8981\u533a\u522b\u4e3a\uff1a B+\u6811\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9\uff1a\u5185\u90e8\u7ed3\u70b9\uff08\u4e5f\u79f0\u7d22\u5f15\u7ed3\u70b9\uff09\u548c\u53f6\u5b50\u7ed3\u70b9\u3002\u5185\u90e8\u8282\u70b9\u5c31\u662f\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u5185\u90e8\u8282\u70b9\u4e0d\u5b58\u50a8\u6570\u636e\uff0c\u53ea\u5b58\u50a8\u7d22\u5f15\uff0c\u6570\u636e\u90fd\u5b58\u50a8\u5728\u53f6\u5b50\u8282\u70b9\u3002B\u6811\u7684\u53f6\u5b50\u8282\u70b9\u4e0d\u4ec5\u5b58\u50a8key\uff0c\u4e5f\u5b58\u50a8value\uff1bB+\u6811\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\uff0c\u6570\u636e\u5e93\u4e2d\u9875\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u5982\u679c\u4e0d\u5b58\u50a8\u6570\u636e\uff0c\u5185\u90e8\u975e\u53f6\u5b50\u8282\u70b9\u5c31\u53ef\u4ee5\u5b58\u50a8\u66f4\u591a\u7684key\uff0c\u5219\u6574\u68f5\u6811\u7684\u9636\u6570\u5c31\u4f1a\u66f4\u5927\uff0c\u800c\u6811\u7684\u9ad8\u5ea6\u5c31\u4f1a\u51cf\u5c11\uff0c\u8bfb\u53d6\u78c1\u76d8\u7684\u6b21\u6570\u4e5f\u5c31\u51cf\u5c11\uff0c\u67e5\u627e\u6548\u7387\u5c31\u63d0\u9ad8\u4e86\u3002 \u6bcf\u4e2a\u8282\u70b9\u7684\u5173\u952e\u5b57\u4e2a\u6570\u7b49\u4e8e\u5206\u53c9\u6570(\u4e5f\u5c31\u662f\u5b50\u8282\u70b9\u4e2a\u6570) \u5185\u90e8\u7ed3\u70b9\u4e2d\u7684key\u90fd\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5217\uff0c\u5bf9\u4e8e\u5185\u90e8\u7ed3\u70b9\u4e2d\u7684\u4e00\u4e2akey\uff0c\u5de6\u6811\u4e2d\u7684\u6240\u6709key\u90fd\u5c0f\u4e8e\u5b83\uff0c\u53f3\u5b50\u6811\u4e2d\u7684key\u90fd\u5927\u4e8e\u7b49\u4e8e\u5b83\u3002\u53f6\u5b50\u7ed3\u70b9\u4e2d\u7684\u8bb0\u5f55\u4e5f\u6309\u7167key\u7684\u5927\u5c0f\u6392\u5217\u3002 \u53f6\u5b50\u7ed3\u70b9(\u78c1\u76d8\u9875)\u4e4b\u95f4\u901a\u8fc7\u53cc\u5411\u94fe\u8868\u8fde\u63a5,\u800c\u53f6\u5b50\u8282\u70b9\u4e2d\u7684\u6570\u636e\u4f9d\u636ekey\u503c\u5927\u5c0f,\u901a\u8fc7\u5355\u5411\u94fe\u8868\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u8fde\u63a5\u3002 \u7236\u8282\u70b9\u5b58\u6709\u53f3\u5b69\u5b50\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u3002 \u7ea2\u9ed1\u6811 \u2003\u7ea2\u9ed1\u6811\u662f\u4e00\u79cd\u81ea\u5e73\u8861\u6216\u8005\u534a\u5e73\u8861\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u5b83\u653e\u5f03\u4e86\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u7edd\u5bf9\u5e73\u8861\uff0c\u6362\u6765\u4e86\u8f83\u4e3a\u7b80\u5355\u7684\u53ef\u7ef4\u62a4\u6027\uff0c\u4f7f\u5f97\u4e8c\u53c9\u641c\u7d22\u6811\u63d2\u5165\u65b0\u6570\u636e\uff0c\u4ee5\u53ca\u641c\u7d22\u6570\u636e\u65f6\uff0c\u90fd\u5177\u6709\u4e0d\u9519\u7684\u641c\u7d22\u6027\u80fd\u3002 \u5177\u4f53\u5c5e\u6027\u5982\u4e0b: 0 \u6240\u6709\u8282\u70b9\u8981\u4e48\u662f\u7ea2\u8272\uff0c\u8981\u4e48\u662f\u9ed1\u8272 1 \u6839\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272 2 \u53f6\u5b50\u8282\u70b9\u90fd\u662f\u9ed1\u8272\u7684( \u8fd9\u91cc\u7684\u53f6\u5b50\u8282\u70b9\u6307\u7684\u662fnull\u8282\u70b9\uff0c\u4f8b\u5982\u8282\u70b9a\u6ca1\u6709\u5de6\u5b69\u5b50\uff0c\u5219\u5176\u5de6\u5b69\u5b50\u53ef\u4ee5\u89c6\u4e3aNull Leaf Node, \u4e3a\u9ed1\u8272 ) 3 \u53f6\u5b50\u8282\u70b9\u4e0d\u5305\u542b\u6570\u636e 4 \u6240\u6709\u975e\u53f6\u5b50\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u8282\u70b9 5 \u7ea2\u8272\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272\uff08\u4e0d\u80fd\u6709\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\uff09 6* \u4e00\u4e2a\u8282\u70b9\u5230\u5176\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u90fd\u5305\u542b\u540c\u6837\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9 \u2003\u7531\u5c5e\u60275\u30016\u77e5\uff0c\u6811\u4e2d\u6700\u957f\u8def\u5f84\u662f\u7ea2\u9ed1\u8282\u70b9\u4ea4\u66ff\u8def\u5f84\uff0c\u6700\u77ed\u8def\u5f84\u662f\u5177\u6709\u76f8\u540c\u6570\u76ee\u9ed1\u8272\u8282\u70b9\u7684\u2014\u2014\u53ea\u5305\u542b\u9ed1\u8272\u8282\u70b9\u7684\u8def\u5f84\uff0c\u56e0\u6b64 \u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u6700\u957f\u8def\u5f84\u4e0d\u4f1a\u8d85\u8fc7\u6700\u77ed\u8def\u5f84\u76842\u500d\u3002 \u2003\u5e76\u4e14\u7531\u6570\u5b66\u5f52\u7eb3\u6cd5\u53ef\u8bc1\u660e \u9ad8\u5ea6\u4e3ah\u7684\u7ea2\u9ed1\u6811\uff0c\u8282\u70b9\u4e2a\u6570\u81f3\u5c11\u4e3a2 h/2 -1\u4e2a \u3002 Trie(\u5b57\u5178\u6811/\u524d\u7f00\u6811) \u2003\u7528\u4e8e\u7edf\u8ba1\u548c\u6392\u5e8f\u5927\u91cf\u7684\u5b57\u7b26\u4e32\uff08\u4f46\u4e0d\u4ec5\u9650\u4e8e\u5b57\u7b26\u4e32\uff09\uff0c\u6240\u4ee5\u7ecf\u5e38\u88ab\u641c\u7d22\u5f15\u64ce\u7cfb\u7edf\u7528\u4e8e\u6587\u672c\u8bcd\u9891\u7edf\u8ba1\u3002\u5b83\u7684\u4f18\u70b9\u662f\uff1a\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u65e0\u8c13\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\u3002 \u2003Trie\u7684\u6838\u5fc3\u601d\u60f3\u662f\u7a7a\u95f4\u6362\u65f6\u95f4\u3002\u5229\u7528\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u7f00\u6765\u964d\u4f4e\u67e5\u8be2\u65f6\u95f4\u7684\u5f00\u9500\u4ee5\u8fbe\u5230\u63d0\u9ad8\u6548\u7387\u7684\u76ee\u7684\u3002 \u2003\u524d\u7f00\u6811\u76843\u4e2a\u57fa\u672c\u6027\u8d28\uff1a\u6839\u8282\u70b9\u4e0d\u5305\u542b\u5b57\u7b26\uff0c\u9664\u6839\u8282\u70b9\u5916\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53ea\u5305\u542b\u4e00\u4e2a\u5b57\u7b26; \u4ece\u6839\u8282\u70b9\u5230\u67d0\u4e00\u8282\u70b9\uff0c\u8def\u5f84\u4e0a\u7ecf\u8fc7\u7684\u5b57\u7b26\u8fde\u63a5\u8d77\u6765\uff0c\u4e3a\u8be5\u8282\u70b9\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32; \u6bcf\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u5305\u542b\u7684\u5b57\u7b26\u90fd\u4e0d\u76f8\u540c\u3002 \u2003 \u5b57\u5178\u6811\u7684\u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(logL)\uff0cL\u662f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 \u2003\u652f\u6301\u52a8\u6001\u67e5\u8be2\uff0c\u5373\u4e0d\u9700\u8981\u7b49\u5f85\u5b57\u7b26\u4e32\u8f93\u5165\u5b8c\u6bd5\u5373\u53ef\u8fdb\u884c\u5339\u914d\uff0c\u53ef\u7528\u4e8e\u5173\u952e\u5b57\u8054\u60f3","title":"Tree"},{"location":"DataStruct/Tree/#_1","text":"","title":"\u6570\u636e\u7ed3\u6784"},{"location":"DataStruct/Tree/#-","text":"\u8282\u70b9\u6df1\u5ea6: \u4ece\u6839\u8282\u70b9\u5230\u8be5\u8282\u70b9\u7684\u552f\u4e00\u8def\u5f84\u7684\u957f\u5ea6 \u8282\u70b9\u9ad8\uff1a\u8be5\u8282\u70b9\u5230\u4e00\u4e2a\u53f6\u8282\u70b9\u7684\u6700\u957f\u8def\u5f84\u7684\u957f\u5ea6 \u6811\u7684\u6df1\u5ea6\u7b49\u4e8e\u6811\u7684\u9ad8\u5ea6\uff0c\u662f\u6839\u8282\u70b9\u5230\u5176\u6700\u6df1\u6811\u53f6\u7684\u957f\u5ea6 \u6ee1\u4e8c\u53c9\u6811\uff1a\u9664\u6700\u540e\u4e00\u5c42\u65e0\u4efb\u4f55\u5b50\u8282\u70b9\u5916\uff0c\u6bcf\u4e00\u5c42\u4e0a\u7684\u6240\u6709\u7ed3\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\u3002\u9ad8\u5ea6\u4e3ah,\u5219\u8282\u70b9\u6570N=2 h+1 -1; h=O(log N) \u5b8c\u5168\u4e8c\u53c9\u6811\uff1a\u4e00\u68f5\u6df1\u5ea6\u4e3ak\u7684\u6709n\u4e2a\u7ed3\u70b9\u7684\u4e8c\u53c9\u6811\uff0c\u5bf9\u6811\u4e2d\u7684\u7ed3\u70b9\u6309\u4ece\u4e0a\u81f3\u4e0b\u3001\u4ece\u5de6\u5230\u53f3\u7684\u987a\u5e8f\u8fdb\u884c\u7f16\u53f7\uff0c\u5982\u679c\u7f16\u53f7\u4e3ai\uff081\u2264i\u2264n\uff09\u7684\u7ed3\u70b9\u4e0e\u6ee1\u4e8c\u53c9\u6811\u4e2d\u7f16\u53f7\u4e3ai\u7684\u7ed3\u70b9\u5728\u4e8c\u53c9\u6811\u4e2d\u7684\u4f4d\u7f6e\u76f8\u540c\uff0c\u5219\u8fd9\u68f5\u4e8c\u53c9\u6811\u79f0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u3002 \u2003\u9ad8\u5ea6h\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u8282\u70b9\u65702 h <=N<=2 h+1 -1\u3002 \u4e8c\u53c9\u67e5\u627e\u6811: \u4efb\u4f55\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u7684key\u503c\u90fd\u5c0f\u4e8e\u5f53\u524d\u8282\u70b9\u7684key\uff0c\u800c\u53f3\u5b50\u8282\u70b9\u7684key\u90fd\u5927\u4e8e\u5f53\u524d\u8282\u70b9\u7684key(\u8fd9\u91cckey\u5373\u662f\u7d22\u5f15)\uff1b\u4e8c\u53c9\u67e5\u627e\u6811\u7684\u5e73\u5747\u9ad8\u5ea6\u4e3aO(log N), N\u4e3a\u8282\u70b9\u4e2a\u6570\uff1b\u4f46\u5982\u679c\u5bf9\u5411\u4e00\u68f5\u6811\u8f93\u5165\u9884\u5148\u6392\u5e8f\u7684\u6570\u636e\uff0c\u6b64\u65f6\u4e8c\u53c9\u67e5\u627e\u6811\u4f1a\u9000\u5316\u6210\u5355\u5411\u94fe\u8868\uff0c\u67e5\u627e\u65f6\u95f4\u590d\u6742\u5ea6\u5c06\u53d8\u6210O(N)\u3002\u6545\u5f15\u51fa\u5e73\u8861\u4e8c\u53c9\u6811\u3002 \u4e8c\u53c9\u6811\u7684\u524d\u3001\u4e2d\u3001\u540e\u5e8f\u904d\u5386\u90fd\u53ef\u4ee5\u901a\u8fc7\u6808\u6765\u5b9e\u73b0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6O(N), \u7a7a\u95f4\u590d\u6742\u5ea6O(N); \u82e5\u91c7\u7528\u9012\u5f52\u8c03\u7528\uff0c\u989d\u5916\u7684\u9700\u8981\u51fd\u6570\u6808\u7a7a\u95f4O(N); \u91c7\u7528Morris\u904d\u5386\uff0c\u53ef\u4ee5\u5c06\u7a7a\u95f4\u590d\u6742\u5ea6\u964d\u5230O(1) \u3002 0\u3001 \u8bb0\u4f5c\u5f53\u524d\u8282\u70b9\u4e3acur\u3002 1\u3001 1_1. \u5982\u679ccur\u65e0\u5de6\u5b69\u5b50\uff0ccur=cur.right, \u76f4\u63a5\u5230\u7b2c3\u6b65 1_2. \u5982\u679ccur\u6709\u5de6\u5b69\u5b50\uff0c\u627e\u5230cur\u5de6\u5b50\u6811\u4e0a\u6700\u53f3\u7684\u8282\u70b9\uff0c\u8bb0\u4e3amostright 2\u3001 2_1. if(mostright.right==NULL), then mostright.right=cur, cur=cur.left 2_2. if(mostright.right==cur), then mostright.right=NULL, cur=cur.right \u2003 3\u3001 \u91cd\u590d1\u30012\u76f4\u81f3cur\u4e3a\u7a7a 4\u3001 \u8fd4\u56de\u7ed3\u679c \u2003 \u524d\u5e8f\u904d\u5386:\u57281_1\u6b65,\u628acur\u52a0\u5165\u5230\u7ed3\u679c\u540e\uff0ccur=cur.right; \u4ee5\u53ca\u57282_1\u6b65, \u5148\u628acur\u52a0\u5165\u5230\u7ed3\u679c\u4e2d, then cur=cur.left \u4e2d\u5e8f\u904d\u5386:\u57281_1\u6b65,\u628acur\u52a0\u5165\u5230\u7ed3\u679c\u540e\uff0ccur=cur.right; \u4ee5\u53ca\u57282_2\u6b65, \u5148\u628acur\u52a0\u5165\u5230\u7ed3\u679c\u4e2d, then cur=cur.right \u540e\u5e8f\u904d\u5386:\u57282_2\u8fd9\u4e00\u6b65,\u5c06\u4ececur\u7684\u5de6\u8282\u70b9\u5230mostright\u8282\u70b9\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9\u5012\u5e8f\u6dfb\u52a0\u7684\u7ed3\u679c\u4e2d(\u901a\u8fc7\u4e0b\u9762\u7684addPaths\u51fd\u6570); \u57284\u6b65, \u7ed3\u675f\u5faa\u73af\u540e\uff0c\u6b64\u65f6\u53ea\u5269\u4e0b\u6700\u53f3\u4fa7\u4e00\u6761\u8def\u5f84\u4e0a\u7684\u6240\u6709\u8282\u70b9(\u5305\u62ec\u6839\u8282\u70b9)\u5c1a\u672a\u6dfb\u52a0\u5230\u7ed3\u679c\u4e2d\u3002 \u603b\u7ed3: \u53ef\u4ee5\u770b\u51fa\u4e09\u79cd\u904d\u5386\uff0c\u5728morris\u7b97\u6cd5\u4e0b\uff0c\u6709\u76f8\u540c\u7684\u7ed3\u6784\uff0c \u533a\u522b\u5728\u4e8e\u6dfb\u52a0\u7ed3\u679c\u7684\u4f4d\u7f6e\uff0c\u4ee5\u53ca\u540e\u5e8f\u904d\u5386\u4f7f\u9700\u8981\u989d\u5916\u7684\u51fd\u6570\u6765\u5012\u5e8f\u6dfb\u52a0\u7ed3\u679c \u800c\u5c42\u5e8f\u904d\u5386\u9700\u8981\u901a\u8fc7\u961f\u5217\u5b9e\u73b0\u3002 #include<vector> #include<stack> #include<queue> struct TreeNode { int val; TreeNode* left; TreeNode* right; TreeNode() : val(0), left(nullptr), right(nullptr) {} TreeNode(int x) : val(x), left(nullptr), right(nullptr) {} TreeNode(int x, TreeNode* left, TreeNode* right) : val(x), left(left), right(right) {} }; class solution{ public: //\u524d\u5e8f\u904d\u5386 std::vector<int> preorderTraversal(TreeNode* root){ if(!root)return {}; std::vector<int> ans; std::stack<TreeNode*> st; while(root || !st.empty()){ while(root){ ans.push_back(root->val); st.push(root); root=root->left; } root = st.top()->right; st.pop(); } return ans; } //\u4e2d\u5e8f\u904d\u5386 std::vector<int> inorderTraversal(TreeNode* root){ if(!root)return {}; std::vector<int> ans; std::stack<TreeNode*> st; while(root || !st.empty()){ while(root){ st.push(root); root=root->left; } root=st.top(); st.pop(); ans.push_back(root->val); root=root->right; } return ans; } //\u540e\u5e8f\u904d\u5386, \u9664\u53bb\u9012\u5f52\uff0c\u63d0\u4f9b\u4e864\u79cd\u65b9\u6cd5\uff0c\u524d\u4e09\u79cd\u90fd\u9700\u8981O(N)\u7684\u7a7a\u95f4\u590d\u6742\u5ea6, morris\u53ea\u9700O(1)\u7a7a\u95f4\u590d\u6742\u5ea6 std::vector<int> postorderTraversal(TreeNode* root){ if(!root)return {}; std::vector<int> ans; std::stack<TreeNode*> st; st.push(root); TreeNode* cur; while(!st.empty()){ cur=st.top();st.pop(); if(cur){ st.push(cur->left); st.push(cur->right); ans.push_back(cur->val); //\u8bbf\u95ee\u987a\u5e8f: \u6839\u3001\u53f3\u3001\u5de6\uff0c\u5bf9\u7ed3\u679c\u9006\u5e8f } } std::reverse(ans.begin(), ans.end()); return ans; } std::vector<int> postorderTraversal2(TreeNode* root){ if(!root)return {}; std::vector<int> ans; std::stack<std::pair<TreeNode*, bool>> st; st.push(std::make_pair(root, false)); std::pair<TreeNode*, bool>* cur; while (!st.empty()) { cur = &st.top(); if(cur->second){//bool=true, \u8bf4\u660e\u662f\u5b50\u8282\u70b9\u5df2\u7ecf\u8bbf\u95ee\u4e86 ans.push_back(cur->first->val); st.pop(); }else{ //bool=false, \u8bf4\u660e\u5f53\u524d\u8282\u70b9\u7684\u5b50\u8282\u70b9\u5c1a\u672a\u8bbf\u95ee\uff0c\u5c06\u53f3\u5b69\u5b50\u548c\u5de6\u5b69\u5b50\u5148\u540e\u5165\u6808 cur->second=true; if(cur->first->right) st.push(std::make_pair(cur->first->right, false)); if(cur->first->left) st.push(std::make_pair(cur->first->left, false)); } } return ans; } std::vector<int> postorderTraversal3(TreeNode* root){ if(!root)return {}; std::vector<int> ans; std::stack<TreeNode*> st; TreeNode* prev; while(root || !st.empty()){ while(root){ st.push(root); root=root->left; } root = st.top(); if(!root->right || root->right==prev){ ans.push_back(root->val); prev=root; st.pop(); root=nullptr; }else root=root->right; } return ans; } //morros\u524d\u5e8f\u904d\u5386 std::vector<int> preorderTraversal2(TreeNode* root){ if(!root)return {}; std::vector<int> ans; TreeNode* cur=root, *next=nullptr; while (cur) { next=cur->left; if(next){ while(next->right && next->right!=cur) next=next->right; if(!next->right){ next->right=cur; ans.push_back(cur->val); cur=cur->left; }else{ next->right=nullptr; cur=cur->right; } }else { ans.push_back(cur->val); cur=cur->right; } } return ans; } //moris\u4e2d\u5e8f\u904d\u5386 std::vector<int> inorderTranversal2(TreeNode* root){ if(!root)return {}; std::vector<int> ans; TreeNode *cur=root, *next=nullptr; while(cur){ next=cur->left; if(next){ while (next->right && next->right!=cur) next=next->right; if(!next->right){ next->right=cur; cur=cur->left; }else{ next->right=nullptr; ans.push_back(cur->val); cur=cur->right; } }else{ ans.push_back(cur->val); cur=cur->right; } } return ans; } //morris\u540e\u5e8f\u904d\u5386 void addPath(vector<int> &vec, TreeNode *node) { int count = 0; while (node != nullptr) { ++count; vec.emplace_back(node->val); node = node->right; } reverse(vec.end() - count, vec.end()); } std::vector<int> postorderTraversal4(TreeNode* root){ if(!root)return {}; std::vector<int> ans; TreeNode *cur=root, *next=nullptr; while(cur){ next=cur->left; if(next){ while (next->right && next->right!=cur) next=next->right; if(!next->right){ next->right=cur; cur=cur->left; }else{ next->right=nullptr; addPath(ans, cur->left); cur=cur->right; } }else cur=cur->right; } addPath(ans, root); return ans; } //\u5c42\u5e8f\u904d\u5386 std::vector<int> LayerTraversal(TreeNode* root){ if(!root)return {}; std::vector<int> ans; std::queue<TreeNode*> qu; qu.push(root); while(!qu.empty()){ root=qu.front(); qu.pop(); ans.push_back(root->val); if(root->left)qu.push(root->left); if(root->right)qu.push(root->right); } return ans; } //\u7b2c\u4e8c\u79cd\u5f62\u5f0f\u7684\u5c42\u5e8f\u904d\u5386\uff0c\u53ea\u662f\u8fd4\u56de\u5f62\u5f0f\u4e0d\u540c std::vector<std::vector<int>> MulLayerTraversal(TreeNode* root){ if(!root)return {}; std::vector<std::vector<int>> ans; std::queue<TreeNode*> qu; qu.push(root); while(!qu.empty()){ int len=qu.size(); std::vector<int> tmp(len); for(int i=0;i<len;i++){ root=qu.front(); qu.pop(); tmp[i]=root->val; if(root->left)qu.push(root->left); if(root->right)qu.push(root->right); } ans.push_back(tmp); } return ans; } };","title":"\u6811-\u57fa\u672c\u6982\u5ff5"},{"location":"DataStruct/Tree/#avl","text":"\u5e73\u8861\u4e8c\u53c9\u6811 \uff0c\u5177\u6709\u4e8c\u53c9\u67e5\u627e\u6811\u5168\u90e8\u7279\u6027\uff0c\u4f46 \u6bcf\u4e2a\u8282\u70b9\u7684\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u9ad8\u5ea6\u6700\u591a\u5dee1\u7684\u4e8c\u53c9\u67e5\u627e\u6811 ( \u7a7a\u6811\u9ad8\u5ea6\u5b9a\u4e49\u4e3a-1 )\u3002 \u2003\u5728\u9ad8\u5ea6\u4e3ah\u7684AVL\u6811\u4e2d\uff0c\u6700\u5c11\u8282\u70b9\u6570S(h)=S(h-1)+S(h-2)+1\u5f97\u5230\u3002(S(0)=1, S(1)=2) \u2003\u5bf9\u4e8eN\u4e2a\u8282\u70b9\u7684AVL\u6811\uff0c\u6700\u574f\u67e5\u627e\u65f6\u95f4\u590d\u6742\u5ea6\u4e5f\u4e3aO(log N), \u4f46\u7531\u4e8e\u63d2\u5165\u6216\u5220\u9664\u8282\u70b9\u4f1a\u7834\u574f\u5e73\u8861\u6027\uff0c\u56e0\u6b64\u9700\u8981\u901a\u8fc7 \u65cb\u8f6c \u6765\u6062\u590d\u6811\u7684\u5e73\u8861\u6027\u3002\u5728\u9891\u7e41\u63d2\u5165\u548c\u5220\u9664\u573a\u666f\u4e0b\uff0c\u65cb\u8f6c\u662f\u5341\u5206\u8017\u65f6\u7684\uff0c\u56e0\u6b64\u53c8\u5f15\u51fa \u7ea2\u9ed1\u6811 \u3002 \u65cb\u8f6c\uff1a \u5728\u4e00\u6b21\u63d2\u5165\u4e4b\u548c\uff0c\u53ea\u6709\u90a3\u4e9b\u4ece\u63d2\u5165\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u4e0a\u7684\u8282\u70b9\u7684\u5e73\u8861\u53ef\u80fd\u4f1a\u88ab\u6539\u53d8\uff0c\u56e0\u4e3a\u53ea\u6709\u8fd9\u4e9b\u8282\u70b9\u7684\u5b50\u6811\u53ef\u80fd\u53d1\u751f\u53d8\u5316\u3002 \u6cbf\u63d2\u5165\u8282\u70b9\u4e0a\u884c\uff0c\u5c06\u6bcf\u4e00\u4e2a\u5fc5\u987b\u91cd\u65b0\u5e73\u8861\u7684\u8282\u70b9 \u53eb\u505a\u03b1\uff0c\u7531\u4e8e\u4efb\u610f\u8282\u70b9\u6700\u591a\u6709\u4e24\u4e2a\u513f\u5b50\uff0c\u53ef\u77e5\u5176\u4e24\u9897\u5b50\u6811\u7684\u9ad8\u5ea6\u4e00\u5b9a\u76f8\u5dee2\u3002 \u4e0d\u5e73\u8861\u53ef\u80fd\u67094\u79cd\u60c5\u51b5\uff1a \\1. \u5bf9\u03b1\u7684\u5de6\u513f\u5b50\u7684\u5de6\u5b50\u6811\u8fdb\u884c\u4e00\u6b21\u63d2\u5165(\u5de6-\u5de6)\uff1b \\2. \u5bf9\u03b1\u7684\u5de6\u513f\u5b50\u7684\u53f3\u5b50\u6811\u8fdb\u884c\u4e00\u6b21\u63d2\u5165(\u5de6-\u53f3)\uff1b \\3. \u5bf9\u03b1\u7684\u53f3\u513f\u5b50\u7684\u5de6\u5b50\u6811\u8fdb\u884c\u4e00\u6b21\u63d2\u5165(\u53f3-\u5de6)\uff1b \\4. \u5bf9\u03b1\u7684\u53f3\u513f\u5b50\u7684\u53f3\u5b50\u6811\u8fdb\u884c\u4e00\u6b21\u63d2\u5165(\u53f3-\u53f3)\uff1b \u60c5\u51b51\u548c4\uff0c2\u548c3\u5404\u81ea\u6210\u955c\u50cf \u5de6-\u5de6\u548c\u53f3-\u53f3\u53ef\u4ee5\u901a\u8fc7\u5355\u65cb\u8f6c\u6765\u5b8c\u6210\u8c03\u6574\uff0c\u5de6-\u53f3\u548c\u53f3-\u5de6\u5219\u9700\u901a\u8fc7\u53cc\u65cb\u8f6c\u6765\u8c03\u6574\u3002 1\u3001\u5de6-\u5de6\u578b\uff1a\u505a\u53f3\u65cb\u3002 2\u3001\u53f3-\u53f3\u578b\uff1a\u505a\u5de6\u65cb\u3002 3\u3001\u5de6-\u53f3\u578b\uff1a\u5148\u505a\u5de6\u65cb\uff0c\u540e\u505a\u53f3\u65cb\u3002 4\u3001\u53f3-\u5de6\u578b\uff1a\u5148\u505a\u53f3\u65cb\uff0c\u518d\u505a\u5de6\u65cb\u3002 \u53f3\u65cb: \u4ee5\u03b1\u7684\u5de6\u5b50\u8282\u70b9\u4ee3\u66ff\u5176\u4f4d\u7f6e\uff0c\u03b1\u6210\u4e3a\u65b0\u4f4d\u7f6e\u7684\u7684\u53f3\u8282\u70b9\uff0c\u539f\u5de6\u5b50\u8282\u70b9\u7684\u53f3\u5b50\u8282\u70b9\u6210\u4e3a\u03b1\u7684\u5de6\u5b50\u8282\u70b9\u3002 \u5de6\u65cb\uff1a\u4ee5\u03b1\u7684\u53f3\u5b50\u8282\u70b9\u4ee3\u66ff\u5176\u4f4d\u7f6e\uff0c\u03b1\u6210\u4e3a\u65b0\u4f4d\u7f6e\u7684\u7684\u5de6\u8282\u70b9\uff0c\u539f\u53f3\u5b50\u8282\u70b9\u7684\u5de6\u5b50\u8282\u70b9\u6210\u4e3a\u03b1\u7684\u53f3\u5b50\u8282\u70b9\u3002 \u5bf9\u4e8e\u5de6-\u53f3\u578b\uff0c\u5148\u5bf9\u03b1\u7684\u5de6\u8282\u70b9\u505a\u5de6\u65cb\uff0c\u7136\u540e\u518d\u5bf9\u03b1\u505a\u53f3\u65cb\uff1b \u5bf9\u4e8e\u53f3-\u5de6\u578b\uff0c\u73b0\u5bf9\u03b1\u7684\u53f3\u8282\u70b9\u505a\u53f3\u65cb\uff0c\u7136\u540e\u518d\u5bf9\u03b1\u505a\u5de6\u65cb","title":"AVL\u6811"},{"location":"DataStruct/Tree/#bb-tree","text":"\u5bf9\u4e8e\u6d77\u91cf\u6570\u636e\u53ea\u80fd\u5b58\u50a8\u5728\u78c1\u76d8\u4e2d\uff0c\u800c\u8bfb\u53d6\u78c1\u76d8\u901f\u5ea6\u8fdc\u5c0f\u4e8e\u8bfb\u53d6\u5185\u5b58\u901f\u5ea6\uff0c\u4e14\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u6570\u636e\u65f6\uff0c\u662f\u6309\u7167\u5757\u8fdb\u884c\u8bfb\u53d6\uff0c\u800c\u975e\u4e00\u6761\u4e00\u6761\u8bfb\u53d6\u3002\u5982\u679c\u91c7\u7528\u6811\u8fd9\u79cd\u7ed3\u6784\u4f5c\u4e3a\u6570\u636e\u7d22\u5f15\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5219\u6bcf\u6b21\u67e5\u627e\u6570\u636e\uff0c\u5373\u4ece\u78c1\u76d8\u4e2d\u8bfb\u53d6\u4e00\u4e2a\u8282\u70b9(\u4e5f\u5373\u4e00\u4e2a\u78c1\u76d8\u5757)\uff1b\u4f46\u65e0\u8bba\u662f\u4e8c\u53c9\u67e5\u627e\u6811\u8fd8\u662fAVL\u6811\uff0c\u5176\u6bcf\u4e2a\u8282\u70b9\u4ec5\u5b58\u50a8\u4e00\u5bf9key-value\uff0c\u56e0\u6b64\u6d77\u91cf\u6570\u636e\u4f1a\u9020\u6210\u975e\u5e38\u591a\u7684\u8282\u70b9\u6570\uff0c\u67e5\u627e\u6548\u7387\u4e5f\u5c06\u53d8\u5f97\u4f4e\u6548\u3002 \u2003\u800c\u9636\u6570\u4e3aM\u7684B\u6811\u662f\u4e00\u68f5M\u53c9\u6811\uff0c \u6bcf\u4e2a\u8282\u70b9\u53ef\u4ee5\u5b58\u50a8\u66f4\u591a\u5bf9key-value\uff0c\u4e14\u6bcf\u4e2a\u8282\u70b9\u4e5f\u5c06\u6709\u66f4\u591a\u7684\u5b50\u8282\u70b9\uff0c\u6574\u68f5\u6811\u7684\u9ad8\u5ea6\u5c06\u53d8\u5f97\u5f88\u4f4e( \u6700\u5c0f\u9ad8\u5ea6\u4e3aO(log M N), N\u4e3a\u8282\u70b9\u4e2a\u6570 )\uff0c\u67e5\u627e\u8282\u70b9(\u8bfb\u53d6\u78c1\u76d8)\u7684\u6b21\u6570\u4e5f\u5c06\u51cf\u5c11\u3002 B\u6811\u7684\u5177\u4f53\u5b9a\u4e49\u4e3a: 1\u3001\u6bcf\u4e2a\u8282\u70b9\u90fd\u5b58\u6709\u7d22\u5f15\u548c\u6570\u636e\uff0c\u4e5f\u5c31\u662f\u5bf9\u5e94\u7684key\u548cvalue\u3002 2\u3001\u6839\u8282\u70b9\u5173\u952e\u5b57\u4e2a\u6570\u4e3a[1, M-1], \u5219\u5176\u5b50\u8282\u70b9\u4e2a\u6570\u4e3a[2, M]\u3002 3\u3001\u975e\u6839\u8282\u70b9\u5173\u952e\u5b57\u4e2a\u6570[M/2, M-1]\uff0c\u3002 4\u3001\u6bcf\u4e2a\u8282\u70b9\u4e2d\u7684\u5173\u952e\u5b57\u90fd\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5217\uff0c\u6bcf\u4e2a\u5173\u952e\u5b57\u7684\u5de6\u5b50\u6811\u4e2d\u7684\u6240\u6709\u5173\u952e\u5b57\u90fd\u5c0f\u4e8e\u5b83\uff0c \u800c\u53f3\u5b50\u6811\u4e2d\u7684\u6240\u6709\u5173\u952e\u5b57\u90fd\u5927\u4e8e\u5b83\u3002 5\u3001\u6240\u6709\u53f6\u5b50\u8282\u70b9\u90fd\u4f4d\u4e8e\u540c\u4e00\u5c42\uff0c\u6216\u8005\u8bf4\u6839\u8282\u70b9\u5230\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u957f\u5ea6\u90fd\u76f8\u540c\u3002 B\u6811\u63d2\u5165 \uff1a\u5224\u65ad\u5f53\u524d\u7ed3\u70b9key\u7684\u4e2a\u6570\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8eM-1\uff0c\u5982\u679c\u6ee1\u8db3\uff0c\u76f4\u63a5\u63d2\u5165\u5373\u53ef\uff0c\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u8282\u70b9\u7684\u4e2d\u95f4\u7684key\u5c06\u8fd9\u4e2a\u8282\u70b9\u5206\u4e3a\u5de6\u53f3\u4e24\u90e8\u5206\uff0c\u4e2d\u95f4\u7684\u8282\u70b9\u653e\u5230\u7236\u8282\u70b9\u4e2d\u5373\u53ef B+\u6811 \uff1a \u5176\u4e0eB\u6811\u7684\u4e3b\u8981\u533a\u522b\u4e3a\uff1a B+\u6811\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9\uff1a\u5185\u90e8\u7ed3\u70b9\uff08\u4e5f\u79f0\u7d22\u5f15\u7ed3\u70b9\uff09\u548c\u53f6\u5b50\u7ed3\u70b9\u3002\u5185\u90e8\u8282\u70b9\u5c31\u662f\u975e\u53f6\u5b50\u8282\u70b9\uff0c\u5185\u90e8\u8282\u70b9\u4e0d\u5b58\u50a8\u6570\u636e\uff0c\u53ea\u5b58\u50a8\u7d22\u5f15\uff0c\u6570\u636e\u90fd\u5b58\u50a8\u5728\u53f6\u5b50\u8282\u70b9\u3002B\u6811\u7684\u53f6\u5b50\u8282\u70b9\u4e0d\u4ec5\u5b58\u50a8key\uff0c\u4e5f\u5b58\u50a8value\uff1bB+\u6811\u8fd9\u6837\u505a\u7684\u539f\u56e0\u662f\uff0c\u6570\u636e\u5e93\u4e2d\u9875\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u5982\u679c\u4e0d\u5b58\u50a8\u6570\u636e\uff0c\u5185\u90e8\u975e\u53f6\u5b50\u8282\u70b9\u5c31\u53ef\u4ee5\u5b58\u50a8\u66f4\u591a\u7684key\uff0c\u5219\u6574\u68f5\u6811\u7684\u9636\u6570\u5c31\u4f1a\u66f4\u5927\uff0c\u800c\u6811\u7684\u9ad8\u5ea6\u5c31\u4f1a\u51cf\u5c11\uff0c\u8bfb\u53d6\u78c1\u76d8\u7684\u6b21\u6570\u4e5f\u5c31\u51cf\u5c11\uff0c\u67e5\u627e\u6548\u7387\u5c31\u63d0\u9ad8\u4e86\u3002 \u6bcf\u4e2a\u8282\u70b9\u7684\u5173\u952e\u5b57\u4e2a\u6570\u7b49\u4e8e\u5206\u53c9\u6570(\u4e5f\u5c31\u662f\u5b50\u8282\u70b9\u4e2a\u6570) \u5185\u90e8\u7ed3\u70b9\u4e2d\u7684key\u90fd\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5217\uff0c\u5bf9\u4e8e\u5185\u90e8\u7ed3\u70b9\u4e2d\u7684\u4e00\u4e2akey\uff0c\u5de6\u6811\u4e2d\u7684\u6240\u6709key\u90fd\u5c0f\u4e8e\u5b83\uff0c\u53f3\u5b50\u6811\u4e2d\u7684key\u90fd\u5927\u4e8e\u7b49\u4e8e\u5b83\u3002\u53f6\u5b50\u7ed3\u70b9\u4e2d\u7684\u8bb0\u5f55\u4e5f\u6309\u7167key\u7684\u5927\u5c0f\u6392\u5217\u3002 \u53f6\u5b50\u7ed3\u70b9(\u78c1\u76d8\u9875)\u4e4b\u95f4\u901a\u8fc7\u53cc\u5411\u94fe\u8868\u8fde\u63a5,\u800c\u53f6\u5b50\u8282\u70b9\u4e2d\u7684\u6570\u636e\u4f9d\u636ekey\u503c\u5927\u5c0f,\u901a\u8fc7\u5355\u5411\u94fe\u8868\u4ece\u5c0f\u5230\u5927\u987a\u5e8f\u8fde\u63a5\u3002 \u7236\u8282\u70b9\u5b58\u6709\u53f3\u5b69\u5b50\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u3002","title":"B\u6811(B-Tree)"},{"location":"DataStruct/Tree/#_2","text":"\u7ea2\u9ed1\u6811\u662f\u4e00\u79cd\u81ea\u5e73\u8861\u6216\u8005\u534a\u5e73\u8861\u4e8c\u53c9\u67e5\u627e\u6811\uff0c\u5b83\u653e\u5f03\u4e86\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u7edd\u5bf9\u5e73\u8861\uff0c\u6362\u6765\u4e86\u8f83\u4e3a\u7b80\u5355\u7684\u53ef\u7ef4\u62a4\u6027\uff0c\u4f7f\u5f97\u4e8c\u53c9\u641c\u7d22\u6811\u63d2\u5165\u65b0\u6570\u636e\uff0c\u4ee5\u53ca\u641c\u7d22\u6570\u636e\u65f6\uff0c\u90fd\u5177\u6709\u4e0d\u9519\u7684\u641c\u7d22\u6027\u80fd\u3002 \u5177\u4f53\u5c5e\u6027\u5982\u4e0b: 0 \u6240\u6709\u8282\u70b9\u8981\u4e48\u662f\u7ea2\u8272\uff0c\u8981\u4e48\u662f\u9ed1\u8272 1 \u6839\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272 2 \u53f6\u5b50\u8282\u70b9\u90fd\u662f\u9ed1\u8272\u7684( \u8fd9\u91cc\u7684\u53f6\u5b50\u8282\u70b9\u6307\u7684\u662fnull\u8282\u70b9\uff0c\u4f8b\u5982\u8282\u70b9a\u6ca1\u6709\u5de6\u5b69\u5b50\uff0c\u5219\u5176\u5de6\u5b69\u5b50\u53ef\u4ee5\u89c6\u4e3aNull Leaf Node, \u4e3a\u9ed1\u8272 ) 3 \u53f6\u5b50\u8282\u70b9\u4e0d\u5305\u542b\u6570\u636e 4 \u6240\u6709\u975e\u53f6\u5b50\u8282\u70b9\u90fd\u6709\u4e24\u4e2a\u5b50\u8282\u70b9 5 \u7ea2\u8272\u8282\u70b9\u7684\u4e24\u4e2a\u5b50\u8282\u70b9\u5fc5\u987b\u662f\u9ed1\u8272\uff08\u4e0d\u80fd\u6709\u8fde\u7eed\u7684\u7ea2\u8272\u8282\u70b9\uff09 6* \u4e00\u4e2a\u8282\u70b9\u5230\u5176\u6240\u6709\u53f6\u5b50\u8282\u70b9\u7684\u8def\u5f84\u90fd\u5305\u542b\u540c\u6837\u6570\u76ee\u7684\u9ed1\u8272\u8282\u70b9 \u2003\u7531\u5c5e\u60275\u30016\u77e5\uff0c\u6811\u4e2d\u6700\u957f\u8def\u5f84\u662f\u7ea2\u9ed1\u8282\u70b9\u4ea4\u66ff\u8def\u5f84\uff0c\u6700\u77ed\u8def\u5f84\u662f\u5177\u6709\u76f8\u540c\u6570\u76ee\u9ed1\u8272\u8282\u70b9\u7684\u2014\u2014\u53ea\u5305\u542b\u9ed1\u8272\u8282\u70b9\u7684\u8def\u5f84\uff0c\u56e0\u6b64 \u6839\u8282\u70b9\u5230\u53f6\u5b50\u8282\u70b9\u7684\u6700\u957f\u8def\u5f84\u4e0d\u4f1a\u8d85\u8fc7\u6700\u77ed\u8def\u5f84\u76842\u500d\u3002 \u2003\u5e76\u4e14\u7531\u6570\u5b66\u5f52\u7eb3\u6cd5\u53ef\u8bc1\u660e \u9ad8\u5ea6\u4e3ah\u7684\u7ea2\u9ed1\u6811\uff0c\u8282\u70b9\u4e2a\u6570\u81f3\u5c11\u4e3a2 h/2 -1\u4e2a \u3002","title":"\u7ea2\u9ed1\u6811"},{"location":"DataStruct/Tree/#trie","text":"\u7528\u4e8e\u7edf\u8ba1\u548c\u6392\u5e8f\u5927\u91cf\u7684\u5b57\u7b26\u4e32\uff08\u4f46\u4e0d\u4ec5\u9650\u4e8e\u5b57\u7b26\u4e32\uff09\uff0c\u6240\u4ee5\u7ecf\u5e38\u88ab\u641c\u7d22\u5f15\u64ce\u7cfb\u7edf\u7528\u4e8e\u6587\u672c\u8bcd\u9891\u7edf\u8ba1\u3002\u5b83\u7684\u4f18\u70b9\u662f\uff1a\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u65e0\u8c13\u7684\u5b57\u7b26\u4e32\u6bd4\u8f83\u3002 \u2003Trie\u7684\u6838\u5fc3\u601d\u60f3\u662f\u7a7a\u95f4\u6362\u65f6\u95f4\u3002\u5229\u7528\u5b57\u7b26\u4e32\u7684\u516c\u5171\u524d\u7f00\u6765\u964d\u4f4e\u67e5\u8be2\u65f6\u95f4\u7684\u5f00\u9500\u4ee5\u8fbe\u5230\u63d0\u9ad8\u6548\u7387\u7684\u76ee\u7684\u3002 \u2003\u524d\u7f00\u6811\u76843\u4e2a\u57fa\u672c\u6027\u8d28\uff1a\u6839\u8282\u70b9\u4e0d\u5305\u542b\u5b57\u7b26\uff0c\u9664\u6839\u8282\u70b9\u5916\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u53ea\u5305\u542b\u4e00\u4e2a\u5b57\u7b26; \u4ece\u6839\u8282\u70b9\u5230\u67d0\u4e00\u8282\u70b9\uff0c\u8def\u5f84\u4e0a\u7ecf\u8fc7\u7684\u5b57\u7b26\u8fde\u63a5\u8d77\u6765\uff0c\u4e3a\u8be5\u8282\u70b9\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32; \u6bcf\u4e2a\u8282\u70b9\u7684\u6240\u6709\u5b50\u8282\u70b9\u5305\u542b\u7684\u5b57\u7b26\u90fd\u4e0d\u76f8\u540c\u3002 \u2003 \u5b57\u5178\u6811\u7684\u67e5\u8be2\u65f6\u95f4\u590d\u6742\u5ea6\u662fO(logL)\uff0cL\u662f\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 \u2003\u652f\u6301\u52a8\u6001\u67e5\u8be2\uff0c\u5373\u4e0d\u9700\u8981\u7b49\u5f85\u5b57\u7b26\u4e32\u8f93\u5165\u5b8c\u6bd5\u5373\u53ef\u8fdb\u884c\u5339\u914d\uff0c\u53ef\u7528\u4e8e\u5173\u952e\u5b57\u8054\u60f3","title":"Trie(\u5b57\u5178\u6811/\u524d\u7f00\u6811)"},{"location":"DesignPattern/Creational/","text":"\u521b\u5efa\u578b\u6a21\u5f0f \u521b\u5efa\u578b\u6a21\u5f0f\u63d0\u4f9b\u4e86\u521b\u5efa\u5bf9\u8c61\u7684\u673a\u5236\uff0c \u80fd\u591f\u63d0\u5347\u5df2\u6709\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u590d\u7528\u6027\u3002 \u5355\u4f8b\u6a21\u5f0f \u2003\u4fdd\u8bc1\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b(\u63a7\u5236\u67d0\u4e9b\u5171\u4eab\u8d44\u6e90 \uff08\u4f8b\u5982\u6570\u636e\u5e93\u6216\u6587\u4ef6\uff09 \u7684\u8bbf\u95ee\u6743\u9650); \u2003\u4e3a\u8be5\u5b9e\u4f8b\u63d0\u4f9b\u4e00\u4e2a\u5168\u5c40\u8bbf\u95ee\u8282\u70b9\u3002 \u5b9e\u73b0 \u5c06\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u8bbe\u4e3a\u79c1\u6709: \u9632\u6b62\u5176\u4ed6\u5bf9\u8c61\u4f7f\u7528\u5355\u4f8b\u7c7b\u7684 new\u8fd0\u7b97\u7b26\u3002 \u65b0\u5efa\u4e00\u4e2a\u9759\u6001\u6784\u5efa\u65b9\u6cd5\u4f5c\u4e3a\u6784\u9020\u51fd\u6570: \u8be5\u51fd\u6570\u4f1a \u201c\u5077\u5077\u201d \u8c03\u7528\u79c1\u6709\u6784\u9020\u51fd\u6570\u6765\u521b\u5efa\u5bf9\u8c61\uff0c \u5e76\u5c06\u5176\u4fdd\u5b58\u5728\u4e00\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e2d, \u6b64\u540e\u6240\u6709\u5bf9\u4e8e\u8be5\u51fd\u6570\u7684\u8c03\u7528\u90fd\u5c06\u8fd4\u56de\u8fd9\u4e00\u7f13\u5b58\u5bf9\u8c61\u3002 class Singleton { private: static Singleton * pinstance_; static std::mutex mutex_; protected: Singleton(const std::string value): value_(value){} ~Singleton() {} std::string value_; public: Singleton(Singleton &other) = delete; void operator=(const Singleton &) = delete; static Singleton *GetInstance(const std::string& value); void SomeBusinessLogic(){// ...} std::string value() const{ return value_; } }; /** * Static methods should be defined outside the class. */ Singleton* Singleton::pinstance_{nullptr}; std::mutex Singleton::mutex_; /** * The first time we call GetInstance we will lock the storage location * and then we make sure again that the variable is null and then we * set the value. RU: */ Singleton *Singleton::GetInstance(const std::string& value) { std::lock_guard<std::mutex> lock(mutex_); if (pinstance_ == nullptr) { pinstance_ = new Singleton(value); } return pinstance_; } void ThreadFoo(){ // Following code emulates slow initialization. std::this_thread::sleep_for(std::chrono::milliseconds(1000)); Singleton* singleton = Singleton::GetInstance(\"FOO\"); std::cout << singleton->value() << \"\\n\"; } void ThreadBar(){ // Following code emulates slow initialization. std::this_thread::sleep_for(std::chrono::milliseconds(1000)); Singleton* singleton = Singleton::GetInstance(\"BAR\"); std::cout << singleton->value() << \"\\n\"; } int main() { std::cout <<\"If you see the same value, then singleton was reused (yay!\\n\" << \"If you see different values, then 2 singletons were created (booo!!)\\n\\n\" << \"RESULT:\\n\"; std::thread t1(ThreadFoo); std::thread t2(ThreadBar); t1.join(); t2.join(); return 0; \u5de5\u5382\u6a21\u5f0f \u2003\u5b9a\u4e49\u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u63a5\u53e3\uff0c\u8ba9\u5176\u5b50\u7c7b\u81ea\u5df1\u51b3\u5b9a\u5b9e\u4f8b\u5316\u54ea\u4e00\u4e2a\u5de5\u5382\u7c7b\uff0c\u5de5\u5382\u6a21\u5f0f\u4f7f\u5176\u521b\u5efa\u8fc7\u7a0b\u5ef6\u8fdf\u5230\u5b50\u7c7b\u8fdb\u884c\u3002 \u2003\u4f18\u70b9\uff1a 1\u3001\u4e00\u4e2a\u8c03\u7528\u8005\u60f3\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u53ea\u8981\u77e5\u9053\u5176\u540d\u79f0\u5c31\u53ef\u4ee5\u4e86\u3002 2\u3001\u6269\u5c55\u6027\u9ad8\uff0c\u5982\u679c\u60f3\u589e\u52a0\u4e00\u4e2a\u4ea7\u54c1\uff0c\u53ea\u8981\u6269\u5c55\u4e00\u4e2a\u5de5\u5382\u7c7b\u5c31\u53ef\u4ee5\u3002 3\u3001\u5c4f\u853d\u4ea7\u54c1\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u8c03\u7528\u8005\u53ea\u5173\u5fc3\u4ea7\u54c1\u7684\u63a5\u53e3\u3002 \u2003\u7f3a\u70b9\uff1a\u6bcf\u6b21\u589e\u52a0\u4e00\u4e2a\u4ea7\u54c1\u65f6\uff0c\u90fd\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u5177\u4f53\u7c7b\u548c\u5bf9\u8c61\u5b9e\u73b0\u5de5\u5382\uff0c\u4f7f\u5f97\u7cfb\u7edf\u4e2d\u7c7b\u7684\u4e2a\u6570\u6210\u500d\u589e\u52a0\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u589e\u52a0\u4e86\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\uff0c\u540c\u65f6\u4e5f\u589e\u52a0\u4e86\u7cfb\u7edf\u5177\u4f53\u7c7b\u7684\u4f9d\u8d56\u3002\u8fd9\u5e76\u4e0d\u662f\u4ec0\u4e48\u597d\u4e8b\u3002 //\u521b\u5efa\u63a5\u53e3 //Shape.java public interface Shape { void draw(); } //\u521b\u5efa\u5b9e\u73b0\u63a5\u53e3\u7684\u5b9e\u4f53\u7c7b\u3002 //Rectangle.java public class Rectangle implements Shape { @Override public void draw() { System.out.println(\"Inside Rectangle::draw() method.\"); } } //Square.java public class Square implements Shape { @Override public void draw() { System.out.println(\"Inside Square::draw() method.\"); } } //Circle.java public class Circle implements Shape { @Override public void draw() { System.out.println(\"Inside Circle::draw() method.\"); } } //\u521b\u5efa\u4e00\u4e2a\u5de5\u5382\uff0c\u751f\u6210\u57fa\u4e8e\u7ed9\u5b9a\u4fe1\u606f\u7684\u5b9e\u4f53\u7c7b\u7684\u5bf9\u8c61\u3002 //ShapeFactory.java public class ShapeFactory { //\u4f7f\u7528 getShape \u65b9\u6cd5\u83b7\u53d6\u5f62\u72b6\u7c7b\u578b\u7684\u5bf9\u8c61 public Shape getShape(String shapeType){ if(shapeType == null){ return null; } if(shapeType.equalsIgnoreCase(\"CIRCLE\")){ return new Circle(); } else if(shapeType.equalsIgnoreCase(\"RECTANGLE\")){ return new Rectangle(); } else if(shapeType.equalsIgnoreCase(\"SQUARE\")){ return new Square(); } return null; } } //\u4f7f\u7528\u8be5\u5de5\u5382\uff0c\u901a\u8fc7\u4f20\u9012\u7c7b\u578b\u4fe1\u606f\u6765\u83b7\u53d6\u5b9e\u4f53\u7c7b\u7684\u5bf9\u8c61\u3002 //FactoryPatternDemo.java public class FactoryPatternDemo { public static void main(String[] args) { ShapeFactory shapeFactory = new ShapeFactory(); //\u83b7\u53d6 Circle \u7684\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u5b83\u7684 draw \u65b9\u6cd5 Shape shape1 = shapeFactory.getShape(\"CIRCLE\"); //\u8c03\u7528 Circle \u7684 draw \u65b9\u6cd5 shape1.draw(); //\u83b7\u53d6 Rectangle \u7684\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u5b83\u7684 draw \u65b9\u6cd5 Shape shape2 = shapeFactory.getShape(\"RECTANGLE\"); //\u8c03\u7528 Rectangle \u7684 draw \u65b9\u6cd5 shape2.draw(); //\u83b7\u53d6 Square \u7684\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u5b83\u7684 draw \u65b9\u6cd5 Shape shape3 = shapeFactory.getShape(\"SQUARE\"); //\u8c03\u7528 Square \u7684 draw \u65b9\u6cd5 shape3.draw(); } } \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f \u2003\u56f4\u7ed5\u4e00\u4e2a\u8d85\u7ea7\u5de5\u5382\u521b\u5efa\u5176\u4ed6\u5de5\u5382, \u8be5\u8d85\u7ea7\u5de5\u5382\u53c8\u79f0\u4e3a\u5176\u4ed6\u5de5\u5382\u7684\u5de5\u5382;\u5728\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u4e2d\uff0c\u63a5\u53e3\u662f\u8d1f\u8d23\u521b\u5efa\u4e00\u4e2a\u76f8\u5173\u5bf9\u8c61\u7684\u5de5\u5382\uff0c \u4e0d\u9700\u8981\u663e\u5f0f\u6307\u5b9a\u5b83\u4eec\u7684\u7c7b\u3002\u6bcf\u4e2a\u751f\u6210\u7684\u5de5\u5382\u90fd\u80fd\u6309\u7167\u5de5\u5382\u6a21\u5f0f\u63d0\u4f9b\u5bf9\u8c61\u3002 \u2003\u5982\u679c\u4ee3\u7801\u9700\u8981\u4e0e\u591a\u4e2a\u4e0d\u540c\u7cfb\u5217\u7684\u76f8\u5173\u4ea7\u54c1\u4ea4\u4e92\uff0c \u4f46\u662f\u7531\u4e8e\u65e0\u6cd5\u63d0\u524d\u83b7\u53d6\u76f8\u5173\u4fe1\u606f\uff0c \u6216\u8005\u51fa\u4e8e\u5bf9\u672a\u6765\u6269\u5c55\u6027\u7684\u8003\u8651\uff0c \u4f60\u4e0d\u5e0c\u671b\u4ee3\u7801\u57fa\u4e8e\u4ea7\u54c1\u7684\u5177\u4f53\u7c7b\u8fdb\u884c\u6784\u5efa\uff0c \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c \u4f60\u53ef\u4ee5\u4f7f\u7528\u62bd\u8c61\u5de5\u5382\u3002 \u2003\u62bd\u8c61\u5de5\u5382\u4e3a\u4f60\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3\uff0c \u53ef\u7528\u4e8e\u521b\u5efa\u6bcf\u4e2a\u7cfb\u5217\u4ea7\u54c1\u7684\u5bf9\u8c61\u3002 \u53ea\u8981\u4ee3\u7801\u901a\u8fc7\u8be5\u63a5\u53e3\u521b\u5efa\u5bf9\u8c61\uff0c \u90a3\u4e48\u4f60\u5c31\u4e0d\u4f1a\u751f\u6210\u4e0e\u5e94\u7528\u7a0b\u5e8f\u5df2\u751f\u6210\u7684\u4ea7\u54c1\u7c7b\u578b\u4e0d\u4e00\u81f4\u7684\u4ea7\u54c1\u3002","title":"\u521b\u5efa\u578b\u6a21\u5f0f"},{"location":"DesignPattern/Creational/#_1","text":"\u521b\u5efa\u578b\u6a21\u5f0f\u63d0\u4f9b\u4e86\u521b\u5efa\u5bf9\u8c61\u7684\u673a\u5236\uff0c \u80fd\u591f\u63d0\u5347\u5df2\u6709\u4ee3\u7801\u7684\u7075\u6d3b\u6027\u548c\u53ef\u590d\u7528\u6027\u3002","title":"\u521b\u5efa\u578b\u6a21\u5f0f"},{"location":"DesignPattern/Creational/#_2","text":"\u4fdd\u8bc1\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b(\u63a7\u5236\u67d0\u4e9b\u5171\u4eab\u8d44\u6e90 \uff08\u4f8b\u5982\u6570\u636e\u5e93\u6216\u6587\u4ef6\uff09 \u7684\u8bbf\u95ee\u6743\u9650); \u2003\u4e3a\u8be5\u5b9e\u4f8b\u63d0\u4f9b\u4e00\u4e2a\u5168\u5c40\u8bbf\u95ee\u8282\u70b9\u3002 \u5b9e\u73b0 \u5c06\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u8bbe\u4e3a\u79c1\u6709: \u9632\u6b62\u5176\u4ed6\u5bf9\u8c61\u4f7f\u7528\u5355\u4f8b\u7c7b\u7684 new\u8fd0\u7b97\u7b26\u3002 \u65b0\u5efa\u4e00\u4e2a\u9759\u6001\u6784\u5efa\u65b9\u6cd5\u4f5c\u4e3a\u6784\u9020\u51fd\u6570: \u8be5\u51fd\u6570\u4f1a \u201c\u5077\u5077\u201d \u8c03\u7528\u79c1\u6709\u6784\u9020\u51fd\u6570\u6765\u521b\u5efa\u5bf9\u8c61\uff0c \u5e76\u5c06\u5176\u4fdd\u5b58\u5728\u4e00\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\u4e2d, \u6b64\u540e\u6240\u6709\u5bf9\u4e8e\u8be5\u51fd\u6570\u7684\u8c03\u7528\u90fd\u5c06\u8fd4\u56de\u8fd9\u4e00\u7f13\u5b58\u5bf9\u8c61\u3002 class Singleton { private: static Singleton * pinstance_; static std::mutex mutex_; protected: Singleton(const std::string value): value_(value){} ~Singleton() {} std::string value_; public: Singleton(Singleton &other) = delete; void operator=(const Singleton &) = delete; static Singleton *GetInstance(const std::string& value); void SomeBusinessLogic(){// ...} std::string value() const{ return value_; } }; /** * Static methods should be defined outside the class. */ Singleton* Singleton::pinstance_{nullptr}; std::mutex Singleton::mutex_; /** * The first time we call GetInstance we will lock the storage location * and then we make sure again that the variable is null and then we * set the value. RU: */ Singleton *Singleton::GetInstance(const std::string& value) { std::lock_guard<std::mutex> lock(mutex_); if (pinstance_ == nullptr) { pinstance_ = new Singleton(value); } return pinstance_; } void ThreadFoo(){ // Following code emulates slow initialization. std::this_thread::sleep_for(std::chrono::milliseconds(1000)); Singleton* singleton = Singleton::GetInstance(\"FOO\"); std::cout << singleton->value() << \"\\n\"; } void ThreadBar(){ // Following code emulates slow initialization. std::this_thread::sleep_for(std::chrono::milliseconds(1000)); Singleton* singleton = Singleton::GetInstance(\"BAR\"); std::cout << singleton->value() << \"\\n\"; } int main() { std::cout <<\"If you see the same value, then singleton was reused (yay!\\n\" << \"If you see different values, then 2 singletons were created (booo!!)\\n\\n\" << \"RESULT:\\n\"; std::thread t1(ThreadFoo); std::thread t2(ThreadBar); t1.join(); t2.join(); return 0;","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"DesignPattern/Creational/#_3","text":"\u5b9a\u4e49\u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u63a5\u53e3\uff0c\u8ba9\u5176\u5b50\u7c7b\u81ea\u5df1\u51b3\u5b9a\u5b9e\u4f8b\u5316\u54ea\u4e00\u4e2a\u5de5\u5382\u7c7b\uff0c\u5de5\u5382\u6a21\u5f0f\u4f7f\u5176\u521b\u5efa\u8fc7\u7a0b\u5ef6\u8fdf\u5230\u5b50\u7c7b\u8fdb\u884c\u3002 \u2003\u4f18\u70b9\uff1a 1\u3001\u4e00\u4e2a\u8c03\u7528\u8005\u60f3\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u53ea\u8981\u77e5\u9053\u5176\u540d\u79f0\u5c31\u53ef\u4ee5\u4e86\u3002 2\u3001\u6269\u5c55\u6027\u9ad8\uff0c\u5982\u679c\u60f3\u589e\u52a0\u4e00\u4e2a\u4ea7\u54c1\uff0c\u53ea\u8981\u6269\u5c55\u4e00\u4e2a\u5de5\u5382\u7c7b\u5c31\u53ef\u4ee5\u3002 3\u3001\u5c4f\u853d\u4ea7\u54c1\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u8c03\u7528\u8005\u53ea\u5173\u5fc3\u4ea7\u54c1\u7684\u63a5\u53e3\u3002 \u2003\u7f3a\u70b9\uff1a\u6bcf\u6b21\u589e\u52a0\u4e00\u4e2a\u4ea7\u54c1\u65f6\uff0c\u90fd\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u5177\u4f53\u7c7b\u548c\u5bf9\u8c61\u5b9e\u73b0\u5de5\u5382\uff0c\u4f7f\u5f97\u7cfb\u7edf\u4e2d\u7c7b\u7684\u4e2a\u6570\u6210\u500d\u589e\u52a0\uff0c\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u589e\u52a0\u4e86\u7cfb\u7edf\u7684\u590d\u6742\u5ea6\uff0c\u540c\u65f6\u4e5f\u589e\u52a0\u4e86\u7cfb\u7edf\u5177\u4f53\u7c7b\u7684\u4f9d\u8d56\u3002\u8fd9\u5e76\u4e0d\u662f\u4ec0\u4e48\u597d\u4e8b\u3002 //\u521b\u5efa\u63a5\u53e3 //Shape.java public interface Shape { void draw(); } //\u521b\u5efa\u5b9e\u73b0\u63a5\u53e3\u7684\u5b9e\u4f53\u7c7b\u3002 //Rectangle.java public class Rectangle implements Shape { @Override public void draw() { System.out.println(\"Inside Rectangle::draw() method.\"); } } //Square.java public class Square implements Shape { @Override public void draw() { System.out.println(\"Inside Square::draw() method.\"); } } //Circle.java public class Circle implements Shape { @Override public void draw() { System.out.println(\"Inside Circle::draw() method.\"); } } //\u521b\u5efa\u4e00\u4e2a\u5de5\u5382\uff0c\u751f\u6210\u57fa\u4e8e\u7ed9\u5b9a\u4fe1\u606f\u7684\u5b9e\u4f53\u7c7b\u7684\u5bf9\u8c61\u3002 //ShapeFactory.java public class ShapeFactory { //\u4f7f\u7528 getShape \u65b9\u6cd5\u83b7\u53d6\u5f62\u72b6\u7c7b\u578b\u7684\u5bf9\u8c61 public Shape getShape(String shapeType){ if(shapeType == null){ return null; } if(shapeType.equalsIgnoreCase(\"CIRCLE\")){ return new Circle(); } else if(shapeType.equalsIgnoreCase(\"RECTANGLE\")){ return new Rectangle(); } else if(shapeType.equalsIgnoreCase(\"SQUARE\")){ return new Square(); } return null; } } //\u4f7f\u7528\u8be5\u5de5\u5382\uff0c\u901a\u8fc7\u4f20\u9012\u7c7b\u578b\u4fe1\u606f\u6765\u83b7\u53d6\u5b9e\u4f53\u7c7b\u7684\u5bf9\u8c61\u3002 //FactoryPatternDemo.java public class FactoryPatternDemo { public static void main(String[] args) { ShapeFactory shapeFactory = new ShapeFactory(); //\u83b7\u53d6 Circle \u7684\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u5b83\u7684 draw \u65b9\u6cd5 Shape shape1 = shapeFactory.getShape(\"CIRCLE\"); //\u8c03\u7528 Circle \u7684 draw \u65b9\u6cd5 shape1.draw(); //\u83b7\u53d6 Rectangle \u7684\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u5b83\u7684 draw \u65b9\u6cd5 Shape shape2 = shapeFactory.getShape(\"RECTANGLE\"); //\u8c03\u7528 Rectangle \u7684 draw \u65b9\u6cd5 shape2.draw(); //\u83b7\u53d6 Square \u7684\u5bf9\u8c61\uff0c\u5e76\u8c03\u7528\u5b83\u7684 draw \u65b9\u6cd5 Shape shape3 = shapeFactory.getShape(\"SQUARE\"); //\u8c03\u7528 Square \u7684 draw \u65b9\u6cd5 shape3.draw(); } }","title":"\u5de5\u5382\u6a21\u5f0f"},{"location":"DesignPattern/Creational/#_4","text":"\u56f4\u7ed5\u4e00\u4e2a\u8d85\u7ea7\u5de5\u5382\u521b\u5efa\u5176\u4ed6\u5de5\u5382, \u8be5\u8d85\u7ea7\u5de5\u5382\u53c8\u79f0\u4e3a\u5176\u4ed6\u5de5\u5382\u7684\u5de5\u5382;\u5728\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u4e2d\uff0c\u63a5\u53e3\u662f\u8d1f\u8d23\u521b\u5efa\u4e00\u4e2a\u76f8\u5173\u5bf9\u8c61\u7684\u5de5\u5382\uff0c \u4e0d\u9700\u8981\u663e\u5f0f\u6307\u5b9a\u5b83\u4eec\u7684\u7c7b\u3002\u6bcf\u4e2a\u751f\u6210\u7684\u5de5\u5382\u90fd\u80fd\u6309\u7167\u5de5\u5382\u6a21\u5f0f\u63d0\u4f9b\u5bf9\u8c61\u3002 \u2003\u5982\u679c\u4ee3\u7801\u9700\u8981\u4e0e\u591a\u4e2a\u4e0d\u540c\u7cfb\u5217\u7684\u76f8\u5173\u4ea7\u54c1\u4ea4\u4e92\uff0c \u4f46\u662f\u7531\u4e8e\u65e0\u6cd5\u63d0\u524d\u83b7\u53d6\u76f8\u5173\u4fe1\u606f\uff0c \u6216\u8005\u51fa\u4e8e\u5bf9\u672a\u6765\u6269\u5c55\u6027\u7684\u8003\u8651\uff0c \u4f60\u4e0d\u5e0c\u671b\u4ee3\u7801\u57fa\u4e8e\u4ea7\u54c1\u7684\u5177\u4f53\u7c7b\u8fdb\u884c\u6784\u5efa\uff0c \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c \u4f60\u53ef\u4ee5\u4f7f\u7528\u62bd\u8c61\u5de5\u5382\u3002 \u2003\u62bd\u8c61\u5de5\u5382\u4e3a\u4f60\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63a5\u53e3\uff0c \u53ef\u7528\u4e8e\u521b\u5efa\u6bcf\u4e2a\u7cfb\u5217\u4ea7\u54c1\u7684\u5bf9\u8c61\u3002 \u53ea\u8981\u4ee3\u7801\u901a\u8fc7\u8be5\u63a5\u53e3\u521b\u5efa\u5bf9\u8c61\uff0c \u90a3\u4e48\u4f60\u5c31\u4e0d\u4f1a\u751f\u6210\u4e0e\u5e94\u7528\u7a0b\u5e8f\u5df2\u751f\u6210\u7684\u4ea7\u54c1\u7c7b\u578b\u4e0d\u4e00\u81f4\u7684\u4ea7\u54c1\u3002","title":"\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f"},{"location":"Java/0_base/","text":"Java \u57fa\u7840\u8bed\u6cd5 \u57fa\u672c\u7c7b\u578b \u6574\u578b: int\\short\\long\\byte\uff0c\u4f9d\u6b21\u9700\u89814\u30012\u30018\u30011\u4e2a\u5b57\u8282\u5927\u5c0f\uff1b\u53ef\u4ee5\u4e3a\u6570\u5b57\u5b57\u9762\u91cf\u52a0\u4e0b\u5212\u7ebf\uff0c \u5982 1_000_000\u8868\u793a\u4e00\u767e\u4e07\uff1b\u5728Java\u4e2d\u6ca1\u6709\u65e0\u7b26\u53f7\u7c7b\u578b\u3002 \u2003 \u6d6e\u70b9\u7c7b\u578b: float\\double\uff0c\u5206\u522b\u53604\u30018\u4e2a\u5b57\u8282\uff1b\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u4f1a\u5b58\u5728\u6d6e\u70b9\u8bef\u5dee(2.0-1.1=0.8999999999999999)\uff0c \u5bf9\u4e8e\u6d89\u53ca\u5230\u91d1\u989d\u7684\u8ba1\u7b97\uff0c\u91c7\u7528BigDecimal\u7c7b\u53ef\u4ee5\u907f\u514d\u8bef\u5dee\u3002BigDecimal\u662f\u4e00\u4e2a\u7c7b\uff0c\u6784\u9020\u5668 BigDecimal(int)\u3001BigDecimal(double)\u3001BigDecimal(long)\u3001BigDecimal(String) ; \u5bf9\u4e8e\u4ee5\u6d6e\u70b9\u6570\u6765\u6784\u9020BigDecimal\uff0c\u4e0d\u63a8\u8350BigDecimal(double), \u56e0\u4e3a\u8bb8\u591a\u5c0f\u6570\u65e0\u6cd5\u5b8c\u5168\u5199\u6210\u4e8c\u673a\u5236\u5f62\u5f0f\uff1b \u63a8\u8350\u4f7f\u7528BigDecimal(String), \u4f8b\u5982BigDecimal(\"0.1\"), \u6216\u8005 BigDecimal.valueOf(0.1); \u505a\u8fd0\u7b97\u7684\u53cc\u65b9\uff0c\u4e00\u65b9\u91c7\u7528\u4e0a\u8ff0\u5f62\u5f0f\uff0c\u5219\u7ed3\u679c\u4e5f\u80fd\u6b63\u786e\u663e\u793a: BigDecimal b1 = new BigDecimal(2.2), b2=new BigDecimal(1.0); System.out.println(b1.subtract(b2)); // \u8f93\u51fa 1.200000000... BigDecimal b1 = new BigDecimal(\"2.2\"), b2=new BigDecimal(1.0); System.out.println(b1.subtract(b2)); // \u8f93\u51fa 1.2 \u2003 char\u7c7b\u578b: \u57fa\u4e8eUTF-16\uff0c\u53ea\u80fd\u7528\u6765\u8868\u793aBMP\u5e73\u9762\u4e2d\u7684\u5b57\u7b26\uff0c\u5927\u5c0f\u4e3a\u4e24\u4e2a\u5b57\u8282\u3002\u800c\u4e140xD800~0XDFFF\u6ca1\u6709\u5bf9\u5e94\u5b57\u7b26\uff0c \u6253\u5370\u7ed3\u679c\u4e3a ? . boolean:false\u548ctrue\uff0c\u4e14\u6574\u578b\u503c\u548c\u5e03\u5c14\u7c7b\u578b\u76f4\u63a5\u4e0d\u80fd\u4e92\u8f6c\u3002 \u5728Java\u4e2d\u6240\u6709\u503c\u91c7\u7528\u5927\u7aef\u5bf9\u9f50\u65b9\u5f0f\uff0c\u5373\u503c\u7684\u9ad8\u4f4d\u5b58\u653e\u5728\u5730\u5740\u4f4e\u4f4d\uff0c\u4e5f\u79f0\u9ad8\u4f4d\u5728\u524d\u987a\u5e8f(MSB)\uff0c \u53d8\u91cf\u521d\u59cb\u5316 \u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u4e4b\u540e\uff0c\u5fc5\u987b\u7528\u8d4b\u503c\u8bed\u53e5\u8fdb\u884c\u663e\u793a\u521d\u59cb\u5316\uff0c\u4e0d\u80fd\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u3002\u5728Java\u4e2d\u4e0d\u533a\u5206\u53d8\u91cf\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u3002 \u5e38\u91cf \u4f7f\u7528final\u5173\u952e\u5b57\u6307\u793a\u5e38\u91cf\uff0c\u8868\u793a\u53ea\u80fd\u88ab\u8d4b\u503c\u4e00\u6b21\uff0c\u4e4b\u540e\u4e0d\u80fd\u88ab\u4fee\u6539\uff1bstatic final\u4fee\u9970\u7684\u53d8\u91cf\u662f\u7c7b\u5e38\u91cf\u3002 \u4f4d\u8fd0\u7b97\u7b26 &\u3001|\u3001^(\u5f02\u6216)\u3001~(\u975e)\uff1b<<\u5de6\u79fb\u8fd0\u7b97\u7b26\uff0c>>\u53f3\u79fb\u8fd0\u7b97\u7b26\uff0c>>>\u53f3\u79fb\uff0c\u5f3a\u5236\u9ad8\u4f4d\u88650\u3002 Unicode\u7f16\u7801 1\u3001Unicode \u7f16\u7801\u8303\u56f4\u662f\uff1a0-0x10FFFF\uff0c\u53ef\u4ee5\u5bb9\u7eb3 1114112 \u4e2a\u5b57\u7b26\uff0c\u8fdc\u8d85\u73b0\u6709\u5b57\u7b26\u6570\u91cf\uff0c \u6bcf\u4e2aUnicode\u7f16\u7801\u79f0\u4e3a\u4ee3\u7801\u70b9\uff0c\u6700\u591a\u4f7f\u752821\u4f4d\u4e8c\u8fdb\u5236\u4f4d\uff0c\u8868\u793a\u67d0\u4e2a\u6587\u5b57\u7cfb\u7edf\u4e0b\u7684\u67d0\u4e2a\u5b57\u7b26\uff1b 2\u3001Unicode \u6807\u51c6\u628a\u4ee3\u7801\u70b9\u5206\u6210\u4e8617\u4e2a\u4ee3\u7801\u5e73\u9762\uff08Code Plane\uff09\uff0c\u7f16\u53f7\u4e3a #0-#16\u3002 \u6bcf\u4e2a\u4ee3\u7801\u5e73\u9762\u5305\u542b 65,536\uff082^16\uff09\u4e2a\u4ee3\u7801\u70b9\uff1bPlane#0 \u53eb\u505a\u57fa\u672c\u591a\u8bed\u8a00\u5e73\u9762\uff08Basic Multilingual Plane\uff0cBMP\uff09 \u5927\u90e8\u5206\u5e38\u7528\u7684\u5b57\u7b26\u90fd\u5750\u843d\u5728\u8fd9\u4e2a\u5e73\u9762\u5185\uff0c\u6bd4\u5982 ASCII \u5b57\u7b26\uff0c\u6c49\u5b57\u7b49\uff0c\u7801\u70b9\u8303\u56f4 0x0000~0xFFFF\u3002 UTF-8 UTF-8: \u53ef\u53d8\u957f\u7f16\u7801\uff0c\u4f7f\u75281~4\u4e2a\u5b57\u8282\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\uff0c\u6839\u636e\u5b57\u7b26\u5bf9\u5e94\u7801\u70b9\u6240\u5904\u8303\u56f4\uff0c\u91c7\u7528\u4e0d\u540c\u957f\u5ea6\u5b57\u8282\u8fdb\u884c\u7f16\u7801\uff1a \u4f8b1\uff1a\u201c\u6c49\u201d\u5b57\u7684 Unicode \u7f16\u7801\u662f 0x6C49\u30020x6C49 \u5728 0x0800-0xFFFF \u4e4b\u95f4\uff0c \u4f7f\u7528 3 \u5b57\u8282\u6a21\u677f\uff1a1110xxxx 10xxxxxx 10xxxxxx\u3002\u5c06 0x6C49 \u5199\u6210\u4e8c\u8fdb\u5236\u662f\uff1a0110 1100 0100 1001\uff0c \u7528\u8fd9\u4e2a\u6bd4\u7279\u6d41\u4f9d\u6b21\u4ee3\u66ff\u6a21\u677f\u4e2d\u7684 x\uff0c\u5f97\u5230\uff1a11100110 10110001 10001001\uff0c\u5373 E6 B1 89\u3002 \u4f8b2\uff1aUnicode \u7f16\u7801 0x20C30 \u5728 0x010000-0x10FFFF \u4e4b\u95f4\uff0c \u4f7f\u7528 4 \u5b57\u8282\u6a21\u677f\uff1a11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\u3002 \u5c06 0x20C30 \u5199\u6210 21 \u4f4d\u4e8c\u8fdb\u5236\u6570\u5b57\uff08\u4e0d\u8db3 21 \u4f4d\u5c31\u5728\u524d\u9762\u8865 0\uff09\uff1a0 0010 0000 1100 0011 0000\uff0c \u7528\u8fd9\u4e2a\u6bd4\u7279\u6d41\u4f9d\u6b21\u4ee3\u66ff\u6a21\u677f\u4e2d\u7684 x\uff0c\u5f97\u5230\uff1a11110000 10100000 10110000 10110000\uff0c\u5373 F0 A0 B0 B0\u3002 \u89e3\u7801\uff1a\u5982\u679c\u4e00\u4e2a\u5b57\u8282\u7684\u7b2c\u4e00\u4f4d\u662f 0 \uff0c\u5219\u8bf4\u660e\u8fd9\u4e2a\u5b57\u8282\u5bf9\u5e94\u4e00\u4e2a\u5b57\u7b26\uff1b \u5982\u679c\u4e00\u4e2a\u5b57\u8282\u7684\u7b2c\u4e00\u4f4d1\uff0c\u90a3\u4e48\u8fde\u7eed\u6709\u591a\u5c11\u4e2a 1\uff0c\u5c31\u8868\u793a\u8be5\u5b57\u7b26\u5360\u7528\u591a\u5c11\u4e2a\u5b57\u8282\u3002 UTF-16 \u7528\u4e24\u4e2a\u5b57\u8282\u6765\u7f16\u7801 BMP \u91cc\u7684\u4ee3\u7801\u70b9\uff0c\u7528\u56db\u4e2a\u5b57\u8282\u7f16\u7801\u5176\u4f59\u5e73\u9762\u91cc\u7684\u4ee3\u7801\u70b9\uff08\u6682\u4e0d\u8003\u8651\u5b57\u8282\u987a\u5e8f\uff09\u3002\u7531\u4e8e BMP \u91cc\u53ea\u6709 65536 \u4e2a\u4ee3\u7801\u70b9\uff0c\u6240\u4ee5\u76f4\u63a5\u628a\u4ee3\u7801\u70b9\u8f6c\u6362\u6210 2 \u4e2a\u5b57\u8282\u5c31\u53ef\u4ee5\u4e86;\u5bf9\u4e8eBMP\u4ee5\u5916\u7684\u5e73\u9762\uff0c\u7f16\u7801\u89c4\u5219\u5982\u4e0b: \u5047\u8bbe\u8981\u7f16\u7801\u7684\u8865\u5145\u5e73\u9762\u5185\u7684\u4ee3\u7801\u70b9\u4e3a X\uff0c\u5177\u4f53\u7684\u7f16\u7801\u8fc7\u7a0b\u4e3a\uff1a X \u5fc5\u5b9a\u5728 0x010000-0x10FFFF \u4e4b\u95f4 \u5c06 X \u51cf\u53bb 0x010000\uff0c\u5f97\u5230\u7684\u6570\u5728 0x0-0xFFFFF \u4e4b\u95f4\uff0c\u6b63\u597d\u53ef\u4ee5\u7528 20 \u4e2a bit \u6765\u8868\u793a \u5c06\u9ad8\u4f4d\u7684 10 \u4e2a bit \u548c 0xD800 \u76f8\u52a0\uff0c\u5c06\u4f4e\u4f4d\u7684 10 \u4e2a\u6bd4\u7279\u548c 0xDC00 \u76f8\u52a0\uff0c\u5f97\u5230\u7684\u4e24\u4e2aWORD\u79f0\u4e3a\u4e00\u5bf9\u4ee3\u7406\u5bf9\uff0c \u957f\u5ea6\u56db\u4e2a\u5b57\u8282\u3002\u5982\u4e0b\u56fe\u53ef\u77e5\uff0c\u9ad8\u4f4dword\u7684\u8303\u56f4\u662f 0xD800~0XDBFF\uff0c\u4f4e\u4f4dword\u8303\u56f4\u662f 0xDC00~0xDFFF\uff0c \u56e0\u6b64\u4e3a\u4e86\u907f\u514d\u4e0e\u4ee3\u7801\u70b90x0000~0xFFFF\u7684\u5b57\u7b26\u51b2\u7a81\uff0c\u5c060xD800~0xDFFF\u8303\u56f4\u4fdd\u7559\u4e0b\u6765\uff0c\u4f5c\u4e3a\u4ee3\u7406\u533a\uff0c \u4e0d\u7528\u6765\u8868\u793aBMP\u4ee3\u7801\u5e73\u9762\u4e2d\u7684\u5b57\u7b26\u3002 UTF16\u80fd\u8868\u793a\u7684\u975eBMP\u5e73\u9762\u4e2d\u7684\u5b57\u7b26\u603b\u6570\u4e3a(0xDBFF-0XD800+1)*(0XDFFF-0XDC00+1)=1048576\uff0c \u80fd\u8868\u793a\u7684BMP\u5e73\u9762\u4e2d\u7684\u5b57\u7b26\u603b\u6570\u4e3a2^16-(0XDFFF-0XD800+1)=63488\u4e2a\u3002 UTF-16\u5b58\u5728\u5927\u7aef\u5bf9\u9f50\u548c\u5c0f\u7aef\u5bf9\u9f50\u4e24\u79cd\u7f16\u7801\u65b9\u5f0f\u3002 \u5b57\u7b26\u4e32 \u4e0d\u53ef\u53d8\u5b57\u7b26\u4e32\uff0c\u5373\u4e0d\u80fd\u4fee\u6539java\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u4e2a\u5b57\u7b26\uff0c\u4e0d\u80fd\u50cf\u5728C++\u4e2d\u4e00\u6837\uff0c\u76f4\u63a5\u4fee\u6539str[ i ]; String\u7c7b\u63d0\u4f9bequals\u65b9\u6cd5\uff0c\u5224\u65ad\u4e24\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf\\\u5e38\u91cf \u662f\u5426\u76f8\u7b49\uff1bequalsIgnoreCase\u65b9\u6cd5\u5219\u5ffd\u7565\u5927\u5c0f\u5199; \u4e0d\u7528\u4f7f\u7528 == \u6765\u5224\u65ad\u662f\u5426\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\uff1b\u4f46\u53ef\u4ee5\u4f7f\u7528 == \u6765\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u662fnull, if(str == null), \u4e14\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662fnull\uff0c\u5219\u4e0d\u80fd\u5728\u5176\u4e0a\u8c03\u7528\u4efb\u4f55\u65b9\u6cd5; \u4f7f\u7528str.charAt(i)\u53ef\u4ee5\u83b7\u53d6str\u7b2ci\u4e2a\u5b57\u7b26(\u57fa0)\uff1b\u4f46\u5982\u679cstr\u4e2d\u5b58\u5728\u5b57\u7b26\u9700\u8981\u4e24\u4e2a\u4ee3\u7801\u5355\u5143\u6765\u63cf\u8ff0(\u975eBMP\u5e73\u9762\u4e2d\u7684\u5b57\u7b26)\uff0c\u5219\u6b64\u79cd\u65b9\u6cd5\u7ed3\u679c\u901a\u5e38\u4e0d\u6b63\u786e\uff0c\u53ef\u4ee5\u91c7\u7528\u4e0b\u5217\u65b9\u6cd5: \u4f7f\u7528\u591a\u4e2a\u5c0f\u6bb5\u7684\u5b57\u7b26\u4e32\u53d8\u91cf\u6216\u8005\u5e38\u91cf\u6765\u6784\u5efa\u5b57\u7b26\u4e32\u65f6\uff0c\u4f7f\u7528StringBuilder\u6216StringBuffer\u6548\u7387\u66f4\u9ad8\uff0c\u540e\u8005\u5141\u8bb8\u591a\u7ebf\u7a0b\u65b9\u5f0f\u6267\u884c\u6dfb\u52a0\u6216\u8005\u5220\u9664\u5b57\u7b26\u7684\u64cd\u4f5c\uff0c\u5355\u7ebf\u7a0b\u60c5\u51b5\u4e0b\uff0c\u524d\u8005\u901f\u5ea6\u66f4\u5feb\uff1b\u4e24\u8005API\u76f8\u540c\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b: StringBuilder builder = new StringBuilder(); builder.append(\"x\"); builder.append(ch); // ch is a single character builder.appedn(str); String res = builder.toString(); \u8bfb\u53d6\u8f93\u5165 Scanner in = new Scanner(System.in); String name = in.nextLine(); //\u8bfb\u53d6\u4e00\u884c String first = in.next(); // \u8bfb\u53d6\u4e00\u4e2a\u5355\u8bcd int age = in.nextInt(); //\u8bfb\u53d6\u6574\u6570\uff0cnextDouble()\u8bfb\u53d6\u6d6e\u70b9\u6570 \u6587\u4ef6\u8f93\u5165\u4e0e\u8f93\u51fa \u63a7\u5236\u6d41\u7a0b \u5728Java\u4e2d\uff0c\u4e0d\u80fd\u5728\u5d4c\u5957\u7684\u4e24\u4e2a\u5757\u4e2d\u58f0\u660e\u540c\u540d\u7684\u53d8\u91cf\uff1b\u4f46\u5728C++\u4e2d\uff0c\u53ef\u4ee5\u5728\u5d4c\u5957\u7684\u5757\u4e2d\u91cd\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\uff1b\u5728\u5185\u5c42\u5b9a\u4e49\u7684\u53d8\u91cf\u4f1a\u8986\u76d6\u5728\u5916\u5c42\u5b9a\u4e49\u7684\u53d8\u91cf\u3002 java\u63d0\u4f9b\u4e86\u6807\u7b7e\uff0c\u53ef\u4ee5\u901a\u8fc7break\u8df3\u8f6c\u51fa\u5faa\u73af\uff0c\u76f4\u63a5\u8df3\u8f6c\u5230\u6807\u7b7e\u5904\u4ee3\u7801\u3002 l1: for(int i=1;i<10;i++){ System.out.println(i); if(i==5)break l1; } System.out.println(\"now\"); \u5927\u6570\u503c \u7531\u4e8ejava\u4e2d\u4e0d\u80fd\u91cd\u8f7d\u64cd\u4f5c\u7b26\uff0c\u6240\u4ee5\u5927\u6570\u503c\u7c7b\u4e2d\u7684\u52a0\u51cf\u4e58\u9664\uff0c\u4e0d\u80fd\u4f7f\u7528 + - * \\\uff0c\u800c\u662f\u4f7f\u7528add\u3001 substract\u3001multiply\u3001divide\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u6c42\u4f59\uff0c\u63d0\u4f9b\u4e86mod\u65b9\u6cd5(\u8981\u6c42\u53cc\u65b9\u662fBigInteger\u7c7b\u578b)\uff1b\u5bf9\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u5927\u6570\u503c\uff0c\u63d0\u4f9b\u4e86compareTo\u65b9\u6cd5\uff0c\u76f8\u7b49\u8fd4\u56de0\uff0c\u5927\u4e8e\u8fd4\u56de\u6b63\u6570\uff0c\u5c0f\u4e8e\u8fd4\u56de\u8d1f\u6570\u3002 \u6570\u7ec4 \u7528\u6cd5: //\u58f0\u660e\u957f\u5ea6\u4e3a10\u7684\u6570\u7ec4\uff0c\u8bb0\u4f4f\u4e0eC++\u4e2d\u5f62\u5f0f\u533a\u522b\uff0cint a[10] \u6216\u8005 int *a = new int[10] int[] a=new int[10]; \u6574\u578b\u6570\u7ec4\uff0c\u6240\u6709\u5143\u7d20\u521d\u59cb\u5316\u4e3a0\uff1bboolean\u6570\u7ec4\u5143\u7d20\u521d\u59cb\u5316\u4e3afalse\uff1b\u5bf9\u8c61\u6570\u7ec4\u5143\u7d20\u521d\u59cb\u5316\u4e3anull\uff1b for each\u5faa\u73af: for(int x:a){xx}; \u4f7f\u7528\u533f\u540d\u6570\u7ec4\u53ef\u4ee5\u5728\u4e0d\u521b\u5efa\u65b0\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\uff0c\u91cd\u65b0\u521d\u59cb\u5316\u4e00\u4e2a\u6570\u7ec4: old = new int[] {1, 2, 3}; \u5728java\u4e2d\uff0c\u5141\u8bb8\u58f0\u660e\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a0: int[] a=new int[0]; \u6570\u7ec4\u62f7\u8d1d: \u901a\u8fc7 = \u5c06\u4e00\u4e2a\u6570\u7ec4\u53d8\u91cf\u62f7\u8d1d\u7ed9\u53e6\u4e00\u4e2a\u6570\u7ec4\u53d8\u91cf\uff0c\u4e24\u4e2a\u53d8\u91cf\u5c06\u5f15\u7528\u540c\u4e00\u4e2a\u6570\u7ec4\uff1b \u901a\u8fc7Arrays\u7c7b\u7684copyOf\u65b9\u6cd5\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6570\u7ec4\u7684\u6240\u6709\u503c\u62f7\u8d1d\u5230\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\u4e2d\u3002 Arrays.copyOf(T[] a, int length); //\u62f7\u8d1d\u6570\u7ec4a\u4e2dlength\u4e2a\u5143\u7d20\uff0c\u65b0\u6570\u7ec4\u4e2d\u591a\u4f59\u5143\u7d20\u9ed8\u8ba4\u521d\u59cb\u5316 Arrays.copyOf(T[] a, int start, int end); //\u62f7\u8d1d[start, end)\u7684\u5143\u7d20 a = Arrays.copyOf(a, newLength); //\u5bf9\u6570\u7ec4\u8fdb\u884c\u6269\u5bb9 Arrays.fill(T[] a, T val); Arrays.equals(T[] a, T[] b); Arrays.toString(T[] a); //\u5c06\u6570\u7ec4\u8f6c\u5316\u4e3a\u53ef\u6253\u5370\u7684String\u7c7b\u578b Arrays.deepToString(T[][] a); //\u9488\u5bf9\u591a\u7ef4\u6570\u7ec4 java\u4e2d\u7684\u591a\u7ef4\u6570\u7ec4\u7c7b\u4f3cC++\u4e2dvector\uff0c\u4e5f\u662f\u6570\u7ec4\u7684\u6570\u7ec4\uff0c\u662f\u4e0d\u89c4\u5219\u7684\u6570\u7ec4\uff0c \u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u4e5f\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u957f\u5ea6\u4e0d\u5b9a \u5bf9\u8c61\u4e0e\u7c7b \u5bf9\u8c61\u4e0e\u5bf9\u8c61\u53d8\u91cf java\u4e2d\u7684\u5bf9\u8c61\u53d8\u91cf\u53ef\u4ee5\u7c7b\u6bd4C++\u4e2d\u7684\u5bf9\u8c61\u6307\u9488\uff0c\u8fd9\u4e5f\u89e3\u91ca\u4e86\u628a\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u53d8\u91cf\uff0c\u4e24\u4e2a\u53d8\u91cf\u5c06\u5f15\u7528\u540c\u4e00\u4e2a\u5bf9\u8c61\uff1bjava\u4e2d\u53d8\u91cf\u4e3anull\u5373C++\u4e2d\u7684nullptr\uff1b\u6240\u6709java\u4e2d\u7684\u5bf9\u8c61\u90fd\u5b58\u50a8\u5728\u5806\u4e2d\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u5305\u542b\u53e6\u4e00\u4e2a\u5bf9\u8c61\u53d8\u91cf\u65f6\uff0c\u8fd9\u4e2a\u53d8\u91cf\u4f9d\u7136\u5305\u542b\u7740\u6307\u5411\u53e6\u4e00\u4e2a\u5806\u5bf9\u8c61\u7684\u6307\u9488\u3002 \u4e0d\u8981\u7f16\u5199\u8fd4\u56de\u5f15\u7528\u53ef\u53d8\u5bf9\u8c61\u7684\u8bbf\u95ee\u5668\u65b9\u6cd5\uff0c\u8fd9\u6837\u5c31\u4f1a\u5728\u7c7b\u5916\u53ef\u80fd\u6539\u53d8\u8be5\u5bf9\u8c61\u7684\u72b6\u6001\uff1b\u5e94\u8be5\u8c03\u7528clone()\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u5b58\u653e\u5728\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5bf9\u8c61\u526f\u672c\u3002 \u9759\u6001\u57df\uff0c\u4ee5static\u4fee\u9970\uff0c\u662f\u5c5e\u4e8e\u7c7b\u7684\uff0c\u800c\u975e\u67d0\u4e2a\u5b9e\u4f8b\uff0c\u6216\u8005\u8be5\u7c7b\u7684\u6240\u6709\u5b9e\u4f8b\u5171\u4eab\u8be5static\u53d8\u91cf\uff1b \u9759\u6001\u65b9\u6cd5\uff0c\u5176\u6ca1\u6709\u9690\u5f0f\u53c2\u6570this\u53c2\u6570(\u7c7b\u4f3cC++\u4e2dthis\u6307\u9488)\uff0c\u56e0\u6b64 static \u65b9\u6cd5\u4e2d\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u57df\uff1b\u4e00\u822c\u901a\u8fc7\u7c7b\u540d\u800c\u975e\u67d0\u4e2a\u5b9e\u4f8b\u6765\u8c03\u7528static method\u3002 \u65b9\u6cd5\u53c2\u6570 \u91c7\u7528call by value\u65b9\u5f0f\u4f20\u9012\u53c2\u6570\uff1b\u4f46\u662f\u8003\u8651\u53c2\u6570\u7c7b\u578b\u662f\u4e00\u4e2a\u5bf9\u8c61\u7c7b\u578b\uff0c\u4f20\u9012\u4e00\u4e2a\u5bf9\u8c61\u53d8\u91cf\uff0c\u7c7b\u4f3cC++\u4e2d\u4f20\u9012\u4e00\u4e2a\u6307\u5411\u5bf9\u8c61\u7684\u6307\u9488\u62f7\u8d1d\uff0c\u65b9\u6cd5\u5185\u90e8\u4fee\u6539\u5bf9\u8c61\u72b6\u6001\u4f1a\u5b9e\u9645\u4fee\u6539\u8be5\u5bf9\u8c61\uff1b\u4f46\u57fa\u7840\u7c7b\u578b\u4e0d\u662f\u5bf9\u8c61\uff0c\u56e0\u6b64\u5728\u65b9\u6cd5\u4e2d\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5916\u90e8\u53d8\u91cf\u3002 \u901a\u8fc7this(...)\u53ef\u4ee5\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5 \u521d\u59cb\u5316\u5757\uff0c \u4ee5{}\u5305\u62ec\u5bf9\u8c61\u53d8\u91cf\u7684\u521d\u59cb\u5316\u8bed\u53e5\uff0c\u53ea\u8981\u6784\u9020\u7c7b\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5757\u5c31\u4f1a\u6267\u884c\uff1b /* \u8fd9\u4e2a\u7c7b\u6ca1\u6709main\u65b9\u6cd5\uff0c\u800c\u662f\u901a\u8fc7\u6267\u884c\u9759\u6001\u521d\u59cb\u5316\u5757\u6765\u6253\u5370\u8bed\u53e5 */ public class hello{ static{ System.out.println(\"hello world\"); System.exit(0); //\u5ffd\u7565\u6ca1\u6709\u5b9a\u4e49main\u65b9\u6cd5\u7684\u9519\u8bef } } \u9759\u6001\u5bfc\u5165 import static java.lang.System.* //\u5bfc\u5165System\u4e2d\u7684\u9759\u6001\u65b9\u6cd5\u548c\u9759\u6001\u57df \u5305\u4f5c\u7528\u57df \u5982\u679c\u6ca1\u6709\u6307\u5b9apublic\u6216private\uff0c\u5219\u8fd9\u4e2a\u90e8\u5206(\u7c7b\u3001\u65b9\u6cd5\u6216\u53d8\u91cf)\u53ef\u4ee5\u88ab\u540c\u4e00\u4e2a\u5305\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u8bbf\u95ee\u3002 java\u4e2d\u7684package\u4e0eimport\u7c7b\u4f3cC++\u4e2d\u7684namespace\u3001using\u6307\u793a\u3002 extends java\u4e2d\u6240\u6709\u7ee7\u627f\u90fd\u662f\u516c\u6709\u7ee7\u627f\uff1b java\u4e2dclass\u662f\u4e0d\u652f\u6301\u591a\u7ee7\u627f\u7684\uff0c\u4f46\u53ef\u4ee5\u5b9e\u73b0(implements)\u591a\u4e2a\u63a5\u53e3 java\u4e2dinterface\u662f\u652f\u6301\u591a\u7ee7\u627f\u7684\uff0c\u4e00\u4e2a\u63a5\u53e3\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u63a5\u53e3 \u7c7b\u65b9\u6cd5\u548c\u5b9e\u4f8b\u57df\u7684\u53ef\u89c1\u6027 package\u4ee3\u8868\u6ca1\u6709\u63d0\u4f9b\u663e\u793a\u7684\u8bbf\u95ee\u8bf4\u660e\u7b26\uff1b\u7eff\u8272\u4ee3\u8868\u53ef\u8bbf\u95ee\uff0c\u7ea2\u8272\u4ee3\u8868\u4e0d\u53ef\u8bbf\u95ee\uff1b java\u4e2d\u7684protected\u6982\u5ff5\u6bd4C++\u4e2d\u7684\u5b89\u5168\u6027\u5dee super \u901a\u8fc7super\u5173\u952e\u5b57\u6765\u8c03\u7528\u7236\u7c7b\u4e2d\u7684public\u65b9\u6cd5\uff1b \u5b50\u7c7b\u7684\u6784\u9020\u5668\u4e0d\u80fd\u8bbf\u95ee\u7236\u7c7b\u7684\u79c1\u6709\u57df\uff0c\u901a\u8fc7super\u6765\u5b9e\u73b0\u5bf9\u7236\u7c7b\u6784\u9020\u5668\u7684\u8c03\u7528\uff0c\u8fd9\u6761\u8bed\u53e5\u4e5f\u5fc5\u987b\u662f\u5b50\u7c7b\u6784\u9020\u5668\u7684\u7b2c\u4e00\u6761\u8bed\u53e5\u3002 \u5728java\u4e2d\uff0c\u4e0d\u9700\u8981\u901a\u8fc7\u865a\u51fd\u6570\u6765\u5b9e\u73b0\u591a\u6001\uff0c\u52a8\u6001\u7ed1\u5b9a\u662f\u9ed8\u8ba4\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u5bf9\u8c61\u53d8\u91cf\u662f\u591a\u6001\u7684\uff0c\u4e00\u4e2a\u7236\u7c7b\u5bf9\u8c61\u53d8\u91cf\u53ef\u5f15\u7528\u7236\u7c7b\u5bf9\u8c61\u6216\u8005\u5b50\u7c7b\u5bf9\u8c61\uff0c\u5373\u5728\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u6839\u636e\u5bf9\u8c61\u53d8\u91cf\u6307\u5411\u7684\u5b9e\u9645\u7c7b\u578b\u6765\u9009\u62e9\u8c03\u7528\u54ea\u4e2a\u65b9\u6cd5 \uff1b \u5982\u679c\u5b50\u7c7b\u7684\u6784\u9020\u5668\u6ca1\u6709\u663e\u5f0f\u5730\u8c03\u7528\u8d85\u7c7b\u7684\u6784\u9020\u5668\uff0c \u5219\u5c06\u81ea\u52a8\u5730\u8c03\u7528\u8d85\u7c7b\u9ed8\u8ba4\uff08\u6ca1\u6709\u53c2\u6570 )\u7684\u6784\u9020\u5668\u3002 \u5982\u679c\u8d85\u7c7b\u6ca1\u6709\u4e0d\u5e26\u53c2\u6570\u7684\u6784\u9020\u5668\uff0c \u5e76\u4e14\u5728\u5b50\u7c7b\u7684\u6784\u9020\u5668\u4e2d\u53c8\u6ca1\u6709\u663e\u5f0f\u5730\u8c03\u7528\u8d85\u7c7b\u7684\u5176\u4ed6\u6784\u9020\u5668 \u5219 Java \u7f16\u8bd1\u5668\u5c06\u62a5\u544a\u9519\u8bef\u3002 \u65b9\u6cd5\u8c03\u7528\u8fc7\u7a0b \u65b9\u6cd5\u8986\u5199 \u65b9\u6cd5\u7684\u540d\u5b57\u548c\u53c2\u6570\u5217\u8868\u79f0\u4e3a\u65b9\u6cd5\u7684\u7b7e\u540d\uff1b\u5982\u679c\u5728\u5b50\u7c7b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e0e\u8d85\u7c7b\u7b7e\u540d\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u5b50\u7c7b\u4e2d\u7684\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u8986\u76d6\u4e86\u8d85\u7c7b\u4e2d\u7684\u8fd9\u4e2a\u76f8\u540c\u7b7e\u540d\u7684\u65b9\u6cd5\u3002 \u4e0d\u8fc7\uff0c\u8fd4\u56de\u7c7b\u578b\u4e0d\u662f\u7b7e\u540d\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64 \u5728\u8986\u76d6\u65b9\u6cd5\u65f6\uff0c\u4e00\u5b9a\u8981\u4fdd\u8bc1\u8fd4\u56de\u7c7b\u578b\u7684\u517c\u5bb9\u6027\u3002\u5141\u8bb8\u5b50\u7c7b\u5c06\u8986\u76d6\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u5b9a\u4e49\u4e3a\u539f\u8fd4\u56de\u7c7b\u578b\u7684\u5b50\u7c7b\u578b \u3002 \u963b\u6b62\u7ee7\u627f: final\u7c7b\u548c\u65b9\u6cd5 \u4ee5final\u4fee\u9970\u7684\u7c7b\u4e0d\u80fd\u88ab\u7ee7\u627f\uff0c\u5176\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u81ea\u52a8\u6210\u4e3afinal\u65b9\u6cd5\uff0c\u5373\u4e0d\u80fd\u88ab\u5b50\u7c7b\u8986\u76d6\uff1bfinal\u7c7b\u4e2d\u7684\u57df\u5e76\u4e0d\u4f1a\u6210\u4e3afinal\u3002 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 \u5c06\u4e00\u4e2a\u503c\u5b58\u5165\u53d8\u91cf\u65f6\uff0c \u7f16\u8bd1\u5668\u5c06\u68c0\u67e5\u662f\u5426\u5141\u8bb8\u8be5\u64cd\u4f5c\u3002\u5c06\u4e00\u4e2a\u5b50\u7c7b\u7684\u5f15\u7528\u8d4b\u7ed9\u4e00\u4e2a\u8d85\u7c7b\u53d8\u91cf\uff0c \u7f16\u8bd1\u5668\u662f\u5141\u8bb8\u7684\u3002 \u4f46\u5c06\u4e00\u4e2a\u8d85\u7c7b\u7684\u5f15\u7528(\u9759\u6001\u7c7b\u578b\u662f\u8d85\u7c7b\uff0c\u4f46\u52a8\u6001\u7c7b\u578b\u662f\u5b50\u7c7b)\u8d4b\u7ed9\u4e00\u4e2a\u5b50\u7c7b\u53d8\u91cf\uff0c \u5fc5\u987b\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c \u8fd9\u6837\u624d\u80fd\u591f\u901a\u8fc7\u8fd0\u884c\u65f6\u7684\u68c0\u67fb\uff1b \u4f46\u662f\u5728\u7ee7\u627f\u94fe\u4e0a\u8fdb\u884c\u5411\u4e0b\u7684\u6570\u636e\u8f6c\u6362\uff0c\u4f8b\u5982\u5c06\u4e00\u4e2a\u5f15\u7528\u8d85\u7c7b\u5bf9\u8c61\u7684\u53d8\u91cf\u8d4b\u7ed9\u4e00\u4e2a\u5b50\u7c7b\u53d8\u91cf\uff0c\u5373\u65f6\u6709\u7c7b\u578b\u8f6c\u6362\uff0c\u4f9d\u65e7\u4e0d\u80fd\u6210\u529f\uff0c\u800c\u4f1a\u629b\u51fa\u5f02\u5e38\uff1b \u6240\u4ee5\u9700\u8981\u901a\u8fc7 instanceof, \u5148\u5224\u65ad\u80fd\u5426\u6210\u529f\u8f6c\u6362\u3002 abstract abstract\u4fee\u9970\u7684\u7c7b\u6216\u65b9\u6cd5\u79f0\u4e3a\u62bd\u8c61\u7c7b\u6216\u62bd\u8c61\u65b9\u6cd5\uff1b \u7c7b\u5373\u4f7f\u4e0d\u5305\u542b\u62bd\u8c61\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b\uff1b \u62bd\u8c61\u7c7b\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\uff0c\u4f46\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u62bd\u8c61\u7c7b\u5bf9\u8c61\u53d8\u91cf\uff0c\u5176\u53ea\u80fd\u5f15\u7528\u975e\u62bd\u8c61\u5b50\u7c7b\u5bf9\u8c61\u3002 \u62bd\u8c61\u7c7b\u5bf9\u8c61\u53d8\u91cf\u5728\u8c03\u7528\u65b9\u6cd5\u65f6\u8c03\u7528\u7684\u4e00\u5b9a\u662f\u5b50\u7c7b\u4e2d\u5b9e\u73b0\u4e86\u7684\u62bd\u8c61\u65b9\u6cd5 \u3002 \u4e00\u4e2a\u7c7b\u5982\u679c\u5305\u542b\u62bd\u8c61\u65b9\u6cd5\uff0c\u5fc5\u987b\u88ab\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b\uff1b \u4efb\u4f55\u5b50\u7c7b\u5fc5\u987b\u91cd\u5199\u62bd\u8c61\u7236\u7c7b\u7684\u5168\u90e8\u62bd\u8c61\u65b9\u6cd5\uff0c\u5426\u5219\u5c31\u5c06\u5b50\u7c7b\u4e5f\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b\u3002\u5982\u679c\u62bd\u8c61\u7236\u7c7b\u4e2d\u6ca1\u6709\u62bd\u8c61\u65b9\u6cd5\uff0c\u5219\u4e0e\u666e\u901a\u7236\u7c7b\u6ca1\u6709\u533a\u522b\u3002\uff08\u62bd\u8c61\u7236\u7c7b\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\uff09\u3002 equals\u65b9\u6cd5 \u5bf9\u8c61\u5305\u88c5\u5668\u4e0e\u81ea\u52a8\u88c5\u7bb1 \u57fa\u672c\u7c7b\u578b\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684\u7c7b\uff0c\u79f0\u4e3a\u5305\u88c5\u5668\uff1b Integer\u3001Long\u3001Float\u3001Double\u3001Short\u3001Byte\u3001Character \u3001Void \u548c Boolean (\u524d 6 \u4e2a\u7c7b\u6d3e\u751f\u4e8e\u516c\u5171\u7684\u8d85\u7c7b Number)\u3002 \u5bf9\u8c61\u5305\u88c5\u5668\u7c7b\u662f\u4e0d\u53ef\u53d8\u7684\uff0c \u5373\u4e00\u65e6\u6784\u9020\u4e86\u5305\u88c5\u5668\uff0c\u5c31\u4e0d\u5141\u8bb8\u66f4\u6539\u5305\u88c5\u5728\u5176\u4e2d\u7684\u503c \u3002\u540c\u65f6\uff0c \u5bf9\u8c61\u5305\u88c5\u5668\u7c7b\u8fd8\u662f final , \u56e0\u6b64\u4e0d\u80fd\u5b9a\u4e49\u5b83\u4eec\u7684\u5b50\u7c7b\u3002 \u6cdb\u578b\u7c7b\u4e2d\u7c7b\u578b\u53c2\u6570\u4e0d\u80fd\u662f\u57fa\u672c\u7c7b\u578b\uff0c\u56e0\u6b64\u53ef\u4ee5\u63d0\u4f9b\u5305\u88c5\u5668\u7c7b\u578b\uff1b \u81ea\u52a8\u88c5\u7bb1: \u5bb9\u5668\u6dfb\u52a0\u57fa\u672c\u7c7b\u578b\u5143\u7d20\u65f6\uff0c\u4f1a\u81ea\u52a8\u5c06\u57fa\u672c\u7c7b\u578b\u8f6c\u6362\u4e3a\u5305\u88c5\u5668\u7c7b\u578b\uff1b \u81ea\u52a8\u62c6\u7bb1: \u5c06\u4e00\u4e2a\u5305\u88c5\u5668\u5bf9\u8c61\u8d4b\u7ed9\u4e00\u4e2a\u57fa\u672c\u7c7b\u578b\u5bf9\u8c61\u53d8\u91cf\u65f6\uff0c\u4f1a\u81ea\u52a8\u6267\u884c\u7c7b\u578b\u8f6c\u6362\u3002 \u88c5\u7bb1\u548c\u62c6\u7bb1\u662f\u7f16\u8bd1\u5668\u8ba4\u53ef\u7684\uff0c\u800c\u4e0d\u662f\u865a\u62df\u673a\u3002\u7f16\u8bd1\u5668\u5728\u751f\u6210\u7c7b\u7684\u5b57\u8282\u7801\u65f6\uff0c \u63d2\u4eba\u5fc5\u8981\u7684\u65b9\u6cd5\u8c03\u7528\u3002\u865a\u62df\u673a\u53ea\u662f\u6267\u884c\u8fd9\u4e9b\u5b57\u8282\u7801\u3002 \u53ef\u53d8\u53c2\u6570 /* \u8fd9\u91cc\u7684 ... \u4ee3\u8868\u53ef\u4ee5\u63a5\u53d7\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\uff0c\u4e0eC++\u7c7b\u4f3c\u3002\u5728java\u4e2d\uff0c\u5176\u542b\u4e49\u7b49\u540c\u4e8e\u6570\u7ec4\uff0c \u5373 Object...\u7b49\u540c\u4e8eObject[]\uff0c\u56e0\u6b64\u66f4\u7c7b\u4f3cC++\u4e2d\u7684initialize_list\uff0c\u8981\u6c42\u53c2\u6570\u7c7b\u578b\u76f8\u540c */ public PrintStream printf(String fmt, Object... args){xxx} \u53cd\u5c04 \u5728\u8fd0\u884c\u65f6\u5206\u6790\u7c7b\u7684\u80fd\u529b\uff1b \u5728\u8fd0\u884c\u65f6\u67e5\u770b\u5bf9\u8c61\uff0c \u4f8b\u5982\uff0c \u7f16\u5199\u4e00\u4e2a toString \u65b9\u6cd5\u4f9b\u6240\u6709\u7c7b\u4f7f\u7528\uff1b \u5b9e\u73b0\u901a\u7528\u7684\u6570\u7ec4\u64cd\u4f5c\u4ee3\u7801\uff1b \u5229\u7528 Method \u5bf9\u8c61\uff0c \u8fd9\u4e2a\u5bf9\u8c61\u5f88\u50cfC++\u4e2d\u7684\u51fd\u6570\u6307\u9488\u3002 Class\u7c7b \u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\uff0cJava \u8fd0\u884c\u65f6\u7cfb\u7edf\u59cb\u7ec8\u4e3a\u6240\u6709\u7684\u5bf9\u8c61\u7ef4\u62a4\u4e00\u4e2a\u88ab\u79f0\u4e3a\u8fd0\u884c\u65f6\u7684\u7c7b\u578b\u6807\u8bc6\u3002 \u8fd9\u4e2a\u4fe1\u606f\u8ddf\u8e2a\u7740\u6bcf\u4e2a\u5bf9\u8c61\u6240\u5c5e\u7684\u7c7b\u3002 \u865a\u62df\u673a\u5229\u7528\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\u9009\u62e9\u76f8\u5e94\u7684\u65b9\u6cd5\u6267\u884c\u3002 \u7136\u800c\uff0c \u53ef\u4ee5\u901a\u8fc7\u4e13\u95e8\u7684 Java \u7c7b\u8bbf\u95ee\u8fd9\u4e9b\u4fe1\u606f\u3002\u4fdd\u5b58\u8fd9\u4e9b\u4fe1\u606f\u7684\u7c7b\u88ab\u79f0\u4e3a Class, \u7c7b\u4f3cC++\u4e2d\u7684type_info\u7c7b\uff1b // getClass \u65b9\u6cd5\u4e0e C++ \u4e2d\u7684 typeid \u8fd0\u7b97\u7b26\u7b49\u4ef7\uff1b\u4f46\u662ftype_info \u53ea\u80fd\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u663e\u793a\u4e00\u4e2a\u7c7b\u578b\u7684\u540d\u5b57\uff0c // \u800c\u4e0d\u80fd\u521b\u5efa\u90a3\u4e2a\u7c7b\u578b\u7684\u5bf9\u8c61 Class c1 = e.getClass(); // java.lang.Ciass 1.0 static Class forName(String className) // \u8fd4\u56de\u63cf\u8ff0\u7c7b\u540d\u4e3a className \u7684 Class \u5bf9\u8c61\u3002 Object newlnstance() // \u8fd4\u56de\u8fd9\u4e2a\u7c7b\u7684\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u3002 // java.lang.reflect.Constructor 1.1 Object newlnstance(Object[] args) // \u6784\u9020\u4e00\u4e2a\u8fd9\u4e2a\u6784\u9020\u5668\u6240\u5c5e\u7c7b\u7684\u65b0\u5b9e\u4f8b\u3002\u53c2\u6570\uff1aargs \u8fd9\u662f\u63d0\u4f9b\u7ed9\u6784\u9020\u5668\u7684\u53c2\u6570\u3002 \u5229\u7528\u53cd\u5c04\u5206\u6790\u7c7b\u7684\u80fd\u529b import java.util.*; import java.lang.reflect.*; /** * This program uses reflection to print all features of a class. * \u5728 java.lang.reflect \u5305\u4e2d\u6709\u4e09\u4e2a\u7c7b Field\u3001 Method \u548c Constructor \u5206\u522b\u7528\u4e8e\u63cf\u8ff0\u7c7b\u7684\u57df\u3001\u65b9 \u6cd5\u548c\u6784\u9020\u5668\u3002 \u8fd9\u4e09\u4e2a\u7c7b\u90fd\u6709 getName \u7684\u65b9\u6cd5\uff0c\u7528\u6765\u8fd4\u56de\u9879\u76ee\u7684\u540d\u79f0\u3002Field \u7c7b\u6709 getType \u65b9\u6cd5\uff0c \u7528\u6765\u8fd4\u56de\u63cf\u8ff0\u57df\u6240\u5c5e\u7c7b\u578b\u7684 Class \u5bf9\u8c61\u3002 Method \u548c Constructor \u7c7b\u6709\u80fd\u591f\u62a5\u544a\u53c2\u6570\u7c7b\u578b\u7684\u65b9\u6cd5\uff0cMethod \u7c7b\u8fd8\u6709\u4e00\u4e2a\u53ef\u4ee5\u62a5\u544a\u8fd4\u56de\u7c7b\u578b\u7684\u65b9\u6cd5\u4ee5\u53ca\u4e00\u4e2a\u53eb \u505a getModifiers \u7684\u65b9\u6cd5\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\u503c\uff0c\u7528\u4e0d\u540c\u7684\u4f4d\u5f00\u5173\u63cf\u8ff0 public \u548c static \u8fd9\u6837 \u7684\u4fee\u9970\u7b26\u4f7f\u7528\u72b6\u51b5\uff0c\u5229\u7528 Modifier.toString \u65b9\u6cd5\u5c06\u4fee\u9970\u7b26\u6253\u5370\u51fa\u6765\u3002 Class\u7c7b\u4e2d\u7684 getFields\u3001 getMethods \u548c getConstructors \u65b9\u6cd5\u5c06\u5206\u522b\u8fd4\u56de\u7c7b\u63d0\u4f9b\u7684 public\u57df\u3001\u65b9\u6cd5\u548c\u6784\u9020\u5668\u6570\u7ec4\uff0c\u5176\u4e2d\u5305\u62ec\u8d85\u7c7b\u7684\u516c\u6709\u6210\u5458\u3002 Class \u7c7b\u7684 getDeclareFields\u3001getDeclareMethods \u548c getDeclaredConstructors \u65b9\u6cd5\u5c06\u5206\u522b\u8fd4\u56de\u7c7b\u4e2d\u58f0\u660e\u7684\u5168\u90e8\u57df\u3001 \u65b9\u6cd5\u548c\u6784\u9020\u5668\uff0c\u5176\u4e2d\u5305\u62ec\u79c1\u6709\u548c\u53d7\u4fdd\u62a4\u6210\u5458\uff0c\u4f46\u4e0d\u5305\u62ec\u8d85\u7c7b\u7684\u6210\u5458\u3002 */ public class ReflectionTest { public static void main(String[] args) { // read class name from command line args or user input String name; if (args.length > 0) name = args[0]; else { Scanner in = new Scanner(System.in); System.out.println(\"Enter class name (e.g. java.util.Date): \"); name = in.next(); } try { // print class name and superclass name (if != Object) Class cl = Class.forName(name); Class supercl = cl.getSuperclass(); String modifiers = Modifier.toString(cl.getModifiers()); if (modifiers.length() > 0) System.out.print(modifiers + \" \"); System.out.print(\"class \" + name); if (supercl != null && supercl != Object.class) System.out.print(\" extends \" + supercl.getName()); System.out.println(\"\\n{\\nConstructor\"); printConstructors(cl); System.out.println(\"Methods\"); printMethods(cl); System.out.println(\"Fields\"); printFields(cl); System.out.println(\"}\"); } catch (ClassNotFoundException e) { e.printStackTrace(); } System.exit(0); } /** * Prints all constructors of a class * * @param cl a class */ private static void printConstructors(Class cl) { Constructor[] constructors = cl.getDeclaredConstructors(); for (Constructor c : constructors) { System.out.print(\" \"); String name = c.getName(); String modifiers = Modifier.toString(c.getModifiers()); if (modifiers.length() > 0) System.out.print(modifiers + \" \"); System.out.print(name + \"(\"); // print parameter types Class[] paramTypes = c.getParameterTypes(); for (int j = 0; j < paramTypes.length; j++) { if (j > 0) System.out.print(\", \"); System.out.print(paramTypes[j].getName()); } System.out.println(\");\"); } } /** * Prints all methods of a class * * @param cl a class */ private static void printMethods(Class cl) { Method[] methods = cl.getDeclaredMethods(); for (Method m : methods) { System.out.print(\" \"); Class retType = m.getReturnType(); String name = m.getName(); // print modifiers, return type and method name String modifiers = Modifier.toString(m.getModifiers()); if (modifiers.length() > 0) System.out.print(modifiers + \" \"); System.out.print(retType.getName() + \" \" + name + \"(\"); // print parameter types Class[] paramTypes = m.getParameterTypes(); for (int j = 0; j < paramTypes.length; j++) { if (j > 0) System.out.print(\", \"); System.out.print(paramTypes[j].getName()); } System.out.println(\");\"); } } /** * Prints all fields of a class * * @param cl a class */ private static void printFields(Class cl) { Field[] fields = cl.getDeclaredFields(); for (Field f : fields) { Class type = f.getType(); String name = f.getName(); System.out.print(\" \"); String modifiers = Modifier.toString(f.getModifiers()); if (modifiers.length() > 0) System.out.print(modifiers + \" \"); System.out.println(type.getName() + \" \" + name + \";\"); } } } \u4f7f\u7528\u53cd\u5c04\u7f16\u5199\u6cdb\u578b\u6570\u7ec4\u4ee3\u7801 public static Object goodCopyOf(Object a, int newLength) { Class cl = a.getClass(); if (!cl.isArray()) return null; Class componentType = cl.getComponentType(); int length = Array.getLength(a); Object newArray = Array.newInstance(componentType, newLength); System.arraycopy(a, 0, newArray, 0, Math.min(length, newLength)); return newArray; } \u63a5\u53e3\u4e0elambda \u63a5\u53e3\u5e76\u975e\u662f\u7c7b\uff0c\u800c\u662f\u5bf9\u7c7b\u7684\u4e00\u7ec4\u9700\u6c42\u63cf\u8ff0\uff0c\u91c7\u7528\u5173\u952e\u5b57interface\uff0c\u800c\u975eclass\u3002 \u63a5\u53e3\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u81ea\u52a8\u5730\u5c5e\u4e8e public\u3002 \u56e0\u6b64\uff0c\u5728\u63a5\u53e3\u4e2d\u58f0\u660e\u65b9\u6cd5\u65f6\uff0c\u4e0d\u5fc5\u63d0\u4f9b\u5173\u952e\u5b57public\uff1b \u4f46\u662f\u5b9e\u73b0(implements)\u63a5\u53e3\u7684\u7c7b\u5fc5\u987b\u4e3a\u8be5\u65b9\u6cd5\u58f0\u660e\u8bbf\u95ee\u4fee\u9970\u7b26\uff0c\u5426\u5219\u9ed8\u8ba4\u5c31\u662f\u5305\u53ef\u89c1\u3002 \u63a5\u53e3\u4e0d\u80fd\u542b\u5b9e\u4f8b\u57df\uff0c\u4f46\u53ef\u4ee5\u5305\u542b\u5e38\u91cf\uff0c\u5e76\u4e14\u5e38\u91cf\u7c7b\u578b\u81ea\u52a8\u8bbe\u4e3apublic static final\uff1b\u4eceJava SE8\u8d77\uff0c\u5141\u8bb8\u5728\u63a5\u53e3\u4e2d\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5e76\u4e14\u5141\u8bb8\u589e\u52a0\u9759\u6001\u65b9\u6cd5\uff1b \u63a5\u53e3\u4e0d\u662f\u7c7b\uff0c\u5c24\u5176\u4e0d\u80fd\u4f7f\u7528 new \u8fd0\u7b97\u7b26\u5b9e\u4f8b\u5316\u4e00\u4e2a\u63a5\u53e3\uff0c\u5374\u80fd\u58f0\u660e\u63a5\u53e3\u7684\u53d8\u91cf\uff0c\u63a5\u53e3\u53d8\u91cf\u5fc5\u987b\u5f15\u7528\u5b9e\u73b0\u4e86\u63a5\u53e3\u7684\u7c7b\u5bf9\u8c61\uff1b \u53ef\u4ee5\u4f7f\u7528instance \u68c0\u67e5\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86\u67d0\u4e2a\u7279\u5b9a\u7684\u63a5\u53e3; \u4e0e\u53ef\u4ee5\u5efa\u7acb\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb\u4e00\u6837\uff0c\u63a5\u53e3\u4e5f\u53ef\u4ee5\u88ab\u6269\u5c55(extends)\uff0c\u4e14\u4e00\u4e2a\u63a5\u53e3\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u63a5\u53e3\u3002 \u4e00\u4e2a\u7c7b\u53ea\u53ef\u4ee5\u6709\u4e00\u4e2a\u7236\u7c7b(\u901a\u8fc7extends\u5173\u952e\u5b57\u7ee7\u627f)\uff0c \u4f46\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\uff0c\u4ee5\u9017\u53f7\u5206\u9694 \uff0c class employee implements Comparable, Cloneable{..} \u901a\u8fc7\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\uff0cjava\u6765\u8fd1\u4f3cC++\u4e2d\u7684\u591a\u91cd\u7ee7\u627f\u3002 \u53ef\u4ee5\u4e3a\u63a5\u53e3\u65b9\u6cd5\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u5b9e\u73b0\u3002 \u5fc5\u987b\u7528 default \u4fee\u9970\u7b26\u6807\u8bb0\u8fd9\u6837\u4e00\u4e2a\u65b9\u6cd5(\u653e\u5728\u8fd4\u56de\u503c\u7c7b\u578b\u4e4b\u524d)\uff1b \u4e3a\u63a5\u53e3\u589e\u52a0\u4e00\u4e2a\u975e\u9ed8\u8ba4\u65b9\u6cd5\u4e0d\u80fd\u4fdd\u8bc1\u6e90\u4ee3\u7801\u517c\u5bb9\uff1b\u5373\u539f\u5148\u7684\u63a5\u53e3\u4e2d\u589e\u6dfb\u4e86\u65b0\u7684\u975e\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u800c\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u7684\u7c7b\u6ca1\u6709\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5c06\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\u3002 \u9ed8\u8ba4\u65b9\u6cd5\u51b2\u7a81: \u4e0d\u540c\u63a5\u53e3\u4e2d\u51fa\u73b0\u4e86\u91cd\u540d\u4e14\u53c2\u6570\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u4e14\u81f3\u5c11\u4e00\u4e2a\u63a5\u53e3\u63d0\u4f9b\u4e86\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u6216\u8005\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u548c\u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5\u91cd\u540d\uff0c \u89e3\u51b3\u89c4\u5219\u662f\uff1a \u7236\u7c7b\u4f18\u5148\uff0c\u5ffd\u7565\u63a5\u53e3\u4e2d\u7684\u9ed8\u8ba4\u65b9\u6cd5\uff1b\u4e0d\u540c\u63a5\u53e3\u4e2d\u7684\u51b2\u7a81\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u5668\u62a5\u9519\uff0c\u4e0d\u8fc7\u5982\u679c\u6240\u6709\u63a5\u53e3\u4e2d\u8fd9\u4e2a\u65b9\u6cd5\u90fd\u6ca1\u6709\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u5219\u4e0d\u4f1a\u5f15\u8d77\u51b2\u7a81\uff1b \u5b9e\u73b0\u7c7b\u6709\u6709\u4e24\u4e2a\u9009\u62e9\uff1a\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6216\u8005\u5e72\u8106\u4e0d\u5b9e\u73b0\u3002\u540e\u8005\u8bf4\u660e\u8fd9\u4e2a\u7c7b\u672c\u8eab\u5c31\u662f\u62bd\u8c61\u7684\u3002 Comparartor\u63a5\u53e3\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2acompare\u65b9\u6cd5\uff1b\u5176\u4e0eComparable\u63a5\u53e3(\u5176\u5305\u542bcompareTo\u65b9\u6cd5)\u7684\u533a\u522b\uff0c java\u7c7b\u5b9e\u73b0Comparable\u63a5\u53e3\uff0c\u597d\u6bd4C++\u4e2d\u7684\u7c7b\u8fdb\u884c\u4e86\u6bd4\u8f83\u7b26\u91cd\u8f7d\uff1b\u800c\u5728\u5bf9\u5bb9\u5668\u4e2d\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u65f6\uff0c\u53ef\u80fd\u4e0d\u9700\u8981\u6309\u7167\u9ed8\u8ba4\u6bd4\u8f83\u65b9\u5f0f\uff0c \u800c\u662f\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u8f83\u5668\u5bf9\u8c61\uff0c\u901a\u8fc7\u6bd4\u8f83\u5668\u4e2d\u7684compare\u65b9\u6cd5\u6765\u6bd4\u8f83\u4e24\u4e2a\u5143\u7d20\uff1b\u6bd4\u8f83\u5668\u5373\u662f\u5b9e\u73b0\u4e86Comparator\u63a5\u53e3\u7684\u7c7b\uff0c\u597d\u6bd4\u5728C++\u4e2d\u63d0\u4f9b\u4e00\u4e2a lambda\u8868\u8fbe\u5f0f\u6216\u8005\u4e00\u4e2afunction class\u5bf9\u8c61\u5982less< int>(). clone\u65b9\u6cd5\uff0c\u5176\u662fObject\u7684protected\u65b9\u6cd5\uff0c\u56e0\u6b64\u5b50\u7c7b\u7684\u5b9e\u4f8b\u4e0d\u80fd\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u4e14\u8be5\u65b9\u6cd5\u662f\u6d45\u62f7\u8d1d\uff1b \u56e0\u6b64\u5b50\u7c7b\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2apublic\u4fee\u9970\u7684clone\u65b9\u6cd5\uff0c\u6765\u5b9e\u73b0\u6df1\u62f7\u8d1d\u3002 Cloneable\u63a5\u53e3\u4e2d\u4e0d\u63d0\u4f9bclone\u65b9\u6cd5\uff0c\u53ea\u662f\u4f5c\u4e3a\u6807\u8bb0\u63a5\u53e3\uff1b\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u8bf7\u6c42\u514b\u9686\uff0c \u4f46\u6ca1\u6709\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c \u5c31 \u4f1a\u751f\u6210\u4e00\u4e2a\u53d7\u67fb\u5f02\u5e38\u3002 \u6240\u6709\u6570\u7ec4\u7c7b\u578b\u90fd\u6709\u4e00\u4e2apublic\u7684clone\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4\u7684\u526f\u672c\u3002 lambda\u8868\u8fbe\u5f0f \u8bed\u6cd5: (\u53c2\u6570\u5217\u8868) -> \u8868\u8fbe\u5f0f \u5982\u679c\u53ef\u4ee5\u63a8\u5bfc\u51fa\u4e00\u4e2a lambda \u8868\u8fbe\u5f0f\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u5219\u53ef\u4ee5\u5ffd\u7565\u5176\u7c7b\u578b\u3002 \u5982\u679c\u65b9\u6cd5\u53ea\u6709\u4e00 \u53c2\u6570\uff0c \u800c\u4e14\u8fd9\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u53ef\u4ee5\u63a8\u5bfc\u5f97\u51fa\uff0c\u90a3\u4e48\u751a\u81f3\u8fd8\u53ef\u4ee5\u7701\u7565\u5c0f\u62ec\u53f7\u3002 \u65e0\u9700\u6307\u5b9a lambda \u8868\u8fbe\u5f0f\u7684\u8fd4\u56de\u7c7b\u578b\u3002lambda \u8868\u8fbe\u5f0f\u7684\u8fd4\u56de\u7c7b\u578b\u603b\u662f\u4f1a\u7531\u4e0a\u4e0b\u6587\u63a8\u5bfc\u5f97\u51fa\u3002 \u5982\u679c\u4e00\u4e2a lambda \u8868\u8fbe\u5f0f\u53ea\u5728\u67d0\u4e9b\u5206\u652f\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c \u800c\u5728\u53e6\u5916\u4e00\u4e9b\u5206\u652f\u4e0d\u8fd4\u56de\u503c\uff0c\u8fd9\u662f\u4e0d\u5408\u6cd5\u7684\u3002 \u5bf9\u4e8e\u53ea\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u7684\u63a5\u53e3\uff0c \u9700\u8981\u8fd9\u79cd\u63a5\u53e3\u7684\u5bf9\u8c61\u65f6\uff0c \u5c31\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a(\u533f\u540d)lambda \u8868\u8fbe\u5f0f\u3002 \u8fd9\u79cd\u63a5\u53e3\u79f0\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3 \uff08 functional interface )\u3002\u8fd9\u6837\u8c03\u7528\u8be5\u63a5\u53e3\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\u65f6\uff0c\u5b9e\u9645\u4e0a\u901a\u8fc7lambda\u8868\u8fbe\u5f0f\u6765\u6267\u884c\u3002 // \u5b9e\u9645\u4e2d\uff0c\u6839\u636e\u53c2\u6570\\\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u9884\u5148\u5b9a\u4e49\u7684\u63a5\u53e3 public static void main(String[] args){ int n=10; repeat(n, System.out::println); repeat2(3, ()-> System.out.println(\"test\")); } private static void repeat(int n, Consumer<Integer> consumer){ for(int i=0;i<n;i++)consumer.accept(i); } private static void repeat2(int n, Runnable runnable){ for(int i=0;i<n;i++)runnable.run(); } \u65b9\u6cd5\u5f15\u7528 \u5411\u51fd\u6570\u63a5\u53e3\u63d0\u4f9b\u4e00\u4e2a\u73b0\u6210\u7684\u65b9\u6cd5\uff0c object::instanceMethod\\Class::staticMethod\\Class::instanceMethod; \u65b9\u6cd5\u5f15\u7528\u7b49\u4ef7\u4e8e\u63d0\u4f9b\u65b9\u6cd5\u53c2\u6570\u7684 lambda \u8868\u8fbe\u5f0f, System.out::println \u7b49\u4ef7\u4e8e x -> System.out.println(x)\u3002 Math::pow \u7b49\u4ef7\u4e8e\uff08x\uff0cy) -> Math.pow(x, y)\u3002 \u5bf9\u4e8e\u7b2c 3 \u79cd\u60c5\u51b5\uff0c \u7b2c 1 \u4e2a\u53c2\u6570\u4f1a\u6210\u4e3a\u65b9\u6cd5\u7684\u76ee\u6807\u3002\u4f8b\u5982\uff0cString::compareToIgnoreCase \u7b49\u540c\u4e8e (x, y) -> x.compareToIgnoreCase(y) \u6784\u9020\u5668\u5f15\u7528\u7c7b\u4f3c\u65b9\u6cd5\u5f15\u7528\uff0c\u53ea\u4e0d\u8fc7\u65b9\u6cd5\u540d\u4e3a new lambda\u53d8\u91cf\u4f5c\u7528\u57df lambda\u8868\u8fbe\u5f0f\u5305\u542b3\u4e2a\u90e8\u5206\uff1a\u4e00\u4e2a\u4ee3\u7801\u5757\uff1b\u53c2\u6570; \u81ea\u7531\u53d8\u91cf\u7684\u503c\uff0c\u8fd9\u662f\u6307\u975e\u53c2\u6570\u800c\u4e14\u4e0d\u5728\u4ee3\u7801\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u3002(\u7c7b\u4f3cC++\u4e2d\u7684\u503c\u6355\u83b7) \u5728Java\u4e2d\uff0c\u8981\u786e\u4fdd\u6240\u6355\u83b7\u7684\u503c\u662f\u660e\u786e\u5b9a\u4e49\u7684\uff0c\u5728lambda \u8868\u8fbe\u5f0f\u4e2d\uff0c\u53ea\u80fd\u5f15\u7528\u503c\u4e0d\u4f1a\u6539\u53d8\u7684\u53d8\u91cf\uff0c\u6355\u83b7\u7684\u53d8\u91cf\u5fc5\u987b\u5b9e\u9645\u4e0a\u662f\u6700\u7ec8\u53d8\u91cf\uff0c \u53d8\u91cf\u521d\u59cb\u5316\u4e4b\u540e\u5c31\u4e0d\u4f1a\u518d\u4e3a\u5b83\u8d4b\u65b0\u503c; \u56e0\u4e3a\u5982\u679c\u5728 lambda \u8868\u8fbe\u5f0f\u4e2d\u6539\u53d8\u53d8\u91cf\uff0c \u5e76\u53d1\u6267\u884c\u591a\u4e2a\u52a8\u4f5c\u65f6\u5c31\u4f1a\u4e0d\u5b89\u5168\u3002 lambda \u8868\u8fbe\u5f0f\u4e2d\u58f0\u660e\u4e0e\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u540c\u540d\u7684\u53c2\u6570\u6216\u5c40\u90e8\u53d8\u91cf\u662f\u4e0d\u5408\u6cd5\u7684\u3002 \u5185\u90e8\u7c7b \u5185\u90e8\u7c7b \u5185\u90e8\u7c7b\u65b9\u6cd5\u53ef\u4ee5\u8bbf\u95ee\u8be5\u7c7b\u5b9a\u4e49\u6240\u5728\u7684\u4f5c\u7528\u57df\u4e2d\u7684\u6570\u636e\uff0c \u5305\u62ec\u79c1\u6709\u7684\u6570\u636e\u3002 \u5185\u90e8\u7c7b\u53ef\u4ee5\u5bf9\u540c\u4e00\u4e2a\u5305\u4e2d\u7684\u5176\u4ed6\u7c7b\u9690\u85cf\u8d77\u6765\u3002 \u5f53\u60f3\u8981\u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u4e14\u4e0d\u60f3\u7f16\u5199\u5927\u91cf\u4ee3\u7801\u65f6\uff0c\u4f7f\u7528\u533f\u540d \uff08anonymous) \u5185\u90e8\u7c7b\u6bd4\u8f83\u4fbf\u6377\u3002 \u5185\u90e8\u7c7b\u7684\u5bf9\u8c61\u6709\u4e00\u4e2a\u9690\u5f0f\u5f15\u7528\uff0c \u5b83\u5f15\u7528\u4e86\u5b9e\u4f8b\u5316\u8be5\u5185\u90e8\u5bf9\u8c61\u7684\u5916\u56f4\u7c7b\u5bf9\u8c61\u3002\u901a\u8fc7\u8fd9\u4e2a\u6307\u9488\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5916\u56f4\u7c7b\u5bf9\u8c61\u7684\u5168\u90e8\u72b6\u6001\u3002 \u5916\u56f4\u7c7b\u7684\u5f15\u7528\u5728\u6784\u9020\u5668\u4e2d\u8bbe\u7f6e\u3002\u7f16\u8bd1\u5668\u4fee\u6539\u4e86\u6240\u6709\u7684\u5185\u90e8\u7c7b\u7684\u6784\u9020\u5668\uff0c \u6dfb\u52a0\u4e00\u4e2a\u5916\u56f4\u7c7b \u5f15\u7528\u7684\u53c2\u6570\u3002 \u5728Java\u4e2d\uff0cstatic \u5185\u90e8\u7c7b\u6ca1\u6709\u8fd9\u79cd\u9644\u52a0\u6307\u9488\uff0c\u8fd9\u79cd\u5185\u90e8\u7c7b \u7c7b\u4f3cC++\u4e2d\u7684\u5d4c\u5957\u7c7b\u3002 \u5185\u90e8\u7c7b\u662f\u4e00\u79cd\u7f16\u8bd1\u5668\u73b0\u8c61\uff0c\u4e0e\u865a\u62df\u673a\u65e0\u5173\u3002\u7f16\u8bd1\u5668\u5c06\u4f1a\u628a\u5185\u90e8\u7c7b\u7ffb\u8bd1\u6210\u7528 $ (\u7f8e\u5143\u7b26\u53f7\uff09\u5206\u9694\u5916\u90e8\u7c7b\u540d\u4e0e\u5185\u90e8\u7c7b\u540d\u7684\u5e38\u89c4\u7c7b\u6587\u4ef6\u3002 \u7f16\u8bd1\u5668\u4e3a\u4e86\u5f15\u7528\u5916\u56f4\u7c7b\uff0c \u751f\u6210\u4e86\u4e00\u4e2a\u9644\u52a0\u7684\u5b9e\u4f8b\u57df this$0 (\u540d\u5b57this$0 \u662f\u7531\u7f16\u8bd1\u5668\u5408\u6210\u7684\uff0c\u5728\u81ea\u5df1\u7f16\u5199\u7684\u4ee3\u7801\u4e2d\u4e0d\u80fd\u591f\u5f15\u7528\u5b83\u3002 \u7f16\u8bd1\u5668\u5728\u5916\u56f4\u7c7b\u6dfb\u52a0\u9759\u6001\u65b9\u6cd5 access$000(\u5177\u4f53\u540d\u79f0\u89c6\u7f16\u8bd1\u5668\u51b3\u5b9a), \u5b83\u5c06\u8fd4\u56de\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u5b83\u7684\u5bf9\u8c61\u57df;\u800c\u5185\u90e8\u7c7b\u5c31\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002 \u8fd9\u6837\u505a\u5b58\u5728\u5b89\u5168\u98ce\u9669\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 access$000\u65b9\u6cd5\u5f88\u5bb9\u6613\u5730\u8bfb\u53d6\u5230\u79c1\u6709\u57df beep; \u4f8b\u5982\u653b\u51fb\u4ee3\u7801\u4e0e\u88ab\u653b\u51fb\u7c7b\u653e\u5728\u540c\u4e00\u4e2a\u5305\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u7528\u865a\u62df\u673a\u6307\u4ee4\u8c03\u7528access$000\u65b9\u6cd5\uff0c\u8bbf\u95ee\u5230outerClass\u7684private\u53d8\u91cf\u3002 \u5c40\u90e8\u5185\u90e8\u7c7b \u5728\u65b9\u6cd5\u4e2d\u5b9a\u4e49\u7684\u7c7b\uff0c\u4e0d\u80fd\u7528 public \u6216 private \u8bbf\u95ee\u8bf4\u660e\u7b26\u8fdb\u884c\u58f0\u660e\u3002\u5b83\u7684\u4f5c\u7528\u57df\u88ab\u9650\u5b9a\u5728\u58f0\u660e\u8fd9\u4e2a\u5c40\u90e8 \u7c7b\u7684\u5757\u4e2d\u3002 \u5c40\u90e8\u7c7b\u6709\u4e00\u4e2a\u4f18\u52bf\uff0c \u5373\u5bf9\u5916\u90e8\u4e16\u754c\u53ef\u4ee5\u5b8c\u5168\u5730\u9690\u85cf\u8d77\u6765\uff1b \u6b64\u5916\u5b83\u4eec\u4e0d\u4ec5\u80fd\u591f\u8bbf\u95ee\u5305\u542b\u5b83\u4eec\u7684\u5916\u90e8\u7c7b\uff0c\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\u3002\u4e0d\u8fc7\uff0c\u90a3\u4e9b\u5c40\u90e8\u53d8\u91cf\u5fc5\u987b\u4e8b\u5b9e\u4e0a\u4e3a final\u3002\u8fd9\u8bf4\u660e\uff0c\u5b83\u4eec\u4e00\u65e6\u8d4b\u503c\u5c31\u7edd\u4e0d\u4f1a\u6539\u53d8\u3002 \u4e8b\u5b9e\u4e0a\u5373\u65f6\u65b9\u6cd5\u5df2\u7ecf\u7ed3\u675f\uff0c\u4f46\u5185\u90e8\u7c7b\u5bf9\u8c61\u4f9d\u65e7\u53ef\u4ee5\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u5728\u5c40\u90e8\u7c7b\u4e2d\u4e3a\u6bcf\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u5efa\u7acb\u4e86\u76f8\u5e94\u7684\u6570\u636e\u57df(\u5982\u4f8b\u5b50\u4e2d val$len), \u5e76\u5c06\u5c40\u90e8\u53d8\u91cf\u62f7\u8d1d\u5230\u6784\u9020\u5668\u4e2d\uff0c \u4ee5\u4fbf\u5c06\u8fd9\u4e9b\u6570\u636e\u57df\u521d\u59cb\u5316\u4e3a\u5c40\u90e8\u53d8\u91cf\u7684\u526f\u672c \u533f\u540d\u5185\u90e8\u7c7b \u8bed\u6cd5\u683c\u5f0f: SuperType obj = new SuperType(construction parameters) { \u2003inner class methods and data } SuperType \u53ef\u4ee5\u662f ActionListener \u8fd9\u6837\u7684\u63a5\u53e3\uff0c \u4e8e\u662f\u5185\u90e8\u7c7b\u5c31\u8981\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u3002 SuperType \u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7c7b\uff0c\u4e8e\u662f\u5185\u90e8\u7c7b\u5c31\u8986\u5199\u7236\u7c7b\u7684\u65b9\u6cd5\u3002 \u5bf9\u4e8e\u63a5\u6536\u51fd\u6570\u5f0f\u63a5\u53e3\u4e3a\u53c2\u6570\u7684\u65b9\u6cd5\uff0cobj\u4f5c\u4e3aSuperType\u7684\u533f\u540d\u5b50\u7c7b\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c \u4f46\u73b0\u5728\u4f7f\u7528\u533f\u540dlambda\u8868\u8fbe\u5f0f\u66f4\u65b9\u4fbf\u3002 class outerClass{ private int beep; public outerClass(int _beep){ this.beep=_beep; } public void test(){ innerClass ic = new innerClass(); ic.fun(); } public void test2(int len){ class localInnerClass{ public void action(){ System.out.println(\"outerClass::localInnerClass::len=\"+len); } } localInnerClass lic = new localInnerClass(); lic.action(); } public class innerClass{ public void fun(){ System.out.println(\"outerClass::innerClass::beep=\"+beep); } } } // \u901a\u8fc7code/ReflectionTest\u6765\u67e5\u770b\u5916\u90e8\u7c7b\u548c\u5185\u90e8\u7c7b // \u8f93\u51fa\u7ed3\u679c class outerClass { Constructor public outerClass(int); Methods static int access$000(outerClass); public void test(); Fields private int beep; } // \u8f93\u5165\u7c7b\u540d outerClass$innerClass public class outerClass$innerClass { Constructor public outerClass$innerClass(outerClass); Methods public void fun(); Fields final outerClass this$0; } // outerClass$1localInnerClass\uff0c $1\u8868\u793a\u7b2c\u4e00\u4e2a\u5c40\u90e8\u5185\u90e8\u7c7b class outerClass$1localInnerClass { Constructor outerClass$1localInnerClass(outerClass, int); Methods public void action(); Fields final int val$len; final outerClass this$0; } \u9759\u6001\u5185\u90e8\u7c7b \u6709\u65f6\u5019\uff0c \u4f7f\u7528\u5185\u90e8\u7c7b\u53ea\u662f\u4e3a\u4e86\u628a\u4e00\u4e2a\u7c7b\u9690\u85cf\u5728\u53e6\u5916\u4e00\u4e2a\u7c7b\u7684\u5185\u90e8\uff0c\u5e76\u4e0d\u9700\u8981\u5185\u90e8\u7c7b\u5f15\u7528 \u5916\u56f4\u7c7b\u5bf9\u8c61\u3002\u4e3a\u6b64\uff0c\u53ef\u4ee5\u5c06\u5185\u90e8\u7c7b\u58f0\u660e\u4e3a static, \u4ee5\u4fbf\u53d6\u6d88\u4ea7\u751f\u7684\u5f15\u7528\u3002 \u53ea\u6709\u5185\u90e8\u7c7b\u53ef\u4ee5\u58f0\u660e\u4e3a static\u3002\u9759\u6001\u5185\u90e8\u7c7b\u7684\u5bf9\u8c61\u9664\u4e86\u6ca1\u6709\u5bf9\u751f\u6210\u5b83\u7684\u5916\u56f4\u7c7b\u5bf9\u8c61 \u7684\u5f15\u7528\u7279\u6743\u5916\uff0c \u4e0e\u5176\u4ed6\u6240\u5187\u5185\u90e8\u7c7b\u5b8c\u5168\u4e00\u6837\u3002 \u5f02\u5e38 \u5f02\u5e38\u5206\u7c7b \u6240\u6709\u7684\u5f02\u5e38\u90fd\u662f\u7531 Throwable \u7ee7\u627f\u800c\u6765\uff0c\u4f46\u5728\u4e0b\u4e00\u5c42\u7acb\u5373\u5206\u89e3\u4e3a\u4e24\u4e2a\u5206\u652f: Error \u548c Exception; Error\u7c7b\u5c42\u6b21\u7ed3\u6784\u63cf\u8ff0\u4e86 Java \u8fd0\u884c\u65f6\u7cfb\u7edf\u7684\u5185\u90e8\u9519\u8bef\u548c\u8d44\u6e90\u8017\u5c3d\u9519\u8bef\u3002 \u5e94\u7528\u7a0b\u5e8f\u4e0d\u5e94\u8be5\u629b\u51fa\u8fd9\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\u3002 \u7531\u7a0b\u5e8f\u9519\u8bef\u5bfc\u81f4\u7684\u5f02\u5e38\u5c5e\u4e8eRuntimeException(\u5982\u6570\u7ec4\u8d8a\u754c\u3001\u96640\u7b49); \u800c\u7a0b\u5e8f\u672c\u8eab\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u7531\u4e8e\u50cfI/O\u9519\u8bef(\u5982\u6587\u4ef6\u4e0d\u5b58)\u5728\u8fd9\u7c7b\u95ee\u9898\u5bfc\u81f4\u7684\u5f02\u5e38\u5c5e\u4e8e\u5176\u4ed6\u5f02\u5e38\u3002 Java\u5c06\u6d3e\u751f\u4e8eError\u7c7b\u6216RuntimeException\u7c7b\u7684\u6240\u6709\u5f02\u5e38\u79f0\u4e3a \u975e\u53d7\u67e5 (unchecked)\u5f02\u5e38\uff0c\u6240\u6709\u5176\u4ed6\u7684\u5f02\u5e38\u79f0\u4e3a \u53d7\u67e5 (checked)\u5f02\u5e38\u3002 \u7f16\u8bd1\u5668\u5c06\u6838\u67e5\u662f\u5426\u4e3a\u6240\u6709\u7684\u53d7\u67fb\u5f02\u5e38\u63d0\u4f9b\u4e86\u5f02\u5e38\u5904\u7406\u5668\uff0c\u5373\u8981\u6c42\u4e00\u4e2a\u65b9\u6cd5\u5fc5\u987b\u58f0\u660e\u6240\u6709\u53ef\u80fd\u629b\u51fa\u7684\u53d7\u67e5\u5f02\u5e38\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u53ef\u80fd\u629b\u51fa\u53d7\u67e5\u5f02\u5e38\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\u53cd\u5c04\u4e2d\u901a\u8fc7\u7c7b\u540d\u6765\u6784\u9020\u5bf9\u8c61\uff0c\u53ef\u80fd\u5b58\u5728\u8be5\u7c7b\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u8981\u6c42\u8fd9\u90e8\u5206\u4ee3\u7801\u8981\u4e48\u6355\u83b7\u5f02\u5e38\uff0c\u8981\u4e48\u629b\u51fa\u5f02\u5e38\u3002 \u629b\u51fa\u5f02\u5e38 \u5728java\u4e2d\uff0c\u6ca1\u6709 throws \u8bf4\u660e\u7b26\u7684\u65b9\u6cd5\u5c06\u4e0d\u80fd\u629b\u51fa\u4efb\u4f55\u53d7\u67e5\u5f02\u5e38\u3002 \u5982\u679c\u5728\u5b50\u7c7b\u4e2d\u8986\u76d6\u4e86\u8d85\u7c7b\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5b50\u7c7b\u65b9\u6cd5\u4e2d\u58f0\u660e\u7684\u53d7\u67e5\u5f02\u5e38\u4e0d\u80fd\u6bd4\u8d85\u7c7b\u65b9\u6cd5\u4e2d\u58f0\u660e\u7684\u5f02\u5e38\u66f4\u901a\u7528\uff1b\u5e76\u4e14\u5982\u679c\u8d85\u7c7b\u65b9\u6cd5\u6ca1\u6709\u629b\u51fa\u4efb\u4f55\u53d7\u67e5\u5f02\u5e38\uff0c\u5b50\u7c7b\u4e5f\u4e0d\u80fd\u629b\u51fa\u4efb\u4f55\u53d7\u67e5\u5f02\u5e38\u3002 \u5f53 finally \u5b50\u53e5\u5305\u542b return \u8bed\u53e5\u65f6\uff0c\u5c06\u4f1a\u51fa\u73b0\u4e00\u79cd\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c\uff0c\u5047\u8bbe\u5229\u7528 return\u8bed\u53e5\u4ecetry\u8bed\u53e5\u5757\u4e2d\u9000\u51fa\u3002\u5728\u65b9\u6cd5\u8fd4\u56de\u524d\uff0cfinally\u5b50\u53e5\u7684\u5185\u5bb9\u5c06\u88ab\u6267\u884c\u3002 \u5e26\u8d44\u6e90\u7684try\u8bed\u53e5: \u5047\u8bbe\u8d44\u6e90\u5c5e\u4e8e\u4e00\u4e2a\u5b9e\u73b0\u4e86AutoCloseable\u63a5\u53e3\u7684\u7c7b\uff0cAutoCloseable\u63a5\u53e3\u6709\u4e00\u4e2a\u65b9\u6cd5\uff0c void close() throws Exception\uff0c try\u5757\u6b63\u5e38\u9000\u51fa\u6216\u629b\u51fa\u5f02\u5e38\u65f6\uff0c\u90fd\u4f1a\u81ea\u52a8\u8c03\u7528close\u65b9\u6cd5\uff0c\u5173\u95ed\u8d44\u6e90\u3002 //\u8bed\u6cd5 try{ .. }catch(Exception e){ .. }finally{ .. } try(Resource res=..){ // work with res } \u65ad\u8a00 \u65ad\u8a00\u673a\u5236\u5141\u8bb8\u5728\u6d4b\u8bd5\u671f\u95f4\u5411\u4ee3\u7801\u4e2d\u63d2\u5165\u4e00\u4e9b\u68c0\u67fb\u8bed\u53e5\u3002\u5f53\u4ee3\u7801\u53d1\u5e03\u65f6\uff0c\u8fd9\u4e9b\u63d2\u5165\u7684\u68c0\u6d4b \u8bed\u53e5\u5c06\u4f1a\u88ab\u81ea\u52a8\u79fb\u8d70\u3002 assert \u6761\u4ef6; assert \u6761\u4ef6: \u8868\u8fbe\u5f0f; \u8fd9\u4e24\u79cd\u5f62\u5f0f\u90fd\u4f1a\u5bf9\u6761\u4ef6\u8fdb\u884c\u68c0\u6d4b\uff0c \u5982\u679c\u7ed3\u679c\u4e3a false, \u5219\u629b\u51fa\u4e00\u4e2a AssertionError \u5f02\u5e38\u3002 \u5728\u7b2c\u4e8c\u79cd\u5f62\u5f0f\u4e2d\uff0c\u8868\u8fbe\u5f0f\u5c06\u88ab\u4f20\u5165 AssertionError \u7684\u6784\u9020\u5668\uff0c\u5e76\u8f6c\u6362\u6210\u4e00\u4e2a\u6d88\u606f\u5b57\u7b26\u4e32\u3002assert x>0: x; \u8868\u8fbe\u5f0f\u90e8\u5206\u7684\u552f\u4e00\u76ee\u7684\u662f\u4ea7\u751f\u4e00\u4e2a\u6d88\u606f\u5b57\u7b26\u4e32\u3002AssertionError \u5bf9\u8c61\u5e76\u4e0d\u5b58\u50a8\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u56e0\u6b64\uff0c\u4e0d\u53ef\u80fd\u5728\u4ee5\u540e\u5f97\u5230\u5b83\u3002 \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u65ad\u8a00\u88ab\u7981\u7528\u3002\u53ef\u4ee5\u5728\u8fd0\u884c\u7a0b\u5e8f\u65f6\u7528 -enableassertions \u6216 -ea \u9009\u9879\u542f\u7528; \u5728\u542f\u7528\u6216\u7981\u7528\u65ad\u8a00\u65f6\u4e0d\u5fc5\u91cd\u65b0\u7f16\u8bd1\u7a0b\u5e8f\u3002\u542f\u7528\u6216\u7981\u7528\u65ad\u8a00\u662f\u7c7b\u52a0\u8f7d\u5668(class loader) \u7684\u529f\u80fd\u3002\u5f53\u65ad\u8a00\u88ab\u7981\u7528\u65f6\uff0c\u7c7b\u52a0\u8f7d\u5668\u5c06\u8df3\u8fc7\u65ad\u8a00\u4ee3\u7801\uff0c \u56e0\u6b64\uff0c\u4e0d\u4f1a\u964d\u4f4e\u7a0b\u5e8f\u8fd0\u884c\u7684\u901f\u5ea6\u3002 \u6cdb\u578b\u7a0b\u5e8f\u8bbe\u8ba1 \u6cdb\u578b\u65b9\u6cd5 \u6cdb\u578b\u65b9\u6cd5\u53ef\u4ee5\u5b9a\u4e49\u5728\u666e\u901a\u7c7b\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u5728\u6cdb\u578b\u7c7b\u4e2d\u3002 public static < T > T getMiddle() {..} \u7c7b\u578b\u53d8\u91cf < T >\u653e\u5728\u4fee\u9970\u7b26\u4e4b\u540e\uff0c\u8fd4\u56de\u7c7b\u578b\u4e4b\u524d\uff1b\u5f53\u8c03\u7528\u6cdb\u578b\u65b9\u6cd5\u65f6\uff0c\u5728\u65b9\u6cd5\u540d\u524d\u7684\u5c16\u62ec\u53f7\u4e2d\u653e\u4eba\u5177\u4f53\u7684\u7c7b\u578b\uff0c obj.< String >getMiddle(); \u4e0d\u8fc7\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u65b9\u6cd5\u8c03\u7528\u4e2d\u53ef\u4ee5\u7701\u7565\u8bf8\u5982< String >\u8fd9\u6837\u7684\u7c7b\u578b\u53c2\u6570(\u5373\u662f\u7c7b\u578b\u63a8\u65ad)\u3002 \u6cdb\u578b\u4f18\u70b9 \u6cdb\u578b\u53ef\u4ee5\u589e\u5f3a\u7f16\u8bd1\u65f6\u9519\u8bef\u68c0\u6d4b\uff0c\u51cf\u5c11\u56e0\u7c7b\u578b\u95ee\u9898\u5f15\u53d1\u7684\u8fd0\u884c\u65f6\u5f02\u5e38\uff1b\u6cdb\u578b\u53ef\u4ee5\u907f\u514d\u7c7b\u578b\u8f6c\u6362\uff1b\u53ef\u4ee5\u4f7f\u7528\u6cdb\u578b\u7b97\u6cd5\uff0c\u589e\u52a0\u4ee3\u7801\u590d\u7528\u6027 \u76f8\u5173\u540d\u8bcd \u539f\u59cb\u7c7b\u578b: \u64e6\u9664\u5b9e\u9645\u7c7b\u578b\u53d8\u91cf\u7684\u6cdb\u578b\u5c31\u662f\u4e00\u4e2a\u539f\u59cb\u7c7b\u578b class Box {} Box b = new Box(); //\u8fd9\u4e2aBox\u5c31\u662fBox \u7684\u539f\u59cb\u7c7b\u578b \u6cdb\u578b\u7c7b\u578b\uff1aPerson< T >\u6574\u4e2a\u5c31\u662f\u6cdb\u578b\u7c7b\u578b\u3002 \u7c7b\u578b\u53c2\u6570\uff1aPerson< T >\u4e2d\u7684T\u5c31\u7c7b\u578b\u53c2\u6570\u3002 \u53c2\u6570\u5316\u7c7b\u578b\uff1aPerson< Man >\u6574\u4e2a\u6210\u4e3a\u53c2\u6570\u5316\u7c7b\u578b(ParameterizedType) \u5b9e\u9645\u7c7b\u578b\u53c2\u6570\uff1aPerson< Man >\u4e2d\u7684Man\u5c31\u79f0\u4e4b\u4e3a\u5b9e\u9645\u7c7b\u578b\u53c2\u6570 \u7c7b\u578b\u53c2\u6570\u7684\u9650\u5b9a \u5bf9\u7c7b\u578b\u53c2\u6570\u52a0\u4ee5\u7ea6\u675f\uff0c\u7c7b\u4f3cC++\u4e2d\u7684\u6a21\u677f\u7279\u5316\uff0c\u4f46\u529f\u80fd\u66f4\u5f3a\uff0c\u4f8b\u5982\u53ef\u4ee5\u9650\u5236\u7c7b\u578b\u53d8\u91cf\u662f\u5b9e\u73b0\u4e86\u67d0\u4e2a\u63a5\u53e3\u3002 public static < T extends Comparable > T fun(){..} < T extends BoundingType >, \u8868\u793aT\u662f\u7ed1\u5b9a\u7c7b\u578b\u7684\u5b50\u7c7b\u578b\uff0c\u7ed1\u5b9a\u7c7b\u578b\u53ef\u4ee5\u662f\u7c7b\u4e5f\u53ef\u4ee5\u662f\u63a5\u53e3\uff1b\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\u6216\u901a\u914d\u7b26(?)\u53ef\u4ee5\u6709\u591a\u4e2a\u9650\u5b9a\uff1b T extends Comparable & Clonable, \u9650\u5b9a\u7c7b\u578b\u7528\u201c &\u201d \u5206\u9694\uff0c\u800c\u9017\u53f7\u7528\u6765\u5206\u9694\u5b9e\u9645\u7c7b\u578b\u53c2\u6570\u3002 \u6cdb\u578b\u4ee3\u7801\u548c\u865a\u62df\u673a 1\u3001\u6cdb\u578b\u64e6\u9664: \u65e0\u8bba\u4f55\u65f6\u5b9a\u4e49\u4e00\u4e2a\u6cdb\u578b\u7c7b\u578b\uff0c\u90fd\u81ea\u52a8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u76f8\u5e94\u7684\u539f\u59cb\u7c7b\u578b(raw type)\u3002 \u539f\u59cb\u7c7b\u578b\u7684\u540d\u5b57\u5c31\u662f\u5220\u53bb\u7c7b\u578b\u53c2\u6570\u540e\u7684\u6cdb\u578b\u7c7b\u578b\u540d\uff0c\u540c\u65f6\u4f1a\u64e6\u9664(erased)\u7c7b\u578b\u53c2\u6570\u3002 2\u3001\u64e6\u9664\u7c7b\u578b\u53c2\u6570\u540e\uff0c\u4f1a\u7528\u7b2c\u4e00\u4e2a\u9650\u5b9a\u7684\u5b9e\u9645\u7c7b\u578b\u53c2\u6570\u6765\u66ff\u6362\uff0c\u5982\u679c\u6ca1\u6709\u7ed9\u5b9a\u9650\u5b9a\uff0c\u5c31\u91c7\u7528 Object \u66ff\u6362\u3002 \u7efc\u54081\u30012\u53ef\u77e5\uff0c\u865a\u62df\u673a\u4e2d\u6ca1\u6709\u6cdb\u578b\uff0c\u53ea\u6709\u666e\u901a\u7684\u7c7b\u548c\u65b9\u6cd5\u3002 3\u3001\u5e76\u4e14\u4e3a\u4e86\u6548\u7387\uff0c\u5e94\u8be5\u5c06\u6ca1\u6709\u65b9\u6cd5\u7684\u63a5\u53e3\u653e\u5728\u8fb9\u754c\u5217\u8868\u7684\u672b\u5c3e\uff0c\u4f8b\u5982Cloneable\u5e94\u8be5\u653e\u5728Compareable\u4e4b\u540e\uff0c \u5426\u5219\u5c06\u4f7f\u7528Cloneable\u5bf9\u8c61\u6765\u66ff\u6362\u7c7b\u578b\u53d8\u91cf\uff0c\u65b9\u6cd5\u4e2d\u5fc5\u8981\u65f6\u8981\u63d2\u5165\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002 4\u3001\u6865\u65b9\u6cd5\uff0c\u56e0\u4e3a\u7c7b\u578b\u64e6\u9664\u4e0e\u591a\u6001\u4f1a\u53d1\u751f\u51b2\u7a81\uff1b public class hello { public static void main(String[] args) { parent< String > p = new child(); p.say(\"hello\"); /* child\u7684\u65b9\u6cd5\u8868\u4e2d\u6709\u4e24\u4e2a\u65b9\u6cd5\uff0csay(String str)\u548csay(Object str),\u540e\u8005\u662f\u7236\u7c7b\u6cdb\u578b\u64e6\u9664\u540e\u7684\u65b9\u6cd5 \u6309\u7406\u6765\u8bf4\uff0c\u8fd9\u6bb5\u6d4b\u8bd5\u4ee3\u7801\u5e94\u8be5\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\uff0c\u56e0\u4e3a\u8981\u5b9e\u73b0\u591a\u6001\u7684\u8bdd\uff0c\u6240\u8c03\u7528\u7684\u65b9\u6cd5\u5fc5\u987b\u5728\u5b50\u7c7b\u4e2d\u91cd\u5199\uff0c \u4f46\u662f\u5728\u8fd9\u91ccChild\u7c7b\u5e76\u6ca1\u6709\u91cd\u5199Parent\u7c7b\u4e2d\u7684say(Object value)\u65b9\u6cd5\uff0c\u53ea\u662f\u5355\u7eaf\u7684\u7ee7\u627f\u800c\u5df2\uff0c \u5e76\u4e14\u65b0\u52a0\u4e86\u4e00\u4e2a\u53c2\u6570\u4e0d\u540c\u7684\u540c\u540d\u65b9\u6cd5\u3002\u4f46\u662f\u7ed3\u679c\u662f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3002 \u539f\u56e0\u662f\u7f16\u8bd1\u5668\u5728Child\u7c7b\u4e2d\u81ea\u52a8\u751f\u6210\u4e86\u4e00\u4e2a\u6865\u65b9\u6cd5\uff0c\u6765\u907f\u514d\u7c7b\u578b\u64e6\u9664\u4e0e\u591a\u6001\u53d1\u9001\u51b2\u7a81\u3002 public void say(Object value) { sayHello((String) value); } */ /* \u53e6\u5916\u5982\u679c\u7236\u7c7b\u4e2d\u5b58\u5728\u4e00\u4e2a\u8fd4\u56de\u7c7b\u578bT\u7684\u65b9\u6cd5\uff0c\u5b50\u7c7b\u4e2d\u8bd5\u56fe\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5 \u8fd9\u6837\u5b50\u7c7b\u7684\u65b9\u6cd5\u8868\u4e2d\u5c06\u5b58\u5728\u4e24\u4e2a\u65b9\u6cd5\uff0c\u9664\u4e86\u8fd4\u56de\u7c7b\u578b\u4e0d\u540c\uff0c\u65b9\u6cd5\u7b7e\u540d\u662f\u76f8\u540c\u7684\uff0c \u4f46\u5bf9\u4e8e\u865a\u62df\u673a\u6765\u8bf4\uff0c\u662f\u7528\u8fd4\u56de\u503c+\u65b9\u6cd5\u540d+\u53c2\u6570\u7684\u65b9\u5f0f\u6765\u8ba1\u7b97\u51fd\u6570\u7b7e\u540d\u7684\uff0c \u56e0\u6b64\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4ea7\u751f\u4e24\u4e2a\u4ec5\u8fd4\u56de\u7c7b\u578b\u4e0d\u540c\u7684\u65b9\u6cd5\u5b57\u8282\u7801\uff0c\u865a\u62df\u673a\u80fd\u591f\u6b63\u786e\u5730\u5904\u7406\u8fd9\u4e00\u60c5\u51b5 */ } } class parent<T>{ public void say(T str){ System.out.println(\"parent:\"+str); } } class child extends parent{ public void say(String str){ System.out.println(\"child:\"+str); } } \u6cdb\u578b\u7684\u7ea6\u675f\u4e0e\u5c40\u9650\u6027 1\u3001\u4e0d\u80fd\u7528\u57fa\u672c\u7c7b\u578b\u5b9e\u4f8b\u5316\u7c7b\u578b\u53c2\u6570 2\u3001\u8fd0\u884c\u65f6\u7c7b\u578b\u67e5\u8be2\u53ea\u9002\u7528\u4e8e\u539f\u59cb\u7c7b\u578b\uff0c\u8bd5\u56fe\u67e5\u8be2\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u5c5e\u4e8e\u67d0\u4e2a\u6cdb\u578b\u7c7b\u578b\u65f6\uff0c \u4f7f\u7528 instanceof \u4f1a\u5f97\u5230\u4e00\u4e2a\u7f16\u8bd1\u5668\u9519\u8bef\uff1b\u5982\u679c\u4f7f\u7528\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4f1a\u5f97\u5230\u4e00\u4e2a\u8b66\u544a\uff1b getClass\u65b9\u6cd5\u603b\u662f\u8fd4\u56de\u539f\u59cb\u7c7b\u578b\u3002 3\u3001\u867d\u7136\u58f0\u660e\u53c2\u6570\u5316\u7c7b\u578b\u7684\u6570\u7ec4\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u4e0d\u80fd\u5b9e\u4f8b\u5316\u53c2\u6570\u5316\u7c7b\u578b\u7684\u6570\u7ec4\u7684\u6570\u7ec4\u3002 \u5b89\u5168\u6709\u6548\u65b9\u6cd5\u662f\u4f7f\u7528ArrayList\uff0c\u4f8b\u5982 ArrayList< Pair< String > > arr = new ArrayList<>(); 4\u3001\u53ef\u4ee5\u4f7f\u7528 @SafeVarargs \u6ce8\u89e3\u6765\u6d88\u9664\u521b\u5efa\u6cdb\u578b\u6570\u7ec4\u7684\u6709\u5173\u9650\u5236\uff0c\u5f53\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u662f\u53ef\u53d8\uff0c\u4e14\u662f\u6cdb\u578b\u7c7b\u578b\u3002 5\u3001\u4e0d\u80fd\u5b9e\u4f8b\u5316\u7c7b\u578b\u53d8\u91cf\uff0c\u5982 new T()\u6216\u8005T.class(\u5728C++\u4e2d\uff0c\u662f\u53ef\u4ee5\u5b9e\u4f8b\u5316\u4e00\u4e2a\u6a21\u677f\u7c7b\u578b\u7684)\uff1b \u90a3\u5982\u4f55\u5728\u6cdb\u578b\u7c7b\u4e2d\u521d\u59cb\u5316\u53c2\u6570\u7c7b\u578b\u5462\uff1f \u8ba9\u8c03\u7528\u8005\u63d0\u4f9b\u4e00\u4e2a\u6784\u9020\u5668\u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982Pair< T >\u6709\u4e00\u4e2amakePair\u65b9\u6cd5\uff0c\u63a5\u53d7\u4e00\u4e2aSupplier< T >\uff0c \u8fd9\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u8868\u793a\u4e00\u4e2a\u65e0\u53c2\u6570\u800c\u4e14\u8fd4\u56de\u7c7b\u578b\u4e3aT\u7684\u51fd\u6570\u3002\u8fd9\u6837\u53ef\u4ee5\u4f20\u5165\u5b9e\u9645\u7c7b\u578b\u7684\u6784\u9020\u5668\uff0c \u4f8b\u5982Pair< String > p = Pair.makePair(String::new); 6\u3001\u4e0d\u80fd\u6784\u9020\u6cdb\u578b\u6570\u7ec4\uff0c\u5c31\u50cf\u4e0d\u80fd\u5b9e\u4f8b\u5316\u4e00\u4e2a\u6cdb\u578b\u5b9e\u4f8b\u4e00\u6837\uff0c\u4e5f\u4e0d\u80fd\u5b9e\u4f8b\u5316\u6570\u7ec4\u3002 7\u3001\u6cdb\u578b\u7c7b\u7684\u9759\u6001\u4e0a\u4e0b\u6587\u4e2d\u7c7b\u578b\u53d8\u91cf\u65e0\u6548\uff0c\u5373\u4e0d\u80fd\u5728\u9759\u6001\u57df\u6216\u65b9\u6cd5\u4e2d\u5f15\u7528\u7c7b\u578b\u53c2\u6570\u3002 8\u3001\u65e2\u4e0d\u80fd\u629b\u51fa\u4e5f\u4e0d\u80fd\u6355\u83b7\u6cdb\u578b\u7c7b\u5bf9\u8c61\u3002\u5b9e\u9645\u4e0a\uff0c\u751a\u81f3\u6cdb\u578b\u7c7b\u6269\u5c55 Throwable \u90fd\u662f\u4e0d\u5408\u6cd5\u7684\u3002 \u4f46\u662f\u5141\u8bb8\u7c7b\u578b\u53d8\u91cf\u6269\u5c55Throwable\u3002 public class Problem< T > extends Exception // error public static < T extends Throwable > void doWork(T t) throws T // OK 9\u3001\u53ef\u4ee5\u6d88\u9664\u5bf9\u4e8e\u53d7\u67e5\u5f02\u5e38\u7684\u68c0\u6d4b \u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5141\u8bb8\u629b\u51fa\u53d7\u67e5\u5f02\u5e38\u7684\u65b9\u6cd5\uff0c\u9700\u8981\u6355\u83b7\u6240\u6709\u7684\u53d7\u67e5\u5f02\u5e38\uff1b \u4f46\u53c8\u5e0c\u671b\u7531\u4e0a\u5c42\u8c03\u7528\u6765\u5904\u7406\u5f02\u5e38\uff0c\u53ef\u4ee5\u5229\u7528\u4e0b\u9762\u65b9\u6cd5\uff0c\u5c06\u53d7\u67e5\u5f02\u5e38\u4f2a\u88c5\u6210\u975e\u53d7\u67e5\u5f02\u5e38\u629b\u51fa\u3002 class Block{ @SuppressWamings(\"unchecked\") public static < T extends Throwable > void throwAs(Throwable e) throws T { throw (T) e; } } // \u5728\u5176\u4ed6\u7c7b\u67d0\u4e2a\u65b9\u6cd5\u4e2d try{ .. }catch(Throwable t){ Block.< RuntimeException >throwAs(t); // \u5047\u8bbetry\u8bed\u53e5\u4e2d\u53d1\u751f\u4e86\u53d7\u67e5\u5f02\u5e38\uff0c\u5982 FileNotFoundException // \u8fd9\u91cc\u901a\u8fc7\u629b\u51fa\u6cdb\u578b\u5f02\u5e38(\u6b64\u65f6\u7c7b\u578b\u53c2\u6570\u786e\u5b9a\u4e3a RuntimeException, \u662f\u975e\u53d7\u67e5\u5f02\u5e38)\u6b3a\u9a97\u4e86\u7f16\u8bd1\u5668\uff0c // \u6765\u5b9e\u9645\u629b\u51faFileNotFoundException\u3002 // \u8fd9\u91cc\u5e76\u6ca1\u6709\u53d1\u751f\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u56e0\u4e3a\u7c7b\u578b\u64e6\u9664\u540e\uff0c\u539f\u59cb\u7c7b\u578b\u90fd\u4e3aThrowable\uff0c // \u6545e\u7684\u5b9e\u9645\u7c7b\u578b\u662f FileNotFoundException\u8fd8\u662fRuntimeException\uff0c\u4f5c\u4e3aThrowable\u7684\u5b50\u7c7b\uff0c // \u7531\u4e8e\u591a\u6001\u7684\u6027\u8d28\uff0c\u4e0a\u5c42\u8c03\u7528\u63a5\u6536\u5230\u5f02\u5e38\u540e\uff0c\u80fd\u6b63\u786e\u83b7\u53d6\u5b9e\u9645\u5f02\u5e38\u7c7b\u578b\u3002 // \u8fd9\u79cd\u65b9\u6cd5\u907f\u514d\u7f16\u5199\u6355\u83b7\u591a\u4e2a\u5f02\u5e38\u5e76\u5305\u88c5\u4e3a\u975e\u53d7\u67e5\u5f02\u5e38\u629b\u51fa\u7684\u7e41\u7410\u4ee3\u7801\uff0c // \u901a\u8fc7initCause\u6765\u5b8c\u6210\u5305\u88c5 } 10\u3001\u6ce8\u610f\u64e6\u9664\u540e\u7684\u51b2\u7a81 \u5f53\u6cdb\u578b\u7c7b\u91cd\u8f7d\u4e86\u8d85\u7c7b\u4e2d\u7684\u65b9\u6cd5\u65f6\uff0c\u82e5\u91cd\u8f7d\u7684\u53c2\u6570\u7c7b\u578b\u662fT\uff0c\u5219\u4f1a\u88ab\u64e6\u9664\u4e3aObject\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51b2\u7a81\uff0c \u4f8b\u5982equals(T t)\u65b9\u6cd5\u4f1a\u4e0eObject\u7c7b\u4e2d\u7684equals(Object o)\u53d1\u9001\u51b2\u7a81\uff1b \u6b64\u5916\uff0c\u8981\u60f3\u652f\u6301\u64e6\u9664\u7684\u8f6c\u6362\uff0c\u5c31\u9700\u8981\u5f3a\u884c\u9650\u5236\u4e00\u4e2a\u7c7b\u6216\u7c7b\u578b\u53d8\u91cf\u4e0d\u80fd\u540c\u65f6\u6210\u4e3a\u4e24\u4e2a\u63a5\u53e3\u7c7b\u578b\u7684\u5b50\u7c7b\uff0c \u5982\u679c\u8fd9\u4e24\u4e2a\u63a5\u53e3\u662f\u540c\u4e00\u63a5\u53e3\u7684\u4e0d\u540c\u53c2\u6570\u5316\u3002 \u56e0\u4e3a\u6709\u53ef\u80fd\u4e0e\u5408\u6210\u7684\u6865\u65b9\u6cd5\u4ea7\u751f\u51b2\u7a81: \u4f8b\u5982\uff0c\u5b9e\u73b0\u4e86 Compamble< X > \u7684\u7c7b\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u6865\u65b9\u6cd5\uff1a public int compareTo(Object other) { return compareTo((X) other); } \u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684 X \u4e0d\u80fd\u6709\u4e24\u4e2a\u8fd9\u6837\u7684\u65b9\u6cd5\u3002 \u6cdb\u578b\u7c7b\u578b\u7684\u7ee7\u627f\u89c4\u5219 \u65e0\u8bba S \u4e0e T \u6709\u4ec0\u4e48\u8054\u7cfb(\u5982\u7ee7\u627f\u5173\u7cfb)\uff0c\u901a\u5e38\uff0cPair< S > \u4e0e Pair< T >\u6ca1\u6709\u4ec0\u4e48\u8054\u7cfb\uff0c\u4e0d\u80fd\u5c06\u4e00\u65b9\u8d4b\u7ed9\u53e6\u4e00\u65b9\uff1b \u901a\u914d\u7b26\u7c7b\u578b ?: extends: Pair< ? extends Employee > \u8981\u6c42\u7c7b\u578b\u53c2\u6570\u5fc5\u987b\u662fEmployee\u7684\u5b50\u7c7b super: Pair< ? super Manager > \u8981\u6c42\u7c7b\u578b\u53c2\u6570\u5fc5\u987b\u662fManager\u7684\u8d85\u7c7b\u578b\u3002 \u65e0\u9650\u5b9a\u901a\u914d\u7b26\uff0c\u5982 Pair< ? >\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u53d8\u91cf\u65e0\u6cd5\u8c03\u7528setter\u65b9\u6cd5\uff0c\u4f46\u53ef\u4ee5\u8c03\u7528getter\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2aObject\u3002 PECS\u539f\u5219 Producter extends Customer super \u58f0\u660e\u53c2\u6570\u5316\u7c7b\u578b\u65f6: \u5982\u679c\u4f60\u53ea\u9700\u8981\u4ece\u96c6\u5408\u4e2d\u83b7\u5f97\u7c7b\u578bT , \u4f7f\u7528< ? extends T>\u901a\u914d\u7b26 \u5982\u679c\u4f60\u53ea\u9700\u8981\u5c06\u7c7b\u578bT\u653e\u5230\u96c6\u5408\u4e2d, \u4f7f\u7528< ? super T>\u901a\u914d\u7b26 \u5982\u679c\u4f60\u65e2\u8981\u83b7\u53d6\u53c8\u8981\u653e\u7f6e\u5143\u7d20\uff0c\u5219\u4e0d\u4f7f\u7528\u4efb\u4f55\u901a\u914d\u7b26\u3002\u4f8b\u5982List< String > \u96c6\u5408\u6846\u67b6 Java\u96c6\u5408\u5e93\u662f\u5c06\u63a5\u53e3\u4e0e\u5b9e\u73b0\u5206\u79bb\u3002 Java\u96c6\u5408\u6846\u67b6\u5305\u542b\u4e24\u79cd\u6839\u63a5\u53e3\uff0cCollection\u548cMap\uff0c\u4e00\u822c\u79f0Collection\u4e3a\u96c6\u5408\uff0c\u5176\u7ee7\u627f\u4e86Iterable\u63a5\u53e3\uff0c\u5b9e\u73b0\u4e86iterator()\u65b9\u6cd5\uff0c\u4e3b\u8981\u5305\u542b\u4e09\u79cd\u5b50\u63a5\u53e3\uff0cList\u3001Set\u3001Queue\uff0c\u5b9e\u73b0\u4e86Collection\u63a5\u53e3\u6216\u5176\u5b50\u63a5\u53e3\u7684\u7c7b\u79f0\u4e3a\u96c6\u5408\u7c7b\uff1b\u800cMap\u4e0eCollection\u662f\u5e73\u884c\u7684\uff0c\u5176\u6ca1\u6709\u5b9e\u73b0 iterator\u65b9\u6cd5\uff0c\u4e0d\u80fd\u76f4\u63a5\u8fdb\u884c\u8fed\u4ee3\uff0c\u4f46\u662f\u5176\u6709\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230\u7c7b\u578b\u4e3aSet\u7684\u89c6\u56fe\uff0c\u901a\u8fc7Set\u7684iterator\u5b9e\u73b0\u5bf9Map\u7684\u8fed\u4ee3\u3002\u5bf9\u4e8e\u5b9e\u73b0\u4e86Map\u63a5\u53e3\u7684\u7c7b\u6709\u65f6\u4e5f\u79f0\u4e3a\u96c6\u5408\u5b9e\u73b0\u7c7b\u3002 Iterator\u63a5\u53e3 \u5305\u542bnext\u3001hasNext\u3001remove\u3001forEachRemaining\u56db\u4e2a\u65b9\u6cd5\uff1b \u7f16\u8bd1\u5668\u7b80\u5355\u5730\u5c06\u201c foreach\u201d \u5faa\u73af\u7ffb\u8bd1\u4e3a\u5e26\u6709\u8fed\u4ee3\u5668\u7684\u5faa\u73af\uff0c\u56e0\u6b64 \u201c for each\u201d \u5faa\u73af\u53ef\u4ee5\u4e0e\u4efb\u4f55\u5b9e\u73b0\u4e86 Iterable \u63a5\u53e3\u7684\u5bf9\u8c61\u4e00\u8d77\u5de5\u4f5c\u3002 Iterable\u63a5\u53e3\u4ec5\u5305\u542b\u4e00\u4e2aiterator\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2aIterator\uff1bCollection \u63a5\u53e3\u6269\u5c55\u4e86 Iterable \u63a5\u53e3\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6807\u51c6\u7c7b\u5e93\u4e2d\u7684\u4efb\u4f55\u96c6\u5408\u90fd\u53ef\u4ee5\u4f7f\u7528\u201c foreach\u201d \u5faa\u73af\u3002 \u5e94\u8be5\u5c06 Java \u8fed\u4ee3\u5668\u8ba4\u4e3a\u662f\u4f4d\u4e8e\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u3002 \u5f53\u8c03\u7528 next \u65f6\uff0c\u8fed\u4ee3\u5668\u5c31\u8d8a\u8fc7\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u521a\u521a\u8d8a\u8fc7\u7684\u90a3\u4e2a\u5143\u7d20\u7684\u5f15\u7528\uff1b \u5bf9 next \u65b9\u6cd5\u548c remove \u65b9\u6cd5\u7684\u8c03\u7528\u5177\u6709\u4e92\u76f8\u4f9d\u8d56\u6027\u3002\u5982\u679c\u8c03\u7528 remove \u4e4b\u524d\u6ca1\u6709\u8c03\u7528 next \u5c06\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u5982\u679c\u8fd9\u6837\u505a\uff0c\u5c06\u4f1a\u629b\u51fa\u4e00\u4e2a IllegalStateException \u5f02\u5e38\u3002 ArrayList\u4e0eVector \u8fd9\u91cc\u53eaJava\u4e2d\u7684Vector\uff0c\u5176\u6240\u6709\u65b9\u6cd5\u90fd\u662f\u540c\u6b65\u7684\uff0c\u53ef\u4ee5\u7531\u591a\u4e2a\u7ebf\u7a0b\u5b89\u5168\u8bbf\u95ee\u4e00\u4e2aVector\u5bf9\u8c61\uff0c\u5982\u679c\u7531\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee Vector, \u4ee3\u7801\u8981 \u5728\u540c\u6b65\u64cd\u4f5c\u4e0a\u8017\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u3002\u6b64\u65f6\u5efa\u8bae\u4f7f\u7528ArrayList\u3002 \u6620\u5c04\u89c6\u56fe \u96c6\u5408\u6846\u67b6\u4e0d\u8ba4\u4e3aMap\u672c\u8eab\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u5f97\u5230\u6620\u5c04\u7684\u89c6\u56fe\uff0c\u8fd9\u662f\u5b9e\u73b0\u4e86Collection\u63a5\u53e3\u6216\u67d0\u4e2a\u5b50\u63a5\u53e3\u7684\u5bf9\u8c61\u3002 \u67093\u79cd\u89c6\u56fe\uff1a \u952e\u96c6\u3001 \u503c\u96c6\u5408\uff08\u4e0d\u662f\u4e00\u4e2a\u96c6\uff09 \u4ee5\u53ca\u952e/\u503c\u5bf9\u96c6\u3002\u952e\u548c\u952e/\u503c\u5bf9\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a \u96c6\uff0c\u56e0\u4e3a\u6620\u5c04\u4e2d\u4e00\u4e2a\u952e\u53ea\u80fd\u6709\u4e00\u4e2a\u526f\u672c\u3002 \u4e0b\u9762\u7684\u65b9\u6cd5\uff1a Set< K > keySet()\u3001Collection< V > values()\u3001Set< Map.Entry< K, V >> entrySet()\uff0c \u4f1a\u5206\u522b\u8fd4\u56de\u8fd9 3 \u4e2a\u89c6\u56fe\uff0c\u901a\u8fc7 for each\u5faa\u73af\u53ef\u4ee5\u904d\u5386\u6bcf\u4e00\u4e2a\u5143\u7d20\u3002\uff08\u6761\u76ee\u96c6\u7684\u5143\u7d20\u662f\u5b9e\u73b0 Map.Entry \u63a5\u53e3\u7684\u7c7b\u7684\u5bf9\u8c61\u3002\uff09 \u5bf9\u4e8e\u8fd9\u4e09\u79cd\u89c6\u56fe\uff0c\u53ef\u4ee5\u4ece\u4e2d\u5220\u9664\u5143\u7d20\u6240\u5220\u9664\u7684\u503c\u53ca\u5176\u5bf9\u5e94\u7684key\uff0c\u5c06\u4ece\u6620\u5c04\u4e2d\u5220\u9664\uff0c\u4e0d\u8fc7\u4e0d\u80fd\u589e\u52a0\u4efb\u4f55\u5143\u7d20\u3002 \u5bf9\u4e8eMap.Entry< K,V >\u5bf9\u8c61\u53ef\u4ee5\u7528setValue\u65b9\u6cd5\u4fee\u6539\u503c\uff0c\u5e76\u8fd4\u56de\u539f\u6765\u7684\u503c\u3002 \u5f31\u6563\u5217\u6620\u5c04 1 WeakHashMap\u7684key\u548cvalue\u90fd\u53ef\u4ee5\u4e3anull,\u800cHashMap\u7684key\u53ef\u4ee5\u4e3anull,value\u4e0d\u53ef\u4e3anull\u3002 2 \u6b64\u79cdMap\u7684\u7279\u70b9\u662f\uff0c\u5f53\u9664\u4e86\u81ea\u8eab\u6709\u5bf9key\u7684\u5f15\u7528\u5916\uff0c\u6b64key\u6ca1\u6709\u5176\u4ed6\u5f15\u7528\u90a3\u4e48\u6b64map\u4f1a\u81ea\u52a8\u4e22\u5f03\u6b64\u503c\uff0c\u6240\u4ee5\u6bd4\u8f83\u9002\u5408\u505a\u7f13\u5b58\u3002 3 WeakHashMap\u5b9e\u73b0\u4e86Map\u63a5\u53e3\uff0c\u57fa\u4e8ehash-table\u5b9e\u73b0\uff0c\u5728\u8fd9\u79cdMap\u4e2d\uff0ckey\u7684\u7c7b\u578b\u662fWeakReference\u3002 \u5982\u679c\u5bf9\u5e94\u7684key\u88ab\u56de\u6536\uff0c\u5219\u8fd9\u4e2akey\u6307\u5411\u7684\u5bf9\u8c61\u4f1a\u88ab\u4eceMap\u5bb9\u5668\u4e2d\u81ea\u52a8\u79fb\u9664\uff0cWeakHashMap\u7684\u884c\u4e3a\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u57fa\u4e8e\u5783\u573e\u6536\u96c6\u5668\u7684\u884c\u4e3a\u3002 4 \u5f31\u5f15\u7528\uff08WeakReference\uff09\u7684\u7279\u6027\u662f\uff1a\u5f53gc\u7ebf\u7a0b\u53d1\u73b0\u67d0\u4e2a\u5bf9\u8c61\u53ea\u6709\u5f31\u5f15\u7528\u6307\u5411\u5b83\uff0c\u90a3\u4e48\u5c31\u4f1a\u5c06\u5176\u9500\u6bc1\u5e76\u56de\u6536\u5185\u5b58(\u52a0\u5165\u5230ReferenceQueue)\u3002 \u6807\u8bc6\u6563\u5217\u6620\u5c04 \u5728\u8fd9\u4e2a\u7c7b\u4e2d\uff0c \u952e\u7684\u6563\u5217\u503c\u4e0d\u662f\u7528hashCode\u51fd\u6570\u8ba1\u7b97\uff0c\u800c\u662f\u7528 System.identityHashCode \u65b9\u6cd5\u8ba1\u7b97\u7684\u3002 \u8fd9\u662f Object.hashCode \u65b9\u6cd5\u6839\u636e\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\u6765\u8ba1\u7b97\u6563\u5217\u7801\u65f6\u6240\u4f7f\u7528\u7684\u65b9\u5f0f\u3002 \u800c\u4e14\u5728\u5bf9\u4e24\u4e2a\u5bf9\u8c61\u8fdb\u884c\u6bd4\u8f83\u65f6\uff0cIdentityHashMap \u7c7b\u4f7f\u7528 ==, \u800c\u4e0d\u4f7f\u7528 equals\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u540c\u7684\u952e\u5bf9\u8c61\uff0c \u5373\u4f7f\u5185\u5bb9\u76f8\u540c\uff0c\u4e5f\u88ab\u89c6\u4e3a\u662f\u4e0d\u540c\u7684\u5bf9\u8c61\u3002 \u5728\u5b9e\u73b0\u5bf9\u8c61\u904d\u5386\u7b97\u6cd5\uff08\u5982\u5bf9\u8c61\u4e32\u884c\u5316\uff09\u65f6\uff0c \u8fd9\u4e2a\u7c7b\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u7528\u6765\u8ddf\u8e2a\u6bcf\u4e2a\u5bf9\u8c61\u7684\u904d\u5386\u72b6\u51b5\u3002 \u89c6\u56fe\u4e0e\u5305\u88c5\u5668 \u5982\u524d\u6240\u8ff0\uff0c\u96c6\u5408\u7684\u4e00\u4e9b\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5b9e\u73b0\u4e86\u67d0\u4e2a\u539f\u59cb\u63a5\u53e3(\u5982Collections\uff0cSet\uff0cMap)\u7684\u7c7b\u5bf9\u8c61\uff0c\u53ea\u80fd\u4f7f\u7528\u8be5\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u6765\u8bbf\u95ee\u3001\u4fee\u6539\u539f\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff1b\u6709\u7684\u89c6\u56fe\u5141\u8bb8\u5220\u9664\u5143\u7d20\uff0c\u4f46\u6240\u6709\u89c6\u56fe\u90fd\u4e0d\u80fd\u589e\u52a0\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u3002\u8fd9\u79cd\u5bf9\u8c61\u79f0\u4e3a\u89c6\u56fe\u3002 \u89c6\u56fe\u6709\u4ee5\u4e0b\u51e0\u79cd\u5e94\u7528: 1\u3001\u8f7b\u91cf\u7ea7\u96c6\u5408\u5305\u88c5\u5668 2\u3001\u5b50\u8303\u56f4\uff0c subList(fromIndex, toIndex)\u65b9\u6cd5\uff0c\u53ef\u4ee5\u83b7\u5f97list[fromIndex, toIndex)\u8303\u56f4\u7684\u5143\u7d20\u3002 3\u3001\u4e0d\u53ef\u4fee\u6539\u7684\u89c6\u56fe\uff0c\u8fd9\u4e9b\u89c6\u56fe\u5bf9\u73b0\u6709\u96c6\u5408\u589e\u52a0\u4e86\u4e00\u4e2a\u8fd0\u884c\u65f6\u7684\u68c0\u67e5\u3002\u5982\u679c\u53d1\u73b0\u8bd5\u56fe\u5bf9\u96c6\u5408\u8fdb\u884c\u4fee\u6539\uff0c \u5c31\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u540c\u65f6\u8fd9\u4e2a\u96c6\u5408\u5c06\u4fdd\u6301\u672a\u4fee\u6539\u7684\u72b6\u6001\u3002 4\u3001\u540c\u6b65\u89c6\u56fe: \u4f7f\u7528\u89c6\u56fe\u673a\u5236\u6765\u786e\u4fdd\u5e38\u89c4\u96c6\u5408\u7684\u7ebf\u7a0b\u5b89\u5168\uff0c\u800c\u4e0d\u662f\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u7684\u96c6\u5408\u7c7b\u3002 \u4f8b\u5982\uff0cCollections \u7c7b\u7684\u9759\u6001synchronizedMap\u65b9\u6cd5\u53ef\u4ee5\u5c06\u4efb\u4f55\u4e00\u4e2a\u6620\u5c04\u8868\u8f6c\u6362\u6210\u5177\u6709\u540c\u6b65\u8bbf\u95ee\u65b9\u6cd5\u7684 Map\uff1b \u73b0\u5728\uff0c\u5c31\u53ef\u4ee5\u7531\u591a\u7ebf\u7a0b\u8bbf\u95ee map \u5bf9\u8c61\u4e86\u3002\u50cfget\u548cput\u8fd9\u7c7b\u65b9\u6cd5\u90fd\u662f\u540c\u6b65\u64cd\u4f5c\u7684\uff0c\u5373\u5728\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528\u53e6\u4e00\u4e2a\u65b9\u6cd5\u4e4b\u524d\uff0c \u521a\u624d\u7684\u65b9\u6cd5\u8c03\u7528\u5fc5\u987b\u5f7b\u5e95\u5b8c\u6210\u3002 5\u3001checkedList\u3002 \u96c6\u5408\u4e0e\u6570\u7ec4\u7684\u8f6c\u6362 String[] values={..}; HashSet< String > staff=new HashSet<>(Arrays.asList(values)); Object[] vec=staff.toArray(); String[] values = staff.toArray(new String[0]); //\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u662fstaff.size(); \u9057\u7559\u7684\u96c6\u5408 Hashtable\uff0c\u4e0eHashMap\u4f5c\u7528\u4e00\u81f4\uff0c\u4f46\u5176\u65b9\u6cd5\u662f\u540c\u6b65\u7684\uff1b \u9057\u7559\u96c6\u5408\u4f7f\u7528 Enumeration \u63a5\u53e3\u5bf9\u5143\u7d20\u5e8f\u5217\u8fdb\u884c\u904d\u5386\u3002Enumeration \u63a5\u53e3\u6709\u4e24\u4e2a\u65b9\u6cd5\uff0c \u5373 hasMoreElements \u548c nextElement\u3002 \u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4e0e Iterator \u63a5\u53e3\u7684 hasNext \u65b9\u6cd5\u548c next \u65b9\u6cd5\u5341 \u5206\u7c7b\u4f3c\u3002 BitSet\uff0c\u4f4d\u5411\u91cf\uff0c\u548cC++\u4e2dbitset\u6a21\u677f\u529f\u80fd\u4e00\u81f4\u3002 \u5e76\u53d1 Thread(Runnable target)\u6784\u9020\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff0c\u7528\u4e8e\u8c03\u7528\u7ed9\u5b9a\u76ee\u6807\u7684run\u65b9\u6cd5\u3002 void start( )\u542f\u52a8\u8fd9\u4e2a\u7ebf\u7a0b\uff0c\u5c06\u5f15\u53d1\u8c03\u7528run()\u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5c06\u7acb\u5373\u8fd4\u56de\uff0c\u5e76\u4e14\u65b0\u7ebf\u7a0b\u5c06\u5e76\u53d1\u8fd0\u884c\u3002 void run( )\u8c03\u7528\u5173\u8054 Runnable\u7684run\u65b9\u6cd5\u3002 \u4e0d\u8981\u8c03\u7528 Thread \u7c7b\u6216 Runnable \u5bf9\u8c61\u7684 run \u65b9\u6cd5\u3002 \u76f4\u63a5\u8c03\u7528 run \u65b9\u6cd5\uff0c \u53ea\u4f1a\u6267\u884c\u540c \u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u4efb\u52a1\uff0c \u800c\u4e0d\u4f1a\u542f\u52a8\u65b0\u7ebf\u7a0b\u3002\u5e94\u8be5\u8c03\u7528 Thread.start() \u65b9\u6cd5\u3002\u7ebf\u7a0bstart()\u65b9\u6cd5\u7684\u542b\u4e49\u662f\uff1a\u5f53\u524d\u7ebf\u7a0b\uff08\u5373parent\u7ebf\u7a0b\uff09\u540c\u6b65\u544a\u77e5Java\u865a\u62df\u673a\uff0c\u53ea\u8981\u7ebf\u7a0b\u89c4\u5212\u5668\u7a7a\u95f2\uff0c\u5e94\u7acb\u5373\u542f\u52a8\u8c03\u7528 start()\u65b9\u6cd5\u7684\u7ebf\u7a0b\u3002 void join(): \u5728A\u7ebf\u7a0b\u4e2d\u8c03\u7528\u4e86B\u7ebf\u7a0b\u5bf9\u8c61\u7684join()\u65b9\u6cd5\uff0c\u5219A\u7ebf\u7a0b\u8981\u7b49\u5f85B\u7ebf\u7a0b\u7ec8\u6b62\u4ee5\u540e\u624d\u80fd\u8fd4\u56de\u3002 \u6784\u9020\u7ebf\u7a0b \u4e00\u4e2a\u65b0\u6784\u9020\u7684\u7ebf\u7a0b\u5bf9\u8c61\u662f\u7531\u5176parent\u7ebf\u7a0b\u6765\u8fdb\u884c\u7a7a\u95f4\u5206\u914d\u7684\uff0c\u800cchild\u7ebf\u7a0b\u7ee7\u627f\u4e86parent\u662f\u5426\u4e3aDaemon\u3001\u4f18\u5148\u7ea7\u548c\u52a0\u8f7d\u8d44\u6e90\u7684contextClassLoader\u4ee5\u53ca\u53ef\u7ee7\u627f\u7684ThreadLocal\uff0c\u540c\u65f6\u8fd8\u4f1a\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684ID\u6765\u6807\u8bc6\u8fd9\u4e2achild\u7ebf\u7a0b\u3002\u81f3\u6b64\uff0c\u4e00\u4e2a\u80fd\u591f\u8fd0\u884c\u7684\u7ebf\u7a0b\u5bf9\u8c61\u5c31\u521d\u59cb\u5316\u597d\u4e86\u3002 private void init(ThreadGroup g, Runnable target, String name,long stackSize, AccessControlContext acc) { if (name == null) { throw new NullPointerException(\"name cannot be null\"); } // \u5f53\u524d\u7ebf\u7a0b\u5c31\u662f\u8be5\u7ebf\u7a0b\u7684\u7236\u7ebf\u7a0b Thread parent = currentThread(); this.group = g; // \u5c06daemon\u3001priority\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u7236\u7ebf\u7a0b\u7684\u5bf9\u5e94\u5c5e\u6027 this.daemon = parent.isDaemon(); this.priority = parent.getPriority(); this.name = name.toCharArray(); this.target = target; setPriority(priority); // \u5c06\u7236\u7ebf\u7a0b\u7684InheritableThreadLocal\u590d\u5236\u8fc7\u6765 if (parent.inheritableThreadLocals != null) this.inheritableThreadLocals=ThreadLocal.createInheritedMap(parent. inheritableThreadLocals); // \u5206\u914d\u4e00\u4e2a\u7ebf\u7a0bID tid = nextThreadID(); } suspend\u3001resume\u3001stop \u5206\u522b\u7528\u6765\u6302\u8d77\u3001\u6062\u590d\u3001\u505c\u6b62\u7ebf\u7a0b\uff0c\u4f5c\u4e3a\u8fc7\u671fAPI\u4e0d\u5efa\u8bae\u4f7f\u7528\uff0c\u6709\u8d1f\u9762\u6548\u679c:\u4ee5suspend()\u65b9\u6cd5\u4e3a\u4f8b\uff0c\u5728\u8c03\u7528\u540e\uff0c\u7ebf\u7a0b\u4e0d\u4f1a\u91ca\u653e\u5df2\u7ecf\u5360\u6709\u7684\u8d44\u6e90\uff08\u6bd4\u5982\u9501\uff09\uff0c\u800c\u662f\u5360\u6709\u7740\u8d44\u6e90\u8fdb\u5165\u7761\u7720\u72b6\u6001\uff0c\u8fd9\u6837\u5bb9\u6613\u5f15\u53d1\u6b7b\u9501\u95ee\u9898\u3002\u540c\u6837\uff0cstop()\u65b9\u6cd5\u5728\u7ec8\u7ed3 \u4e00\u4e2a\u7ebf\u7a0b\u65f6\u4e0d\u4f1a\u4fdd\u8bc1\u7ebf\u7a0b\u7684\u8d44\u6e90\u6b63\u5e38\u91ca\u653e\uff0c\u901a\u5e38\u662f\u6ca1\u6709\u7ed9\u4e88\u7ebf\u7a0b\u5b8c\u6210\u8d44\u6e90\u91ca\u653e\u5de5\u4f5c\u7684\u673a\u4f1a\uff0c \u56e0\u6b64\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u53ef\u80fd\u5de5\u4f5c\u5728\u4e0d\u786e\u5b9a\u72b6\u6001\u4e0b\u3002 \u901a\u8fc7\u6807\u8bc6\u4f4d\u6216\u8005\u4e2d\u65ad\u53ef\u4ee5\u4f7f\u5f97\u7ebf\u7a0b\u5728\u7ec8\u6b62\u65f6\u6709\u673a\u4f1a\u53bb\u6e05\u7406\u8d44\u6e90\uff0c\u800c\u4e0d\u662f\u6b66\u65ad\u5730\u5c06\u7ebf\u7a0b\u7ec8\u6b62\u3002 \u4e2d\u65ad\u7ebf\u7a0b \u7ebf\u7a0b\u6b63\u5e38\u8fd0\u884c\u7ed3\u675f\u6216\u8005\u51fa\u73b0\u4e86\u5728\u65b9\u6cd5\u4e2d\u6ca1\u6709\u6355\u83b7\u7684\u5f02\u5e38\u65f6\uff0c\u7ebf\u7a0b\u5c06\u7ec8\u6b62\u3002\u6ca1\u6709\u53ef\u4ee5\u5f3a\u5236\u7ebf\u7a0b\u7ec8\u6b62\u7684\u65b9\u6cd5\u3002\u7136\u800c\uff0cinterrupt \u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u8bf7\u6c42\u7ec8\u6b62\u7ebf\u7a0b\u3002 interrupt: \u672c\u7ebf\u7a0b\u4e2d\u65ad\u81ea\u8eab\u662f\u88ab\u5141\u8bb8\u7684\uff0c\u4e14\"\u4e2d\u65ad\u6807\u8bb0\"\u8bbe\u7f6e\u4e3atrue; \u5176\u5b83\u7ebf\u7a0b\u8c03\u7528\u672c\u7ebf\u7a0b\u7684interrupt()\u65b9\u6cd5\u65f6\uff0c\u4f1a\u901a\u8fc7checkAccess()\u68c0\u67e5\u6743\u9650\u3002\u8fd9\u6709\u53ef\u80fd\u629b\u51faSecurityException\u5f02\u5e38\u3002 \u82e5\u7ebf\u7a0b\u88abwait\u3001join\u3001sleep\u65b9\u6cd5\u963b\u585e\u65f6\uff0c\u8c03\u7528interrupt()\u65b9\u6cd5\uff0c\u90a3\u4e48\u201c\u4e2d\u65ad\u72b6\u6001\u201d\u4f1a\u88ab\u6e05\u9664\u5e76\u4e14\u4f1a\u6536\u5230 \u4e00\u4e2aInterruptedException\u5f02\u5e38\u3002 If this thread is blocked in an I/O operation upon an InterruptibleChannel then the channel will be closed, the thread's interrupt status will be set, and the thread will receive a ClosedByInterruptException. If this thread is blocked in a java.nio.channels.Selector then the thread's interrupt status will be set and it will return immediately from the selection operation, possibly with a non-zero value, just as if the selector's wakeup method were invoked. If none of the previous conditions hold then this thread's interrupt status will be set. \u4e2d\u65ad\u4e00\u4e2a\u975e\u6d3b\u52a8\u7ebf\u7a0b\u4e0d\u9700\u8981\u6709\u4efb\u4f55\u6548\u679c. \u5982\u679c\u5728\u4e2d\u65ad\u72b6\u6001\u88ab\u7f6e\u4f4d\u65f6\u8c03\u7528sleep\u65b9\u6cd5\uff0c\u5b83\u4e0d\u4f1a\u4f11\u7720\u3002\u76f8\u53cd\uff0c\u5b83\u5c06\u6e05\u9664\u8fd9\u4e00\u72b6\u6001\u5e76\u62cb\u51faIntemiptedException\u3002 static boolean interrupted()\u6d4b\u8bd5\u5f53\u524d\u7ebf\u7a0b\uff08\u5373\u6b63\u5728\u6267\u884c\u8fd9\u4e00\u547d\u4ee4\u7684\u7ebf\u7a0b\uff09\u662f\u5426\u88ab\u4e2d\u65ad\u3002\u8fd9\u4e00\u8c03\u7528\u4f1a\u4ea7\u751f\u526f\u4f5c\u7528\uff0c \u5b83\u5c06\u5f53\u524d\u7ebf\u7a0b\u7684\u4e2d\u65ad\u72b6\u6001\u91cd\u7f6e\u4e3a false\u3002 isInterrupted\u65b9\u6cd5\u4e5f\u53ef\u7528\u6765\u68c0\u9a8c\u662f\u5426\u6709\u7ebf\u7a0b\u88ab\u4e2d\u65ad\uff0c\u4f46\u5176\u4e0d\u4f1a\u6539\u53d8\u4e2d\u65ad\u72b6\u6001\u3002 \u7ebf\u7a0b\u72b6\u6001 java\u4e2d\u7ebf\u7a0b\u67096\u79cd\u72b6\u6001\uff0cNew\u3001Runnable\u3001Blocked\u3001Waiting\u3001Timed waiting(\u8ba1\u65f6\u7b49\u5f85)\u3001Terminated(\u88ab\u7ec8\u6b62)\uff1b\u901a\u8fc7getState\u65b9\u6cd5\u83b7\u53d6\u7ebf\u7a0b\u72b6\u6001\u3002 NEW : \u4f7f\u7528new\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff0c\u4f46\u8fd8\u672a\u8c03\u7528 start \u65b9\u6cd5\uff1b RUNNABLE : \u4e00\u65e6\u8c03\u7528 start \u65b9\u6cd5\uff0c\u7ebf\u7a0b\u5904\u4e8e runnable \u72b6\u6001\uff0c\u5728JVM\u4e2d\u6267\u884c\uff0c\u4f46\u9700\u8981\u7b49\u5f85\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90,\u5982CPU; \u56e0\u6b64\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684\u7ebf\u7a0b\u53ef\u80fd\u6b63\u5728\u8fd0\u884c\u4e5f\u53ef\u80fd\u6ca1\u6709\u8fd0\u884c\u3002 BLOCKED : Thread state for a thread blocked waiting for a monitor lock. A thread in the blocked state is waiting for a monitor lock to enter a synchronized block/method or reenter a synchronized block/method after calling Object.wait. WAITING : Thread state for a waiting thread.A thread is in the waiting state due to calling one of the following methods: Object.wait with no timeout\u3001Thread.join with no timeout\u3001 LockSupport.park .A thread in the waiting state is waiting for another thread to perform a particular action. TIMED_WAITING : Thread state for a waiting thread with a specified waiting time. TERMINATED : \u56e0\u4e3a run \u65b9\u6cd5\u6b63\u5e38\u9000\u51fa\u800c\u81ea\u7136\u6b7b\u4ea1 \u6216 \u56e0\u4e3a\u4e00\u4e2a\u6ca1\u6709\u6355\u83b7\u7684\u5f02\u5e38\u7ec8\u6b62\u4e86\u65b9\u6cd5\u800c\u610f\u5916\u6b7b\u4ea1\u3002 \u7ebf\u7a0b\u5c5e\u6027 1\u3001\u7ebf\u7a0b\u4f18\u5148\u7ea7: \u5728Java\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u6709\u4e00\u4e2a\u4f18\u5148\u7ea7\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b50\u7ebf\u7a0b\u7ee7\u627f\u5b83\u7684\u7236\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\u3002\u53ef\u4ee5\u7528setPriority \u65b9\u6cd5\u63d0\u9ad8\u6216\u964d\u4f4e\u4efb\u4f55\u4e00\u4e2a\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\uff1b \u7ebf\u7a0b\u4f18\u5148\u7ea7\u662f\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u7684\u3002\u5f53\u865a\u62df\u673a\u4f9d\u8d56\u4e8e\u5bbf\u4e3b\u673a\u5e73\u53f0\u7684\u7ebf\u7a0b\u5b9e\u73b0\u673a\u5236\u65f6\uff0cJava \u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7 \u88ab\u6620\u5c04\u5230\u5bbf\u4e3b\u673a\u5e73\u53f0\u7684\u4f18\u5148\u7ea7\u4e0a\uff1b \u6bcf\u5f53\u8c03\u5ea6\u5668\u51b3\u5b9a\u8fd0\u884c\u4e00\u4e2a\u65b0\u7ebf\u7a0b\u65f6\uff0c\u9996\u5148\u4f1a\u5728\u5177\u6709\u9ad8\u4f18\u5148\u7ea7\u7684\u7ebf\u7a0b\u4e2d\u8fdb\u884c\u9009\u62e9\uff0c\u53ef\u80fd\u5bfc\u81f4\u4f4e\u4f18\u5148\u7ea7\u7ebf\u7a0b\u9965\u997f\u3002 2\u3001\u5b88\u62a4\u7ebf\u7a0b: \u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 t.setDaemon(true), \u5c06\u7ebf\u7a0b\u8f6c\u6362\u4e3a\u5b88\u62a4\u7ebf\u7a0b(daemon thread)\u3002\u5b88\u62a4\u7ebf\u7a0b\u7684\u552f\u4e00\u7528\u9014 \u662f\u4e3a\u5176\u4ed6\u7ebf\u7a0b\u63d0\u4f9b\u670d\u52a1\uff0c\u4f8b\u5982GC(\u5783\u573e\u56de\u6536\u5668)\uff1b \u53ea\u8981\u5f53\u524dJVM\u5b9e\u4f8b\u4e2d\u5c1a\u5b58\u5728\u4efb\u4f55\u4e00\u4e2a\u975e\u5b88\u62a4\u7ebf\u7a0b\u6ca1\u6709\u7ed3\u675f\uff0c\u5b88\u62a4\u7ebf\u7a0b\u5c31\u5168\u90e8\u5de5\u4f5c\uff1b\u53ea\u6709\u5f53\u6700\u540e\u4e00\u4e2a\u975e\u5b88\u62a4\u7ebf\u7a0b\u7ed3\u675f\u65f6\uff0c \u5b88\u62a4\u7ebf\u7a0b\u968f\u7740JVM\u4e00\u540c\u7ed3\u675f\u5de5\u4f5c \u5b88\u62a4\u7ebf\u7a0b\u5e94\u8be5\u6c38\u8fdc\u4e0d\u53bb\u8bbf\u95ee\u56fa\u6709\u8d44\u6e90\uff0c\u5982\u6587\u4ef6\u3001\u6570\u636e\u5e93\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5728\u4efb\u4f55\u65f6\u5019\u751a\u81f3\u5728\u4e00\u4e2a\u64cd\u4f5c\u7684\u4e2d\u95f4\u53d1\u751f\u4e2d\u65ad\uff0c \u56e0\u4e3a\u53ef\u80fd\u975e\u5b88\u62a4\u7ebf\u7a0b\u5df2\u7ecf\u5168\u90e8\u7ed3\u675f\uff0c\u5219daemon\u7ebf\u7a0b\u4e5f\u4f1a\u968fJVM\u7ed3\u675f\uff0c\u8fd9\u6837daemon\u7ebf\u7a0b\u5bf9\u8d44\u6e90\u7684\u8bfb\u5199\u4e5f\u4f1a\u4e2d\u6b62\uff0c \u5bf9\u7a0b\u5e8f\u9020\u6210\u4e0d\u53ef\u77e5\u7684\u4f24\u5bb3\u3002 3\u3001\u672a\u6355\u83b7\u5f02\u5e38\u5904\u7406\u5668: \u7ebf\u7a0b\u7684run\u65b9\u6cd5\u4e0d\u80fd\u629b\u51fa\u4efb\u4f55\u53d7\u67e5\u5f02\u5e38\uff0c\u4f46\u662f\u975e\u53d7\u67fb\u5f02\u5e38\u4f1a\u5bfc\u81f4\u7ebf\u7a0b\u7ec8\u6b62\u3002\u5728\u8fd9\u79cd\u60c5 \u51b5\u4e0b\uff0c\u7ebf\u7a0b\u5c31\u6b7b\u4ea1\u4e86\u3002 \u4e8b\u5b9e\u4e0a\u4e0d\u9700\u8981\u4efb\u4f55 catch\u5b50\u53e5\u6765\u5904\u7406\u53ef\u4ee5\u88ab\u4f20\u64ad\u7684\u5f02\u5e38\u3002\u76f8\u53cd\uff0c\u5c31\u5728\u7ebf\u7a0b\u6b7b\u4ea1\u4e4b\u524d\uff0c\u5f02\u5e38\u88ab\u4f20\u9012\u5230\u4e00\u4e2a \u7528\u4e8e\u672a\u6355\u83b7\u5f02\u5e38\u7684\u5904\u7406\u5668\u3002\u8be5\u5904\u7406\u5668\u5fc5\u987b\u5c5e\u4e8e\u4e00\u4e2a\u5b9e\u73b0Thread.UncaughtExceptionHandler\u63a5\u53e3\u7684\u7c7b\u3002 wait/notify wait()/wait(long): \u53ea\u6709\u83b7\u7684obj\u7684\u5bf9\u8c61\u9501\u540e\uff0c\u7ebf\u7a0b\u624d\u53ef\u4ee5\u8c03\u7528obj\u7684wait\u65b9\u6cd5\uff0c\u6b64\u65f6\u7ebf\u7a0b\u4f1a\u91ca\u653e\u5df2\u5360\u6709\u7684obj\u7684\u5bf9\u8c61\u9501\uff0c \u5360\u6709\u7684\u5176\u4ed6\u9501\u4e0d\u4f1a\u91ca\u653e\uff0c\u7ebf\u7a0b\u4f1a\u8fdb\u5165obj\u7684waiting set\uff1b obj\u7684notify()\u65b9\u6cd5\u5c06waiting set\u4e2d\u7684\u4e00\u4e2a\u7b49\u5f85\u7ebf\u7a0b\u79fb\u9664\uff0c\u7136\u540e\u5c06\u5176\u79fb\u5230\u540c\u6b65\u961f\u5217\u4e2d\uff0c\u91cd\u65b0\u53c2\u4e0eobj\u5bf9\u8c61\u9501\u7684\u7ade\u4e89; \u800cnotifyAll() \u65b9\u6cd5\u5219\u662f\u5c06\u7b49\u5f85\u961f\u5217\u4e2d\u6240\u6709\u7684\u7ebf\u7a0b\u5168\u90e8\u79fb\u5230\u540c\u6b65\u961f\u5217\uff0c\u88ab\u79fb\u5165\u540c\u6b65\u961f\u5217\u7684\u7ebf\u7a0b\u72b6\u6001\u7531WAITING\u53d8\u4e3a BLOCKED\u3002 wait()/wait(long)\u65b9\u6cd5\u9700\u8981\u653e\u7f6e\u5728\u5faa\u73af\u4f53\u4e2d\uff0c\u5faa\u73af\u6761\u4ef6\u662f condition \u6ca1\u6709\u6ee1\u8db3\u5df2\u7ecf\u5f53\u524d\u7ebf\u7a0b\u6ca1\u6709\u88ab\u4e2d\u65ad\uff1b \u5f53\u7b49\u5f85\u7ebf\u7a0b\u88ab\u5524\u9192\u65f6\u6216\u8005\u8d85\u65f6, \u7ebf\u7a0b\u4f1a\u88ab\u79fb\u5165\u5230obj\u5bf9\u8c61\u9501\u7684\u540c\u6b65\u961f\u5217\u4e2d\uff0c\u91cd\u65b0\u7ade\u4e89\u9501\uff0c\u5982\u679c\u83b7\u5f97\u5bf9\u8c61\u9501\uff0c\u4f1a\u5224\u65ad\u5faa\u73af\u6761\u4ef6\u662f\u5426\u4e3afalse, \u5373\u5982\u679ccondition\u6ee1\u8db3\u6216\u8005\u5f53\u524d\u7ebf\u7a0b\u88ab\u4e2d\u65ad\uff0c\u7ee7\u7eed\u6267\u884c\u540c\u6b65\u5757\u4ee3\u7801\uff0c\u5426\u5219\u7ee7\u7eed\u8fdb\u5165\u5faa\u73af\u4f53\uff0cwait\u3002 \u5982\u679c\u5728\u5f53\u524d\u7ebf\u7a0b\u7b49\u5f85\u901a\u77e5\u4e4b\u524d\u6216\u8005\u6b63\u5728\u7b49\u5f85\u901a\u77e5\u65f6 \u88ab\u4e2d\u65ad\uff0c\u4f1a\u629b\u51faInterruptedException\uff0c\u540c\u65f6\u5f53\u524d\u7ebf\u7a0b\u7684\u4e2d\u65ad\u72b6\u6001\u88ab\u6e05\u9664 \uff0c\u7a0b\u5e8f\u5458\u5e94\u51b3\u5b9a\u5176\u540e\u7684\u64cd\u4f5c\u3002 // \u7b49\u5f85\u65b9 \u83b7\u53d6\u5bf9\u8c61\u9501->\u82e5\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5219\u8c03\u7528\u5bf9\u8c61\u7684wait\u65b9\u6cd5\uff0c\u88ab\u901a\u77e5\u540e\u4ecd\u8981\u68c0\u6d4b\u6761\u4ef6-> \u6761\u4ef6\u6ee1\u8db3\uff0c\u6267\u884c\u5bf9\u5e94\u7684\u903b\u8f91 synchronized(obj){ while(\u6761\u4ef6\u4e0d\u6ee1\u8db3){ obj.wait(); } // \u6761\u4ef6\u6ee1\u8db3\u540e\u7684\u5904\u7406 } // \u901a\u77e5\u65b9 \u83b7\u53d6\u5bf9\u8c61\u9501->\u6539\u53d8\u6761\u4ef6->\u901a\u77e5\u7b49\u5f85\u5728obj\u4e0a\u7684\u6240\u6709/\u67d0\u4e2a \u7ebf\u7a0b synchronized(obj){ // \u6539\u53d8\u6761\u4ef6\uff0c\u5982\u679c\u8fd9\u91cc\u7684\u6761\u4ef6\u4e0d\u80fd\u4f7f\u5f97\u7b49\u5f85\u65b9\u7684\u6761\u4ef6\u6ee1\u8db3\u5c31\u5524\u9192\u7b49\u5f85\u65b9 // \u5219\u7b49\u5f85\u7ebf\u7a0b\u53ef\u80fd\u968f\u540e\u9677\u5165\u6b7b\u9501\uff0c\u4e00\u76f4\u5728\u7b49\u5f85\uff0c\u56e0\u4e3a\u6ca1\u6709\u5176\u4ed6\u7ebf\u7a0b\u6765\u5524\u9192\u5b83\u4e86\u3002 obj.notifyAll() // or obj.notify() } /* \u7b49\u5f85\u8d85\u65f6\uff0c\u5982\u679c\u5728\u7b49\u5f85\u671f\u95f4\u83b7\u5f97\u7ed3\u679c\uff0c\u5c31\u8fd4\u56de\u7ed3\u679c\uff1b\u5426\u5219\u8d85\u65f6\u4e4b\u540e\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u503c */ // \u5bf9\u5f53\u524d\u5bf9\u8c61\u52a0\u9501 public synchronized Object get(long mills) throws InterruptedException { long future = System.currentTimeMillis() + mills; long remaining = mills; // \u5f53\u8d85\u65f6\u5927\u4e8e0\u5e76\u4e14result\u8fd4\u56de\u503c\u4e0d\u6ee1\u8db3\u8981\u6c42 while ((result == null) && remaining > 0) { wait(remaining); remaining = future - System.currentTimeMillis(); } return result; } Java\u5e76\u53d1\u5305\u4e2d\u7684\u9501 1\u3001Lock\u63a5\u53e3\uff0c\u4e0d\u540c\u4e8esynchronized\u5173\u952e\u5b57\u9690\u5f0f\u5730\u83b7\u53d6\u548c\u91ca\u653e\u9501\uff0cLock\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u5728\u4f7f\u7528\u65f6\u9700\u8981\u663e\u5f0f\u5730\u83b7\u53d6\u548c\u91ca\u653e\u9501\uff1b ![avatar](../images/java/31.png) Lock\u5e38\u7528\u7684\u5b9e\u73b0\u6709ReentrantLock\uff0c\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879: \u5728finally\u5757\u4e2d\u91ca\u653e\u9501\uff0c\u76ee\u7684\u662f\u4fdd\u8bc1\u5728\u83b7\u53d6\u5230\u9501\u4e4b\u540e\uff0c\u6700\u7ec8\u80fd\u591f\u88ab\u91ca\u653e\u3002 \u4e0d\u9700\u8981\u8981\u5c06\u83b7\u53d6\u9501\u7684\u8fc7\u7a0b\u5199\u5728try\u5757\u4e2d\uff0c\u56e0\u4e3a\u5982\u679c\u5728\u83b7\u53d6\u9501(\u81ea\u5b9a\u4e49\u9501\u7684\u5b9e\u73b0)\u65f6\u53d1\u751f\u4e86\u5f02\u5e38,\u5f02\u5e38\u629b\u51fa\u7684\u540c\u65f6,\u9501\u4f1a\u65e0\u6545\u91ca\u653e\u3002 \u2003 2\u3001AbstractQueuedSynchronizer \u7528\u6765\u6784\u5efa\u9501\u6216\u8005\u5176\u4ed6\u540c\u6b65\u7ec4\u4ef6\u7684\u57fa\u7840\u6846\u67b6; \u652f\u6301\u72ec\u5360\u5f0f\u5730\u83b7\u53d6\u540c\u6b65\u72b6\u6001\uff0c\u4e5f\u652f\u6301\u5171\u4eab\u5f0f\u5730\u83b7\u53d6\u540c\u6b65\u72b6\u6001\u3002 3\u3001\u91cd\u5165\u9501 ReentrantLock,\u91cd\u8fdb\u5165\u662f\u6307\u4efb\u610f\u7ebf\u7a0b\u5728\u83b7\u53d6\u5230\u9501\u4e4b\u540e\u80fd\u591f\u518d\u6b21\u83b7\u53d6\u8be5\u9501\u800c\u4e0d\u4f1a\u88ab\u9501\u6240\u963b\u585e\uff0c \u5373\u652f\u6301\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u8d44\u6e90\u7684\u91cd\u590d\u52a0\u9501\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u652f\u6301\u83b7\u53d6\u9501\u65f6\u7684\u516c\u5e73\u548c\u975e\u516c\u5e73\u6027\u9009\u62e9; \u6240\u8c13\u516c\u5e73\u6027\uff0c\u5373\u7b49\u5f85\u65f6\u95f4\u6700\u957f\u7684\u7ebf\u7a0b\u6700\u4f18\u5148\u83b7\u53d6\u9501\uff0c\u9501\u83b7\u53d6\u662f\u987a\u5e8f\u7684\uff1b\u516c\u5e73\u9501\u7684\u6548\u7387\u4f4e\u4e8e\u975e\u516c\u5e73\u9501\uff0c \u4f46\u80fd\u591f\u51cf\u5c11\u9965\u997f\u53d1\u751f\u7684\u6982\u7387\uff0c\u56e0\u4e3a\u7b49\u5f85\u8d8a\u4e45\u7684\u8bf7\u6c42\u8d8a\u662f\u80fd\u5f97\u5230\u4f18\u5148\u8c03\u5ea6\u3002 \u91cd\u5165\u9501\u4e2d\u9501\u7684\u9ed8\u8ba4\u5b9e\u73b0\u662f\u975e\u516c\u5e73\u6027\u7684: \u516c\u5e73\u6027\u9501\u4fdd\u8bc1\u4e86\u9501\u7684\u83b7\u53d6\u6309\u7167FIFO\u539f\u5219\uff0c\u800c\u4ee3\u4ef7\u662f\u8fdb\u884c\u5927\u91cf\u7684\u7ebf\u7a0b\u5207\u6362\u3002 \u975e\u516c\u5e73\u6027\u9501\u867d\u7136\u53ef\u80fd\u9020\u6210\u7ebf\u7a0b\u201c\u9965\u997f\u201d\uff0c\u4f46\u6781\u5c11\u7684\u7ebf\u7a0b\u5207\u6362\uff0c\u4fdd\u8bc1\u4e86\u5176\u66f4\u5927\u7684\u541e\u5410\u91cf\u3002 \u5b9e\u73b0\u91cd\u8fdb\u5165 : 1\uff09\u7ebf\u7a0b\u518d\u6b21\u83b7\u53d6\u9501\u3002\u9501\u9700\u8981\u53bb\u8bc6\u522b\u83b7\u53d6\u9501\u7684\u7ebf\u7a0b\u662f\u5426\u4e3a\u5f53\u524d\u5360\u636e\u9501\u7684\u7ebf\u7a0b\uff0c\u5982\u679c\u662f\uff0c\u5219\u518d\u6b21\u6210\u529f\u83b7\u53d6\u3002 2\uff09\u9501\u7684\u6700\u7ec8\u91ca\u653e\u3002\u7ebf\u7a0b\u91cd\u590dn\u6b21\u83b7\u53d6\u4e86\u9501\uff0c\u968f\u540e\u5728\u7b2cn\u6b21\u91ca\u653e\u8be5\u9501\u540e\uff0c\u5176\u4ed6\u7ebf\u7a0b\u80fd\u591f\u83b7\u53d6\u5230\u8be5\u9501\u3002 \u9501\u7684\u6700\u7ec8\u91ca\u653e\u8981\u6c42\u9501\u5bf9\u4e8e\u83b7\u53d6\u8fdb\u884c\u8ba1\u6570\u81ea\u589e\uff0c\u8ba1\u6570\u8868\u793a\u5f53\u524d\u9501\u88ab\u91cd\u590d\u83b7\u53d6\u7684\u6b21\u6570\uff0c\u800c\u9501\u88ab\u91ca\u653e\u65f6\uff0c\u8ba1\u6570\u81ea\u51cf\uff0c \u5f53\u8ba1\u6570\u7b49\u4e8e0\u65f6\u8868\u793a\u9501\u5df2\u7ecf\u6210\u529f\u91ca\u653e\u3002 4\u3001\u8bfb\u5199\u9501 ReentrantReadWriteLock\uff0c\u8bfb\u5199\u9501\u5728\u540c\u4e00\u65f6\u523b\u53ef\u4ee5\u5141\u8bb8\u591a\u4e2a\u8bfb\u7ebf\u7a0b\u8bbf\u95ee\uff0c\u4f46\u662f\u5728\u5199\u7ebf\u7a0b\u8bbf\u95ee\u65f6\uff0c \u6240\u6709\u7684\u8bfb\u7ebf\u7a0b\u548c\u5176\u4ed6\u5199\u7ebf\u7a0b\u5747\u88ab\u963b\u585e\u3002\u8bfb\u5199\u9501\u7ef4\u62a4\u4e86\u4e00\u5bf9\u9501\uff0c\u4e00\u4e2a\u8bfb\u9501\u548c\u4e00\u4e2a\u5199\u9501\uff0c\u901a\u8fc7\u5206\u79bb\u8bfb\u9501\u548c\u5199\u9501\uff0c \u4f7f\u5f97\u5e76\u53d1\u6027\u76f8\u6bd4\u4e00\u822c\u7684\u6392\u4ed6\u9501\u6709\u4e86\u5f88\u5927\u63d0\u5347\u3002 ReentrantReadWriteLock\u6709\u4e09\u5927\u7279\u6027: \u652f\u6301\u975e\u516c\u5e73(\u9ed8\u8ba4)\u548c\u516c\u5e73\u7684\u83b7\u53d6\u9501\uff1b \u652f\u6301\u91cd\u8fdb\u5165\uff1a\u8bfb\u7ebf\u7a0b\u5728\u83b7\u53d6\u8bfb\u9501\u540e\uff0c\u80fd\u518d\u6b21\u83b7\u53d6\u8bfb\u9501\uff1b\u5199\u7ebf\u7a0b\u5728\u83b7\u53d6\u5199\u9501\u540e\uff0c\u80fd\u518d\u6b21\u83b7\u53d6\u5199/\u8bfb\u9501\uff1b \u9501\u964d\u7ea7: \u9075\u5faa\u83b7\u53d6\u5199\u9501\u3001\u83b7\u53d6\u8bfb\u9501\u518d\u91ca\u653e\u5199\u9501\u7684\u6b21\u5e8f\uff0c\u5199\u9501\u80fd\u964d\u7ea7\u79f0\u4e3a\u8bfb\u9501\u3002 5\u3001LockSupport\u5de5\u5177 LockSupport\u5b9a\u4e49\u4e86\u4e00\u7ec4\u516c\u5171\u9759\u6001\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u63d0\u4f9b\u4e86\u6700\u57fa\u672c\u7684\u7ebf\u7a0b\u963b\u585e\u548c\u5524\u9192\u529f\u80fd\uff0c \u800cLockSupport\u4e5f\u6210\u4e3a\u6784\u5efa\u540c\u6b65\u7ec4\u4ef6\u7684\u57fa\u7840\u5de5\u5177\u3002 public static void park(Object blocker) //\u963b\u585e\u5f53\u524d\u7ebf\u7a0b,\u9664\u975e\u6709\u5176\u4ed6\u7ebf\u7a0b\u5524\u9192\u6216\u8005\u88ab\u4e2d\u65ad,\u624d\u80fd\u8fd4\u56de public static void parkNanos(Object blocker, long nanos) public static void parkUntil(Object blocker, long deadline) public static void unpark(Thread thread) \u5176\u4e2d\u7684blocker\u662f\u5f53\u524d\u7ebf\u7a0b\u6b63\u5728\u7b49\u5f85\u7684\u5bf9\u8c61\u6216\u8005\u8bf4\u963b\u585e\u5bf9\u8c61\u3002 6\u3001Condition\u63a5\u53e3 \u4efb\u610f\u4e00\u4e2aJava\u5bf9\u8c61\uff0c\u90fd\u62e5\u6709\u4e00\u7ec4\u76d1\u89c6\u5668\u65b9\u6cd5\uff08\u5b9a\u4e49\u5728java.lang.Object\u4e0a\uff09\uff0c \u4e3b\u8981\u5305\u62ecwait()\u3001 wait(long timeout)\u3001notify()\u4ee5\u53canotifyAll()\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4e0esynchronized\u540c\u6b65\u5173\u952e\u5b57\u914d\u5408\uff0c \u53ef\u4ee5\u5b9e\u73b0\u7b49\u5f85/\u901a\u77e5\u6a21\u5f0f\u3002Condition\u63a5\u53e3\u4e5f\u63d0\u4f9b\u4e86await()\u3001signal()\u3001signalAll()\u7b49\u65b9\u6cd5\uff0c \u4e0eLock\u914d\u5408\u5b9e\u73b0\u7b49\u5f85/\u901a\u77e5\u6a21\u5f0f\u3002 \u83b7\u53d6\u4e00\u4e2aCondition\u5bf9\u8c61\u5fc5\u987b\u901a\u8fc7Lock\u7684newCondition()\u65b9\u6cd5\uff0c\u4e00\u4e2a\u9501\u5bf9\u8c61\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u76f8\u5173\u7684\u6761\u4ef6\u5bf9\u8c61\uff1b \u5f53Condition\u5bf9\u8c61\u8c03\u7528await()\u65b9\u6cd5\u540e\uff0c\u5f53\u524d\u7ebf\u7a0b\u4f1a\u91ca\u653e\u9501\u5e76\u5728\u6b64\u7b49\u5f85\uff0c \u800c\u5176\u4ed6\u7ebf\u7a0b\u8c03\u7528Condition\u5bf9\u8c61\u7684signal()\u65b9\u6cd5\uff0c\u901a\u77e5\u5f53\u524d\u7ebf\u7a0b\u540e\uff0c\u5f53\u524d\u7ebf\u7a0b\u624d\u4eceawait()\u65b9\u6cd5\u8fd4\u56de\uff0c \u5e76\u4e14\u5728\u8fd4\u56de\u524d\u5df2\u7ecf\u83b7\u53d6\u4e86\u9501\u3002 signal :\u4ece\u8be5\u6761\u4ef6\u7684\u7b49\u5f85\u96c6\u4e2d\u968f\u673a\u5730\u9009\u62e9\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u89e3\u9664\u5176\u963b\u585e\u72b6\u6001\u3002\u4f46\u662f\u5982\u679c\u968f\u673a\u9009\u62e9\u7684\u7ebf\u7a0b\u53d1\u73b0\u81ea\u5df1\u4ecd\u7136\u4e0d\u80fd\u8fd0\u884c\uff0c \u90a3\u4e48\u5b83\u518d\u6b21\u88ab\u963b\u585e\u3002\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u7ebf\u7a0b\u518d\u6b21\u8c03\u7528signal, \u90a3\u4e48\u7cfb\u7edf\u5c31\u6b7b\u9501\u4e86\u3002 signalAll :\u89e3\u9664\u8be5\u6761\u4ef6\u7684\u7b49\u5f85\u96c6\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u7684\u963b\u585e\u72b6\u6001. \u8c03\u7528signalAll/signall\u4e0d\u4f1a\u7acb\u5373\u6fc0\u6d3b\u4e00\u4e2a\u7b49\u5f85\u7ebf\u7a0b\u3002\u5b83\u4ec5\u4ec5\u89e3\u9664\u7b49\u5f85\u7ebf\u7a0b\u7684\u963b\u585e\uff0c \u4ee5\u4fbf\u8fd9\u4e9b\u7ebf\u7a0b\u53ef\u4ee5\u5728\u5f53\u524d\u7ebf\u7a0b\u9000\u51fa\u540c\u6b65\u65b9\u6cd5\u4e4b\u540e\uff0c\u901a\u8fc7\u7ade\u4e89\u5b9e\u73b0\u5bf9 \u5bf9\u8c61\u7684\u8bbf\u95ee\u3002 Condition\u7684\u5b9e\u73b0: \u64cd\u4f5c\u7684\u5b9e\u9645\u4e0a\u662fAQS\u4e2d\u7684\u9759\u6001\u5185\u90e8\u7c7bConditionObject\uff0c\u6bcf\u4e2aCondition\u5bf9\u8c61\u90fd\u5305\u542b\u7740\u4e00\u4e2a\u961f\u5217\uff08\u4ee5\u4e0b\u79f0\u4e3a\u7b49\u5f85\u961f\u5217\uff09; \u7b49\u5f85\u961f\u5217\u662f\u4e00\u4e2aFIFO\u7684\u961f\u5217\uff0c\u5728\u961f\u5217\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u4e86\u4e00\u4e2a\u7ebf\u7a0b\u5f15\u7528\uff0c\u8be5\u7ebf\u7a0b\u5c31\u662f\u5728Condition\u5bf9\u8c61\u4e0a\u7b49\u5f85\u7684\u7ebf\u7a0b; \u4e00\u4e2aLock\u53ef\u4ee5\u6709\u591a\u4e2aCondition\u5bf9\u8c61\uff0c\u610f\u5473\u7740\u53ef\u4ee5\u6709\u591a\u4e2a\u7b49\u5f85\u961f\u5217\uff0c\u4f46\u53ea\u6709\u4e00\u4e2a\u540c\u6b65\u961f\u5217; \u8c03\u7528await\u65b9\u6cd5\uff0c\u76f8\u5f53\u4e8e\u540c\u6b65\u961f\u5217\u7684\u9996\u8282\u70b9\uff08\u83b7\u53d6\u4e86\u9501\u7684\u8282\u70b9\uff09\uff0c\u91ca\u653e\u4e86\u540c\u6b65\u72b6\u6001\uff0c\u7136\u540e\u79fb\u5165Condition\u7684\u7b49\u5f85\u961f\u5217\u4e2d; \u8c03\u7528signal()\u65b9\u6cd5\uff0c\u5c06\u4f1a\u5524\u9192\u5728\u7b49\u5f85\u961f\u5217\u4e2d\u7b49\u5f85\u65f6\u95f4\u6700\u957f\u7684\u8282\u70b9\uff08\u9996\u8282\u70b9\uff09\uff0c\u5728\u5524\u9192\u8282\u70b9\u4e4b\u524d\uff0c\u4f1a\u5c06\u8282\u70b9\u79fb\u5230\u540c\u6b65\u961f\u5217\u4e2d; \u963b\u585e\u961f\u5217 \u5f53\u8bd5\u56fe\u5411\u961f\u5217\u6dfb\u52a0\u5143\u7d20\u800c\u961f\u5217\u5df2\u6ee1\uff0c\u6216\u662f\u60f3\u4ece\u961f\u5217\u79fb\u51fa\u5143\u7d20\u800c\u961f\u5217\u4e3a\u7a7a\u7684\u65f6\u5019\uff0c\u963b\u585e\u961f\u5217(blocking queue)\u5bfc\u81f4\u7ebf\u7a0b\u963b\u585e\u3002 \u963b\u585e\u961f\u5217\u65b9\u6cd5: \u7ebf\u7a0b\u5b89\u5168\u7684\u96c6\u5408 ConcurrentHashMap\u3001ConcurrentSkipListMap\u3001ConcurrentSkipListSet \u548c ConcurrentLinkedQueue\u3002 \u7ebf\u7a0b\u5b89\u5168\u7684\u96c6\u5408\u5141\u8bb8\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u64cd\u4f5c\uff0c\u4f46\u4fdd\u8bc1\u6570\u636e\u7ed3\u6784\u4e0d\u4f1a\u88ab\u7834\u574f\uff1b\u5bf9\u4e8e\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u96c6\u5408\uff0c\u5982HashMap\uff0c\u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u4fee\u6539\uff0c\u5b83\u4eec\u4f1a\u7834\u574f\u5185\u90e8\u7ed3\u6784 \uff08\u4e00\u4e2a\u94fe\u8868\u6570\u7ec4\uff09\u3002\u6709\u4e9b\u94fe\u63a5\u53ef\u80fd\u4e22\u5931\uff0c \u6216\u8005\u751a\u81f3\u4f1a\u6784\u6210\u5faa\u73af\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u4e0d\u518d\u53ef\u7528\u3002 // ConcurrentHashMap\u539f\u5b50\u66f4\u65b0 ConcurrentHashMap<String, AtomicLong>; ConcurrentHashMap<String, LongAdder>; // \u66f4\u65b0\u4ee3\u7801\u5982\u4e0b map.putIfAbscent(word, new LongAdder()); //\u786e\u4fdd\u6709\u4e00\u4e2aLongAdder\u5b8c\u6210\u539f\u5b50\u81ea\u589e map.get(word).increment(); // \u4e24\u53e5\u53ef\u4ee5\u5408\u5e76 map.putIfAbscent(word, new LongAdder()).increment(); // \u6216\u8005\u91c7\u7528compute\u65b9\u6cd5\uff0cvalue\u4e3anull\u8868\u793a\u76f8\u5e94\u7684key\u4e0d\u5b58\u5728 map.compute(word, (k, v)-> v==null?1:v+1) // \u6216\u8005\u91c7\u7528merge map.merge(word, 1L, (existingValue, newValue)-> existingValue+newValue); map.merge(word, 1L, Long::sum); fork/join\u6846\u67b6 Java 7\u63d0\u4f9b\u7684\u4e00\u4e2a\u7528\u4e8e\u5e76\u884c\u6267\u884c\u4efb\u52a1\u7684\u6846\u67b6\uff0c\u662f\u4e00\u4e2a\u628a\u5927\u4efb\u52a1\u5206\u5272\u6210\u82e5\u5e72\u5c0f\u4efb\u52a1\uff0c\u6700\u7ec8\u6c47\u603b\u6bcf\u4e2a\u5c0f\u4efb\u52a1\u7ed3\u679c\u540e\u5f97\u5230\u5927\u4efb\u52a1\u7ed3\u679c\u7684\u6846\u67b6\u3002 \u5de5\u4f5c\u7a83\u53d6\u7b97\u6cd5: \u4f18\u70b9: \u5145\u5206\u5229\u7528\u7ebf\u7a0b\u8fdb\u884c\u5e76\u884c\u8ba1\u7b97\uff0c\u51cf\u5c11\u4e86\u7ebf\u7a0b\u95f4\u7684\u7ade\u4e89\u3002 \u7f3a\u70b9: \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8fd8\u662f\u5b58\u5728\u7ade\u4e89\uff0c\u6bd4\u5982\u53cc\u7aef\u961f\u5217\u91cc\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\u65f6\u3002\u5e76 \u4e14\u8be5\u7b97\u6cd5\u4f1a\u6d88\u8017\u4e86\u66f4\u591a\u7684\u7cfb\u7edf\u8d44\u6e90\uff0c \u6bd4\u5982\u521b\u5efa\u591a\u4e2a\u7ebf\u7a0b\u548c\u591a\u4e2a\u53cc\u7aef\u961f\u5217. \u2003 Fork/Join\u6846\u67b6\u8bbe\u8ba1: \u539f\u5b50\u64cd\u4f5c\u7c7b 1\u3001\u539f\u5b50\u66f4\u65b0\u57fa\u672c\u7c7b\u578b AtomicBoolean\u3001\u3001AtomicLong\u3001AtomicInteger\uff0c\u4ee5AtomicInteger\u4e3a\u4f8b\uff1a int addAndGet\uff08int delta\uff09\uff1a\u4ee5\u539f\u5b50\u65b9\u5f0f\u5c06delta\u4e0e\u5b9e\u4f8b\u4e2d\u7684\u503c\uff08AtomicInteger\u91cc\u7684 value\uff09\u76f8\u52a0\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002 boolean compareAndSet\uff08int expect\uff0cint update\uff09\uff1a\u5982\u679c\u5f53\u524d\u503c\u7b49\u4e8eexpect\uff0c\u5219\u4ee5\u539f\u5b50\u65b9\u5f0f\u66f4\u65b0\u5f53\u524d\u503c\u4e3aupdate\u3002 int getAndIncrement()\uff1a\u4ee5\u539f\u5b50\u65b9\u5f0f\u5c06\u5f53\u524d\u503c\u52a01\uff0c\u6ce8\u610f\uff0c\u8fd9\u91cc\u8fd4\u56de\u7684\u662f\u81ea\u589e\u524d\u7684\u503c\u3002 int getAndSet\uff08int newValue\uff09\uff1a\u4ee5\u539f\u5b50\u65b9\u5f0f\u8bbe\u7f6e\u4e3anewValue\u7684\u503c\uff0c\u5e76\u8fd4\u56de\u65e7\u503c\u3002 void lazySet\uff08int newValue\uff09\uff1a\u6700\u7ec8\u4f1a\u8bbe\u7f6e\u6210newValue\uff0c\u4f7f\u7528lazySet\u8bbe\u7f6e\u503c\u540e\uff0c \u53ef\u80fd\u5bfc\u81f4\u5176\u4ed6\u7ebf\u7a0b\u5728\u4e4b\u540e\u7684\u4e00\u5c0f\u6bb5\u65f6\u95f4\u5185\u8fd8\u662f\u53ef\u4ee5\u8bfb\u5230\u65e7\u7684\u503c\u3002 \u2003 2\u3001\u539f\u5b50\u66f4\u65b0\u6570\u7ec4 AtomicIntegerArray\u3001AtomicLongArray\u3001AtomicReferenceArray\uff0c\u4ee5AtomicIntegerArray\u4e3a\u4f8b: \u5176\u4e3b\u8981\u63d0\u4f9b\u539f\u5b50\u7684\u65b9\u5f0f\u66f4\u65b0\u6570\u7ec4\u91cc\u7684\u6574\u578b\uff0c\u5e38\u7528\u65b9\u6cd5\u5982\u4e0b: int addAndGet\uff08int i\uff0cint delta\uff09\uff1a\u4ee5\u539f\u5b50\u65b9\u5f0f\u5c06\u8f93\u5165\u503c\u4e0e\u6570\u7ec4\u4e2d\u7d22\u5f15i\u7684\u5143\u7d20\u76f8\u52a0\u3002 boolean compareAndSet\uff08int i\uff0cint expect\uff0cint update\uff09\uff1a\u5982\u679c\u5f53\u524d\u503c\u7b49\u4e8e\u9884\u671f\u503c\uff0c \u5219\u4ee5\u539f\u5b50\u65b9\u5f0f\u5c06\u6570\u7ec4\u4f4d\u7f6ei\u7684\u5143\u7d20\u8bbe\u7f6e\u6210update\u503c\u3002 \u2003 3\u3001\u539f\u5b50\u66f4\u65b0\u5f15\u7528 AtomicReference\uff1a\u539f\u5b50\u66f4\u65b0\u5f15\u7528\u7c7b\u578b; AtomicReferenceFieldUpdater\uff1a\u539f\u5b50\u66f4\u65b0\u5f15\u7528\u7c7b\u578b\u7684\u5b57\u6bb5\u7684\u66f4\u65b0\u5668; AtomicMarkableReference\uff1a\u539f\u5b50\u66f4\u65b0\u5e26\u6709\u6807\u8bb0\u4f4d\u7684\u5f15\u7528\u7c7b\u578b; \u6784\u9020\u65b9\u6cd5\u662fAtomicMarkableReference(V initialRef\uff0cboolean initialMark), \u901a\u8fc7\u68c0\u67e5\u9759\u6001\u7c7bPair\u4e2d\u7684mask\u5b57\u6bb5\u5224\u65ad\u662f\u5426\u53d1\u751f\u8fc7\u4fee\u6539\u3002 \u2003 4\u3001\u539f\u5b50\u66f4\u65b0\u5c5e\u6027(\u5b57\u6bb5) AtomicIntegerFieldUpdater\uff1a\u539f\u5b50\u66f4\u65b0\u6574\u578b\u7684\u5b57\u6bb5\u7684\u66f4\u65b0\u5668; AtomicLongFieldUpdater\uff1a\u539f\u5b50\u66f4\u65b0\u957f\u6574\u578b\u5b57\u6bb5\u7684\u66f4\u65b0\u5668; AtomicStampedReference\uff1a\u539f\u5b50\u66f4\u65b0\u5e26\u6709\u7248\u672c\u53f7\u7684\u5f15\u7528\u7c7b\u578b\u3002\u8be5\u7c7b\u5c06int\u7c7b\u578b\u4e0ereference\u5173\u8054\u8d77\u6765\uff0c \u5176\u4e0eAtomicMarkableReference\u7c7b\u578b\u7c7b\u4f3c\uff0c\u540e\u8005\u662f\u5c06boolean\u7c7b\u578b\u4e0ererence\u5173\u8054\u8d77\u6765\uff1b int\u7c7b\u578b\u503c\u7528\u4f5c \u7248\u672c\u53f7\uff0c\u56e0\u6b64\u53ef\u539f\u5b50\u7684\u66f4\u65b0\u6570\u636e\u548c\u6570\u636e\u7684\u7248\u672c\u53f7\uff0c\u89e3\u51b3\u4e86\u4f7f\u7528CAS\u8fdb\u884c\u539f\u5b50\u66f4\u65b0\u65f6\u53ef\u80fd\u51fa\u73b0\u7684 ABA \u95ee\u9898\u3002 \u5e76\u53d1\u5de5\u5177\u7c7b CountDownLatch : A synchronization aid that allows one or more threads to wait until a set of operations being performed in other threads completes. \u5b9e\u73b0: \u901a\u8fc7\u4e00\u4e2a\u8ba1\u6570\u5668\u6765\u5b9e\u73b0\u7684\uff0c public CountDownLatch(int count) { if (count < 0) throw new IllegalArgumentException(\"count < 0\"); this.sync = new Sync(count); // Sync\u662fAQS\u7684\u5b50\u7c7b } A CountDownLatch initialized to N can be used to make all threads invoking await method wait until N threads have completed some action, or some action has been completed N times( which means the countDown method is called N times). public static void main(){ CountDownLatch doneSignal = new CountDownLatch(N); for(int i=1;i<=N;i++){ new Thread(()->{ doSomething(); donewSignal.countDown(); }).start(); } doneSignale.await(); // wait for all to finish } CycleBarrier : A synchronization aid that allows a set of threads to all wait for each other to reach a common barrier point. CyclicBarriers are useful in programs involving a fixed sized party of threads that must occasionally wait for each other. \u5373\u8ba9\u4e00\u7ec4\u7ebf\u7a0b\u5230\u8fbe\u4e00\u4e2a\u5c4f\u969c\uff08\u4e5f\u53ef\u4ee5\u53eb\u540c\u6b65\u70b9\uff09\u65f6\u88ab\u963b\u585e\uff0c\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u7ebf\u7a0b\u5230\u8fbe\u5c4f\u969c\u65f6\uff0c\u5c4f\u969c\u624d\u4f1a\u5f00\u95e8\uff0c \u6240\u6709\u88ab\u5c4f\u969c\u62e6\u622a\u7684\u7ebf\u7a0b\u624d\u4f1a\u7ee7\u7eed\u8fd0\u884c\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u9700\u8981\u8c03\u7528await\u65b9\u6cd5\u3002 The barrier is called cyclic because it can be re-used after the waiting threads are released. CyclyBarrier\u63d0\u4f9breset\u65b9\u6cd5\uff0c\u53ef\u4ee5\u91cd\u7f6e\u8ba1\u6570\u5668\uff1b\u76f8\u6bd4\u4e4b\u4e0b\uff0cCountDownLatch\u7684\u8ba1\u6570\u5668\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\u3002 \u4f46\u662f\u8c03\u7528reset\u65b9\u6cd5\u65f6\uff0c\u5982\u679c\u4ecd\u7136\u6709\u7ebf\u7a0b\u5728barrier\u5904\u7b49\u5f85\uff0c\u5219\u4f1a\u629b\u51fa BrokenBarrierException\u3002 \u2003 Semaphore \u4fe1\u53f7\u91cf\uff1b\u53ef\u4ee5\u7ed9\u6784\u9020\u51fd\u6570\u4f20\u5165\u4e00\u4e2aint\u578b\u53c2\u6570\uff0c\u8868\u793a\u6700\u591a\u5141\u8bb8\u5e76\u53d1\u7ebf\u7a0b\u6570\u91cf\uff1b\u6bcf\u4e2a\u7ebf\u7a0b\u901a\u8fc7acquire()\u65b9\u6cd5\u83b7\u53d6\u8bb8\u53ef( \u4e5f\u53ef\u4ee5\u8c03\u7528tryAcquire\u65b9\u6cd5\u5c1d\u8bd5\u83b7\u53d6\u8bb8\u53ef\uff0c\u83b7\u53d6\u5931\u8d25\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u800c\u662f\u8fd4\u56defalse)\uff0c\u901a\u8fc7release\u65b9\u6cd5\u5f52\u8fd8\u8bb8\u53ef\u8bc1\u3002 \u2003 Exchanger Exchanger\uff08\u4ea4\u6362\u8005\uff09\u662f\u4e00\u4e2a\u7528\u4e8e\u7ebf\u7a0b\u95f4\u534f\u4f5c\u7684\u5de5\u5177\u7c7b\u3002Exchanger\u7528\u4e8e\u8fdb\u884c\u7ebf\u7a0b\u95f4\u7684\u6570\u636e\u4ea4\u6362\u3002\u5b83\u63d0\u4f9b\u4e00\u4e2a\u540c\u6b65\u70b9\uff0c \u5728\u8fd9\u4e2a\u540c\u6b65\u70b9\uff0c\u4e24\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u4ea4\u6362\u5f7c\u6b64\u7684\u6570\u636e\u3002\u8fd9\u4e24\u4e2a\u7ebf\u7a0b\u901a\u8fc7 exchange\u65b9\u6cd5\u4ea4\u6362\u6570\u636e\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u5148\u6267\u884cexchange()\u65b9\u6cd5 \uff0c\u5b83\u4f1a\u4e00\u76f4\u7b49\u5f85\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u4e5f\u6267\u884cexchange\u65b9\u6cd5\uff0c\u5f53\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u5230\u8fbe\u540c\u6b65\u70b9\u65f6\uff0c\u8fd9\u4e24\u4e2a\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u4ea4\u6362\u6570\u636e\uff0c \u5c06\u672c\u7ebf\u7a0b\u751f\u4ea7\u51fa\u6765\u7684\u6570\u636e\u4f20\u9012\u7ed9\u5bf9\u65b9\u3002 Executor\u6846\u67b6 Executor interface : An object that executes submitted Runnable tasks. This interface provides a way of decoupling task submission from the mechanics of how each task will be run, including details of thread use, scheduling, etc. \u8be5\u63a5\u53e3\u4ec5\u5305\u542b void execute(Runnable command) \u4e00\u4e2a\u65b9\u6cd5\u3002 \u4e24\u7ea7\u8c03\u5ea6\u6a21\u578b : \u5728HotSpot VM\u7684\u7ebf\u7a0b\u6a21\u578b\u4e2d\uff0cJava\u7ebf\u7a0b\uff08java.lang.Thread\uff09\u88ab\u4e00\u5bf9\u4e00\u6620\u5c04\u4e3a\u672c\u5730\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u3002 Java\u7ebf\u7a0b\u542f\u52a8\u65f6\u4f1a\u521b\u5efa\u4e00\u4e2a\u672c\u5730\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\uff1b\u5f53\u8be5Java\u7ebf\u7a0b\u7ec8\u6b62\u65f6\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7ebf \u4e5f\u4f1a\u88ab\u56de\u6536\u3002 \u64cd\u4f5c\u7cfb\u7edf\u4f1a\u8c03\u5ea6\u6240\u6709\u7ebf\u7a0b\u5e76\u4e3a\u5b83\u4eec\u5206\u914d\u7ed9\u53ef\u7528\u7684CPU\u3002 \u5728\u4e0a\u5c42\uff0cJava\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u901a\u5e38\u628a\u5e94\u7528\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u4efb\u52a1\uff0c\u7136\u540e\u4f7f\u7528\u7528\u6237\u7ea7\u7684\u8c03\u5ea6\u5668(Executor\u6846\u67b6)\u5c06 \u8fd9\u4e9b\u4efb\u52a1\u6620\u5c04\u4e3a\u56fa\u5b9a\u6570\u91cf\u7684\u7ebf\u7a0b\uff1b\u5728\u5e95\u5c42\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5c06\u8fd9\u4e9b\u7ebf\u7a0b\u6620\u5c04\u5230\u786c\u4ef6\u5904\u7406\u5668\u4e0a\u3002 \u4e09\u5927\u7ec4\u6210\u90e8\u5206 : 1\u3001\u4efb\u52a1: \u5305\u62ec\u88ab\u6267\u884c\u4efb\u52a1\u9700\u8981\u5b9e\u73b0\u7684\u63a5\u53e3\uff1aRunnable\u63a5\u53e3\u6216Callable\u63a5\u53e3; 2\u3001\u4efb\u52a1\u7684\u6267\u884c: \u5305\u62ec\u4efb\u52a1\u6267\u884c\u673a\u5236\u7684\u6838\u5fc3\u63a5\u53e3Executor\uff0c\u4ee5\u53ca\u7ee7\u627f\u81eaExecutor\u7684 ExecutorService\u63a5\u53e3\u3002 Executor\u6846\u67b6\u6709\u4e24\u4e2a\u5173\u952e\u7c7b\u5b9e\u73b0\u4e86ExecutorService\u63a5\u53e3 \uff08ThreadPoolExecutor\u548cScheduledThreadPoolExecutor\uff09; 3\u3001\u5f02\u6b65\u8ba1\u7b97\u7684\u7ed3\u679c: \u5305\u62ec\u63a5\u53e3Future\u548c\u5b9e\u73b0Future\u63a5\u53e3\u7684FutureTask\u7c7b\u3002 Exextor\u6846\u67b6\u6210\u5458 : 1\u3001 ThreadPoolExecutor ThreadPoolExecutor\u901a\u5e38\u4f7f\u7528\u5de5\u5382\u7c7bExecutors\u6765\u521b\u5efa\uff0cExecutors\u53ef\u4ee5\u521b\u5efa3\u79cd\u7c7b\u578b\u7684ThreadPoolExecutor: SingleThreadExecutor\u3001FixedThreadPool\u548cCachedThreadPool\u3002 2\u3001 ScheduledThreadPoolExecutor \u662fThreadPoolExecutor\u7684\u5b50\u7c7b\uff0c\u540c\u6837\u53ef\u4ee5\u4f7f\u7528Exexutors\u6765\u521b\u5efa\uff0c\u6709\u4e24\u79cd\u7c7b\u578b\uff0c\u4e00\u79cd\u662f\u5305\u542b\u82e5\u5e72\u4e2a\u7ebf\u7a0b\u7684 ScheduledThreadPoolExecutor\uff0c\u4e00\u79cd\u662f\u53ea\u5305\u542b\u4e00\u4e2a\u7ebf\u7a0b\u7684SingleThreadScheduledExecutor\u3002 3\u3001 Future\u63a5\u53e3 Future\u63a5\u53e3\u548c\u5b9e\u73b0Future\u63a5\u53e3\u7684FutureTask\u7c7b\u7528\u6765\u8868\u793a\u5f02\u6b65\u8ba1\u7b97\u7684\u7ed3\u679c\u3002\u5f53\u6211\u4eec\u628aRunnable \u63a5\u53e3\u6216Callable\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b \u63d0\u4ea4\u7ed9ThreadPoolExecutor\u6216ScheduledThreadPoolExecutor\u65f6\uff0cThreadPoolExecutor\u6216 ScheduledThreadPoolExecutor\u4f1a\u5411\u6211\u4eec\u8fd4\u56de\u4e00\u4e2aFutureTask\u5bf9\u8c61\u3002ExexutorService\u63a5\u53e3\u4e2d\u5b9a\u4e49\u4e86\u5982\u4e0bAPI: < T> Future < T> submit(Callable < T> task); < T> Future < T> submit(Runnable task, T result); Future < ?> submit(Runnable task); // \u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u7684Future\u5bf9\u8c61\u8c03\u7528get()\u8fd4\u56de\u7684\u662fnull 4\u3001 Runnable\u63a5\u53e3\u548cCallable\u63a5\u53e3 Runnable\u63a5\u53e3\u548cCallable\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\uff0c\u90fd\u53ef\u4ee5\u88abThreadPoolExecutor\u6216ScheduledThreadPoolExecutor\u6267\u884c\u3002 \u59823, submit\u65b9\u6cd5\u4e2d\u4f1a\u8c03\u7528newTaskFor\u65b9\u6cd5\u628aRunnable\u6216\u8005Callable\u5bf9\u8c61\u5c01\u88c5\u4e3aFutureTask\u5bf9\u8c61 task, \u7136\u540e\u8c03\u7528execute\u65b9\u6cd5,\u5c06task\u4f20\u5165\u5230\u7ebf\u7a0b\u6c60\uff0csubmit\u65b9\u6cd5\u6700\u7ec8\u8fd4\u56detask\u3002 FutureTask JDK1.8\u7248\u672c\u4e2d\u7684\u5b9e\u73b0\u4e0d\u540c\u4e8e\u4e4b\u524d\u7248\u672c\u4e2d\u4f9d\u8d56\u4e8eAQS\uff1bSync control in the current design relies on a \"state\" field updated via CAS to track completion, alon with a simple Treiber stack to hold waiting threads\u3002 RunState : NEW\u3001COMPLETING(\u8868\u793a\u6b63\u5728\u7ed3\u675f\uff0c\u5c1a\u6709\u4e00\u4e9b\u7ed3\u679c\u6ca1\u6709\u5199\u5165)\u3001NORMAL(\u4efb\u52a1\u6b63\u5e38\u7ed3\u675f)\u3001 EXCEPTIONAL\u3001CANCELLED\u3001INTERRUPTING\u3001INTERRUPED(\u7531\u5c0f\u5230\u5927\u6392\u5217) Possible state transitions: NEW -> COMPLETING -> NORMAL NEW -> COMPLETING -> EXCEPTIONAL NEW -> CANCELLED NEW -> INTERRUPTING -> INTERRUPTED \u6784\u9020\u51fd\u6570 : public FutureTask(Callable callable) { if (callable == null) throw new NullPointerException(); this.callable = callable; this.state = NEW; // ensure visibility of callable } public FutureTask(Runnable runnable, V result) { this.callable = Executors.callable(runnable, result); // \u5f53runnable\u6267\u884c\u5b8c\u6210\u65f6\uff0c\u5916\u90e8\u7ebf\u7a0b\u8c03\u7528Future\u5bf9\u8c61\u7684get\u65b9\u6cd5\uff0c // \u53ef\u80fd\u8fd4\u56de null \u6216\u8005\u8fd4\u56de result this.state = NEW; // ensure visibility of callable } run\u65b9\u6cd5 : public void run() { // \u5f53\u524d\u4efb\u52a1\u72b6\u6001\u4e0d\u4e3aNEW\uff0c\u6216\u8005\u5f53\u524d\u4efb\u52a1\u7684runner\u5b57\u6bb5\u4e0d\u4e3anull\uff0c // \u6216runner\u5b57\u6bb5\u4e3anull\uff0c\u5f53\u524d\u7ebf\u7a0b\u89c6\u56fe\u62a2\u5360\u4efb\u52a1\u5931\u8d25(\u88ab\u5176\u4ed6\u7ebf\u7a0b\u62a2\u5360) // \u76f4\u63a5return if (state != NEW || !UNSAFE.compareAndSwapObject(this, runnerOffset, null, Thread.currentThread())) return; try { Callable c = callable; // c!=null: \u9632\u6b62\u4f20\u5165\u7684\u4efb\u52a1\u4e3a\u7a7a // state == NEW, DOUBLE CHECK\uff0c\u9632\u6b62\u4e24\u6b21\u68c0\u6d4b\u4e2d\u95f4\uff0c\u5916\u90e8\u7ebf\u7a0b\u53d6\u6d88\u4e86\u5f53\u524d\u4efb\u52a1 if (c != null && state == NEW) { V result; boolean ran; try { result = c.call(); ran = true; } catch (Throwable ex) { result = null; ran = false; setException(ex); } if (ran) set(result); } } finally { // runner must be non-null until state is settled to // prevent concurrent calls to run() runner = null; // state must be re-read after nulling runner to prevent // leaked interrupts int s = state; if (s >= INTERRUPTING) handlePossibleCancellationInterrupt(s); } } protected void set(V v) { if (UNSAFE.compareAndSwapInt(this, stateOffset, NEW, COMPLETING)) { outcome = v; // \u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9outcome\u540e\uff0c\u4fee\u6539\u5f53\u524d\u4efb\u52a1\u72b6\u6001\u4e3aNORMAL UNSAFE.putOrderedInt(this, stateOffset, NORMAL); // final state finishCompletion(); } } // Removes and signals all waiting threads private void finishCompletion() { // assert state > COMPLETING; //\u5982\u679cq==null,\u8bf4\u660e\u8be5\u4efb\u52a1\u7684\u7b49\u5f85\u94fe\u8868\u4e0a\u7684\u7ebf\u7a0b\u5df2\u7ecf\u5168\u88ab\u5524\u9192 for (WaitNode q; (q = waiters) != null;) { // \u901a\u8fc7CAS\u8bbe\u7f6ewaiters\u4e3anull\uff0c\u907f\u514d\u56e0\u4e3a\u6709\u7ebf\u7a0b\u53d6\u6d88\u4efb\u52a1\uff0c\u51fa\u73b0\u7ade\u4e89 if (UNSAFE.compareAndSwapObject(this, waitersOffset, q, null)) { for (;;) { //\u5524\u9192\u94fe\u8868\u4e0a\u7684\u6240\u6709\u963b\u585e\u7684\u7ebf\u7a0b Thread t = q.thread; if (t != null) { q.thread = null; LockSupport.unpark(t); } WaitNode next = q.next; if (next == null) break; q.next = null; // unlink to help gc q = next; } break; } } done(); // \u81ea\u7531\u5b9e\u73b0\u6269\u5c55\u529f\u80fd callable = null; // to reduce footprint } get\u65b9\u6cd5 : // \u6ce8\u610f\u53ef\u80fd\u6709\u591a\u4e2a\u7ebf\u7a0b\u8c03\u7528get\u65b9\u6cd5 public V get() throws InterruptedException, ExecutionException { int s = state; if (s < = COMPLETING)// \u5f53\u524d\u4efb\u52a1\u5c1a\u672a\u5b8c\u6210\uff0c\u8c03\u7528get\u7684\u5916\u90e8\u7ebf\u7a0b\u4f1a\u88ab\u963b\u585e s = awaitDone(false, 0L); return report(s); } private int awaitDone(boolean timed, long nanos) throws InterruptedException { final long deadline = timed ? System.nanoTime() + nanos : 0L; WaitNode q = null; boolean queued = false; for (;;) { if (Thread.interrupted()) {//\u5f53\u524d\u7ebf\u7a0b\u88ab\u5176\u4ed6\u7ebf\u7a0b\u901a\u8fc7\u4e2d\u65ad\u5524\u9192 removeWaiter(q); throw new InterruptedException(); } int s = state; if (s > COMPLETING) { // \u7ebf\u7a0b\u6b63\u5e38\u7ed3\u675f\u6216\u8005\u88ab\u53d6\u6d88\u6216\u53d1\u751f\u5f02\u5e38 if (q != null) // \u5df2\u4e3a\u5f53\u524d\u7ebf\u7a0b\u521b\u5efa\u4e86WaitNode\uff0c\u4f46\u5728\u5165\u961f\u524d\u4efb\u52a1\u5df2\u7ecf\u5b8c\u6210 // \u4e8e\u662f\u8ba9q.thread = null\uff0c\u8fd4\u56de\u4efb\u52a1\u5f53\u524d\u72b6\u6001 q.thread = null; return s; } else if (s == COMPLETING) // cannot time out yet Thread.yield(); // \u5f53\u524d\u7ebf\u7a0b\u91ca\u653eCPU\uff0c\u8fdb\u884c\u4e0b\u4e00\u6b21\u62a2\u5360 else if (q == null) q = new WaitNode(); else if (!queued) queued = UNSAFE.compareAndSwapObject(this, waitersOffset, q.next = waiters, q); else if (timed) { nanos = deadline - System.nanoTime(); if (nanos < = 0L) { removeWaiter(q); return state; } LockSupport.parkNanos(this, nanos); } else // \u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u72b6\u6001\u53d8\u4e3awaiting // \u5982\u679c\u6709\u5916\u90e8\u7ebf\u7a0b\u5524\u9192\u5f53\u524d\u7ebf\u7a0b\uff0c\u6216\u8005\u88ab\u4e2d\u65ad\uff0c\u5219\u4ecepark\u65b9\u6cd5\u8fd4\u56de LockSupport.park(this); } } private void removeWaiter(WaitNode node) { if (node != null) { node.thread = null; retry: for (;;) { // restart on removeWaiter race for (WaitNode pred = null, q = waiters, s; q != null; q = s) { s = q.next; if (q.thread != null) pred = q; else if (pred != null) { // \u8bf4\u660e\u5f53\u524d\u8282\u70b9\u4fdd\u5b58\u7684\u7ebf\u7a0b\u4e3a\u7a7a\uff0c\u800c\u524d\u4e00\u4e2a\u8282\u70b9\u53c8\u4e0d\u662f\u5934\u8282\u70b9 pred.next = s; // \u5219\u8ba9\u524d\u4e00\u4e2a\u8282\u70b9\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9 if (pred.thread == null) // check for race continue retry; } // \u8bf4\u660e\u8981\u5220\u9664\u7684\u662f\u5934\u8282\u70b9\uff0c\u5219\u901a\u8fc7cas\uff0c\u8ba9waiters\u6307\u5411\u5934\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9 else if (!UNSAFE.compareAndSwapObject(this, waitersOffset, q, s)) continue retry; } break; } } } private V report(int s) throws ExecutionException { // s=normal\u65f6\uff0cx\u662fcallable\u5bf9\u8c61\u8fd4\u56de\u7ed3\u679c\uff1bs=exception\u65f6\uff0cx\u662f\u5f02\u5e38\u7c7b\u578b\u5bf9\u8c61 Object x = outcome; if (s == NORMAL) return (V)x; if (s >= CANCELLED) throw new CancellationException(); throw new ExecutionException((Throwable)x); } cancel\u65b9\u6cd5 public boolean cancel(boolean mayInterruptIfRunning) { // \u5982\u679c\u4efb\u52a1\u72b6\u6001\u4e0d\u4e3aNEW\uff0c\u6216\u8005\u4fee\u6539\u4efb\u52a1\u72b6\u6001\u5931\u8d25\uff0c\u90fd\u4f1a\u76f4\u63a5\u8fd4\u56defalse,\u8868\u793a\u53d6\u6d88\u5931\u8d25 // mayInterruptIfRunning\u4e3aTrue,\u5219\u4f1a\u4fee\u6539\u4efb\u52a1\u72b6\u6001\u4e3aINTERRUPTING\uff0c\u5426\u5219\u4e3aCANCELLED if (!(state == NEW && UNSAFE.compareAndSwapInt(this, stateOffset, NEW, mayInterruptIfRunning ? INTERRUPTING : CANCELLED))) return false; try { // in case call to interrupt throws exception if (mayInterruptIfRunning) { try { // runner\u662f\u5f53\u524d\u6267\u884cFutureTask\u7684\u7ebf\u7a0b // runner\u6709\u53ef\u80fd\u4e3anull,\u5373\u6b64\u65f6\u4efb\u52a1\u4f9d\u65e7\u5b58\u5728\u4efb\u52a1\u961f\u5217\u4e2d\uff0c\u5c1a\u672a\u88ab\u5de5\u4f5c\u7ebf\u7a0b\u83b7\u53d6 Thread t = runner; if (t != null) t.interrupt(); // \u4e2d\u65ad\u5f53\u524d\u7ebf\u7a0b } finally { // final state UNSAFE.putOrderedInt(this, stateOffset, INTERRUPTED); } } } finally { finishCompletion(); } return true; } \u7ebf\u7a0b\u6c60 \u4f7f\u7528\u7ebf\u7a0b\u6c60\u4f18\u70b9: \u964d\u4f4e\u8d44\u6e90\u6d88\u8017\uff1a\u901a\u8fc7\u6c60\u5316\u6280\u672f\u91cd\u590d\u5229\u7528\u5df2\u521b\u5efa\u7684\u7ebf\u7a0b\uff0c\u964d\u4f4e\u7ebf\u7a0b\u521b\u5efa\u548c\u9500\u6bc1\u9020\u6210\u7684\u635f\u8017\u3002 \u63d0\u9ad8\u54cd\u5e94\u901f\u5ea6\uff1a\u4efb\u52a1\u5230\u8fbe\u65f6\uff0c\u65e0\u9700\u7b49\u5f85\u7ebf\u7a0b\u521b\u5efa\u5373\u53ef\u7acb\u5373\u6267\u884c\u3002 \u63d0\u9ad8\u7ebf\u7a0b\u7684\u53ef\u7ba1\u7406\u6027\uff1a\u7ebf\u7a0b\u662f\u7a00\u7f3a\u8d44\u6e90\uff0c\u5982\u679c\u65e0\u9650\u5236\u521b\u5efa\uff0c\u4e0d\u4ec5\u4f1a\u6d88\u8017\u7cfb\u7edf\u8d44\u6e90\uff0c\u8fd8\u4f1a\u56e0\u4e3a\u7ebf\u7a0b\u7684\u4e0d\u5408\u7406\u5206\u5e03 \u5bfc\u81f4\u8d44\u6e90\u8c03\u5ea6\u5931\u8861\uff0c\u964d\u4f4e\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u3002\u4f7f\u7528\u7ebf\u7a0b\u6c60\u53ef\u4ee5\u8fdb\u884c\u7edf\u4e00\u7684\u5206\u914d\u3001\u8c03\u4f18\u548c\u76d1\u63a7\u3002 \u63d0\u4f9b\u6269\u5c55\u6027\u529f\u80fd: \u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u81ea\u5b9a\u4e49\u65b0\u529f\u80fd\uff0c\u6bd4\u5982\u5ef6\u65f6\u5b9a\u65f6\u7ebf\u7a0b\u6c60ScheduledThreadPoolExecutor\uff0c \u5176\u662fThreadPoolExecutor\u7684\u5b50\u7c7b\uff0c\u5141\u8bb8\u4efb\u52a1\u5ef6\u671f\u6267\u884c\u6216\u5b9a\u671f\u6267\u884c\u3002 ThreadPoolExecutor\u5b9e\u73b0: 1\u3001UML\u7c7b\u56fe ExecutorService : a\u3001\u7ee7\u627fExecutor\u63a5\u53e3 b\u3001provides methods to manage termination and methods that can produce a Future for tracking progress of one or more asynchronous tasks. An ExecutorService can be shut down, which will cause it to reject new tasks. Two different methods are provided for shutting down an ExecutorService. The shutdown method will allow previously submitted tasks to execute before terminating, \u800cshutdownNow\u65b9\u6cd5\u963b\u6b62\u7b49\u5f85\u7684\u4efb\u52a1\u542f\u52a8\u5e76\u5c1d\u8bd5\u505c\u6b62\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u3002\u7ec8\u6b62\u65f6\uff0cExecutor\u6ca1\u6709\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\uff0c \u6ca1\u6709\u7b49\u5f85\u6267\u884c\u7684\u4efb\u52a1\uff0c\u4e5f\u4e0d\u80fd\u63d0\u4ea4\u65b0\u4efb\u52a1\u3002\u5e94\u5173\u95ed\u672a\u4f7f\u7528\u7684ExecutorService\u4ee5\u5141\u8bb8\u56de\u6536\u5176\u8d44\u6e90\u3002 c\u3001\u63d0\u4f9bsubmit\u65b9\u6cd5\uff0c\u8fd4\u56deFuture\u7c7b\u578b\u5bf9\u8c61\uff0c\u8868\u660e\u8ba1\u7b97\u7ed3\u679c\u662f\u5f02\u6b65\u7684\uff0c\u901a\u8fc7\u8c03\u7528Future\u5bf9\u8c61\u7684get\u65b9\u6cd5\u963b\u585e\u8c03\u7528\u7ebf\u7a0b\uff0c \u76f4\u81f3\u8fd4\u56de\u7ed3\u679c\u3002 \u2003 2\u3001ThreadPoolExecutor : \u4e3b\u8981\u5c5e\u6027 : corePoolSize:\u6838\u5fc3\u7ebf\u7a0b\u6c60\u7684\u5927\u5c0f; maximumPoolSize:\u6700\u5927\u7ebf\u7a0b\u6c60\u7684\u5927\u5c0f; workQueue:\u7528\u6765\u6682\u65f6\u4fdd\u5b58\u4efb\u52a1\u7684\u5de5\u4f5c\u961f\u5217, \u7c7b\u578b BlockingQueue< Runnable>; handler:\u5c5e\u4e8eRejectedExecutionHandler\u7c7b\u578b, \u5f53ThreadPoolExecutor\u5df2\u7ecf\u5173\u95ed\u6216ThreadPoolExecutor\u5df2\u7ecf\u9971\u548c\u65f6 (\u8fbe\u5230\u4e86\u6700\u5927\u7ebf\u7a0b\u6c60\u5927\u5c0f\u4e14\u5de5\u4f5c\u961f\u5217\u5df2\u6ee1)\uff0cexecute()\u65b9\u6cd5\u5c06\u8981\u8c03\u7528\u7684Handler; keepAliveTime: \u5f53\u7ebf\u7a0b\u6570\u91cf\u5927\u4e8ecorePoolSize, \u5269\u4f59\u7ebf\u7a0b\u7b49\u5f85\u65b0\u4efb\u52a1\u7684\u6700\u957f\u65f6\u95f4\uff0c\u8d85\u65f6\u540e\u5c06\u88ab\u7ec8\u6b62; threadFactory: the factory to use when the executor creates a new thread\u3002 \u7ebf\u7a0b\u6c60\u72b6\u6001 : \u4f7f\u7528\u4e00\u4e2aAtomicInteger\u7c7b\u578b\u53d8\u91cf ctl ,\u7ef4\u62a4\u4e24\u4e2a\u72b6\u6001runState(\u9ad83\u4f4d)\u548cworkerCount(\u4f4e29\u4f4d\uff0c\u8868\u793a\u7ebf\u7a0b\u6570\u91cf); \u56e0\u6b64\u7ebf\u7a0b\u6c60\u6700\u5927\u5bb9\u91cf\u4e0d\u8d85\u8fc72^30-1. RUNNING: Accept new tasks and process queued tasks SHUTDOWN: Don't accept new tasks, but process queued tasks STOP: Don't accept new tasks, don't process queued tasks, and interrupt in-progress tasks TIDYING: All tasks have terminated, workerCount is zero, the thread transitioning to state TIDYING will run the terminated() hook method TERMINATED: terminated() has completed \u8fd9\u4e9b\u503c\u4e4b\u95f4\u7684\u6570\u5b57\u987a\u5e8f\u5f88\u91cd\u8981\uff0c\u4ee5\u5141\u8bb8\u6709\u5e8f\u6bd4\u8f83\u3002\u8fd0\u884c\u72b6\u6001\u4f1a\u968f\u65f6\u95f4\u5355\u8c03\u589e\u52a0\uff0c\u4f46\u4e0d\u5fc5\u547d\u4e2d\u6bcf\u4e2a\u72b6\u6001. The transitions are: RUNNING -> SHUTDOWN On invocation of shutdown(), perhaps implicitly in finalize() (RUNNING or SHUTDOWN) -> STOP On invocation of shutdownNow() SHUTDOWN -> TIDYING When both queue and pool are empty STOP -> TIDYING When pool is empty TIDYING -> TERMINATED When the terminated() hook method has completed \u2003 \u4e09\u79cdThreadPoolExecutor : FixedThreadPool : Executors\u521b\u5efaFixedThreadPool\u65f6, corePoolSize\u548cmaximumPoolSize\u90fd\u88ab\u8bbe\u7f6e\u4e3a\u6307\u5b9a\u7684\u53c2\u6570nThreads; \u4f7f\u7528\u65e0\u754c\u961f\u5217LinkedBlockingQueue\u4f5c\u4e3a\u7ebf\u7a0b\u6c60\u7684\u4efb\u52a1\u961f\u5217(\u961f\u5217\u7684\u5bb9\u91cf\u4e3a Integer.MAX_VALUE); SingleThreadExecutor : corePoolSize\u548cmaximumPoolSize\u90fd\u8bbe\u7f6e\u4e3a1\uff0c\u5176\u4f59\u53c2\u6570\u548cFixedThreadPool\u4e00\u76f4\uff0c\u540c\u6837\u4f7f\u7528 LinkedBlockingQueue\u4f5c\u4e3a\u7ebf\u7a0b\u6c60\u7684\u4efb\u52a1\u961f\u5217; CachedThreadPool : corePoolSize\u88ab\u8bbe\u7f6e\u4e3a0\uff0c\u5373corePool\u4e3a\u7a7a; maximumPoolSize\u88ab\u8bbe\u7f6e\u4e3aInteger.MAX_VALUE, \u5373maximumPool\u662f\u65e0\u754c\u7684;\u4f7f\u7528\u6ca1\u6709\u5bb9\u91cf\u7684SynchronousQueue\u4f5c\u4e3a\u7ebf\u7a0b\u6c60\u7684\u4efb\u52a1\u961f\u5217, \u4f46CachedThreadPool\u7684 maximumPool\u662f\u65e0\u754c\u7684\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u4e3b\u7ebf\u7a0b\u63d0\u4ea4\u4efb\u52a1\u7684\u901f\u5ea6\u9ad8\u4e8emaximumPool\u4e2d\u7ebf\u7a0b\u5904\u7406\u4efb\u52a1\u7684\u901f\u5ea6\u65f6\uff0c CachedThreadPool\u4f1a\u4e0d\u65ad\u521b\u5efa\u65b0\u7ebf\u7a0b\u3002\u6781\u7aef\u60c5\u51b5\u4e0b\uff0cCachedThreadPool\u4f1a\u56e0\u4e3a\u521b\u5efa\u8fc7\u591a\u7ebf\u7a0b\u800c\u8017\u5c3dCPU\u548c\u5185\u5b58\u8d44\u6e90\u3002 \u6ce8\u610f : \u5bf9\u4e8e\u7531FixedThreadPool\u548cSingleThreadExecutor\uff0c\u5b83\u4eec\u7684corePoolSize=maximumPoolSize\uff0c\u4e14 \u90fd\u4f7f\u7528LinkedBlockingQueue(\u53ef\u9009\u6709\u754c\u963b\u585e\u961f\u5217,\u7531\u4e8e\u4f7f\u7528\u9ed8\u8ba4\u5bb9\u91cfIntenger.MAX_VALUE,\u6b64\u65f6\u4e3a\u65e0\u754c)\uff0c \u4e24\u8005\u6267\u884c\u6d41\u7a0b\u7c7b\u4f3c: 1)\u5982\u679c\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u5c11\u4e8ecorePoolSize\uff0c\u5219\u521b\u5efa\u65b0\u7ebf\u7a0b\u6765\u6267\u884c\u4efb\u52a1\u3002 2)\u5728\u7ebf\u7a0b\u6c60\u5b8c\u6210\u9884\u70ed\u4e4b\u540e(\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u7b49\u4e8ecorePoolSize), \u5c06\u4efb\u52a1\u52a0\u5165LinkedBlockingQueue\u3002 3)\u7ebf\u7a0b\u6267\u884c\u5b8c1\u4e2d\u7684\u4efb\u52a1\u540e\uff0c\u4f1a\u5728\u5faa\u73af\u4e2d\u53cd\u590d\u4eceLinkedBlockingQueue\u83b7\u53d6\u4efb\u52a1\u6765\u6267\u884c\u3002 \u91c7\u7528\u65e0\u754c\u961f\u5217\u7684\u5f71\u54cd: a\u3001\u5f53\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u6570\u8fbe\u5230corePoolSize\u540e\uff0c\u65b0\u4efb\u52a1\u5c06\u5728\u65e0\u754c\u961f\u5217\u4e2d\u7b49\u5f85\uff0c\u56e0\u6b64\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u6570\u4e0d\u4f1a\u8d85\u8fc7corePoolSize\u3002 b\u3001\u7531\u4e8ea\uff0c\u4f7f\u7528\u65e0\u754c\u961f\u5217\u65f6maximumPoolSize\u5c06\u662f\u4e00\u4e2a\u65e0\u6548\u53c2\u6570\u3002 c\u3001\u7531\u4e8ea\u548cb\uff0c\u4f7f\u7528\u65e0\u754c\u961f\u5217\u65f6keepAliveTime\u5c06\u662f\u4e00\u4e2a\u65e0\u6548\u53c2\u6570\u3002 d\u3001\u7531\u4e8e\u4f7f\u7528\u65e0\u754c\u961f\u5217\uff0c\u8fd0\u884c\u4e2d\u7684FixedThreadPool(\u672a\u6267\u884c\u65b9\u6cd5shutdown()\u6216 shutdownNow())\u4e0d\u4f1a\u62d2\u7edd\u4efb\u52a1 (\u4e0d\u4f1a\u8c03\u7528RejectedExecutionHandler\u7c7b\u7684rejectedExecution\u65b9\u6cd5)\u3002 \u9971\u548c\u7b56\u7565 \u5f53\u6709\u754c\u961f\u5217\u8fbe\u5230\u8bbe\u5b9a\u5bb9\u91cf\u65f6\uff0c\u6216\u4efb\u52a1\u88ab\u63d0\u4ea4\u5230\u4e00\u4e2a\u5df2\u88ab\u5173\u95ed\u7684Executor\uff0c\u9971\u548c\u7b56\u7565\u4f1a\u88ab\u6267\u884c\uff0c\u5373\u6267\u884crejectedExecution\u3002 \u9971\u548c\u7b56\u7565\u6709\u56db\u79cd: a\u3001AbortPolicy: \u4e2d\u6b62\u7b56\u7565\uff0c\u629b\u51fa\u672a\u68c0\u67e5\u7684 RejectExecutionException. b\u3001DiscardPolicy: \u76f4\u63a5\u629b\u5f03\u6b64\u65f6\u63d0\u4ea4\u7684\u4efb\u52a1. c\u3001DiscardOldestPolict: \u629b\u5f03workQueue\u961f\u9996\u7684\u4efb\u52a1\uff0c\u7136\u540e\u91cd\u65b0\u63d0\u4ea4(retries execute) d\u3001CallerRunsPolicy: \u4e0d\u4f7f\u7528\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\uff0c\u800c\u662f\u5728\u8c03\u7528execute\u7684\u7ebf\u7a0b\u4e2d(\u5047\u8bbe\u4e3a\u4e3b\u7ebf\u7a0b)\u6267\u884c\u4efb\u52a1\uff0c \u4efb\u52a1\u6267\u884c\u671f\u95f4\uff0c\u5c06\u4e0d\u80fd\u63d0\u4ea4\u65b0\u4efb\u52a1 \u2003 3\u3001SchduledThreadPoolExecutor Executors\u521b\u5efaSchduledThreadPoolExecutor\u65f6maximumPoolSize\u6307\u5b9a\u4e3aIntenger.MAX_VALUE\uff1b\u4e14\u4e3a\u4e86\u5b9e\u73b0\u5ef6\u65f6/\u5468\u671f \u6267\u884c\u4efb\u52a1\uff0cSchduledThreadPoolExecutor\u4f7f\u7528\u79c1\u6709\u5185\u90e8\u7c7bDelayedWorkQueue\u4f5c\u4e3a\u4efb\u52a1\u961f\u5217\u3002 \u6267\u884c\u6d41\u7a0b: 1)\u5f53\u8c03\u7528ScheduledThreadPoolExecutor\u7684scheduleAtFixedRate()\u65b9\u6cd5\u6216\u8005scheduleWithFixedDelay()\u65b9\u6cd5\u65f6, \u4f1a\u5411ScheduledThreadPoolExecutor\u7684DelayedWorkQueue\u6dfb\u52a0\u4e00\u4e2a\u5b9e\u73b0\u4e86RunnableScheduledFuture\u63a5\u53e3\u7684 ScheduledFutureTask\u3002 2)\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u4ece\u5de5\u4f5c\u961f\u5217\u4e2d\u83b7\u53d6ScheduledFutureTask\uff0c\u7136\u540e\u6267\u884c\u4efb\u52a1: a\u3001\u7ebf\u7a0b\u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u5df2\u5230\u671f\u7684ScheduledFutureTask,\u5230\u671f\u4efb\u52a1\u662f\u6307ScheduledFutureTask\u7684time\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u65f6\u95f4\u3002 b\u3001\u7ebf\u7a0b\u6267\u884c\u8fd9\u4e2aScheduledFutureTask\u3002 c\u3001\u7ebf\u7a0b\u4fee\u6539ScheduledFutureTask\u7684time\u53d8\u91cf\u4e3a\u4e0b\u6b21\u5c06\u8981\u88ab\u6267\u884c\u7684\u65f6\u95f4\u3002 d\u3001\u7ebf\u7a0b\u628a\u8fd9\u4e2a\u4fee\u6539time\u4e4b\u540e\u7684ScheduledFutureTask\u91cd\u65b0\u52a0\u5165\u5de5\u4f5c\u961f\u5217\u3002 \u2003 DelayedWorkderQueue: A DelayedWorkQueue is based on a heap-based data structure like those in DelayQueue and PriorityQueue, except that every ScheduledFutureTask also records its index(heapindex) into the heap array . This eliminates the need to find a task upon cancellation, greatly speeding up removal (down from O(n) to O(log n)), and reducing garbage retention that would otherwise occur by waiting for the element to rise to top before clearing. But because the queue may also hold RunnableScheduledFutures that are not ScheduledFutureTasks, we are not guaranteed to have such indices available, in which case we fall back to linear search. (We expect that most tasks will not be decorated, and that the faster cases will be much more common.) \u2003 ScheduledFutureTask\uff1a ScheduledThreadPoolExecutor\u7684\u79c1\u6709\u5185\u90e8\u7c7b\uff0c\u4e3b\u8981\u5305\u542b3\u4e2a\u6210\u5458\u53d8\u91cf\uff0c\u5982\u4e0b: long\u578b\u6210\u5458\u53d8\u91cftime\uff0c\u8868\u793a\u8fd9\u4e2a\u4efb\u52a1\u5c06\u8981\u88ab\u6267\u884c\u7684\u5177\u4f53\u65f6\u95f4; long\u578b\u6210\u5458\u53d8\u91cfsequenceNumber\uff0c\u8868\u793a\u8fd9\u4e2a\u4efb\u52a1\u88ab\u6dfb\u52a0\u5230ScheduledThreadPoolExecutor\u4e2d\u7684\u5e8f\u53f7; long\u578b\u6210\u5458\u53d8\u91cfperiod\uff0c\u8868\u793a\u4efb\u52a1\u6267\u884c\u7684\u95f4\u9694\u5468\u671f. DelayQueue\u5c01\u88c5\u4e86\u4e00\u4e2aPriorityQueue\uff0c\u8fd9\u4e2aPriorityQueue\u4f1a\u5bf9\u961f\u5217\u4e2d\u7684ScheduledFutureTask\u8fdb\u884c\u6392\u5e8f\u3002 \u6392\u5e8f\u65f6\uff0ctime\u5c0f\u7684\u6392\u5728\u524d\u9762\uff08\u65f6\u95f4\u65e9\u7684\u4efb\u52a1\u5c06\u88ab\u5148\u6267\u884c\uff09\u3002\u5982\u679c\u4e24\u4e2a ScheduledFutureTask\u7684time\u76f8\u540c\uff0c \u5c31\u6bd4\u8f83sequenceNumber\uff0csequenceNumber\u5c0f\u7684\u6392\u5728\u524d\u9762(\u4e5f\u5c31\u662f\u8bf4,\u5982\u679c\u4e24\u4e2a\u4efb\u52a1\u7684\u6267\u884c\u65f6\u95f4\u76f8\u540c, \u90a3\u4e48\u5148\u63d0\u4ea4\u7684\u4efb\u52a1\u5c06\u88ab\u5148\u6267\u884c)\u3002 \u6d41 \u96c6\u5408(Collection\u63a5\u53e3\u5b9e\u73b0\u7c7b)\u63d0\u4f9b\u4e86stream()\u548cparallelStream()\u65b9\u6cd5\u53ef\u4ee5\u83b7\u5f97stream\uff1b stream\u5e76\u4e0d\u5b58\u50a8\u5143\u7d20\uff0c\u8fd9\u4e9b\u5143\u7d20\u53ef\u80fd\u5b58\u50a8\u5728\u5e95\u5c42\u7684\u96c6\u5408\u4e2d\uff0c\u6216\u662f\u6309\u9700\u751f\u6210\uff1b stream\u7684\u64cd\u4f5c\u4e0d\u4f1a\u4fee\u6539\u5176\u6570\u636e\uff1b stream\u7684\u64cd\u4f5c\u662f\u5c3d\u53ef\u80fd\u60f0\u6027\u6267\u884c\u7684\uff0c\u5373\u76f4\u81f3\u9700\u8981\u7ed3\u679c\u65f6\uff0c\u64cd\u4f5c\u624d\u4f1a\u6267\u884c\u3002 List<String> words = ...; // \u7edf\u8ba1\u957f\u5ea6\u5927\u4e8e5\u7684\u5355\u8bcd\u4e2a\u6570 long count = words.stream().filter(w->w.length>5).count(); // \u521b\u5efa\u6d41->\u5c06\u521d\u59cb\u6d41\u8f6c\u6362\u4e3a\u5176\u4ed6\u6d41\u7684\u4e2d\u95f4\u64cd\u4f5c\uff0c\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u6b65\u9aa4-> // \u5e94\u7528\u7ec8\u6b62\u64cd\u4f5c\uff0c\u4ea7\u751f\u7ed3\u679c\uff0c\u8fd9\u4e00\u6b65\u4f1a\u5f3a\u5236\u6267\u884c\u524d\u9762\u7684\u60f0\u6027\u64cd\u4f5c\uff1b\u6b64\u540e\u8fd9\u4e2a\u6d41\u5c06\u4e0d\u80fd\u518d\u4f7f\u7528\u3002 \u6d41\u7684\u521b\u5efa Stream<String> stream = Stream.of(String[]) ; //Stream.of(\"a\", \"b\", ..); of\u652f\u6301\u4e0d\u5b9a\u957f\u53c2\u6570 Arrays.stream(array, from, to) ; //\u4ee5[from, to)\u7684\u5143\u7d20\u6784\u5efa\u6d41 Strem.empty(); //\u7a7a\u6d41 // \u65e0\u9650\u6d41 // generate\u63a5\u53d7\u4e00\u4e2aSupplier<T>\u63a5\u53e3\u5bf9\u8c61 s\uff0c\u5176\u53ea\u6709\u4e00\u4e2a T get()\u65b9\u6cd5;\u901a\u8fc7\u53cd\u590d\u8c03\u7528s\u6765\u4ea7\u751f\u503c Stream<String> echos = Stream.generate(()->\"Echo\"); // iterate\u63a5\u53d7\u4e00\u4e2a UnaryOption<T>\uff0c\u5e76\u53cd\u590d\u5c06\u8be5\u51fd\u6570\u5e94\u7528\u5230\u4e4b\u524d\u7684\u7ed3\u679c\u4e0a Strem<BigInteger> integers = Stream.iterate(BigInteger.ZERO, n->n.add(BigInteger.ONE)); \u6d41\u7684\u8f6c\u6362 \u6d41\u7684\u7ea6\u7b80 \u6d41\u7684\u7ea6\u7b80\u662f\u4e00\u79cd\u7ec8\u7ed3\u64cd\u4f5c\uff0c\u5b83\u4eec\u4f1a\u5c06\u6d41\u7ea6\u7b80\u4e3a\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7684\u975e\u6d41\u503c\u3002 \u4f8b\u5982count()\u4f1a\u8fd4\u56de\u6d41\u4e2d\u5143\u7d20\u7684\u6570\u91cf\uff1b\u7c7b\u4f3c\u7684\u8fd8\u6709max()\u548cmin()\uff0c\u4f46\u5b83\u4eec\u7684\u8fd4\u56de\u7c7b\u578b\u662fOptional< T >,\u5b83\u8981\u4e48\u5728\u5176\u4e2d\u5305\u88c5\u4e86\u7b54\u6848\uff0c\u8981\u4e48\u8868\u793a\u6ca1\u6709\u4efb\u4f55\u503c(\u6d41\u4e3a\u7a7a)\uff0c\u6b64\u5916\u8fd8\u6709findFirst()\u3001findAny()\u7b49\u7ec8\u7ed3\u64cd\u4f5c\u3002 \u8f93\u5165\u8f93\u51fa\u6d41 \u8282\u70b9\u6d41\uff1a\u8282\u70b9\u6d41\u4ece\u4e00\u4e2a\u7279\u5b9a\u7684\u6570\u636e\u6e90\u8bfb\u5199\u6570\u636e\u3002\u5373\u8282\u70b9\u6d41\u662f\u76f4\u63a5\u64cd\u4f5c\u6587\u4ef6\uff0c\u7f51\u7edc\u7b49\u7684\u6d41\uff1b \u5904\u7406\u6d41\uff1a\u201c\u8fde\u63a5\u201d\u5728\u5df2\u5b58\u5728\u7684\u6d41\uff08\u8282\u70b9\u6d41\u6216\u5904\u7406\u6d41\uff09\u4e4b\u4e0a\uff0c\u901a\u8fc7\u5bf9\u6570\u636e\u7684\u5904\u7406\u4e3a\u7a0b\u5e8f\u63d0\u4f9b\u66f4\u4e3a\u5f3a\u5927\u7684\u8bfb\u5199\u529f\u80fd\u3002\u8fc7\u6ee4\u6d41\u662f\u4f7f\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u8f93\u5165\u6d41\u6216\u8f93\u51fa\u6d41\u8fde\u63a5\u521b\u5efa\u7684\uff0c\u8fc7\u6ee4\u6d41\u5c31\u662f\u5bf9\u8282\u70b9\u6d41\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u5305\u88c5\u3002\u4f8b\u5982BufferedInputStream\u548cBufferedOutputStream\uff0c\u4f7f\u7528\u5df2\u7ecf\u5b58\u5728\u7684\u8282\u70b9\u6d41\u6765\u6784\u9020\uff0c\u63d0\u4f9b\u5e26\u7f13\u51b2\u7684\u8bfb\u5199\uff0c\u63d0\u9ad8\u4e86\u8bfb\u5199\u7684\u6548\u7387\uff1b \u901a\u8fc7\u5d4c\u5957\u8fc7\u6ee4\u6d41\u53ef\u4ee5\u5b9e\u73b0\u591a\u91cd\u529f\u80fd\uff1b DataInputStream\u6d41\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u8bfb\u53d6\u6587\u4ef6\uff0c\u63d0\u4f9breadInt\u3001readDouble\u3001readLong\u3001readUTF\u7b49\u65b9\u6cd5\uff0c\u5c06\u8bfb\u5165\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u7c7b\u578b\uff0c\u5176\u4e2dreadUTF\u8bfb\u5165\u7531\"\u4fee\u8ba2\u8fc7\u7684UTF-8\u683c\u5f0f\"\u7684\u5b57\u7b26\u6784\u6210\u7684\u5b57\u7b26\u4e32\u3002 \u64cd\u4f5c\u6587\u4ef6 \u4eceJAVA SE7\u5f00\u59cb\uff0c\u6dfb\u52a0\u4e86Path\u63a5\u53e3\u548cFiles\u7c7b\uff0c\u524d\u8005\u4e3b\u8981\u662f\u6784\u5efa\u548c\u83b7\u53d6\u6587\u4ef6\u8def\u5f84\uff0c\u540e\u8005\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u9759\u6001\u65b9\u6cd5\uff0c\u63a5\u6536Path\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u6765\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u3002\u8fd9\u4e9b\u65b9\u6cd5\u9002\u7528\u4e8e\u4e2d\u7b49\u957f\u5ea6\u7684\u6587\u672c\u6587\u4ef6\uff0c\u5bf9\u4e8e\u6bd4\u8f83\u957f\u7684\u6587\u4ef6\uff0c\u5efa\u8bae\u4f7f\u7528InputStream/OutputStream\uff0c\u6216Reader/Writer\u3002 \u6b63\u5219\u8868\u8fbe\u5f0f \u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316 \u5e8f\u5217\u5316\uff1a\u5c06\u5bf9\u8c61\u5199\u5165\u5230IO\u6d41\u4e2d\uff1b\u53cd\u5e8f\u5217\u5316\uff1a\u4eceIO\u6d41\u4e2d\u6062\u590d\u5bf9\u8c61\u3002 \u610f\u4e49\uff1a\u5e8f\u5217\u5316\u673a\u5236\u5141\u8bb8\u5c06\u5b9e\u73b0\u5e8f\u5217\u5316\u7684Java\u5bf9\u8c61\u8f6c\u6362\u4f4d\u5b57\u8282\u5e8f\u5217\uff0c\u8fd9\u4e9b\u5b57\u8282\u5e8f\u5217\u53ef\u4ee5\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\uff0c\u6216\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\uff0c\u8fbe\u5230\u4ee5\u540e\u6062\u590d\u6210\u539f\u6765\u7684\u5bf9\u8c61\u3002\u5e8f\u5217\u5316\u673a\u5236\u4f7f\u5f97\u5bf9\u8c61\u53ef\u4ee5\u8131\u79bb\u7a0b\u5e8f\u7684\u8fd0\u884c\u800c\u72ec\u7acb\u5b58\u5728\u3002 1\u3001\u5b9e\u73b0\u65b9\u5f0f \u5982\u679c\u9700\u8981\u5c06\u67d0\u4e2a\u5bf9\u8c61\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\u6216\u8005\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u5e94\u8be5\u5b9e\u73b0Serializable\u63a5\u53e3\u6216\u8005Externalizable\u63a5\u53e3\u4e4b\u4e00\u3002 Serializable\u63a5\u53e3\u662f\u4e00\u4e2a\u6807\u8bb0\u63a5\u53e3\uff0c\u4e0d\u7528\u5b9e\u73b0\u4efb\u4f55\u65b9\u6cd5\u3002\u4e00\u65e6\u5b9e\u73b0\u4e86\u6b64\u63a5\u53e3\uff0c\u8be5\u7c7b\u7684\u5bf9\u8c61\u5c31\u662f\u53ef\u5e8f\u5217\u5316\u7684. \u6b65\u9aa4: \u6b65\u9aa4\u4e00\uff1a\u521b\u5efa\u4e00\u4e2aObjectOutputStream\u8f93\u51fa\u6d41\uff0c\u4f8b\u5982\u5c06\u5bf9\u8c61\u5e8f\u5217\u5316\u5230\u6587\u4ef6s\uff1a ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"object.txt\"))) \u6b65\u9aa4\u4e8c\uff1a\u8c03\u7528ObjectOutputStream\u5bf9\u8c61\u7684writeObject\u8f93\u51fa\u53ef\u5e8f\u5217\u5316\u5bf9\u8c61 oos.writeObject(person); //person\u662f\u4e00\u4e2aPerson\u5bf9\u8c61 // \u5bf9\u4e8e\u57fa\u672c\u7c7b\u578b\u503c\uff0c\u4f7f\u7528\u8bf8\u5982writeInt/readInt\u7c7b\u4f3c\u7684\u65b9\u6cd5\u3002(\u5bf9\u8c61\u6d41\u7c7b\u90fd\u5b9e\u73b0\u4e86DataInput/DateOutput\u63a5\u53e3)\u3002 \u2003 2\u3001\u53cd\u5e8f\u5217\u5316\u6b65\u9aa4\uff0c \u53cd\u5e8f\u5217\u5316\u7684\u987a\u5e8f\u4e0e\u5e8f\u5217\u5316\u65f6\u7684\u987a\u5e8f\u4e00\u81f4 \u6b65\u9aa4\u4e00\uff1a\u521b\u5efa\u4e00\u4e2aObjectInputStream\u8f93\u5165\u6d41\uff1b ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"person.txt\"))) { \u6b65\u9aa4\u4e8c\uff1a\u8c03\u7528ObjectInputStream\u5bf9\u8c61\u7684readObject()\u5f97\u5230\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u3002 Person brady = (Person) ois.readObject(); \u5bf9\u540c\u4e00\u4e2a\u5bf9\u8c61\u5e8f\u5217\u5316\u591a\u6b21\uff0c\u6d41\u4e2d\u53ea\u4f1a\u51fa\u73b0\u4e00\u6b21 \u2003 3\u3001\u5e8f\u5217\u5316\u8fc7\u7a0b a\u3001\u6240\u6709\u4fdd\u5b58\u5230\u78c1\u76d8\u7684\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u5e8f\u5217\u5316\u7f16\u7801\u53f7\uff1b b\u3001\u5f53\u7a0b\u5e8f\u8bd5\u56fe\u5e8f\u5217\u5316\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u4f1a\u5148\u68c0\u67e5\u6b64\u5bf9\u8c61\u662f\u5426\u5df2\u7ecf\u5e8f\u5217\u5316\u8fc7\uff0c\u53ea\u6709\u6b64\u5bf9\u8c61\u4ece\u672a\uff08\u5728\u6b64\u865a\u62df\u673a\uff09\u88ab\u5e8f\u5217\u5316\u8fc7\uff0c \u624d\u4f1a\u5c06\u6b64\u5bf9\u8c61\u5e8f\u5217\u5316\u4e3a\u5b57\u8282\u5e8f\u5217\u8f93\u51fa\uff1b c\u3001\u5982\u679c\u6b64\u5bf9\u8c61\u5df2\u7ecf\u5e8f\u5217\u5316\u8fc7\uff0c\u5219\u76f4\u63a5\u8f93\u51fa\u7f16\u53f7\u5373\u53ef\u3002 \u2003 4\u3001\u4f7f\u7528transient\u4fee\u9970\u7684\u5c5e\u6027\uff0cjava\u5e8f\u5217\u5316\u65f6\uff0c\u4f1a\u5ffd\u7565\u6389\u6b64\u5b57\u6bb5\uff0c\u6240\u4ee5\u53cd\u5e8f\u5217\u5316\u51fa\u7684\u5bf9\u8c61\uff0c\u88abtransient\u4fee\u9970\u7684\u5c5e\u6027\u662f\u9ed8\u8ba4\u503c\u3002 \u5bf9\u4e8e\u5f15\u7528\u7c7b\u578b\uff0c\u503c\u662fnull\uff1b\u57fa\u672c\u7c7b\u578b\uff0c\u503c\u662f0\uff1bboolean\u7c7b\u578b\uff0c\u503c\u662ffalse\u3002transisent\u4e0d\u80fd\u4fee\u9970\u7c7b\u548c\u65b9\u6cd5\u3002 \u2003 5\u3001\u5e8f\u5217\u5316\u7248\u672c\u53f7 java\u5e8f\u5217\u5316\u63d0\u4f9b\u4e86\u4e00\u4e2aprivate static final long serialVersionUID \u7684\u5e8f\u5217\u5316\u7248\u672c\u53f7\uff0c\u53ea\u8981\u7248\u672c\u53f7\u76f8\u540c\uff0c \u5373\u4f7f\u66f4\u6539\u4e86\u5e8f\u5217\u5316\u5c5e\u6027\uff0c\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u6b63\u786e\u88ab\u53cd\u5e8f\u5217\u5316\u56de\u6765\u3002 \u5982\u679c\u53cd\u5e8f\u5217\u5316\u4f7f\u7528\u7684class\u7684\u7248\u672c\u53f7\u4e0e\u5e8f\u5217\u5316\u65f6\u4f7f\u7528\u7684\u4e0d\u4e00\u81f4\uff0c\u53cd\u5e8f\u5217\u5316\u4f1a\u62a5InvalidClassException\u5f02\u5e38\u3002 \u5e8f\u5217\u5316\u7248\u672c\u53f7\u53ef\u81ea\u7531\u6307\u5b9a\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0cJVM\u4f1a\u6839\u636e\u7c7b\u4fe1\u606f\u81ea\u5df1\u8ba1\u7b97\u4e00\u4e2a\u7248\u672c\u53f7\uff0c\u8fd9\u6837\u968f\u7740class\u7684\u5347\u7ea7\uff0c\u5c31\u65e0\u6cd5\u6b63\u786e\u53cd\u5e8f\u5217\u5316\uff1b \u4e0d\u6307\u5b9a\u7248\u672c\u53f7\u53e6\u4e00\u4e2a\u660e\u663e\u9690\u60a3\u662f\uff0c\u4e0d\u5229\u4e8ejvm\u95f4\u7684\u79fb\u690d\uff0c\u53ef\u80fdclass\u6587\u4ef6\u6ca1\u6709\u66f4\u6539\uff0c\u4f46\u4e0d\u540cjvm\u53ef\u80fd\u8ba1\u7b97\u7684\u89c4\u5219\u4e0d\u4e00\u6837\uff0c \u8fd9\u6837\u4e5f\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u53cd\u5e8f\u5217\u5316\u3002 \u4ec0\u4e48\u60c5\u51b5\u4e0b\u9700\u8981\u4fee\u6539serialVersionUID\u5462\uff1f\u5206\u4e09\u79cd\u60c5\u51b5\u3002 \u2003\u5982\u679c\u53ea\u662f\u4fee\u6539\u4e86\u65b9\u6cd5\uff0c\u53cd\u5e8f\u5217\u5316\u4e0d\u5bb9\u5f71\u54cd\uff0c\u5219\u65e0\u9700\u4fee\u6539\u7248\u672c\u53f7\uff1b \u2003\u5982\u679c\u53ea\u662f\u4fee\u6539\u4e86\u9759\u6001\u53d8\u91cf\uff0c \u77ac\u6001\u53d8\u91cf\uff08transient\u4fee\u9970\u7684\u53d8\u91cf\uff09 \uff0c\u53cd\u5e8f\u5217\u5316\u4e0d\u53d7\u5f71\u54cd\uff0c\u65e0\u9700\u4fee\u6539\u7248\u672c\u53f7\uff1b \u2003\u5982\u679c\u4fee\u6539\u4e86\u975e\u77ac\u6001\u53d8\u91cf\uff0c\u5219\u53ef\u80fd\u5bfc\u81f4\u53cd\u5e8f\u5217\u5316\u5931\u8d25\u3002\u5982\u679c\u65b0\u7c7b\u4e2d\u5b9e\u4f8b\u53d8\u91cf\u7684\u7c7b\u578b\u4e0e\u5e8f\u5217\u5316\u65f6\u7c7b\u7684\u7c7b\u578b\u4e0d\u4e00\u81f4\uff0c \u5219\u4f1a\u53cd\u5e8f\u5217\u5316\u5931\u8d25\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u66f4\u6539serialVersionUID\u3002\u5982\u679c\u53ea\u662f\u65b0\u589e\u4e86\u5b9e\u4f8b\u53d8\u91cf\uff0c\u5219\u53cd\u5e8f\u5217\u5316\u56de\u6765\u65b0\u589e\u7684\u662f\u9ed8\u8ba4\u503c\uff1b \u5982\u679c\u51cf\u5c11\u4e86\u5b9e\u4f8b\u53d8\u91cf\uff0c\u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u5ffd\u7565\u6389\u51cf\u5c11\u7684\u5b9e\u4f8b\u53d8\u91cf \u2003 6\u3001\u5e8f\u5217\u5316\u5b58\u5728\u7684\u95ee\u9898 \u5982\u679c\u5e8f\u5217\u5316\u4e00\u4e2a\u53ef\u53d8\u5bf9\u8c61\uff08\u5bf9\u8c61\u5185\u7684\u5185\u5bb9\u53ef\u66f4\u6539\uff09\u540e\uff0c\u66f4\u6539\u4e86\u5bf9\u8c61\u5185\u5bb9\uff0c\u518d\u6b21\u5e8f\u5217\u5316\uff0c\u5e76\u4e0d\u4f1a\u518d\u6b21\u5c06\u6b64\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u8282\u5e8f\u5217\uff0c \u800c\u53ea\u662f\u4fdd\u5b58\u5e8f\u5217\u5316\u7f16\u53f7\u3002 \u2003 7\u3001Externalizable\u63a5\u53e3\u4e0d\u540c\u4e8eSerializable\u63a5\u53e3,\u5b9e\u73b0\u6b64\u63a5\u53e3\u5fc5\u987b\u5b9e\u73b0\u63a5\u53e3\u4e2d\u7684\u4e24\u4e2a\u65b9\u6cd5(writeExternal\u3001readExternal\u65b9\u6cd5) \u5b9e\u73b0\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\uff0c\u8fd9\u662f\u5f3a\u5236\u6027\u7684\uff1b\u7279\u522b\u4e4b\u5904\u662f\u5fc5\u987b\u63d0\u4f9bpulic\u7684\u65e0\u53c2\u6784\u9020\u5668\uff0c\u56e0\u4e3a\u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u9700\u8981\u53cd\u5c04\u521b\u5efa\u5bf9\u8c61","title":"Java"},{"location":"Java/0_base/#java","text":"","title":"Java"},{"location":"Java/0_base/#_1","text":"\u57fa\u672c\u7c7b\u578b \u6574\u578b: int\\short\\long\\byte\uff0c\u4f9d\u6b21\u9700\u89814\u30012\u30018\u30011\u4e2a\u5b57\u8282\u5927\u5c0f\uff1b\u53ef\u4ee5\u4e3a\u6570\u5b57\u5b57\u9762\u91cf\u52a0\u4e0b\u5212\u7ebf\uff0c \u5982 1_000_000\u8868\u793a\u4e00\u767e\u4e07\uff1b\u5728Java\u4e2d\u6ca1\u6709\u65e0\u7b26\u53f7\u7c7b\u578b\u3002 \u2003 \u6d6e\u70b9\u7c7b\u578b: float\\double\uff0c\u5206\u522b\u53604\u30018\u4e2a\u5b57\u8282\uff1b\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u4f1a\u5b58\u5728\u6d6e\u70b9\u8bef\u5dee(2.0-1.1=0.8999999999999999)\uff0c \u5bf9\u4e8e\u6d89\u53ca\u5230\u91d1\u989d\u7684\u8ba1\u7b97\uff0c\u91c7\u7528BigDecimal\u7c7b\u53ef\u4ee5\u907f\u514d\u8bef\u5dee\u3002BigDecimal\u662f\u4e00\u4e2a\u7c7b\uff0c\u6784\u9020\u5668 BigDecimal(int)\u3001BigDecimal(double)\u3001BigDecimal(long)\u3001BigDecimal(String) ; \u5bf9\u4e8e\u4ee5\u6d6e\u70b9\u6570\u6765\u6784\u9020BigDecimal\uff0c\u4e0d\u63a8\u8350BigDecimal(double), \u56e0\u4e3a\u8bb8\u591a\u5c0f\u6570\u65e0\u6cd5\u5b8c\u5168\u5199\u6210\u4e8c\u673a\u5236\u5f62\u5f0f\uff1b \u63a8\u8350\u4f7f\u7528BigDecimal(String), \u4f8b\u5982BigDecimal(\"0.1\"), \u6216\u8005 BigDecimal.valueOf(0.1); \u505a\u8fd0\u7b97\u7684\u53cc\u65b9\uff0c\u4e00\u65b9\u91c7\u7528\u4e0a\u8ff0\u5f62\u5f0f\uff0c\u5219\u7ed3\u679c\u4e5f\u80fd\u6b63\u786e\u663e\u793a: BigDecimal b1 = new BigDecimal(2.2), b2=new BigDecimal(1.0); System.out.println(b1.subtract(b2)); // \u8f93\u51fa 1.200000000... BigDecimal b1 = new BigDecimal(\"2.2\"), b2=new BigDecimal(1.0); System.out.println(b1.subtract(b2)); // \u8f93\u51fa 1.2 \u2003 char\u7c7b\u578b: \u57fa\u4e8eUTF-16\uff0c\u53ea\u80fd\u7528\u6765\u8868\u793aBMP\u5e73\u9762\u4e2d\u7684\u5b57\u7b26\uff0c\u5927\u5c0f\u4e3a\u4e24\u4e2a\u5b57\u8282\u3002\u800c\u4e140xD800~0XDFFF\u6ca1\u6709\u5bf9\u5e94\u5b57\u7b26\uff0c \u6253\u5370\u7ed3\u679c\u4e3a ? . boolean:false\u548ctrue\uff0c\u4e14\u6574\u578b\u503c\u548c\u5e03\u5c14\u7c7b\u578b\u76f4\u63a5\u4e0d\u80fd\u4e92\u8f6c\u3002 \u5728Java\u4e2d\u6240\u6709\u503c\u91c7\u7528\u5927\u7aef\u5bf9\u9f50\u65b9\u5f0f\uff0c\u5373\u503c\u7684\u9ad8\u4f4d\u5b58\u653e\u5728\u5730\u5740\u4f4e\u4f4d\uff0c\u4e5f\u79f0\u9ad8\u4f4d\u5728\u524d\u987a\u5e8f(MSB)\uff0c \u53d8\u91cf\u521d\u59cb\u5316 \u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u4e4b\u540e\uff0c\u5fc5\u987b\u7528\u8d4b\u503c\u8bed\u53e5\u8fdb\u884c\u663e\u793a\u521d\u59cb\u5316\uff0c\u4e0d\u80fd\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u3002\u5728Java\u4e2d\u4e0d\u533a\u5206\u53d8\u91cf\u7684\u58f0\u660e\u548c\u5b9a\u4e49\u3002 \u5e38\u91cf \u4f7f\u7528final\u5173\u952e\u5b57\u6307\u793a\u5e38\u91cf\uff0c\u8868\u793a\u53ea\u80fd\u88ab\u8d4b\u503c\u4e00\u6b21\uff0c\u4e4b\u540e\u4e0d\u80fd\u88ab\u4fee\u6539\uff1bstatic final\u4fee\u9970\u7684\u53d8\u91cf\u662f\u7c7b\u5e38\u91cf\u3002 \u4f4d\u8fd0\u7b97\u7b26 &\u3001|\u3001^(\u5f02\u6216)\u3001~(\u975e)\uff1b<<\u5de6\u79fb\u8fd0\u7b97\u7b26\uff0c>>\u53f3\u79fb\u8fd0\u7b97\u7b26\uff0c>>>\u53f3\u79fb\uff0c\u5f3a\u5236\u9ad8\u4f4d\u88650\u3002 Unicode\u7f16\u7801 1\u3001Unicode \u7f16\u7801\u8303\u56f4\u662f\uff1a0-0x10FFFF\uff0c\u53ef\u4ee5\u5bb9\u7eb3 1114112 \u4e2a\u5b57\u7b26\uff0c\u8fdc\u8d85\u73b0\u6709\u5b57\u7b26\u6570\u91cf\uff0c \u6bcf\u4e2aUnicode\u7f16\u7801\u79f0\u4e3a\u4ee3\u7801\u70b9\uff0c\u6700\u591a\u4f7f\u752821\u4f4d\u4e8c\u8fdb\u5236\u4f4d\uff0c\u8868\u793a\u67d0\u4e2a\u6587\u5b57\u7cfb\u7edf\u4e0b\u7684\u67d0\u4e2a\u5b57\u7b26\uff1b 2\u3001Unicode \u6807\u51c6\u628a\u4ee3\u7801\u70b9\u5206\u6210\u4e8617\u4e2a\u4ee3\u7801\u5e73\u9762\uff08Code Plane\uff09\uff0c\u7f16\u53f7\u4e3a #0-#16\u3002 \u6bcf\u4e2a\u4ee3\u7801\u5e73\u9762\u5305\u542b 65,536\uff082^16\uff09\u4e2a\u4ee3\u7801\u70b9\uff1bPlane#0 \u53eb\u505a\u57fa\u672c\u591a\u8bed\u8a00\u5e73\u9762\uff08Basic Multilingual Plane\uff0cBMP\uff09 \u5927\u90e8\u5206\u5e38\u7528\u7684\u5b57\u7b26\u90fd\u5750\u843d\u5728\u8fd9\u4e2a\u5e73\u9762\u5185\uff0c\u6bd4\u5982 ASCII \u5b57\u7b26\uff0c\u6c49\u5b57\u7b49\uff0c\u7801\u70b9\u8303\u56f4 0x0000~0xFFFF\u3002 UTF-8 UTF-8: \u53ef\u53d8\u957f\u7f16\u7801\uff0c\u4f7f\u75281~4\u4e2a\u5b57\u8282\u8868\u793a\u4e00\u4e2a\u5b57\u7b26\uff0c\u6839\u636e\u5b57\u7b26\u5bf9\u5e94\u7801\u70b9\u6240\u5904\u8303\u56f4\uff0c\u91c7\u7528\u4e0d\u540c\u957f\u5ea6\u5b57\u8282\u8fdb\u884c\u7f16\u7801\uff1a \u4f8b1\uff1a\u201c\u6c49\u201d\u5b57\u7684 Unicode \u7f16\u7801\u662f 0x6C49\u30020x6C49 \u5728 0x0800-0xFFFF \u4e4b\u95f4\uff0c \u4f7f\u7528 3 \u5b57\u8282\u6a21\u677f\uff1a1110xxxx 10xxxxxx 10xxxxxx\u3002\u5c06 0x6C49 \u5199\u6210\u4e8c\u8fdb\u5236\u662f\uff1a0110 1100 0100 1001\uff0c \u7528\u8fd9\u4e2a\u6bd4\u7279\u6d41\u4f9d\u6b21\u4ee3\u66ff\u6a21\u677f\u4e2d\u7684 x\uff0c\u5f97\u5230\uff1a11100110 10110001 10001001\uff0c\u5373 E6 B1 89\u3002 \u4f8b2\uff1aUnicode \u7f16\u7801 0x20C30 \u5728 0x010000-0x10FFFF \u4e4b\u95f4\uff0c \u4f7f\u7528 4 \u5b57\u8282\u6a21\u677f\uff1a11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\u3002 \u5c06 0x20C30 \u5199\u6210 21 \u4f4d\u4e8c\u8fdb\u5236\u6570\u5b57\uff08\u4e0d\u8db3 21 \u4f4d\u5c31\u5728\u524d\u9762\u8865 0\uff09\uff1a0 0010 0000 1100 0011 0000\uff0c \u7528\u8fd9\u4e2a\u6bd4\u7279\u6d41\u4f9d\u6b21\u4ee3\u66ff\u6a21\u677f\u4e2d\u7684 x\uff0c\u5f97\u5230\uff1a11110000 10100000 10110000 10110000\uff0c\u5373 F0 A0 B0 B0\u3002 \u89e3\u7801\uff1a\u5982\u679c\u4e00\u4e2a\u5b57\u8282\u7684\u7b2c\u4e00\u4f4d\u662f 0 \uff0c\u5219\u8bf4\u660e\u8fd9\u4e2a\u5b57\u8282\u5bf9\u5e94\u4e00\u4e2a\u5b57\u7b26\uff1b \u5982\u679c\u4e00\u4e2a\u5b57\u8282\u7684\u7b2c\u4e00\u4f4d1\uff0c\u90a3\u4e48\u8fde\u7eed\u6709\u591a\u5c11\u4e2a 1\uff0c\u5c31\u8868\u793a\u8be5\u5b57\u7b26\u5360\u7528\u591a\u5c11\u4e2a\u5b57\u8282\u3002 UTF-16 \u7528\u4e24\u4e2a\u5b57\u8282\u6765\u7f16\u7801 BMP \u91cc\u7684\u4ee3\u7801\u70b9\uff0c\u7528\u56db\u4e2a\u5b57\u8282\u7f16\u7801\u5176\u4f59\u5e73\u9762\u91cc\u7684\u4ee3\u7801\u70b9\uff08\u6682\u4e0d\u8003\u8651\u5b57\u8282\u987a\u5e8f\uff09\u3002\u7531\u4e8e BMP \u91cc\u53ea\u6709 65536 \u4e2a\u4ee3\u7801\u70b9\uff0c\u6240\u4ee5\u76f4\u63a5\u628a\u4ee3\u7801\u70b9\u8f6c\u6362\u6210 2 \u4e2a\u5b57\u8282\u5c31\u53ef\u4ee5\u4e86;\u5bf9\u4e8eBMP\u4ee5\u5916\u7684\u5e73\u9762\uff0c\u7f16\u7801\u89c4\u5219\u5982\u4e0b: \u5047\u8bbe\u8981\u7f16\u7801\u7684\u8865\u5145\u5e73\u9762\u5185\u7684\u4ee3\u7801\u70b9\u4e3a X\uff0c\u5177\u4f53\u7684\u7f16\u7801\u8fc7\u7a0b\u4e3a\uff1a X \u5fc5\u5b9a\u5728 0x010000-0x10FFFF \u4e4b\u95f4 \u5c06 X \u51cf\u53bb 0x010000\uff0c\u5f97\u5230\u7684\u6570\u5728 0x0-0xFFFFF \u4e4b\u95f4\uff0c\u6b63\u597d\u53ef\u4ee5\u7528 20 \u4e2a bit \u6765\u8868\u793a \u5c06\u9ad8\u4f4d\u7684 10 \u4e2a bit \u548c 0xD800 \u76f8\u52a0\uff0c\u5c06\u4f4e\u4f4d\u7684 10 \u4e2a\u6bd4\u7279\u548c 0xDC00 \u76f8\u52a0\uff0c\u5f97\u5230\u7684\u4e24\u4e2aWORD\u79f0\u4e3a\u4e00\u5bf9\u4ee3\u7406\u5bf9\uff0c \u957f\u5ea6\u56db\u4e2a\u5b57\u8282\u3002\u5982\u4e0b\u56fe\u53ef\u77e5\uff0c\u9ad8\u4f4dword\u7684\u8303\u56f4\u662f 0xD800~0XDBFF\uff0c\u4f4e\u4f4dword\u8303\u56f4\u662f 0xDC00~0xDFFF\uff0c \u56e0\u6b64\u4e3a\u4e86\u907f\u514d\u4e0e\u4ee3\u7801\u70b90x0000~0xFFFF\u7684\u5b57\u7b26\u51b2\u7a81\uff0c\u5c060xD800~0xDFFF\u8303\u56f4\u4fdd\u7559\u4e0b\u6765\uff0c\u4f5c\u4e3a\u4ee3\u7406\u533a\uff0c \u4e0d\u7528\u6765\u8868\u793aBMP\u4ee3\u7801\u5e73\u9762\u4e2d\u7684\u5b57\u7b26\u3002 UTF16\u80fd\u8868\u793a\u7684\u975eBMP\u5e73\u9762\u4e2d\u7684\u5b57\u7b26\u603b\u6570\u4e3a(0xDBFF-0XD800+1)*(0XDFFF-0XDC00+1)=1048576\uff0c \u80fd\u8868\u793a\u7684BMP\u5e73\u9762\u4e2d\u7684\u5b57\u7b26\u603b\u6570\u4e3a2^16-(0XDFFF-0XD800+1)=63488\u4e2a\u3002 UTF-16\u5b58\u5728\u5927\u7aef\u5bf9\u9f50\u548c\u5c0f\u7aef\u5bf9\u9f50\u4e24\u79cd\u7f16\u7801\u65b9\u5f0f\u3002 \u5b57\u7b26\u4e32 \u4e0d\u53ef\u53d8\u5b57\u7b26\u4e32\uff0c\u5373\u4e0d\u80fd\u4fee\u6539java\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u4e2a\u5b57\u7b26\uff0c\u4e0d\u80fd\u50cf\u5728C++\u4e2d\u4e00\u6837\uff0c\u76f4\u63a5\u4fee\u6539str[ i ]; String\u7c7b\u63d0\u4f9bequals\u65b9\u6cd5\uff0c\u5224\u65ad\u4e24\u4e2a\u5b57\u7b26\u4e32\u53d8\u91cf\\\u5e38\u91cf \u662f\u5426\u76f8\u7b49\uff1bequalsIgnoreCase\u65b9\u6cd5\u5219\u5ffd\u7565\u5927\u5c0f\u5199; \u4e0d\u7528\u4f7f\u7528 == \u6765\u5224\u65ad\u662f\u5426\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49\uff1b\u4f46\u53ef\u4ee5\u4f7f\u7528 == \u6765\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u662fnull, if(str == null), \u4e14\u5982\u679c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662fnull\uff0c\u5219\u4e0d\u80fd\u5728\u5176\u4e0a\u8c03\u7528\u4efb\u4f55\u65b9\u6cd5; \u4f7f\u7528str.charAt(i)\u53ef\u4ee5\u83b7\u53d6str\u7b2ci\u4e2a\u5b57\u7b26(\u57fa0)\uff1b\u4f46\u5982\u679cstr\u4e2d\u5b58\u5728\u5b57\u7b26\u9700\u8981\u4e24\u4e2a\u4ee3\u7801\u5355\u5143\u6765\u63cf\u8ff0(\u975eBMP\u5e73\u9762\u4e2d\u7684\u5b57\u7b26)\uff0c\u5219\u6b64\u79cd\u65b9\u6cd5\u7ed3\u679c\u901a\u5e38\u4e0d\u6b63\u786e\uff0c\u53ef\u4ee5\u91c7\u7528\u4e0b\u5217\u65b9\u6cd5: \u4f7f\u7528\u591a\u4e2a\u5c0f\u6bb5\u7684\u5b57\u7b26\u4e32\u53d8\u91cf\u6216\u8005\u5e38\u91cf\u6765\u6784\u5efa\u5b57\u7b26\u4e32\u65f6\uff0c\u4f7f\u7528StringBuilder\u6216StringBuffer\u6548\u7387\u66f4\u9ad8\uff0c\u540e\u8005\u5141\u8bb8\u591a\u7ebf\u7a0b\u65b9\u5f0f\u6267\u884c\u6dfb\u52a0\u6216\u8005\u5220\u9664\u5b57\u7b26\u7684\u64cd\u4f5c\uff0c\u5355\u7ebf\u7a0b\u60c5\u51b5\u4e0b\uff0c\u524d\u8005\u901f\u5ea6\u66f4\u5feb\uff1b\u4e24\u8005API\u76f8\u540c\uff0c\u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b: StringBuilder builder = new StringBuilder(); builder.append(\"x\"); builder.append(ch); // ch is a single character builder.appedn(str); String res = builder.toString(); \u8bfb\u53d6\u8f93\u5165 Scanner in = new Scanner(System.in); String name = in.nextLine(); //\u8bfb\u53d6\u4e00\u884c String first = in.next(); // \u8bfb\u53d6\u4e00\u4e2a\u5355\u8bcd int age = in.nextInt(); //\u8bfb\u53d6\u6574\u6570\uff0cnextDouble()\u8bfb\u53d6\u6d6e\u70b9\u6570 \u6587\u4ef6\u8f93\u5165\u4e0e\u8f93\u51fa \u63a7\u5236\u6d41\u7a0b \u5728Java\u4e2d\uff0c\u4e0d\u80fd\u5728\u5d4c\u5957\u7684\u4e24\u4e2a\u5757\u4e2d\u58f0\u660e\u540c\u540d\u7684\u53d8\u91cf\uff1b\u4f46\u5728C++\u4e2d\uff0c\u53ef\u4ee5\u5728\u5d4c\u5957\u7684\u5757\u4e2d\u91cd\u5b9a\u4e49\u4e00\u4e2a\u53d8\u91cf\uff1b\u5728\u5185\u5c42\u5b9a\u4e49\u7684\u53d8\u91cf\u4f1a\u8986\u76d6\u5728\u5916\u5c42\u5b9a\u4e49\u7684\u53d8\u91cf\u3002 java\u63d0\u4f9b\u4e86\u6807\u7b7e\uff0c\u53ef\u4ee5\u901a\u8fc7break\u8df3\u8f6c\u51fa\u5faa\u73af\uff0c\u76f4\u63a5\u8df3\u8f6c\u5230\u6807\u7b7e\u5904\u4ee3\u7801\u3002 l1: for(int i=1;i<10;i++){ System.out.println(i); if(i==5)break l1; } System.out.println(\"now\"); \u5927\u6570\u503c \u7531\u4e8ejava\u4e2d\u4e0d\u80fd\u91cd\u8f7d\u64cd\u4f5c\u7b26\uff0c\u6240\u4ee5\u5927\u6570\u503c\u7c7b\u4e2d\u7684\u52a0\u51cf\u4e58\u9664\uff0c\u4e0d\u80fd\u4f7f\u7528 + - * \\\uff0c\u800c\u662f\u4f7f\u7528add\u3001 substract\u3001multiply\u3001divide\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u6c42\u4f59\uff0c\u63d0\u4f9b\u4e86mod\u65b9\u6cd5(\u8981\u6c42\u53cc\u65b9\u662fBigInteger\u7c7b\u578b)\uff1b\u5bf9\u4e8e\u6bd4\u8f83\u4e24\u4e2a\u5927\u6570\u503c\uff0c\u63d0\u4f9b\u4e86compareTo\u65b9\u6cd5\uff0c\u76f8\u7b49\u8fd4\u56de0\uff0c\u5927\u4e8e\u8fd4\u56de\u6b63\u6570\uff0c\u5c0f\u4e8e\u8fd4\u56de\u8d1f\u6570\u3002 \u6570\u7ec4 \u7528\u6cd5: //\u58f0\u660e\u957f\u5ea6\u4e3a10\u7684\u6570\u7ec4\uff0c\u8bb0\u4f4f\u4e0eC++\u4e2d\u5f62\u5f0f\u533a\u522b\uff0cint a[10] \u6216\u8005 int *a = new int[10] int[] a=new int[10]; \u6574\u578b\u6570\u7ec4\uff0c\u6240\u6709\u5143\u7d20\u521d\u59cb\u5316\u4e3a0\uff1bboolean\u6570\u7ec4\u5143\u7d20\u521d\u59cb\u5316\u4e3afalse\uff1b\u5bf9\u8c61\u6570\u7ec4\u5143\u7d20\u521d\u59cb\u5316\u4e3anull\uff1b for each\u5faa\u73af: for(int x:a){xx}; \u4f7f\u7528\u533f\u540d\u6570\u7ec4\u53ef\u4ee5\u5728\u4e0d\u521b\u5efa\u65b0\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\uff0c\u91cd\u65b0\u521d\u59cb\u5316\u4e00\u4e2a\u6570\u7ec4: old = new int[] {1, 2, 3}; \u5728java\u4e2d\uff0c\u5141\u8bb8\u58f0\u660e\u6570\u7ec4\u7684\u957f\u5ea6\u4e3a0: int[] a=new int[0]; \u6570\u7ec4\u62f7\u8d1d: \u901a\u8fc7 = \u5c06\u4e00\u4e2a\u6570\u7ec4\u53d8\u91cf\u62f7\u8d1d\u7ed9\u53e6\u4e00\u4e2a\u6570\u7ec4\u53d8\u91cf\uff0c\u4e24\u4e2a\u53d8\u91cf\u5c06\u5f15\u7528\u540c\u4e00\u4e2a\u6570\u7ec4\uff1b \u901a\u8fc7Arrays\u7c7b\u7684copyOf\u65b9\u6cd5\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6570\u7ec4\u7684\u6240\u6709\u503c\u62f7\u8d1d\u5230\u4e00\u4e2a\u65b0\u7684\u6570\u7ec4\u4e2d\u3002 Arrays.copyOf(T[] a, int length); //\u62f7\u8d1d\u6570\u7ec4a\u4e2dlength\u4e2a\u5143\u7d20\uff0c\u65b0\u6570\u7ec4\u4e2d\u591a\u4f59\u5143\u7d20\u9ed8\u8ba4\u521d\u59cb\u5316 Arrays.copyOf(T[] a, int start, int end); //\u62f7\u8d1d[start, end)\u7684\u5143\u7d20 a = Arrays.copyOf(a, newLength); //\u5bf9\u6570\u7ec4\u8fdb\u884c\u6269\u5bb9 Arrays.fill(T[] a, T val); Arrays.equals(T[] a, T[] b); Arrays.toString(T[] a); //\u5c06\u6570\u7ec4\u8f6c\u5316\u4e3a\u53ef\u6253\u5370\u7684String\u7c7b\u578b Arrays.deepToString(T[][] a); //\u9488\u5bf9\u591a\u7ef4\u6570\u7ec4 java\u4e2d\u7684\u591a\u7ef4\u6570\u7ec4\u7c7b\u4f3cC++\u4e2dvector\uff0c\u4e5f\u662f\u6570\u7ec4\u7684\u6570\u7ec4\uff0c\u662f\u4e0d\u89c4\u5219\u7684\u6570\u7ec4\uff0c \u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u4e5f\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u957f\u5ea6\u4e0d\u5b9a","title":"\u57fa\u7840\u8bed\u6cd5"},{"location":"Java/0_base/#_2","text":"\u5bf9\u8c61\u4e0e\u5bf9\u8c61\u53d8\u91cf java\u4e2d\u7684\u5bf9\u8c61\u53d8\u91cf\u53ef\u4ee5\u7c7b\u6bd4C++\u4e2d\u7684\u5bf9\u8c61\u6307\u9488\uff0c\u8fd9\u4e5f\u89e3\u91ca\u4e86\u628a\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u53d8\u91cf\uff0c\u4e24\u4e2a\u53d8\u91cf\u5c06\u5f15\u7528\u540c\u4e00\u4e2a\u5bf9\u8c61\uff1bjava\u4e2d\u53d8\u91cf\u4e3anull\u5373C++\u4e2d\u7684nullptr\uff1b\u6240\u6709java\u4e2d\u7684\u5bf9\u8c61\u90fd\u5b58\u50a8\u5728\u5806\u4e2d\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u5305\u542b\u53e6\u4e00\u4e2a\u5bf9\u8c61\u53d8\u91cf\u65f6\uff0c\u8fd9\u4e2a\u53d8\u91cf\u4f9d\u7136\u5305\u542b\u7740\u6307\u5411\u53e6\u4e00\u4e2a\u5806\u5bf9\u8c61\u7684\u6307\u9488\u3002 \u4e0d\u8981\u7f16\u5199\u8fd4\u56de\u5f15\u7528\u53ef\u53d8\u5bf9\u8c61\u7684\u8bbf\u95ee\u5668\u65b9\u6cd5\uff0c\u8fd9\u6837\u5c31\u4f1a\u5728\u7c7b\u5916\u53ef\u80fd\u6539\u53d8\u8be5\u5bf9\u8c61\u7684\u72b6\u6001\uff1b\u5e94\u8be5\u8c03\u7528clone()\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u5b58\u653e\u5728\u53e6\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5bf9\u8c61\u526f\u672c\u3002 \u9759\u6001\u57df\uff0c\u4ee5static\u4fee\u9970\uff0c\u662f\u5c5e\u4e8e\u7c7b\u7684\uff0c\u800c\u975e\u67d0\u4e2a\u5b9e\u4f8b\uff0c\u6216\u8005\u8be5\u7c7b\u7684\u6240\u6709\u5b9e\u4f8b\u5171\u4eab\u8be5static\u53d8\u91cf\uff1b \u9759\u6001\u65b9\u6cd5\uff0c\u5176\u6ca1\u6709\u9690\u5f0f\u53c2\u6570this\u53c2\u6570(\u7c7b\u4f3cC++\u4e2dthis\u6307\u9488)\uff0c\u56e0\u6b64 static \u65b9\u6cd5\u4e2d\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u57df\uff1b\u4e00\u822c\u901a\u8fc7\u7c7b\u540d\u800c\u975e\u67d0\u4e2a\u5b9e\u4f8b\u6765\u8c03\u7528static method\u3002 \u65b9\u6cd5\u53c2\u6570 \u91c7\u7528call by value\u65b9\u5f0f\u4f20\u9012\u53c2\u6570\uff1b\u4f46\u662f\u8003\u8651\u53c2\u6570\u7c7b\u578b\u662f\u4e00\u4e2a\u5bf9\u8c61\u7c7b\u578b\uff0c\u4f20\u9012\u4e00\u4e2a\u5bf9\u8c61\u53d8\u91cf\uff0c\u7c7b\u4f3cC++\u4e2d\u4f20\u9012\u4e00\u4e2a\u6307\u5411\u5bf9\u8c61\u7684\u6307\u9488\u62f7\u8d1d\uff0c\u65b9\u6cd5\u5185\u90e8\u4fee\u6539\u5bf9\u8c61\u72b6\u6001\u4f1a\u5b9e\u9645\u4fee\u6539\u8be5\u5bf9\u8c61\uff1b\u4f46\u57fa\u7840\u7c7b\u578b\u4e0d\u662f\u5bf9\u8c61\uff0c\u56e0\u6b64\u5728\u65b9\u6cd5\u4e2d\u4fee\u6539\u4e0d\u4f1a\u5f71\u54cd\u5916\u90e8\u53d8\u91cf\u3002 \u901a\u8fc7this(...)\u53ef\u4ee5\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5 \u521d\u59cb\u5316\u5757\uff0c \u4ee5{}\u5305\u62ec\u5bf9\u8c61\u53d8\u91cf\u7684\u521d\u59cb\u5316\u8bed\u53e5\uff0c\u53ea\u8981\u6784\u9020\u7c7b\u7684\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5757\u5c31\u4f1a\u6267\u884c\uff1b /* \u8fd9\u4e2a\u7c7b\u6ca1\u6709main\u65b9\u6cd5\uff0c\u800c\u662f\u901a\u8fc7\u6267\u884c\u9759\u6001\u521d\u59cb\u5316\u5757\u6765\u6253\u5370\u8bed\u53e5 */ public class hello{ static{ System.out.println(\"hello world\"); System.exit(0); //\u5ffd\u7565\u6ca1\u6709\u5b9a\u4e49main\u65b9\u6cd5\u7684\u9519\u8bef } } \u9759\u6001\u5bfc\u5165 import static java.lang.System.* //\u5bfc\u5165System\u4e2d\u7684\u9759\u6001\u65b9\u6cd5\u548c\u9759\u6001\u57df \u5305\u4f5c\u7528\u57df \u5982\u679c\u6ca1\u6709\u6307\u5b9apublic\u6216private\uff0c\u5219\u8fd9\u4e2a\u90e8\u5206(\u7c7b\u3001\u65b9\u6cd5\u6216\u53d8\u91cf)\u53ef\u4ee5\u88ab\u540c\u4e00\u4e2a\u5305\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u8bbf\u95ee\u3002 java\u4e2d\u7684package\u4e0eimport\u7c7b\u4f3cC++\u4e2d\u7684namespace\u3001using\u6307\u793a\u3002 extends java\u4e2d\u6240\u6709\u7ee7\u627f\u90fd\u662f\u516c\u6709\u7ee7\u627f\uff1b java\u4e2dclass\u662f\u4e0d\u652f\u6301\u591a\u7ee7\u627f\u7684\uff0c\u4f46\u53ef\u4ee5\u5b9e\u73b0(implements)\u591a\u4e2a\u63a5\u53e3 java\u4e2dinterface\u662f\u652f\u6301\u591a\u7ee7\u627f\u7684\uff0c\u4e00\u4e2a\u63a5\u53e3\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u63a5\u53e3 \u7c7b\u65b9\u6cd5\u548c\u5b9e\u4f8b\u57df\u7684\u53ef\u89c1\u6027 package\u4ee3\u8868\u6ca1\u6709\u63d0\u4f9b\u663e\u793a\u7684\u8bbf\u95ee\u8bf4\u660e\u7b26\uff1b\u7eff\u8272\u4ee3\u8868\u53ef\u8bbf\u95ee\uff0c\u7ea2\u8272\u4ee3\u8868\u4e0d\u53ef\u8bbf\u95ee\uff1b java\u4e2d\u7684protected\u6982\u5ff5\u6bd4C++\u4e2d\u7684\u5b89\u5168\u6027\u5dee super \u901a\u8fc7super\u5173\u952e\u5b57\u6765\u8c03\u7528\u7236\u7c7b\u4e2d\u7684public\u65b9\u6cd5\uff1b \u5b50\u7c7b\u7684\u6784\u9020\u5668\u4e0d\u80fd\u8bbf\u95ee\u7236\u7c7b\u7684\u79c1\u6709\u57df\uff0c\u901a\u8fc7super\u6765\u5b9e\u73b0\u5bf9\u7236\u7c7b\u6784\u9020\u5668\u7684\u8c03\u7528\uff0c\u8fd9\u6761\u8bed\u53e5\u4e5f\u5fc5\u987b\u662f\u5b50\u7c7b\u6784\u9020\u5668\u7684\u7b2c\u4e00\u6761\u8bed\u53e5\u3002 \u5728java\u4e2d\uff0c\u4e0d\u9700\u8981\u901a\u8fc7\u865a\u51fd\u6570\u6765\u5b9e\u73b0\u591a\u6001\uff0c\u52a8\u6001\u7ed1\u5b9a\u662f\u9ed8\u8ba4\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u5bf9\u8c61\u53d8\u91cf\u662f\u591a\u6001\u7684\uff0c\u4e00\u4e2a\u7236\u7c7b\u5bf9\u8c61\u53d8\u91cf\u53ef\u5f15\u7528\u7236\u7c7b\u5bf9\u8c61\u6216\u8005\u5b50\u7c7b\u5bf9\u8c61\uff0c\u5373\u5728\u8c03\u7528\u65b9\u6cd5\u65f6\uff0c\u6839\u636e\u5bf9\u8c61\u53d8\u91cf\u6307\u5411\u7684\u5b9e\u9645\u7c7b\u578b\u6765\u9009\u62e9\u8c03\u7528\u54ea\u4e2a\u65b9\u6cd5 \uff1b \u5982\u679c\u5b50\u7c7b\u7684\u6784\u9020\u5668\u6ca1\u6709\u663e\u5f0f\u5730\u8c03\u7528\u8d85\u7c7b\u7684\u6784\u9020\u5668\uff0c \u5219\u5c06\u81ea\u52a8\u5730\u8c03\u7528\u8d85\u7c7b\u9ed8\u8ba4\uff08\u6ca1\u6709\u53c2\u6570 )\u7684\u6784\u9020\u5668\u3002 \u5982\u679c\u8d85\u7c7b\u6ca1\u6709\u4e0d\u5e26\u53c2\u6570\u7684\u6784\u9020\u5668\uff0c \u5e76\u4e14\u5728\u5b50\u7c7b\u7684\u6784\u9020\u5668\u4e2d\u53c8\u6ca1\u6709\u663e\u5f0f\u5730\u8c03\u7528\u8d85\u7c7b\u7684\u5176\u4ed6\u6784\u9020\u5668 \u5219 Java \u7f16\u8bd1\u5668\u5c06\u62a5\u544a\u9519\u8bef\u3002 \u65b9\u6cd5\u8c03\u7528\u8fc7\u7a0b \u65b9\u6cd5\u8986\u5199 \u65b9\u6cd5\u7684\u540d\u5b57\u548c\u53c2\u6570\u5217\u8868\u79f0\u4e3a\u65b9\u6cd5\u7684\u7b7e\u540d\uff1b\u5982\u679c\u5728\u5b50\u7c7b\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u4e0e\u8d85\u7c7b\u7b7e\u540d\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u5b50\u7c7b\u4e2d\u7684\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u8986\u76d6\u4e86\u8d85\u7c7b\u4e2d\u7684\u8fd9\u4e2a\u76f8\u540c\u7b7e\u540d\u7684\u65b9\u6cd5\u3002 \u4e0d\u8fc7\uff0c\u8fd4\u56de\u7c7b\u578b\u4e0d\u662f\u7b7e\u540d\u7684\u4e00\u90e8\u5206\uff0c\u56e0\u6b64 \u5728\u8986\u76d6\u65b9\u6cd5\u65f6\uff0c\u4e00\u5b9a\u8981\u4fdd\u8bc1\u8fd4\u56de\u7c7b\u578b\u7684\u517c\u5bb9\u6027\u3002\u5141\u8bb8\u5b50\u7c7b\u5c06\u8986\u76d6\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u5b9a\u4e49\u4e3a\u539f\u8fd4\u56de\u7c7b\u578b\u7684\u5b50\u7c7b\u578b \u3002 \u963b\u6b62\u7ee7\u627f: final\u7c7b\u548c\u65b9\u6cd5 \u4ee5final\u4fee\u9970\u7684\u7c7b\u4e0d\u80fd\u88ab\u7ee7\u627f\uff0c\u5176\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u81ea\u52a8\u6210\u4e3afinal\u65b9\u6cd5\uff0c\u5373\u4e0d\u80fd\u88ab\u5b50\u7c7b\u8986\u76d6\uff1bfinal\u7c7b\u4e2d\u7684\u57df\u5e76\u4e0d\u4f1a\u6210\u4e3afinal\u3002 \u5f3a\u5236\u7c7b\u578b\u8f6c\u6362 \u5c06\u4e00\u4e2a\u503c\u5b58\u5165\u53d8\u91cf\u65f6\uff0c \u7f16\u8bd1\u5668\u5c06\u68c0\u67e5\u662f\u5426\u5141\u8bb8\u8be5\u64cd\u4f5c\u3002\u5c06\u4e00\u4e2a\u5b50\u7c7b\u7684\u5f15\u7528\u8d4b\u7ed9\u4e00\u4e2a\u8d85\u7c7b\u53d8\u91cf\uff0c \u7f16\u8bd1\u5668\u662f\u5141\u8bb8\u7684\u3002 \u4f46\u5c06\u4e00\u4e2a\u8d85\u7c7b\u7684\u5f15\u7528(\u9759\u6001\u7c7b\u578b\u662f\u8d85\u7c7b\uff0c\u4f46\u52a8\u6001\u7c7b\u578b\u662f\u5b50\u7c7b)\u8d4b\u7ed9\u4e00\u4e2a\u5b50\u7c7b\u53d8\u91cf\uff0c \u5fc5\u987b\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c \u8fd9\u6837\u624d\u80fd\u591f\u901a\u8fc7\u8fd0\u884c\u65f6\u7684\u68c0\u67fb\uff1b \u4f46\u662f\u5728\u7ee7\u627f\u94fe\u4e0a\u8fdb\u884c\u5411\u4e0b\u7684\u6570\u636e\u8f6c\u6362\uff0c\u4f8b\u5982\u5c06\u4e00\u4e2a\u5f15\u7528\u8d85\u7c7b\u5bf9\u8c61\u7684\u53d8\u91cf\u8d4b\u7ed9\u4e00\u4e2a\u5b50\u7c7b\u53d8\u91cf\uff0c\u5373\u65f6\u6709\u7c7b\u578b\u8f6c\u6362\uff0c\u4f9d\u65e7\u4e0d\u80fd\u6210\u529f\uff0c\u800c\u4f1a\u629b\u51fa\u5f02\u5e38\uff1b \u6240\u4ee5\u9700\u8981\u901a\u8fc7 instanceof, \u5148\u5224\u65ad\u80fd\u5426\u6210\u529f\u8f6c\u6362\u3002 abstract abstract\u4fee\u9970\u7684\u7c7b\u6216\u65b9\u6cd5\u79f0\u4e3a\u62bd\u8c61\u7c7b\u6216\u62bd\u8c61\u65b9\u6cd5\uff1b \u7c7b\u5373\u4f7f\u4e0d\u5305\u542b\u62bd\u8c61\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b\uff1b \u62bd\u8c61\u7c7b\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\uff0c\u4f46\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u62bd\u8c61\u7c7b\u5bf9\u8c61\u53d8\u91cf\uff0c\u5176\u53ea\u80fd\u5f15\u7528\u975e\u62bd\u8c61\u5b50\u7c7b\u5bf9\u8c61\u3002 \u62bd\u8c61\u7c7b\u5bf9\u8c61\u53d8\u91cf\u5728\u8c03\u7528\u65b9\u6cd5\u65f6\u8c03\u7528\u7684\u4e00\u5b9a\u662f\u5b50\u7c7b\u4e2d\u5b9e\u73b0\u4e86\u7684\u62bd\u8c61\u65b9\u6cd5 \u3002 \u4e00\u4e2a\u7c7b\u5982\u679c\u5305\u542b\u62bd\u8c61\u65b9\u6cd5\uff0c\u5fc5\u987b\u88ab\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b\uff1b \u4efb\u4f55\u5b50\u7c7b\u5fc5\u987b\u91cd\u5199\u62bd\u8c61\u7236\u7c7b\u7684\u5168\u90e8\u62bd\u8c61\u65b9\u6cd5\uff0c\u5426\u5219\u5c31\u5c06\u5b50\u7c7b\u4e5f\u58f0\u660e\u4e3a\u62bd\u8c61\u7c7b\u3002\u5982\u679c\u62bd\u8c61\u7236\u7c7b\u4e2d\u6ca1\u6709\u62bd\u8c61\u65b9\u6cd5\uff0c\u5219\u4e0e\u666e\u901a\u7236\u7c7b\u6ca1\u6709\u533a\u522b\u3002\uff08\u62bd\u8c61\u7236\u7c7b\u4e0d\u80fd\u88ab\u5b9e\u4f8b\u5316\uff09\u3002 equals\u65b9\u6cd5 \u5bf9\u8c61\u5305\u88c5\u5668\u4e0e\u81ea\u52a8\u88c5\u7bb1 \u57fa\u672c\u7c7b\u578b\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684\u7c7b\uff0c\u79f0\u4e3a\u5305\u88c5\u5668\uff1b Integer\u3001Long\u3001Float\u3001Double\u3001Short\u3001Byte\u3001Character \u3001Void \u548c Boolean (\u524d 6 \u4e2a\u7c7b\u6d3e\u751f\u4e8e\u516c\u5171\u7684\u8d85\u7c7b Number)\u3002 \u5bf9\u8c61\u5305\u88c5\u5668\u7c7b\u662f\u4e0d\u53ef\u53d8\u7684\uff0c \u5373\u4e00\u65e6\u6784\u9020\u4e86\u5305\u88c5\u5668\uff0c\u5c31\u4e0d\u5141\u8bb8\u66f4\u6539\u5305\u88c5\u5728\u5176\u4e2d\u7684\u503c \u3002\u540c\u65f6\uff0c \u5bf9\u8c61\u5305\u88c5\u5668\u7c7b\u8fd8\u662f final , \u56e0\u6b64\u4e0d\u80fd\u5b9a\u4e49\u5b83\u4eec\u7684\u5b50\u7c7b\u3002 \u6cdb\u578b\u7c7b\u4e2d\u7c7b\u578b\u53c2\u6570\u4e0d\u80fd\u662f\u57fa\u672c\u7c7b\u578b\uff0c\u56e0\u6b64\u53ef\u4ee5\u63d0\u4f9b\u5305\u88c5\u5668\u7c7b\u578b\uff1b \u81ea\u52a8\u88c5\u7bb1: \u5bb9\u5668\u6dfb\u52a0\u57fa\u672c\u7c7b\u578b\u5143\u7d20\u65f6\uff0c\u4f1a\u81ea\u52a8\u5c06\u57fa\u672c\u7c7b\u578b\u8f6c\u6362\u4e3a\u5305\u88c5\u5668\u7c7b\u578b\uff1b \u81ea\u52a8\u62c6\u7bb1: \u5c06\u4e00\u4e2a\u5305\u88c5\u5668\u5bf9\u8c61\u8d4b\u7ed9\u4e00\u4e2a\u57fa\u672c\u7c7b\u578b\u5bf9\u8c61\u53d8\u91cf\u65f6\uff0c\u4f1a\u81ea\u52a8\u6267\u884c\u7c7b\u578b\u8f6c\u6362\u3002 \u88c5\u7bb1\u548c\u62c6\u7bb1\u662f\u7f16\u8bd1\u5668\u8ba4\u53ef\u7684\uff0c\u800c\u4e0d\u662f\u865a\u62df\u673a\u3002\u7f16\u8bd1\u5668\u5728\u751f\u6210\u7c7b\u7684\u5b57\u8282\u7801\u65f6\uff0c \u63d2\u4eba\u5fc5\u8981\u7684\u65b9\u6cd5\u8c03\u7528\u3002\u865a\u62df\u673a\u53ea\u662f\u6267\u884c\u8fd9\u4e9b\u5b57\u8282\u7801\u3002 \u53ef\u53d8\u53c2\u6570 /* \u8fd9\u91cc\u7684 ... \u4ee3\u8868\u53ef\u4ee5\u63a5\u53d7\u4efb\u610f\u6570\u91cf\u7684\u53c2\u6570\uff0c\u4e0eC++\u7c7b\u4f3c\u3002\u5728java\u4e2d\uff0c\u5176\u542b\u4e49\u7b49\u540c\u4e8e\u6570\u7ec4\uff0c \u5373 Object...\u7b49\u540c\u4e8eObject[]\uff0c\u56e0\u6b64\u66f4\u7c7b\u4f3cC++\u4e2d\u7684initialize_list\uff0c\u8981\u6c42\u53c2\u6570\u7c7b\u578b\u76f8\u540c */ public PrintStream printf(String fmt, Object... args){xxx}","title":"\u5bf9\u8c61\u4e0e\u7c7b"},{"location":"Java/0_base/#_3","text":"\u5728\u8fd0\u884c\u65f6\u5206\u6790\u7c7b\u7684\u80fd\u529b\uff1b \u5728\u8fd0\u884c\u65f6\u67e5\u770b\u5bf9\u8c61\uff0c \u4f8b\u5982\uff0c \u7f16\u5199\u4e00\u4e2a toString \u65b9\u6cd5\u4f9b\u6240\u6709\u7c7b\u4f7f\u7528\uff1b \u5b9e\u73b0\u901a\u7528\u7684\u6570\u7ec4\u64cd\u4f5c\u4ee3\u7801\uff1b \u5229\u7528 Method \u5bf9\u8c61\uff0c \u8fd9\u4e2a\u5bf9\u8c61\u5f88\u50cfC++\u4e2d\u7684\u51fd\u6570\u6307\u9488\u3002 Class\u7c7b \u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\uff0cJava \u8fd0\u884c\u65f6\u7cfb\u7edf\u59cb\u7ec8\u4e3a\u6240\u6709\u7684\u5bf9\u8c61\u7ef4\u62a4\u4e00\u4e2a\u88ab\u79f0\u4e3a\u8fd0\u884c\u65f6\u7684\u7c7b\u578b\u6807\u8bc6\u3002 \u8fd9\u4e2a\u4fe1\u606f\u8ddf\u8e2a\u7740\u6bcf\u4e2a\u5bf9\u8c61\u6240\u5c5e\u7684\u7c7b\u3002 \u865a\u62df\u673a\u5229\u7528\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\u9009\u62e9\u76f8\u5e94\u7684\u65b9\u6cd5\u6267\u884c\u3002 \u7136\u800c\uff0c \u53ef\u4ee5\u901a\u8fc7\u4e13\u95e8\u7684 Java \u7c7b\u8bbf\u95ee\u8fd9\u4e9b\u4fe1\u606f\u3002\u4fdd\u5b58\u8fd9\u4e9b\u4fe1\u606f\u7684\u7c7b\u88ab\u79f0\u4e3a Class, \u7c7b\u4f3cC++\u4e2d\u7684type_info\u7c7b\uff1b // getClass \u65b9\u6cd5\u4e0e C++ \u4e2d\u7684 typeid \u8fd0\u7b97\u7b26\u7b49\u4ef7\uff1b\u4f46\u662ftype_info \u53ea\u80fd\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u663e\u793a\u4e00\u4e2a\u7c7b\u578b\u7684\u540d\u5b57\uff0c // \u800c\u4e0d\u80fd\u521b\u5efa\u90a3\u4e2a\u7c7b\u578b\u7684\u5bf9\u8c61 Class c1 = e.getClass(); // java.lang.Ciass 1.0 static Class forName(String className) // \u8fd4\u56de\u63cf\u8ff0\u7c7b\u540d\u4e3a className \u7684 Class \u5bf9\u8c61\u3002 Object newlnstance() // \u8fd4\u56de\u8fd9\u4e2a\u7c7b\u7684\u4e00\u4e2a\u65b0\u5b9e\u4f8b\u3002 // java.lang.reflect.Constructor 1.1 Object newlnstance(Object[] args) // \u6784\u9020\u4e00\u4e2a\u8fd9\u4e2a\u6784\u9020\u5668\u6240\u5c5e\u7c7b\u7684\u65b0\u5b9e\u4f8b\u3002\u53c2\u6570\uff1aargs \u8fd9\u662f\u63d0\u4f9b\u7ed9\u6784\u9020\u5668\u7684\u53c2\u6570\u3002 \u5229\u7528\u53cd\u5c04\u5206\u6790\u7c7b\u7684\u80fd\u529b import java.util.*; import java.lang.reflect.*; /** * This program uses reflection to print all features of a class. * \u5728 java.lang.reflect \u5305\u4e2d\u6709\u4e09\u4e2a\u7c7b Field\u3001 Method \u548c Constructor \u5206\u522b\u7528\u4e8e\u63cf\u8ff0\u7c7b\u7684\u57df\u3001\u65b9 \u6cd5\u548c\u6784\u9020\u5668\u3002 \u8fd9\u4e09\u4e2a\u7c7b\u90fd\u6709 getName \u7684\u65b9\u6cd5\uff0c\u7528\u6765\u8fd4\u56de\u9879\u76ee\u7684\u540d\u79f0\u3002Field \u7c7b\u6709 getType \u65b9\u6cd5\uff0c \u7528\u6765\u8fd4\u56de\u63cf\u8ff0\u57df\u6240\u5c5e\u7c7b\u578b\u7684 Class \u5bf9\u8c61\u3002 Method \u548c Constructor \u7c7b\u6709\u80fd\u591f\u62a5\u544a\u53c2\u6570\u7c7b\u578b\u7684\u65b9\u6cd5\uff0cMethod \u7c7b\u8fd8\u6709\u4e00\u4e2a\u53ef\u4ee5\u62a5\u544a\u8fd4\u56de\u7c7b\u578b\u7684\u65b9\u6cd5\u4ee5\u53ca\u4e00\u4e2a\u53eb \u505a getModifiers \u7684\u65b9\u6cd5\uff0c\u5b83\u5c06\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\u503c\uff0c\u7528\u4e0d\u540c\u7684\u4f4d\u5f00\u5173\u63cf\u8ff0 public \u548c static \u8fd9\u6837 \u7684\u4fee\u9970\u7b26\u4f7f\u7528\u72b6\u51b5\uff0c\u5229\u7528 Modifier.toString \u65b9\u6cd5\u5c06\u4fee\u9970\u7b26\u6253\u5370\u51fa\u6765\u3002 Class\u7c7b\u4e2d\u7684 getFields\u3001 getMethods \u548c getConstructors \u65b9\u6cd5\u5c06\u5206\u522b\u8fd4\u56de\u7c7b\u63d0\u4f9b\u7684 public\u57df\u3001\u65b9\u6cd5\u548c\u6784\u9020\u5668\u6570\u7ec4\uff0c\u5176\u4e2d\u5305\u62ec\u8d85\u7c7b\u7684\u516c\u6709\u6210\u5458\u3002 Class \u7c7b\u7684 getDeclareFields\u3001getDeclareMethods \u548c getDeclaredConstructors \u65b9\u6cd5\u5c06\u5206\u522b\u8fd4\u56de\u7c7b\u4e2d\u58f0\u660e\u7684\u5168\u90e8\u57df\u3001 \u65b9\u6cd5\u548c\u6784\u9020\u5668\uff0c\u5176\u4e2d\u5305\u62ec\u79c1\u6709\u548c\u53d7\u4fdd\u62a4\u6210\u5458\uff0c\u4f46\u4e0d\u5305\u62ec\u8d85\u7c7b\u7684\u6210\u5458\u3002 */ public class ReflectionTest { public static void main(String[] args) { // read class name from command line args or user input String name; if (args.length > 0) name = args[0]; else { Scanner in = new Scanner(System.in); System.out.println(\"Enter class name (e.g. java.util.Date): \"); name = in.next(); } try { // print class name and superclass name (if != Object) Class cl = Class.forName(name); Class supercl = cl.getSuperclass(); String modifiers = Modifier.toString(cl.getModifiers()); if (modifiers.length() > 0) System.out.print(modifiers + \" \"); System.out.print(\"class \" + name); if (supercl != null && supercl != Object.class) System.out.print(\" extends \" + supercl.getName()); System.out.println(\"\\n{\\nConstructor\"); printConstructors(cl); System.out.println(\"Methods\"); printMethods(cl); System.out.println(\"Fields\"); printFields(cl); System.out.println(\"}\"); } catch (ClassNotFoundException e) { e.printStackTrace(); } System.exit(0); } /** * Prints all constructors of a class * * @param cl a class */ private static void printConstructors(Class cl) { Constructor[] constructors = cl.getDeclaredConstructors(); for (Constructor c : constructors) { System.out.print(\" \"); String name = c.getName(); String modifiers = Modifier.toString(c.getModifiers()); if (modifiers.length() > 0) System.out.print(modifiers + \" \"); System.out.print(name + \"(\"); // print parameter types Class[] paramTypes = c.getParameterTypes(); for (int j = 0; j < paramTypes.length; j++) { if (j > 0) System.out.print(\", \"); System.out.print(paramTypes[j].getName()); } System.out.println(\");\"); } } /** * Prints all methods of a class * * @param cl a class */ private static void printMethods(Class cl) { Method[] methods = cl.getDeclaredMethods(); for (Method m : methods) { System.out.print(\" \"); Class retType = m.getReturnType(); String name = m.getName(); // print modifiers, return type and method name String modifiers = Modifier.toString(m.getModifiers()); if (modifiers.length() > 0) System.out.print(modifiers + \" \"); System.out.print(retType.getName() + \" \" + name + \"(\"); // print parameter types Class[] paramTypes = m.getParameterTypes(); for (int j = 0; j < paramTypes.length; j++) { if (j > 0) System.out.print(\", \"); System.out.print(paramTypes[j].getName()); } System.out.println(\");\"); } } /** * Prints all fields of a class * * @param cl a class */ private static void printFields(Class cl) { Field[] fields = cl.getDeclaredFields(); for (Field f : fields) { Class type = f.getType(); String name = f.getName(); System.out.print(\" \"); String modifiers = Modifier.toString(f.getModifiers()); if (modifiers.length() > 0) System.out.print(modifiers + \" \"); System.out.println(type.getName() + \" \" + name + \";\"); } } } \u4f7f\u7528\u53cd\u5c04\u7f16\u5199\u6cdb\u578b\u6570\u7ec4\u4ee3\u7801 public static Object goodCopyOf(Object a, int newLength) { Class cl = a.getClass(); if (!cl.isArray()) return null; Class componentType = cl.getComponentType(); int length = Array.getLength(a); Object newArray = Array.newInstance(componentType, newLength); System.arraycopy(a, 0, newArray, 0, Math.min(length, newLength)); return newArray; }","title":"\u53cd\u5c04"},{"location":"Java/0_base/#lambda","text":"\u63a5\u53e3\u5e76\u975e\u662f\u7c7b\uff0c\u800c\u662f\u5bf9\u7c7b\u7684\u4e00\u7ec4\u9700\u6c42\u63cf\u8ff0\uff0c\u91c7\u7528\u5173\u952e\u5b57interface\uff0c\u800c\u975eclass\u3002 \u63a5\u53e3\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u81ea\u52a8\u5730\u5c5e\u4e8e public\u3002 \u56e0\u6b64\uff0c\u5728\u63a5\u53e3\u4e2d\u58f0\u660e\u65b9\u6cd5\u65f6\uff0c\u4e0d\u5fc5\u63d0\u4f9b\u5173\u952e\u5b57public\uff1b \u4f46\u662f\u5b9e\u73b0(implements)\u63a5\u53e3\u7684\u7c7b\u5fc5\u987b\u4e3a\u8be5\u65b9\u6cd5\u58f0\u660e\u8bbf\u95ee\u4fee\u9970\u7b26\uff0c\u5426\u5219\u9ed8\u8ba4\u5c31\u662f\u5305\u53ef\u89c1\u3002 \u63a5\u53e3\u4e0d\u80fd\u542b\u5b9e\u4f8b\u57df\uff0c\u4f46\u53ef\u4ee5\u5305\u542b\u5e38\u91cf\uff0c\u5e76\u4e14\u5e38\u91cf\u7c7b\u578b\u81ea\u52a8\u8bbe\u4e3apublic static final\uff1b\u4eceJava SE8\u8d77\uff0c\u5141\u8bb8\u5728\u63a5\u53e3\u4e2d\u5b9e\u73b0\u65b9\u6cd5\uff0c\u5e76\u4e14\u5141\u8bb8\u589e\u52a0\u9759\u6001\u65b9\u6cd5\uff1b \u63a5\u53e3\u4e0d\u662f\u7c7b\uff0c\u5c24\u5176\u4e0d\u80fd\u4f7f\u7528 new \u8fd0\u7b97\u7b26\u5b9e\u4f8b\u5316\u4e00\u4e2a\u63a5\u53e3\uff0c\u5374\u80fd\u58f0\u660e\u63a5\u53e3\u7684\u53d8\u91cf\uff0c\u63a5\u53e3\u53d8\u91cf\u5fc5\u987b\u5f15\u7528\u5b9e\u73b0\u4e86\u63a5\u53e3\u7684\u7c7b\u5bf9\u8c61\uff1b \u53ef\u4ee5\u4f7f\u7528instance \u68c0\u67e5\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u5b9e\u73b0\u4e86\u67d0\u4e2a\u7279\u5b9a\u7684\u63a5\u53e3; \u4e0e\u53ef\u4ee5\u5efa\u7acb\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb\u4e00\u6837\uff0c\u63a5\u53e3\u4e5f\u53ef\u4ee5\u88ab\u6269\u5c55(extends)\uff0c\u4e14\u4e00\u4e2a\u63a5\u53e3\u53ef\u4ee5\u7ee7\u627f\u591a\u4e2a\u63a5\u53e3\u3002 \u4e00\u4e2a\u7c7b\u53ea\u53ef\u4ee5\u6709\u4e00\u4e2a\u7236\u7c7b(\u901a\u8fc7extends\u5173\u952e\u5b57\u7ee7\u627f)\uff0c \u4f46\u53ef\u4ee5\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\uff0c\u4ee5\u9017\u53f7\u5206\u9694 \uff0c class employee implements Comparable, Cloneable{..} \u901a\u8fc7\u5b9e\u73b0\u591a\u4e2a\u63a5\u53e3\uff0cjava\u6765\u8fd1\u4f3cC++\u4e2d\u7684\u591a\u91cd\u7ee7\u627f\u3002 \u53ef\u4ee5\u4e3a\u63a5\u53e3\u65b9\u6cd5\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u5b9e\u73b0\u3002 \u5fc5\u987b\u7528 default \u4fee\u9970\u7b26\u6807\u8bb0\u8fd9\u6837\u4e00\u4e2a\u65b9\u6cd5(\u653e\u5728\u8fd4\u56de\u503c\u7c7b\u578b\u4e4b\u524d)\uff1b \u4e3a\u63a5\u53e3\u589e\u52a0\u4e00\u4e2a\u975e\u9ed8\u8ba4\u65b9\u6cd5\u4e0d\u80fd\u4fdd\u8bc1\u6e90\u4ee3\u7801\u517c\u5bb9\uff1b\u5373\u539f\u5148\u7684\u63a5\u53e3\u4e2d\u589e\u6dfb\u4e86\u65b0\u7684\u975e\u9ed8\u8ba4\u65b9\u6cd5\uff0c\u800c\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u7684\u7c7b\u6ca1\u6709\u5b9e\u73b0\u8be5\u65b9\u6cd5\uff0c\u5c06\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\u3002 \u9ed8\u8ba4\u65b9\u6cd5\u51b2\u7a81: \u4e0d\u540c\u63a5\u53e3\u4e2d\u51fa\u73b0\u4e86\u91cd\u540d\u4e14\u53c2\u6570\u76f8\u540c\u7684\u65b9\u6cd5\uff0c\u4e14\u81f3\u5c11\u4e00\u4e2a\u63a5\u53e3\u63d0\u4f9b\u4e86\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u6216\u8005\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u548c\u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5\u91cd\u540d\uff0c \u89e3\u51b3\u89c4\u5219\u662f\uff1a \u7236\u7c7b\u4f18\u5148\uff0c\u5ffd\u7565\u63a5\u53e3\u4e2d\u7684\u9ed8\u8ba4\u65b9\u6cd5\uff1b\u4e0d\u540c\u63a5\u53e3\u4e2d\u7684\u51b2\u7a81\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u5668\u62a5\u9519\uff0c\u4e0d\u8fc7\u5982\u679c\u6240\u6709\u63a5\u53e3\u4e2d\u8fd9\u4e2a\u65b9\u6cd5\u90fd\u6ca1\u6709\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u5219\u4e0d\u4f1a\u5f15\u8d77\u51b2\u7a81\uff1b \u5b9e\u73b0\u7c7b\u6709\u6709\u4e24\u4e2a\u9009\u62e9\uff1a\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u6216\u8005\u5e72\u8106\u4e0d\u5b9e\u73b0\u3002\u540e\u8005\u8bf4\u660e\u8fd9\u4e2a\u7c7b\u672c\u8eab\u5c31\u662f\u62bd\u8c61\u7684\u3002 Comparartor\u63a5\u53e3\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2acompare\u65b9\u6cd5\uff1b\u5176\u4e0eComparable\u63a5\u53e3(\u5176\u5305\u542bcompareTo\u65b9\u6cd5)\u7684\u533a\u522b\uff0c java\u7c7b\u5b9e\u73b0Comparable\u63a5\u53e3\uff0c\u597d\u6bd4C++\u4e2d\u7684\u7c7b\u8fdb\u884c\u4e86\u6bd4\u8f83\u7b26\u91cd\u8f7d\uff1b\u800c\u5728\u5bf9\u5bb9\u5668\u4e2d\u5143\u7d20\u8fdb\u884c\u6392\u5e8f\u65f6\uff0c\u53ef\u80fd\u4e0d\u9700\u8981\u6309\u7167\u9ed8\u8ba4\u6bd4\u8f83\u65b9\u5f0f\uff0c \u800c\u662f\u63d0\u4f9b\u4e00\u4e2a\u6bd4\u8f83\u5668\u5bf9\u8c61\uff0c\u901a\u8fc7\u6bd4\u8f83\u5668\u4e2d\u7684compare\u65b9\u6cd5\u6765\u6bd4\u8f83\u4e24\u4e2a\u5143\u7d20\uff1b\u6bd4\u8f83\u5668\u5373\u662f\u5b9e\u73b0\u4e86Comparator\u63a5\u53e3\u7684\u7c7b\uff0c\u597d\u6bd4\u5728C++\u4e2d\u63d0\u4f9b\u4e00\u4e2a lambda\u8868\u8fbe\u5f0f\u6216\u8005\u4e00\u4e2afunction class\u5bf9\u8c61\u5982less< int>(). clone\u65b9\u6cd5\uff0c\u5176\u662fObject\u7684protected\u65b9\u6cd5\uff0c\u56e0\u6b64\u5b50\u7c7b\u7684\u5b9e\u4f8b\u4e0d\u80fd\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u4e14\u8be5\u65b9\u6cd5\u662f\u6d45\u62f7\u8d1d\uff1b \u56e0\u6b64\u5b50\u7c7b\u9700\u8981\u81ea\u5b9a\u4e49\u4e00\u4e2apublic\u4fee\u9970\u7684clone\u65b9\u6cd5\uff0c\u6765\u5b9e\u73b0\u6df1\u62f7\u8d1d\u3002 Cloneable\u63a5\u53e3\u4e2d\u4e0d\u63d0\u4f9bclone\u65b9\u6cd5\uff0c\u53ea\u662f\u4f5c\u4e3a\u6807\u8bb0\u63a5\u53e3\uff1b\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u8bf7\u6c42\u514b\u9686\uff0c \u4f46\u6ca1\u6709\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c \u5c31 \u4f1a\u751f\u6210\u4e00\u4e2a\u53d7\u67fb\u5f02\u5e38\u3002 \u6240\u6709\u6570\u7ec4\u7c7b\u578b\u90fd\u6709\u4e00\u4e2apublic\u7684clone\u65b9\u6cd5\uff0c\u53ef\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6570\u7ec4\u7684\u526f\u672c\u3002 lambda\u8868\u8fbe\u5f0f \u8bed\u6cd5: (\u53c2\u6570\u5217\u8868) -> \u8868\u8fbe\u5f0f \u5982\u679c\u53ef\u4ee5\u63a8\u5bfc\u51fa\u4e00\u4e2a lambda \u8868\u8fbe\u5f0f\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u5219\u53ef\u4ee5\u5ffd\u7565\u5176\u7c7b\u578b\u3002 \u5982\u679c\u65b9\u6cd5\u53ea\u6709\u4e00 \u53c2\u6570\uff0c \u800c\u4e14\u8fd9\u4e2a\u53c2\u6570\u7684\u7c7b\u578b\u53ef\u4ee5\u63a8\u5bfc\u5f97\u51fa\uff0c\u90a3\u4e48\u751a\u81f3\u8fd8\u53ef\u4ee5\u7701\u7565\u5c0f\u62ec\u53f7\u3002 \u65e0\u9700\u6307\u5b9a lambda \u8868\u8fbe\u5f0f\u7684\u8fd4\u56de\u7c7b\u578b\u3002lambda \u8868\u8fbe\u5f0f\u7684\u8fd4\u56de\u7c7b\u578b\u603b\u662f\u4f1a\u7531\u4e0a\u4e0b\u6587\u63a8\u5bfc\u5f97\u51fa\u3002 \u5982\u679c\u4e00\u4e2a lambda \u8868\u8fbe\u5f0f\u53ea\u5728\u67d0\u4e9b\u5206\u652f\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c \u800c\u5728\u53e6\u5916\u4e00\u4e9b\u5206\u652f\u4e0d\u8fd4\u56de\u503c\uff0c\u8fd9\u662f\u4e0d\u5408\u6cd5\u7684\u3002 \u5bf9\u4e8e\u53ea\u6709\u4e00\u4e2a\u62bd\u8c61\u65b9\u6cd5\u7684\u63a5\u53e3\uff0c \u9700\u8981\u8fd9\u79cd\u63a5\u53e3\u7684\u5bf9\u8c61\u65f6\uff0c \u5c31\u53ef\u4ee5\u63d0\u4f9b\u4e00\u4e2a(\u533f\u540d)lambda \u8868\u8fbe\u5f0f\u3002 \u8fd9\u79cd\u63a5\u53e3\u79f0\u4e3a\u51fd\u6570\u5f0f\u63a5\u53e3 \uff08 functional interface )\u3002\u8fd9\u6837\u8c03\u7528\u8be5\u63a5\u53e3\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\u65f6\uff0c\u5b9e\u9645\u4e0a\u901a\u8fc7lambda\u8868\u8fbe\u5f0f\u6765\u6267\u884c\u3002 // \u5b9e\u9645\u4e2d\uff0c\u6839\u636e\u53c2\u6570\\\u8fd4\u56de\u503c\u7c7b\u578b\uff0c\u53ef\u4ee5\u9009\u62e9\u4e0d\u540c\u7684\u9884\u5148\u5b9a\u4e49\u7684\u63a5\u53e3 public static void main(String[] args){ int n=10; repeat(n, System.out::println); repeat2(3, ()-> System.out.println(\"test\")); } private static void repeat(int n, Consumer<Integer> consumer){ for(int i=0;i<n;i++)consumer.accept(i); } private static void repeat2(int n, Runnable runnable){ for(int i=0;i<n;i++)runnable.run(); } \u65b9\u6cd5\u5f15\u7528 \u5411\u51fd\u6570\u63a5\u53e3\u63d0\u4f9b\u4e00\u4e2a\u73b0\u6210\u7684\u65b9\u6cd5\uff0c object::instanceMethod\\Class::staticMethod\\Class::instanceMethod; \u65b9\u6cd5\u5f15\u7528\u7b49\u4ef7\u4e8e\u63d0\u4f9b\u65b9\u6cd5\u53c2\u6570\u7684 lambda \u8868\u8fbe\u5f0f, System.out::println \u7b49\u4ef7\u4e8e x -> System.out.println(x)\u3002 Math::pow \u7b49\u4ef7\u4e8e\uff08x\uff0cy) -> Math.pow(x, y)\u3002 \u5bf9\u4e8e\u7b2c 3 \u79cd\u60c5\u51b5\uff0c \u7b2c 1 \u4e2a\u53c2\u6570\u4f1a\u6210\u4e3a\u65b9\u6cd5\u7684\u76ee\u6807\u3002\u4f8b\u5982\uff0cString::compareToIgnoreCase \u7b49\u540c\u4e8e (x, y) -> x.compareToIgnoreCase(y) \u6784\u9020\u5668\u5f15\u7528\u7c7b\u4f3c\u65b9\u6cd5\u5f15\u7528\uff0c\u53ea\u4e0d\u8fc7\u65b9\u6cd5\u540d\u4e3a new lambda\u53d8\u91cf\u4f5c\u7528\u57df lambda\u8868\u8fbe\u5f0f\u5305\u542b3\u4e2a\u90e8\u5206\uff1a\u4e00\u4e2a\u4ee3\u7801\u5757\uff1b\u53c2\u6570; \u81ea\u7531\u53d8\u91cf\u7684\u503c\uff0c\u8fd9\u662f\u6307\u975e\u53c2\u6570\u800c\u4e14\u4e0d\u5728\u4ee3\u7801\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u3002(\u7c7b\u4f3cC++\u4e2d\u7684\u503c\u6355\u83b7) \u5728Java\u4e2d\uff0c\u8981\u786e\u4fdd\u6240\u6355\u83b7\u7684\u503c\u662f\u660e\u786e\u5b9a\u4e49\u7684\uff0c\u5728lambda \u8868\u8fbe\u5f0f\u4e2d\uff0c\u53ea\u80fd\u5f15\u7528\u503c\u4e0d\u4f1a\u6539\u53d8\u7684\u53d8\u91cf\uff0c\u6355\u83b7\u7684\u53d8\u91cf\u5fc5\u987b\u5b9e\u9645\u4e0a\u662f\u6700\u7ec8\u53d8\u91cf\uff0c \u53d8\u91cf\u521d\u59cb\u5316\u4e4b\u540e\u5c31\u4e0d\u4f1a\u518d\u4e3a\u5b83\u8d4b\u65b0\u503c; \u56e0\u4e3a\u5982\u679c\u5728 lambda \u8868\u8fbe\u5f0f\u4e2d\u6539\u53d8\u53d8\u91cf\uff0c \u5e76\u53d1\u6267\u884c\u591a\u4e2a\u52a8\u4f5c\u65f6\u5c31\u4f1a\u4e0d\u5b89\u5168\u3002 lambda \u8868\u8fbe\u5f0f\u4e2d\u58f0\u660e\u4e0e\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u540c\u540d\u7684\u53c2\u6570\u6216\u5c40\u90e8\u53d8\u91cf\u662f\u4e0d\u5408\u6cd5\u7684\u3002","title":"\u63a5\u53e3\u4e0elambda"},{"location":"Java/0_base/#_4","text":"\u5185\u90e8\u7c7b \u5185\u90e8\u7c7b\u65b9\u6cd5\u53ef\u4ee5\u8bbf\u95ee\u8be5\u7c7b\u5b9a\u4e49\u6240\u5728\u7684\u4f5c\u7528\u57df\u4e2d\u7684\u6570\u636e\uff0c \u5305\u62ec\u79c1\u6709\u7684\u6570\u636e\u3002 \u5185\u90e8\u7c7b\u53ef\u4ee5\u5bf9\u540c\u4e00\u4e2a\u5305\u4e2d\u7684\u5176\u4ed6\u7c7b\u9690\u85cf\u8d77\u6765\u3002 \u5f53\u60f3\u8981\u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u4e14\u4e0d\u60f3\u7f16\u5199\u5927\u91cf\u4ee3\u7801\u65f6\uff0c\u4f7f\u7528\u533f\u540d \uff08anonymous) \u5185\u90e8\u7c7b\u6bd4\u8f83\u4fbf\u6377\u3002 \u5185\u90e8\u7c7b\u7684\u5bf9\u8c61\u6709\u4e00\u4e2a\u9690\u5f0f\u5f15\u7528\uff0c \u5b83\u5f15\u7528\u4e86\u5b9e\u4f8b\u5316\u8be5\u5185\u90e8\u5bf9\u8c61\u7684\u5916\u56f4\u7c7b\u5bf9\u8c61\u3002\u901a\u8fc7\u8fd9\u4e2a\u6307\u9488\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5916\u56f4\u7c7b\u5bf9\u8c61\u7684\u5168\u90e8\u72b6\u6001\u3002 \u5916\u56f4\u7c7b\u7684\u5f15\u7528\u5728\u6784\u9020\u5668\u4e2d\u8bbe\u7f6e\u3002\u7f16\u8bd1\u5668\u4fee\u6539\u4e86\u6240\u6709\u7684\u5185\u90e8\u7c7b\u7684\u6784\u9020\u5668\uff0c \u6dfb\u52a0\u4e00\u4e2a\u5916\u56f4\u7c7b \u5f15\u7528\u7684\u53c2\u6570\u3002 \u5728Java\u4e2d\uff0cstatic \u5185\u90e8\u7c7b\u6ca1\u6709\u8fd9\u79cd\u9644\u52a0\u6307\u9488\uff0c\u8fd9\u79cd\u5185\u90e8\u7c7b \u7c7b\u4f3cC++\u4e2d\u7684\u5d4c\u5957\u7c7b\u3002 \u5185\u90e8\u7c7b\u662f\u4e00\u79cd\u7f16\u8bd1\u5668\u73b0\u8c61\uff0c\u4e0e\u865a\u62df\u673a\u65e0\u5173\u3002\u7f16\u8bd1\u5668\u5c06\u4f1a\u628a\u5185\u90e8\u7c7b\u7ffb\u8bd1\u6210\u7528 $ (\u7f8e\u5143\u7b26\u53f7\uff09\u5206\u9694\u5916\u90e8\u7c7b\u540d\u4e0e\u5185\u90e8\u7c7b\u540d\u7684\u5e38\u89c4\u7c7b\u6587\u4ef6\u3002 \u7f16\u8bd1\u5668\u4e3a\u4e86\u5f15\u7528\u5916\u56f4\u7c7b\uff0c \u751f\u6210\u4e86\u4e00\u4e2a\u9644\u52a0\u7684\u5b9e\u4f8b\u57df this$0 (\u540d\u5b57this$0 \u662f\u7531\u7f16\u8bd1\u5668\u5408\u6210\u7684\uff0c\u5728\u81ea\u5df1\u7f16\u5199\u7684\u4ee3\u7801\u4e2d\u4e0d\u80fd\u591f\u5f15\u7528\u5b83\u3002 \u7f16\u8bd1\u5668\u5728\u5916\u56f4\u7c7b\u6dfb\u52a0\u9759\u6001\u65b9\u6cd5 access$000(\u5177\u4f53\u540d\u79f0\u89c6\u7f16\u8bd1\u5668\u51b3\u5b9a), \u5b83\u5c06\u8fd4\u56de\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u5b83\u7684\u5bf9\u8c61\u57df;\u800c\u5185\u90e8\u7c7b\u5c31\u53ef\u4ee5\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002 \u8fd9\u6837\u505a\u5b58\u5728\u5b89\u5168\u98ce\u9669\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 access$000\u65b9\u6cd5\u5f88\u5bb9\u6613\u5730\u8bfb\u53d6\u5230\u79c1\u6709\u57df beep; \u4f8b\u5982\u653b\u51fb\u4ee3\u7801\u4e0e\u88ab\u653b\u51fb\u7c7b\u653e\u5728\u540c\u4e00\u4e2a\u5305\u4e2d\uff0c\u521b\u5efa\u4e00\u4e2a\u7528\u865a\u62df\u673a\u6307\u4ee4\u8c03\u7528access$000\u65b9\u6cd5\uff0c\u8bbf\u95ee\u5230outerClass\u7684private\u53d8\u91cf\u3002 \u5c40\u90e8\u5185\u90e8\u7c7b \u5728\u65b9\u6cd5\u4e2d\u5b9a\u4e49\u7684\u7c7b\uff0c\u4e0d\u80fd\u7528 public \u6216 private \u8bbf\u95ee\u8bf4\u660e\u7b26\u8fdb\u884c\u58f0\u660e\u3002\u5b83\u7684\u4f5c\u7528\u57df\u88ab\u9650\u5b9a\u5728\u58f0\u660e\u8fd9\u4e2a\u5c40\u90e8 \u7c7b\u7684\u5757\u4e2d\u3002 \u5c40\u90e8\u7c7b\u6709\u4e00\u4e2a\u4f18\u52bf\uff0c \u5373\u5bf9\u5916\u90e8\u4e16\u754c\u53ef\u4ee5\u5b8c\u5168\u5730\u9690\u85cf\u8d77\u6765\uff1b \u6b64\u5916\u5b83\u4eec\u4e0d\u4ec5\u80fd\u591f\u8bbf\u95ee\u5305\u542b\u5b83\u4eec\u7684\u5916\u90e8\u7c7b\uff0c\u8fd8\u53ef\u4ee5\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\u3002\u4e0d\u8fc7\uff0c\u90a3\u4e9b\u5c40\u90e8\u53d8\u91cf\u5fc5\u987b\u4e8b\u5b9e\u4e0a\u4e3a final\u3002\u8fd9\u8bf4\u660e\uff0c\u5b83\u4eec\u4e00\u65e6\u8d4b\u503c\u5c31\u7edd\u4e0d\u4f1a\u6539\u53d8\u3002 \u4e8b\u5b9e\u4e0a\u5373\u65f6\u65b9\u6cd5\u5df2\u7ecf\u7ed3\u675f\uff0c\u4f46\u5185\u90e8\u7c7b\u5bf9\u8c61\u4f9d\u65e7\u53ef\u4ee5\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u5728\u5c40\u90e8\u7c7b\u4e2d\u4e3a\u6bcf\u4e00\u4e2a\u5c40\u90e8\u53d8\u91cf\u5efa\u7acb\u4e86\u76f8\u5e94\u7684\u6570\u636e\u57df(\u5982\u4f8b\u5b50\u4e2d val$len), \u5e76\u5c06\u5c40\u90e8\u53d8\u91cf\u62f7\u8d1d\u5230\u6784\u9020\u5668\u4e2d\uff0c \u4ee5\u4fbf\u5c06\u8fd9\u4e9b\u6570\u636e\u57df\u521d\u59cb\u5316\u4e3a\u5c40\u90e8\u53d8\u91cf\u7684\u526f\u672c \u533f\u540d\u5185\u90e8\u7c7b \u8bed\u6cd5\u683c\u5f0f: SuperType obj = new SuperType(construction parameters) { \u2003inner class methods and data } SuperType \u53ef\u4ee5\u662f ActionListener \u8fd9\u6837\u7684\u63a5\u53e3\uff0c \u4e8e\u662f\u5185\u90e8\u7c7b\u5c31\u8981\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\u3002 SuperType \u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7c7b\uff0c\u4e8e\u662f\u5185\u90e8\u7c7b\u5c31\u8986\u5199\u7236\u7c7b\u7684\u65b9\u6cd5\u3002 \u5bf9\u4e8e\u63a5\u6536\u51fd\u6570\u5f0f\u63a5\u53e3\u4e3a\u53c2\u6570\u7684\u65b9\u6cd5\uff0cobj\u4f5c\u4e3aSuperType\u7684\u533f\u540d\u5b50\u7c7b\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c \u4f46\u73b0\u5728\u4f7f\u7528\u533f\u540dlambda\u8868\u8fbe\u5f0f\u66f4\u65b9\u4fbf\u3002 class outerClass{ private int beep; public outerClass(int _beep){ this.beep=_beep; } public void test(){ innerClass ic = new innerClass(); ic.fun(); } public void test2(int len){ class localInnerClass{ public void action(){ System.out.println(\"outerClass::localInnerClass::len=\"+len); } } localInnerClass lic = new localInnerClass(); lic.action(); } public class innerClass{ public void fun(){ System.out.println(\"outerClass::innerClass::beep=\"+beep); } } } // \u901a\u8fc7code/ReflectionTest\u6765\u67e5\u770b\u5916\u90e8\u7c7b\u548c\u5185\u90e8\u7c7b // \u8f93\u51fa\u7ed3\u679c class outerClass { Constructor public outerClass(int); Methods static int access$000(outerClass); public void test(); Fields private int beep; } // \u8f93\u5165\u7c7b\u540d outerClass$innerClass public class outerClass$innerClass { Constructor public outerClass$innerClass(outerClass); Methods public void fun(); Fields final outerClass this$0; } // outerClass$1localInnerClass\uff0c $1\u8868\u793a\u7b2c\u4e00\u4e2a\u5c40\u90e8\u5185\u90e8\u7c7b class outerClass$1localInnerClass { Constructor outerClass$1localInnerClass(outerClass, int); Methods public void action(); Fields final int val$len; final outerClass this$0; } \u9759\u6001\u5185\u90e8\u7c7b \u6709\u65f6\u5019\uff0c \u4f7f\u7528\u5185\u90e8\u7c7b\u53ea\u662f\u4e3a\u4e86\u628a\u4e00\u4e2a\u7c7b\u9690\u85cf\u5728\u53e6\u5916\u4e00\u4e2a\u7c7b\u7684\u5185\u90e8\uff0c\u5e76\u4e0d\u9700\u8981\u5185\u90e8\u7c7b\u5f15\u7528 \u5916\u56f4\u7c7b\u5bf9\u8c61\u3002\u4e3a\u6b64\uff0c\u53ef\u4ee5\u5c06\u5185\u90e8\u7c7b\u58f0\u660e\u4e3a static, \u4ee5\u4fbf\u53d6\u6d88\u4ea7\u751f\u7684\u5f15\u7528\u3002 \u53ea\u6709\u5185\u90e8\u7c7b\u53ef\u4ee5\u58f0\u660e\u4e3a static\u3002\u9759\u6001\u5185\u90e8\u7c7b\u7684\u5bf9\u8c61\u9664\u4e86\u6ca1\u6709\u5bf9\u751f\u6210\u5b83\u7684\u5916\u56f4\u7c7b\u5bf9\u8c61 \u7684\u5f15\u7528\u7279\u6743\u5916\uff0c \u4e0e\u5176\u4ed6\u6240\u5187\u5185\u90e8\u7c7b\u5b8c\u5168\u4e00\u6837\u3002","title":"\u5185\u90e8\u7c7b"},{"location":"Java/0_base/#_5","text":"\u5f02\u5e38\u5206\u7c7b \u6240\u6709\u7684\u5f02\u5e38\u90fd\u662f\u7531 Throwable \u7ee7\u627f\u800c\u6765\uff0c\u4f46\u5728\u4e0b\u4e00\u5c42\u7acb\u5373\u5206\u89e3\u4e3a\u4e24\u4e2a\u5206\u652f: Error \u548c Exception; Error\u7c7b\u5c42\u6b21\u7ed3\u6784\u63cf\u8ff0\u4e86 Java \u8fd0\u884c\u65f6\u7cfb\u7edf\u7684\u5185\u90e8\u9519\u8bef\u548c\u8d44\u6e90\u8017\u5c3d\u9519\u8bef\u3002 \u5e94\u7528\u7a0b\u5e8f\u4e0d\u5e94\u8be5\u629b\u51fa\u8fd9\u79cd\u7c7b\u578b\u7684\u5bf9\u8c61\u3002 \u7531\u7a0b\u5e8f\u9519\u8bef\u5bfc\u81f4\u7684\u5f02\u5e38\u5c5e\u4e8eRuntimeException(\u5982\u6570\u7ec4\u8d8a\u754c\u3001\u96640\u7b49); \u800c\u7a0b\u5e8f\u672c\u8eab\u6ca1\u6709\u95ee\u9898\uff0c\u4f46\u7531\u4e8e\u50cfI/O\u9519\u8bef(\u5982\u6587\u4ef6\u4e0d\u5b58)\u5728\u8fd9\u7c7b\u95ee\u9898\u5bfc\u81f4\u7684\u5f02\u5e38\u5c5e\u4e8e\u5176\u4ed6\u5f02\u5e38\u3002 Java\u5c06\u6d3e\u751f\u4e8eError\u7c7b\u6216RuntimeException\u7c7b\u7684\u6240\u6709\u5f02\u5e38\u79f0\u4e3a \u975e\u53d7\u67e5 (unchecked)\u5f02\u5e38\uff0c\u6240\u6709\u5176\u4ed6\u7684\u5f02\u5e38\u79f0\u4e3a \u53d7\u67e5 (checked)\u5f02\u5e38\u3002 \u7f16\u8bd1\u5668\u5c06\u6838\u67e5\u662f\u5426\u4e3a\u6240\u6709\u7684\u53d7\u67fb\u5f02\u5e38\u63d0\u4f9b\u4e86\u5f02\u5e38\u5904\u7406\u5668\uff0c\u5373\u8981\u6c42\u4e00\u4e2a\u65b9\u6cd5\u5fc5\u987b\u58f0\u660e\u6240\u6709\u53ef\u80fd\u629b\u51fa\u7684\u53d7\u67e5\u5f02\u5e38\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u53ef\u80fd\u629b\u51fa\u53d7\u67e5\u5f02\u5e38\u7684\u65b9\u6cd5\uff0c\u4f8b\u5982\u53cd\u5c04\u4e2d\u901a\u8fc7\u7c7b\u540d\u6765\u6784\u9020\u5bf9\u8c61\uff0c\u53ef\u80fd\u5b58\u5728\u8be5\u7c7b\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u8981\u6c42\u8fd9\u90e8\u5206\u4ee3\u7801\u8981\u4e48\u6355\u83b7\u5f02\u5e38\uff0c\u8981\u4e48\u629b\u51fa\u5f02\u5e38\u3002 \u629b\u51fa\u5f02\u5e38 \u5728java\u4e2d\uff0c\u6ca1\u6709 throws \u8bf4\u660e\u7b26\u7684\u65b9\u6cd5\u5c06\u4e0d\u80fd\u629b\u51fa\u4efb\u4f55\u53d7\u67e5\u5f02\u5e38\u3002 \u5982\u679c\u5728\u5b50\u7c7b\u4e2d\u8986\u76d6\u4e86\u8d85\u7c7b\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u5b50\u7c7b\u65b9\u6cd5\u4e2d\u58f0\u660e\u7684\u53d7\u67e5\u5f02\u5e38\u4e0d\u80fd\u6bd4\u8d85\u7c7b\u65b9\u6cd5\u4e2d\u58f0\u660e\u7684\u5f02\u5e38\u66f4\u901a\u7528\uff1b\u5e76\u4e14\u5982\u679c\u8d85\u7c7b\u65b9\u6cd5\u6ca1\u6709\u629b\u51fa\u4efb\u4f55\u53d7\u67e5\u5f02\u5e38\uff0c\u5b50\u7c7b\u4e5f\u4e0d\u80fd\u629b\u51fa\u4efb\u4f55\u53d7\u67e5\u5f02\u5e38\u3002 \u5f53 finally \u5b50\u53e5\u5305\u542b return \u8bed\u53e5\u65f6\uff0c\u5c06\u4f1a\u51fa\u73b0\u4e00\u79cd\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c\uff0c\u5047\u8bbe\u5229\u7528 return\u8bed\u53e5\u4ecetry\u8bed\u53e5\u5757\u4e2d\u9000\u51fa\u3002\u5728\u65b9\u6cd5\u8fd4\u56de\u524d\uff0cfinally\u5b50\u53e5\u7684\u5185\u5bb9\u5c06\u88ab\u6267\u884c\u3002 \u5e26\u8d44\u6e90\u7684try\u8bed\u53e5: \u5047\u8bbe\u8d44\u6e90\u5c5e\u4e8e\u4e00\u4e2a\u5b9e\u73b0\u4e86AutoCloseable\u63a5\u53e3\u7684\u7c7b\uff0cAutoCloseable\u63a5\u53e3\u6709\u4e00\u4e2a\u65b9\u6cd5\uff0c void close() throws Exception\uff0c try\u5757\u6b63\u5e38\u9000\u51fa\u6216\u629b\u51fa\u5f02\u5e38\u65f6\uff0c\u90fd\u4f1a\u81ea\u52a8\u8c03\u7528close\u65b9\u6cd5\uff0c\u5173\u95ed\u8d44\u6e90\u3002 //\u8bed\u6cd5 try{ .. }catch(Exception e){ .. }finally{ .. } try(Resource res=..){ // work with res } \u65ad\u8a00 \u65ad\u8a00\u673a\u5236\u5141\u8bb8\u5728\u6d4b\u8bd5\u671f\u95f4\u5411\u4ee3\u7801\u4e2d\u63d2\u5165\u4e00\u4e9b\u68c0\u67fb\u8bed\u53e5\u3002\u5f53\u4ee3\u7801\u53d1\u5e03\u65f6\uff0c\u8fd9\u4e9b\u63d2\u5165\u7684\u68c0\u6d4b \u8bed\u53e5\u5c06\u4f1a\u88ab\u81ea\u52a8\u79fb\u8d70\u3002 assert \u6761\u4ef6; assert \u6761\u4ef6: \u8868\u8fbe\u5f0f; \u8fd9\u4e24\u79cd\u5f62\u5f0f\u90fd\u4f1a\u5bf9\u6761\u4ef6\u8fdb\u884c\u68c0\u6d4b\uff0c \u5982\u679c\u7ed3\u679c\u4e3a false, \u5219\u629b\u51fa\u4e00\u4e2a AssertionError \u5f02\u5e38\u3002 \u5728\u7b2c\u4e8c\u79cd\u5f62\u5f0f\u4e2d\uff0c\u8868\u8fbe\u5f0f\u5c06\u88ab\u4f20\u5165 AssertionError \u7684\u6784\u9020\u5668\uff0c\u5e76\u8f6c\u6362\u6210\u4e00\u4e2a\u6d88\u606f\u5b57\u7b26\u4e32\u3002assert x>0: x; \u8868\u8fbe\u5f0f\u90e8\u5206\u7684\u552f\u4e00\u76ee\u7684\u662f\u4ea7\u751f\u4e00\u4e2a\u6d88\u606f\u5b57\u7b26\u4e32\u3002AssertionError \u5bf9\u8c61\u5e76\u4e0d\u5b58\u50a8\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u56e0\u6b64\uff0c\u4e0d\u53ef\u80fd\u5728\u4ee5\u540e\u5f97\u5230\u5b83\u3002 \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u65ad\u8a00\u88ab\u7981\u7528\u3002\u53ef\u4ee5\u5728\u8fd0\u884c\u7a0b\u5e8f\u65f6\u7528 -enableassertions \u6216 -ea \u9009\u9879\u542f\u7528; \u5728\u542f\u7528\u6216\u7981\u7528\u65ad\u8a00\u65f6\u4e0d\u5fc5\u91cd\u65b0\u7f16\u8bd1\u7a0b\u5e8f\u3002\u542f\u7528\u6216\u7981\u7528\u65ad\u8a00\u662f\u7c7b\u52a0\u8f7d\u5668(class loader) \u7684\u529f\u80fd\u3002\u5f53\u65ad\u8a00\u88ab\u7981\u7528\u65f6\uff0c\u7c7b\u52a0\u8f7d\u5668\u5c06\u8df3\u8fc7\u65ad\u8a00\u4ee3\u7801\uff0c \u56e0\u6b64\uff0c\u4e0d\u4f1a\u964d\u4f4e\u7a0b\u5e8f\u8fd0\u884c\u7684\u901f\u5ea6\u3002","title":"\u5f02\u5e38"},{"location":"Java/0_base/#_6","text":"\u6cdb\u578b\u65b9\u6cd5 \u6cdb\u578b\u65b9\u6cd5\u53ef\u4ee5\u5b9a\u4e49\u5728\u666e\u901a\u7c7b\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u5728\u6cdb\u578b\u7c7b\u4e2d\u3002 public static < T > T getMiddle() {..} \u7c7b\u578b\u53d8\u91cf < T >\u653e\u5728\u4fee\u9970\u7b26\u4e4b\u540e\uff0c\u8fd4\u56de\u7c7b\u578b\u4e4b\u524d\uff1b\u5f53\u8c03\u7528\u6cdb\u578b\u65b9\u6cd5\u65f6\uff0c\u5728\u65b9\u6cd5\u540d\u524d\u7684\u5c16\u62ec\u53f7\u4e2d\u653e\u4eba\u5177\u4f53\u7684\u7c7b\u578b\uff0c obj.< String >getMiddle(); \u4e0d\u8fc7\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u65b9\u6cd5\u8c03\u7528\u4e2d\u53ef\u4ee5\u7701\u7565\u8bf8\u5982< String >\u8fd9\u6837\u7684\u7c7b\u578b\u53c2\u6570(\u5373\u662f\u7c7b\u578b\u63a8\u65ad)\u3002 \u6cdb\u578b\u4f18\u70b9 \u6cdb\u578b\u53ef\u4ee5\u589e\u5f3a\u7f16\u8bd1\u65f6\u9519\u8bef\u68c0\u6d4b\uff0c\u51cf\u5c11\u56e0\u7c7b\u578b\u95ee\u9898\u5f15\u53d1\u7684\u8fd0\u884c\u65f6\u5f02\u5e38\uff1b\u6cdb\u578b\u53ef\u4ee5\u907f\u514d\u7c7b\u578b\u8f6c\u6362\uff1b\u53ef\u4ee5\u4f7f\u7528\u6cdb\u578b\u7b97\u6cd5\uff0c\u589e\u52a0\u4ee3\u7801\u590d\u7528\u6027 \u76f8\u5173\u540d\u8bcd \u539f\u59cb\u7c7b\u578b: \u64e6\u9664\u5b9e\u9645\u7c7b\u578b\u53d8\u91cf\u7684\u6cdb\u578b\u5c31\u662f\u4e00\u4e2a\u539f\u59cb\u7c7b\u578b class Box {} Box b = new Box(); //\u8fd9\u4e2aBox\u5c31\u662fBox \u7684\u539f\u59cb\u7c7b\u578b \u6cdb\u578b\u7c7b\u578b\uff1aPerson< T >\u6574\u4e2a\u5c31\u662f\u6cdb\u578b\u7c7b\u578b\u3002 \u7c7b\u578b\u53c2\u6570\uff1aPerson< T >\u4e2d\u7684T\u5c31\u7c7b\u578b\u53c2\u6570\u3002 \u53c2\u6570\u5316\u7c7b\u578b\uff1aPerson< Man >\u6574\u4e2a\u6210\u4e3a\u53c2\u6570\u5316\u7c7b\u578b(ParameterizedType) \u5b9e\u9645\u7c7b\u578b\u53c2\u6570\uff1aPerson< Man >\u4e2d\u7684Man\u5c31\u79f0\u4e4b\u4e3a\u5b9e\u9645\u7c7b\u578b\u53c2\u6570 \u7c7b\u578b\u53c2\u6570\u7684\u9650\u5b9a \u5bf9\u7c7b\u578b\u53c2\u6570\u52a0\u4ee5\u7ea6\u675f\uff0c\u7c7b\u4f3cC++\u4e2d\u7684\u6a21\u677f\u7279\u5316\uff0c\u4f46\u529f\u80fd\u66f4\u5f3a\uff0c\u4f8b\u5982\u53ef\u4ee5\u9650\u5236\u7c7b\u578b\u53d8\u91cf\u662f\u5b9e\u73b0\u4e86\u67d0\u4e2a\u63a5\u53e3\u3002 public static < T extends Comparable > T fun(){..} < T extends BoundingType >, \u8868\u793aT\u662f\u7ed1\u5b9a\u7c7b\u578b\u7684\u5b50\u7c7b\u578b\uff0c\u7ed1\u5b9a\u7c7b\u578b\u53ef\u4ee5\u662f\u7c7b\u4e5f\u53ef\u4ee5\u662f\u63a5\u53e3\uff1b\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570\u6216\u901a\u914d\u7b26(?)\u53ef\u4ee5\u6709\u591a\u4e2a\u9650\u5b9a\uff1b T extends Comparable & Clonable, \u9650\u5b9a\u7c7b\u578b\u7528\u201c &\u201d \u5206\u9694\uff0c\u800c\u9017\u53f7\u7528\u6765\u5206\u9694\u5b9e\u9645\u7c7b\u578b\u53c2\u6570\u3002 \u6cdb\u578b\u4ee3\u7801\u548c\u865a\u62df\u673a 1\u3001\u6cdb\u578b\u64e6\u9664: \u65e0\u8bba\u4f55\u65f6\u5b9a\u4e49\u4e00\u4e2a\u6cdb\u578b\u7c7b\u578b\uff0c\u90fd\u81ea\u52a8\u63d0\u4f9b\u4e86\u4e00\u4e2a\u76f8\u5e94\u7684\u539f\u59cb\u7c7b\u578b(raw type)\u3002 \u539f\u59cb\u7c7b\u578b\u7684\u540d\u5b57\u5c31\u662f\u5220\u53bb\u7c7b\u578b\u53c2\u6570\u540e\u7684\u6cdb\u578b\u7c7b\u578b\u540d\uff0c\u540c\u65f6\u4f1a\u64e6\u9664(erased)\u7c7b\u578b\u53c2\u6570\u3002 2\u3001\u64e6\u9664\u7c7b\u578b\u53c2\u6570\u540e\uff0c\u4f1a\u7528\u7b2c\u4e00\u4e2a\u9650\u5b9a\u7684\u5b9e\u9645\u7c7b\u578b\u53c2\u6570\u6765\u66ff\u6362\uff0c\u5982\u679c\u6ca1\u6709\u7ed9\u5b9a\u9650\u5b9a\uff0c\u5c31\u91c7\u7528 Object \u66ff\u6362\u3002 \u7efc\u54081\u30012\u53ef\u77e5\uff0c\u865a\u62df\u673a\u4e2d\u6ca1\u6709\u6cdb\u578b\uff0c\u53ea\u6709\u666e\u901a\u7684\u7c7b\u548c\u65b9\u6cd5\u3002 3\u3001\u5e76\u4e14\u4e3a\u4e86\u6548\u7387\uff0c\u5e94\u8be5\u5c06\u6ca1\u6709\u65b9\u6cd5\u7684\u63a5\u53e3\u653e\u5728\u8fb9\u754c\u5217\u8868\u7684\u672b\u5c3e\uff0c\u4f8b\u5982Cloneable\u5e94\u8be5\u653e\u5728Compareable\u4e4b\u540e\uff0c \u5426\u5219\u5c06\u4f7f\u7528Cloneable\u5bf9\u8c61\u6765\u66ff\u6362\u7c7b\u578b\u53d8\u91cf\uff0c\u65b9\u6cd5\u4e2d\u5fc5\u8981\u65f6\u8981\u63d2\u5165\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u3002 4\u3001\u6865\u65b9\u6cd5\uff0c\u56e0\u4e3a\u7c7b\u578b\u64e6\u9664\u4e0e\u591a\u6001\u4f1a\u53d1\u751f\u51b2\u7a81\uff1b public class hello { public static void main(String[] args) { parent< String > p = new child(); p.say(\"hello\"); /* child\u7684\u65b9\u6cd5\u8868\u4e2d\u6709\u4e24\u4e2a\u65b9\u6cd5\uff0csay(String str)\u548csay(Object str),\u540e\u8005\u662f\u7236\u7c7b\u6cdb\u578b\u64e6\u9664\u540e\u7684\u65b9\u6cd5 \u6309\u7406\u6765\u8bf4\uff0c\u8fd9\u6bb5\u6d4b\u8bd5\u4ee3\u7801\u5e94\u8be5\u4e0d\u80fd\u901a\u8fc7\u7f16\u8bd1\uff0c\u56e0\u4e3a\u8981\u5b9e\u73b0\u591a\u6001\u7684\u8bdd\uff0c\u6240\u8c03\u7528\u7684\u65b9\u6cd5\u5fc5\u987b\u5728\u5b50\u7c7b\u4e2d\u91cd\u5199\uff0c \u4f46\u662f\u5728\u8fd9\u91ccChild\u7c7b\u5e76\u6ca1\u6709\u91cd\u5199Parent\u7c7b\u4e2d\u7684say(Object value)\u65b9\u6cd5\uff0c\u53ea\u662f\u5355\u7eaf\u7684\u7ee7\u627f\u800c\u5df2\uff0c \u5e76\u4e14\u65b0\u52a0\u4e86\u4e00\u4e2a\u53c2\u6570\u4e0d\u540c\u7684\u540c\u540d\u65b9\u6cd5\u3002\u4f46\u662f\u7ed3\u679c\u662f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\u3002 \u539f\u56e0\u662f\u7f16\u8bd1\u5668\u5728Child\u7c7b\u4e2d\u81ea\u52a8\u751f\u6210\u4e86\u4e00\u4e2a\u6865\u65b9\u6cd5\uff0c\u6765\u907f\u514d\u7c7b\u578b\u64e6\u9664\u4e0e\u591a\u6001\u53d1\u9001\u51b2\u7a81\u3002 public void say(Object value) { sayHello((String) value); } */ /* \u53e6\u5916\u5982\u679c\u7236\u7c7b\u4e2d\u5b58\u5728\u4e00\u4e2a\u8fd4\u56de\u7c7b\u578bT\u7684\u65b9\u6cd5\uff0c\u5b50\u7c7b\u4e2d\u8bd5\u56fe\u91cd\u5199\u8fd9\u4e2a\u65b9\u6cd5 \u8fd9\u6837\u5b50\u7c7b\u7684\u65b9\u6cd5\u8868\u4e2d\u5c06\u5b58\u5728\u4e24\u4e2a\u65b9\u6cd5\uff0c\u9664\u4e86\u8fd4\u56de\u7c7b\u578b\u4e0d\u540c\uff0c\u65b9\u6cd5\u7b7e\u540d\u662f\u76f8\u540c\u7684\uff0c \u4f46\u5bf9\u4e8e\u865a\u62df\u673a\u6765\u8bf4\uff0c\u662f\u7528\u8fd4\u56de\u503c+\u65b9\u6cd5\u540d+\u53c2\u6570\u7684\u65b9\u5f0f\u6765\u8ba1\u7b97\u51fd\u6570\u7b7e\u540d\u7684\uff0c \u56e0\u6b64\uff0c\u7f16\u8bd1\u5668\u53ef\u80fd\u4ea7\u751f\u4e24\u4e2a\u4ec5\u8fd4\u56de\u7c7b\u578b\u4e0d\u540c\u7684\u65b9\u6cd5\u5b57\u8282\u7801\uff0c\u865a\u62df\u673a\u80fd\u591f\u6b63\u786e\u5730\u5904\u7406\u8fd9\u4e00\u60c5\u51b5 */ } } class parent<T>{ public void say(T str){ System.out.println(\"parent:\"+str); } } class child extends parent{ public void say(String str){ System.out.println(\"child:\"+str); } } \u6cdb\u578b\u7684\u7ea6\u675f\u4e0e\u5c40\u9650\u6027 1\u3001\u4e0d\u80fd\u7528\u57fa\u672c\u7c7b\u578b\u5b9e\u4f8b\u5316\u7c7b\u578b\u53c2\u6570 2\u3001\u8fd0\u884c\u65f6\u7c7b\u578b\u67e5\u8be2\u53ea\u9002\u7528\u4e8e\u539f\u59cb\u7c7b\u578b\uff0c\u8bd5\u56fe\u67e5\u8be2\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u5c5e\u4e8e\u67d0\u4e2a\u6cdb\u578b\u7c7b\u578b\u65f6\uff0c \u4f7f\u7528 instanceof \u4f1a\u5f97\u5230\u4e00\u4e2a\u7f16\u8bd1\u5668\u9519\u8bef\uff1b\u5982\u679c\u4f7f\u7528\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\u4f1a\u5f97\u5230\u4e00\u4e2a\u8b66\u544a\uff1b getClass\u65b9\u6cd5\u603b\u662f\u8fd4\u56de\u539f\u59cb\u7c7b\u578b\u3002 3\u3001\u867d\u7136\u58f0\u660e\u53c2\u6570\u5316\u7c7b\u578b\u7684\u6570\u7ec4\u662f\u5408\u6cd5\u7684\uff0c\u4f46\u4e0d\u80fd\u5b9e\u4f8b\u5316\u53c2\u6570\u5316\u7c7b\u578b\u7684\u6570\u7ec4\u7684\u6570\u7ec4\u3002 \u5b89\u5168\u6709\u6548\u65b9\u6cd5\u662f\u4f7f\u7528ArrayList\uff0c\u4f8b\u5982 ArrayList< Pair< String > > arr = new ArrayList<>(); 4\u3001\u53ef\u4ee5\u4f7f\u7528 @SafeVarargs \u6ce8\u89e3\u6765\u6d88\u9664\u521b\u5efa\u6cdb\u578b\u6570\u7ec4\u7684\u6709\u5173\u9650\u5236\uff0c\u5f53\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570\u662f\u53ef\u53d8\uff0c\u4e14\u662f\u6cdb\u578b\u7c7b\u578b\u3002 5\u3001\u4e0d\u80fd\u5b9e\u4f8b\u5316\u7c7b\u578b\u53d8\u91cf\uff0c\u5982 new T()\u6216\u8005T.class(\u5728C++\u4e2d\uff0c\u662f\u53ef\u4ee5\u5b9e\u4f8b\u5316\u4e00\u4e2a\u6a21\u677f\u7c7b\u578b\u7684)\uff1b \u90a3\u5982\u4f55\u5728\u6cdb\u578b\u7c7b\u4e2d\u521d\u59cb\u5316\u53c2\u6570\u7c7b\u578b\u5462\uff1f \u8ba9\u8c03\u7528\u8005\u63d0\u4f9b\u4e00\u4e2a\u6784\u9020\u5668\u8868\u8fbe\u5f0f\uff0c\u4f8b\u5982Pair< T >\u6709\u4e00\u4e2amakePair\u65b9\u6cd5\uff0c\u63a5\u53d7\u4e00\u4e2aSupplier< T >\uff0c \u8fd9\u662f\u4e00\u4e2a\u51fd\u6570\u5f0f\u63a5\u53e3\uff0c\u8868\u793a\u4e00\u4e2a\u65e0\u53c2\u6570\u800c\u4e14\u8fd4\u56de\u7c7b\u578b\u4e3aT\u7684\u51fd\u6570\u3002\u8fd9\u6837\u53ef\u4ee5\u4f20\u5165\u5b9e\u9645\u7c7b\u578b\u7684\u6784\u9020\u5668\uff0c \u4f8b\u5982Pair< String > p = Pair.makePair(String::new); 6\u3001\u4e0d\u80fd\u6784\u9020\u6cdb\u578b\u6570\u7ec4\uff0c\u5c31\u50cf\u4e0d\u80fd\u5b9e\u4f8b\u5316\u4e00\u4e2a\u6cdb\u578b\u5b9e\u4f8b\u4e00\u6837\uff0c\u4e5f\u4e0d\u80fd\u5b9e\u4f8b\u5316\u6570\u7ec4\u3002 7\u3001\u6cdb\u578b\u7c7b\u7684\u9759\u6001\u4e0a\u4e0b\u6587\u4e2d\u7c7b\u578b\u53d8\u91cf\u65e0\u6548\uff0c\u5373\u4e0d\u80fd\u5728\u9759\u6001\u57df\u6216\u65b9\u6cd5\u4e2d\u5f15\u7528\u7c7b\u578b\u53c2\u6570\u3002 8\u3001\u65e2\u4e0d\u80fd\u629b\u51fa\u4e5f\u4e0d\u80fd\u6355\u83b7\u6cdb\u578b\u7c7b\u5bf9\u8c61\u3002\u5b9e\u9645\u4e0a\uff0c\u751a\u81f3\u6cdb\u578b\u7c7b\u6269\u5c55 Throwable \u90fd\u662f\u4e0d\u5408\u6cd5\u7684\u3002 \u4f46\u662f\u5141\u8bb8\u7c7b\u578b\u53d8\u91cf\u6269\u5c55Throwable\u3002 public class Problem< T > extends Exception // error public static < T extends Throwable > void doWork(T t) throws T // OK 9\u3001\u53ef\u4ee5\u6d88\u9664\u5bf9\u4e8e\u53d7\u67e5\u5f02\u5e38\u7684\u68c0\u6d4b \u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5141\u8bb8\u629b\u51fa\u53d7\u67e5\u5f02\u5e38\u7684\u65b9\u6cd5\uff0c\u9700\u8981\u6355\u83b7\u6240\u6709\u7684\u53d7\u67e5\u5f02\u5e38\uff1b \u4f46\u53c8\u5e0c\u671b\u7531\u4e0a\u5c42\u8c03\u7528\u6765\u5904\u7406\u5f02\u5e38\uff0c\u53ef\u4ee5\u5229\u7528\u4e0b\u9762\u65b9\u6cd5\uff0c\u5c06\u53d7\u67e5\u5f02\u5e38\u4f2a\u88c5\u6210\u975e\u53d7\u67e5\u5f02\u5e38\u629b\u51fa\u3002 class Block{ @SuppressWamings(\"unchecked\") public static < T extends Throwable > void throwAs(Throwable e) throws T { throw (T) e; } } // \u5728\u5176\u4ed6\u7c7b\u67d0\u4e2a\u65b9\u6cd5\u4e2d try{ .. }catch(Throwable t){ Block.< RuntimeException >throwAs(t); // \u5047\u8bbetry\u8bed\u53e5\u4e2d\u53d1\u751f\u4e86\u53d7\u67e5\u5f02\u5e38\uff0c\u5982 FileNotFoundException // \u8fd9\u91cc\u901a\u8fc7\u629b\u51fa\u6cdb\u578b\u5f02\u5e38(\u6b64\u65f6\u7c7b\u578b\u53c2\u6570\u786e\u5b9a\u4e3a RuntimeException, \u662f\u975e\u53d7\u67e5\u5f02\u5e38)\u6b3a\u9a97\u4e86\u7f16\u8bd1\u5668\uff0c // \u6765\u5b9e\u9645\u629b\u51faFileNotFoundException\u3002 // \u8fd9\u91cc\u5e76\u6ca1\u6709\u53d1\u751f\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u56e0\u4e3a\u7c7b\u578b\u64e6\u9664\u540e\uff0c\u539f\u59cb\u7c7b\u578b\u90fd\u4e3aThrowable\uff0c // \u6545e\u7684\u5b9e\u9645\u7c7b\u578b\u662f FileNotFoundException\u8fd8\u662fRuntimeException\uff0c\u4f5c\u4e3aThrowable\u7684\u5b50\u7c7b\uff0c // \u7531\u4e8e\u591a\u6001\u7684\u6027\u8d28\uff0c\u4e0a\u5c42\u8c03\u7528\u63a5\u6536\u5230\u5f02\u5e38\u540e\uff0c\u80fd\u6b63\u786e\u83b7\u53d6\u5b9e\u9645\u5f02\u5e38\u7c7b\u578b\u3002 // \u8fd9\u79cd\u65b9\u6cd5\u907f\u514d\u7f16\u5199\u6355\u83b7\u591a\u4e2a\u5f02\u5e38\u5e76\u5305\u88c5\u4e3a\u975e\u53d7\u67e5\u5f02\u5e38\u629b\u51fa\u7684\u7e41\u7410\u4ee3\u7801\uff0c // \u901a\u8fc7initCause\u6765\u5b8c\u6210\u5305\u88c5 } 10\u3001\u6ce8\u610f\u64e6\u9664\u540e\u7684\u51b2\u7a81 \u5f53\u6cdb\u578b\u7c7b\u91cd\u8f7d\u4e86\u8d85\u7c7b\u4e2d\u7684\u65b9\u6cd5\u65f6\uff0c\u82e5\u91cd\u8f7d\u7684\u53c2\u6570\u7c7b\u578b\u662fT\uff0c\u5219\u4f1a\u88ab\u64e6\u9664\u4e3aObject\u3002\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51b2\u7a81\uff0c \u4f8b\u5982equals(T t)\u65b9\u6cd5\u4f1a\u4e0eObject\u7c7b\u4e2d\u7684equals(Object o)\u53d1\u9001\u51b2\u7a81\uff1b \u6b64\u5916\uff0c\u8981\u60f3\u652f\u6301\u64e6\u9664\u7684\u8f6c\u6362\uff0c\u5c31\u9700\u8981\u5f3a\u884c\u9650\u5236\u4e00\u4e2a\u7c7b\u6216\u7c7b\u578b\u53d8\u91cf\u4e0d\u80fd\u540c\u65f6\u6210\u4e3a\u4e24\u4e2a\u63a5\u53e3\u7c7b\u578b\u7684\u5b50\u7c7b\uff0c \u5982\u679c\u8fd9\u4e24\u4e2a\u63a5\u53e3\u662f\u540c\u4e00\u63a5\u53e3\u7684\u4e0d\u540c\u53c2\u6570\u5316\u3002 \u56e0\u4e3a\u6709\u53ef\u80fd\u4e0e\u5408\u6210\u7684\u6865\u65b9\u6cd5\u4ea7\u751f\u51b2\u7a81: \u4f8b\u5982\uff0c\u5b9e\u73b0\u4e86 Compamble< X > \u7684\u7c7b\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u6865\u65b9\u6cd5\uff1a public int compareTo(Object other) { return compareTo((X) other); } \u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684 X \u4e0d\u80fd\u6709\u4e24\u4e2a\u8fd9\u6837\u7684\u65b9\u6cd5\u3002 \u6cdb\u578b\u7c7b\u578b\u7684\u7ee7\u627f\u89c4\u5219 \u65e0\u8bba S \u4e0e T \u6709\u4ec0\u4e48\u8054\u7cfb(\u5982\u7ee7\u627f\u5173\u7cfb)\uff0c\u901a\u5e38\uff0cPair< S > \u4e0e Pair< T >\u6ca1\u6709\u4ec0\u4e48\u8054\u7cfb\uff0c\u4e0d\u80fd\u5c06\u4e00\u65b9\u8d4b\u7ed9\u53e6\u4e00\u65b9\uff1b \u901a\u914d\u7b26\u7c7b\u578b ?: extends: Pair< ? extends Employee > \u8981\u6c42\u7c7b\u578b\u53c2\u6570\u5fc5\u987b\u662fEmployee\u7684\u5b50\u7c7b super: Pair< ? super Manager > \u8981\u6c42\u7c7b\u578b\u53c2\u6570\u5fc5\u987b\u662fManager\u7684\u8d85\u7c7b\u578b\u3002 \u65e0\u9650\u5b9a\u901a\u914d\u7b26\uff0c\u5982 Pair< ? >\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u53d8\u91cf\u65e0\u6cd5\u8c03\u7528setter\u65b9\u6cd5\uff0c\u4f46\u53ef\u4ee5\u8c03\u7528getter\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2aObject\u3002 PECS\u539f\u5219 Producter extends Customer super \u58f0\u660e\u53c2\u6570\u5316\u7c7b\u578b\u65f6: \u5982\u679c\u4f60\u53ea\u9700\u8981\u4ece\u96c6\u5408\u4e2d\u83b7\u5f97\u7c7b\u578bT , \u4f7f\u7528< ? extends T>\u901a\u914d\u7b26 \u5982\u679c\u4f60\u53ea\u9700\u8981\u5c06\u7c7b\u578bT\u653e\u5230\u96c6\u5408\u4e2d, \u4f7f\u7528< ? super T>\u901a\u914d\u7b26 \u5982\u679c\u4f60\u65e2\u8981\u83b7\u53d6\u53c8\u8981\u653e\u7f6e\u5143\u7d20\uff0c\u5219\u4e0d\u4f7f\u7528\u4efb\u4f55\u901a\u914d\u7b26\u3002\u4f8b\u5982List< String >","title":"\u6cdb\u578b\u7a0b\u5e8f\u8bbe\u8ba1"},{"location":"Java/0_base/#_7","text":"Java\u96c6\u5408\u5e93\u662f\u5c06\u63a5\u53e3\u4e0e\u5b9e\u73b0\u5206\u79bb\u3002 Java\u96c6\u5408\u6846\u67b6\u5305\u542b\u4e24\u79cd\u6839\u63a5\u53e3\uff0cCollection\u548cMap\uff0c\u4e00\u822c\u79f0Collection\u4e3a\u96c6\u5408\uff0c\u5176\u7ee7\u627f\u4e86Iterable\u63a5\u53e3\uff0c\u5b9e\u73b0\u4e86iterator()\u65b9\u6cd5\uff0c\u4e3b\u8981\u5305\u542b\u4e09\u79cd\u5b50\u63a5\u53e3\uff0cList\u3001Set\u3001Queue\uff0c\u5b9e\u73b0\u4e86Collection\u63a5\u53e3\u6216\u5176\u5b50\u63a5\u53e3\u7684\u7c7b\u79f0\u4e3a\u96c6\u5408\u7c7b\uff1b\u800cMap\u4e0eCollection\u662f\u5e73\u884c\u7684\uff0c\u5176\u6ca1\u6709\u5b9e\u73b0 iterator\u65b9\u6cd5\uff0c\u4e0d\u80fd\u76f4\u63a5\u8fdb\u884c\u8fed\u4ee3\uff0c\u4f46\u662f\u5176\u6709\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5f97\u5230\u7c7b\u578b\u4e3aSet\u7684\u89c6\u56fe\uff0c\u901a\u8fc7Set\u7684iterator\u5b9e\u73b0\u5bf9Map\u7684\u8fed\u4ee3\u3002\u5bf9\u4e8e\u5b9e\u73b0\u4e86Map\u63a5\u53e3\u7684\u7c7b\u6709\u65f6\u4e5f\u79f0\u4e3a\u96c6\u5408\u5b9e\u73b0\u7c7b\u3002 Iterator\u63a5\u53e3 \u5305\u542bnext\u3001hasNext\u3001remove\u3001forEachRemaining\u56db\u4e2a\u65b9\u6cd5\uff1b \u7f16\u8bd1\u5668\u7b80\u5355\u5730\u5c06\u201c foreach\u201d \u5faa\u73af\u7ffb\u8bd1\u4e3a\u5e26\u6709\u8fed\u4ee3\u5668\u7684\u5faa\u73af\uff0c\u56e0\u6b64 \u201c for each\u201d \u5faa\u73af\u53ef\u4ee5\u4e0e\u4efb\u4f55\u5b9e\u73b0\u4e86 Iterable \u63a5\u53e3\u7684\u5bf9\u8c61\u4e00\u8d77\u5de5\u4f5c\u3002 Iterable\u63a5\u53e3\u4ec5\u5305\u542b\u4e00\u4e2aiterator\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2aIterator\uff1bCollection \u63a5\u53e3\u6269\u5c55\u4e86 Iterable \u63a5\u53e3\u3002\u56e0\u6b64\uff0c\u5bf9\u4e8e\u6807\u51c6\u7c7b\u5e93\u4e2d\u7684\u4efb\u4f55\u96c6\u5408\u90fd\u53ef\u4ee5\u4f7f\u7528\u201c foreach\u201d \u5faa\u73af\u3002 \u5e94\u8be5\u5c06 Java \u8fed\u4ee3\u5668\u8ba4\u4e3a\u662f\u4f4d\u4e8e\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u3002 \u5f53\u8c03\u7528 next \u65f6\uff0c\u8fed\u4ee3\u5668\u5c31\u8d8a\u8fc7\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u521a\u521a\u8d8a\u8fc7\u7684\u90a3\u4e2a\u5143\u7d20\u7684\u5f15\u7528\uff1b \u5bf9 next \u65b9\u6cd5\u548c remove \u65b9\u6cd5\u7684\u8c03\u7528\u5177\u6709\u4e92\u76f8\u4f9d\u8d56\u6027\u3002\u5982\u679c\u8c03\u7528 remove \u4e4b\u524d\u6ca1\u6709\u8c03\u7528 next \u5c06\u662f\u4e0d\u5408\u6cd5\u7684\u3002\u5982\u679c\u8fd9\u6837\u505a\uff0c\u5c06\u4f1a\u629b\u51fa\u4e00\u4e2a IllegalStateException \u5f02\u5e38\u3002 ArrayList\u4e0eVector \u8fd9\u91cc\u53eaJava\u4e2d\u7684Vector\uff0c\u5176\u6240\u6709\u65b9\u6cd5\u90fd\u662f\u540c\u6b65\u7684\uff0c\u53ef\u4ee5\u7531\u591a\u4e2a\u7ebf\u7a0b\u5b89\u5168\u8bbf\u95ee\u4e00\u4e2aVector\u5bf9\u8c61\uff0c\u5982\u679c\u7531\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee Vector, \u4ee3\u7801\u8981 \u5728\u540c\u6b65\u64cd\u4f5c\u4e0a\u8017\u8d39\u5927\u91cf\u7684\u65f6\u95f4\u3002\u6b64\u65f6\u5efa\u8bae\u4f7f\u7528ArrayList\u3002 \u6620\u5c04\u89c6\u56fe \u96c6\u5408\u6846\u67b6\u4e0d\u8ba4\u4e3aMap\u672c\u8eab\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u4e0d\u8fc7\u53ef\u4ee5\u5f97\u5230\u6620\u5c04\u7684\u89c6\u56fe\uff0c\u8fd9\u662f\u5b9e\u73b0\u4e86Collection\u63a5\u53e3\u6216\u67d0\u4e2a\u5b50\u63a5\u53e3\u7684\u5bf9\u8c61\u3002 \u67093\u79cd\u89c6\u56fe\uff1a \u952e\u96c6\u3001 \u503c\u96c6\u5408\uff08\u4e0d\u662f\u4e00\u4e2a\u96c6\uff09 \u4ee5\u53ca\u952e/\u503c\u5bf9\u96c6\u3002\u952e\u548c\u952e/\u503c\u5bf9\u53ef\u4ee5\u6784\u6210\u4e00\u4e2a \u96c6\uff0c\u56e0\u4e3a\u6620\u5c04\u4e2d\u4e00\u4e2a\u952e\u53ea\u80fd\u6709\u4e00\u4e2a\u526f\u672c\u3002 \u4e0b\u9762\u7684\u65b9\u6cd5\uff1a Set< K > keySet()\u3001Collection< V > values()\u3001Set< Map.Entry< K, V >> entrySet()\uff0c \u4f1a\u5206\u522b\u8fd4\u56de\u8fd9 3 \u4e2a\u89c6\u56fe\uff0c\u901a\u8fc7 for each\u5faa\u73af\u53ef\u4ee5\u904d\u5386\u6bcf\u4e00\u4e2a\u5143\u7d20\u3002\uff08\u6761\u76ee\u96c6\u7684\u5143\u7d20\u662f\u5b9e\u73b0 Map.Entry \u63a5\u53e3\u7684\u7c7b\u7684\u5bf9\u8c61\u3002\uff09 \u5bf9\u4e8e\u8fd9\u4e09\u79cd\u89c6\u56fe\uff0c\u53ef\u4ee5\u4ece\u4e2d\u5220\u9664\u5143\u7d20\u6240\u5220\u9664\u7684\u503c\u53ca\u5176\u5bf9\u5e94\u7684key\uff0c\u5c06\u4ece\u6620\u5c04\u4e2d\u5220\u9664\uff0c\u4e0d\u8fc7\u4e0d\u80fd\u589e\u52a0\u4efb\u4f55\u5143\u7d20\u3002 \u5bf9\u4e8eMap.Entry< K,V >\u5bf9\u8c61\u53ef\u4ee5\u7528setValue\u65b9\u6cd5\u4fee\u6539\u503c\uff0c\u5e76\u8fd4\u56de\u539f\u6765\u7684\u503c\u3002 \u5f31\u6563\u5217\u6620\u5c04 1 WeakHashMap\u7684key\u548cvalue\u90fd\u53ef\u4ee5\u4e3anull,\u800cHashMap\u7684key\u53ef\u4ee5\u4e3anull,value\u4e0d\u53ef\u4e3anull\u3002 2 \u6b64\u79cdMap\u7684\u7279\u70b9\u662f\uff0c\u5f53\u9664\u4e86\u81ea\u8eab\u6709\u5bf9key\u7684\u5f15\u7528\u5916\uff0c\u6b64key\u6ca1\u6709\u5176\u4ed6\u5f15\u7528\u90a3\u4e48\u6b64map\u4f1a\u81ea\u52a8\u4e22\u5f03\u6b64\u503c\uff0c\u6240\u4ee5\u6bd4\u8f83\u9002\u5408\u505a\u7f13\u5b58\u3002 3 WeakHashMap\u5b9e\u73b0\u4e86Map\u63a5\u53e3\uff0c\u57fa\u4e8ehash-table\u5b9e\u73b0\uff0c\u5728\u8fd9\u79cdMap\u4e2d\uff0ckey\u7684\u7c7b\u578b\u662fWeakReference\u3002 \u5982\u679c\u5bf9\u5e94\u7684key\u88ab\u56de\u6536\uff0c\u5219\u8fd9\u4e2akey\u6307\u5411\u7684\u5bf9\u8c61\u4f1a\u88ab\u4eceMap\u5bb9\u5668\u4e2d\u81ea\u52a8\u79fb\u9664\uff0cWeakHashMap\u7684\u884c\u4e3a\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u57fa\u4e8e\u5783\u573e\u6536\u96c6\u5668\u7684\u884c\u4e3a\u3002 4 \u5f31\u5f15\u7528\uff08WeakReference\uff09\u7684\u7279\u6027\u662f\uff1a\u5f53gc\u7ebf\u7a0b\u53d1\u73b0\u67d0\u4e2a\u5bf9\u8c61\u53ea\u6709\u5f31\u5f15\u7528\u6307\u5411\u5b83\uff0c\u90a3\u4e48\u5c31\u4f1a\u5c06\u5176\u9500\u6bc1\u5e76\u56de\u6536\u5185\u5b58(\u52a0\u5165\u5230ReferenceQueue)\u3002 \u6807\u8bc6\u6563\u5217\u6620\u5c04 \u5728\u8fd9\u4e2a\u7c7b\u4e2d\uff0c \u952e\u7684\u6563\u5217\u503c\u4e0d\u662f\u7528hashCode\u51fd\u6570\u8ba1\u7b97\uff0c\u800c\u662f\u7528 System.identityHashCode \u65b9\u6cd5\u8ba1\u7b97\u7684\u3002 \u8fd9\u662f Object.hashCode \u65b9\u6cd5\u6839\u636e\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\u6765\u8ba1\u7b97\u6563\u5217\u7801\u65f6\u6240\u4f7f\u7528\u7684\u65b9\u5f0f\u3002 \u800c\u4e14\u5728\u5bf9\u4e24\u4e2a\u5bf9\u8c61\u8fdb\u884c\u6bd4\u8f83\u65f6\uff0cIdentityHashMap \u7c7b\u4f7f\u7528 ==, \u800c\u4e0d\u4f7f\u7528 equals\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u4e0d\u540c\u7684\u952e\u5bf9\u8c61\uff0c \u5373\u4f7f\u5185\u5bb9\u76f8\u540c\uff0c\u4e5f\u88ab\u89c6\u4e3a\u662f\u4e0d\u540c\u7684\u5bf9\u8c61\u3002 \u5728\u5b9e\u73b0\u5bf9\u8c61\u904d\u5386\u7b97\u6cd5\uff08\u5982\u5bf9\u8c61\u4e32\u884c\u5316\uff09\u65f6\uff0c \u8fd9\u4e2a\u7c7b\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u7528\u6765\u8ddf\u8e2a\u6bcf\u4e2a\u5bf9\u8c61\u7684\u904d\u5386\u72b6\u51b5\u3002 \u89c6\u56fe\u4e0e\u5305\u88c5\u5668 \u5982\u524d\u6240\u8ff0\uff0c\u96c6\u5408\u7684\u4e00\u4e9b\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5b9e\u73b0\u4e86\u67d0\u4e2a\u539f\u59cb\u63a5\u53e3(\u5982Collections\uff0cSet\uff0cMap)\u7684\u7c7b\u5bf9\u8c61\uff0c\u53ea\u80fd\u4f7f\u7528\u8be5\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u65b9\u6cd5\u6765\u8bbf\u95ee\u3001\u4fee\u6539\u539f\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff1b\u6709\u7684\u89c6\u56fe\u5141\u8bb8\u5220\u9664\u5143\u7d20\uff0c\u4f46\u6240\u6709\u89c6\u56fe\u90fd\u4e0d\u80fd\u589e\u52a0\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u3002\u8fd9\u79cd\u5bf9\u8c61\u79f0\u4e3a\u89c6\u56fe\u3002 \u89c6\u56fe\u6709\u4ee5\u4e0b\u51e0\u79cd\u5e94\u7528: 1\u3001\u8f7b\u91cf\u7ea7\u96c6\u5408\u5305\u88c5\u5668 2\u3001\u5b50\u8303\u56f4\uff0c subList(fromIndex, toIndex)\u65b9\u6cd5\uff0c\u53ef\u4ee5\u83b7\u5f97list[fromIndex, toIndex)\u8303\u56f4\u7684\u5143\u7d20\u3002 3\u3001\u4e0d\u53ef\u4fee\u6539\u7684\u89c6\u56fe\uff0c\u8fd9\u4e9b\u89c6\u56fe\u5bf9\u73b0\u6709\u96c6\u5408\u589e\u52a0\u4e86\u4e00\u4e2a\u8fd0\u884c\u65f6\u7684\u68c0\u67e5\u3002\u5982\u679c\u53d1\u73b0\u8bd5\u56fe\u5bf9\u96c6\u5408\u8fdb\u884c\u4fee\u6539\uff0c \u5c31\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u540c\u65f6\u8fd9\u4e2a\u96c6\u5408\u5c06\u4fdd\u6301\u672a\u4fee\u6539\u7684\u72b6\u6001\u3002 4\u3001\u540c\u6b65\u89c6\u56fe: \u4f7f\u7528\u89c6\u56fe\u673a\u5236\u6765\u786e\u4fdd\u5e38\u89c4\u96c6\u5408\u7684\u7ebf\u7a0b\u5b89\u5168\uff0c\u800c\u4e0d\u662f\u5b9e\u73b0\u7ebf\u7a0b\u5b89\u5168\u7684\u96c6\u5408\u7c7b\u3002 \u4f8b\u5982\uff0cCollections \u7c7b\u7684\u9759\u6001synchronizedMap\u65b9\u6cd5\u53ef\u4ee5\u5c06\u4efb\u4f55\u4e00\u4e2a\u6620\u5c04\u8868\u8f6c\u6362\u6210\u5177\u6709\u540c\u6b65\u8bbf\u95ee\u65b9\u6cd5\u7684 Map\uff1b \u73b0\u5728\uff0c\u5c31\u53ef\u4ee5\u7531\u591a\u7ebf\u7a0b\u8bbf\u95ee map \u5bf9\u8c61\u4e86\u3002\u50cfget\u548cput\u8fd9\u7c7b\u65b9\u6cd5\u90fd\u662f\u540c\u6b65\u64cd\u4f5c\u7684\uff0c\u5373\u5728\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528\u53e6\u4e00\u4e2a\u65b9\u6cd5\u4e4b\u524d\uff0c \u521a\u624d\u7684\u65b9\u6cd5\u8c03\u7528\u5fc5\u987b\u5f7b\u5e95\u5b8c\u6210\u3002 5\u3001checkedList\u3002 \u96c6\u5408\u4e0e\u6570\u7ec4\u7684\u8f6c\u6362 String[] values={..}; HashSet< String > staff=new HashSet<>(Arrays.asList(values)); Object[] vec=staff.toArray(); String[] values = staff.toArray(new String[0]); //\u8fd9\u91cc\u4e5f\u53ef\u4ee5\u662fstaff.size(); \u9057\u7559\u7684\u96c6\u5408 Hashtable\uff0c\u4e0eHashMap\u4f5c\u7528\u4e00\u81f4\uff0c\u4f46\u5176\u65b9\u6cd5\u662f\u540c\u6b65\u7684\uff1b \u9057\u7559\u96c6\u5408\u4f7f\u7528 Enumeration \u63a5\u53e3\u5bf9\u5143\u7d20\u5e8f\u5217\u8fdb\u884c\u904d\u5386\u3002Enumeration \u63a5\u53e3\u6709\u4e24\u4e2a\u65b9\u6cd5\uff0c \u5373 hasMoreElements \u548c nextElement\u3002 \u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4e0e Iterator \u63a5\u53e3\u7684 hasNext \u65b9\u6cd5\u548c next \u65b9\u6cd5\u5341 \u5206\u7c7b\u4f3c\u3002 BitSet\uff0c\u4f4d\u5411\u91cf\uff0c\u548cC++\u4e2dbitset\u6a21\u677f\u529f\u80fd\u4e00\u81f4\u3002","title":"\u96c6\u5408\u6846\u67b6"},{"location":"Java/0_base/#_8","text":"Thread(Runnable target)\u6784\u9020\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff0c\u7528\u4e8e\u8c03\u7528\u7ed9\u5b9a\u76ee\u6807\u7684run\u65b9\u6cd5\u3002 void start( )\u542f\u52a8\u8fd9\u4e2a\u7ebf\u7a0b\uff0c\u5c06\u5f15\u53d1\u8c03\u7528run()\u65b9\u6cd5\u3002\u8fd9\u4e2a\u65b9\u6cd5\u5c06\u7acb\u5373\u8fd4\u56de\uff0c\u5e76\u4e14\u65b0\u7ebf\u7a0b\u5c06\u5e76\u53d1\u8fd0\u884c\u3002 void run( )\u8c03\u7528\u5173\u8054 Runnable\u7684run\u65b9\u6cd5\u3002 \u4e0d\u8981\u8c03\u7528 Thread \u7c7b\u6216 Runnable \u5bf9\u8c61\u7684 run \u65b9\u6cd5\u3002 \u76f4\u63a5\u8c03\u7528 run \u65b9\u6cd5\uff0c \u53ea\u4f1a\u6267\u884c\u540c \u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u4efb\u52a1\uff0c \u800c\u4e0d\u4f1a\u542f\u52a8\u65b0\u7ebf\u7a0b\u3002\u5e94\u8be5\u8c03\u7528 Thread.start() \u65b9\u6cd5\u3002\u7ebf\u7a0bstart()\u65b9\u6cd5\u7684\u542b\u4e49\u662f\uff1a\u5f53\u524d\u7ebf\u7a0b\uff08\u5373parent\u7ebf\u7a0b\uff09\u540c\u6b65\u544a\u77e5Java\u865a\u62df\u673a\uff0c\u53ea\u8981\u7ebf\u7a0b\u89c4\u5212\u5668\u7a7a\u95f2\uff0c\u5e94\u7acb\u5373\u542f\u52a8\u8c03\u7528 start()\u65b9\u6cd5\u7684\u7ebf\u7a0b\u3002 void join(): \u5728A\u7ebf\u7a0b\u4e2d\u8c03\u7528\u4e86B\u7ebf\u7a0b\u5bf9\u8c61\u7684join()\u65b9\u6cd5\uff0c\u5219A\u7ebf\u7a0b\u8981\u7b49\u5f85B\u7ebf\u7a0b\u7ec8\u6b62\u4ee5\u540e\u624d\u80fd\u8fd4\u56de\u3002 \u6784\u9020\u7ebf\u7a0b \u4e00\u4e2a\u65b0\u6784\u9020\u7684\u7ebf\u7a0b\u5bf9\u8c61\u662f\u7531\u5176parent\u7ebf\u7a0b\u6765\u8fdb\u884c\u7a7a\u95f4\u5206\u914d\u7684\uff0c\u800cchild\u7ebf\u7a0b\u7ee7\u627f\u4e86parent\u662f\u5426\u4e3aDaemon\u3001\u4f18\u5148\u7ea7\u548c\u52a0\u8f7d\u8d44\u6e90\u7684contextClassLoader\u4ee5\u53ca\u53ef\u7ee7\u627f\u7684ThreadLocal\uff0c\u540c\u65f6\u8fd8\u4f1a\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684ID\u6765\u6807\u8bc6\u8fd9\u4e2achild\u7ebf\u7a0b\u3002\u81f3\u6b64\uff0c\u4e00\u4e2a\u80fd\u591f\u8fd0\u884c\u7684\u7ebf\u7a0b\u5bf9\u8c61\u5c31\u521d\u59cb\u5316\u597d\u4e86\u3002 private void init(ThreadGroup g, Runnable target, String name,long stackSize, AccessControlContext acc) { if (name == null) { throw new NullPointerException(\"name cannot be null\"); } // \u5f53\u524d\u7ebf\u7a0b\u5c31\u662f\u8be5\u7ebf\u7a0b\u7684\u7236\u7ebf\u7a0b Thread parent = currentThread(); this.group = g; // \u5c06daemon\u3001priority\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u7236\u7ebf\u7a0b\u7684\u5bf9\u5e94\u5c5e\u6027 this.daemon = parent.isDaemon(); this.priority = parent.getPriority(); this.name = name.toCharArray(); this.target = target; setPriority(priority); // \u5c06\u7236\u7ebf\u7a0b\u7684InheritableThreadLocal\u590d\u5236\u8fc7\u6765 if (parent.inheritableThreadLocals != null) this.inheritableThreadLocals=ThreadLocal.createInheritedMap(parent. inheritableThreadLocals); // \u5206\u914d\u4e00\u4e2a\u7ebf\u7a0bID tid = nextThreadID(); } suspend\u3001resume\u3001stop \u5206\u522b\u7528\u6765\u6302\u8d77\u3001\u6062\u590d\u3001\u505c\u6b62\u7ebf\u7a0b\uff0c\u4f5c\u4e3a\u8fc7\u671fAPI\u4e0d\u5efa\u8bae\u4f7f\u7528\uff0c\u6709\u8d1f\u9762\u6548\u679c:\u4ee5suspend()\u65b9\u6cd5\u4e3a\u4f8b\uff0c\u5728\u8c03\u7528\u540e\uff0c\u7ebf\u7a0b\u4e0d\u4f1a\u91ca\u653e\u5df2\u7ecf\u5360\u6709\u7684\u8d44\u6e90\uff08\u6bd4\u5982\u9501\uff09\uff0c\u800c\u662f\u5360\u6709\u7740\u8d44\u6e90\u8fdb\u5165\u7761\u7720\u72b6\u6001\uff0c\u8fd9\u6837\u5bb9\u6613\u5f15\u53d1\u6b7b\u9501\u95ee\u9898\u3002\u540c\u6837\uff0cstop()\u65b9\u6cd5\u5728\u7ec8\u7ed3 \u4e00\u4e2a\u7ebf\u7a0b\u65f6\u4e0d\u4f1a\u4fdd\u8bc1\u7ebf\u7a0b\u7684\u8d44\u6e90\u6b63\u5e38\u91ca\u653e\uff0c\u901a\u5e38\u662f\u6ca1\u6709\u7ed9\u4e88\u7ebf\u7a0b\u5b8c\u6210\u8d44\u6e90\u91ca\u653e\u5de5\u4f5c\u7684\u673a\u4f1a\uff0c \u56e0\u6b64\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u53ef\u80fd\u5de5\u4f5c\u5728\u4e0d\u786e\u5b9a\u72b6\u6001\u4e0b\u3002 \u901a\u8fc7\u6807\u8bc6\u4f4d\u6216\u8005\u4e2d\u65ad\u53ef\u4ee5\u4f7f\u5f97\u7ebf\u7a0b\u5728\u7ec8\u6b62\u65f6\u6709\u673a\u4f1a\u53bb\u6e05\u7406\u8d44\u6e90\uff0c\u800c\u4e0d\u662f\u6b66\u65ad\u5730\u5c06\u7ebf\u7a0b\u7ec8\u6b62\u3002 \u4e2d\u65ad\u7ebf\u7a0b \u7ebf\u7a0b\u6b63\u5e38\u8fd0\u884c\u7ed3\u675f\u6216\u8005\u51fa\u73b0\u4e86\u5728\u65b9\u6cd5\u4e2d\u6ca1\u6709\u6355\u83b7\u7684\u5f02\u5e38\u65f6\uff0c\u7ebf\u7a0b\u5c06\u7ec8\u6b62\u3002\u6ca1\u6709\u53ef\u4ee5\u5f3a\u5236\u7ebf\u7a0b\u7ec8\u6b62\u7684\u65b9\u6cd5\u3002\u7136\u800c\uff0cinterrupt \u65b9\u6cd5\u53ef\u4ee5\u7528\u6765\u8bf7\u6c42\u7ec8\u6b62\u7ebf\u7a0b\u3002 interrupt: \u672c\u7ebf\u7a0b\u4e2d\u65ad\u81ea\u8eab\u662f\u88ab\u5141\u8bb8\u7684\uff0c\u4e14\"\u4e2d\u65ad\u6807\u8bb0\"\u8bbe\u7f6e\u4e3atrue; \u5176\u5b83\u7ebf\u7a0b\u8c03\u7528\u672c\u7ebf\u7a0b\u7684interrupt()\u65b9\u6cd5\u65f6\uff0c\u4f1a\u901a\u8fc7checkAccess()\u68c0\u67e5\u6743\u9650\u3002\u8fd9\u6709\u53ef\u80fd\u629b\u51faSecurityException\u5f02\u5e38\u3002 \u82e5\u7ebf\u7a0b\u88abwait\u3001join\u3001sleep\u65b9\u6cd5\u963b\u585e\u65f6\uff0c\u8c03\u7528interrupt()\u65b9\u6cd5\uff0c\u90a3\u4e48\u201c\u4e2d\u65ad\u72b6\u6001\u201d\u4f1a\u88ab\u6e05\u9664\u5e76\u4e14\u4f1a\u6536\u5230 \u4e00\u4e2aInterruptedException\u5f02\u5e38\u3002 If this thread is blocked in an I/O operation upon an InterruptibleChannel then the channel will be closed, the thread's interrupt status will be set, and the thread will receive a ClosedByInterruptException. If this thread is blocked in a java.nio.channels.Selector then the thread's interrupt status will be set and it will return immediately from the selection operation, possibly with a non-zero value, just as if the selector's wakeup method were invoked. If none of the previous conditions hold then this thread's interrupt status will be set. \u4e2d\u65ad\u4e00\u4e2a\u975e\u6d3b\u52a8\u7ebf\u7a0b\u4e0d\u9700\u8981\u6709\u4efb\u4f55\u6548\u679c. \u5982\u679c\u5728\u4e2d\u65ad\u72b6\u6001\u88ab\u7f6e\u4f4d\u65f6\u8c03\u7528sleep\u65b9\u6cd5\uff0c\u5b83\u4e0d\u4f1a\u4f11\u7720\u3002\u76f8\u53cd\uff0c\u5b83\u5c06\u6e05\u9664\u8fd9\u4e00\u72b6\u6001\u5e76\u62cb\u51faIntemiptedException\u3002 static boolean interrupted()\u6d4b\u8bd5\u5f53\u524d\u7ebf\u7a0b\uff08\u5373\u6b63\u5728\u6267\u884c\u8fd9\u4e00\u547d\u4ee4\u7684\u7ebf\u7a0b\uff09\u662f\u5426\u88ab\u4e2d\u65ad\u3002\u8fd9\u4e00\u8c03\u7528\u4f1a\u4ea7\u751f\u526f\u4f5c\u7528\uff0c \u5b83\u5c06\u5f53\u524d\u7ebf\u7a0b\u7684\u4e2d\u65ad\u72b6\u6001\u91cd\u7f6e\u4e3a false\u3002 isInterrupted\u65b9\u6cd5\u4e5f\u53ef\u7528\u6765\u68c0\u9a8c\u662f\u5426\u6709\u7ebf\u7a0b\u88ab\u4e2d\u65ad\uff0c\u4f46\u5176\u4e0d\u4f1a\u6539\u53d8\u4e2d\u65ad\u72b6\u6001\u3002 \u7ebf\u7a0b\u72b6\u6001 java\u4e2d\u7ebf\u7a0b\u67096\u79cd\u72b6\u6001\uff0cNew\u3001Runnable\u3001Blocked\u3001Waiting\u3001Timed waiting(\u8ba1\u65f6\u7b49\u5f85)\u3001Terminated(\u88ab\u7ec8\u6b62)\uff1b\u901a\u8fc7getState\u65b9\u6cd5\u83b7\u53d6\u7ebf\u7a0b\u72b6\u6001\u3002 NEW : \u4f7f\u7528new\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff0c\u4f46\u8fd8\u672a\u8c03\u7528 start \u65b9\u6cd5\uff1b RUNNABLE : \u4e00\u65e6\u8c03\u7528 start \u65b9\u6cd5\uff0c\u7ebf\u7a0b\u5904\u4e8e runnable \u72b6\u6001\uff0c\u5728JVM\u4e2d\u6267\u884c\uff0c\u4f46\u9700\u8981\u7b49\u5f85\u64cd\u4f5c\u7cfb\u7edf\u5206\u914d\u8d44\u6e90,\u5982CPU; \u56e0\u6b64\u4e00\u4e2a\u53ef\u8fd0\u884c\u7684\u7ebf\u7a0b\u53ef\u80fd\u6b63\u5728\u8fd0\u884c\u4e5f\u53ef\u80fd\u6ca1\u6709\u8fd0\u884c\u3002 BLOCKED : Thread state for a thread blocked waiting for a monitor lock. A thread in the blocked state is waiting for a monitor lock to enter a synchronized block/method or reenter a synchronized block/method after calling Object.wait. WAITING : Thread state for a waiting thread.A thread is in the waiting state due to calling one of the following methods: Object.wait with no timeout\u3001Thread.join with no timeout\u3001 LockSupport.park .A thread in the waiting state is waiting for another thread to perform a particular action. TIMED_WAITING : Thread state for a waiting thread with a specified waiting time. TERMINATED : \u56e0\u4e3a run \u65b9\u6cd5\u6b63\u5e38\u9000\u51fa\u800c\u81ea\u7136\u6b7b\u4ea1 \u6216 \u56e0\u4e3a\u4e00\u4e2a\u6ca1\u6709\u6355\u83b7\u7684\u5f02\u5e38\u7ec8\u6b62\u4e86\u65b9\u6cd5\u800c\u610f\u5916\u6b7b\u4ea1\u3002 \u7ebf\u7a0b\u5c5e\u6027 1\u3001\u7ebf\u7a0b\u4f18\u5148\u7ea7: \u5728Java\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u6709\u4e00\u4e2a\u4f18\u5148\u7ea7\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5b50\u7ebf\u7a0b\u7ee7\u627f\u5b83\u7684\u7236\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\u3002\u53ef\u4ee5\u7528setPriority \u65b9\u6cd5\u63d0\u9ad8\u6216\u964d\u4f4e\u4efb\u4f55\u4e00\u4e2a\u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7\uff1b \u7ebf\u7a0b\u4f18\u5148\u7ea7\u662f\u9ad8\u5ea6\u4f9d\u8d56\u4e8e\u7cfb\u7edf\u7684\u3002\u5f53\u865a\u62df\u673a\u4f9d\u8d56\u4e8e\u5bbf\u4e3b\u673a\u5e73\u53f0\u7684\u7ebf\u7a0b\u5b9e\u73b0\u673a\u5236\u65f6\uff0cJava \u7ebf\u7a0b\u7684\u4f18\u5148\u7ea7 \u88ab\u6620\u5c04\u5230\u5bbf\u4e3b\u673a\u5e73\u53f0\u7684\u4f18\u5148\u7ea7\u4e0a\uff1b \u6bcf\u5f53\u8c03\u5ea6\u5668\u51b3\u5b9a\u8fd0\u884c\u4e00\u4e2a\u65b0\u7ebf\u7a0b\u65f6\uff0c\u9996\u5148\u4f1a\u5728\u5177\u6709\u9ad8\u4f18\u5148\u7ea7\u7684\u7ebf\u7a0b\u4e2d\u8fdb\u884c\u9009\u62e9\uff0c\u53ef\u80fd\u5bfc\u81f4\u4f4e\u4f18\u5148\u7ea7\u7ebf\u7a0b\u9965\u997f\u3002 2\u3001\u5b88\u62a4\u7ebf\u7a0b: \u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 t.setDaemon(true), \u5c06\u7ebf\u7a0b\u8f6c\u6362\u4e3a\u5b88\u62a4\u7ebf\u7a0b(daemon thread)\u3002\u5b88\u62a4\u7ebf\u7a0b\u7684\u552f\u4e00\u7528\u9014 \u662f\u4e3a\u5176\u4ed6\u7ebf\u7a0b\u63d0\u4f9b\u670d\u52a1\uff0c\u4f8b\u5982GC(\u5783\u573e\u56de\u6536\u5668)\uff1b \u53ea\u8981\u5f53\u524dJVM\u5b9e\u4f8b\u4e2d\u5c1a\u5b58\u5728\u4efb\u4f55\u4e00\u4e2a\u975e\u5b88\u62a4\u7ebf\u7a0b\u6ca1\u6709\u7ed3\u675f\uff0c\u5b88\u62a4\u7ebf\u7a0b\u5c31\u5168\u90e8\u5de5\u4f5c\uff1b\u53ea\u6709\u5f53\u6700\u540e\u4e00\u4e2a\u975e\u5b88\u62a4\u7ebf\u7a0b\u7ed3\u675f\u65f6\uff0c \u5b88\u62a4\u7ebf\u7a0b\u968f\u7740JVM\u4e00\u540c\u7ed3\u675f\u5de5\u4f5c \u5b88\u62a4\u7ebf\u7a0b\u5e94\u8be5\u6c38\u8fdc\u4e0d\u53bb\u8bbf\u95ee\u56fa\u6709\u8d44\u6e90\uff0c\u5982\u6587\u4ef6\u3001\u6570\u636e\u5e93\uff0c\u56e0\u4e3a\u5b83\u4f1a\u5728\u4efb\u4f55\u65f6\u5019\u751a\u81f3\u5728\u4e00\u4e2a\u64cd\u4f5c\u7684\u4e2d\u95f4\u53d1\u751f\u4e2d\u65ad\uff0c \u56e0\u4e3a\u53ef\u80fd\u975e\u5b88\u62a4\u7ebf\u7a0b\u5df2\u7ecf\u5168\u90e8\u7ed3\u675f\uff0c\u5219daemon\u7ebf\u7a0b\u4e5f\u4f1a\u968fJVM\u7ed3\u675f\uff0c\u8fd9\u6837daemon\u7ebf\u7a0b\u5bf9\u8d44\u6e90\u7684\u8bfb\u5199\u4e5f\u4f1a\u4e2d\u6b62\uff0c \u5bf9\u7a0b\u5e8f\u9020\u6210\u4e0d\u53ef\u77e5\u7684\u4f24\u5bb3\u3002 3\u3001\u672a\u6355\u83b7\u5f02\u5e38\u5904\u7406\u5668: \u7ebf\u7a0b\u7684run\u65b9\u6cd5\u4e0d\u80fd\u629b\u51fa\u4efb\u4f55\u53d7\u67e5\u5f02\u5e38\uff0c\u4f46\u662f\u975e\u53d7\u67fb\u5f02\u5e38\u4f1a\u5bfc\u81f4\u7ebf\u7a0b\u7ec8\u6b62\u3002\u5728\u8fd9\u79cd\u60c5 \u51b5\u4e0b\uff0c\u7ebf\u7a0b\u5c31\u6b7b\u4ea1\u4e86\u3002 \u4e8b\u5b9e\u4e0a\u4e0d\u9700\u8981\u4efb\u4f55 catch\u5b50\u53e5\u6765\u5904\u7406\u53ef\u4ee5\u88ab\u4f20\u64ad\u7684\u5f02\u5e38\u3002\u76f8\u53cd\uff0c\u5c31\u5728\u7ebf\u7a0b\u6b7b\u4ea1\u4e4b\u524d\uff0c\u5f02\u5e38\u88ab\u4f20\u9012\u5230\u4e00\u4e2a \u7528\u4e8e\u672a\u6355\u83b7\u5f02\u5e38\u7684\u5904\u7406\u5668\u3002\u8be5\u5904\u7406\u5668\u5fc5\u987b\u5c5e\u4e8e\u4e00\u4e2a\u5b9e\u73b0Thread.UncaughtExceptionHandler\u63a5\u53e3\u7684\u7c7b\u3002 wait/notify wait()/wait(long): \u53ea\u6709\u83b7\u7684obj\u7684\u5bf9\u8c61\u9501\u540e\uff0c\u7ebf\u7a0b\u624d\u53ef\u4ee5\u8c03\u7528obj\u7684wait\u65b9\u6cd5\uff0c\u6b64\u65f6\u7ebf\u7a0b\u4f1a\u91ca\u653e\u5df2\u5360\u6709\u7684obj\u7684\u5bf9\u8c61\u9501\uff0c \u5360\u6709\u7684\u5176\u4ed6\u9501\u4e0d\u4f1a\u91ca\u653e\uff0c\u7ebf\u7a0b\u4f1a\u8fdb\u5165obj\u7684waiting set\uff1b obj\u7684notify()\u65b9\u6cd5\u5c06waiting set\u4e2d\u7684\u4e00\u4e2a\u7b49\u5f85\u7ebf\u7a0b\u79fb\u9664\uff0c\u7136\u540e\u5c06\u5176\u79fb\u5230\u540c\u6b65\u961f\u5217\u4e2d\uff0c\u91cd\u65b0\u53c2\u4e0eobj\u5bf9\u8c61\u9501\u7684\u7ade\u4e89; \u800cnotifyAll() \u65b9\u6cd5\u5219\u662f\u5c06\u7b49\u5f85\u961f\u5217\u4e2d\u6240\u6709\u7684\u7ebf\u7a0b\u5168\u90e8\u79fb\u5230\u540c\u6b65\u961f\u5217\uff0c\u88ab\u79fb\u5165\u540c\u6b65\u961f\u5217\u7684\u7ebf\u7a0b\u72b6\u6001\u7531WAITING\u53d8\u4e3a BLOCKED\u3002 wait()/wait(long)\u65b9\u6cd5\u9700\u8981\u653e\u7f6e\u5728\u5faa\u73af\u4f53\u4e2d\uff0c\u5faa\u73af\u6761\u4ef6\u662f condition \u6ca1\u6709\u6ee1\u8db3\u5df2\u7ecf\u5f53\u524d\u7ebf\u7a0b\u6ca1\u6709\u88ab\u4e2d\u65ad\uff1b \u5f53\u7b49\u5f85\u7ebf\u7a0b\u88ab\u5524\u9192\u65f6\u6216\u8005\u8d85\u65f6, \u7ebf\u7a0b\u4f1a\u88ab\u79fb\u5165\u5230obj\u5bf9\u8c61\u9501\u7684\u540c\u6b65\u961f\u5217\u4e2d\uff0c\u91cd\u65b0\u7ade\u4e89\u9501\uff0c\u5982\u679c\u83b7\u5f97\u5bf9\u8c61\u9501\uff0c\u4f1a\u5224\u65ad\u5faa\u73af\u6761\u4ef6\u662f\u5426\u4e3afalse, \u5373\u5982\u679ccondition\u6ee1\u8db3\u6216\u8005\u5f53\u524d\u7ebf\u7a0b\u88ab\u4e2d\u65ad\uff0c\u7ee7\u7eed\u6267\u884c\u540c\u6b65\u5757\u4ee3\u7801\uff0c\u5426\u5219\u7ee7\u7eed\u8fdb\u5165\u5faa\u73af\u4f53\uff0cwait\u3002 \u5982\u679c\u5728\u5f53\u524d\u7ebf\u7a0b\u7b49\u5f85\u901a\u77e5\u4e4b\u524d\u6216\u8005\u6b63\u5728\u7b49\u5f85\u901a\u77e5\u65f6 \u88ab\u4e2d\u65ad\uff0c\u4f1a\u629b\u51faInterruptedException\uff0c\u540c\u65f6\u5f53\u524d\u7ebf\u7a0b\u7684\u4e2d\u65ad\u72b6\u6001\u88ab\u6e05\u9664 \uff0c\u7a0b\u5e8f\u5458\u5e94\u51b3\u5b9a\u5176\u540e\u7684\u64cd\u4f5c\u3002 // \u7b49\u5f85\u65b9 \u83b7\u53d6\u5bf9\u8c61\u9501->\u82e5\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u5219\u8c03\u7528\u5bf9\u8c61\u7684wait\u65b9\u6cd5\uff0c\u88ab\u901a\u77e5\u540e\u4ecd\u8981\u68c0\u6d4b\u6761\u4ef6-> \u6761\u4ef6\u6ee1\u8db3\uff0c\u6267\u884c\u5bf9\u5e94\u7684\u903b\u8f91 synchronized(obj){ while(\u6761\u4ef6\u4e0d\u6ee1\u8db3){ obj.wait(); } // \u6761\u4ef6\u6ee1\u8db3\u540e\u7684\u5904\u7406 } // \u901a\u77e5\u65b9 \u83b7\u53d6\u5bf9\u8c61\u9501->\u6539\u53d8\u6761\u4ef6->\u901a\u77e5\u7b49\u5f85\u5728obj\u4e0a\u7684\u6240\u6709/\u67d0\u4e2a \u7ebf\u7a0b synchronized(obj){ // \u6539\u53d8\u6761\u4ef6\uff0c\u5982\u679c\u8fd9\u91cc\u7684\u6761\u4ef6\u4e0d\u80fd\u4f7f\u5f97\u7b49\u5f85\u65b9\u7684\u6761\u4ef6\u6ee1\u8db3\u5c31\u5524\u9192\u7b49\u5f85\u65b9 // \u5219\u7b49\u5f85\u7ebf\u7a0b\u53ef\u80fd\u968f\u540e\u9677\u5165\u6b7b\u9501\uff0c\u4e00\u76f4\u5728\u7b49\u5f85\uff0c\u56e0\u4e3a\u6ca1\u6709\u5176\u4ed6\u7ebf\u7a0b\u6765\u5524\u9192\u5b83\u4e86\u3002 obj.notifyAll() // or obj.notify() } /* \u7b49\u5f85\u8d85\u65f6\uff0c\u5982\u679c\u5728\u7b49\u5f85\u671f\u95f4\u83b7\u5f97\u7ed3\u679c\uff0c\u5c31\u8fd4\u56de\u7ed3\u679c\uff1b\u5426\u5219\u8d85\u65f6\u4e4b\u540e\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2a\u9ed8\u8ba4\u503c */ // \u5bf9\u5f53\u524d\u5bf9\u8c61\u52a0\u9501 public synchronized Object get(long mills) throws InterruptedException { long future = System.currentTimeMillis() + mills; long remaining = mills; // \u5f53\u8d85\u65f6\u5927\u4e8e0\u5e76\u4e14result\u8fd4\u56de\u503c\u4e0d\u6ee1\u8db3\u8981\u6c42 while ((result == null) && remaining > 0) { wait(remaining); remaining = future - System.currentTimeMillis(); } return result; } Java\u5e76\u53d1\u5305\u4e2d\u7684\u9501 1\u3001Lock\u63a5\u53e3\uff0c\u4e0d\u540c\u4e8esynchronized\u5173\u952e\u5b57\u9690\u5f0f\u5730\u83b7\u53d6\u548c\u91ca\u653e\u9501\uff0cLock\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\u5728\u4f7f\u7528\u65f6\u9700\u8981\u663e\u5f0f\u5730\u83b7\u53d6\u548c\u91ca\u653e\u9501\uff1b ![avatar](../images/java/31.png) Lock\u5e38\u7528\u7684\u5b9e\u73b0\u6709ReentrantLock\uff0c\u4f7f\u7528\u6ce8\u610f\u4e8b\u9879: \u5728finally\u5757\u4e2d\u91ca\u653e\u9501\uff0c\u76ee\u7684\u662f\u4fdd\u8bc1\u5728\u83b7\u53d6\u5230\u9501\u4e4b\u540e\uff0c\u6700\u7ec8\u80fd\u591f\u88ab\u91ca\u653e\u3002 \u4e0d\u9700\u8981\u8981\u5c06\u83b7\u53d6\u9501\u7684\u8fc7\u7a0b\u5199\u5728try\u5757\u4e2d\uff0c\u56e0\u4e3a\u5982\u679c\u5728\u83b7\u53d6\u9501(\u81ea\u5b9a\u4e49\u9501\u7684\u5b9e\u73b0)\u65f6\u53d1\u751f\u4e86\u5f02\u5e38,\u5f02\u5e38\u629b\u51fa\u7684\u540c\u65f6,\u9501\u4f1a\u65e0\u6545\u91ca\u653e\u3002 \u2003 2\u3001AbstractQueuedSynchronizer \u7528\u6765\u6784\u5efa\u9501\u6216\u8005\u5176\u4ed6\u540c\u6b65\u7ec4\u4ef6\u7684\u57fa\u7840\u6846\u67b6; \u652f\u6301\u72ec\u5360\u5f0f\u5730\u83b7\u53d6\u540c\u6b65\u72b6\u6001\uff0c\u4e5f\u652f\u6301\u5171\u4eab\u5f0f\u5730\u83b7\u53d6\u540c\u6b65\u72b6\u6001\u3002 3\u3001\u91cd\u5165\u9501 ReentrantLock,\u91cd\u8fdb\u5165\u662f\u6307\u4efb\u610f\u7ebf\u7a0b\u5728\u83b7\u53d6\u5230\u9501\u4e4b\u540e\u80fd\u591f\u518d\u6b21\u83b7\u53d6\u8be5\u9501\u800c\u4e0d\u4f1a\u88ab\u9501\u6240\u963b\u585e\uff0c \u5373\u652f\u6301\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u8d44\u6e90\u7684\u91cd\u590d\u52a0\u9501\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u652f\u6301\u83b7\u53d6\u9501\u65f6\u7684\u516c\u5e73\u548c\u975e\u516c\u5e73\u6027\u9009\u62e9; \u6240\u8c13\u516c\u5e73\u6027\uff0c\u5373\u7b49\u5f85\u65f6\u95f4\u6700\u957f\u7684\u7ebf\u7a0b\u6700\u4f18\u5148\u83b7\u53d6\u9501\uff0c\u9501\u83b7\u53d6\u662f\u987a\u5e8f\u7684\uff1b\u516c\u5e73\u9501\u7684\u6548\u7387\u4f4e\u4e8e\u975e\u516c\u5e73\u9501\uff0c \u4f46\u80fd\u591f\u51cf\u5c11\u9965\u997f\u53d1\u751f\u7684\u6982\u7387\uff0c\u56e0\u4e3a\u7b49\u5f85\u8d8a\u4e45\u7684\u8bf7\u6c42\u8d8a\u662f\u80fd\u5f97\u5230\u4f18\u5148\u8c03\u5ea6\u3002 \u91cd\u5165\u9501\u4e2d\u9501\u7684\u9ed8\u8ba4\u5b9e\u73b0\u662f\u975e\u516c\u5e73\u6027\u7684: \u516c\u5e73\u6027\u9501\u4fdd\u8bc1\u4e86\u9501\u7684\u83b7\u53d6\u6309\u7167FIFO\u539f\u5219\uff0c\u800c\u4ee3\u4ef7\u662f\u8fdb\u884c\u5927\u91cf\u7684\u7ebf\u7a0b\u5207\u6362\u3002 \u975e\u516c\u5e73\u6027\u9501\u867d\u7136\u53ef\u80fd\u9020\u6210\u7ebf\u7a0b\u201c\u9965\u997f\u201d\uff0c\u4f46\u6781\u5c11\u7684\u7ebf\u7a0b\u5207\u6362\uff0c\u4fdd\u8bc1\u4e86\u5176\u66f4\u5927\u7684\u541e\u5410\u91cf\u3002 \u5b9e\u73b0\u91cd\u8fdb\u5165 : 1\uff09\u7ebf\u7a0b\u518d\u6b21\u83b7\u53d6\u9501\u3002\u9501\u9700\u8981\u53bb\u8bc6\u522b\u83b7\u53d6\u9501\u7684\u7ebf\u7a0b\u662f\u5426\u4e3a\u5f53\u524d\u5360\u636e\u9501\u7684\u7ebf\u7a0b\uff0c\u5982\u679c\u662f\uff0c\u5219\u518d\u6b21\u6210\u529f\u83b7\u53d6\u3002 2\uff09\u9501\u7684\u6700\u7ec8\u91ca\u653e\u3002\u7ebf\u7a0b\u91cd\u590dn\u6b21\u83b7\u53d6\u4e86\u9501\uff0c\u968f\u540e\u5728\u7b2cn\u6b21\u91ca\u653e\u8be5\u9501\u540e\uff0c\u5176\u4ed6\u7ebf\u7a0b\u80fd\u591f\u83b7\u53d6\u5230\u8be5\u9501\u3002 \u9501\u7684\u6700\u7ec8\u91ca\u653e\u8981\u6c42\u9501\u5bf9\u4e8e\u83b7\u53d6\u8fdb\u884c\u8ba1\u6570\u81ea\u589e\uff0c\u8ba1\u6570\u8868\u793a\u5f53\u524d\u9501\u88ab\u91cd\u590d\u83b7\u53d6\u7684\u6b21\u6570\uff0c\u800c\u9501\u88ab\u91ca\u653e\u65f6\uff0c\u8ba1\u6570\u81ea\u51cf\uff0c \u5f53\u8ba1\u6570\u7b49\u4e8e0\u65f6\u8868\u793a\u9501\u5df2\u7ecf\u6210\u529f\u91ca\u653e\u3002 4\u3001\u8bfb\u5199\u9501 ReentrantReadWriteLock\uff0c\u8bfb\u5199\u9501\u5728\u540c\u4e00\u65f6\u523b\u53ef\u4ee5\u5141\u8bb8\u591a\u4e2a\u8bfb\u7ebf\u7a0b\u8bbf\u95ee\uff0c\u4f46\u662f\u5728\u5199\u7ebf\u7a0b\u8bbf\u95ee\u65f6\uff0c \u6240\u6709\u7684\u8bfb\u7ebf\u7a0b\u548c\u5176\u4ed6\u5199\u7ebf\u7a0b\u5747\u88ab\u963b\u585e\u3002\u8bfb\u5199\u9501\u7ef4\u62a4\u4e86\u4e00\u5bf9\u9501\uff0c\u4e00\u4e2a\u8bfb\u9501\u548c\u4e00\u4e2a\u5199\u9501\uff0c\u901a\u8fc7\u5206\u79bb\u8bfb\u9501\u548c\u5199\u9501\uff0c \u4f7f\u5f97\u5e76\u53d1\u6027\u76f8\u6bd4\u4e00\u822c\u7684\u6392\u4ed6\u9501\u6709\u4e86\u5f88\u5927\u63d0\u5347\u3002 ReentrantReadWriteLock\u6709\u4e09\u5927\u7279\u6027: \u652f\u6301\u975e\u516c\u5e73(\u9ed8\u8ba4)\u548c\u516c\u5e73\u7684\u83b7\u53d6\u9501\uff1b \u652f\u6301\u91cd\u8fdb\u5165\uff1a\u8bfb\u7ebf\u7a0b\u5728\u83b7\u53d6\u8bfb\u9501\u540e\uff0c\u80fd\u518d\u6b21\u83b7\u53d6\u8bfb\u9501\uff1b\u5199\u7ebf\u7a0b\u5728\u83b7\u53d6\u5199\u9501\u540e\uff0c\u80fd\u518d\u6b21\u83b7\u53d6\u5199/\u8bfb\u9501\uff1b \u9501\u964d\u7ea7: \u9075\u5faa\u83b7\u53d6\u5199\u9501\u3001\u83b7\u53d6\u8bfb\u9501\u518d\u91ca\u653e\u5199\u9501\u7684\u6b21\u5e8f\uff0c\u5199\u9501\u80fd\u964d\u7ea7\u79f0\u4e3a\u8bfb\u9501\u3002 5\u3001LockSupport\u5de5\u5177 LockSupport\u5b9a\u4e49\u4e86\u4e00\u7ec4\u516c\u5171\u9759\u6001\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u63d0\u4f9b\u4e86\u6700\u57fa\u672c\u7684\u7ebf\u7a0b\u963b\u585e\u548c\u5524\u9192\u529f\u80fd\uff0c \u800cLockSupport\u4e5f\u6210\u4e3a\u6784\u5efa\u540c\u6b65\u7ec4\u4ef6\u7684\u57fa\u7840\u5de5\u5177\u3002 public static void park(Object blocker) //\u963b\u585e\u5f53\u524d\u7ebf\u7a0b,\u9664\u975e\u6709\u5176\u4ed6\u7ebf\u7a0b\u5524\u9192\u6216\u8005\u88ab\u4e2d\u65ad,\u624d\u80fd\u8fd4\u56de public static void parkNanos(Object blocker, long nanos) public static void parkUntil(Object blocker, long deadline) public static void unpark(Thread thread) \u5176\u4e2d\u7684blocker\u662f\u5f53\u524d\u7ebf\u7a0b\u6b63\u5728\u7b49\u5f85\u7684\u5bf9\u8c61\u6216\u8005\u8bf4\u963b\u585e\u5bf9\u8c61\u3002 6\u3001Condition\u63a5\u53e3 \u4efb\u610f\u4e00\u4e2aJava\u5bf9\u8c61\uff0c\u90fd\u62e5\u6709\u4e00\u7ec4\u76d1\u89c6\u5668\u65b9\u6cd5\uff08\u5b9a\u4e49\u5728java.lang.Object\u4e0a\uff09\uff0c \u4e3b\u8981\u5305\u62ecwait()\u3001 wait(long timeout)\u3001notify()\u4ee5\u53canotifyAll()\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4e0esynchronized\u540c\u6b65\u5173\u952e\u5b57\u914d\u5408\uff0c \u53ef\u4ee5\u5b9e\u73b0\u7b49\u5f85/\u901a\u77e5\u6a21\u5f0f\u3002Condition\u63a5\u53e3\u4e5f\u63d0\u4f9b\u4e86await()\u3001signal()\u3001signalAll()\u7b49\u65b9\u6cd5\uff0c \u4e0eLock\u914d\u5408\u5b9e\u73b0\u7b49\u5f85/\u901a\u77e5\u6a21\u5f0f\u3002 \u83b7\u53d6\u4e00\u4e2aCondition\u5bf9\u8c61\u5fc5\u987b\u901a\u8fc7Lock\u7684newCondition()\u65b9\u6cd5\uff0c\u4e00\u4e2a\u9501\u5bf9\u8c61\u53ef\u4ee5\u6709\u4e00\u4e2a\u6216\u591a\u4e2a\u76f8\u5173\u7684\u6761\u4ef6\u5bf9\u8c61\uff1b \u5f53Condition\u5bf9\u8c61\u8c03\u7528await()\u65b9\u6cd5\u540e\uff0c\u5f53\u524d\u7ebf\u7a0b\u4f1a\u91ca\u653e\u9501\u5e76\u5728\u6b64\u7b49\u5f85\uff0c \u800c\u5176\u4ed6\u7ebf\u7a0b\u8c03\u7528Condition\u5bf9\u8c61\u7684signal()\u65b9\u6cd5\uff0c\u901a\u77e5\u5f53\u524d\u7ebf\u7a0b\u540e\uff0c\u5f53\u524d\u7ebf\u7a0b\u624d\u4eceawait()\u65b9\u6cd5\u8fd4\u56de\uff0c \u5e76\u4e14\u5728\u8fd4\u56de\u524d\u5df2\u7ecf\u83b7\u53d6\u4e86\u9501\u3002 signal :\u4ece\u8be5\u6761\u4ef6\u7684\u7b49\u5f85\u96c6\u4e2d\u968f\u673a\u5730\u9009\u62e9\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u89e3\u9664\u5176\u963b\u585e\u72b6\u6001\u3002\u4f46\u662f\u5982\u679c\u968f\u673a\u9009\u62e9\u7684\u7ebf\u7a0b\u53d1\u73b0\u81ea\u5df1\u4ecd\u7136\u4e0d\u80fd\u8fd0\u884c\uff0c \u90a3\u4e48\u5b83\u518d\u6b21\u88ab\u963b\u585e\u3002\u5982\u679c\u6ca1\u6709\u5176\u4ed6\u7ebf\u7a0b\u518d\u6b21\u8c03\u7528signal, \u90a3\u4e48\u7cfb\u7edf\u5c31\u6b7b\u9501\u4e86\u3002 signalAll :\u89e3\u9664\u8be5\u6761\u4ef6\u7684\u7b49\u5f85\u96c6\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u7684\u963b\u585e\u72b6\u6001. \u8c03\u7528signalAll/signall\u4e0d\u4f1a\u7acb\u5373\u6fc0\u6d3b\u4e00\u4e2a\u7b49\u5f85\u7ebf\u7a0b\u3002\u5b83\u4ec5\u4ec5\u89e3\u9664\u7b49\u5f85\u7ebf\u7a0b\u7684\u963b\u585e\uff0c \u4ee5\u4fbf\u8fd9\u4e9b\u7ebf\u7a0b\u53ef\u4ee5\u5728\u5f53\u524d\u7ebf\u7a0b\u9000\u51fa\u540c\u6b65\u65b9\u6cd5\u4e4b\u540e\uff0c\u901a\u8fc7\u7ade\u4e89\u5b9e\u73b0\u5bf9 \u5bf9\u8c61\u7684\u8bbf\u95ee\u3002 Condition\u7684\u5b9e\u73b0: \u64cd\u4f5c\u7684\u5b9e\u9645\u4e0a\u662fAQS\u4e2d\u7684\u9759\u6001\u5185\u90e8\u7c7bConditionObject\uff0c\u6bcf\u4e2aCondition\u5bf9\u8c61\u90fd\u5305\u542b\u7740\u4e00\u4e2a\u961f\u5217\uff08\u4ee5\u4e0b\u79f0\u4e3a\u7b49\u5f85\u961f\u5217\uff09; \u7b49\u5f85\u961f\u5217\u662f\u4e00\u4e2aFIFO\u7684\u961f\u5217\uff0c\u5728\u961f\u5217\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5305\u542b\u4e86\u4e00\u4e2a\u7ebf\u7a0b\u5f15\u7528\uff0c\u8be5\u7ebf\u7a0b\u5c31\u662f\u5728Condition\u5bf9\u8c61\u4e0a\u7b49\u5f85\u7684\u7ebf\u7a0b; \u4e00\u4e2aLock\u53ef\u4ee5\u6709\u591a\u4e2aCondition\u5bf9\u8c61\uff0c\u610f\u5473\u7740\u53ef\u4ee5\u6709\u591a\u4e2a\u7b49\u5f85\u961f\u5217\uff0c\u4f46\u53ea\u6709\u4e00\u4e2a\u540c\u6b65\u961f\u5217; \u8c03\u7528await\u65b9\u6cd5\uff0c\u76f8\u5f53\u4e8e\u540c\u6b65\u961f\u5217\u7684\u9996\u8282\u70b9\uff08\u83b7\u53d6\u4e86\u9501\u7684\u8282\u70b9\uff09\uff0c\u91ca\u653e\u4e86\u540c\u6b65\u72b6\u6001\uff0c\u7136\u540e\u79fb\u5165Condition\u7684\u7b49\u5f85\u961f\u5217\u4e2d; \u8c03\u7528signal()\u65b9\u6cd5\uff0c\u5c06\u4f1a\u5524\u9192\u5728\u7b49\u5f85\u961f\u5217\u4e2d\u7b49\u5f85\u65f6\u95f4\u6700\u957f\u7684\u8282\u70b9\uff08\u9996\u8282\u70b9\uff09\uff0c\u5728\u5524\u9192\u8282\u70b9\u4e4b\u524d\uff0c\u4f1a\u5c06\u8282\u70b9\u79fb\u5230\u540c\u6b65\u961f\u5217\u4e2d; \u963b\u585e\u961f\u5217 \u5f53\u8bd5\u56fe\u5411\u961f\u5217\u6dfb\u52a0\u5143\u7d20\u800c\u961f\u5217\u5df2\u6ee1\uff0c\u6216\u662f\u60f3\u4ece\u961f\u5217\u79fb\u51fa\u5143\u7d20\u800c\u961f\u5217\u4e3a\u7a7a\u7684\u65f6\u5019\uff0c\u963b\u585e\u961f\u5217(blocking queue)\u5bfc\u81f4\u7ebf\u7a0b\u963b\u585e\u3002 \u963b\u585e\u961f\u5217\u65b9\u6cd5: \u7ebf\u7a0b\u5b89\u5168\u7684\u96c6\u5408 ConcurrentHashMap\u3001ConcurrentSkipListMap\u3001ConcurrentSkipListSet \u548c ConcurrentLinkedQueue\u3002 \u7ebf\u7a0b\u5b89\u5168\u7684\u96c6\u5408\u5141\u8bb8\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u64cd\u4f5c\uff0c\u4f46\u4fdd\u8bc1\u6570\u636e\u7ed3\u6784\u4e0d\u4f1a\u88ab\u7834\u574f\uff1b\u5bf9\u4e8e\u975e\u7ebf\u7a0b\u5b89\u5168\u7684\u96c6\u5408\uff0c\u5982HashMap\uff0c\u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u5e76\u53d1\u4fee\u6539\uff0c\u5b83\u4eec\u4f1a\u7834\u574f\u5185\u90e8\u7ed3\u6784 \uff08\u4e00\u4e2a\u94fe\u8868\u6570\u7ec4\uff09\u3002\u6709\u4e9b\u94fe\u63a5\u53ef\u80fd\u4e22\u5931\uff0c \u6216\u8005\u751a\u81f3\u4f1a\u6784\u6210\u5faa\u73af\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u4e0d\u518d\u53ef\u7528\u3002 // ConcurrentHashMap\u539f\u5b50\u66f4\u65b0 ConcurrentHashMap<String, AtomicLong>; ConcurrentHashMap<String, LongAdder>; // \u66f4\u65b0\u4ee3\u7801\u5982\u4e0b map.putIfAbscent(word, new LongAdder()); //\u786e\u4fdd\u6709\u4e00\u4e2aLongAdder\u5b8c\u6210\u539f\u5b50\u81ea\u589e map.get(word).increment(); // \u4e24\u53e5\u53ef\u4ee5\u5408\u5e76 map.putIfAbscent(word, new LongAdder()).increment(); // \u6216\u8005\u91c7\u7528compute\u65b9\u6cd5\uff0cvalue\u4e3anull\u8868\u793a\u76f8\u5e94\u7684key\u4e0d\u5b58\u5728 map.compute(word, (k, v)-> v==null?1:v+1) // \u6216\u8005\u91c7\u7528merge map.merge(word, 1L, (existingValue, newValue)-> existingValue+newValue); map.merge(word, 1L, Long::sum); fork/join\u6846\u67b6 Java 7\u63d0\u4f9b\u7684\u4e00\u4e2a\u7528\u4e8e\u5e76\u884c\u6267\u884c\u4efb\u52a1\u7684\u6846\u67b6\uff0c\u662f\u4e00\u4e2a\u628a\u5927\u4efb\u52a1\u5206\u5272\u6210\u82e5\u5e72\u5c0f\u4efb\u52a1\uff0c\u6700\u7ec8\u6c47\u603b\u6bcf\u4e2a\u5c0f\u4efb\u52a1\u7ed3\u679c\u540e\u5f97\u5230\u5927\u4efb\u52a1\u7ed3\u679c\u7684\u6846\u67b6\u3002 \u5de5\u4f5c\u7a83\u53d6\u7b97\u6cd5: \u4f18\u70b9: \u5145\u5206\u5229\u7528\u7ebf\u7a0b\u8fdb\u884c\u5e76\u884c\u8ba1\u7b97\uff0c\u51cf\u5c11\u4e86\u7ebf\u7a0b\u95f4\u7684\u7ade\u4e89\u3002 \u7f3a\u70b9: \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u8fd8\u662f\u5b58\u5728\u7ade\u4e89\uff0c\u6bd4\u5982\u53cc\u7aef\u961f\u5217\u91cc\u53ea\u6709\u4e00\u4e2a\u4efb\u52a1\u65f6\u3002\u5e76 \u4e14\u8be5\u7b97\u6cd5\u4f1a\u6d88\u8017\u4e86\u66f4\u591a\u7684\u7cfb\u7edf\u8d44\u6e90\uff0c \u6bd4\u5982\u521b\u5efa\u591a\u4e2a\u7ebf\u7a0b\u548c\u591a\u4e2a\u53cc\u7aef\u961f\u5217. \u2003 Fork/Join\u6846\u67b6\u8bbe\u8ba1: \u539f\u5b50\u64cd\u4f5c\u7c7b 1\u3001\u539f\u5b50\u66f4\u65b0\u57fa\u672c\u7c7b\u578b AtomicBoolean\u3001\u3001AtomicLong\u3001AtomicInteger\uff0c\u4ee5AtomicInteger\u4e3a\u4f8b\uff1a int addAndGet\uff08int delta\uff09\uff1a\u4ee5\u539f\u5b50\u65b9\u5f0f\u5c06delta\u4e0e\u5b9e\u4f8b\u4e2d\u7684\u503c\uff08AtomicInteger\u91cc\u7684 value\uff09\u76f8\u52a0\uff0c\u5e76\u8fd4\u56de\u7ed3\u679c\u3002 boolean compareAndSet\uff08int expect\uff0cint update\uff09\uff1a\u5982\u679c\u5f53\u524d\u503c\u7b49\u4e8eexpect\uff0c\u5219\u4ee5\u539f\u5b50\u65b9\u5f0f\u66f4\u65b0\u5f53\u524d\u503c\u4e3aupdate\u3002 int getAndIncrement()\uff1a\u4ee5\u539f\u5b50\u65b9\u5f0f\u5c06\u5f53\u524d\u503c\u52a01\uff0c\u6ce8\u610f\uff0c\u8fd9\u91cc\u8fd4\u56de\u7684\u662f\u81ea\u589e\u524d\u7684\u503c\u3002 int getAndSet\uff08int newValue\uff09\uff1a\u4ee5\u539f\u5b50\u65b9\u5f0f\u8bbe\u7f6e\u4e3anewValue\u7684\u503c\uff0c\u5e76\u8fd4\u56de\u65e7\u503c\u3002 void lazySet\uff08int newValue\uff09\uff1a\u6700\u7ec8\u4f1a\u8bbe\u7f6e\u6210newValue\uff0c\u4f7f\u7528lazySet\u8bbe\u7f6e\u503c\u540e\uff0c \u53ef\u80fd\u5bfc\u81f4\u5176\u4ed6\u7ebf\u7a0b\u5728\u4e4b\u540e\u7684\u4e00\u5c0f\u6bb5\u65f6\u95f4\u5185\u8fd8\u662f\u53ef\u4ee5\u8bfb\u5230\u65e7\u7684\u503c\u3002 \u2003 2\u3001\u539f\u5b50\u66f4\u65b0\u6570\u7ec4 AtomicIntegerArray\u3001AtomicLongArray\u3001AtomicReferenceArray\uff0c\u4ee5AtomicIntegerArray\u4e3a\u4f8b: \u5176\u4e3b\u8981\u63d0\u4f9b\u539f\u5b50\u7684\u65b9\u5f0f\u66f4\u65b0\u6570\u7ec4\u91cc\u7684\u6574\u578b\uff0c\u5e38\u7528\u65b9\u6cd5\u5982\u4e0b: int addAndGet\uff08int i\uff0cint delta\uff09\uff1a\u4ee5\u539f\u5b50\u65b9\u5f0f\u5c06\u8f93\u5165\u503c\u4e0e\u6570\u7ec4\u4e2d\u7d22\u5f15i\u7684\u5143\u7d20\u76f8\u52a0\u3002 boolean compareAndSet\uff08int i\uff0cint expect\uff0cint update\uff09\uff1a\u5982\u679c\u5f53\u524d\u503c\u7b49\u4e8e\u9884\u671f\u503c\uff0c \u5219\u4ee5\u539f\u5b50\u65b9\u5f0f\u5c06\u6570\u7ec4\u4f4d\u7f6ei\u7684\u5143\u7d20\u8bbe\u7f6e\u6210update\u503c\u3002 \u2003 3\u3001\u539f\u5b50\u66f4\u65b0\u5f15\u7528 AtomicReference\uff1a\u539f\u5b50\u66f4\u65b0\u5f15\u7528\u7c7b\u578b; AtomicReferenceFieldUpdater\uff1a\u539f\u5b50\u66f4\u65b0\u5f15\u7528\u7c7b\u578b\u7684\u5b57\u6bb5\u7684\u66f4\u65b0\u5668; AtomicMarkableReference\uff1a\u539f\u5b50\u66f4\u65b0\u5e26\u6709\u6807\u8bb0\u4f4d\u7684\u5f15\u7528\u7c7b\u578b; \u6784\u9020\u65b9\u6cd5\u662fAtomicMarkableReference(V initialRef\uff0cboolean initialMark), \u901a\u8fc7\u68c0\u67e5\u9759\u6001\u7c7bPair\u4e2d\u7684mask\u5b57\u6bb5\u5224\u65ad\u662f\u5426\u53d1\u751f\u8fc7\u4fee\u6539\u3002 \u2003 4\u3001\u539f\u5b50\u66f4\u65b0\u5c5e\u6027(\u5b57\u6bb5) AtomicIntegerFieldUpdater\uff1a\u539f\u5b50\u66f4\u65b0\u6574\u578b\u7684\u5b57\u6bb5\u7684\u66f4\u65b0\u5668; AtomicLongFieldUpdater\uff1a\u539f\u5b50\u66f4\u65b0\u957f\u6574\u578b\u5b57\u6bb5\u7684\u66f4\u65b0\u5668; AtomicStampedReference\uff1a\u539f\u5b50\u66f4\u65b0\u5e26\u6709\u7248\u672c\u53f7\u7684\u5f15\u7528\u7c7b\u578b\u3002\u8be5\u7c7b\u5c06int\u7c7b\u578b\u4e0ereference\u5173\u8054\u8d77\u6765\uff0c \u5176\u4e0eAtomicMarkableReference\u7c7b\u578b\u7c7b\u4f3c\uff0c\u540e\u8005\u662f\u5c06boolean\u7c7b\u578b\u4e0ererence\u5173\u8054\u8d77\u6765\uff1b int\u7c7b\u578b\u503c\u7528\u4f5c \u7248\u672c\u53f7\uff0c\u56e0\u6b64\u53ef\u539f\u5b50\u7684\u66f4\u65b0\u6570\u636e\u548c\u6570\u636e\u7684\u7248\u672c\u53f7\uff0c\u89e3\u51b3\u4e86\u4f7f\u7528CAS\u8fdb\u884c\u539f\u5b50\u66f4\u65b0\u65f6\u53ef\u80fd\u51fa\u73b0\u7684 ABA \u95ee\u9898\u3002 \u5e76\u53d1\u5de5\u5177\u7c7b CountDownLatch : A synchronization aid that allows one or more threads to wait until a set of operations being performed in other threads completes. \u5b9e\u73b0: \u901a\u8fc7\u4e00\u4e2a\u8ba1\u6570\u5668\u6765\u5b9e\u73b0\u7684\uff0c public CountDownLatch(int count) { if (count < 0) throw new IllegalArgumentException(\"count < 0\"); this.sync = new Sync(count); // Sync\u662fAQS\u7684\u5b50\u7c7b } A CountDownLatch initialized to N can be used to make all threads invoking await method wait until N threads have completed some action, or some action has been completed N times( which means the countDown method is called N times). public static void main(){ CountDownLatch doneSignal = new CountDownLatch(N); for(int i=1;i<=N;i++){ new Thread(()->{ doSomething(); donewSignal.countDown(); }).start(); } doneSignale.await(); // wait for all to finish } CycleBarrier : A synchronization aid that allows a set of threads to all wait for each other to reach a common barrier point. CyclicBarriers are useful in programs involving a fixed sized party of threads that must occasionally wait for each other. \u5373\u8ba9\u4e00\u7ec4\u7ebf\u7a0b\u5230\u8fbe\u4e00\u4e2a\u5c4f\u969c\uff08\u4e5f\u53ef\u4ee5\u53eb\u540c\u6b65\u70b9\uff09\u65f6\u88ab\u963b\u585e\uff0c\u76f4\u5230\u6700\u540e\u4e00\u4e2a\u7ebf\u7a0b\u5230\u8fbe\u5c4f\u969c\u65f6\uff0c\u5c4f\u969c\u624d\u4f1a\u5f00\u95e8\uff0c \u6240\u6709\u88ab\u5c4f\u969c\u62e6\u622a\u7684\u7ebf\u7a0b\u624d\u4f1a\u7ee7\u7eed\u8fd0\u884c\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u9700\u8981\u8c03\u7528await\u65b9\u6cd5\u3002 The barrier is called cyclic because it can be re-used after the waiting threads are released. CyclyBarrier\u63d0\u4f9breset\u65b9\u6cd5\uff0c\u53ef\u4ee5\u91cd\u7f6e\u8ba1\u6570\u5668\uff1b\u76f8\u6bd4\u4e4b\u4e0b\uff0cCountDownLatch\u7684\u8ba1\u6570\u5668\u53ea\u80fd\u4f7f\u7528\u4e00\u6b21\u3002 \u4f46\u662f\u8c03\u7528reset\u65b9\u6cd5\u65f6\uff0c\u5982\u679c\u4ecd\u7136\u6709\u7ebf\u7a0b\u5728barrier\u5904\u7b49\u5f85\uff0c\u5219\u4f1a\u629b\u51fa BrokenBarrierException\u3002 \u2003 Semaphore \u4fe1\u53f7\u91cf\uff1b\u53ef\u4ee5\u7ed9\u6784\u9020\u51fd\u6570\u4f20\u5165\u4e00\u4e2aint\u578b\u53c2\u6570\uff0c\u8868\u793a\u6700\u591a\u5141\u8bb8\u5e76\u53d1\u7ebf\u7a0b\u6570\u91cf\uff1b\u6bcf\u4e2a\u7ebf\u7a0b\u901a\u8fc7acquire()\u65b9\u6cd5\u83b7\u53d6\u8bb8\u53ef( \u4e5f\u53ef\u4ee5\u8c03\u7528tryAcquire\u65b9\u6cd5\u5c1d\u8bd5\u83b7\u53d6\u8bb8\u53ef\uff0c\u83b7\u53d6\u5931\u8d25\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u800c\u662f\u8fd4\u56defalse)\uff0c\u901a\u8fc7release\u65b9\u6cd5\u5f52\u8fd8\u8bb8\u53ef\u8bc1\u3002 \u2003 Exchanger Exchanger\uff08\u4ea4\u6362\u8005\uff09\u662f\u4e00\u4e2a\u7528\u4e8e\u7ebf\u7a0b\u95f4\u534f\u4f5c\u7684\u5de5\u5177\u7c7b\u3002Exchanger\u7528\u4e8e\u8fdb\u884c\u7ebf\u7a0b\u95f4\u7684\u6570\u636e\u4ea4\u6362\u3002\u5b83\u63d0\u4f9b\u4e00\u4e2a\u540c\u6b65\u70b9\uff0c \u5728\u8fd9\u4e2a\u540c\u6b65\u70b9\uff0c\u4e24\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u4ea4\u6362\u5f7c\u6b64\u7684\u6570\u636e\u3002\u8fd9\u4e24\u4e2a\u7ebf\u7a0b\u901a\u8fc7 exchange\u65b9\u6cd5\u4ea4\u6362\u6570\u636e\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u5148\u6267\u884cexchange()\u65b9\u6cd5 \uff0c\u5b83\u4f1a\u4e00\u76f4\u7b49\u5f85\u7b2c\u4e8c\u4e2a\u7ebf\u7a0b\u4e5f\u6267\u884cexchange\u65b9\u6cd5\uff0c\u5f53\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u5230\u8fbe\u540c\u6b65\u70b9\u65f6\uff0c\u8fd9\u4e24\u4e2a\u7ebf\u7a0b\u5c31\u53ef\u4ee5\u4ea4\u6362\u6570\u636e\uff0c \u5c06\u672c\u7ebf\u7a0b\u751f\u4ea7\u51fa\u6765\u7684\u6570\u636e\u4f20\u9012\u7ed9\u5bf9\u65b9\u3002 Executor\u6846\u67b6 Executor interface : An object that executes submitted Runnable tasks. This interface provides a way of decoupling task submission from the mechanics of how each task will be run, including details of thread use, scheduling, etc. \u8be5\u63a5\u53e3\u4ec5\u5305\u542b void execute(Runnable command) \u4e00\u4e2a\u65b9\u6cd5\u3002 \u4e24\u7ea7\u8c03\u5ea6\u6a21\u578b : \u5728HotSpot VM\u7684\u7ebf\u7a0b\u6a21\u578b\u4e2d\uff0cJava\u7ebf\u7a0b\uff08java.lang.Thread\uff09\u88ab\u4e00\u5bf9\u4e00\u6620\u5c04\u4e3a\u672c\u5730\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\u3002 Java\u7ebf\u7a0b\u542f\u52a8\u65f6\u4f1a\u521b\u5efa\u4e00\u4e2a\u672c\u5730\u64cd\u4f5c\u7cfb\u7edf\u7ebf\u7a0b\uff1b\u5f53\u8be5Java\u7ebf\u7a0b\u7ec8\u6b62\u65f6\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u7cfb\u7edf\u7ebf \u4e5f\u4f1a\u88ab\u56de\u6536\u3002 \u64cd\u4f5c\u7cfb\u7edf\u4f1a\u8c03\u5ea6\u6240\u6709\u7ebf\u7a0b\u5e76\u4e3a\u5b83\u4eec\u5206\u914d\u7ed9\u53ef\u7528\u7684CPU\u3002 \u5728\u4e0a\u5c42\uff0cJava\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u901a\u5e38\u628a\u5e94\u7528\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u4efb\u52a1\uff0c\u7136\u540e\u4f7f\u7528\u7528\u6237\u7ea7\u7684\u8c03\u5ea6\u5668(Executor\u6846\u67b6)\u5c06 \u8fd9\u4e9b\u4efb\u52a1\u6620\u5c04\u4e3a\u56fa\u5b9a\u6570\u91cf\u7684\u7ebf\u7a0b\uff1b\u5728\u5e95\u5c42\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5c06\u8fd9\u4e9b\u7ebf\u7a0b\u6620\u5c04\u5230\u786c\u4ef6\u5904\u7406\u5668\u4e0a\u3002 \u4e09\u5927\u7ec4\u6210\u90e8\u5206 : 1\u3001\u4efb\u52a1: \u5305\u62ec\u88ab\u6267\u884c\u4efb\u52a1\u9700\u8981\u5b9e\u73b0\u7684\u63a5\u53e3\uff1aRunnable\u63a5\u53e3\u6216Callable\u63a5\u53e3; 2\u3001\u4efb\u52a1\u7684\u6267\u884c: \u5305\u62ec\u4efb\u52a1\u6267\u884c\u673a\u5236\u7684\u6838\u5fc3\u63a5\u53e3Executor\uff0c\u4ee5\u53ca\u7ee7\u627f\u81eaExecutor\u7684 ExecutorService\u63a5\u53e3\u3002 Executor\u6846\u67b6\u6709\u4e24\u4e2a\u5173\u952e\u7c7b\u5b9e\u73b0\u4e86ExecutorService\u63a5\u53e3 \uff08ThreadPoolExecutor\u548cScheduledThreadPoolExecutor\uff09; 3\u3001\u5f02\u6b65\u8ba1\u7b97\u7684\u7ed3\u679c: \u5305\u62ec\u63a5\u53e3Future\u548c\u5b9e\u73b0Future\u63a5\u53e3\u7684FutureTask\u7c7b\u3002 Exextor\u6846\u67b6\u6210\u5458 : 1\u3001 ThreadPoolExecutor ThreadPoolExecutor\u901a\u5e38\u4f7f\u7528\u5de5\u5382\u7c7bExecutors\u6765\u521b\u5efa\uff0cExecutors\u53ef\u4ee5\u521b\u5efa3\u79cd\u7c7b\u578b\u7684ThreadPoolExecutor: SingleThreadExecutor\u3001FixedThreadPool\u548cCachedThreadPool\u3002 2\u3001 ScheduledThreadPoolExecutor \u662fThreadPoolExecutor\u7684\u5b50\u7c7b\uff0c\u540c\u6837\u53ef\u4ee5\u4f7f\u7528Exexutors\u6765\u521b\u5efa\uff0c\u6709\u4e24\u79cd\u7c7b\u578b\uff0c\u4e00\u79cd\u662f\u5305\u542b\u82e5\u5e72\u4e2a\u7ebf\u7a0b\u7684 ScheduledThreadPoolExecutor\uff0c\u4e00\u79cd\u662f\u53ea\u5305\u542b\u4e00\u4e2a\u7ebf\u7a0b\u7684SingleThreadScheduledExecutor\u3002 3\u3001 Future\u63a5\u53e3 Future\u63a5\u53e3\u548c\u5b9e\u73b0Future\u63a5\u53e3\u7684FutureTask\u7c7b\u7528\u6765\u8868\u793a\u5f02\u6b65\u8ba1\u7b97\u7684\u7ed3\u679c\u3002\u5f53\u6211\u4eec\u628aRunnable \u63a5\u53e3\u6216Callable\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b \u63d0\u4ea4\u7ed9ThreadPoolExecutor\u6216ScheduledThreadPoolExecutor\u65f6\uff0cThreadPoolExecutor\u6216 ScheduledThreadPoolExecutor\u4f1a\u5411\u6211\u4eec\u8fd4\u56de\u4e00\u4e2aFutureTask\u5bf9\u8c61\u3002ExexutorService\u63a5\u53e3\u4e2d\u5b9a\u4e49\u4e86\u5982\u4e0bAPI: < T> Future < T> submit(Callable < T> task); < T> Future < T> submit(Runnable task, T result); Future < ?> submit(Runnable task); // \u8fd9\u4e2a\u65b9\u6cd5\u8fd4\u56de\u7684Future\u5bf9\u8c61\u8c03\u7528get()\u8fd4\u56de\u7684\u662fnull 4\u3001 Runnable\u63a5\u53e3\u548cCallable\u63a5\u53e3 Runnable\u63a5\u53e3\u548cCallable\u63a5\u53e3\u7684\u5b9e\u73b0\u7c7b\uff0c\u90fd\u53ef\u4ee5\u88abThreadPoolExecutor\u6216ScheduledThreadPoolExecutor\u6267\u884c\u3002 \u59823, submit\u65b9\u6cd5\u4e2d\u4f1a\u8c03\u7528newTaskFor\u65b9\u6cd5\u628aRunnable\u6216\u8005Callable\u5bf9\u8c61\u5c01\u88c5\u4e3aFutureTask\u5bf9\u8c61 task, \u7136\u540e\u8c03\u7528execute\u65b9\u6cd5,\u5c06task\u4f20\u5165\u5230\u7ebf\u7a0b\u6c60\uff0csubmit\u65b9\u6cd5\u6700\u7ec8\u8fd4\u56detask\u3002 FutureTask JDK1.8\u7248\u672c\u4e2d\u7684\u5b9e\u73b0\u4e0d\u540c\u4e8e\u4e4b\u524d\u7248\u672c\u4e2d\u4f9d\u8d56\u4e8eAQS\uff1bSync control in the current design relies on a \"state\" field updated via CAS to track completion, alon with a simple Treiber stack to hold waiting threads\u3002 RunState : NEW\u3001COMPLETING(\u8868\u793a\u6b63\u5728\u7ed3\u675f\uff0c\u5c1a\u6709\u4e00\u4e9b\u7ed3\u679c\u6ca1\u6709\u5199\u5165)\u3001NORMAL(\u4efb\u52a1\u6b63\u5e38\u7ed3\u675f)\u3001 EXCEPTIONAL\u3001CANCELLED\u3001INTERRUPTING\u3001INTERRUPED(\u7531\u5c0f\u5230\u5927\u6392\u5217) Possible state transitions: NEW -> COMPLETING -> NORMAL NEW -> COMPLETING -> EXCEPTIONAL NEW -> CANCELLED NEW -> INTERRUPTING -> INTERRUPTED \u6784\u9020\u51fd\u6570 : public FutureTask(Callable callable) { if (callable == null) throw new NullPointerException(); this.callable = callable; this.state = NEW; // ensure visibility of callable } public FutureTask(Runnable runnable, V result) { this.callable = Executors.callable(runnable, result); // \u5f53runnable\u6267\u884c\u5b8c\u6210\u65f6\uff0c\u5916\u90e8\u7ebf\u7a0b\u8c03\u7528Future\u5bf9\u8c61\u7684get\u65b9\u6cd5\uff0c // \u53ef\u80fd\u8fd4\u56de null \u6216\u8005\u8fd4\u56de result this.state = NEW; // ensure visibility of callable } run\u65b9\u6cd5 : public void run() { // \u5f53\u524d\u4efb\u52a1\u72b6\u6001\u4e0d\u4e3aNEW\uff0c\u6216\u8005\u5f53\u524d\u4efb\u52a1\u7684runner\u5b57\u6bb5\u4e0d\u4e3anull\uff0c // \u6216runner\u5b57\u6bb5\u4e3anull\uff0c\u5f53\u524d\u7ebf\u7a0b\u89c6\u56fe\u62a2\u5360\u4efb\u52a1\u5931\u8d25(\u88ab\u5176\u4ed6\u7ebf\u7a0b\u62a2\u5360) // \u76f4\u63a5return if (state != NEW || !UNSAFE.compareAndSwapObject(this, runnerOffset, null, Thread.currentThread())) return; try { Callable c = callable; // c!=null: \u9632\u6b62\u4f20\u5165\u7684\u4efb\u52a1\u4e3a\u7a7a // state == NEW, DOUBLE CHECK\uff0c\u9632\u6b62\u4e24\u6b21\u68c0\u6d4b\u4e2d\u95f4\uff0c\u5916\u90e8\u7ebf\u7a0b\u53d6\u6d88\u4e86\u5f53\u524d\u4efb\u52a1 if (c != null && state == NEW) { V result; boolean ran; try { result = c.call(); ran = true; } catch (Throwable ex) { result = null; ran = false; setException(ex); } if (ran) set(result); } } finally { // runner must be non-null until state is settled to // prevent concurrent calls to run() runner = null; // state must be re-read after nulling runner to prevent // leaked interrupts int s = state; if (s >= INTERRUPTING) handlePossibleCancellationInterrupt(s); } } protected void set(V v) { if (UNSAFE.compareAndSwapInt(this, stateOffset, NEW, COMPLETING)) { outcome = v; // \u5c06\u7ed3\u679c\u8d4b\u503c\u7ed9outcome\u540e\uff0c\u4fee\u6539\u5f53\u524d\u4efb\u52a1\u72b6\u6001\u4e3aNORMAL UNSAFE.putOrderedInt(this, stateOffset, NORMAL); // final state finishCompletion(); } } // Removes and signals all waiting threads private void finishCompletion() { // assert state > COMPLETING; //\u5982\u679cq==null,\u8bf4\u660e\u8be5\u4efb\u52a1\u7684\u7b49\u5f85\u94fe\u8868\u4e0a\u7684\u7ebf\u7a0b\u5df2\u7ecf\u5168\u88ab\u5524\u9192 for (WaitNode q; (q = waiters) != null;) { // \u901a\u8fc7CAS\u8bbe\u7f6ewaiters\u4e3anull\uff0c\u907f\u514d\u56e0\u4e3a\u6709\u7ebf\u7a0b\u53d6\u6d88\u4efb\u52a1\uff0c\u51fa\u73b0\u7ade\u4e89 if (UNSAFE.compareAndSwapObject(this, waitersOffset, q, null)) { for (;;) { //\u5524\u9192\u94fe\u8868\u4e0a\u7684\u6240\u6709\u963b\u585e\u7684\u7ebf\u7a0b Thread t = q.thread; if (t != null) { q.thread = null; LockSupport.unpark(t); } WaitNode next = q.next; if (next == null) break; q.next = null; // unlink to help gc q = next; } break; } } done(); // \u81ea\u7531\u5b9e\u73b0\u6269\u5c55\u529f\u80fd callable = null; // to reduce footprint } get\u65b9\u6cd5 : // \u6ce8\u610f\u53ef\u80fd\u6709\u591a\u4e2a\u7ebf\u7a0b\u8c03\u7528get\u65b9\u6cd5 public V get() throws InterruptedException, ExecutionException { int s = state; if (s < = COMPLETING)// \u5f53\u524d\u4efb\u52a1\u5c1a\u672a\u5b8c\u6210\uff0c\u8c03\u7528get\u7684\u5916\u90e8\u7ebf\u7a0b\u4f1a\u88ab\u963b\u585e s = awaitDone(false, 0L); return report(s); } private int awaitDone(boolean timed, long nanos) throws InterruptedException { final long deadline = timed ? System.nanoTime() + nanos : 0L; WaitNode q = null; boolean queued = false; for (;;) { if (Thread.interrupted()) {//\u5f53\u524d\u7ebf\u7a0b\u88ab\u5176\u4ed6\u7ebf\u7a0b\u901a\u8fc7\u4e2d\u65ad\u5524\u9192 removeWaiter(q); throw new InterruptedException(); } int s = state; if (s > COMPLETING) { // \u7ebf\u7a0b\u6b63\u5e38\u7ed3\u675f\u6216\u8005\u88ab\u53d6\u6d88\u6216\u53d1\u751f\u5f02\u5e38 if (q != null) // \u5df2\u4e3a\u5f53\u524d\u7ebf\u7a0b\u521b\u5efa\u4e86WaitNode\uff0c\u4f46\u5728\u5165\u961f\u524d\u4efb\u52a1\u5df2\u7ecf\u5b8c\u6210 // \u4e8e\u662f\u8ba9q.thread = null\uff0c\u8fd4\u56de\u4efb\u52a1\u5f53\u524d\u72b6\u6001 q.thread = null; return s; } else if (s == COMPLETING) // cannot time out yet Thread.yield(); // \u5f53\u524d\u7ebf\u7a0b\u91ca\u653eCPU\uff0c\u8fdb\u884c\u4e0b\u4e00\u6b21\u62a2\u5360 else if (q == null) q = new WaitNode(); else if (!queued) queued = UNSAFE.compareAndSwapObject(this, waitersOffset, q.next = waiters, q); else if (timed) { nanos = deadline - System.nanoTime(); if (nanos < = 0L) { removeWaiter(q); return state; } LockSupport.parkNanos(this, nanos); } else // \u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c\u7ebf\u7a0b\u72b6\u6001\u53d8\u4e3awaiting // \u5982\u679c\u6709\u5916\u90e8\u7ebf\u7a0b\u5524\u9192\u5f53\u524d\u7ebf\u7a0b\uff0c\u6216\u8005\u88ab\u4e2d\u65ad\uff0c\u5219\u4ecepark\u65b9\u6cd5\u8fd4\u56de LockSupport.park(this); } } private void removeWaiter(WaitNode node) { if (node != null) { node.thread = null; retry: for (;;) { // restart on removeWaiter race for (WaitNode pred = null, q = waiters, s; q != null; q = s) { s = q.next; if (q.thread != null) pred = q; else if (pred != null) { // \u8bf4\u660e\u5f53\u524d\u8282\u70b9\u4fdd\u5b58\u7684\u7ebf\u7a0b\u4e3a\u7a7a\uff0c\u800c\u524d\u4e00\u4e2a\u8282\u70b9\u53c8\u4e0d\u662f\u5934\u8282\u70b9 pred.next = s; // \u5219\u8ba9\u524d\u4e00\u4e2a\u8282\u70b9\u6307\u5411\u4e0b\u4e00\u4e2a\u8282\u70b9 if (pred.thread == null) // check for race continue retry; } // \u8bf4\u660e\u8981\u5220\u9664\u7684\u662f\u5934\u8282\u70b9\uff0c\u5219\u901a\u8fc7cas\uff0c\u8ba9waiters\u6307\u5411\u5934\u8282\u70b9\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9 else if (!UNSAFE.compareAndSwapObject(this, waitersOffset, q, s)) continue retry; } break; } } } private V report(int s) throws ExecutionException { // s=normal\u65f6\uff0cx\u662fcallable\u5bf9\u8c61\u8fd4\u56de\u7ed3\u679c\uff1bs=exception\u65f6\uff0cx\u662f\u5f02\u5e38\u7c7b\u578b\u5bf9\u8c61 Object x = outcome; if (s == NORMAL) return (V)x; if (s >= CANCELLED) throw new CancellationException(); throw new ExecutionException((Throwable)x); } cancel\u65b9\u6cd5 public boolean cancel(boolean mayInterruptIfRunning) { // \u5982\u679c\u4efb\u52a1\u72b6\u6001\u4e0d\u4e3aNEW\uff0c\u6216\u8005\u4fee\u6539\u4efb\u52a1\u72b6\u6001\u5931\u8d25\uff0c\u90fd\u4f1a\u76f4\u63a5\u8fd4\u56defalse,\u8868\u793a\u53d6\u6d88\u5931\u8d25 // mayInterruptIfRunning\u4e3aTrue,\u5219\u4f1a\u4fee\u6539\u4efb\u52a1\u72b6\u6001\u4e3aINTERRUPTING\uff0c\u5426\u5219\u4e3aCANCELLED if (!(state == NEW && UNSAFE.compareAndSwapInt(this, stateOffset, NEW, mayInterruptIfRunning ? INTERRUPTING : CANCELLED))) return false; try { // in case call to interrupt throws exception if (mayInterruptIfRunning) { try { // runner\u662f\u5f53\u524d\u6267\u884cFutureTask\u7684\u7ebf\u7a0b // runner\u6709\u53ef\u80fd\u4e3anull,\u5373\u6b64\u65f6\u4efb\u52a1\u4f9d\u65e7\u5b58\u5728\u4efb\u52a1\u961f\u5217\u4e2d\uff0c\u5c1a\u672a\u88ab\u5de5\u4f5c\u7ebf\u7a0b\u83b7\u53d6 Thread t = runner; if (t != null) t.interrupt(); // \u4e2d\u65ad\u5f53\u524d\u7ebf\u7a0b } finally { // final state UNSAFE.putOrderedInt(this, stateOffset, INTERRUPTED); } } } finally { finishCompletion(); } return true; } \u7ebf\u7a0b\u6c60 \u4f7f\u7528\u7ebf\u7a0b\u6c60\u4f18\u70b9: \u964d\u4f4e\u8d44\u6e90\u6d88\u8017\uff1a\u901a\u8fc7\u6c60\u5316\u6280\u672f\u91cd\u590d\u5229\u7528\u5df2\u521b\u5efa\u7684\u7ebf\u7a0b\uff0c\u964d\u4f4e\u7ebf\u7a0b\u521b\u5efa\u548c\u9500\u6bc1\u9020\u6210\u7684\u635f\u8017\u3002 \u63d0\u9ad8\u54cd\u5e94\u901f\u5ea6\uff1a\u4efb\u52a1\u5230\u8fbe\u65f6\uff0c\u65e0\u9700\u7b49\u5f85\u7ebf\u7a0b\u521b\u5efa\u5373\u53ef\u7acb\u5373\u6267\u884c\u3002 \u63d0\u9ad8\u7ebf\u7a0b\u7684\u53ef\u7ba1\u7406\u6027\uff1a\u7ebf\u7a0b\u662f\u7a00\u7f3a\u8d44\u6e90\uff0c\u5982\u679c\u65e0\u9650\u5236\u521b\u5efa\uff0c\u4e0d\u4ec5\u4f1a\u6d88\u8017\u7cfb\u7edf\u8d44\u6e90\uff0c\u8fd8\u4f1a\u56e0\u4e3a\u7ebf\u7a0b\u7684\u4e0d\u5408\u7406\u5206\u5e03 \u5bfc\u81f4\u8d44\u6e90\u8c03\u5ea6\u5931\u8861\uff0c\u964d\u4f4e\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u3002\u4f7f\u7528\u7ebf\u7a0b\u6c60\u53ef\u4ee5\u8fdb\u884c\u7edf\u4e00\u7684\u5206\u914d\u3001\u8c03\u4f18\u548c\u76d1\u63a7\u3002 \u63d0\u4f9b\u6269\u5c55\u6027\u529f\u80fd: \u5141\u8bb8\u5f00\u53d1\u4eba\u5458\u81ea\u5b9a\u4e49\u65b0\u529f\u80fd\uff0c\u6bd4\u5982\u5ef6\u65f6\u5b9a\u65f6\u7ebf\u7a0b\u6c60ScheduledThreadPoolExecutor\uff0c \u5176\u662fThreadPoolExecutor\u7684\u5b50\u7c7b\uff0c\u5141\u8bb8\u4efb\u52a1\u5ef6\u671f\u6267\u884c\u6216\u5b9a\u671f\u6267\u884c\u3002 ThreadPoolExecutor\u5b9e\u73b0: 1\u3001UML\u7c7b\u56fe ExecutorService : a\u3001\u7ee7\u627fExecutor\u63a5\u53e3 b\u3001provides methods to manage termination and methods that can produce a Future for tracking progress of one or more asynchronous tasks. An ExecutorService can be shut down, which will cause it to reject new tasks. Two different methods are provided for shutting down an ExecutorService. The shutdown method will allow previously submitted tasks to execute before terminating, \u800cshutdownNow\u65b9\u6cd5\u963b\u6b62\u7b49\u5f85\u7684\u4efb\u52a1\u542f\u52a8\u5e76\u5c1d\u8bd5\u505c\u6b62\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\u3002\u7ec8\u6b62\u65f6\uff0cExecutor\u6ca1\u6709\u6b63\u5728\u6267\u884c\u7684\u4efb\u52a1\uff0c \u6ca1\u6709\u7b49\u5f85\u6267\u884c\u7684\u4efb\u52a1\uff0c\u4e5f\u4e0d\u80fd\u63d0\u4ea4\u65b0\u4efb\u52a1\u3002\u5e94\u5173\u95ed\u672a\u4f7f\u7528\u7684ExecutorService\u4ee5\u5141\u8bb8\u56de\u6536\u5176\u8d44\u6e90\u3002 c\u3001\u63d0\u4f9bsubmit\u65b9\u6cd5\uff0c\u8fd4\u56deFuture\u7c7b\u578b\u5bf9\u8c61\uff0c\u8868\u660e\u8ba1\u7b97\u7ed3\u679c\u662f\u5f02\u6b65\u7684\uff0c\u901a\u8fc7\u8c03\u7528Future\u5bf9\u8c61\u7684get\u65b9\u6cd5\u963b\u585e\u8c03\u7528\u7ebf\u7a0b\uff0c \u76f4\u81f3\u8fd4\u56de\u7ed3\u679c\u3002 \u2003 2\u3001ThreadPoolExecutor : \u4e3b\u8981\u5c5e\u6027 : corePoolSize:\u6838\u5fc3\u7ebf\u7a0b\u6c60\u7684\u5927\u5c0f; maximumPoolSize:\u6700\u5927\u7ebf\u7a0b\u6c60\u7684\u5927\u5c0f; workQueue:\u7528\u6765\u6682\u65f6\u4fdd\u5b58\u4efb\u52a1\u7684\u5de5\u4f5c\u961f\u5217, \u7c7b\u578b BlockingQueue< Runnable>; handler:\u5c5e\u4e8eRejectedExecutionHandler\u7c7b\u578b, \u5f53ThreadPoolExecutor\u5df2\u7ecf\u5173\u95ed\u6216ThreadPoolExecutor\u5df2\u7ecf\u9971\u548c\u65f6 (\u8fbe\u5230\u4e86\u6700\u5927\u7ebf\u7a0b\u6c60\u5927\u5c0f\u4e14\u5de5\u4f5c\u961f\u5217\u5df2\u6ee1)\uff0cexecute()\u65b9\u6cd5\u5c06\u8981\u8c03\u7528\u7684Handler; keepAliveTime: \u5f53\u7ebf\u7a0b\u6570\u91cf\u5927\u4e8ecorePoolSize, \u5269\u4f59\u7ebf\u7a0b\u7b49\u5f85\u65b0\u4efb\u52a1\u7684\u6700\u957f\u65f6\u95f4\uff0c\u8d85\u65f6\u540e\u5c06\u88ab\u7ec8\u6b62; threadFactory: the factory to use when the executor creates a new thread\u3002 \u7ebf\u7a0b\u6c60\u72b6\u6001 : \u4f7f\u7528\u4e00\u4e2aAtomicInteger\u7c7b\u578b\u53d8\u91cf ctl ,\u7ef4\u62a4\u4e24\u4e2a\u72b6\u6001runState(\u9ad83\u4f4d)\u548cworkerCount(\u4f4e29\u4f4d\uff0c\u8868\u793a\u7ebf\u7a0b\u6570\u91cf); \u56e0\u6b64\u7ebf\u7a0b\u6c60\u6700\u5927\u5bb9\u91cf\u4e0d\u8d85\u8fc72^30-1. RUNNING: Accept new tasks and process queued tasks SHUTDOWN: Don't accept new tasks, but process queued tasks STOP: Don't accept new tasks, don't process queued tasks, and interrupt in-progress tasks TIDYING: All tasks have terminated, workerCount is zero, the thread transitioning to state TIDYING will run the terminated() hook method TERMINATED: terminated() has completed \u8fd9\u4e9b\u503c\u4e4b\u95f4\u7684\u6570\u5b57\u987a\u5e8f\u5f88\u91cd\u8981\uff0c\u4ee5\u5141\u8bb8\u6709\u5e8f\u6bd4\u8f83\u3002\u8fd0\u884c\u72b6\u6001\u4f1a\u968f\u65f6\u95f4\u5355\u8c03\u589e\u52a0\uff0c\u4f46\u4e0d\u5fc5\u547d\u4e2d\u6bcf\u4e2a\u72b6\u6001. The transitions are: RUNNING -> SHUTDOWN On invocation of shutdown(), perhaps implicitly in finalize() (RUNNING or SHUTDOWN) -> STOP On invocation of shutdownNow() SHUTDOWN -> TIDYING When both queue and pool are empty STOP -> TIDYING When pool is empty TIDYING -> TERMINATED When the terminated() hook method has completed \u2003 \u4e09\u79cdThreadPoolExecutor : FixedThreadPool : Executors\u521b\u5efaFixedThreadPool\u65f6, corePoolSize\u548cmaximumPoolSize\u90fd\u88ab\u8bbe\u7f6e\u4e3a\u6307\u5b9a\u7684\u53c2\u6570nThreads; \u4f7f\u7528\u65e0\u754c\u961f\u5217LinkedBlockingQueue\u4f5c\u4e3a\u7ebf\u7a0b\u6c60\u7684\u4efb\u52a1\u961f\u5217(\u961f\u5217\u7684\u5bb9\u91cf\u4e3a Integer.MAX_VALUE); SingleThreadExecutor : corePoolSize\u548cmaximumPoolSize\u90fd\u8bbe\u7f6e\u4e3a1\uff0c\u5176\u4f59\u53c2\u6570\u548cFixedThreadPool\u4e00\u76f4\uff0c\u540c\u6837\u4f7f\u7528 LinkedBlockingQueue\u4f5c\u4e3a\u7ebf\u7a0b\u6c60\u7684\u4efb\u52a1\u961f\u5217; CachedThreadPool : corePoolSize\u88ab\u8bbe\u7f6e\u4e3a0\uff0c\u5373corePool\u4e3a\u7a7a; maximumPoolSize\u88ab\u8bbe\u7f6e\u4e3aInteger.MAX_VALUE, \u5373maximumPool\u662f\u65e0\u754c\u7684;\u4f7f\u7528\u6ca1\u6709\u5bb9\u91cf\u7684SynchronousQueue\u4f5c\u4e3a\u7ebf\u7a0b\u6c60\u7684\u4efb\u52a1\u961f\u5217, \u4f46CachedThreadPool\u7684 maximumPool\u662f\u65e0\u754c\u7684\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u4e3b\u7ebf\u7a0b\u63d0\u4ea4\u4efb\u52a1\u7684\u901f\u5ea6\u9ad8\u4e8emaximumPool\u4e2d\u7ebf\u7a0b\u5904\u7406\u4efb\u52a1\u7684\u901f\u5ea6\u65f6\uff0c CachedThreadPool\u4f1a\u4e0d\u65ad\u521b\u5efa\u65b0\u7ebf\u7a0b\u3002\u6781\u7aef\u60c5\u51b5\u4e0b\uff0cCachedThreadPool\u4f1a\u56e0\u4e3a\u521b\u5efa\u8fc7\u591a\u7ebf\u7a0b\u800c\u8017\u5c3dCPU\u548c\u5185\u5b58\u8d44\u6e90\u3002 \u6ce8\u610f : \u5bf9\u4e8e\u7531FixedThreadPool\u548cSingleThreadExecutor\uff0c\u5b83\u4eec\u7684corePoolSize=maximumPoolSize\uff0c\u4e14 \u90fd\u4f7f\u7528LinkedBlockingQueue(\u53ef\u9009\u6709\u754c\u963b\u585e\u961f\u5217,\u7531\u4e8e\u4f7f\u7528\u9ed8\u8ba4\u5bb9\u91cfIntenger.MAX_VALUE,\u6b64\u65f6\u4e3a\u65e0\u754c)\uff0c \u4e24\u8005\u6267\u884c\u6d41\u7a0b\u7c7b\u4f3c: 1)\u5982\u679c\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u5c11\u4e8ecorePoolSize\uff0c\u5219\u521b\u5efa\u65b0\u7ebf\u7a0b\u6765\u6267\u884c\u4efb\u52a1\u3002 2)\u5728\u7ebf\u7a0b\u6c60\u5b8c\u6210\u9884\u70ed\u4e4b\u540e(\u5f53\u524d\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\u7b49\u4e8ecorePoolSize), \u5c06\u4efb\u52a1\u52a0\u5165LinkedBlockingQueue\u3002 3)\u7ebf\u7a0b\u6267\u884c\u5b8c1\u4e2d\u7684\u4efb\u52a1\u540e\uff0c\u4f1a\u5728\u5faa\u73af\u4e2d\u53cd\u590d\u4eceLinkedBlockingQueue\u83b7\u53d6\u4efb\u52a1\u6765\u6267\u884c\u3002 \u91c7\u7528\u65e0\u754c\u961f\u5217\u7684\u5f71\u54cd: a\u3001\u5f53\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u6570\u8fbe\u5230corePoolSize\u540e\uff0c\u65b0\u4efb\u52a1\u5c06\u5728\u65e0\u754c\u961f\u5217\u4e2d\u7b49\u5f85\uff0c\u56e0\u6b64\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u6570\u4e0d\u4f1a\u8d85\u8fc7corePoolSize\u3002 b\u3001\u7531\u4e8ea\uff0c\u4f7f\u7528\u65e0\u754c\u961f\u5217\u65f6maximumPoolSize\u5c06\u662f\u4e00\u4e2a\u65e0\u6548\u53c2\u6570\u3002 c\u3001\u7531\u4e8ea\u548cb\uff0c\u4f7f\u7528\u65e0\u754c\u961f\u5217\u65f6keepAliveTime\u5c06\u662f\u4e00\u4e2a\u65e0\u6548\u53c2\u6570\u3002 d\u3001\u7531\u4e8e\u4f7f\u7528\u65e0\u754c\u961f\u5217\uff0c\u8fd0\u884c\u4e2d\u7684FixedThreadPool(\u672a\u6267\u884c\u65b9\u6cd5shutdown()\u6216 shutdownNow())\u4e0d\u4f1a\u62d2\u7edd\u4efb\u52a1 (\u4e0d\u4f1a\u8c03\u7528RejectedExecutionHandler\u7c7b\u7684rejectedExecution\u65b9\u6cd5)\u3002 \u9971\u548c\u7b56\u7565 \u5f53\u6709\u754c\u961f\u5217\u8fbe\u5230\u8bbe\u5b9a\u5bb9\u91cf\u65f6\uff0c\u6216\u4efb\u52a1\u88ab\u63d0\u4ea4\u5230\u4e00\u4e2a\u5df2\u88ab\u5173\u95ed\u7684Executor\uff0c\u9971\u548c\u7b56\u7565\u4f1a\u88ab\u6267\u884c\uff0c\u5373\u6267\u884crejectedExecution\u3002 \u9971\u548c\u7b56\u7565\u6709\u56db\u79cd: a\u3001AbortPolicy: \u4e2d\u6b62\u7b56\u7565\uff0c\u629b\u51fa\u672a\u68c0\u67e5\u7684 RejectExecutionException. b\u3001DiscardPolicy: \u76f4\u63a5\u629b\u5f03\u6b64\u65f6\u63d0\u4ea4\u7684\u4efb\u52a1. c\u3001DiscardOldestPolict: \u629b\u5f03workQueue\u961f\u9996\u7684\u4efb\u52a1\uff0c\u7136\u540e\u91cd\u65b0\u63d0\u4ea4(retries execute) d\u3001CallerRunsPolicy: \u4e0d\u4f7f\u7528\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\uff0c\u800c\u662f\u5728\u8c03\u7528execute\u7684\u7ebf\u7a0b\u4e2d(\u5047\u8bbe\u4e3a\u4e3b\u7ebf\u7a0b)\u6267\u884c\u4efb\u52a1\uff0c \u4efb\u52a1\u6267\u884c\u671f\u95f4\uff0c\u5c06\u4e0d\u80fd\u63d0\u4ea4\u65b0\u4efb\u52a1 \u2003 3\u3001SchduledThreadPoolExecutor Executors\u521b\u5efaSchduledThreadPoolExecutor\u65f6maximumPoolSize\u6307\u5b9a\u4e3aIntenger.MAX_VALUE\uff1b\u4e14\u4e3a\u4e86\u5b9e\u73b0\u5ef6\u65f6/\u5468\u671f \u6267\u884c\u4efb\u52a1\uff0cSchduledThreadPoolExecutor\u4f7f\u7528\u79c1\u6709\u5185\u90e8\u7c7bDelayedWorkQueue\u4f5c\u4e3a\u4efb\u52a1\u961f\u5217\u3002 \u6267\u884c\u6d41\u7a0b: 1)\u5f53\u8c03\u7528ScheduledThreadPoolExecutor\u7684scheduleAtFixedRate()\u65b9\u6cd5\u6216\u8005scheduleWithFixedDelay()\u65b9\u6cd5\u65f6, \u4f1a\u5411ScheduledThreadPoolExecutor\u7684DelayedWorkQueue\u6dfb\u52a0\u4e00\u4e2a\u5b9e\u73b0\u4e86RunnableScheduledFuture\u63a5\u53e3\u7684 ScheduledFutureTask\u3002 2)\u7ebf\u7a0b\u6c60\u4e2d\u7684\u7ebf\u7a0b\u4ece\u5de5\u4f5c\u961f\u5217\u4e2d\u83b7\u53d6ScheduledFutureTask\uff0c\u7136\u540e\u6267\u884c\u4efb\u52a1: a\u3001\u7ebf\u7a0b\u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u5df2\u5230\u671f\u7684ScheduledFutureTask,\u5230\u671f\u4efb\u52a1\u662f\u6307ScheduledFutureTask\u7684time\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u65f6\u95f4\u3002 b\u3001\u7ebf\u7a0b\u6267\u884c\u8fd9\u4e2aScheduledFutureTask\u3002 c\u3001\u7ebf\u7a0b\u4fee\u6539ScheduledFutureTask\u7684time\u53d8\u91cf\u4e3a\u4e0b\u6b21\u5c06\u8981\u88ab\u6267\u884c\u7684\u65f6\u95f4\u3002 d\u3001\u7ebf\u7a0b\u628a\u8fd9\u4e2a\u4fee\u6539time\u4e4b\u540e\u7684ScheduledFutureTask\u91cd\u65b0\u52a0\u5165\u5de5\u4f5c\u961f\u5217\u3002 \u2003 DelayedWorkderQueue: A DelayedWorkQueue is based on a heap-based data structure like those in DelayQueue and PriorityQueue, except that every ScheduledFutureTask also records its index(heapindex) into the heap array . This eliminates the need to find a task upon cancellation, greatly speeding up removal (down from O(n) to O(log n)), and reducing garbage retention that would otherwise occur by waiting for the element to rise to top before clearing. But because the queue may also hold RunnableScheduledFutures that are not ScheduledFutureTasks, we are not guaranteed to have such indices available, in which case we fall back to linear search. (We expect that most tasks will not be decorated, and that the faster cases will be much more common.) \u2003 ScheduledFutureTask\uff1a ScheduledThreadPoolExecutor\u7684\u79c1\u6709\u5185\u90e8\u7c7b\uff0c\u4e3b\u8981\u5305\u542b3\u4e2a\u6210\u5458\u53d8\u91cf\uff0c\u5982\u4e0b: long\u578b\u6210\u5458\u53d8\u91cftime\uff0c\u8868\u793a\u8fd9\u4e2a\u4efb\u52a1\u5c06\u8981\u88ab\u6267\u884c\u7684\u5177\u4f53\u65f6\u95f4; long\u578b\u6210\u5458\u53d8\u91cfsequenceNumber\uff0c\u8868\u793a\u8fd9\u4e2a\u4efb\u52a1\u88ab\u6dfb\u52a0\u5230ScheduledThreadPoolExecutor\u4e2d\u7684\u5e8f\u53f7; long\u578b\u6210\u5458\u53d8\u91cfperiod\uff0c\u8868\u793a\u4efb\u52a1\u6267\u884c\u7684\u95f4\u9694\u5468\u671f. DelayQueue\u5c01\u88c5\u4e86\u4e00\u4e2aPriorityQueue\uff0c\u8fd9\u4e2aPriorityQueue\u4f1a\u5bf9\u961f\u5217\u4e2d\u7684ScheduledFutureTask\u8fdb\u884c\u6392\u5e8f\u3002 \u6392\u5e8f\u65f6\uff0ctime\u5c0f\u7684\u6392\u5728\u524d\u9762\uff08\u65f6\u95f4\u65e9\u7684\u4efb\u52a1\u5c06\u88ab\u5148\u6267\u884c\uff09\u3002\u5982\u679c\u4e24\u4e2a ScheduledFutureTask\u7684time\u76f8\u540c\uff0c \u5c31\u6bd4\u8f83sequenceNumber\uff0csequenceNumber\u5c0f\u7684\u6392\u5728\u524d\u9762(\u4e5f\u5c31\u662f\u8bf4,\u5982\u679c\u4e24\u4e2a\u4efb\u52a1\u7684\u6267\u884c\u65f6\u95f4\u76f8\u540c, \u90a3\u4e48\u5148\u63d0\u4ea4\u7684\u4efb\u52a1\u5c06\u88ab\u5148\u6267\u884c)\u3002","title":"\u5e76\u53d1"},{"location":"Java/0_base/#_9","text":"\u96c6\u5408(Collection\u63a5\u53e3\u5b9e\u73b0\u7c7b)\u63d0\u4f9b\u4e86stream()\u548cparallelStream()\u65b9\u6cd5\u53ef\u4ee5\u83b7\u5f97stream\uff1b stream\u5e76\u4e0d\u5b58\u50a8\u5143\u7d20\uff0c\u8fd9\u4e9b\u5143\u7d20\u53ef\u80fd\u5b58\u50a8\u5728\u5e95\u5c42\u7684\u96c6\u5408\u4e2d\uff0c\u6216\u662f\u6309\u9700\u751f\u6210\uff1b stream\u7684\u64cd\u4f5c\u4e0d\u4f1a\u4fee\u6539\u5176\u6570\u636e\uff1b stream\u7684\u64cd\u4f5c\u662f\u5c3d\u53ef\u80fd\u60f0\u6027\u6267\u884c\u7684\uff0c\u5373\u76f4\u81f3\u9700\u8981\u7ed3\u679c\u65f6\uff0c\u64cd\u4f5c\u624d\u4f1a\u6267\u884c\u3002 List<String> words = ...; // \u7edf\u8ba1\u957f\u5ea6\u5927\u4e8e5\u7684\u5355\u8bcd\u4e2a\u6570 long count = words.stream().filter(w->w.length>5).count(); // \u521b\u5efa\u6d41->\u5c06\u521d\u59cb\u6d41\u8f6c\u6362\u4e3a\u5176\u4ed6\u6d41\u7684\u4e2d\u95f4\u64cd\u4f5c\uff0c\u53ef\u80fd\u5305\u542b\u591a\u4e2a\u6b65\u9aa4-> // \u5e94\u7528\u7ec8\u6b62\u64cd\u4f5c\uff0c\u4ea7\u751f\u7ed3\u679c\uff0c\u8fd9\u4e00\u6b65\u4f1a\u5f3a\u5236\u6267\u884c\u524d\u9762\u7684\u60f0\u6027\u64cd\u4f5c\uff1b\u6b64\u540e\u8fd9\u4e2a\u6d41\u5c06\u4e0d\u80fd\u518d\u4f7f\u7528\u3002 \u6d41\u7684\u521b\u5efa Stream<String> stream = Stream.of(String[]) ; //Stream.of(\"a\", \"b\", ..); of\u652f\u6301\u4e0d\u5b9a\u957f\u53c2\u6570 Arrays.stream(array, from, to) ; //\u4ee5[from, to)\u7684\u5143\u7d20\u6784\u5efa\u6d41 Strem.empty(); //\u7a7a\u6d41 // \u65e0\u9650\u6d41 // generate\u63a5\u53d7\u4e00\u4e2aSupplier<T>\u63a5\u53e3\u5bf9\u8c61 s\uff0c\u5176\u53ea\u6709\u4e00\u4e2a T get()\u65b9\u6cd5;\u901a\u8fc7\u53cd\u590d\u8c03\u7528s\u6765\u4ea7\u751f\u503c Stream<String> echos = Stream.generate(()->\"Echo\"); // iterate\u63a5\u53d7\u4e00\u4e2a UnaryOption<T>\uff0c\u5e76\u53cd\u590d\u5c06\u8be5\u51fd\u6570\u5e94\u7528\u5230\u4e4b\u524d\u7684\u7ed3\u679c\u4e0a Strem<BigInteger> integers = Stream.iterate(BigInteger.ZERO, n->n.add(BigInteger.ONE)); \u6d41\u7684\u8f6c\u6362 \u6d41\u7684\u7ea6\u7b80 \u6d41\u7684\u7ea6\u7b80\u662f\u4e00\u79cd\u7ec8\u7ed3\u64cd\u4f5c\uff0c\u5b83\u4eec\u4f1a\u5c06\u6d41\u7ea6\u7b80\u4e3a\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u7684\u975e\u6d41\u503c\u3002 \u4f8b\u5982count()\u4f1a\u8fd4\u56de\u6d41\u4e2d\u5143\u7d20\u7684\u6570\u91cf\uff1b\u7c7b\u4f3c\u7684\u8fd8\u6709max()\u548cmin()\uff0c\u4f46\u5b83\u4eec\u7684\u8fd4\u56de\u7c7b\u578b\u662fOptional< T >,\u5b83\u8981\u4e48\u5728\u5176\u4e2d\u5305\u88c5\u4e86\u7b54\u6848\uff0c\u8981\u4e48\u8868\u793a\u6ca1\u6709\u4efb\u4f55\u503c(\u6d41\u4e3a\u7a7a)\uff0c\u6b64\u5916\u8fd8\u6709findFirst()\u3001findAny()\u7b49\u7ec8\u7ed3\u64cd\u4f5c\u3002","title":"\u6d41"},{"location":"Java/0_base/#_10","text":"\u8282\u70b9\u6d41\uff1a\u8282\u70b9\u6d41\u4ece\u4e00\u4e2a\u7279\u5b9a\u7684\u6570\u636e\u6e90\u8bfb\u5199\u6570\u636e\u3002\u5373\u8282\u70b9\u6d41\u662f\u76f4\u63a5\u64cd\u4f5c\u6587\u4ef6\uff0c\u7f51\u7edc\u7b49\u7684\u6d41\uff1b \u5904\u7406\u6d41\uff1a\u201c\u8fde\u63a5\u201d\u5728\u5df2\u5b58\u5728\u7684\u6d41\uff08\u8282\u70b9\u6d41\u6216\u5904\u7406\u6d41\uff09\u4e4b\u4e0a\uff0c\u901a\u8fc7\u5bf9\u6570\u636e\u7684\u5904\u7406\u4e3a\u7a0b\u5e8f\u63d0\u4f9b\u66f4\u4e3a\u5f3a\u5927\u7684\u8bfb\u5199\u529f\u80fd\u3002\u8fc7\u6ee4\u6d41\u662f\u4f7f\u7528\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u8f93\u5165\u6d41\u6216\u8f93\u51fa\u6d41\u8fde\u63a5\u521b\u5efa\u7684\uff0c\u8fc7\u6ee4\u6d41\u5c31\u662f\u5bf9\u8282\u70b9\u6d41\u8fdb\u884c\u4e00\u7cfb\u5217\u7684\u5305\u88c5\u3002\u4f8b\u5982BufferedInputStream\u548cBufferedOutputStream\uff0c\u4f7f\u7528\u5df2\u7ecf\u5b58\u5728\u7684\u8282\u70b9\u6d41\u6765\u6784\u9020\uff0c\u63d0\u4f9b\u5e26\u7f13\u51b2\u7684\u8bfb\u5199\uff0c\u63d0\u9ad8\u4e86\u8bfb\u5199\u7684\u6548\u7387\uff1b \u901a\u8fc7\u5d4c\u5957\u8fc7\u6ee4\u6d41\u53ef\u4ee5\u5b9e\u73b0\u591a\u91cd\u529f\u80fd\uff1b DataInputStream\u6d41\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u8bfb\u53d6\u6587\u4ef6\uff0c\u63d0\u4f9breadInt\u3001readDouble\u3001readLong\u3001readUTF\u7b49\u65b9\u6cd5\uff0c\u5c06\u8bfb\u5165\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u7c7b\u578b\uff0c\u5176\u4e2dreadUTF\u8bfb\u5165\u7531\"\u4fee\u8ba2\u8fc7\u7684UTF-8\u683c\u5f0f\"\u7684\u5b57\u7b26\u6784\u6210\u7684\u5b57\u7b26\u4e32\u3002 \u64cd\u4f5c\u6587\u4ef6 \u4eceJAVA SE7\u5f00\u59cb\uff0c\u6dfb\u52a0\u4e86Path\u63a5\u53e3\u548cFiles\u7c7b\uff0c\u524d\u8005\u4e3b\u8981\u662f\u6784\u5efa\u548c\u83b7\u53d6\u6587\u4ef6\u8def\u5f84\uff0c\u540e\u8005\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u9759\u6001\u65b9\u6cd5\uff0c\u63a5\u6536Path\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u6765\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u3002\u8fd9\u4e9b\u65b9\u6cd5\u9002\u7528\u4e8e\u4e2d\u7b49\u957f\u5ea6\u7684\u6587\u672c\u6587\u4ef6\uff0c\u5bf9\u4e8e\u6bd4\u8f83\u957f\u7684\u6587\u4ef6\uff0c\u5efa\u8bae\u4f7f\u7528InputStream/OutputStream\uff0c\u6216Reader/Writer\u3002 \u6b63\u5219\u8868\u8fbe\u5f0f","title":"\u8f93\u5165\u8f93\u51fa\u6d41"},{"location":"Java/0_base/#_11","text":"\u5e8f\u5217\u5316\uff1a\u5c06\u5bf9\u8c61\u5199\u5165\u5230IO\u6d41\u4e2d\uff1b\u53cd\u5e8f\u5217\u5316\uff1a\u4eceIO\u6d41\u4e2d\u6062\u590d\u5bf9\u8c61\u3002 \u610f\u4e49\uff1a\u5e8f\u5217\u5316\u673a\u5236\u5141\u8bb8\u5c06\u5b9e\u73b0\u5e8f\u5217\u5316\u7684Java\u5bf9\u8c61\u8f6c\u6362\u4f4d\u5b57\u8282\u5e8f\u5217\uff0c\u8fd9\u4e9b\u5b57\u8282\u5e8f\u5217\u53ef\u4ee5\u4fdd\u5b58\u5728\u78c1\u76d8\u4e0a\uff0c\u6216\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\uff0c\u8fbe\u5230\u4ee5\u540e\u6062\u590d\u6210\u539f\u6765\u7684\u5bf9\u8c61\u3002\u5e8f\u5217\u5316\u673a\u5236\u4f7f\u5f97\u5bf9\u8c61\u53ef\u4ee5\u8131\u79bb\u7a0b\u5e8f\u7684\u8fd0\u884c\u800c\u72ec\u7acb\u5b58\u5728\u3002 1\u3001\u5b9e\u73b0\u65b9\u5f0f \u5982\u679c\u9700\u8981\u5c06\u67d0\u4e2a\u5bf9\u8c61\u4fdd\u5b58\u5230\u78c1\u76d8\u4e0a\u6216\u8005\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7c7b\u5e94\u8be5\u5b9e\u73b0Serializable\u63a5\u53e3\u6216\u8005Externalizable\u63a5\u53e3\u4e4b\u4e00\u3002 Serializable\u63a5\u53e3\u662f\u4e00\u4e2a\u6807\u8bb0\u63a5\u53e3\uff0c\u4e0d\u7528\u5b9e\u73b0\u4efb\u4f55\u65b9\u6cd5\u3002\u4e00\u65e6\u5b9e\u73b0\u4e86\u6b64\u63a5\u53e3\uff0c\u8be5\u7c7b\u7684\u5bf9\u8c61\u5c31\u662f\u53ef\u5e8f\u5217\u5316\u7684. \u6b65\u9aa4: \u6b65\u9aa4\u4e00\uff1a\u521b\u5efa\u4e00\u4e2aObjectOutputStream\u8f93\u51fa\u6d41\uff0c\u4f8b\u5982\u5c06\u5bf9\u8c61\u5e8f\u5217\u5316\u5230\u6587\u4ef6s\uff1a ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(\"object.txt\"))) \u6b65\u9aa4\u4e8c\uff1a\u8c03\u7528ObjectOutputStream\u5bf9\u8c61\u7684writeObject\u8f93\u51fa\u53ef\u5e8f\u5217\u5316\u5bf9\u8c61 oos.writeObject(person); //person\u662f\u4e00\u4e2aPerson\u5bf9\u8c61 // \u5bf9\u4e8e\u57fa\u672c\u7c7b\u578b\u503c\uff0c\u4f7f\u7528\u8bf8\u5982writeInt/readInt\u7c7b\u4f3c\u7684\u65b9\u6cd5\u3002(\u5bf9\u8c61\u6d41\u7c7b\u90fd\u5b9e\u73b0\u4e86DataInput/DateOutput\u63a5\u53e3)\u3002 \u2003 2\u3001\u53cd\u5e8f\u5217\u5316\u6b65\u9aa4\uff0c \u53cd\u5e8f\u5217\u5316\u7684\u987a\u5e8f\u4e0e\u5e8f\u5217\u5316\u65f6\u7684\u987a\u5e8f\u4e00\u81f4 \u6b65\u9aa4\u4e00\uff1a\u521b\u5efa\u4e00\u4e2aObjectInputStream\u8f93\u5165\u6d41\uff1b ObjectInputStream ois = new ObjectInputStream(new FileInputStream(\"person.txt\"))) { \u6b65\u9aa4\u4e8c\uff1a\u8c03\u7528ObjectInputStream\u5bf9\u8c61\u7684readObject()\u5f97\u5230\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u3002 Person brady = (Person) ois.readObject(); \u5bf9\u540c\u4e00\u4e2a\u5bf9\u8c61\u5e8f\u5217\u5316\u591a\u6b21\uff0c\u6d41\u4e2d\u53ea\u4f1a\u51fa\u73b0\u4e00\u6b21 \u2003 3\u3001\u5e8f\u5217\u5316\u8fc7\u7a0b a\u3001\u6240\u6709\u4fdd\u5b58\u5230\u78c1\u76d8\u7684\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u5e8f\u5217\u5316\u7f16\u7801\u53f7\uff1b b\u3001\u5f53\u7a0b\u5e8f\u8bd5\u56fe\u5e8f\u5217\u5316\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u4f1a\u5148\u68c0\u67e5\u6b64\u5bf9\u8c61\u662f\u5426\u5df2\u7ecf\u5e8f\u5217\u5316\u8fc7\uff0c\u53ea\u6709\u6b64\u5bf9\u8c61\u4ece\u672a\uff08\u5728\u6b64\u865a\u62df\u673a\uff09\u88ab\u5e8f\u5217\u5316\u8fc7\uff0c \u624d\u4f1a\u5c06\u6b64\u5bf9\u8c61\u5e8f\u5217\u5316\u4e3a\u5b57\u8282\u5e8f\u5217\u8f93\u51fa\uff1b c\u3001\u5982\u679c\u6b64\u5bf9\u8c61\u5df2\u7ecf\u5e8f\u5217\u5316\u8fc7\uff0c\u5219\u76f4\u63a5\u8f93\u51fa\u7f16\u53f7\u5373\u53ef\u3002 \u2003 4\u3001\u4f7f\u7528transient\u4fee\u9970\u7684\u5c5e\u6027\uff0cjava\u5e8f\u5217\u5316\u65f6\uff0c\u4f1a\u5ffd\u7565\u6389\u6b64\u5b57\u6bb5\uff0c\u6240\u4ee5\u53cd\u5e8f\u5217\u5316\u51fa\u7684\u5bf9\u8c61\uff0c\u88abtransient\u4fee\u9970\u7684\u5c5e\u6027\u662f\u9ed8\u8ba4\u503c\u3002 \u5bf9\u4e8e\u5f15\u7528\u7c7b\u578b\uff0c\u503c\u662fnull\uff1b\u57fa\u672c\u7c7b\u578b\uff0c\u503c\u662f0\uff1bboolean\u7c7b\u578b\uff0c\u503c\u662ffalse\u3002transisent\u4e0d\u80fd\u4fee\u9970\u7c7b\u548c\u65b9\u6cd5\u3002 \u2003 5\u3001\u5e8f\u5217\u5316\u7248\u672c\u53f7 java\u5e8f\u5217\u5316\u63d0\u4f9b\u4e86\u4e00\u4e2aprivate static final long serialVersionUID \u7684\u5e8f\u5217\u5316\u7248\u672c\u53f7\uff0c\u53ea\u8981\u7248\u672c\u53f7\u76f8\u540c\uff0c \u5373\u4f7f\u66f4\u6539\u4e86\u5e8f\u5217\u5316\u5c5e\u6027\uff0c\u5bf9\u8c61\u4e5f\u53ef\u4ee5\u6b63\u786e\u88ab\u53cd\u5e8f\u5217\u5316\u56de\u6765\u3002 \u5982\u679c\u53cd\u5e8f\u5217\u5316\u4f7f\u7528\u7684class\u7684\u7248\u672c\u53f7\u4e0e\u5e8f\u5217\u5316\u65f6\u4f7f\u7528\u7684\u4e0d\u4e00\u81f4\uff0c\u53cd\u5e8f\u5217\u5316\u4f1a\u62a5InvalidClassException\u5f02\u5e38\u3002 \u5e8f\u5217\u5316\u7248\u672c\u53f7\u53ef\u81ea\u7531\u6307\u5b9a\uff0c\u5982\u679c\u4e0d\u6307\u5b9a\uff0cJVM\u4f1a\u6839\u636e\u7c7b\u4fe1\u606f\u81ea\u5df1\u8ba1\u7b97\u4e00\u4e2a\u7248\u672c\u53f7\uff0c\u8fd9\u6837\u968f\u7740class\u7684\u5347\u7ea7\uff0c\u5c31\u65e0\u6cd5\u6b63\u786e\u53cd\u5e8f\u5217\u5316\uff1b \u4e0d\u6307\u5b9a\u7248\u672c\u53f7\u53e6\u4e00\u4e2a\u660e\u663e\u9690\u60a3\u662f\uff0c\u4e0d\u5229\u4e8ejvm\u95f4\u7684\u79fb\u690d\uff0c\u53ef\u80fdclass\u6587\u4ef6\u6ca1\u6709\u66f4\u6539\uff0c\u4f46\u4e0d\u540cjvm\u53ef\u80fd\u8ba1\u7b97\u7684\u89c4\u5219\u4e0d\u4e00\u6837\uff0c \u8fd9\u6837\u4e5f\u4f1a\u5bfc\u81f4\u65e0\u6cd5\u53cd\u5e8f\u5217\u5316\u3002 \u4ec0\u4e48\u60c5\u51b5\u4e0b\u9700\u8981\u4fee\u6539serialVersionUID\u5462\uff1f\u5206\u4e09\u79cd\u60c5\u51b5\u3002 \u2003\u5982\u679c\u53ea\u662f\u4fee\u6539\u4e86\u65b9\u6cd5\uff0c\u53cd\u5e8f\u5217\u5316\u4e0d\u5bb9\u5f71\u54cd\uff0c\u5219\u65e0\u9700\u4fee\u6539\u7248\u672c\u53f7\uff1b \u2003\u5982\u679c\u53ea\u662f\u4fee\u6539\u4e86\u9759\u6001\u53d8\u91cf\uff0c \u77ac\u6001\u53d8\u91cf\uff08transient\u4fee\u9970\u7684\u53d8\u91cf\uff09 \uff0c\u53cd\u5e8f\u5217\u5316\u4e0d\u53d7\u5f71\u54cd\uff0c\u65e0\u9700\u4fee\u6539\u7248\u672c\u53f7\uff1b \u2003\u5982\u679c\u4fee\u6539\u4e86\u975e\u77ac\u6001\u53d8\u91cf\uff0c\u5219\u53ef\u80fd\u5bfc\u81f4\u53cd\u5e8f\u5217\u5316\u5931\u8d25\u3002\u5982\u679c\u65b0\u7c7b\u4e2d\u5b9e\u4f8b\u53d8\u91cf\u7684\u7c7b\u578b\u4e0e\u5e8f\u5217\u5316\u65f6\u7c7b\u7684\u7c7b\u578b\u4e0d\u4e00\u81f4\uff0c \u5219\u4f1a\u53cd\u5e8f\u5217\u5316\u5931\u8d25\uff0c\u8fd9\u65f6\u5019\u9700\u8981\u66f4\u6539serialVersionUID\u3002\u5982\u679c\u53ea\u662f\u65b0\u589e\u4e86\u5b9e\u4f8b\u53d8\u91cf\uff0c\u5219\u53cd\u5e8f\u5217\u5316\u56de\u6765\u65b0\u589e\u7684\u662f\u9ed8\u8ba4\u503c\uff1b \u5982\u679c\u51cf\u5c11\u4e86\u5b9e\u4f8b\u53d8\u91cf\uff0c\u53cd\u5e8f\u5217\u5316\u65f6\u4f1a\u5ffd\u7565\u6389\u51cf\u5c11\u7684\u5b9e\u4f8b\u53d8\u91cf \u2003 6\u3001\u5e8f\u5217\u5316\u5b58\u5728\u7684\u95ee\u9898 \u5982\u679c\u5e8f\u5217\u5316\u4e00\u4e2a\u53ef\u53d8\u5bf9\u8c61\uff08\u5bf9\u8c61\u5185\u7684\u5185\u5bb9\u53ef\u66f4\u6539\uff09\u540e\uff0c\u66f4\u6539\u4e86\u5bf9\u8c61\u5185\u5bb9\uff0c\u518d\u6b21\u5e8f\u5217\u5316\uff0c\u5e76\u4e0d\u4f1a\u518d\u6b21\u5c06\u6b64\u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u8282\u5e8f\u5217\uff0c \u800c\u53ea\u662f\u4fdd\u5b58\u5e8f\u5217\u5316\u7f16\u53f7\u3002 \u2003 7\u3001Externalizable\u63a5\u53e3\u4e0d\u540c\u4e8eSerializable\u63a5\u53e3,\u5b9e\u73b0\u6b64\u63a5\u53e3\u5fc5\u987b\u5b9e\u73b0\u63a5\u53e3\u4e2d\u7684\u4e24\u4e2a\u65b9\u6cd5(writeExternal\u3001readExternal\u65b9\u6cd5) \u5b9e\u73b0\u81ea\u5b9a\u4e49\u5e8f\u5217\u5316\uff0c\u8fd9\u662f\u5f3a\u5236\u6027\u7684\uff1b\u7279\u522b\u4e4b\u5904\u662f\u5fc5\u987b\u63d0\u4f9bpulic\u7684\u65e0\u53c2\u6784\u9020\u5668\uff0c\u56e0\u4e3a\u5728\u53cd\u5e8f\u5217\u5316\u7684\u65f6\u5019\u9700\u8981\u53cd\u5c04\u521b\u5efa\u5bf9\u8c61","title":"\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316"},{"location":"Java/2_concurrency/","text":"\u5e76\u53d1\u7f16\u7a0b\u7684\u827a\u672f \u5e76\u53d1\u673a\u5236\u7684\u5e95\u5c42\u5b9e\u73b0\u539f\u7406 \u591a\u7ebf\u7a0b\u5b89\u5168\u6709\u4e09\u4e2a\u7279\u70b9:\u539f\u5b50\u6027\u3001\u53ef\u89c1\u6027\u3001\u6709\u5e8f\u6027; java\u63d0\u4f9b\u4e86\u4e24\u79cd\u673a\u5236\u5b9e\u73b0\uff0csynchronized\u548cvolatile\uff1bsynchronized\u540c\u8fc7\u52a0\u9501\u5b9e\u73b0\u4e09\u4e2a\u7279\u70b9\uff1b\u4f46volatile \u53ea\u80fd\u4fdd\u8bc1\u53ef\u89c1\u6027\u548c\u6709\u5e8f\u6027\uff0c\u901a\u5e38\u548cCAS\u7ed3\u5408\u6765\u5b9e\u73b0\u539f\u5b50\u6027\u3002 volatile volatile\u662f\u8f7b\u91cf\u7ea7\u7684 synchronized\uff0c\u5b83\u5728\u591a\u5904\u7406\u5668\u5f00\u53d1\u4e2d\u4fdd\u8bc1\u4e86\u5171\u4eab\u53d8\u91cf\u7684\u201c\u53ef\u89c1\u6027\u201d\u3002\u53ef\u89c1\u6027\u7684\u610f\u601d\u662f\u5f53\u4e00\u4e2a\u7ebf\u7a0b \u4fee\u6539\u4e00\u4e2a\u5171\u4eab\u53d8\u91cf\u65f6\uff0c\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u8bfb\u5230\u8fd9\u4e2a\u4fee\u6539\u7684\u503c\u3002\u5982\u679cvolatile\u53d8\u91cf\u4fee\u9970\u7b26\u4f7f\u7528\u6070\u5f53\u7684\u8bdd\uff0c\u5b83\u6bd4synchronized\u7684\u4f7f\u7528\u548c\u6267\u884c\u6210\u672c\u66f4\u4f4e\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5f15\u8d77\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7684\u5207\u6362\u548c\u8c03\u5ea6\u3002 volatile\u89e3\u51b3\u7684\u95ee\u9898: 1\u3001\u591a\u5904\u7406\u5668\u7684\u8ba1\u7b97\u673a\u80fd\u591f\u6682\u65f6\u5728\u5bc4\u5b58\u5668\u6216\u672c\u5730\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\u4fdd\u5b58\u5185\u5b58\u4e2d\u7684\u503c\u3002\u7ed3\u679c\u662f\u8fd0\u884c\u5728\u4e0d\u540c\u5904\u7406\u5668\u4e0a\u7684\u7ebf\u7a0b \u53ef\u80fd\u5728\u540c\u4e00\u4e2a\u5185\u5b58\u4f4d\u7f6e\u53d6\u5230\u4e0d\u540c\u7684\u503c\u3002 2\u3001\u7f16\u8bd1\u5668\u53ef\u4ee5\u6539\u53d8\u6307\u4ee4\u6267\u884c\u7684\u987a\u5e8f\u4ee5\u4f7f\u541e\u5410\u91cf\u6700\u5927\u5316\u3002\u8fd9\u79cd\u987a\u5e8f\u4e0a\u7684\u53d8\u5316\u4e0d\u4f1a\u6539\u53d8\u4ee3\u7801\u8bed\u4e49\uff0c\u4f46\u662f\u7f16\u8bd1\u5668\u5047\u5b9a\u5185\u5b58\u7684\u503c \u4ec5\u4ec5\u5728\u4ee3\u7801\u4e2d\u6709\u663e\u5f0f\u7684\u4fee\u6539\u6307\u4ee4\u65f6\u624d\u4f1a\u6539\u53d8\u3002\u7136\u800c\uff0c\u5185\u5b58\u7684\u503c\u53ef\u4ee5\u88ab\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6539\u53d8\u3002 \u2003 \u5982\u4f55\u4fdd\u8bc1\"\u53ef\u89c1\u6027\": \u5bf9\u6709volatile\u53d8\u91cf\u4fee\u9970\u7684\u5171\u4eab\u53d8\u91cf\u8fdb\u884c\u5199\u64cd\u4f5c\u7684\u65f6\u5019\uff0cJVM\u5c31\u4f1a\u5411\u5904\u7406\u5668\u53d1\u9001\u4e00\u6761Lock\u524d\u7f00\u7684\u6307\u4ee4\uff0c lock\u524d\u7f00\u7684\u6307\u4ee4\u5728\u591a\u6838\u5904\u7406\u5668\u4e0a\u4f1a\u5f15\u53d1\u4e24\u4ef6\u4e8b\u60c5: 1\u3001 \u5c06\u5f53\u524dCPU\u7f13\u5b58\u884c\u7684\u6570\u636e\u5199\u56de\u5230\u7cfb\u7edf\u5185\u5b58 \uff1b 2\u3001 \u4e00\u4e2a\u5904\u7406\u5668\u7684\u7f13\u5b58\u5199\u56de\u5230\u5185\u5b58\u4f1a\u5bfc\u81f4\u5176\u4ed6\u5904\u7406\u5668\u7684\u7f13\u5b58\u65e0\u6548 \uff1a\u5728\u591a\u5904\u7406\u5668\u4e0b\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5404\u4e2a\u5904\u7406\u5668\u7684\u7f13\u5b58\u662f\u4e00\u81f4\u7684\uff0c \u5c31\u4f1a\u5b9e\u73b0\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\uff0c\u6bcf\u4e2a\u5904\u7406\u5668\u901a\u8fc7\u55c5\u63a2\u5728\u603b\u7ebf\u4e0a\u4f20\u64ad\u7684\u6570\u636e\u6765\u68c0\u67e5\u81ea\u5df1\u7f13\u5b58\u7684\u503c\u662f\u4e0d\u662f\u8fc7\u671f\u4e86\uff0c \u5f53\u5904\u7406\u5668\u53d1\u73b0\u81ea\u5df1\u7f13\u5b58\u884c\u5bf9\u5e94\u7684\u5185\u5b58\u5730\u5740\u88ab\u4fee\u6539\uff0c\u5c31\u4f1a\u5c06\u5f53\u524d\u5904\u7406\u5668\u7684\u7f13\u5b58\u884c\u8bbe\u7f6e\u6210\u65e0\u6548\u72b6\u6001\uff0c \u5f53\u5904\u7406\u5668\u5bf9\u8fd9\u4e2a\u6570\u636e\u8fdb\u884c\u4fee\u6539\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u4f1a\u91cd\u65b0\u4ece\u7cfb\u7edf\u5185\u5b58\u4e2d\u628a\u6570\u636e\u8bfb\u5230\u5904\u7406\u5668\u7f13\u5b58\u91cc\u3002 \u2003 \u603b\u7ed3: \u591a\u7ebf\u7a0b\u7a0b\u5e8f\u4efb\u4f55\u5bf9volatile\u4fee\u9970\u7684\u53d8\u91cf\u7684\u8bbf\u95ee\u5747\u9700\u8981\u4ece\u5171\u4eab\u5185\u5b58\u4e2d\u83b7\u53d6\uff0c \u800c\u5bf9\u5b83\u7684\u6539\u53d8\u5fc5\u987b\u540c\u6b65\u5237\u65b0\u56de\u5171\u4eab\u5185\u5b58\uff0c \u5b83\u4fdd\u8bc1\u4e86\u6240\u6709\u7ebf\u7a0b\u5bf9\u53d8\u91cf\u8bbf\u95ee\u7684\u53ef\u89c1\u6027 \u3002 \u2003 volatile\u8bfb\u5199: 1\u3001\u5bf9\u4efb\u610f\u5355\u4e2avolatile\u53d8\u91cf\u7684\u8bfb/\u5199\u5177\u6709\u539f\u5b50\u6027\uff0c\u4f46\u7c7b\u4f3c\u4e8evolatile++\u8fd9\u79cd\u590d\u5408\u64cd\u4f5c\u4e0d\u5177\u6709\u539f\u5b50\u6027\u3002 2\u3001\u5f53\u5199\u4e00\u4e2avolatile\u53d8\u91cf\u65f6\uff0cJMM\u4f1a\u628a\u8be5\u7ebf\u7a0b\u5bf9\u5e94\u7684\u672c\u5730\u5185\u5b58\u4e2d\u7684\u5171\u4eab\u53d8\u91cf\u503c\u5237\u65b0\u5230\u4e3b\u5185\u5b58\u3002 3\u3001\u5f53\u8bfb\u4e00\u4e2avolatile\u53d8\u91cf\u65f6\uff0cJMM\u4f1a\u628a\u8be5\u7ebf\u7a0b\u5bf9\u5e94\u7684\u672c\u5730\u5185\u5b58\u7f6e\u4e3a\u65e0\u6548\u3002\u7ebf\u7a0b\u63a5\u4e0b\u6765\u5c06\u4ece\u4e3b\u5185\u5b58\u4e2d\u8bfb\u53d6\u5171\u4eab\u53d8\u91cf\u3002 \u2003 volatile\u5199-\u8bfb\u5185\u5b58\u8bed\u4e49: 1.\u7ebf\u7a0bA\u5199\u4e00\u4e2avolatile\u53d8\u91cf,\u5b9e\u8d28\u4e0a\u662f\u7ebf\u7a0bA\u5411\u63a5\u4e0b\u6765\u5c06\u8981\u8bfb\u8fd9\u4e2avolatile\u53d8\u91cf\u7684\u67d0\u4e2a\u7ebf\u7a0b\u53d1\u51fa\u4e86(\u5176\u5bf9\u5171\u4eab\u53d8\u91cf\u6240\u505a\u4fee\u6539\u7684)\u6d88\u606f\u3002 2.\u7ebf\u7a0bB\u8bfb\u4e00\u4e2avolatile\u53d8\u91cf,\u5b9e\u8d28\u4e0a\u662f\u7ebf\u7a0bB\u63a5\u6536\u4e86\u4e4b\u524d\u67d0\u4e2a\u7ebf\u7a0b\u53d1\u51fa\u7684(\u5728\u5199\u8fd9\u4e2avolatile\u53d8\u91cf\u4e4b\u524d\u5bf9\u5171\u4eab\u53d8\u91cf\u6240\u505a\u4fee\u6539\u7684)\u6d88\u606f\u3002 3.\u7ebf\u7a0bA\u5199\u4e00\u4e2avolatile\u53d8\u91cf\uff0c\u968f\u540e\u7ebf\u7a0bB\u8bfb\u8fd9\u4e2avolatile\u53d8\u91cf\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u8d28\u4e0a\u662f\u7ebf\u7a0bA\u901a\u8fc7\u4e3b\u5185\u5b58\u5411\u7ebf\u7a0bB\u53d1\u9001\u6d88\u606f\u3002 \u2003 volatile\u5199-\u8bfb\u5185\u5b58\u8bed\u4e49\u5b9e\u73b0:\u57fa\u4e8e\u4fdd\u5b88\u7b56\u7565\u7684JMM\u5185\u5b58\u5c4f\u969c\u63d2\u5165\u7b56\u7565\u3002 \u5728\u6bcf\u4e2avolatile\u5199\u64cd\u4f5c\u7684\u524d\u9762\u63d2\u5165\u4e00\u4e2aStoreStore\u5c4f\u969c; \u5728\u6bcf\u4e2avolatile\u5199\u64cd\u4f5c\u7684\u540e\u9762\u63d2\u5165\u4e00\u4e2aStoreLoad\u5c4f\u969c; \u5728\u6bcf\u4e2avolatile\u8bfb\u64cd\u4f5c\u7684\u524d\u9762\u63d2\u5165\u4e00\u4e2aLoadLoad\u5c4f\u969c; \u5728\u6bcf\u4e2avolatile\u8bfb\u64cd\u4f5c\u7684\u540e\u9762\u63d2\u5165\u4e00\u4e2aLoadStore\u5c4f\u969c\u3002 synchronized 1\u3001synchronized\u5b9e\u73b0\u540c\u6b65\u7684\u4e09\u79cd\u5f62\u5f0f: \u5bf9\u4e8e\u666e\u901a\u540c\u6b65\u65b9\u6cd5\uff0c\u9501\u662f\u5f53\u524d\u5b9e\u4f8b\u5bf9\u8c61; \u5bf9\u4e8e\u9759\u6001\u540c\u6b65\u65b9\u6cd5\uff0c\u9501\u662f\u5f53\u524d\u7c7b\u7684Class\u5bf9\u8c61; \u5bf9\u4e8e\u540c\u6b65\u65b9\u6cd5\u5757\uff0c\u9501\u662fSynchonized\u62ec\u53f7\u91cc\u914d\u7f6e\u7684\u5bf9\u8c61\u3002 JVM\u57fa\u4e8e\u8fdb\u5165\u548c\u9000\u51faMonitor\u5bf9\u8c61\u6765\u5b9e\u73b0\u65b9\u6cd5\u540c\u6b65\u548c\u4ee3\u7801\u5757\u540c\u6b65\uff0c\u4ee3\u7801\u5757\u540c\u6b65\u662f\u4f7f\u7528monitorenter\u548cmonitorexit\u6307\u4ee4\u5b9e\u73b0\u7684\uff1b monitorenter\u6307\u4ee4\u5728\u7f16\u8bd1\u540e\u4f1a\u63d2\u5165\u5230\u540c\u6b65\u4ee3\u7801\u5757\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u800cmonitorexit\u4f1a\u63d2\u5165\u5230\u65b9\u6cd5\u7ed3\u675f\u5904\u548c\u5f02\u5e38\u5904\uff1b \u540c\u6b65\u65b9\u6cd5\u5219\u662f\u4f9d\u9760\u65b9\u6cd5\u4fee\u9970\u7b26\u4e0a\u7684ACC_SYNCHRONIZED(\u7f16\u8bd1\u5668\u81ea\u52a8\u6dfb\u52a0)\u6765\u5b8c\u6210\u7684\u3002 \u65e0\u8bba\u91c7\u7528\u54ea\u79cd\u65b9\u5f0f\uff0c \u5176\u672c\u8d28\u662f\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u7684\u76d1\u89c6\u5668\uff08monitor\uff09\u8fdb\u884c\u83b7\u53d6\uff0c\u800c\u8fd9\u4e2a\u83b7\u53d6\u8fc7\u7a0b\u662f\u6392\u4ed6\u7684 \uff0c \u5373\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u83b7\u53d6\u5230\u7531synchronized\u6240\u4fdd\u62a4\u5bf9\u8c61\u7684\u76d1\u89c6\u5668\u3002 synchronized\u786e\u4fdd\u591a\u4e2a\u7ebf\u7a0b\u5728\u540c\u4e00\u4e2a\u65f6\u523b,\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5904\u4e8e\u65b9\u6cd5\u6216\u8005\u540c\u6b65\u5757\u4e2d, \u4fdd\u8bc1\u4e86\u7ebf\u7a0b\u5bf9\u53d8\u91cf\u8bbf\u95ee\u7684\u53ef\u89c1\u6027\u548c\u6392\u4ed6\u6027 2\u3001 synchronized\u7528\u7684\u9501\u662f\u5b58\u5728Java\u5bf9\u8c61\u5934\u91cc\u7684 \u3002\u5982\u679c\u5bf9\u8c61\u662f\u6570\u7ec4\u7c7b\u578b\uff0c\u5219\u865a\u62df\u673a\u75283\u4e2a\u5b57\u5bbd\uff08Word\uff09\u5b58\u50a8\u5bf9\u8c61\u5934\uff0c \u5982\u679c\u5bf9\u8c61\u662f\u975e\u6570\u7ec4\u7c7b\u578b\uff0c\u5219\u75282\u5b57\u5bbd\u5b58\u50a8\u5bf9\u8c61\u5934\u3002\u572832/64\u4f4d\u865a\u62df\u673a\u4e2d\uff0c1\u5b57\u5bbd\u7b49\u4e8e4/8\u4e2a\u5b57\u8282. 3\u3001\u5728 Java SE 1.6\u4e2d\uff0c\u9501\u4e00\u5171\u67094\u79cd\u72b6\u6001\uff0c\u7ea7\u522b\u4ece\u4f4e\u5230\u9ad8\u4f9d\u6b21\u662f\uff1a\u65e0\u9501\u72b6\u6001\u3001\u504f\u5411\u9501\u72b6\u6001\u3001\u8f7b\u91cf\u7ea7\u9501\u72b6 \u6001\u548c\u91cd\u91cf\u7ea7\u9501\u72b6\u6001\uff0c \u8fd9\u51e0\u4e2a\u72b6\u6001\u4f1a\u968f\u7740\u7ade\u4e89\u60c5\u51b5\u9010\u6e10\u5347\u7ea7\u3002\u9501\u53ef\u4ee5\u5347\u7ea7\u4f46\u4e0d\u80fd\u964d\u7ea7\u3002 \u504f\u5411\u9501 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u9501\u4e0d\u4ec5\u4e0d\u5b58\u5728\u591a\u7ebf\u7a0b\u7ade\u4e89\uff0c\u800c\u4e14\u603b\u662f\u7531\u540c\u4e00\u7ebf\u7a0b\u591a\u6b21\u83b7\u5f97\uff0c\u4e3a\u4e86\u8ba9\u7ebf\u7a0b\u83b7\u5f97\u9501\u7684\u4ee3\u4ef7\u66f4\u4f4e\u800c\u5f15\u5165\u4e86\u504f\u5411\u9501\u3002 \u5f53\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u6b65\u5757\u5e76\u83b7\u53d6\u9501\u65f6\uff0c\u4f1a\u5728\u5bf9\u8c61\u5934\u548c\u6808\u5e27\u4e2d\u7684\u9501\u8bb0\u5f55\u91cc\u5b58\u50a8\u9501\u504f\u5411\u7684\u7ebf\u7a0bID\uff0c\u4ee5\u540e\u8be5\u7ebf\u7a0b\u5728\u8fdb\u5165\u548c\u9000\u51fa\u540c\u6b65\u5757\u65f6\u4e0d\u9700\u8981\u8fdb\u884cCAS\u64cd\u4f5c\u6765\u52a0\u9501\u548c\u89e3\u9501\uff0c\u53ea\u9700\u7b80\u5355\u5730\u6d4b\u8bd5\u4e00\u4e0b\u5bf9\u8c61\u5934\u7684Mark Word\u91cc\u662f\u5426\u5b58\u50a8\u7740\u6307\u5411\u5f53\u524d\u7ebf\u7a0b\u7684\u504f\u5411\u9501\u3002\u5982\u679c\u6d4b\u8bd5\u6210\u529f\uff0c\u8868\u793a\u7ebf\u7a0b\u5df2\u7ecf\u83b7\u5f97\u4e86\u9501\u3002\u5982\u679c\u6d4b\u8bd5\u5931\u8d25\uff0c\u5219\u9700\u8981\u518d\u6d4b\u8bd5\u4e00\u4e0bMark Word\u4e2d\u504f\u5411\u9501\u7684\u6807\u8bc6\u662f\u5426\u8bbe\u7f6e\u62101\uff08\u8868\u793a\u5f53\u524d\u662f\u504f\u5411\u9501\uff09\uff1a\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u4f7f\u7528CAS\u64cd\u4f5c\u83b7\u5f97\u9501\uff1b\u5982\u679c\u8bbe\u7f6e\u4e86\uff0c\u5219\u5c1d\u8bd5\u4f7f\u7528CAS\u5c06\u5bf9\u8c61\u5934\u7684\u504f\u5411\u9501\u6307\u5411\u5f53\u524d\u7ebf\u7a0b\uff0c\u5982\u679c\u5931\u8d25\u5219\u4f1a\u8fdb\u884c\u504f\u5411\u9501\u7684\u64a4\u9500\u3002 \u5f53JVM\u542f\u7528\u4e86\u504f\u5411\u9501\u6a21\u5f0f\uff08JDK6\u4ee5\u4e0a\u9ed8\u8ba4\u5f00\u542f\uff09\uff0c\u65b0\u521b\u5efa\u5bf9\u8c61\u7684Mark Word\u4e2d\u7684Thread Id\u4e3a0\uff0c\u8bf4\u660e\u6b64\u65f6\u5904\u4e8e\u53ef\u504f\u5411 \u4f46\u672a\u504f\u5411\u4efb\u4f55\u7ebf\u7a0b\uff0c\u4e5f\u53eb\u505a\u533f\u540d\u504f\u5411\u72b6\u6001(anonymously biased)\u3002 \u7ebf\u7a0b\u5728\u6267\u884c\u540c\u6b65\u5757\u4e4b\u524d\uff0cJVM\u4f1a\u5148\u5728\u5f53\u524d\u7ebf\u7a0b\u7684\u6808\u6862\u4e2d\u521b\u5efa\u7528\u4e8e\u5b58\u50a8\u9501\u8bb0\u5f55\u7684\u7a7a\u95f4\uff0c\u5e76\u5c06\u5bf9\u8c61\u5934\u4e2d\u7684Mark Word \u590d\u5236\u5230Lock Record\u4e2d\uff0c\u5b98\u65b9\u79f0\u4e3aDisplaced Mark Word\u3002 \u504f\u5411\u9501\u903b\u8f91 1.\u7ebf\u7a0bA\u7b2c\u4e00\u6b21\u8bbf\u95ee\u540c\u6b65\u5757\u65f6\uff0c\u5148\u68c0\u6d4b\u5bf9\u8c61\u5934Mark Word\u4e2d\u7684\u6807\u5fd7\u4f4d\u662f\u5426\u4e3a01\uff0c\u4f9d\u6b64\u5224\u65ad\u6b64\u65f6\u5bf9\u8c61\u9501\u662f\u5426\u5904\u4e8e\u65e0\u9501\u72b6\u6001 \u6216\u8005\u504f\u5411\u9501\u72b6\u6001\uff08\u533f\u540d\u504f\u5411\u9501\uff09\uff1b 2.\u7136\u540e\u5224\u65ad\u504f\u5411\u9501\u6807\u5fd7\u4f4d\u662f\u5426\u4e3a1\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u8fdb\u5165\u8f7b\u91cf\u7ea7\u9501\u903b\u8f91\uff08\u4f7f\u7528CAS\u7ade\u4e89\u9501\uff09\uff0c\u5982\u679c\u662f\uff0c\u5219\u8fdb\u5165\u4e0b\u4e00\u6b65\u6d41\u7a0b\uff1b 3.\u5224\u65ad\u662f\u504f\u5411\u9501\u65f6\uff0c\u68c0\u67e5\u5bf9\u8c61\u5934Mark Word\u4e2d\u8bb0\u5f55\u7684Thread Id\u662f\u5426\u662f\u5f53\u524d\u7ebf\u7a0bID\uff0c\u5982\u679c\u662f\uff0c\u5219\u8868\u660e\u5f53\u524d\u7ebf\u7a0b \u5df2\u7ecf\u83b7\u5f97\u5bf9\u8c61\u9501\uff0c\u4ee5\u540e\u8be5\u7ebf\u7a0b\u8fdb\u5165\u540c\u6b65\u5757\u65f6\uff0c\u4e0d\u9700\u8981CAS\u8fdb\u884c\u52a0\u9501\uff0c\u53ea\u4f1a\u5f80\u5f53\u524d\u7ebf\u7a0b\u7684\u6808\u4e2d\u6dfb\u52a0 \u4e00\u6761Displaced Mark Word\u4e3a\u7a7a\u7684Lock Record\u4e2d\uff0c\u7528\u6765\u7edf\u8ba1\u91cd\u5165\u7684\u6b21\u6570\u3002 \u9000\u51fa\u540c\u6b65\u5757\u91ca\u653e\u504f\u5411\u9501\u65f6\uff0c\u5219\u4f9d\u6b21\u5220\u9664\u5bf9\u5e94Lock Record\uff0c\u4f46\u662f\u4e0d\u4f1a\u4fee\u6539\u5bf9\u8c61\u5934\u4e2d\u7684Thread Id\uff1b \u6ce8\uff1a \u504f\u5411\u9501\u64a4\u9500\u662f\u6307\u5728\u83b7\u53d6\u504f\u5411\u9501\u7684\u8fc7\u7a0b\u4e2d\u56e0\u4e0d\u6ee1\u8db3\u6761\u4ef6\u5bfc\u81f4\u8981\u5c06\u9501\u5bf9\u8c61\u6539\u4e3a\u975e\u504f\u5411\u9501\u72b6\u6001\uff0c \u800c\u504f\u5411\u9501\u91ca\u653e\u662f\u6307\u9000\u51fa\u540c\u6b65\u5757\u65f6\u7684\u8fc7\u7a0b\u3002 4.\u5982\u679c\u5bf9\u8c61\u5934Mark Word\u4e2dThread Id\u4e0d\u662f\u5f53\u524d\u7ebf\u7a0bID\uff0c\u5219\u8fdb\u884cCAS\u64cd\u4f5c\uff0c\u4f01\u56fe\u5c06\u5f53\u524d\u7ebf\u7a0bID\u66ff\u6362\u8fdbMark Word\u3002 \u5982\u679c\u5f53\u524d\u5bf9\u8c61\u9501\u72b6\u6001\u5904\u4e8e\u533f\u540d\u504f\u5411\u9501\u72b6\u6001\uff08\u53ef\u504f\u5411\u672a\u9501\u5b9a\uff09\uff0c\u5219\u4f1a\u66ff\u6362\u6210\u529f\uff08\u5c06Mark Word\u4e2d\u7684Thread id\u7531\u533f\u540d0 \u6539\u6210\u5f53\u524d\u7ebf\u7a0bID\uff0c\u5728\u5f53\u524d\u7ebf\u7a0b\u6808\u4e2d\u627e\u5230\u5185\u5b58\u5730\u5740\u6700\u9ad8(\u6808\u5e95\uff0c\u6700\u5148\u5165\u6808)\u7684\u53ef\u7528Lock Record\uff0c\u5c06\u7ebf\u7a0bID\u5b58\u5165),\u83b7\u53d6\u5230\u9501\uff0c \u6267\u884c\u540c\u6b65\u4ee3\u7801\u5757\uff1b 5.\u5982\u679c\u5bf9\u8c61\u9501\u5df2\u7ecf\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5360\u7528\uff0c\u5219\u4f1a\u66ff\u6362\u5931\u8d25\uff0c\u5f00\u59cb\u8fdb\u884c\u504f\u5411\u9501\u64a4\u9500\uff0c\u8fd9\u4e5f\u662f\u504f\u5411\u9501\u7684\u7279\u70b9\uff0c \u4e00\u65e6\u51fa\u73b0\u7ebf\u7a0b\u7ade\u4e89\uff0c \u5c31\u4f1a\u64a4\u9500\u504f\u5411\u9501 \uff1b 6. \u504f\u5411\u9501\u7684\u64a4\u9500\u9700\u8981\u7b49\u5f85\u5168\u5c40\u5b89\u5168\u70b9\uff08safe point\uff0c\u4ee3\u8868\u4e86\u4e00\u4e2a\u72b6\u6001\uff0c\u5728\u8be5\u72b6\u6001\u4e0b\u6240\u6709\u7ebf\u7a0b\u90fd\u662f\u6682\u505c\u7684\uff09 , \u6682\u505c\u6301\u6709\u504f\u5411\u9501\u7684\u7ebf\u7a0b\uff0c\u68c0\u67e5\u6301\u6709\u504f\u5411\u9501\u7684\u7ebf\u7a0b\u72b6\u6001\uff08\u904d\u5386\u5f53\u524dJVM\u7684\u6240\u6709\u7ebf\u7a0b\uff0c\u5982\u679c\u80fd\u627e\u5230\uff0c\u5219\u8bf4\u660e\u504f\u5411\u7684\u7ebf\u7a0b\u8fd8\u5b58\u6d3b), \u5982\u679c\u7ebf\u7a0b\u8fd8\u5b58\u6d3b\uff0c\u5219\u68c0\u67e5\u7ebf\u7a0b\u662f\u5426\u5728\u6267\u884c\u540c\u6b65\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\uff0c\u5982\u679c\u662f\uff0c\u5219\u5347\u7ea7\u4e3a\u8f7b\u91cf\u7ea7\u9501\uff0c\u8fdb\u884cCAS\u7ade\u4e89\u9501\uff1b \u6ce8\uff1a\u6bcf\u6b21\u8fdb\u5165\u540c\u6b65\u5757\uff08\u5373\u6267\u884cmonitorenter\uff09\u7684\u65f6\u5019\u90fd\u4f1a\u4ee5\u5730\u5740\u4ece\u9ad8\u5230\u4f4e\u7684\u987a\u5e8f(\u4ece\u6808\u5e95\u5230\u6808\u9876)\u5728\u6808\u4e2d\u627e\u5230 \u7b2c\u4e00\u4e2a\u53ef\u7528\u7684Lock Record\uff0c\u5e76\u8bbe\u7f6e\u504f\u5411\u7ebf\u7a0bID\uff1b\u6bcf\u6b21\u89e3\u9501\uff08\u5373\u6267\u884cmonitorexit\uff09\u7684\u65f6\u5019\u90fd\u4f1a\u5c06\u6808\u9876\u7684Lock Record \u79fb\u9664\u3002\u6240\u4ee5\u5982\u679c\u80fd\u627e\u5230\u5bf9\u5e94\u7684Lock Record\u8bf4\u660e\u504f\u5411\u7684\u7ebf\u7a0b\u8fd8\u5728\u6267\u884c\u540c\u6b65\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\u3002 7.\u5982\u679c\u6301\u6709\u504f\u5411\u9501\u7684\u7ebf\u7a0b\u672a\u5b58\u6d3b\uff0c\u6216\u8005\u6301\u6709\u504f\u5411\u9501\u7684\u7ebf\u7a0b\u672a\u5728\u6267\u884c\u540c\u6b65\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\uff0c\u5219\u8fdb\u884c\u6821\u9a8c\u662f\u5426\u5141\u8bb8\u91cd\u504f\u5411\uff0c \u5982\u679c\u4e0d\u5141\u8bb8\u91cd\u504f\u5411\uff0c\u5219\u64a4\u9500\u504f\u5411\u9501\uff0c\u5c06Mark Word\u8bbe\u7f6e\u4e3a\u65e0\u9501\u72b6\u6001\uff08\u672a\u9501\u5b9a\u4e0d\u53ef\u504f\u5411\u72b6\u6001\uff09\uff0c\u7136\u540e\u5347\u7ea7\u4e3a\u8f7b\u91cf\u7ea7\u9501\uff0c \u8fdb\u884cCAS\u7ade\u4e89\u9501\uff1b 8.\u5982\u679c\u5141\u8bb8\u91cd\u504f\u5411\uff0c\u8bbe\u7f6e\u4e3a\u533f\u540d\u504f\u5411\u9501\u72b6\u6001,CAS\u5c06\u504f\u5411\u9501\u91cd\u65b0\u6307\u5411\u65b0\u7ebf\u7a0b\uff08\u5728\u5bf9\u8c61\u5934\u548c\u7ebf\u7a0b\u6808\u5e27\u7684\u9501\u8bb0\u5f55\u4e2d\u5b58\u50a8\u5f53\u524d \u7ebf\u7a0bID). 9.\u5524\u9192\u6682\u505c\u7684\u7ebf\u7a0b\uff0c\u4ece\u5b89\u5168\u70b9\u7ee7\u7eed\u6267\u884c\u4ee3\u7801\u3002 \u8f7b\u91cf\u7ea7\u9501 \u8f7b\u91cf\u7ea7\u9501\u903b\u8f91\uff1a 1.\u5f53\u7ebf\u7a0b\u8bbf\u95ee\u540c\u6b65\u5757,\u5148\u5224\u65ad\u9501\u72b6\u6001\u6807\u5fd7\u4f4d\uff0c\u5982\u679c\u662f00,\u5219\u8bf4\u660e\u662f\u8f7b\u91cf\u7ea7\u9501,JVM\u4f1a\u5148\u5728\u5f53\u524d\u7ebf\u7a0b\u6808\u5e27\u4e2d\u5206\u914dLock Record\u7a7a\u95f4\uff1b 2.\u5c06\u9501\u5bf9\u8c61\u5934\u4e2d\u7684Mark Word\u62f7\u8d1d\u5230\u5f53\u524d\u7ebf\u7a0b\u7684Lock Record\u4e2d\uff0c\u79f0\u4e3aDisplaced Mark Word\uff0c\u7136\u540e\u4f7f\u7528CAS\uff0c \u5c06\u5bf9\u8c61\u5934\u4e2d\u7684Mark Word\u4fee\u6539\u4e3a\u6307\u5411\u5f53\u524d\u7ebf\u7a0b\u6808\u4e2dLock Record\u7684\u6307\u9488\u3002\u5982\u679c\u6210\u529f\uff0c\u5219\u83b7\u53d6\u8f7b\u91cf\u7ea7\u9501\uff0c\u6267\u884c\u540c\u6b65\u5757\u4e2d\u7684\u4ee3\u7801; \u5982\u679c\u5931\u8d25\uff0c\u5219\u8fdb\u884c\u81ea\u65cb\u7ade\u4e89\u9501\uff0c\u81ea\u65cb\u8fbe\u5230\u4e00\u5b9a\u7684\u6b21\u6570\u5982\u679c\u4f9d\u65e7\u6ca1\u6709\u83b7\u53d6\u5230\u9501\uff0c\u5219\u5347\u7ea7\u4e3a\u91cd\u91cf\u7ea7\u9501 (\u56e0\u4e3a\u81ea\u65cb\u4f1a\u6d88\u8017CPU,\u4e3a\u4e86\u907f\u514d\u65e0\u7528\u7684\u81ea\u65cb,\u4e00\u65e6\u9501\u5347\u7ea7\u4e3a\u91cd\u91cf\u7ea7\u9501,\u5c31\u4e0d\u4f1a\u6062\u590d\u5230\u8f7b\u91cf\u7ea7\u9501,\u81ea\u65cb\u7684\u7ebf\u7a0b\u4f1a\u88ab\u6302\u8d77\u963b\u585e\u4f4f)\uff1b 3.\u6267\u884c\u5b8c\u540c\u6b65\u4ee3\u7801\u5757\u4ee3\u7801\uff0c\u9000\u51fa\u540c\u6b65\u4ee3\u7801\u5757\uff0c\u4f7f\u7528CAS\u5f00\u59cb\u8f7b\u91cf\u7ea7\u9501\u89e3\u9501\uff0c\u89e3\u9501\u7684\u6761\u4ef6\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\uff1a 1\uff09\u5bf9\u8c61\u5934Mark Word\u4e2d\u9501\u8bb0\u5f55\u6307\u9488\u662f\u5426\u4f9d\u65e7\u6307\u5411\u5f53\u524d\u7ebf\u7a0bLock Record 2\uff09\u62f7\u8d1d\u5728\u5f53\u524d\u7ebf\u7a0bLock Record\u7684Mark Word\u4fe1\u606f\u662f\u5426\u4e0e\u5bf9\u8c61\u5934\u4e2d\u7684Mark Word\u4e00\u81f4\u3002 4.\u5982\u679c\u6ee1\u8db3\uff0c\u5219\u6210\u529f\u91ca\u653e\u9501\uff1b 5.\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u5219\u91ca\u653e\u9501\uff0c\u5524\u9192\u88ab\u6302\u8d77\u963b\u585e\u7684\u7ebf\u7a0b\uff0c\u5f00\u59cb\u91cd\u91cf\u7ea7\u9501\u7684\u7ade\u4e89\u3002 \u6ce8\uff1a\u5f53\u8d85\u8fc7\u81ea\u65cb\u9608\u503c\uff0c\u7ade\u4e89\u7684\u7ebf\u7a0b\u5c31\u4f1a\u628a\u9501\u5bf9\u8c61Mark Word\u6307\u5411\u91cd\u91cf\u7ea7\u9501\uff0c\u5bfc\u81f4Mark Word\u4e2d\u7684\u503c\u53d1\u751f\u4e86\u53d8\u5316\uff0c \u5f53\u539f\u6301\u6709\u8f7b\u91cf\u7ea7\u9501\u7684\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u5c1d\u8bd5\u901a\u8fc7CAS\u91ca\u653e\u9501\u65f6\uff0c\u56e0\u4e3aMark Word\u5df2\u7ecf\u6307\u5411\u91cd\u9501\uff0c \u4e0d\u518d\u662f\u6307\u5411\u5f53\u524d\u7ebf\u7a0bLock Record\u7684\u6307\u9488\uff0c\u4e8e\u662f\u89e3\u9501\u5931\u8d25\uff0c\u8fd9\u65f6\u539f\u6301\u6709\u8f7b\u91cf\u7ea7\u9501\u7684\u7ebf\u7a0b\u5c31\u4f1a\u77e5\u9053\u9501\u5df2\u7ecf\u5347\u7ea7\u4e3a\u91cd\u91cf\u7ea7\u9501\u3002 \u91cd\u5165\u8ba1\u6570: \u7c7b\u4f3c\u504f\u5411\u9501\uff0c\u4f1a\u5f80\u5f53\u524d\u7ebf\u7a0b\u7684\u6808\u4e2d\u6dfb\u52a0\u4e00\u6761Displaced Mark Word\u4e3a\u7a7a\u7684Lock Record\u4e2d\uff0c\u7528\u6765\u7edf\u8ba1\u91cd\u5165\u7684\u6b21\u6570 \u91cd\u91cf\u9501 \u91cd\u91cf\u7ea7\u9501\u662f\u901a\u8fc7\u4e92\u65a5\u91cf(Mutex)\u6765\u5b9e\u73b0\u7684,\u5373\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u4e86synchronized\u540c\u6b65\u5757,\u5728\u672a\u5b8c\u6210\u4efb\u52a1\u65f6,\u4f1a\u963b\u585e\u540e\u9762\u7684\u6240\u6709\u7ebf\u7a0b; Java\u7ebf\u7a0b\u662f\u6620\u5c04\u5230\u64cd\u4f5c\u7cfb\u7edf\u7684\u539f\u751f\u7ebf\u7a0b\u4e0a\u7684,\u5982\u679c\u8981\u963b\u585e\u6216\u5524\u9192\u4e00\u4e2a\u7ebf\u7a0b,\u90fd\u9700\u8981\u4f9d\u9760\u64cd\u4f5c\u7cfb\u7edf\u4ece\u5f53\u524d\u7528\u6237\u6001\u8f6c\u6362\u5230\u6838\u5fc3\u6001\u4e2d\uff0c \u8fd9\u79cd\u72b6\u6001\u8f6c\u6362\u9700\u8981\u8017\u8d39\u5904\u7406\u5668\u5f88\u591a\u65f6\u95f4\uff0c\u5bf9\u4e8e\u7b80\u5355\u540c\u6b65\u5757\uff0c\u53ef\u80fd\u72b6\u6001\u8f6c\u6362\u65f6\u95f4\u6bd4\u7528\u6237\u4ee3\u7801\u6267\u884c\u65f6\u95f4\u8fd8\u8981\u957f\uff0c \u5bfc\u81f4\u5b9e\u9645\u4e1a\u52a1\u5904\u7406\u6240\u5360\u6bd4\u504f\u5c0f\uff0c\u6027\u80fd\u635f\u5931\u8f83\u5927 \u539f\u5b50\u64cd\u4f5c CAS\u64cd\u4f5c CAS(Compare And Swap)\u64cd\u4f5c\u5305\u542b\u4e09\u4e2a\u64cd\u4f5c\u6570:\u5185\u5b58\u4f4d\u7f6e\uff08V\uff09\u3001\u9884\u671f\u539f\u503c\uff08A\uff09\u548c\u65b0\u503c(B)\u3002 \u5982\u679c\u5185\u5b58\u4f4d\u7f6e\u7684\u503c\u4e0e\u9884\u671f\u539f\u503c\u76f8\u5339\u914d\uff0c\u90a3\u4e48\u5904\u7406\u5668\u4f1a\u81ea\u52a8\u5c06\u8be5\u4f4d\u7f6e\u503c\u66f4\u65b0\u4e3a\u65b0\u503c\u3002\u5426\u5219\uff0c\u5904\u7406\u5668\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c\u3002 CAS\u7684\u4e09\u5927\u95ee\u9898 // AtomicStampReference\u7c7b\u4e2d\u65b9\u6cd5 public boolean compareAndSet(V expectedReference, V newReference, int expectedStamp, int newStamp) { Pair<V> current = pair; return expectedReference == current.reference && // \u671f\u671b\u5f15\u7528==\u5f53\u524d\u5f15\u7528 expectedStamp == current.stamp && // \u671f\u671b\u7248\u672c\u53f7==\u5f53\u524d\u7248\u672c\u53f7 // \u5982\u679c\u65b0\u5f15\u7528==\u5f53\u524d\u5f15\u7528\uff0c\u4e14\u65b0\u7248\u672c==\u5f53\u524d\u7248\u672c\uff0c\u4e8e\u662f\u6ca1\u5fc5\u8981\u4fee\u6539 // \u5426\u5219\u5c31\u521b\u5efa\u4e00\u4e2a\u65b0pair\uff0c\u901a\u8fc7CAS\u64cd\u4f5c\u8d4b\u503c\u7ed9\u5f53\u524dpair. ((newReference == current.reference && newStamp == current.stamp) || casPair(current, Pair.of(newReference, newStamp))); } JAVA\u4e2d\u63d0\u4f9b\u4e86\u539f\u751fCAS\u64cd\u4f5c \u5b9e\u73b0\u539f\u5b50\u64cd\u4f5c 1\u3001\u9996\u5148\u5904\u7406\u5668\u4f1a\u81ea\u52a8\u4fdd\u8bc1\u57fa\u672c\u7684\u5185\u5b58\u64cd\u4f5c\u7684\u539f\u5b50\u6027\u3002\u5904\u7406\u5668\u4fdd\u8bc1\u4ece\u7cfb\u7edf\u5185\u5b58\u4e2d\u8bfb\u53d6\u6216\u8005\u5199\u5165\u4e00\u4e2a\u5b57\u8282\u662f\u539f\u5b50\u7684\uff1b \u6700\u65b0\u7684\u5904\u7406\u5668\u80fd\u751a\u81f3\u80fd\u4fdd\u8bc1 \u5355\u5904\u7406\u5668 \u5bf9\u540c\u4e00\u4e2a\u7f13\u5b58\u884c\u91cc\u8fdb\u884c16/32/64\u4f4d \u7684\u64cd\u4f5c\u662f\u539f\u5b50\u7684; 2\u3001\u5904\u7406\u5668\u63d0\u4f9b\u603b\u7ebf\u9501\u5b9a\u548c\u7f13\u5b58\u9501\u5b9a\u4e24\u4e2a\u673a\u5236\u6765\u4fdd\u8bc1\u590d\u6742\u5185\u5b58\u64cd\u4f5c(\u5982\u8de8\u603b\u7ebf\u5bbd\u5ea6\u3001\u8de8\u591a\u4e2a\u7f13\u5b58\u884c\u548c\u8de8\u9875\u8868\u7684\u8bbf\u95ee)\u7684\u539f\u5b50\u6027\u3002 \u6240\u8c13\u603b\u7ebf\u9501\u5b9a\u5c31\u662f\u4f7f\u7528\u5904\u7406\u5668\u63d0\u4f9b\u7684\u4e00\u4e2aLOCK# \u4fe1\u53f7\uff0c\u5f53\u4e00\u4e2a\u5904\u7406\u5668\u5728\u603b\u7ebf\u4e0a\u8f93\u51fa\u6b64\u4fe1\u53f7\u65f6\uff0c\u5176\u4ed6\u5904\u7406\u5668\u7684\u8bf7\u6c42\u5c06\u88ab\u963b\u585e\u4f4f\uff0c \u90a3\u4e48\u8be5\u5904\u7406\u5668\u53ef\u4ee5\u72ec\u5360\u5171\u4eab\u5185\u5b58\u3002 \u6240\u8c13\u7f13\u5b58\u9501\u5b9a\u662f\u6307\u5185\u5b58\u533a\u57df\u5982\u679c\u88ab\u7f13\u5b58\u5728\u5904\u7406\u5668\u7684\u7f13\u5b58\u884c\u4e2d,\u5e76\u4e14\u5728Lock\u64cd\u4f5c\u671f\u95f4\u88ab\u9501\u5b9a,\u90a3\u4e48\u5f53\u5b83\u6267\u884c\u9501\u64cd\u4f5c\u56de\u5199\u5230\u5185\u5b58\u65f6, \u5904\u7406\u5668\u4e0d\u5728\u603b\u7ebf\u4e0a\u58f0\u8a00LOCK#\u4fe1\u53f7\uff0c\u800c\u662f\u4fee\u6539\u5185\u90e8\u7684\u5185\u5b58\u5730\u5740\uff0c\u5e76\u5141\u8bb8\u5b83\u7684\u7f13\u5b58\u4e00\u81f4\u6027\u673a\u5236\u6765\u4fdd\u8bc1\u64cd\u4f5c\u7684\u539f\u5b50\u6027\uff0c \u56e0\u4e3a \u7f13\u5b58\u4e00\u81f4\u6027\u673a\u5236\u4f1a\u963b\u6b62\u540c\u65f6\u4fee\u6539\u7531\u4e24\u4e2a\u4ee5\u4e0a\u5904\u7406\u5668\u7f13\u5b58\u7684\u5185\u5b58\u533a\u57df\u6570\u636e ,\u5f53\u5176\u4ed6\u5904\u7406\u5668\u56de\u5199\u5df2\u88ab\u9501\u5b9a\u7684\u7f13\u5b58\u884c\u7684\u6570\u636e\u65f6, \u4f1a\u4f7f\u7f13\u5b58\u884c\u65e0\u6548\u3002 \u4f46\u662f\u6709\u4e24\u79cd\u60c5\u51b5\u4e0b\u5904\u7406\u5668\u4e0d\u4f1a\u4f7f\u7528\u7f13\u5b58\u9501\u5b9a\u3002 \u7b2c\u4e00\u79cd\u60c5\u51b5\u662f:\u5f53\u64cd\u4f5c\u7684\u6570\u636e\u4e0d\u80fd\u88ab\u7f13\u5b58\u5728\u5904\u7406\u5668\u5185\u90e8,\u6216\u64cd\u4f5c\u7684\u6570\u636e\u8de8\u591a\u4e2a\u7f13\u5b58\u884c(cache line)\u65f6,\u5904\u7406\u5668\u4f1a\u8c03\u7528\u603b\u7ebf\u9501\u5b9a\u3002 \u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f:\u6709\u4e9b\u5904\u7406\u5668\u4e0d\u652f\u6301\u7f13\u5b58\u9501\u5b9a\u3002\u5bf9\u4e8eIntel 486\u548cPentium\u5904\u7406\u5668\uff0c\u5c31\u7b97\u9501\u5b9a\u7684\u5185\u5b58\u533a\u57df\u5728\u5904\u7406\u5668\u7684\u7f13\u5b58\u884c\u4e2d \u4e5f\u4f1a\u8c03\u7528\u603b\u7ebf\u9501\u5b9a\u3002 \u5728java\u4e2d\u5b9e\u73b0\u539f\u5b50\u64cd\u4f5c 1\u3001\u4f7f\u7528\u81ea\u65cbCAS\u5b9e\u73b0\u539f\u5b50\u64cd\u4f5c\uff1a\u5229\u7528\u4e86\u5904\u7406\u5668\u63d0\u4f9b\u7684CMPXCHG\u6307\u4ee4\u5b9e\u73b0\uff0c\u5faa\u73af\u8fdb\u884cCAS\u64cd\u4f5c\u76f4\u5230\u6210\u529f\u4e3a\u6b62\uff1b JDK\u7684\u5e76\u53d1\u5305\u91cc\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7c7b\u6765\u652f\u6301\u539f\u5b50\u64cd\u4f5c\uff0c\u5982AtomicBoolean\u3001AtomicInt\u3001AtomicLong\u3002 2\u3001\u9501\u673a\u5236\u4fdd\u8bc1\u4e86\u53ea\u6709\u83b7\u5f97\u9501\u7684\u7ebf\u7a0b\u624d\u80fd\u591f\u64cd\u4f5c\u9501\u5b9a\u7684\u5185\u5b58\u533a\u57df\u3002JVM\u5185\u90e8\u5b9e\u73b0\u4e86\u5f88\u591a\u79cd\u9501\u673a\u5236\uff0c \u6709\u504f\u5411\u9501\u3001\u8f7b\u91cf\u7ea7\u9501\u548c\u91cd\u91cf\u9501(\u4e92\u65a5\u9501)\u3002 \u9664\u4e86\u504f\u5411\u9501\uff0cJVM\u5b9e\u73b0\u9501\u7684\u65b9\u5f0f\u90fd\u7528\u4e86\u5faa\u73afCAS \uff0c \u5373\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u60f3\u8fdb\u5165\u540c\u6b65\u5757\u7684\u65f6\u5019\u4f7f\u7528\u5faa\u73afCAS\u7684\u65b9\u5f0f\u6765\u83b7\u53d6\u9501\uff0c\u5f53\u5b83\u9000\u51fa\u540c\u6b65\u5757\u7684\u65f6 \u5019\u4f7f\u7528\u5faa\u73afCAS\u91ca\u653e\u9501\u3002 JAVA\u5185\u5b58\u6a21\u578b Java\u5185\u5b58\u6a21\u578b\u57fa\u7840 \u7ebf\u7a0b\u901a\u4fe1:\u662f\u6307\u7ebf\u7a0b\u4e4b\u95f4\u4ee5\u4f55\u79cd\u673a\u5236\u6765\u4ea4\u6362\u4fe1\u606f\u3002\u5728\u547d\u4ee4\u5f0f\u7f16\u7a0b\u4e2d\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u673a\u5236\u6709\u4e24\u79cd\uff1a\u5171\u4eab\u5185\u5b58\u548c\u6d88\u606f\u4f20\u9012\u3002 \u5728\u5171\u4eab\u5185\u5b58\u7684\u5e76\u53d1\u6a21\u578b\u91cc\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u7a0b\u5e8f\u7684\u516c\u5171\u72b6\u6001\uff0c\u901a\u8fc7\u5199-\u8bfb\u5185\u5b58\u4e2d\u7684\u516c\u5171\u72b6\u6001\u8fdb\u884c\u9690\u5f0f\u901a\u4fe1\u3002 \u5728\u6d88\u606f\u4f20\u9012\u7684\u5e76\u53d1\u6a21\u578b\u91cc\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u6ca1\u6709\u516c\u5171\u72b6\u6001\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u5fc5\u987b\u901a\u8fc7\u53d1\u9001\u6d88\u606f\u6765\u663e\u5f0f\u8fdb\u884c\u901a\u4fe1\u3002 Java\u7684\u5e76\u53d1\u91c7\u7528\u7684\u662f\u5171\u4eab\u5185\u5b58\u6a21\u578b\uff0cJava\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u603b\u662f\u9690\u5f0f\u8fdb\u884c\u3002 \u7ebf\u7a0b\u540c\u6b65:\u540c\u6b65\u662f\u6307\u7a0b\u5e8f\u4e2d\u7528\u4e8e\u63a7\u5236\u4e0d\u540c\u7ebf\u7a0b\u95f4\u64cd\u4f5c\u53d1\u751f\u76f8\u5bf9\u987a\u5e8f\u7684\u673a\u5236\u3002 \u5728\u5171\u4eab\u5185\u5b58\u5e76\u53d1\u6a21\u578b\u91cc\uff0c\u540c\u6b65\u662f\u663e\u5f0f\u8fdb\u884c\u7684\u3002\u7a0b\u5e8f\u5458\u5fc5\u987b\u663e\u5f0f\u6307\u5b9a\u67d0\u4e2a\u65b9\u6cd5\u6216\u67d0\u6bb5\u4ee3\u7801\u9700\u8981\u5728\u7ebf\u7a0b\u4e4b\u95f4\u4e92\u65a5\u6267\u884c\u3002 \u5728\u6d88\u606f\u4f20\u9012\u7684\u5e76\u53d1\u6a21\u578b\u91cc\uff0c\u7531\u4e8e\u6d88\u606f\u7684\u53d1\u9001\u5fc5\u987b\u5728\u6d88\u606f\u7684\u63a5\u6536\u4e4b\u524d\uff0c\u56e0\u6b64\u540c\u6b65\u662f\u9690\u5f0f\u8fdb\u884c\u7684\u3002 java\u5185\u5b58\u6a21\u578b\u62bd\u8c61\u673a\u6784 \u5728Java\u4e2d\uff0c\u6240\u6709\u5b9e\u4f8b\u57df\u3001\u9759\u6001\u57df\u548c\u6570\u7ec4\u5143\u7d20\u90fd\u5b58\u50a8\u5728\u5806\u5185\u5b58\u4e2d\uff0c\u5806\u5185\u5b58\u5728\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\uff1b\u5c40\u90e8\u53d8\u91cf\uff0c\u65b9\u6cd5\u5b9a\u4e49\u53c2\u6570\u548c\u5f02\u5e38\u5904\u7406\u5668\u53c2\u6570\u4e0d\u4f1a\u5728\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\uff0c\u5b83\u4eec\u4e0d\u4f1a\u6709\u5185\u5b58\u53ef\u89c1\u6027\u95ee\u9898\uff0c\u4e5f\u4e0d\u53d7\u5185\u5b58\u6a21\u578b\u7684\u5f71\u54cd\u3002 Java\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u7531Java\u5185\u5b58\u6a21\u578b\uff08JMM\uff09\u63a7\u5236\uff0cJMM\u51b3\u5b9a\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u53d8\u91cf\u7684\u5199\u5165\u4f55\u65f6\u5bf9\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u89c1\u3002\u4ece\u62bd\u8c61\u7684\u89d2\u5ea6\u6765\u770b\uff0cJMM\u5b9a\u4e49\u4e86\u7ebf\u7a0b\u548c\u4e3b\u5185\u5b58\u4e4b\u95f4\u7684\u62bd\u8c61\u5173\u7cfb\uff1a\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5171\u4eab\u53d8\u91cf\u5b58\u50a8\u5728\u4e3b\u5185\u5b58\uff08Main Memory\uff09\u4e2d\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u79c1\u6709\u7684\u672c\u5730\u5185\u5b58\uff0c\u672c\u5730\u5185\u5b58\u4e2d\u5b58\u50a8\u4e86\u8be5\u7ebf\u7a0b\u5df2\u8bfb/\u5199\u5171\u4eab\u53d8\u91cf\u7684\u526f\u672c\u3002\u672c\u5730\u5185\u5b58\u662fJMM\u7684\u4e00\u4e2a\u62bd\u8c61\u6982\u5ff5\uff0c\u5e76\u4e0d\u771f\u5b9e\u5b58\u5728\u3002\u5b83\u6db5\u76d6\u4e86\u7f13\u5b58\u3001\u5199\u7f13\u51b2\u533a\u3001\u5bc4\u5b58\u5668\u4ee5\u53ca\u5176\u4ed6\u7684\u786c\u4ef6\u548c\u7f16\u8bd1\u5668\u4f18\u5316\u3002 \u7ebf\u7a0bA\u3001B\u4e4b\u95f4\u901a\u4fe1\u8fc7\u7a0b: 1) \u7ebf\u7a0bA\u628a\u672c\u5730\u5185\u5b58A\u4e2d\u66f4\u65b0\u8fc7\u7684\u5171\u4eab\u53d8\u91cf\u5237\u65b0\u5230\u4e3b\u5185\u5b58\u4e2d\u53bb\u3002 2) \u7ebf\u7a0bB\u5230\u4e3b\u5185\u5b58\u4e2d\u53bb\u8bfb\u53d6\u7ebf\u7a0bA\u4e4b\u524d\u5df2\u66f4\u65b0\u8fc7\u7684\u5171\u4eab\u53d8\u91cf java\u5185\u5b58\u53ef\u89c1\u6027\u4fdd\u8bc1 \u2003\u6700\u5c0f\u5b89\u5168\u6027\u4fdd\u8bc1\u7ebf\u7a0b\u8bfb\u53d6\u5230\u7684\u503c\uff0c\u8981\u4e48\u662f\u4e4b\u524d\u67d0\u4e2a\u7ebf\u7a0b\u5199\u5165\u7684\u503c\uff0c\u8981\u4e48\u662f\u9ed8\u8ba4\u503c\uff080\u3001null\u3001false\uff09\u3002\u4f46\u6700\u5c0f\u5b89\u5168\u6027\u5e76\u4e0d\u4fdd\u8bc1 \u7ebf\u7a0b\u8bfb\u53d6\u5230\u7684\u503c\uff0c\u4e00\u5b9a\u662f\u67d0\u4e2a\u7ebf\u7a0b\u5199\u5b8c\u540e\u7684\u503c\u3002\u6700\u5c0f\u5b89\u5168\u6027\u4fdd\u8bc1\u7ebf\u7a0b\u8bfb\u53d6\u5230\u7684\u503c\u4e0d\u662f\u65e0\u4e2d\u751f\u6709\uff0c\u4f46\u5e76\u4e0d\u4fdd\u8bc1\u7ebf\u7a0b\u8bfb\u53d6\u5230\u7684\u503c\u4e00\u5b9a\u662f\u6b63\u786e\u7684\u3002 \u91cd\u6392\u5e8f 1\u3001\u7f16\u8bd1\u5668\u4f18\u5316\u7684\u91cd\u6392\u5e8f\u3002\u7f16\u8bd1\u5668\u5728\u4e0d\u6539\u53d8\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u8bed\u4e49\u7684\u524d\u63d0\u4e0b\uff0c\u53ef\u4ee5\u91cd\u65b0\u5b89\u6392\u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\u3002 2\u3001\u6307\u4ee4\u7ea7\u5e76\u884c\u7684\u91cd\u6392\u5e8f\u3002\u73b0\u4ee3\u5904\u7406\u5668\u91c7\u7528\u4e86\u6307\u4ee4\u7ea7\u5e76\u884c\u6280\u672f\u6765\u5c06\u591a\u6761\u6307\u4ee4\u91cd\u53e0\u6267\u884c\u3002\u5982\u679c\u4e0d\u5b58\u5728\u6570\u636e\u4f9d\u8d56\u6027\uff0c\u5904\u7406\u5668\u53ef\u4ee5\u6539\u53d8\u8bed\u53e5\u5bf9\u5e94 \u673a\u5668\u6307\u4ee4\u7684\u6267\u884c\u987a\u5e8f\u3002 3\u3001\u5185\u5b58\u7cfb\u7edf\u7684\u91cd\u6392\u5e8f\u3002\u7531\u4e8e\u5904\u7406\u5668\u4f7f\u7528\u7f13\u5b58\u548c\u8bfb/\u5199\u7f13\u51b2\u533a\uff0c\u8fd9\u4f7f\u5f97\u52a0\u8f7d\u548c\u5b58\u50a8\u64cd\u4f5c\u770b\u4e0a\u53bb\u53ef\u80fd\u662f\u5728\u4e71\u5e8f\u6267\u884c\u3002 \u6570\u636e\u4f9d\u8d56\u6027 \u5982\u679c\u4e24\u4e2a\u64cd\u4f5c\u8bbf\u95ee\u540c\u4e00\u4e2a\u53d8\u91cf\uff0c\u4e14\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e2d\u6709\u4e00\u4e2a\u4e3a\u5199\u64cd\u4f5c\uff0c\u6b64\u65f6\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u5c31\u5b58\u5728\u6570\u636e\u4f9d\u8d56\u6027\u3002 \u6570\u636e\u4f9d\u8d56\u5206\u4e3a3\u79cd\u7c7b\u578b\uff0c\u5199\u540e\u8bfb\u3001\u5199\u540e\u5199\u3001\u8bfb\u540e\u5199\u3002 \u5bf9\u4e8e\u5b58\u5728\u6570\u636e\u4f9d\u8d56\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u91cd\u6392\u5e8f\u64cd\u4f5c\u6267\u884c\u987a\u5e8f\uff0c\u7a0b\u5e8f\u7ed3\u679c\u5c31\u4f1a\u6539\u53d8\uff1b\u6240\u4ee5\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u5728\u91cd\u6392\u5e8f\u65f6\uff0c\u4f1a\u9075\u5b88\u6570\u636e\u4f9d\u8d56\u6027\uff0c \u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u4e0d\u4f1a\u6539\u53d8\u5b58\u5728\u6570\u636e\u4f9d\u8d56\u5173\u7cfb\u7684\u4e24\u4e2a\u64cd\u4f5c\u7684\u6267\u884c\u987a\u5e8f \u3002 \u4f46\u662f\u6570\u636e\u4f9d\u8d56\u6027\u4ec5\u9488\u5bf9\u5355\u4e2a\u5904\u7406\u5668\u4e2d\u6267\u884c\u7684\u6307\u4ee4\u5e8f\u5217\u548c\u5355\u4e2a\u7ebf\u7a0b\u4e2d\u6267\u884c\u7684\u64cd\u4f5c\uff0c \u4e0d\u540c\u5904\u7406\u5668\u4e4b\u95f4\u548c\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u6570\u636e\u4f9d\u8d56\u6027\u4e0d\u88ab\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u8003\u8651 \u3002 as-if-serial as-if-serial\uff1a\u4e0d\u7ba1\u600e\u4e48\u91cd\u6392\u5e8f\uff08\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u4e3a\u4e86\u63d0\u9ad8\u5e76\u884c\u5ea6\uff09\uff0c\uff08\u5355\u7ebf\u7a0b\uff09\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u4e0d\u80fd\u88ab\u6539\u53d8\u3002\u7f16\u8bd1\u5668\u3001runtime\u548c\u5904\u7406\u5668\u90fd\u5fc5\u987b\u9075\u5b88as-if-serial\u8bed\u4e49\u3002 \u5728\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u4e2d\uff0c\u5bf9\u5b58\u5728\u63a7\u5236\u4f9d\u8d56(\u4f8b\u5982if-else\u5224\u65ad)\u7684\u64cd\u4f5c\u91cd\u6392\u5e8f\uff0c\u4e0d\u4f1a\u6539\u53d8\u6267\u884c\u7ed3\u679c\uff1b\u4f46\u5728\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u4e2d\uff0c\u5bf9\u5b58\u5728\u63a7\u5236\u4f9d\u8d56\u7684\u64cd\u4f5c\u91cd\u6392\u5e8f\uff0c\u53ef\u80fd\u4f1a\u6539\u53d8\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u3002 \u5185\u5b58\u5c4f\u969c: \u4e3a\u4e86\u4fdd\u8bc1\u5185\u5b58\u53ef\u89c1\u6027\uff0c\u5bf9\u4e8e\u5904\u7406\u5668\u91cd\u6392\u5e8f\uff0cJMM\u7684\u5904\u7406\u5668\u91cd\u6392\u5e8f\u89c4\u5219\u4f1a\u8981\u6c42Java\u7f16\u8bd1\u5668\u5728\u751f\u6210\u6307\u4ee4\u5e8f\u5217\u65f6\uff0c\u63d2\u5165\u7279\u5b9a\u7c7b\u578b\u7684\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\uff0c\u901a\u8fc7\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\u6765\u7981\u6b62\u7279\u5b9a\u7c7b\u578b\u7684\u5904\u7406\u5668\u91cd\u6392\u5e8f\u3002 \u987a\u5e8f\u4e00\u81f4\u6027 JMM\u5bf9\u6b63\u786e\u540c\u6b65\u7684\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u7684\u5185\u5b58\u4e00\u81f4\u6027\u505a\u4e86\u5982\u4e0b\u4fdd\u8bc1\uff1a\u5982\u679c\u7a0b\u5e8f\u662f\u6b63\u786e\u540c\u6b65\u7684\uff0c\u7a0b\u5e8f\u7684\u6267\u884c\u5c06\u5177\u6709\u987a\u5e8f\u4e00\u81f4\u6027\uff08Sequentially Consistent\uff09\uff0c\u5373\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u4e0e\u8be5\u7a0b\u5e8f\u5728\u987a\u5e8f\u4e00\u81f4\u6027\u5185\u5b58\u6a21\u578b\u4e2d\u7684\u6267\u884c\u7ed3\u679c\u76f8\u540c\u3002 \u987a\u5e8f\u4e00\u81f4\u6027\u5185\u5b58\u6a21\u578b \u662f\u4e00\u79cd\u7406\u60f3\u6a21\u578b\uff0c\u6709\u4e24\u5927\u7279\u6027: 1\u3001\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\u5fc5\u987b\u6309\u7167\u7a0b\u5e8f\u7684\u987a\u5e8f\u6765\u6267\u884c\u3002 2\u3001(\u4e0d\u7ba1\u7a0b\u5e8f\u662f\u5426\u540c\u6b65)\u6240\u6709\u7ebf\u7a0b\u90fd\u53ea\u80fd\u770b\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u64cd\u4f5c\u6267\u884c\u987a\u5e8f\u3002\u5728\u987a\u5e8f\u4e00\u81f4\u6027\u5185\u5b58\u6a21\u578b\u4e2d\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u5fc5\u987b\u539f\u5b50\u6267\u884c\u4e14\u7acb\u523b\u5bf9\u6240\u6709\u7ebf\u7a0b\u53ef\u89c1\u3002 JMM\u4e0d\u63d0\u4f9b\u987a\u5e8f\u4e00\u81f4\u6027\u4fdd\u8bc1\uff0c\u5373: \u2003JMM\u4e0d\u4fdd\u8bc1\u5355\u7ebf\u7a0b\u5185\u7684\u64cd\u4f5c\u4f1a\u6309\u7a0b\u5e8f\u7684\u987a\u5e8f\u6267\u884c; \u2003\u672a\u540c\u6b65\u7a0b\u5e8f\u5728JMM\u4e2d\u4e0d\u4f46\u6574\u4f53\u7684\u6267\u884c\u987a\u5e8f\u662f\u65e0\u5e8f\u7684\uff0c\u800c\u4e14\u6240\u6709\u7ebf\u7a0b\u770b\u5230\u7684\u64cd\u4f5c\u6267\u884c\u987a\u5e8f\u4e5f\u53ef\u80fd\u4e0d\u4e00\u81f4\u3002\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5199\u64cd\u4f5c\u53ea\u6709\u5237\u65b0\u5230\u5185\u5b58\u540e\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u624d\u5bf9\u5176\u4ed6\u7ebf\u7a0b\u53ef\u89c1\u3002 \u2003JMM\u4e0d\u4fdd\u8bc1\u5bf964\u4f4d\u7684long\u578b\u548cdouble\u578b\u53d8\u91cf\u7684\u5199\u64cd\u4f5c\u5177\u6709\u539f\u5b50\u6027\uff0c\u800c\u987a\u5e8f\u4e00\u81f4\u6027\u6a21\u578b\u4fdd\u8bc1\u5bf9\u6240\u6709\u7684\u5185\u5b58\u8bfb/\u5199\u64cd\u4f5c\u90fd\u5177\u6709\u539f\u5b50\u6027\u3002 \u5bf9\u4e8e\u6b63\u786e\u540c\u6b65\u7684\u7a0b\u5e8f\uff0cJMM\u5141\u8bb8\u4e34\u754c\u533a\u7684\u4ee3\u7801\u6267\u884c\u91cd\u6392\u5e8f(\u4fdd\u8bc1\u4e0d\u4f1a\u9038\u51fa\u5230\u4e34\u754c\u533a\u5916)\u4ee5\u63d0\u9ad8\u6267\u884c\u6548\u7387 \u3002 \u9501\u5185\u5b58\u8bed\u4e49 \u9501\u91ca\u653e-\u5b58\u53d6\u7684\u5185\u5b58\u8bed\u4e49 \u7ebf\u7a0bA\u91ca\u653e\u4e00\u4e2a\u9501\uff0c\u5b9e\u8d28\u4e0a\u662f\u7ebf\u7a0bA\u5411\u63a5\u4e0b\u6765\u5c06\u8981\u83b7\u53d6\u8fd9\u4e2a\u9501\u7684\u67d0\u4e2a\u7ebf\u7a0b\u53d1\u51fa\u4e86(\u7ebf\u7a0bA\u5bf9\u5171\u4eab\u53d8\u91cf\u6240\u505a\u4fee\u6539\u7684)\u6d88\u606f\u3002 \u7ebf\u7a0bB\u83b7\u53d6\u4e00\u4e2a\u9501\uff0c\u5b9e\u8d28\u4e0a\u662f\u7ebf\u7a0bB\u63a5\u6536\u4e86\u4e4b\u524d\u67d0\u4e2a\u7ebf\u7a0b\u53d1\u51fa\u7684(\u5728\u91ca\u653e\u8fd9\u4e2a\u9501\u4e4b\u524d\u5bf9\u5171\u4eab\u53d8\u91cf\u6240\u505a\u4fee\u6539\u7684)\u6d88\u606f\u3002 \u7ebf\u7a0bA\u91ca\u653e\u9501\uff0c\u968f\u540e\u7ebf\u7a0bB\u83b7\u53d6\u8fd9\u4e2a\u9501\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u8d28\u4e0a\u662f\u7ebf\u7a0bA\u901a\u8fc7\u4e3b\u5185\u5b58\u5411\u7ebf\u7a0bB\u53d1\u9001\u6d88\u606f\u3002 \u5bf9\u6bd4\u9501\u91ca\u653e-\u83b7\u53d6\u7684\u5185\u5b58\u8bed\u4e49\u4e0evolatile\u5199-\u8bfb\u7684\u5185\u5b58\u8bed\u4e49\u53ef\u4ee5\u770b\u51fa: \u9501\u91ca\u653e\u4e0evolatile\u5199\u6709\u76f8\u540c\u7684\u5185\u5b58\u8bed\u4e49\uff1b\u9501\u83b7\u53d6\u4e0evolatile\u8bfb\u6709\u76f8\u540c\u7684\u5185\u5b58\u8bed\u4e49. CAS java\u4e2d\u7684unsafe.compareAndSwapInt(..)\u65b9\u6cd5\u4e2d\u4f1a\u6839\u636e\u662f\u5426\u662f\u591a\u5904\u7406\u5668\u6765\u4e3acmpxchg\u6307\u4ee4\u6dfb\u52a0lock\u524d\u7f00\uff0c \u5bf9\u4e8e\u6dfb\u52a0\u4e86lock\u524d\u7f00\u7684\u6307\u4ee4\uff0c\u5728intel\u5904\u7406\u5668\u4e0a\u6709: 1.\u786e\u4fdd\u5bf9\u5185\u5b58\u7684\u8bfb-\u6539-\u5199\u64cd\u4f5c\u539f\u5b50\u6267\u884c\uff1b 2.\u7981\u6b62\u8be5\u6307\u4ee4\uff0c\u4e0e\u4e4b\u524d\u548c\u4e4b\u540e\u7684\u8bfb\u548c\u5199\u6307\u4ee4\u91cd\u6392\u5e8f\uff1b 3.\u628a\u5199\u7f13\u51b2\u533a\u4e2d\u7684\u6240\u6709\u6570\u636e\u5237\u65b0\u5230\u5185\u5b58\u4e2d\u3002 2\u30013\u64cd\u4f5c\u5177\u6709\u7684\u5185\u5b58\u5c4f\u969c\u6548\u679c\uff0c\u8db3\u4ee5\u540c\u65f6\u5b9e\u73b0volatile\u8bfb-\u5199\u5185\u5b58\u8bed\u4e49\u3002 concurrent\u5305\u5b9e\u73b0 \u7531\u4e8eJava\u7684CAS\u540c\u65f6\u5177\u6709volatile\u8bfb\u548cvolatile\u5199\u7684\u5185\u5b58\u8bed\u4e49\uff0c\u56e0\u6b64Java\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u73b0\u5728\u6709\u4e86\u4e0b\u97624\u79cd\u65b9\u5f0f: 1\uff09A\u7ebf\u7a0b\u5199volatile\u53d8\u91cf\uff0c\u968f\u540eB\u7ebf\u7a0b\u8bfb\u8fd9\u4e2avolatile\u53d8\u91cf\u3002 2\uff09A\u7ebf\u7a0b\u5199volatile\u53d8\u91cf\uff0c\u968f\u540eB\u7ebf\u7a0b\u7528CAS\u66f4\u65b0\u8fd9\u4e2avolatile\u53d8\u91cf\u3002 3\uff09A\u7ebf\u7a0b\u7528CAS\u66f4\u65b0\u4e00\u4e2avolatile\u53d8\u91cf\uff0c\u968f\u540eB\u7ebf\u7a0b\u7528CAS\u66f4\u65b0\u8fd9\u4e2avolatile\u53d8\u91cf\u3002 4\uff09A\u7ebf\u7a0b\u7528CAS\u66f4\u65b0\u4e00\u4e2avolatile\u53d8\u91cf\uff0c\u968f\u540eB\u7ebf\u7a0b\u8bfb\u8fd9\u4e2avolatile\u53d8\u91cf\u3002 \u2003 \u901a\u7528\u6a21\u5f0f: \u9996\u5148\uff0c\u58f0\u660e\u5171\u4eab\u53d8\u91cf\u4e3avolatile; \u7136\u540e\uff0c\u4f7f\u7528CAS\u7684\u539f\u5b50\u6761\u4ef6\u66f4\u65b0\u6765\u5b9e\u73b0\u7ebf\u7a0b\u4e4b\u95f4\u7684\u540c\u6b65; \u540c\u65f6\uff0c\u914d\u5408\u4ee5volatile\u7684\u8bfb/\u5199\u548cCAS\u6240\u5177\u6709\u7684volatile\u8bfb\u548c\u5199\u7684\u5185\u5b58\u8bed\u4e49\u6765\u5b9e\u73b0\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u3002 AQS\uff0c\u975e\u963b\u585e\u6570\u636e\u7ed3\u6784\u548c\u539f\u5b50\u53d8\u91cf\u7c7b\uff08java.util.concurrent.atomic\u5305\u4e2d\u7684\u7c7b\uff09\uff0c\u8fd9\u4e9bconcurrent\u5305\u4e2d\u7684\u57fa\u7840\u7c7b \u90fd\u662f\u4f7f\u7528\u8fd9\u79cd\u6a21\u5f0f\u6765\u5b9e\u73b0\u7684\uff0c\u800cconcurrent\u5305\u4e2d\u7684\u9ad8\u5c42\u7c7b(\u5982Lock\u3001\u540c\u6b65\u5668\u3001Executor\u3001\u5e76\u53d1\u5bb9\u5668) \u53c8\u662f\u4f9d\u8d56\u4e8e\u8fd9\u4e9b\u57fa\u7840\u7c7b\u6765\u5b9e\u73b0\u7684\u3002 final\u57df\u5185\u5b58\u8bed\u4e49 \u5bf9\u4e8efinal\u57df\uff0c\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u8981\u9075\u5b88\u4e24\u4e2a\u91cd\u6392\u5e8f\u89c4\u5219\u3002 1\uff09\u5728\u6784\u9020\u51fd\u6570\u5185\u5bf9\u4e00\u4e2afinal\u57df\u7684\u5199\u5165\uff0c\u4e0e\u968f\u540e\u628a\u8fd9\u4e2a\u88ab\u6784\u9020\u5bf9\u8c61\u7684\u5f15\u7528\u8d4b\u503c\u7ed9\u4e00\u4e2a\u5f15\u7528\u53d8\u91cf\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u4e0d\u80fd\u91cd\u6392\u5e8f\u3002\u5177\u4f53\u5b9e\u73b0\u4e3a, JMM\u7981\u6b62\u7f16\u8bd1\u5668\u628afinal\u57df\u7684\u5199 \u91cd\u6392\u5e8f\u5230\u6784\u9020\u51fd\u6570\u4e4b\u5916, \u4ee5\u53ca\u7f16\u8bd1\u5668\u4f1a\u5728final\u57df\u7684\u5199\u4e4b\u540e\uff0c\u6784\u9020\u51fd\u6570return\u4e4b\u524d\uff0c\u63d2\u5165\u4e00\u4e2aStoreStore\u5c4f\u969c\uff0c\u8fd9\u4e2a\u5c4f\u969c\u7981\u6b62\u5904\u7406\u5668\u628afinal\u57df\u7684\u5199\u91cd\u6392\u5e8f\u5230\u6784\u9020\u51fd\u6570\u4e4b\u5916\u3002 \u56e0\u6b64\u5199final\u57df\u7684\u91cd\u6392\u5e8f\u89c4\u5219\u53ef\u4ee5\u786e\u4fdd\uff1a\u5728\u5bf9\u8c61\u5f15\u7528\u4e3a\u4efb\u610f\u7ebf\u7a0b\u53ef\u89c1\u4e4b\u524d\uff0c\u5bf9\u8c61\u7684final\u57df\u5df2\u7ecf\u88ab \u6b63\u786e\u521d\u59cb\u5316\u8fc7\u4e86\uff0c\u800c\u666e\u901a\u57df\u4e0d\u5177\u6709\u8fd9\u4e2a\u4fdd\u969c\u3002 2\uff09\u521d\u6b21\u8bfb\u4e00\u4e2a\u5305\u542bfinal\u57df\u7684\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4e0e\u968f\u540e\u521d\u6b21\u8bfb\u8fd9\u4e2afinal\u57df\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u4e0d\u80fd\u91cd\u6392\u5e8f\u3002\u521d\u6b21\u8bfb\u5bf9\u8c61\u5f15\u7528\u4e0e\u521d\u6b21\u8bfb\u8be5\u5bf9\u8c61\u5305\u542b\u7684final\u57df\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u5b58\u5728\u95f4\u63a5\u4f9d\u8d56\u5173\u7cfb\u3002\u7531\u4e8e\u7f16\u8bd1\u5668\u9075\u5b88\u95f4\u63a5\u4f9d\u8d56\u5173\u7cfb\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u4e0d\u4f1a\u91cd\u6392\u5e8f\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u3002\u5177\u4f53\u5b9e\u73b0\u4e3a\u7f16\u8bd1\u5668\u4f1a\u5728\u8bfbfinal\u57df\u4e4b\u524d\u52a0\u5165\u4e00\u4e2aLoadLoad\u5c4f\u969c\u3002 final\u57df\u4e3a\u5f15\u7528\u7c7b\u578b \u5bf9\u4e8e\u5f15\u7528\u7c7b\u578b\uff0c\u5199final\u57df\u7684\u91cd\u6392\u5e8f\u89c4\u5219\u5bf9\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u589e\u52a0\u4e86\u5982\u4e0b\u7ea6\u675f\uff1a\u5728\u6784\u9020\u51fd\u6570\u5185\u5bf9\u4e00\u4e2afinal\u5f15\u7528\u7684\u5bf9\u8c61\u7684\u6210\u5458\u57df\u7684\u5199\u5165\uff0c\u4e0e\u968f\u540e\u5728\u6784\u9020\u51fd\u6570\u5916\u628a\u8fd9\u4e2a\u88ab\u6784\u9020\u5bf9\u8c61\u7684\u5f15\u7528\u8d4b\u503c\u7ed9\u4e00\u4e2a\u5f15\u7528\u53d8\u91cf\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u4e0d\u80fd\u91cd\u6392\u5e8f\u3002 happens-before \u5728JMM\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u64cd\u4f5c\u6267\u884c\u7684\u7ed3\u679c\u9700\u8981\u5bf9\u53e6\u4e00\u4e2a\u64cd\u4f5c\u53ef\u89c1\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u5fc5\u987b\u8981\u5b58\u5728happens-before\u5173\u7cfb\u3002\u8fd9\u91cc\u63d0\u5230\u7684\u4e24\u4e2a\u64cd\u4f5c\u65e2\u53ef\u4ee5\u662f\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e4b\u5185\uff0c\u4e5f\u53ef\u4ee5\u662f\u5728\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u3002 \u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u5177\u6709happens-before\u5173\u7cfb\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u524d\u4e00\u4e2a\u64cd\u4f5c\u5fc5\u987b\u8981\u5728\u540e\u4e00\u4e2a\u64cd\u4f5c\u4e4b\u524d\u6267\u884c\uff01 happens-before\u4ec5\u4ec5\u8981\u6c42\u524d\u4e00\u4e2a\u64cd\u4f5c\uff08\u6267\u884c\u7684\u7ed3\u679c\uff09\u5bf9\u540e\u4e00\u4e2a\u64cd\u4f5c\u53ef\u89c1 \uff0c\u4e14\u524d\u4e00\u4e2a\u64cd\u4f5c\u6309\u987a\u5e8f\u6392\u5728\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u4e4b\u524d(\u4f46\u4e0d\u610f\u5473\u524d\u4e00\u4e2a\u64cd\u4f5c\u4f1a\u5148\u6267\u884c)\u3002 happend-before\u89c4\u5219 \u53cc\u91cd\u68c0\u67e5\u9501\u5b9a \u5ef6\u8fdf\u521d\u59cb\u5316: \u5728Java\u7a0b\u5e8f\u4e2d\uff0c\u6709\u65f6\u5019\u53ef\u80fd\u9700\u8981\u63a8\u8fdf\u4e00\u4e9b\u9ad8\u5f00\u9500\u7684\u5bf9\u8c61\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u5e76\u4e14\u53ea\u6709\u5728\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u65f6\u624d\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u53cc\u91cd\u68c0\u67e5\u9501\u5b9a\u662f\u4e00\u79cd\u5e38\u89c1\u4f46\u9519\u8bef\u7684\u5ef6\u8fdf\u521d\u59cb\u5316\u7528\u6cd5\u3002 public class DoubleCheckedLocking { // 1 private static Instance instance; // 2 public static Instance getInstance() { // 3 if (instance == null) { // 4:\u7b2c\u4e00\u6b21\u68c0\u67e5 synchronized (DoubleCheckedLocking.class) { // 5:\u52a0\u9501 if (instance == null) // 6:\u7b2c\u4e8c\u6b21\u68c0\u67e5 instance = new Instance(); // 7:\u95ee\u9898\u7684\u6839\u6e90\u51fa\u5728\u8fd9\u91cc } // 8 } // 9 return instance; // 10 } // 11 } \u95ee\u9898\u5206\u6790: \u5982\u679c\u6709\u4e24\u4e2a\u7ebf\u7a0b\u8bbf\u95eegetInstance\u65b9\u6cd5\uff0cA\u7ebf\u7a0b\u5df2\u7ecf\u6267\u884c\u5230\u7b2c7\u6b65\uff0cB\u7ebf\u7a0b\u6267\u884c\u5230\u7b2c4\u6b65\uff1b \u7b2c7\u6b65\u6267\u884c\u521d\u59cb\u5316\u5bf9\u8c61\u65f6\uff0c\u4e00\u5171\u6709\u4e09\u6b65: memory = allocate(); // 1\uff1a\u5206\u914d\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4 ctorInstance(memory); // 2\uff1a\u521d\u59cb\u5316\u5bf9\u8c61 instance = memory; // 3\uff1a\u8bbe\u7f6einstance\u6307\u5411\u521a\u5206\u914d\u7684\u5185\u5b58\u5730\u5740 \u5176\u4e2d2\u30013\u7531\u4e8e\u91cd\u6392\u5e8f(\u8fd9\u6837\u5e76\u4e0d\u4f1a\u6539\u53d8\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u6267\u884c\u7ed3\u679c\uff0c\u6240\u4ee5JMM\u662f\u5141\u8bb8\u7684)\uff0c\u53ef\u80fd\u5b9e\u9645\u6267\u884c\u987a\u5e8f\u662f3\uff0c2\uff1b \u5047\u8bbeA\u7ebf\u7a0b\u5148\u6267\u884c\u7684\u662f\u6b65\u9aa43\uff0c\u5c1a\u672a\u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u800cB\u7ebf\u7a0b\u5728\u5224\u65adinstance==null\u65f6\u5f97\u5230false, \u5c06\u4f1a\u8fd4\u56deinstance\uff0c\u5f97\u5230\u4e00\u4e2a\u5c1a\u672a\u521d\u59cb\u5316\u7684\u5bf9\u8c61\u3002 \u89e3\u51b3\u65b9\u6848 1\u3001\u4f7f\u7528volatile\u4fee\u9970instance\u53d8\u91cf\uff0c\u8fd9\u6837\u521d\u59cb\u5316\u5bf9\u8c61\u7684\u6b65\u9aa42\u30013\u4e4b\u95f4\u7684\u91cd\u6392\u5e8f\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u5c31\u4f1a\u88ab\u7981\u6b62\u3002 2\u3001\u57fa\u4e8e\u7c7b\u521d\u59cb\u5316\u7684\u89e3\u51b3\u65b9\u6848\u3002JVM\u5728\u7c7b\u7684\u521d\u59cb\u5316\u9636\u6bb5\uff08\u5373\u5728Class\u88ab\u52a0\u8f7d\u540e\uff0c\u4e14\u88ab\u7ebf\u7a0b\u4f7f\u7528\u4e4b\u524d\uff09\uff0c\u4f1a\u6267\u884c\u7c7b\u7684\u521d\u59cb\u5316\u3002\u5728\u6267\u884c\u7c7b\u7684\u521d\u59cb\u5316\u671f\u95f4\uff0cJVM\u4f1a\u53bb\u83b7\u53d6\u4e00\u4e2a\u9501\u3002\u8fd9\u4e2a\u9501\u53ef\u4ee5\u540c\u6b65\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u7c7b\u7684\u521d\u59cb\u5316\u3002 \u57fa\u4e8e\u8fd9\u4e2a\u7279\u6027\uff0c\u53ef\u4ee5\u5b9e\u73b0\u53e6\u4e00\u79cd\u7ebf\u7a0b\u5b89\u5168\u7684\u5ef6\u8fdf\u521d\u59cb\u5316\u65b9\u6848\uff08\u8fd9\u4e2a\u65b9\u6848\u88ab\u79f0\u4e4b\u4e3a Initialization On Demand Holder idiom\uff09\u3002 \u636eJava\u8bed\u8a00\u89c4\u8303\uff0c\u5728\u9996\u6b21\u53d1\u751f\u4e0b\u5217\u4efb\u610f\u4e00\u79cd\u60c5\u51b5\u65f6\uff0c\u4e00\u4e2a\u7c7b\u6216\u63a5\u53e3\u7c7b\u578bT\u5c06\u88ab\u7acb\u5373\u521d\u59cb\u5316\u3002 1\uff09T\u662f\u4e00\u4e2a\u7c7b\uff0c\u800c\u4e14\u4e00\u4e2aT\u7c7b\u578b\u7684\u5b9e\u4f8b\u88ab\u521b\u5efa\u3002 2\uff09T\u662f\u4e00\u4e2a\u7c7b\uff0c\u4e14T\u4e2d\u58f0\u660e\u7684\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\u88ab\u8c03\u7528\u3002 3\uff09T\u4e2d\u58f0\u660e\u7684\u4e00\u4e2a\u9759\u6001\u5b57\u6bb5\u88ab\u8d4b\u503c\u3002 4\uff09T\u4e2d\u58f0\u660e\u7684\u4e00\u4e2a\u9759\u6001\u5b57\u6bb5\u88ab\u4f7f\u7528\uff0c\u800c\u4e14\u8fd9\u4e2a\u5b57\u6bb5\u4e0d\u662f\u4e00\u4e2a\u5e38\u91cf\u5b57\u6bb5\u3002 5\uff09T\u662f\u4e00\u4e2a\u9876\u7ea7\u7c7b\uff0c\u800c\u4e14\u4e00\u4e2a\u65ad\u8a00\u8bed\u53e5\u5d4c\u5957\u5728T\u5185\u90e8\u88ab\u6267\u884c\u3002 \u800c \u521d\u59cb\u5316\u4e00\u4e2a\u7c7b\uff0c\u5305\u62ec\u6267\u884c\u8fd9\u4e2a\u7c7b\u7684\u9759\u6001\u521d\u59cb\u5316\u548c\u521d\u59cb\u5316\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u58f0\u660e\u7684\u9759\u6001\u5b57\u6bb5 \u57fa\u4e8evolatile\u7684\u53cc\u91cd\u68c0\u67e5\u9501\u5b9a\u7684\u65b9\u6848\u6709\u4e00\u4e2a\u989d\u5916\u7684\u4f18\u52bf:\u9664\u4e86\u53ef\u4ee5\u5bf9\u9759\u6001\u5b57\u6bb5\u5b9e\u73b0\u5ef6\u8fdf\u521d\u59cb\u5316\u5916\uff0c \u8fd8\u53ef\u4ee5\u5bf9\u5b9e\u4f8b\u5b57\u6bb5\u5b9e\u73b0\u5ef6\u8fdf\u521d\u59cb\u5316; \u5b57\u6bb5\u5ef6\u8fdf\u521d\u59cb\u5316\u964d\u4f4e\u4e86\u521d\u59cb\u5316\u7c7b\u6216\u521b\u5efa\u5b9e\u4f8b\u7684\u5f00\u9500\uff0c\u4f46\u589e\u52a0\u4e86\u8bbf\u95ee\u88ab\u5ef6\u8fdf\u521d\u59cb\u5316\u7684\u5b57\u6bb5\u7684\u5f00\u9500\u3002 \u5728\u5927\u591a\u6570\u65f6\u5019\uff0c\u6b63\u5e38\u7684\u521d\u59cb\u5316\u8981\u4f18\u4e8e\u5ef6\u8fdf\u521d\u59cb\u5316\u3002 \u5982\u679c\u786e\u5b9e\u9700\u8981\u5bf9\u5b9e\u4f8b\u5b57\u6bb5\u4f7f\u7528\u7ebf\u7a0b\u5b89\u5168\u7684\u5ef6\u8fdf\u521d\u59cb\u5316\uff0c\u4f7f\u7528\u57fa\u4e8evolatile\u7684\u5ef6\u8fdf\u521d\u59cb\u5316\u7684\u65b9\u6848\uff1b \u5982\u679c\u786e\u5b9e\u9700\u8981\u5bf9\u9759\u6001\u5b57\u6bb5\u4f7f\u7528\u7ebf\u7a0b\u5b89\u5168\u7684\u5ef6\u8fdf\u521d\u59cb\u5316\uff0c\u4f7f\u7528\u57fa\u4e8e\u7c7b\u521d\u59cb\u5316\u7684\u65b9\u6848\u3002 public class InstanceFactory { private static class InstanceHolder { public static Instance instance = new Instance(); } public static Instance getInstance() { return InstanceHolder.instance ; // \u8fd9\u91cc\u5c06\u5bfc\u81f4InstanceHolder\u7c7b\u88ab\u521d\u59cb\u5316 } }","title":"\u5e76\u53d1\u7f16\u7a0b\u7684\u827a\u672f"},{"location":"Java/2_concurrency/#_1","text":"","title":"\u5e76\u53d1\u7f16\u7a0b\u7684\u827a\u672f"},{"location":"Java/2_concurrency/#_2","text":"\u591a\u7ebf\u7a0b\u5b89\u5168\u6709\u4e09\u4e2a\u7279\u70b9:\u539f\u5b50\u6027\u3001\u53ef\u89c1\u6027\u3001\u6709\u5e8f\u6027; java\u63d0\u4f9b\u4e86\u4e24\u79cd\u673a\u5236\u5b9e\u73b0\uff0csynchronized\u548cvolatile\uff1bsynchronized\u540c\u8fc7\u52a0\u9501\u5b9e\u73b0\u4e09\u4e2a\u7279\u70b9\uff1b\u4f46volatile \u53ea\u80fd\u4fdd\u8bc1\u53ef\u89c1\u6027\u548c\u6709\u5e8f\u6027\uff0c\u901a\u5e38\u548cCAS\u7ed3\u5408\u6765\u5b9e\u73b0\u539f\u5b50\u6027\u3002","title":"\u5e76\u53d1\u673a\u5236\u7684\u5e95\u5c42\u5b9e\u73b0\u539f\u7406"},{"location":"Java/2_concurrency/#volatile","text":"volatile\u662f\u8f7b\u91cf\u7ea7\u7684 synchronized\uff0c\u5b83\u5728\u591a\u5904\u7406\u5668\u5f00\u53d1\u4e2d\u4fdd\u8bc1\u4e86\u5171\u4eab\u53d8\u91cf\u7684\u201c\u53ef\u89c1\u6027\u201d\u3002\u53ef\u89c1\u6027\u7684\u610f\u601d\u662f\u5f53\u4e00\u4e2a\u7ebf\u7a0b \u4fee\u6539\u4e00\u4e2a\u5171\u4eab\u53d8\u91cf\u65f6\uff0c\u53e6\u5916\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u8bfb\u5230\u8fd9\u4e2a\u4fee\u6539\u7684\u503c\u3002\u5982\u679cvolatile\u53d8\u91cf\u4fee\u9970\u7b26\u4f7f\u7528\u6070\u5f53\u7684\u8bdd\uff0c\u5b83\u6bd4synchronized\u7684\u4f7f\u7528\u548c\u6267\u884c\u6210\u672c\u66f4\u4f4e\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4f1a\u5f15\u8d77\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u7684\u5207\u6362\u548c\u8c03\u5ea6\u3002 volatile\u89e3\u51b3\u7684\u95ee\u9898: 1\u3001\u591a\u5904\u7406\u5668\u7684\u8ba1\u7b97\u673a\u80fd\u591f\u6682\u65f6\u5728\u5bc4\u5b58\u5668\u6216\u672c\u5730\u5185\u5b58\u7f13\u51b2\u533a\u4e2d\u4fdd\u5b58\u5185\u5b58\u4e2d\u7684\u503c\u3002\u7ed3\u679c\u662f\u8fd0\u884c\u5728\u4e0d\u540c\u5904\u7406\u5668\u4e0a\u7684\u7ebf\u7a0b \u53ef\u80fd\u5728\u540c\u4e00\u4e2a\u5185\u5b58\u4f4d\u7f6e\u53d6\u5230\u4e0d\u540c\u7684\u503c\u3002 2\u3001\u7f16\u8bd1\u5668\u53ef\u4ee5\u6539\u53d8\u6307\u4ee4\u6267\u884c\u7684\u987a\u5e8f\u4ee5\u4f7f\u541e\u5410\u91cf\u6700\u5927\u5316\u3002\u8fd9\u79cd\u987a\u5e8f\u4e0a\u7684\u53d8\u5316\u4e0d\u4f1a\u6539\u53d8\u4ee3\u7801\u8bed\u4e49\uff0c\u4f46\u662f\u7f16\u8bd1\u5668\u5047\u5b9a\u5185\u5b58\u7684\u503c \u4ec5\u4ec5\u5728\u4ee3\u7801\u4e2d\u6709\u663e\u5f0f\u7684\u4fee\u6539\u6307\u4ee4\u65f6\u624d\u4f1a\u6539\u53d8\u3002\u7136\u800c\uff0c\u5185\u5b58\u7684\u503c\u53ef\u4ee5\u88ab\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6539\u53d8\u3002 \u2003 \u5982\u4f55\u4fdd\u8bc1\"\u53ef\u89c1\u6027\": \u5bf9\u6709volatile\u53d8\u91cf\u4fee\u9970\u7684\u5171\u4eab\u53d8\u91cf\u8fdb\u884c\u5199\u64cd\u4f5c\u7684\u65f6\u5019\uff0cJVM\u5c31\u4f1a\u5411\u5904\u7406\u5668\u53d1\u9001\u4e00\u6761Lock\u524d\u7f00\u7684\u6307\u4ee4\uff0c lock\u524d\u7f00\u7684\u6307\u4ee4\u5728\u591a\u6838\u5904\u7406\u5668\u4e0a\u4f1a\u5f15\u53d1\u4e24\u4ef6\u4e8b\u60c5: 1\u3001 \u5c06\u5f53\u524dCPU\u7f13\u5b58\u884c\u7684\u6570\u636e\u5199\u56de\u5230\u7cfb\u7edf\u5185\u5b58 \uff1b 2\u3001 \u4e00\u4e2a\u5904\u7406\u5668\u7684\u7f13\u5b58\u5199\u56de\u5230\u5185\u5b58\u4f1a\u5bfc\u81f4\u5176\u4ed6\u5904\u7406\u5668\u7684\u7f13\u5b58\u65e0\u6548 \uff1a\u5728\u591a\u5904\u7406\u5668\u4e0b\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u5404\u4e2a\u5904\u7406\u5668\u7684\u7f13\u5b58\u662f\u4e00\u81f4\u7684\uff0c \u5c31\u4f1a\u5b9e\u73b0\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\uff0c\u6bcf\u4e2a\u5904\u7406\u5668\u901a\u8fc7\u55c5\u63a2\u5728\u603b\u7ebf\u4e0a\u4f20\u64ad\u7684\u6570\u636e\u6765\u68c0\u67e5\u81ea\u5df1\u7f13\u5b58\u7684\u503c\u662f\u4e0d\u662f\u8fc7\u671f\u4e86\uff0c \u5f53\u5904\u7406\u5668\u53d1\u73b0\u81ea\u5df1\u7f13\u5b58\u884c\u5bf9\u5e94\u7684\u5185\u5b58\u5730\u5740\u88ab\u4fee\u6539\uff0c\u5c31\u4f1a\u5c06\u5f53\u524d\u5904\u7406\u5668\u7684\u7f13\u5b58\u884c\u8bbe\u7f6e\u6210\u65e0\u6548\u72b6\u6001\uff0c \u5f53\u5904\u7406\u5668\u5bf9\u8fd9\u4e2a\u6570\u636e\u8fdb\u884c\u4fee\u6539\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u4f1a\u91cd\u65b0\u4ece\u7cfb\u7edf\u5185\u5b58\u4e2d\u628a\u6570\u636e\u8bfb\u5230\u5904\u7406\u5668\u7f13\u5b58\u91cc\u3002 \u2003 \u603b\u7ed3: \u591a\u7ebf\u7a0b\u7a0b\u5e8f\u4efb\u4f55\u5bf9volatile\u4fee\u9970\u7684\u53d8\u91cf\u7684\u8bbf\u95ee\u5747\u9700\u8981\u4ece\u5171\u4eab\u5185\u5b58\u4e2d\u83b7\u53d6\uff0c \u800c\u5bf9\u5b83\u7684\u6539\u53d8\u5fc5\u987b\u540c\u6b65\u5237\u65b0\u56de\u5171\u4eab\u5185\u5b58\uff0c \u5b83\u4fdd\u8bc1\u4e86\u6240\u6709\u7ebf\u7a0b\u5bf9\u53d8\u91cf\u8bbf\u95ee\u7684\u53ef\u89c1\u6027 \u3002 \u2003 volatile\u8bfb\u5199: 1\u3001\u5bf9\u4efb\u610f\u5355\u4e2avolatile\u53d8\u91cf\u7684\u8bfb/\u5199\u5177\u6709\u539f\u5b50\u6027\uff0c\u4f46\u7c7b\u4f3c\u4e8evolatile++\u8fd9\u79cd\u590d\u5408\u64cd\u4f5c\u4e0d\u5177\u6709\u539f\u5b50\u6027\u3002 2\u3001\u5f53\u5199\u4e00\u4e2avolatile\u53d8\u91cf\u65f6\uff0cJMM\u4f1a\u628a\u8be5\u7ebf\u7a0b\u5bf9\u5e94\u7684\u672c\u5730\u5185\u5b58\u4e2d\u7684\u5171\u4eab\u53d8\u91cf\u503c\u5237\u65b0\u5230\u4e3b\u5185\u5b58\u3002 3\u3001\u5f53\u8bfb\u4e00\u4e2avolatile\u53d8\u91cf\u65f6\uff0cJMM\u4f1a\u628a\u8be5\u7ebf\u7a0b\u5bf9\u5e94\u7684\u672c\u5730\u5185\u5b58\u7f6e\u4e3a\u65e0\u6548\u3002\u7ebf\u7a0b\u63a5\u4e0b\u6765\u5c06\u4ece\u4e3b\u5185\u5b58\u4e2d\u8bfb\u53d6\u5171\u4eab\u53d8\u91cf\u3002 \u2003 volatile\u5199-\u8bfb\u5185\u5b58\u8bed\u4e49: 1.\u7ebf\u7a0bA\u5199\u4e00\u4e2avolatile\u53d8\u91cf,\u5b9e\u8d28\u4e0a\u662f\u7ebf\u7a0bA\u5411\u63a5\u4e0b\u6765\u5c06\u8981\u8bfb\u8fd9\u4e2avolatile\u53d8\u91cf\u7684\u67d0\u4e2a\u7ebf\u7a0b\u53d1\u51fa\u4e86(\u5176\u5bf9\u5171\u4eab\u53d8\u91cf\u6240\u505a\u4fee\u6539\u7684)\u6d88\u606f\u3002 2.\u7ebf\u7a0bB\u8bfb\u4e00\u4e2avolatile\u53d8\u91cf,\u5b9e\u8d28\u4e0a\u662f\u7ebf\u7a0bB\u63a5\u6536\u4e86\u4e4b\u524d\u67d0\u4e2a\u7ebf\u7a0b\u53d1\u51fa\u7684(\u5728\u5199\u8fd9\u4e2avolatile\u53d8\u91cf\u4e4b\u524d\u5bf9\u5171\u4eab\u53d8\u91cf\u6240\u505a\u4fee\u6539\u7684)\u6d88\u606f\u3002 3.\u7ebf\u7a0bA\u5199\u4e00\u4e2avolatile\u53d8\u91cf\uff0c\u968f\u540e\u7ebf\u7a0bB\u8bfb\u8fd9\u4e2avolatile\u53d8\u91cf\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u8d28\u4e0a\u662f\u7ebf\u7a0bA\u901a\u8fc7\u4e3b\u5185\u5b58\u5411\u7ebf\u7a0bB\u53d1\u9001\u6d88\u606f\u3002 \u2003 volatile\u5199-\u8bfb\u5185\u5b58\u8bed\u4e49\u5b9e\u73b0:\u57fa\u4e8e\u4fdd\u5b88\u7b56\u7565\u7684JMM\u5185\u5b58\u5c4f\u969c\u63d2\u5165\u7b56\u7565\u3002 \u5728\u6bcf\u4e2avolatile\u5199\u64cd\u4f5c\u7684\u524d\u9762\u63d2\u5165\u4e00\u4e2aStoreStore\u5c4f\u969c; \u5728\u6bcf\u4e2avolatile\u5199\u64cd\u4f5c\u7684\u540e\u9762\u63d2\u5165\u4e00\u4e2aStoreLoad\u5c4f\u969c; \u5728\u6bcf\u4e2avolatile\u8bfb\u64cd\u4f5c\u7684\u524d\u9762\u63d2\u5165\u4e00\u4e2aLoadLoad\u5c4f\u969c; \u5728\u6bcf\u4e2avolatile\u8bfb\u64cd\u4f5c\u7684\u540e\u9762\u63d2\u5165\u4e00\u4e2aLoadStore\u5c4f\u969c\u3002","title":"volatile"},{"location":"Java/2_concurrency/#synchronized","text":"1\u3001synchronized\u5b9e\u73b0\u540c\u6b65\u7684\u4e09\u79cd\u5f62\u5f0f: \u5bf9\u4e8e\u666e\u901a\u540c\u6b65\u65b9\u6cd5\uff0c\u9501\u662f\u5f53\u524d\u5b9e\u4f8b\u5bf9\u8c61; \u5bf9\u4e8e\u9759\u6001\u540c\u6b65\u65b9\u6cd5\uff0c\u9501\u662f\u5f53\u524d\u7c7b\u7684Class\u5bf9\u8c61; \u5bf9\u4e8e\u540c\u6b65\u65b9\u6cd5\u5757\uff0c\u9501\u662fSynchonized\u62ec\u53f7\u91cc\u914d\u7f6e\u7684\u5bf9\u8c61\u3002 JVM\u57fa\u4e8e\u8fdb\u5165\u548c\u9000\u51faMonitor\u5bf9\u8c61\u6765\u5b9e\u73b0\u65b9\u6cd5\u540c\u6b65\u548c\u4ee3\u7801\u5757\u540c\u6b65\uff0c\u4ee3\u7801\u5757\u540c\u6b65\u662f\u4f7f\u7528monitorenter\u548cmonitorexit\u6307\u4ee4\u5b9e\u73b0\u7684\uff1b monitorenter\u6307\u4ee4\u5728\u7f16\u8bd1\u540e\u4f1a\u63d2\u5165\u5230\u540c\u6b65\u4ee3\u7801\u5757\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u800cmonitorexit\u4f1a\u63d2\u5165\u5230\u65b9\u6cd5\u7ed3\u675f\u5904\u548c\u5f02\u5e38\u5904\uff1b \u540c\u6b65\u65b9\u6cd5\u5219\u662f\u4f9d\u9760\u65b9\u6cd5\u4fee\u9970\u7b26\u4e0a\u7684ACC_SYNCHRONIZED(\u7f16\u8bd1\u5668\u81ea\u52a8\u6dfb\u52a0)\u6765\u5b8c\u6210\u7684\u3002 \u65e0\u8bba\u91c7\u7528\u54ea\u79cd\u65b9\u5f0f\uff0c \u5176\u672c\u8d28\u662f\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u7684\u76d1\u89c6\u5668\uff08monitor\uff09\u8fdb\u884c\u83b7\u53d6\uff0c\u800c\u8fd9\u4e2a\u83b7\u53d6\u8fc7\u7a0b\u662f\u6392\u4ed6\u7684 \uff0c \u5373\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u83b7\u53d6\u5230\u7531synchronized\u6240\u4fdd\u62a4\u5bf9\u8c61\u7684\u76d1\u89c6\u5668\u3002 synchronized\u786e\u4fdd\u591a\u4e2a\u7ebf\u7a0b\u5728\u540c\u4e00\u4e2a\u65f6\u523b,\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5904\u4e8e\u65b9\u6cd5\u6216\u8005\u540c\u6b65\u5757\u4e2d, \u4fdd\u8bc1\u4e86\u7ebf\u7a0b\u5bf9\u53d8\u91cf\u8bbf\u95ee\u7684\u53ef\u89c1\u6027\u548c\u6392\u4ed6\u6027 2\u3001 synchronized\u7528\u7684\u9501\u662f\u5b58\u5728Java\u5bf9\u8c61\u5934\u91cc\u7684 \u3002\u5982\u679c\u5bf9\u8c61\u662f\u6570\u7ec4\u7c7b\u578b\uff0c\u5219\u865a\u62df\u673a\u75283\u4e2a\u5b57\u5bbd\uff08Word\uff09\u5b58\u50a8\u5bf9\u8c61\u5934\uff0c \u5982\u679c\u5bf9\u8c61\u662f\u975e\u6570\u7ec4\u7c7b\u578b\uff0c\u5219\u75282\u5b57\u5bbd\u5b58\u50a8\u5bf9\u8c61\u5934\u3002\u572832/64\u4f4d\u865a\u62df\u673a\u4e2d\uff0c1\u5b57\u5bbd\u7b49\u4e8e4/8\u4e2a\u5b57\u8282. 3\u3001\u5728 Java SE 1.6\u4e2d\uff0c\u9501\u4e00\u5171\u67094\u79cd\u72b6\u6001\uff0c\u7ea7\u522b\u4ece\u4f4e\u5230\u9ad8\u4f9d\u6b21\u662f\uff1a\u65e0\u9501\u72b6\u6001\u3001\u504f\u5411\u9501\u72b6\u6001\u3001\u8f7b\u91cf\u7ea7\u9501\u72b6 \u6001\u548c\u91cd\u91cf\u7ea7\u9501\u72b6\u6001\uff0c \u8fd9\u51e0\u4e2a\u72b6\u6001\u4f1a\u968f\u7740\u7ade\u4e89\u60c5\u51b5\u9010\u6e10\u5347\u7ea7\u3002\u9501\u53ef\u4ee5\u5347\u7ea7\u4f46\u4e0d\u80fd\u964d\u7ea7\u3002 \u504f\u5411\u9501 \u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u9501\u4e0d\u4ec5\u4e0d\u5b58\u5728\u591a\u7ebf\u7a0b\u7ade\u4e89\uff0c\u800c\u4e14\u603b\u662f\u7531\u540c\u4e00\u7ebf\u7a0b\u591a\u6b21\u83b7\u5f97\uff0c\u4e3a\u4e86\u8ba9\u7ebf\u7a0b\u83b7\u5f97\u9501\u7684\u4ee3\u4ef7\u66f4\u4f4e\u800c\u5f15\u5165\u4e86\u504f\u5411\u9501\u3002 \u5f53\u4e00\u4e2a\u7ebf\u7a0b\u8bbf\u95ee\u540c\u6b65\u5757\u5e76\u83b7\u53d6\u9501\u65f6\uff0c\u4f1a\u5728\u5bf9\u8c61\u5934\u548c\u6808\u5e27\u4e2d\u7684\u9501\u8bb0\u5f55\u91cc\u5b58\u50a8\u9501\u504f\u5411\u7684\u7ebf\u7a0bID\uff0c\u4ee5\u540e\u8be5\u7ebf\u7a0b\u5728\u8fdb\u5165\u548c\u9000\u51fa\u540c\u6b65\u5757\u65f6\u4e0d\u9700\u8981\u8fdb\u884cCAS\u64cd\u4f5c\u6765\u52a0\u9501\u548c\u89e3\u9501\uff0c\u53ea\u9700\u7b80\u5355\u5730\u6d4b\u8bd5\u4e00\u4e0b\u5bf9\u8c61\u5934\u7684Mark Word\u91cc\u662f\u5426\u5b58\u50a8\u7740\u6307\u5411\u5f53\u524d\u7ebf\u7a0b\u7684\u504f\u5411\u9501\u3002\u5982\u679c\u6d4b\u8bd5\u6210\u529f\uff0c\u8868\u793a\u7ebf\u7a0b\u5df2\u7ecf\u83b7\u5f97\u4e86\u9501\u3002\u5982\u679c\u6d4b\u8bd5\u5931\u8d25\uff0c\u5219\u9700\u8981\u518d\u6d4b\u8bd5\u4e00\u4e0bMark Word\u4e2d\u504f\u5411\u9501\u7684\u6807\u8bc6\u662f\u5426\u8bbe\u7f6e\u62101\uff08\u8868\u793a\u5f53\u524d\u662f\u504f\u5411\u9501\uff09\uff1a\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\uff0c\u5219\u4f7f\u7528CAS\u64cd\u4f5c\u83b7\u5f97\u9501\uff1b\u5982\u679c\u8bbe\u7f6e\u4e86\uff0c\u5219\u5c1d\u8bd5\u4f7f\u7528CAS\u5c06\u5bf9\u8c61\u5934\u7684\u504f\u5411\u9501\u6307\u5411\u5f53\u524d\u7ebf\u7a0b\uff0c\u5982\u679c\u5931\u8d25\u5219\u4f1a\u8fdb\u884c\u504f\u5411\u9501\u7684\u64a4\u9500\u3002 \u5f53JVM\u542f\u7528\u4e86\u504f\u5411\u9501\u6a21\u5f0f\uff08JDK6\u4ee5\u4e0a\u9ed8\u8ba4\u5f00\u542f\uff09\uff0c\u65b0\u521b\u5efa\u5bf9\u8c61\u7684Mark Word\u4e2d\u7684Thread Id\u4e3a0\uff0c\u8bf4\u660e\u6b64\u65f6\u5904\u4e8e\u53ef\u504f\u5411 \u4f46\u672a\u504f\u5411\u4efb\u4f55\u7ebf\u7a0b\uff0c\u4e5f\u53eb\u505a\u533f\u540d\u504f\u5411\u72b6\u6001(anonymously biased)\u3002 \u7ebf\u7a0b\u5728\u6267\u884c\u540c\u6b65\u5757\u4e4b\u524d\uff0cJVM\u4f1a\u5148\u5728\u5f53\u524d\u7ebf\u7a0b\u7684\u6808\u6862\u4e2d\u521b\u5efa\u7528\u4e8e\u5b58\u50a8\u9501\u8bb0\u5f55\u7684\u7a7a\u95f4\uff0c\u5e76\u5c06\u5bf9\u8c61\u5934\u4e2d\u7684Mark Word \u590d\u5236\u5230Lock Record\u4e2d\uff0c\u5b98\u65b9\u79f0\u4e3aDisplaced Mark Word\u3002 \u504f\u5411\u9501\u903b\u8f91 1.\u7ebf\u7a0bA\u7b2c\u4e00\u6b21\u8bbf\u95ee\u540c\u6b65\u5757\u65f6\uff0c\u5148\u68c0\u6d4b\u5bf9\u8c61\u5934Mark Word\u4e2d\u7684\u6807\u5fd7\u4f4d\u662f\u5426\u4e3a01\uff0c\u4f9d\u6b64\u5224\u65ad\u6b64\u65f6\u5bf9\u8c61\u9501\u662f\u5426\u5904\u4e8e\u65e0\u9501\u72b6\u6001 \u6216\u8005\u504f\u5411\u9501\u72b6\u6001\uff08\u533f\u540d\u504f\u5411\u9501\uff09\uff1b 2.\u7136\u540e\u5224\u65ad\u504f\u5411\u9501\u6807\u5fd7\u4f4d\u662f\u5426\u4e3a1\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u8fdb\u5165\u8f7b\u91cf\u7ea7\u9501\u903b\u8f91\uff08\u4f7f\u7528CAS\u7ade\u4e89\u9501\uff09\uff0c\u5982\u679c\u662f\uff0c\u5219\u8fdb\u5165\u4e0b\u4e00\u6b65\u6d41\u7a0b\uff1b 3.\u5224\u65ad\u662f\u504f\u5411\u9501\u65f6\uff0c\u68c0\u67e5\u5bf9\u8c61\u5934Mark Word\u4e2d\u8bb0\u5f55\u7684Thread Id\u662f\u5426\u662f\u5f53\u524d\u7ebf\u7a0bID\uff0c\u5982\u679c\u662f\uff0c\u5219\u8868\u660e\u5f53\u524d\u7ebf\u7a0b \u5df2\u7ecf\u83b7\u5f97\u5bf9\u8c61\u9501\uff0c\u4ee5\u540e\u8be5\u7ebf\u7a0b\u8fdb\u5165\u540c\u6b65\u5757\u65f6\uff0c\u4e0d\u9700\u8981CAS\u8fdb\u884c\u52a0\u9501\uff0c\u53ea\u4f1a\u5f80\u5f53\u524d\u7ebf\u7a0b\u7684\u6808\u4e2d\u6dfb\u52a0 \u4e00\u6761Displaced Mark Word\u4e3a\u7a7a\u7684Lock Record\u4e2d\uff0c\u7528\u6765\u7edf\u8ba1\u91cd\u5165\u7684\u6b21\u6570\u3002 \u9000\u51fa\u540c\u6b65\u5757\u91ca\u653e\u504f\u5411\u9501\u65f6\uff0c\u5219\u4f9d\u6b21\u5220\u9664\u5bf9\u5e94Lock Record\uff0c\u4f46\u662f\u4e0d\u4f1a\u4fee\u6539\u5bf9\u8c61\u5934\u4e2d\u7684Thread Id\uff1b \u6ce8\uff1a \u504f\u5411\u9501\u64a4\u9500\u662f\u6307\u5728\u83b7\u53d6\u504f\u5411\u9501\u7684\u8fc7\u7a0b\u4e2d\u56e0\u4e0d\u6ee1\u8db3\u6761\u4ef6\u5bfc\u81f4\u8981\u5c06\u9501\u5bf9\u8c61\u6539\u4e3a\u975e\u504f\u5411\u9501\u72b6\u6001\uff0c \u800c\u504f\u5411\u9501\u91ca\u653e\u662f\u6307\u9000\u51fa\u540c\u6b65\u5757\u65f6\u7684\u8fc7\u7a0b\u3002 4.\u5982\u679c\u5bf9\u8c61\u5934Mark Word\u4e2dThread Id\u4e0d\u662f\u5f53\u524d\u7ebf\u7a0bID\uff0c\u5219\u8fdb\u884cCAS\u64cd\u4f5c\uff0c\u4f01\u56fe\u5c06\u5f53\u524d\u7ebf\u7a0bID\u66ff\u6362\u8fdbMark Word\u3002 \u5982\u679c\u5f53\u524d\u5bf9\u8c61\u9501\u72b6\u6001\u5904\u4e8e\u533f\u540d\u504f\u5411\u9501\u72b6\u6001\uff08\u53ef\u504f\u5411\u672a\u9501\u5b9a\uff09\uff0c\u5219\u4f1a\u66ff\u6362\u6210\u529f\uff08\u5c06Mark Word\u4e2d\u7684Thread id\u7531\u533f\u540d0 \u6539\u6210\u5f53\u524d\u7ebf\u7a0bID\uff0c\u5728\u5f53\u524d\u7ebf\u7a0b\u6808\u4e2d\u627e\u5230\u5185\u5b58\u5730\u5740\u6700\u9ad8(\u6808\u5e95\uff0c\u6700\u5148\u5165\u6808)\u7684\u53ef\u7528Lock Record\uff0c\u5c06\u7ebf\u7a0bID\u5b58\u5165),\u83b7\u53d6\u5230\u9501\uff0c \u6267\u884c\u540c\u6b65\u4ee3\u7801\u5757\uff1b 5.\u5982\u679c\u5bf9\u8c61\u9501\u5df2\u7ecf\u88ab\u5176\u4ed6\u7ebf\u7a0b\u5360\u7528\uff0c\u5219\u4f1a\u66ff\u6362\u5931\u8d25\uff0c\u5f00\u59cb\u8fdb\u884c\u504f\u5411\u9501\u64a4\u9500\uff0c\u8fd9\u4e5f\u662f\u504f\u5411\u9501\u7684\u7279\u70b9\uff0c \u4e00\u65e6\u51fa\u73b0\u7ebf\u7a0b\u7ade\u4e89\uff0c \u5c31\u4f1a\u64a4\u9500\u504f\u5411\u9501 \uff1b 6. \u504f\u5411\u9501\u7684\u64a4\u9500\u9700\u8981\u7b49\u5f85\u5168\u5c40\u5b89\u5168\u70b9\uff08safe point\uff0c\u4ee3\u8868\u4e86\u4e00\u4e2a\u72b6\u6001\uff0c\u5728\u8be5\u72b6\u6001\u4e0b\u6240\u6709\u7ebf\u7a0b\u90fd\u662f\u6682\u505c\u7684\uff09 , \u6682\u505c\u6301\u6709\u504f\u5411\u9501\u7684\u7ebf\u7a0b\uff0c\u68c0\u67e5\u6301\u6709\u504f\u5411\u9501\u7684\u7ebf\u7a0b\u72b6\u6001\uff08\u904d\u5386\u5f53\u524dJVM\u7684\u6240\u6709\u7ebf\u7a0b\uff0c\u5982\u679c\u80fd\u627e\u5230\uff0c\u5219\u8bf4\u660e\u504f\u5411\u7684\u7ebf\u7a0b\u8fd8\u5b58\u6d3b), \u5982\u679c\u7ebf\u7a0b\u8fd8\u5b58\u6d3b\uff0c\u5219\u68c0\u67e5\u7ebf\u7a0b\u662f\u5426\u5728\u6267\u884c\u540c\u6b65\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\uff0c\u5982\u679c\u662f\uff0c\u5219\u5347\u7ea7\u4e3a\u8f7b\u91cf\u7ea7\u9501\uff0c\u8fdb\u884cCAS\u7ade\u4e89\u9501\uff1b \u6ce8\uff1a\u6bcf\u6b21\u8fdb\u5165\u540c\u6b65\u5757\uff08\u5373\u6267\u884cmonitorenter\uff09\u7684\u65f6\u5019\u90fd\u4f1a\u4ee5\u5730\u5740\u4ece\u9ad8\u5230\u4f4e\u7684\u987a\u5e8f(\u4ece\u6808\u5e95\u5230\u6808\u9876)\u5728\u6808\u4e2d\u627e\u5230 \u7b2c\u4e00\u4e2a\u53ef\u7528\u7684Lock Record\uff0c\u5e76\u8bbe\u7f6e\u504f\u5411\u7ebf\u7a0bID\uff1b\u6bcf\u6b21\u89e3\u9501\uff08\u5373\u6267\u884cmonitorexit\uff09\u7684\u65f6\u5019\u90fd\u4f1a\u5c06\u6808\u9876\u7684Lock Record \u79fb\u9664\u3002\u6240\u4ee5\u5982\u679c\u80fd\u627e\u5230\u5bf9\u5e94\u7684Lock Record\u8bf4\u660e\u504f\u5411\u7684\u7ebf\u7a0b\u8fd8\u5728\u6267\u884c\u540c\u6b65\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\u3002 7.\u5982\u679c\u6301\u6709\u504f\u5411\u9501\u7684\u7ebf\u7a0b\u672a\u5b58\u6d3b\uff0c\u6216\u8005\u6301\u6709\u504f\u5411\u9501\u7684\u7ebf\u7a0b\u672a\u5728\u6267\u884c\u540c\u6b65\u4ee3\u7801\u5757\u4e2d\u7684\u4ee3\u7801\uff0c\u5219\u8fdb\u884c\u6821\u9a8c\u662f\u5426\u5141\u8bb8\u91cd\u504f\u5411\uff0c \u5982\u679c\u4e0d\u5141\u8bb8\u91cd\u504f\u5411\uff0c\u5219\u64a4\u9500\u504f\u5411\u9501\uff0c\u5c06Mark Word\u8bbe\u7f6e\u4e3a\u65e0\u9501\u72b6\u6001\uff08\u672a\u9501\u5b9a\u4e0d\u53ef\u504f\u5411\u72b6\u6001\uff09\uff0c\u7136\u540e\u5347\u7ea7\u4e3a\u8f7b\u91cf\u7ea7\u9501\uff0c \u8fdb\u884cCAS\u7ade\u4e89\u9501\uff1b 8.\u5982\u679c\u5141\u8bb8\u91cd\u504f\u5411\uff0c\u8bbe\u7f6e\u4e3a\u533f\u540d\u504f\u5411\u9501\u72b6\u6001,CAS\u5c06\u504f\u5411\u9501\u91cd\u65b0\u6307\u5411\u65b0\u7ebf\u7a0b\uff08\u5728\u5bf9\u8c61\u5934\u548c\u7ebf\u7a0b\u6808\u5e27\u7684\u9501\u8bb0\u5f55\u4e2d\u5b58\u50a8\u5f53\u524d \u7ebf\u7a0bID). 9.\u5524\u9192\u6682\u505c\u7684\u7ebf\u7a0b\uff0c\u4ece\u5b89\u5168\u70b9\u7ee7\u7eed\u6267\u884c\u4ee3\u7801\u3002 \u8f7b\u91cf\u7ea7\u9501 \u8f7b\u91cf\u7ea7\u9501\u903b\u8f91\uff1a 1.\u5f53\u7ebf\u7a0b\u8bbf\u95ee\u540c\u6b65\u5757,\u5148\u5224\u65ad\u9501\u72b6\u6001\u6807\u5fd7\u4f4d\uff0c\u5982\u679c\u662f00,\u5219\u8bf4\u660e\u662f\u8f7b\u91cf\u7ea7\u9501,JVM\u4f1a\u5148\u5728\u5f53\u524d\u7ebf\u7a0b\u6808\u5e27\u4e2d\u5206\u914dLock Record\u7a7a\u95f4\uff1b 2.\u5c06\u9501\u5bf9\u8c61\u5934\u4e2d\u7684Mark Word\u62f7\u8d1d\u5230\u5f53\u524d\u7ebf\u7a0b\u7684Lock Record\u4e2d\uff0c\u79f0\u4e3aDisplaced Mark Word\uff0c\u7136\u540e\u4f7f\u7528CAS\uff0c \u5c06\u5bf9\u8c61\u5934\u4e2d\u7684Mark Word\u4fee\u6539\u4e3a\u6307\u5411\u5f53\u524d\u7ebf\u7a0b\u6808\u4e2dLock Record\u7684\u6307\u9488\u3002\u5982\u679c\u6210\u529f\uff0c\u5219\u83b7\u53d6\u8f7b\u91cf\u7ea7\u9501\uff0c\u6267\u884c\u540c\u6b65\u5757\u4e2d\u7684\u4ee3\u7801; \u5982\u679c\u5931\u8d25\uff0c\u5219\u8fdb\u884c\u81ea\u65cb\u7ade\u4e89\u9501\uff0c\u81ea\u65cb\u8fbe\u5230\u4e00\u5b9a\u7684\u6b21\u6570\u5982\u679c\u4f9d\u65e7\u6ca1\u6709\u83b7\u53d6\u5230\u9501\uff0c\u5219\u5347\u7ea7\u4e3a\u91cd\u91cf\u7ea7\u9501 (\u56e0\u4e3a\u81ea\u65cb\u4f1a\u6d88\u8017CPU,\u4e3a\u4e86\u907f\u514d\u65e0\u7528\u7684\u81ea\u65cb,\u4e00\u65e6\u9501\u5347\u7ea7\u4e3a\u91cd\u91cf\u7ea7\u9501,\u5c31\u4e0d\u4f1a\u6062\u590d\u5230\u8f7b\u91cf\u7ea7\u9501,\u81ea\u65cb\u7684\u7ebf\u7a0b\u4f1a\u88ab\u6302\u8d77\u963b\u585e\u4f4f)\uff1b 3.\u6267\u884c\u5b8c\u540c\u6b65\u4ee3\u7801\u5757\u4ee3\u7801\uff0c\u9000\u51fa\u540c\u6b65\u4ee3\u7801\u5757\uff0c\u4f7f\u7528CAS\u5f00\u59cb\u8f7b\u91cf\u7ea7\u9501\u89e3\u9501\uff0c\u89e3\u9501\u7684\u6761\u4ef6\u9700\u8981\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\uff1a 1\uff09\u5bf9\u8c61\u5934Mark Word\u4e2d\u9501\u8bb0\u5f55\u6307\u9488\u662f\u5426\u4f9d\u65e7\u6307\u5411\u5f53\u524d\u7ebf\u7a0bLock Record 2\uff09\u62f7\u8d1d\u5728\u5f53\u524d\u7ebf\u7a0bLock Record\u7684Mark Word\u4fe1\u606f\u662f\u5426\u4e0e\u5bf9\u8c61\u5934\u4e2d\u7684Mark Word\u4e00\u81f4\u3002 4.\u5982\u679c\u6ee1\u8db3\uff0c\u5219\u6210\u529f\u91ca\u653e\u9501\uff1b 5.\u5982\u679c\u4e0d\u6ee1\u8db3\uff0c\u5219\u91ca\u653e\u9501\uff0c\u5524\u9192\u88ab\u6302\u8d77\u963b\u585e\u7684\u7ebf\u7a0b\uff0c\u5f00\u59cb\u91cd\u91cf\u7ea7\u9501\u7684\u7ade\u4e89\u3002 \u6ce8\uff1a\u5f53\u8d85\u8fc7\u81ea\u65cb\u9608\u503c\uff0c\u7ade\u4e89\u7684\u7ebf\u7a0b\u5c31\u4f1a\u628a\u9501\u5bf9\u8c61Mark Word\u6307\u5411\u91cd\u91cf\u7ea7\u9501\uff0c\u5bfc\u81f4Mark Word\u4e2d\u7684\u503c\u53d1\u751f\u4e86\u53d8\u5316\uff0c \u5f53\u539f\u6301\u6709\u8f7b\u91cf\u7ea7\u9501\u7684\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\uff0c\u5c1d\u8bd5\u901a\u8fc7CAS\u91ca\u653e\u9501\u65f6\uff0c\u56e0\u4e3aMark Word\u5df2\u7ecf\u6307\u5411\u91cd\u9501\uff0c \u4e0d\u518d\u662f\u6307\u5411\u5f53\u524d\u7ebf\u7a0bLock Record\u7684\u6307\u9488\uff0c\u4e8e\u662f\u89e3\u9501\u5931\u8d25\uff0c\u8fd9\u65f6\u539f\u6301\u6709\u8f7b\u91cf\u7ea7\u9501\u7684\u7ebf\u7a0b\u5c31\u4f1a\u77e5\u9053\u9501\u5df2\u7ecf\u5347\u7ea7\u4e3a\u91cd\u91cf\u7ea7\u9501\u3002 \u91cd\u5165\u8ba1\u6570: \u7c7b\u4f3c\u504f\u5411\u9501\uff0c\u4f1a\u5f80\u5f53\u524d\u7ebf\u7a0b\u7684\u6808\u4e2d\u6dfb\u52a0\u4e00\u6761Displaced Mark Word\u4e3a\u7a7a\u7684Lock Record\u4e2d\uff0c\u7528\u6765\u7edf\u8ba1\u91cd\u5165\u7684\u6b21\u6570 \u91cd\u91cf\u9501 \u91cd\u91cf\u7ea7\u9501\u662f\u901a\u8fc7\u4e92\u65a5\u91cf(Mutex)\u6765\u5b9e\u73b0\u7684,\u5373\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u5165\u4e86synchronized\u540c\u6b65\u5757,\u5728\u672a\u5b8c\u6210\u4efb\u52a1\u65f6,\u4f1a\u963b\u585e\u540e\u9762\u7684\u6240\u6709\u7ebf\u7a0b; Java\u7ebf\u7a0b\u662f\u6620\u5c04\u5230\u64cd\u4f5c\u7cfb\u7edf\u7684\u539f\u751f\u7ebf\u7a0b\u4e0a\u7684,\u5982\u679c\u8981\u963b\u585e\u6216\u5524\u9192\u4e00\u4e2a\u7ebf\u7a0b,\u90fd\u9700\u8981\u4f9d\u9760\u64cd\u4f5c\u7cfb\u7edf\u4ece\u5f53\u524d\u7528\u6237\u6001\u8f6c\u6362\u5230\u6838\u5fc3\u6001\u4e2d\uff0c \u8fd9\u79cd\u72b6\u6001\u8f6c\u6362\u9700\u8981\u8017\u8d39\u5904\u7406\u5668\u5f88\u591a\u65f6\u95f4\uff0c\u5bf9\u4e8e\u7b80\u5355\u540c\u6b65\u5757\uff0c\u53ef\u80fd\u72b6\u6001\u8f6c\u6362\u65f6\u95f4\u6bd4\u7528\u6237\u4ee3\u7801\u6267\u884c\u65f6\u95f4\u8fd8\u8981\u957f\uff0c \u5bfc\u81f4\u5b9e\u9645\u4e1a\u52a1\u5904\u7406\u6240\u5360\u6bd4\u504f\u5c0f\uff0c\u6027\u80fd\u635f\u5931\u8f83\u5927","title":"synchronized"},{"location":"Java/2_concurrency/#_3","text":"CAS\u64cd\u4f5c CAS(Compare And Swap)\u64cd\u4f5c\u5305\u542b\u4e09\u4e2a\u64cd\u4f5c\u6570:\u5185\u5b58\u4f4d\u7f6e\uff08V\uff09\u3001\u9884\u671f\u539f\u503c\uff08A\uff09\u548c\u65b0\u503c(B)\u3002 \u5982\u679c\u5185\u5b58\u4f4d\u7f6e\u7684\u503c\u4e0e\u9884\u671f\u539f\u503c\u76f8\u5339\u914d\uff0c\u90a3\u4e48\u5904\u7406\u5668\u4f1a\u81ea\u52a8\u5c06\u8be5\u4f4d\u7f6e\u503c\u66f4\u65b0\u4e3a\u65b0\u503c\u3002\u5426\u5219\uff0c\u5904\u7406\u5668\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c\u3002 CAS\u7684\u4e09\u5927\u95ee\u9898 // AtomicStampReference\u7c7b\u4e2d\u65b9\u6cd5 public boolean compareAndSet(V expectedReference, V newReference, int expectedStamp, int newStamp) { Pair<V> current = pair; return expectedReference == current.reference && // \u671f\u671b\u5f15\u7528==\u5f53\u524d\u5f15\u7528 expectedStamp == current.stamp && // \u671f\u671b\u7248\u672c\u53f7==\u5f53\u524d\u7248\u672c\u53f7 // \u5982\u679c\u65b0\u5f15\u7528==\u5f53\u524d\u5f15\u7528\uff0c\u4e14\u65b0\u7248\u672c==\u5f53\u524d\u7248\u672c\uff0c\u4e8e\u662f\u6ca1\u5fc5\u8981\u4fee\u6539 // \u5426\u5219\u5c31\u521b\u5efa\u4e00\u4e2a\u65b0pair\uff0c\u901a\u8fc7CAS\u64cd\u4f5c\u8d4b\u503c\u7ed9\u5f53\u524dpair. ((newReference == current.reference && newStamp == current.stamp) || casPair(current, Pair.of(newReference, newStamp))); } JAVA\u4e2d\u63d0\u4f9b\u4e86\u539f\u751fCAS\u64cd\u4f5c \u5b9e\u73b0\u539f\u5b50\u64cd\u4f5c 1\u3001\u9996\u5148\u5904\u7406\u5668\u4f1a\u81ea\u52a8\u4fdd\u8bc1\u57fa\u672c\u7684\u5185\u5b58\u64cd\u4f5c\u7684\u539f\u5b50\u6027\u3002\u5904\u7406\u5668\u4fdd\u8bc1\u4ece\u7cfb\u7edf\u5185\u5b58\u4e2d\u8bfb\u53d6\u6216\u8005\u5199\u5165\u4e00\u4e2a\u5b57\u8282\u662f\u539f\u5b50\u7684\uff1b \u6700\u65b0\u7684\u5904\u7406\u5668\u80fd\u751a\u81f3\u80fd\u4fdd\u8bc1 \u5355\u5904\u7406\u5668 \u5bf9\u540c\u4e00\u4e2a\u7f13\u5b58\u884c\u91cc\u8fdb\u884c16/32/64\u4f4d \u7684\u64cd\u4f5c\u662f\u539f\u5b50\u7684; 2\u3001\u5904\u7406\u5668\u63d0\u4f9b\u603b\u7ebf\u9501\u5b9a\u548c\u7f13\u5b58\u9501\u5b9a\u4e24\u4e2a\u673a\u5236\u6765\u4fdd\u8bc1\u590d\u6742\u5185\u5b58\u64cd\u4f5c(\u5982\u8de8\u603b\u7ebf\u5bbd\u5ea6\u3001\u8de8\u591a\u4e2a\u7f13\u5b58\u884c\u548c\u8de8\u9875\u8868\u7684\u8bbf\u95ee)\u7684\u539f\u5b50\u6027\u3002 \u6240\u8c13\u603b\u7ebf\u9501\u5b9a\u5c31\u662f\u4f7f\u7528\u5904\u7406\u5668\u63d0\u4f9b\u7684\u4e00\u4e2aLOCK# \u4fe1\u53f7\uff0c\u5f53\u4e00\u4e2a\u5904\u7406\u5668\u5728\u603b\u7ebf\u4e0a\u8f93\u51fa\u6b64\u4fe1\u53f7\u65f6\uff0c\u5176\u4ed6\u5904\u7406\u5668\u7684\u8bf7\u6c42\u5c06\u88ab\u963b\u585e\u4f4f\uff0c \u90a3\u4e48\u8be5\u5904\u7406\u5668\u53ef\u4ee5\u72ec\u5360\u5171\u4eab\u5185\u5b58\u3002 \u6240\u8c13\u7f13\u5b58\u9501\u5b9a\u662f\u6307\u5185\u5b58\u533a\u57df\u5982\u679c\u88ab\u7f13\u5b58\u5728\u5904\u7406\u5668\u7684\u7f13\u5b58\u884c\u4e2d,\u5e76\u4e14\u5728Lock\u64cd\u4f5c\u671f\u95f4\u88ab\u9501\u5b9a,\u90a3\u4e48\u5f53\u5b83\u6267\u884c\u9501\u64cd\u4f5c\u56de\u5199\u5230\u5185\u5b58\u65f6, \u5904\u7406\u5668\u4e0d\u5728\u603b\u7ebf\u4e0a\u58f0\u8a00LOCK#\u4fe1\u53f7\uff0c\u800c\u662f\u4fee\u6539\u5185\u90e8\u7684\u5185\u5b58\u5730\u5740\uff0c\u5e76\u5141\u8bb8\u5b83\u7684\u7f13\u5b58\u4e00\u81f4\u6027\u673a\u5236\u6765\u4fdd\u8bc1\u64cd\u4f5c\u7684\u539f\u5b50\u6027\uff0c \u56e0\u4e3a \u7f13\u5b58\u4e00\u81f4\u6027\u673a\u5236\u4f1a\u963b\u6b62\u540c\u65f6\u4fee\u6539\u7531\u4e24\u4e2a\u4ee5\u4e0a\u5904\u7406\u5668\u7f13\u5b58\u7684\u5185\u5b58\u533a\u57df\u6570\u636e ,\u5f53\u5176\u4ed6\u5904\u7406\u5668\u56de\u5199\u5df2\u88ab\u9501\u5b9a\u7684\u7f13\u5b58\u884c\u7684\u6570\u636e\u65f6, \u4f1a\u4f7f\u7f13\u5b58\u884c\u65e0\u6548\u3002 \u4f46\u662f\u6709\u4e24\u79cd\u60c5\u51b5\u4e0b\u5904\u7406\u5668\u4e0d\u4f1a\u4f7f\u7528\u7f13\u5b58\u9501\u5b9a\u3002 \u7b2c\u4e00\u79cd\u60c5\u51b5\u662f:\u5f53\u64cd\u4f5c\u7684\u6570\u636e\u4e0d\u80fd\u88ab\u7f13\u5b58\u5728\u5904\u7406\u5668\u5185\u90e8,\u6216\u64cd\u4f5c\u7684\u6570\u636e\u8de8\u591a\u4e2a\u7f13\u5b58\u884c(cache line)\u65f6,\u5904\u7406\u5668\u4f1a\u8c03\u7528\u603b\u7ebf\u9501\u5b9a\u3002 \u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f:\u6709\u4e9b\u5904\u7406\u5668\u4e0d\u652f\u6301\u7f13\u5b58\u9501\u5b9a\u3002\u5bf9\u4e8eIntel 486\u548cPentium\u5904\u7406\u5668\uff0c\u5c31\u7b97\u9501\u5b9a\u7684\u5185\u5b58\u533a\u57df\u5728\u5904\u7406\u5668\u7684\u7f13\u5b58\u884c\u4e2d \u4e5f\u4f1a\u8c03\u7528\u603b\u7ebf\u9501\u5b9a\u3002 \u5728java\u4e2d\u5b9e\u73b0\u539f\u5b50\u64cd\u4f5c 1\u3001\u4f7f\u7528\u81ea\u65cbCAS\u5b9e\u73b0\u539f\u5b50\u64cd\u4f5c\uff1a\u5229\u7528\u4e86\u5904\u7406\u5668\u63d0\u4f9b\u7684CMPXCHG\u6307\u4ee4\u5b9e\u73b0\uff0c\u5faa\u73af\u8fdb\u884cCAS\u64cd\u4f5c\u76f4\u5230\u6210\u529f\u4e3a\u6b62\uff1b JDK\u7684\u5e76\u53d1\u5305\u91cc\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7c7b\u6765\u652f\u6301\u539f\u5b50\u64cd\u4f5c\uff0c\u5982AtomicBoolean\u3001AtomicInt\u3001AtomicLong\u3002 2\u3001\u9501\u673a\u5236\u4fdd\u8bc1\u4e86\u53ea\u6709\u83b7\u5f97\u9501\u7684\u7ebf\u7a0b\u624d\u80fd\u591f\u64cd\u4f5c\u9501\u5b9a\u7684\u5185\u5b58\u533a\u57df\u3002JVM\u5185\u90e8\u5b9e\u73b0\u4e86\u5f88\u591a\u79cd\u9501\u673a\u5236\uff0c \u6709\u504f\u5411\u9501\u3001\u8f7b\u91cf\u7ea7\u9501\u548c\u91cd\u91cf\u9501(\u4e92\u65a5\u9501)\u3002 \u9664\u4e86\u504f\u5411\u9501\uff0cJVM\u5b9e\u73b0\u9501\u7684\u65b9\u5f0f\u90fd\u7528\u4e86\u5faa\u73afCAS \uff0c \u5373\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u60f3\u8fdb\u5165\u540c\u6b65\u5757\u7684\u65f6\u5019\u4f7f\u7528\u5faa\u73afCAS\u7684\u65b9\u5f0f\u6765\u83b7\u53d6\u9501\uff0c\u5f53\u5b83\u9000\u51fa\u540c\u6b65\u5757\u7684\u65f6 \u5019\u4f7f\u7528\u5faa\u73afCAS\u91ca\u653e\u9501\u3002","title":"\u539f\u5b50\u64cd\u4f5c"},{"location":"Java/2_concurrency/#java","text":"","title":"JAVA\u5185\u5b58\u6a21\u578b"},{"location":"Java/2_concurrency/#java_1","text":"\u7ebf\u7a0b\u901a\u4fe1:\u662f\u6307\u7ebf\u7a0b\u4e4b\u95f4\u4ee5\u4f55\u79cd\u673a\u5236\u6765\u4ea4\u6362\u4fe1\u606f\u3002\u5728\u547d\u4ee4\u5f0f\u7f16\u7a0b\u4e2d\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u673a\u5236\u6709\u4e24\u79cd\uff1a\u5171\u4eab\u5185\u5b58\u548c\u6d88\u606f\u4f20\u9012\u3002 \u5728\u5171\u4eab\u5185\u5b58\u7684\u5e76\u53d1\u6a21\u578b\u91cc\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u7a0b\u5e8f\u7684\u516c\u5171\u72b6\u6001\uff0c\u901a\u8fc7\u5199-\u8bfb\u5185\u5b58\u4e2d\u7684\u516c\u5171\u72b6\u6001\u8fdb\u884c\u9690\u5f0f\u901a\u4fe1\u3002 \u5728\u6d88\u606f\u4f20\u9012\u7684\u5e76\u53d1\u6a21\u578b\u91cc\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u6ca1\u6709\u516c\u5171\u72b6\u6001\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u5fc5\u987b\u901a\u8fc7\u53d1\u9001\u6d88\u606f\u6765\u663e\u5f0f\u8fdb\u884c\u901a\u4fe1\u3002 Java\u7684\u5e76\u53d1\u91c7\u7528\u7684\u662f\u5171\u4eab\u5185\u5b58\u6a21\u578b\uff0cJava\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u603b\u662f\u9690\u5f0f\u8fdb\u884c\u3002 \u7ebf\u7a0b\u540c\u6b65:\u540c\u6b65\u662f\u6307\u7a0b\u5e8f\u4e2d\u7528\u4e8e\u63a7\u5236\u4e0d\u540c\u7ebf\u7a0b\u95f4\u64cd\u4f5c\u53d1\u751f\u76f8\u5bf9\u987a\u5e8f\u7684\u673a\u5236\u3002 \u5728\u5171\u4eab\u5185\u5b58\u5e76\u53d1\u6a21\u578b\u91cc\uff0c\u540c\u6b65\u662f\u663e\u5f0f\u8fdb\u884c\u7684\u3002\u7a0b\u5e8f\u5458\u5fc5\u987b\u663e\u5f0f\u6307\u5b9a\u67d0\u4e2a\u65b9\u6cd5\u6216\u67d0\u6bb5\u4ee3\u7801\u9700\u8981\u5728\u7ebf\u7a0b\u4e4b\u95f4\u4e92\u65a5\u6267\u884c\u3002 \u5728\u6d88\u606f\u4f20\u9012\u7684\u5e76\u53d1\u6a21\u578b\u91cc\uff0c\u7531\u4e8e\u6d88\u606f\u7684\u53d1\u9001\u5fc5\u987b\u5728\u6d88\u606f\u7684\u63a5\u6536\u4e4b\u524d\uff0c\u56e0\u6b64\u540c\u6b65\u662f\u9690\u5f0f\u8fdb\u884c\u7684\u3002 java\u5185\u5b58\u6a21\u578b\u62bd\u8c61\u673a\u6784 \u5728Java\u4e2d\uff0c\u6240\u6709\u5b9e\u4f8b\u57df\u3001\u9759\u6001\u57df\u548c\u6570\u7ec4\u5143\u7d20\u90fd\u5b58\u50a8\u5728\u5806\u5185\u5b58\u4e2d\uff0c\u5806\u5185\u5b58\u5728\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\uff1b\u5c40\u90e8\u53d8\u91cf\uff0c\u65b9\u6cd5\u5b9a\u4e49\u53c2\u6570\u548c\u5f02\u5e38\u5904\u7406\u5668\u53c2\u6570\u4e0d\u4f1a\u5728\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\uff0c\u5b83\u4eec\u4e0d\u4f1a\u6709\u5185\u5b58\u53ef\u89c1\u6027\u95ee\u9898\uff0c\u4e5f\u4e0d\u53d7\u5185\u5b58\u6a21\u578b\u7684\u5f71\u54cd\u3002 Java\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u7531Java\u5185\u5b58\u6a21\u578b\uff08JMM\uff09\u63a7\u5236\uff0cJMM\u51b3\u5b9a\u4e00\u4e2a\u7ebf\u7a0b\u5bf9\u5171\u4eab\u53d8\u91cf\u7684\u5199\u5165\u4f55\u65f6\u5bf9\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u89c1\u3002\u4ece\u62bd\u8c61\u7684\u89d2\u5ea6\u6765\u770b\uff0cJMM\u5b9a\u4e49\u4e86\u7ebf\u7a0b\u548c\u4e3b\u5185\u5b58\u4e4b\u95f4\u7684\u62bd\u8c61\u5173\u7cfb\uff1a\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5171\u4eab\u53d8\u91cf\u5b58\u50a8\u5728\u4e3b\u5185\u5b58\uff08Main Memory\uff09\u4e2d\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u79c1\u6709\u7684\u672c\u5730\u5185\u5b58\uff0c\u672c\u5730\u5185\u5b58\u4e2d\u5b58\u50a8\u4e86\u8be5\u7ebf\u7a0b\u5df2\u8bfb/\u5199\u5171\u4eab\u53d8\u91cf\u7684\u526f\u672c\u3002\u672c\u5730\u5185\u5b58\u662fJMM\u7684\u4e00\u4e2a\u62bd\u8c61\u6982\u5ff5\uff0c\u5e76\u4e0d\u771f\u5b9e\u5b58\u5728\u3002\u5b83\u6db5\u76d6\u4e86\u7f13\u5b58\u3001\u5199\u7f13\u51b2\u533a\u3001\u5bc4\u5b58\u5668\u4ee5\u53ca\u5176\u4ed6\u7684\u786c\u4ef6\u548c\u7f16\u8bd1\u5668\u4f18\u5316\u3002 \u7ebf\u7a0bA\u3001B\u4e4b\u95f4\u901a\u4fe1\u8fc7\u7a0b: 1) \u7ebf\u7a0bA\u628a\u672c\u5730\u5185\u5b58A\u4e2d\u66f4\u65b0\u8fc7\u7684\u5171\u4eab\u53d8\u91cf\u5237\u65b0\u5230\u4e3b\u5185\u5b58\u4e2d\u53bb\u3002 2) \u7ebf\u7a0bB\u5230\u4e3b\u5185\u5b58\u4e2d\u53bb\u8bfb\u53d6\u7ebf\u7a0bA\u4e4b\u524d\u5df2\u66f4\u65b0\u8fc7\u7684\u5171\u4eab\u53d8\u91cf java\u5185\u5b58\u53ef\u89c1\u6027\u4fdd\u8bc1 \u2003\u6700\u5c0f\u5b89\u5168\u6027\u4fdd\u8bc1\u7ebf\u7a0b\u8bfb\u53d6\u5230\u7684\u503c\uff0c\u8981\u4e48\u662f\u4e4b\u524d\u67d0\u4e2a\u7ebf\u7a0b\u5199\u5165\u7684\u503c\uff0c\u8981\u4e48\u662f\u9ed8\u8ba4\u503c\uff080\u3001null\u3001false\uff09\u3002\u4f46\u6700\u5c0f\u5b89\u5168\u6027\u5e76\u4e0d\u4fdd\u8bc1 \u7ebf\u7a0b\u8bfb\u53d6\u5230\u7684\u503c\uff0c\u4e00\u5b9a\u662f\u67d0\u4e2a\u7ebf\u7a0b\u5199\u5b8c\u540e\u7684\u503c\u3002\u6700\u5c0f\u5b89\u5168\u6027\u4fdd\u8bc1\u7ebf\u7a0b\u8bfb\u53d6\u5230\u7684\u503c\u4e0d\u662f\u65e0\u4e2d\u751f\u6709\uff0c\u4f46\u5e76\u4e0d\u4fdd\u8bc1\u7ebf\u7a0b\u8bfb\u53d6\u5230\u7684\u503c\u4e00\u5b9a\u662f\u6b63\u786e\u7684\u3002","title":"Java\u5185\u5b58\u6a21\u578b\u57fa\u7840"},{"location":"Java/2_concurrency/#_4","text":"1\u3001\u7f16\u8bd1\u5668\u4f18\u5316\u7684\u91cd\u6392\u5e8f\u3002\u7f16\u8bd1\u5668\u5728\u4e0d\u6539\u53d8\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u8bed\u4e49\u7684\u524d\u63d0\u4e0b\uff0c\u53ef\u4ee5\u91cd\u65b0\u5b89\u6392\u8bed\u53e5\u7684\u6267\u884c\u987a\u5e8f\u3002 2\u3001\u6307\u4ee4\u7ea7\u5e76\u884c\u7684\u91cd\u6392\u5e8f\u3002\u73b0\u4ee3\u5904\u7406\u5668\u91c7\u7528\u4e86\u6307\u4ee4\u7ea7\u5e76\u884c\u6280\u672f\u6765\u5c06\u591a\u6761\u6307\u4ee4\u91cd\u53e0\u6267\u884c\u3002\u5982\u679c\u4e0d\u5b58\u5728\u6570\u636e\u4f9d\u8d56\u6027\uff0c\u5904\u7406\u5668\u53ef\u4ee5\u6539\u53d8\u8bed\u53e5\u5bf9\u5e94 \u673a\u5668\u6307\u4ee4\u7684\u6267\u884c\u987a\u5e8f\u3002 3\u3001\u5185\u5b58\u7cfb\u7edf\u7684\u91cd\u6392\u5e8f\u3002\u7531\u4e8e\u5904\u7406\u5668\u4f7f\u7528\u7f13\u5b58\u548c\u8bfb/\u5199\u7f13\u51b2\u533a\uff0c\u8fd9\u4f7f\u5f97\u52a0\u8f7d\u548c\u5b58\u50a8\u64cd\u4f5c\u770b\u4e0a\u53bb\u53ef\u80fd\u662f\u5728\u4e71\u5e8f\u6267\u884c\u3002 \u6570\u636e\u4f9d\u8d56\u6027 \u5982\u679c\u4e24\u4e2a\u64cd\u4f5c\u8bbf\u95ee\u540c\u4e00\u4e2a\u53d8\u91cf\uff0c\u4e14\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e2d\u6709\u4e00\u4e2a\u4e3a\u5199\u64cd\u4f5c\uff0c\u6b64\u65f6\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u5c31\u5b58\u5728\u6570\u636e\u4f9d\u8d56\u6027\u3002 \u6570\u636e\u4f9d\u8d56\u5206\u4e3a3\u79cd\u7c7b\u578b\uff0c\u5199\u540e\u8bfb\u3001\u5199\u540e\u5199\u3001\u8bfb\u540e\u5199\u3002 \u5bf9\u4e8e\u5b58\u5728\u6570\u636e\u4f9d\u8d56\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u91cd\u6392\u5e8f\u64cd\u4f5c\u6267\u884c\u987a\u5e8f\uff0c\u7a0b\u5e8f\u7ed3\u679c\u5c31\u4f1a\u6539\u53d8\uff1b\u6240\u4ee5\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u5728\u91cd\u6392\u5e8f\u65f6\uff0c\u4f1a\u9075\u5b88\u6570\u636e\u4f9d\u8d56\u6027\uff0c \u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u4e0d\u4f1a\u6539\u53d8\u5b58\u5728\u6570\u636e\u4f9d\u8d56\u5173\u7cfb\u7684\u4e24\u4e2a\u64cd\u4f5c\u7684\u6267\u884c\u987a\u5e8f \u3002 \u4f46\u662f\u6570\u636e\u4f9d\u8d56\u6027\u4ec5\u9488\u5bf9\u5355\u4e2a\u5904\u7406\u5668\u4e2d\u6267\u884c\u7684\u6307\u4ee4\u5e8f\u5217\u548c\u5355\u4e2a\u7ebf\u7a0b\u4e2d\u6267\u884c\u7684\u64cd\u4f5c\uff0c \u4e0d\u540c\u5904\u7406\u5668\u4e4b\u95f4\u548c\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u7684\u6570\u636e\u4f9d\u8d56\u6027\u4e0d\u88ab\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u8003\u8651 \u3002 as-if-serial as-if-serial\uff1a\u4e0d\u7ba1\u600e\u4e48\u91cd\u6392\u5e8f\uff08\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u4e3a\u4e86\u63d0\u9ad8\u5e76\u884c\u5ea6\uff09\uff0c\uff08\u5355\u7ebf\u7a0b\uff09\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u4e0d\u80fd\u88ab\u6539\u53d8\u3002\u7f16\u8bd1\u5668\u3001runtime\u548c\u5904\u7406\u5668\u90fd\u5fc5\u987b\u9075\u5b88as-if-serial\u8bed\u4e49\u3002 \u5728\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u4e2d\uff0c\u5bf9\u5b58\u5728\u63a7\u5236\u4f9d\u8d56(\u4f8b\u5982if-else\u5224\u65ad)\u7684\u64cd\u4f5c\u91cd\u6392\u5e8f\uff0c\u4e0d\u4f1a\u6539\u53d8\u6267\u884c\u7ed3\u679c\uff1b\u4f46\u5728\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u4e2d\uff0c\u5bf9\u5b58\u5728\u63a7\u5236\u4f9d\u8d56\u7684\u64cd\u4f5c\u91cd\u6392\u5e8f\uff0c\u53ef\u80fd\u4f1a\u6539\u53d8\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u3002 \u5185\u5b58\u5c4f\u969c: \u4e3a\u4e86\u4fdd\u8bc1\u5185\u5b58\u53ef\u89c1\u6027\uff0c\u5bf9\u4e8e\u5904\u7406\u5668\u91cd\u6392\u5e8f\uff0cJMM\u7684\u5904\u7406\u5668\u91cd\u6392\u5e8f\u89c4\u5219\u4f1a\u8981\u6c42Java\u7f16\u8bd1\u5668\u5728\u751f\u6210\u6307\u4ee4\u5e8f\u5217\u65f6\uff0c\u63d2\u5165\u7279\u5b9a\u7c7b\u578b\u7684\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\uff0c\u901a\u8fc7\u5185\u5b58\u5c4f\u969c\u6307\u4ee4\u6765\u7981\u6b62\u7279\u5b9a\u7c7b\u578b\u7684\u5904\u7406\u5668\u91cd\u6392\u5e8f\u3002","title":"\u91cd\u6392\u5e8f"},{"location":"Java/2_concurrency/#_5","text":"JMM\u5bf9\u6b63\u786e\u540c\u6b65\u7684\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u7684\u5185\u5b58\u4e00\u81f4\u6027\u505a\u4e86\u5982\u4e0b\u4fdd\u8bc1\uff1a\u5982\u679c\u7a0b\u5e8f\u662f\u6b63\u786e\u540c\u6b65\u7684\uff0c\u7a0b\u5e8f\u7684\u6267\u884c\u5c06\u5177\u6709\u987a\u5e8f\u4e00\u81f4\u6027\uff08Sequentially Consistent\uff09\uff0c\u5373\u7a0b\u5e8f\u7684\u6267\u884c\u7ed3\u679c\u4e0e\u8be5\u7a0b\u5e8f\u5728\u987a\u5e8f\u4e00\u81f4\u6027\u5185\u5b58\u6a21\u578b\u4e2d\u7684\u6267\u884c\u7ed3\u679c\u76f8\u540c\u3002 \u987a\u5e8f\u4e00\u81f4\u6027\u5185\u5b58\u6a21\u578b \u662f\u4e00\u79cd\u7406\u60f3\u6a21\u578b\uff0c\u6709\u4e24\u5927\u7279\u6027: 1\u3001\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u7684\u6240\u6709\u64cd\u4f5c\u5fc5\u987b\u6309\u7167\u7a0b\u5e8f\u7684\u987a\u5e8f\u6765\u6267\u884c\u3002 2\u3001(\u4e0d\u7ba1\u7a0b\u5e8f\u662f\u5426\u540c\u6b65)\u6240\u6709\u7ebf\u7a0b\u90fd\u53ea\u80fd\u770b\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u64cd\u4f5c\u6267\u884c\u987a\u5e8f\u3002\u5728\u987a\u5e8f\u4e00\u81f4\u6027\u5185\u5b58\u6a21\u578b\u4e2d\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u5fc5\u987b\u539f\u5b50\u6267\u884c\u4e14\u7acb\u523b\u5bf9\u6240\u6709\u7ebf\u7a0b\u53ef\u89c1\u3002 JMM\u4e0d\u63d0\u4f9b\u987a\u5e8f\u4e00\u81f4\u6027\u4fdd\u8bc1\uff0c\u5373: \u2003JMM\u4e0d\u4fdd\u8bc1\u5355\u7ebf\u7a0b\u5185\u7684\u64cd\u4f5c\u4f1a\u6309\u7a0b\u5e8f\u7684\u987a\u5e8f\u6267\u884c; \u2003\u672a\u540c\u6b65\u7a0b\u5e8f\u5728JMM\u4e2d\u4e0d\u4f46\u6574\u4f53\u7684\u6267\u884c\u987a\u5e8f\u662f\u65e0\u5e8f\u7684\uff0c\u800c\u4e14\u6240\u6709\u7ebf\u7a0b\u770b\u5230\u7684\u64cd\u4f5c\u6267\u884c\u987a\u5e8f\u4e5f\u53ef\u80fd\u4e0d\u4e00\u81f4\u3002\u4e00\u4e2a\u7ebf\u7a0b\u7684\u5199\u64cd\u4f5c\u53ea\u6709\u5237\u65b0\u5230\u5185\u5b58\u540e\uff0c\u8fd9\u4e2a\u64cd\u4f5c\u624d\u5bf9\u5176\u4ed6\u7ebf\u7a0b\u53ef\u89c1\u3002 \u2003JMM\u4e0d\u4fdd\u8bc1\u5bf964\u4f4d\u7684long\u578b\u548cdouble\u578b\u53d8\u91cf\u7684\u5199\u64cd\u4f5c\u5177\u6709\u539f\u5b50\u6027\uff0c\u800c\u987a\u5e8f\u4e00\u81f4\u6027\u6a21\u578b\u4fdd\u8bc1\u5bf9\u6240\u6709\u7684\u5185\u5b58\u8bfb/\u5199\u64cd\u4f5c\u90fd\u5177\u6709\u539f\u5b50\u6027\u3002 \u5bf9\u4e8e\u6b63\u786e\u540c\u6b65\u7684\u7a0b\u5e8f\uff0cJMM\u5141\u8bb8\u4e34\u754c\u533a\u7684\u4ee3\u7801\u6267\u884c\u91cd\u6392\u5e8f(\u4fdd\u8bc1\u4e0d\u4f1a\u9038\u51fa\u5230\u4e34\u754c\u533a\u5916)\u4ee5\u63d0\u9ad8\u6267\u884c\u6548\u7387 \u3002","title":"\u987a\u5e8f\u4e00\u81f4\u6027"},{"location":"Java/2_concurrency/#_6","text":"\u9501\u91ca\u653e-\u5b58\u53d6\u7684\u5185\u5b58\u8bed\u4e49 \u7ebf\u7a0bA\u91ca\u653e\u4e00\u4e2a\u9501\uff0c\u5b9e\u8d28\u4e0a\u662f\u7ebf\u7a0bA\u5411\u63a5\u4e0b\u6765\u5c06\u8981\u83b7\u53d6\u8fd9\u4e2a\u9501\u7684\u67d0\u4e2a\u7ebf\u7a0b\u53d1\u51fa\u4e86(\u7ebf\u7a0bA\u5bf9\u5171\u4eab\u53d8\u91cf\u6240\u505a\u4fee\u6539\u7684)\u6d88\u606f\u3002 \u7ebf\u7a0bB\u83b7\u53d6\u4e00\u4e2a\u9501\uff0c\u5b9e\u8d28\u4e0a\u662f\u7ebf\u7a0bB\u63a5\u6536\u4e86\u4e4b\u524d\u67d0\u4e2a\u7ebf\u7a0b\u53d1\u51fa\u7684(\u5728\u91ca\u653e\u8fd9\u4e2a\u9501\u4e4b\u524d\u5bf9\u5171\u4eab\u53d8\u91cf\u6240\u505a\u4fee\u6539\u7684)\u6d88\u606f\u3002 \u7ebf\u7a0bA\u91ca\u653e\u9501\uff0c\u968f\u540e\u7ebf\u7a0bB\u83b7\u53d6\u8fd9\u4e2a\u9501\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5b9e\u8d28\u4e0a\u662f\u7ebf\u7a0bA\u901a\u8fc7\u4e3b\u5185\u5b58\u5411\u7ebf\u7a0bB\u53d1\u9001\u6d88\u606f\u3002 \u5bf9\u6bd4\u9501\u91ca\u653e-\u83b7\u53d6\u7684\u5185\u5b58\u8bed\u4e49\u4e0evolatile\u5199-\u8bfb\u7684\u5185\u5b58\u8bed\u4e49\u53ef\u4ee5\u770b\u51fa: \u9501\u91ca\u653e\u4e0evolatile\u5199\u6709\u76f8\u540c\u7684\u5185\u5b58\u8bed\u4e49\uff1b\u9501\u83b7\u53d6\u4e0evolatile\u8bfb\u6709\u76f8\u540c\u7684\u5185\u5b58\u8bed\u4e49. CAS java\u4e2d\u7684unsafe.compareAndSwapInt(..)\u65b9\u6cd5\u4e2d\u4f1a\u6839\u636e\u662f\u5426\u662f\u591a\u5904\u7406\u5668\u6765\u4e3acmpxchg\u6307\u4ee4\u6dfb\u52a0lock\u524d\u7f00\uff0c \u5bf9\u4e8e\u6dfb\u52a0\u4e86lock\u524d\u7f00\u7684\u6307\u4ee4\uff0c\u5728intel\u5904\u7406\u5668\u4e0a\u6709: 1.\u786e\u4fdd\u5bf9\u5185\u5b58\u7684\u8bfb-\u6539-\u5199\u64cd\u4f5c\u539f\u5b50\u6267\u884c\uff1b 2.\u7981\u6b62\u8be5\u6307\u4ee4\uff0c\u4e0e\u4e4b\u524d\u548c\u4e4b\u540e\u7684\u8bfb\u548c\u5199\u6307\u4ee4\u91cd\u6392\u5e8f\uff1b 3.\u628a\u5199\u7f13\u51b2\u533a\u4e2d\u7684\u6240\u6709\u6570\u636e\u5237\u65b0\u5230\u5185\u5b58\u4e2d\u3002 2\u30013\u64cd\u4f5c\u5177\u6709\u7684\u5185\u5b58\u5c4f\u969c\u6548\u679c\uff0c\u8db3\u4ee5\u540c\u65f6\u5b9e\u73b0volatile\u8bfb-\u5199\u5185\u5b58\u8bed\u4e49\u3002 concurrent\u5305\u5b9e\u73b0 \u7531\u4e8eJava\u7684CAS\u540c\u65f6\u5177\u6709volatile\u8bfb\u548cvolatile\u5199\u7684\u5185\u5b58\u8bed\u4e49\uff0c\u56e0\u6b64Java\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u73b0\u5728\u6709\u4e86\u4e0b\u97624\u79cd\u65b9\u5f0f: 1\uff09A\u7ebf\u7a0b\u5199volatile\u53d8\u91cf\uff0c\u968f\u540eB\u7ebf\u7a0b\u8bfb\u8fd9\u4e2avolatile\u53d8\u91cf\u3002 2\uff09A\u7ebf\u7a0b\u5199volatile\u53d8\u91cf\uff0c\u968f\u540eB\u7ebf\u7a0b\u7528CAS\u66f4\u65b0\u8fd9\u4e2avolatile\u53d8\u91cf\u3002 3\uff09A\u7ebf\u7a0b\u7528CAS\u66f4\u65b0\u4e00\u4e2avolatile\u53d8\u91cf\uff0c\u968f\u540eB\u7ebf\u7a0b\u7528CAS\u66f4\u65b0\u8fd9\u4e2avolatile\u53d8\u91cf\u3002 4\uff09A\u7ebf\u7a0b\u7528CAS\u66f4\u65b0\u4e00\u4e2avolatile\u53d8\u91cf\uff0c\u968f\u540eB\u7ebf\u7a0b\u8bfb\u8fd9\u4e2avolatile\u53d8\u91cf\u3002 \u2003 \u901a\u7528\u6a21\u5f0f: \u9996\u5148\uff0c\u58f0\u660e\u5171\u4eab\u53d8\u91cf\u4e3avolatile; \u7136\u540e\uff0c\u4f7f\u7528CAS\u7684\u539f\u5b50\u6761\u4ef6\u66f4\u65b0\u6765\u5b9e\u73b0\u7ebf\u7a0b\u4e4b\u95f4\u7684\u540c\u6b65; \u540c\u65f6\uff0c\u914d\u5408\u4ee5volatile\u7684\u8bfb/\u5199\u548cCAS\u6240\u5177\u6709\u7684volatile\u8bfb\u548c\u5199\u7684\u5185\u5b58\u8bed\u4e49\u6765\u5b9e\u73b0\u7ebf\u7a0b\u4e4b\u95f4\u7684\u901a\u4fe1\u3002 AQS\uff0c\u975e\u963b\u585e\u6570\u636e\u7ed3\u6784\u548c\u539f\u5b50\u53d8\u91cf\u7c7b\uff08java.util.concurrent.atomic\u5305\u4e2d\u7684\u7c7b\uff09\uff0c\u8fd9\u4e9bconcurrent\u5305\u4e2d\u7684\u57fa\u7840\u7c7b \u90fd\u662f\u4f7f\u7528\u8fd9\u79cd\u6a21\u5f0f\u6765\u5b9e\u73b0\u7684\uff0c\u800cconcurrent\u5305\u4e2d\u7684\u9ad8\u5c42\u7c7b(\u5982Lock\u3001\u540c\u6b65\u5668\u3001Executor\u3001\u5e76\u53d1\u5bb9\u5668) \u53c8\u662f\u4f9d\u8d56\u4e8e\u8fd9\u4e9b\u57fa\u7840\u7c7b\u6765\u5b9e\u73b0\u7684\u3002","title":"\u9501\u5185\u5b58\u8bed\u4e49"},{"location":"Java/2_concurrency/#final","text":"\u5bf9\u4e8efinal\u57df\uff0c\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u8981\u9075\u5b88\u4e24\u4e2a\u91cd\u6392\u5e8f\u89c4\u5219\u3002 1\uff09\u5728\u6784\u9020\u51fd\u6570\u5185\u5bf9\u4e00\u4e2afinal\u57df\u7684\u5199\u5165\uff0c\u4e0e\u968f\u540e\u628a\u8fd9\u4e2a\u88ab\u6784\u9020\u5bf9\u8c61\u7684\u5f15\u7528\u8d4b\u503c\u7ed9\u4e00\u4e2a\u5f15\u7528\u53d8\u91cf\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u4e0d\u80fd\u91cd\u6392\u5e8f\u3002\u5177\u4f53\u5b9e\u73b0\u4e3a, JMM\u7981\u6b62\u7f16\u8bd1\u5668\u628afinal\u57df\u7684\u5199 \u91cd\u6392\u5e8f\u5230\u6784\u9020\u51fd\u6570\u4e4b\u5916, \u4ee5\u53ca\u7f16\u8bd1\u5668\u4f1a\u5728final\u57df\u7684\u5199\u4e4b\u540e\uff0c\u6784\u9020\u51fd\u6570return\u4e4b\u524d\uff0c\u63d2\u5165\u4e00\u4e2aStoreStore\u5c4f\u969c\uff0c\u8fd9\u4e2a\u5c4f\u969c\u7981\u6b62\u5904\u7406\u5668\u628afinal\u57df\u7684\u5199\u91cd\u6392\u5e8f\u5230\u6784\u9020\u51fd\u6570\u4e4b\u5916\u3002 \u56e0\u6b64\u5199final\u57df\u7684\u91cd\u6392\u5e8f\u89c4\u5219\u53ef\u4ee5\u786e\u4fdd\uff1a\u5728\u5bf9\u8c61\u5f15\u7528\u4e3a\u4efb\u610f\u7ebf\u7a0b\u53ef\u89c1\u4e4b\u524d\uff0c\u5bf9\u8c61\u7684final\u57df\u5df2\u7ecf\u88ab \u6b63\u786e\u521d\u59cb\u5316\u8fc7\u4e86\uff0c\u800c\u666e\u901a\u57df\u4e0d\u5177\u6709\u8fd9\u4e2a\u4fdd\u969c\u3002 2\uff09\u521d\u6b21\u8bfb\u4e00\u4e2a\u5305\u542bfinal\u57df\u7684\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4e0e\u968f\u540e\u521d\u6b21\u8bfb\u8fd9\u4e2afinal\u57df\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u4e0d\u80fd\u91cd\u6392\u5e8f\u3002\u521d\u6b21\u8bfb\u5bf9\u8c61\u5f15\u7528\u4e0e\u521d\u6b21\u8bfb\u8be5\u5bf9\u8c61\u5305\u542b\u7684final\u57df\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u5b58\u5728\u95f4\u63a5\u4f9d\u8d56\u5173\u7cfb\u3002\u7531\u4e8e\u7f16\u8bd1\u5668\u9075\u5b88\u95f4\u63a5\u4f9d\u8d56\u5173\u7cfb\uff0c\u56e0\u6b64\u7f16\u8bd1\u5668\u4e0d\u4f1a\u91cd\u6392\u5e8f\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u3002\u5177\u4f53\u5b9e\u73b0\u4e3a\u7f16\u8bd1\u5668\u4f1a\u5728\u8bfbfinal\u57df\u4e4b\u524d\u52a0\u5165\u4e00\u4e2aLoadLoad\u5c4f\u969c\u3002 final\u57df\u4e3a\u5f15\u7528\u7c7b\u578b \u5bf9\u4e8e\u5f15\u7528\u7c7b\u578b\uff0c\u5199final\u57df\u7684\u91cd\u6392\u5e8f\u89c4\u5219\u5bf9\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u589e\u52a0\u4e86\u5982\u4e0b\u7ea6\u675f\uff1a\u5728\u6784\u9020\u51fd\u6570\u5185\u5bf9\u4e00\u4e2afinal\u5f15\u7528\u7684\u5bf9\u8c61\u7684\u6210\u5458\u57df\u7684\u5199\u5165\uff0c\u4e0e\u968f\u540e\u5728\u6784\u9020\u51fd\u6570\u5916\u628a\u8fd9\u4e2a\u88ab\u6784\u9020\u5bf9\u8c61\u7684\u5f15\u7528\u8d4b\u503c\u7ed9\u4e00\u4e2a\u5f15\u7528\u53d8\u91cf\uff0c\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u4e0d\u80fd\u91cd\u6392\u5e8f\u3002","title":"final\u57df\u5185\u5b58\u8bed\u4e49"},{"location":"Java/2_concurrency/#happens-before","text":"\u5728JMM\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u64cd\u4f5c\u6267\u884c\u7684\u7ed3\u679c\u9700\u8981\u5bf9\u53e6\u4e00\u4e2a\u64cd\u4f5c\u53ef\u89c1\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u5fc5\u987b\u8981\u5b58\u5728happens-before\u5173\u7cfb\u3002\u8fd9\u91cc\u63d0\u5230\u7684\u4e24\u4e2a\u64cd\u4f5c\u65e2\u53ef\u4ee5\u662f\u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e4b\u5185\uff0c\u4e5f\u53ef\u4ee5\u662f\u5728\u4e0d\u540c\u7ebf\u7a0b\u4e4b\u95f4\u3002 \u4e24\u4e2a\u64cd\u4f5c\u4e4b\u95f4\u5177\u6709happens-before\u5173\u7cfb\uff0c\u5e76\u4e0d\u610f\u5473\u7740\u524d\u4e00\u4e2a\u64cd\u4f5c\u5fc5\u987b\u8981\u5728\u540e\u4e00\u4e2a\u64cd\u4f5c\u4e4b\u524d\u6267\u884c\uff01 happens-before\u4ec5\u4ec5\u8981\u6c42\u524d\u4e00\u4e2a\u64cd\u4f5c\uff08\u6267\u884c\u7684\u7ed3\u679c\uff09\u5bf9\u540e\u4e00\u4e2a\u64cd\u4f5c\u53ef\u89c1 \uff0c\u4e14\u524d\u4e00\u4e2a\u64cd\u4f5c\u6309\u987a\u5e8f\u6392\u5728\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u4e4b\u524d(\u4f46\u4e0d\u610f\u5473\u524d\u4e00\u4e2a\u64cd\u4f5c\u4f1a\u5148\u6267\u884c)\u3002 happend-before\u89c4\u5219","title":"happens-before"},{"location":"Java/2_concurrency/#_7","text":"\u5ef6\u8fdf\u521d\u59cb\u5316: \u5728Java\u7a0b\u5e8f\u4e2d\uff0c\u6709\u65f6\u5019\u53ef\u80fd\u9700\u8981\u63a8\u8fdf\u4e00\u4e9b\u9ad8\u5f00\u9500\u7684\u5bf9\u8c61\u521d\u59cb\u5316\u64cd\u4f5c\uff0c\u5e76\u4e14\u53ea\u6709\u5728\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u65f6\u624d\u8fdb\u884c\u521d\u59cb\u5316\u3002 \u53cc\u91cd\u68c0\u67e5\u9501\u5b9a\u662f\u4e00\u79cd\u5e38\u89c1\u4f46\u9519\u8bef\u7684\u5ef6\u8fdf\u521d\u59cb\u5316\u7528\u6cd5\u3002 public class DoubleCheckedLocking { // 1 private static Instance instance; // 2 public static Instance getInstance() { // 3 if (instance == null) { // 4:\u7b2c\u4e00\u6b21\u68c0\u67e5 synchronized (DoubleCheckedLocking.class) { // 5:\u52a0\u9501 if (instance == null) // 6:\u7b2c\u4e8c\u6b21\u68c0\u67e5 instance = new Instance(); // 7:\u95ee\u9898\u7684\u6839\u6e90\u51fa\u5728\u8fd9\u91cc } // 8 } // 9 return instance; // 10 } // 11 } \u95ee\u9898\u5206\u6790: \u5982\u679c\u6709\u4e24\u4e2a\u7ebf\u7a0b\u8bbf\u95eegetInstance\u65b9\u6cd5\uff0cA\u7ebf\u7a0b\u5df2\u7ecf\u6267\u884c\u5230\u7b2c7\u6b65\uff0cB\u7ebf\u7a0b\u6267\u884c\u5230\u7b2c4\u6b65\uff1b \u7b2c7\u6b65\u6267\u884c\u521d\u59cb\u5316\u5bf9\u8c61\u65f6\uff0c\u4e00\u5171\u6709\u4e09\u6b65: memory = allocate(); // 1\uff1a\u5206\u914d\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4 ctorInstance(memory); // 2\uff1a\u521d\u59cb\u5316\u5bf9\u8c61 instance = memory; // 3\uff1a\u8bbe\u7f6einstance\u6307\u5411\u521a\u5206\u914d\u7684\u5185\u5b58\u5730\u5740 \u5176\u4e2d2\u30013\u7531\u4e8e\u91cd\u6392\u5e8f(\u8fd9\u6837\u5e76\u4e0d\u4f1a\u6539\u53d8\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u6267\u884c\u7ed3\u679c\uff0c\u6240\u4ee5JMM\u662f\u5141\u8bb8\u7684)\uff0c\u53ef\u80fd\u5b9e\u9645\u6267\u884c\u987a\u5e8f\u662f3\uff0c2\uff1b \u5047\u8bbeA\u7ebf\u7a0b\u5148\u6267\u884c\u7684\u662f\u6b65\u9aa43\uff0c\u5c1a\u672a\u521d\u59cb\u5316\u5bf9\u8c61\uff0c\u800cB\u7ebf\u7a0b\u5728\u5224\u65adinstance==null\u65f6\u5f97\u5230false, \u5c06\u4f1a\u8fd4\u56deinstance\uff0c\u5f97\u5230\u4e00\u4e2a\u5c1a\u672a\u521d\u59cb\u5316\u7684\u5bf9\u8c61\u3002 \u89e3\u51b3\u65b9\u6848 1\u3001\u4f7f\u7528volatile\u4fee\u9970instance\u53d8\u91cf\uff0c\u8fd9\u6837\u521d\u59cb\u5316\u5bf9\u8c61\u7684\u6b65\u9aa42\u30013\u4e4b\u95f4\u7684\u91cd\u6392\u5e8f\u5728\u591a\u7ebf\u7a0b\u73af\u5883\u4e0b\u5c31\u4f1a\u88ab\u7981\u6b62\u3002 2\u3001\u57fa\u4e8e\u7c7b\u521d\u59cb\u5316\u7684\u89e3\u51b3\u65b9\u6848\u3002JVM\u5728\u7c7b\u7684\u521d\u59cb\u5316\u9636\u6bb5\uff08\u5373\u5728Class\u88ab\u52a0\u8f7d\u540e\uff0c\u4e14\u88ab\u7ebf\u7a0b\u4f7f\u7528\u4e4b\u524d\uff09\uff0c\u4f1a\u6267\u884c\u7c7b\u7684\u521d\u59cb\u5316\u3002\u5728\u6267\u884c\u7c7b\u7684\u521d\u59cb\u5316\u671f\u95f4\uff0cJVM\u4f1a\u53bb\u83b7\u53d6\u4e00\u4e2a\u9501\u3002\u8fd9\u4e2a\u9501\u53ef\u4ee5\u540c\u6b65\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u7c7b\u7684\u521d\u59cb\u5316\u3002 \u57fa\u4e8e\u8fd9\u4e2a\u7279\u6027\uff0c\u53ef\u4ee5\u5b9e\u73b0\u53e6\u4e00\u79cd\u7ebf\u7a0b\u5b89\u5168\u7684\u5ef6\u8fdf\u521d\u59cb\u5316\u65b9\u6848\uff08\u8fd9\u4e2a\u65b9\u6848\u88ab\u79f0\u4e4b\u4e3a Initialization On Demand Holder idiom\uff09\u3002 \u636eJava\u8bed\u8a00\u89c4\u8303\uff0c\u5728\u9996\u6b21\u53d1\u751f\u4e0b\u5217\u4efb\u610f\u4e00\u79cd\u60c5\u51b5\u65f6\uff0c\u4e00\u4e2a\u7c7b\u6216\u63a5\u53e3\u7c7b\u578bT\u5c06\u88ab\u7acb\u5373\u521d\u59cb\u5316\u3002 1\uff09T\u662f\u4e00\u4e2a\u7c7b\uff0c\u800c\u4e14\u4e00\u4e2aT\u7c7b\u578b\u7684\u5b9e\u4f8b\u88ab\u521b\u5efa\u3002 2\uff09T\u662f\u4e00\u4e2a\u7c7b\uff0c\u4e14T\u4e2d\u58f0\u660e\u7684\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\u88ab\u8c03\u7528\u3002 3\uff09T\u4e2d\u58f0\u660e\u7684\u4e00\u4e2a\u9759\u6001\u5b57\u6bb5\u88ab\u8d4b\u503c\u3002 4\uff09T\u4e2d\u58f0\u660e\u7684\u4e00\u4e2a\u9759\u6001\u5b57\u6bb5\u88ab\u4f7f\u7528\uff0c\u800c\u4e14\u8fd9\u4e2a\u5b57\u6bb5\u4e0d\u662f\u4e00\u4e2a\u5e38\u91cf\u5b57\u6bb5\u3002 5\uff09T\u662f\u4e00\u4e2a\u9876\u7ea7\u7c7b\uff0c\u800c\u4e14\u4e00\u4e2a\u65ad\u8a00\u8bed\u53e5\u5d4c\u5957\u5728T\u5185\u90e8\u88ab\u6267\u884c\u3002 \u800c \u521d\u59cb\u5316\u4e00\u4e2a\u7c7b\uff0c\u5305\u62ec\u6267\u884c\u8fd9\u4e2a\u7c7b\u7684\u9759\u6001\u521d\u59cb\u5316\u548c\u521d\u59cb\u5316\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u58f0\u660e\u7684\u9759\u6001\u5b57\u6bb5 \u57fa\u4e8evolatile\u7684\u53cc\u91cd\u68c0\u67e5\u9501\u5b9a\u7684\u65b9\u6848\u6709\u4e00\u4e2a\u989d\u5916\u7684\u4f18\u52bf:\u9664\u4e86\u53ef\u4ee5\u5bf9\u9759\u6001\u5b57\u6bb5\u5b9e\u73b0\u5ef6\u8fdf\u521d\u59cb\u5316\u5916\uff0c \u8fd8\u53ef\u4ee5\u5bf9\u5b9e\u4f8b\u5b57\u6bb5\u5b9e\u73b0\u5ef6\u8fdf\u521d\u59cb\u5316; \u5b57\u6bb5\u5ef6\u8fdf\u521d\u59cb\u5316\u964d\u4f4e\u4e86\u521d\u59cb\u5316\u7c7b\u6216\u521b\u5efa\u5b9e\u4f8b\u7684\u5f00\u9500\uff0c\u4f46\u589e\u52a0\u4e86\u8bbf\u95ee\u88ab\u5ef6\u8fdf\u521d\u59cb\u5316\u7684\u5b57\u6bb5\u7684\u5f00\u9500\u3002 \u5728\u5927\u591a\u6570\u65f6\u5019\uff0c\u6b63\u5e38\u7684\u521d\u59cb\u5316\u8981\u4f18\u4e8e\u5ef6\u8fdf\u521d\u59cb\u5316\u3002 \u5982\u679c\u786e\u5b9e\u9700\u8981\u5bf9\u5b9e\u4f8b\u5b57\u6bb5\u4f7f\u7528\u7ebf\u7a0b\u5b89\u5168\u7684\u5ef6\u8fdf\u521d\u59cb\u5316\uff0c\u4f7f\u7528\u57fa\u4e8evolatile\u7684\u5ef6\u8fdf\u521d\u59cb\u5316\u7684\u65b9\u6848\uff1b \u5982\u679c\u786e\u5b9e\u9700\u8981\u5bf9\u9759\u6001\u5b57\u6bb5\u4f7f\u7528\u7ebf\u7a0b\u5b89\u5168\u7684\u5ef6\u8fdf\u521d\u59cb\u5316\uff0c\u4f7f\u7528\u57fa\u4e8e\u7c7b\u521d\u59cb\u5316\u7684\u65b9\u6848\u3002 public class InstanceFactory { private static class InstanceHolder { public static Instance instance = new Instance(); } public static Instance getInstance() { return InstanceHolder.instance ; // \u8fd9\u91cc\u5c06\u5bfc\u81f4InstanceHolder\u7c7b\u88ab\u521d\u59cb\u5316 } }","title":"\u53cc\u91cd\u68c0\u67e5\u9501\u5b9a"},{"location":"Java/3_SourceCode/","text":"Java\u6e90\u7801 AbstractQueuedSynchronizer \u961f\u5217\u540c\u6b65\u5668 AbstractQueuedSynchronizer(AQS)\uff0c\u662f\u7528\u6765\u6784\u5efa\u9501\u6216\u8005\u5176\u4ed6\u540c\u6b65\u7ec4\u4ef6\u7684\u57fa\u7840\u6846\u67b6\uff0c \u4f7f\u7528\u4e86\u4e00\u4e2avolatile\u4fee\u9970\u7684int\u6210\u5458\u53d8\u91cf\u8868\u793a\u540c\u6b65\u72b6\u6001 \uff0c\u901a\u8fc7\u5185\u7f6e\u7684FIFO\u961f\u5217\u6765\u5b8c\u6210\u8d44\u6e90\u83b7\u53d6\u7ebf\u7a0b\u7684\u6392\u961f\u5de5\u4f5c\u3002 \u540c\u6b65\u5668\u63d0\u4f9b\u7684\u5982\u4e0b3\u4e2a\u65b9\u6cd5\u6765\u8bbf\u95ee\u6216\u4fee\u6539\u540c\u6b65\u72b6\u6001: getState()\uff1a\u83b7\u53d6\u5f53\u524d\u540c\u6b65\u72b6\u6001; setState(int newState)\uff1a\u8bbe\u7f6e\u5f53\u524d\u540c\u6b65\u72b6\u6001; compareAndSetState(int expect,int update)\uff1a\u4f7f\u7528CAS\u8bbe\u7f6e\u5f53\u524d\u72b6\u6001\uff0c\u8be5\u65b9\u6cd5\u80fd\u591f\u4fdd\u8bc1\u72b6\u6001 \u8bbe\u7f6e\u7684\u539f\u5b50\u6027\u3002 \u540c\u6b65\u5668\u81ea\u8eab\u6ca1\u6709\u5b9e\u73b0\u4efb\u4f55\u540c\u6b65\u63a5\u53e3\uff0c\u5b83\u4ec5\u4ec5\u662f\u5b9a\u4e49\u4e86\u82e5\u5e72\u540c\u6b65\u72b6\u6001\u83b7\u53d6\u548c\u91ca\u653e\u7684\u65b9\u6cd5\u6765\u4f9b\u81ea\u5b9a\u4e49\u540c\u6b65\u7ec4\u4ef6\u4f7f\u7528\uff0c \u540c\u6b65\u5668\u65e2\u53ef\u4ee5\u652f\u6301\u72ec\u5360\u5f0f\u5730\u83b7\u53d6\u540c\u6b65\u72b6\u6001\uff0c\u4e5f\u53ef\u4ee5\u652f\u6301\u5171\u4eab\u5f0f\u5730\u83b7\u53d6\u540c\u6b65\u72b6\u6001\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5b9e\u73b0\u4e0d\u540c\u7c7b\u578b\u7684\u540c\u6b65\u7ec4\u4ef6 (ReentrantLock\u3001 ReentrantReadWriteLock\u548cCountDownLatch\u7b49)\u3002 \u540c\u6b65\u5668\u63a5\u53e3: \u540c\u6b65\u5668\u7684\u8bbe\u8ba1\u662f\u57fa\u4e8e \u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f \u7684,\u4f7f\u7528\u8005\u9700\u8981\u7ee7\u627f\u540c\u6b65\u5668\u5e76\u91cd\u5199\u6307\u5b9a\u7684\u65b9\u6cd5, \u968f\u540e\u5c06\u540c\u6b65\u5668\u7ec4\u5408\u5728\u81ea\u5b9a\u4e49\u540c\u6b65\u7ec4\u4ef6\u7684\u5b9e\u73b0\u4e2d; \u540c\u6b65\u5668\u63d0\u4f9b\u7684\u6a21\u677f\u65b9\u6cd5\u57fa\u672c\u4e0a\u5206\u4e3a3\u7c7b:\u72ec\u5360\u5f0f\u83b7\u53d6\u4e0e\u91ca\u653e\u540c\u6b65\u72b6\u6001\u3001\u5171\u4eab\u5f0f\u83b7\u53d6\u4e0e\u91ca\u653e\u540c\u6b65\u72b6\u6001\u3001 \u67e5\u8be2\u540c\u6b65\u961f\u5217\u4e2d\u7684\u7b49\u5f85\u7ebf\u7a0b\u60c5\u51b5\u3002 \u2003 \u540c\u6b65\u5668\u5b9e\u73b0\u7ebf\u7a0b\u540c\u6b65: \u540c\u6b65\u961f\u5217 \u540c\u6b65\u5668\u4f9d\u8d56\u5185\u90e8\u7684\u540c\u6b65\u961f\u5217(\u4e00\u4e2aFIFO\u53cc\u5411\u961f\u5217)\u6765\u5b8c\u6210\u540c\u6b65\u72b6\u6001\u7684\u7ba1\u7406\uff0c\u6b64\u5916\u8fd8\u5305\u542bhead\u3001tail\u4e24\u4e2a\u8282\u70b9\uff1b head\u8282\u70b9\u662f\u4f4d\u4e8e\u961f\u5217\u5934\u90e8\u7684\u54e8\u5175\u8282\u70b9\uff0c\u5176thread\u5b57\u6bb5\u4e3anull\uff0c\u5176\u4e0b\u4e00\u4e2a\u8282\u70b9\u662f\u771f\u6b63\u5305\u542b\u963b\u585e\u7ebf\u7a0b\u7684\u8282\u70b9\uff1b tail\u8282\u70b9\u7b49\u4e8e\u961f\u5217\u4e2d\u771f\u6b63\u7684\u5c3e\u8282\u70b9\u3002\u961f\u5217\u4e3a\u7a7a\u65f6\uff0chead\u7b49\u4e8etail\u3002 \u8282\u70b9\u7684\u7b49\u5f85\u72b6\u6001\u5305\u62ec: /** waitStatus value to indicate thread has cancelled */ static final int CANCELLED = 1; /** waitStatus value to indicate successor's thread needs unparking */ static final int SIGNAL = -1; /** waitStatus value to indicate thread is waiting on condition */ static final int CONDITION = -2; /** * waitStatus value to indicate the next acquireShared should * unconditionally propagate */ static final int PROPAGATE = -3; \u72ec\u5360\u5f0f\u540c\u6b65\u72b6\u6001\u83b7\u53d6\u4e0e\u91ca\u653e acquire(int arg): \u9996\u5148\u8c03\u7528\u81ea\u5b9a\u4e49\u540c\u6b65\u5668\u5b9e\u73b0\u7684tryAcquire(int arg)\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u7684\u83b7\u53d6\u540c\u6b65\u72b6\u6001\uff0c\u5982\u679c\u540c\u6b65\u72b6\u6001\u83b7\u53d6\u5931\u8d25\uff0c \u5219\u6784\u9020\u540c\u6b65\u8282\u70b9(\u72ec\u5360\u5f0f Node.EXCLUSIVE\uff0c\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6210\u529f\u83b7\u53d6\u540c\u6b65\u72b6\u6001)\u5e76\u901a\u8fc7addWaiter(Node node)\u65b9\u6cd5 \u5c06\u8be5\u8282\u70b9\u52a0\u5165\u5230\u540c\u6b65\u961f\u5217\u7684\u5c3e\u90e8\uff0c\u6700\u540e\u8c03\u7528acquireQueued(Node node,int arg)\u65b9\u6cd5\uff0c\u4f7f\u5f97\u8be5\u8282\u70b9\u4ee5\u201c\u6b7b\u5faa\u73af\u201d\u7684\u65b9\u5f0f \u83b7\u53d6\u540c\u6b65\u72b6\u6001\u3002\u5982\u679c\u83b7\u53d6\u4e0d\u5230\u5219\u963b\u585e\u8282\u70b9\u4e2d\u7684\u7ebf\u7a0b\uff0c\u800c \u88ab\u963b\u585e\u7ebf\u7a0b\u7684\u5524\u9192\u4e3b\u8981\u4f9d\u9760\u524d\u9a71\u8282\u70b9\u7684\u51fa\u961f\u6216\u963b\u585e\u7ebf\u7a0b\u88ab\u4e2d\u65ad\u6765\u5b9e\u73b0 \u3002 public final void acquire(int arg) { if (!tryAcquire(arg) && //\u5982\u679ctryAcquire\u83b7\u53d6\u6210\u529f\uff0c\u5219acquire()\u6267\u884c\u5b8c\u6bd5 acquireQueued(addWaiter(Node.EXCLUSIVE), arg)) selfInterrupt(); } // tryAcquire\u5931\u8d25\uff0c\u6267\u884c\u540e\u7eed\u903b\u8f91 //\u6ce8\u610f\uff1a\u8be5\u5165\u961f\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u5c31\u662f\u65b0\u521b\u5efa\u7684\u8282\u70b9 private Node addWaiter(Node mode) { //\u57fa\u4e8e\u5f53\u524d\u7ebf\u7a0b\uff0c\u8282\u70b9\u7c7b\u578b\uff08Node.EXCLUSIVE\uff09\u521b\u5efa\u65b0\u7684\u8282\u70b9 //\u7531\u4e8e\u8fd9\u91cc\u662f\u72ec\u5360\u6a21\u5f0f\uff0c\u56e0\u6b64\u8282\u70b9\u7c7b\u578b\u5c31\u662fNode.EXCLUSIVE Node node = new Node(Thread.currentThread(), mode); Node pred = tail; //\u8fd9\u91cc\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u9996\u5148\u6267\u884c\u4e00\u6b21\u5feb\u901f\u5165\u961f\u64cd\u4f5c\uff0c\u5373\u76f4\u63a5\u5c1d\u8bd5\u5c06\u65b0\u8282\u70b9\u52a0\u5165\u961f\u5c3e if (pred != null) { node.prev = pred; //\u8fd9\u91cc\u6839\u636eCAS\u7684\u903b\u8f91\uff0c\u5373\u4f7f\u5e76\u53d1\u64cd\u4f5c\u4e5f\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6210\u529f\u5e76\u8fd4\u56de\uff0c\u5176\u4f59\u7684\u90fd\u8981\u6267\u884c\u540e\u9762\u7684\u5165\u961f\u64cd\u4f5c\u3002\u5373enq()\u65b9\u6cd5 if (compareAndSetTail(pred, node)) { pred.next = node; return node; } } enq(node); return node; } //\u5b8c\u6574\u7684\u5165\u961f\u64cd\u4f5c // \u6ce8\u610f\u5176\u4e2d\u7684CAS\u64cd\u4f5c\uff0c\u4ee5compareAndSetTail\u4e3a\u4f8b // enq()\u901a\u8fc7CAS\u64cd\u4f5c\u4f7f\u5f97\u5e76\u53d1\u6dfb\u52a0\u8282\u70b9\u7684\u8bf7\u6c42\u53d8\u5f97\"\u4e32\u884c\u5316\" private Node enq(final Node node) { for (;;) { Node t = tail; //\u5982\u679c\u961f\u5217\u8fd8\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u5219\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5373\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u5934\u8282\u70b9 if (t == null) { //\u540c\u6837\u662fCAS\uff0c\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u521d\u59cb\u5316\u5934\u7ed3\u70b9\u6210\u529f\uff0c\u5176\u4f59\u7684\u90fd\u8981\u91cd\u590d\u6267\u884c\u5faa\u73af\u4f53 if (compareAndSetHead(new Node())) tail = head; } else { //\u65b0\u521b\u5efa\u7684\u8282\u70b9\u6307\u5411\u961f\u5217\u5c3e\u8282\u70b9\uff0c\u5e76\u53d1\u60c5\u51b5\u4e0b\u8fd9\u91cc\u4f1a\u6709\u591a\u4e2a\u65b0\u521b\u5efa\u7684\u8282\u70b9\u6307\u5411\u6b64\u65f6\u7684\u961f\u5217\u5c3e\u8282\u70b9 node.prev = t; // \u8fd9\u4e00\u6b65\u7684CAS\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u66f4\u65b0tail\u8282\u70b9 // \u66f4\u65b0\u6210\u529f\u7684\u8282\u70b9\uff0c\u6b64\u65f6t\u662f\u65e7tail\u8282\u70b9\uff0c\u8ba9t->next = node\uff0c\u8fd4\u56de\u5c3e\u8282\u70b9\u7684\u524d\u9a71\u7ed3\u70b9 // \u672a\u6210\u529f\u66f4\u65b0\u7684\u8282\u70b9\uff0c\u5219\u8fdb\u884c\u5faa\u73af\uff0c\u91cd\u65b0\u5c1d\u8bd5 if (compareAndSetTail(t, node)) { t.next = node; //\u8be5\u5faa\u73af\u4f53\u552f\u4e00\u9000\u51fa\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u5165\u961f\u6210\u529f\uff08\u5426\u5219\u5c31\u8981\u65e0\u9650\u91cd\u8bd5\uff09 return t; } } } } private final boolean compareAndSetTail(Node expect, Node update) { return unsafe.compareAndSwapObject(this, tailOffset, expect, update); // \u8fd9\u91cc\u7684this\u6307\u5f53\u524dAQS\u5bf9\u8c61\uff0ctailOffser\u662ftail\u5b57\u6bb5\u5728AQS\u4e2d\u7684\u504f\u79fb\u91cf\uff0cexpect\u662f\u73b0\u5728\u770b\u5230\u7684tail node\uff0c // update\u662f\u8981\u66f4\u65b0\u7684\u5c3e\u8282\u70b9\u3002 // java\u4e2d\u7684\u5bf9\u8c61\u5f15\u7528\u5b9e\u9645\u4e0a\u662fC++\u4e2d\u7684\u5bf9\u8c61\u6307\u9488\uff0c // \u56e0\u6b64compareAndSwapObject\u7684c++\u5b9e\u73b0\u4e2d\uff0c\u4f1a\u6bd4\u8f83 this+tailOffser \u6307\u5411\u7684\u5730\u5740\u548cexpect\u6307\u5411\u7684\u5730\u5740\u662f\u5426\u76f8\u540c // \u5bf9\u4e8e\u67d0\u4e00\u4e2a\u8282\u70b9\u800c\u8a00\uff0c\u4e24\u8005\u76f8\u7b49\uff0c\u53ef\u4ee5\u66f4\u65b0this+tailOffser\u6307\u5411\u7684\u5730\u5740\u4e3aupdate\u6307\u5411\u7684\u5730\u5740, \u8fd4\u56detrue; // \u5176\u4f59\u8282\u70b9\uff0c\u770b\u5230\u7684this+tailOffser\u6307\u5411\u7684\u5730\u5740\u5df2\u7ecf\u4e0d\u540c\u4e8e\u4e4b\u524d\u770b\u5230\u7684expect\u6307\u5411\u7684\u5730\u5740\uff0c\u56e0\u6b64\u65e0\u6cd5\u66f4\u65b0\uff0c\u8fd4\u56defalse } // \u53c2\u6570\u4e2d\u7684node\u5df2\u7ecf\u52a0\u5165\u5230\u540c\u6b65\u961f\u5217\u4e2d // acquireQueued()\u65b9\u6cd5\u662f\u4e00\u4e2a\u81ea\u65cb\u8fc7\u7a0b\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u5728\u81ea\u7701\u5730\u89c2\u5bdf\uff0c\u5f53\u6761\u4ef6\u6ee1\u8db3\uff0c\u83b7\u53d6\u5230\u4e86\u540c\u6b65\u72b6\u6001\uff0c // \u5c31\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u81ea\u65cb\u8fc7\u7a0b\u4e2d\u9000\u51fa\uff0c\u5426\u5219\u4f9d\u65e7\u7559\u5728\u8fd9 \u4e2a\u81ea\u65cb\u8fc7\u7a0b\u4e2d\uff08\u5e76\u4f1a\u963b\u585e\u8282\u70b9\u7684\u7ebf\u7a0b\uff09 final boolean acquireQueued(final Node node, int arg) { //\u9501\u8d44\u6e90\u83b7\u53d6\u5931\u8d25\u6807\u8bb0\u4f4d boolean failed = true; try { //\u7b49\u5f85\u7ebf\u7a0b\u88ab\u4e2d\u65ad\u6807\u8bb0\u4f4d boolean interrupted = false; //\u8fd9\u4e2a\u5faa\u73af\u4f53\u6267\u884c\u7684\u65f6\u673a\u5305\u62ec\u65b0\u8282\u70b9\u5165\u961f\u548c\u961f\u5217\u4e2d\u7b49\u5f85\u8282\u70b9\u88ab\u5524\u9192\u4e24\u4e2a\u5730\u65b9 for (;;) { //\u83b7\u53d6\u5f53\u524d\u8282\u70b9\u7684\u524d\u7f6e\u8282\u70b9 final Node p = node.predecessor(); //\u5982\u679c\u524d\u7f6e\u8282\u70b9\u5c31\u662f\u5934\u7ed3\u70b9\uff0c\u5219\u5c1d\u8bd5\u83b7\u53d6\u9501\u8d44\u6e90 if (p == head && tryAcquire(arg)) { //\u5f53\u524d\u8282\u70b9\u83b7\u5f97\u9501\u8d44\u6e90\u4ee5\u540e\u8bbe\u7f6e\u4e3a\u5934\u8282\u70b9 //\u5934\u7ed3\u70b9\u5c31\u8868\u793a\u5f53\u524d\u6b63\u5360\u6709\u9501\u8d44\u6e90\u7684\u8282\u70b9 setHead(node); // \u6b64\u65f6\u4f1a\u7f6e node\u7684thread\u5b57\u6bb5\u4e3anull p.next = null; //\u8868\u793a\u9501\u8d44\u6e90\u6210\u529f\u83b7\u53d6\uff0c\u56e0\u6b64\u628afailed\u7f6e\u4e3afalse failed = false; //\u8fd4\u56de\u4e2d\u65ad\u6807\u8bb0\uff0c\u8868\u793a\u5f53\u524d\u8282\u70b9\u662f\u88ab\u6b63\u5e38\u5524\u9192\u8fd8\u662f\u88ab\u4e2d\u65ad\u5524\u9192 return interrupted; } \u5982\u679c\u6ca1\u6709\u83b7\u53d6\u9501\u6210\u529f\uff0c\u5219\u8fdb\u5165\u6302\u8d77\u903b\u8f91 if (shouldParkAfterFailedAcquire(p, node) && parkAndCheckInterrupt()) // parkAndCheckInterrupt()\u8fd4\u56detrue,\u8bf4\u660e\u7531\u4e8e\u4e2d\u65ad\u88ab\u5524\u9192 interrupted = true; // \u65e0\u8bba\u662f\u6b63\u5e38\u88ab\u5524\u9192\uff0c\u8fd8\u662f\u4e2d\u65ad\u88ab\u5524\u9192\uff0c\u5f53\u524d\u7ebf\u7a0b\u90fd\u4f1a\u91cd\u65b0\u5c1d\u8bd5\u53bb\u83b7\u53d6\u9501\u8d44\u6e90\u3002 // \u5982\u679c\u6210\u529f\u5219\u8fd4\u56de\u4e2d\u65ad\u6807\u8bb0\uff0c\u5426\u5219\u7ee7\u7eed\u6302\u8d77\u7b49\u5f85 } } finally { //\u6700\u540e\u4f1a\u5206\u6790\u83b7\u53d6\u9501\u5931\u8d25\u5904\u7406\u903b\u8f91 if (failed) cancelAcquire(node); } } /* \u53ea\u6709\u524d\u9a71\u8282\u70b9\u662f\u5934\u8282\u70b9\u624d\u80fd\u591f\u5c1d\u8bd5\u83b7\u53d6\u540c\u6b65\u72b6\u6001: 1\u3001\u5934\u8282\u70b9\u662f\u6210\u529f\u83b7\u53d6\u5230\u540c\u6b65\u72b6\u6001\u7684\u8282\u70b9\uff0c\u800c\u5934\u8282\u70b9\u7684\u7ebf\u7a0b\u91ca\u653e\u4e86\u540c\u6b65\u72b6\u6001\u4e4b\u540e\uff0c\u5c06\u4f1a\u5524\u9192\u5176\u540e\u7ee7\u8282\u70b9\uff0c \u540e\u7ee7\u8282\u70b9\u7684\u7ebf\u7a0b\u88ab\u5524\u9192\u540e\u9700\u8981\u68c0\u67e5\u81ea\u5df1\u7684\u524d\u9a71\u8282\u70b9\u662f\u5426\u662f\u5934\u8282\u70b9\u3002 2\u3001\u7ef4\u62a4\u540c\u6b65\u961f\u5217\u7684FIFO\u539f\u5219 */ //\u6302\u8d77\u7ebf\u7a0b //\u9996\u5148\u8bf4\u660e\u4e00\u4e0b\u53c2\u6570\uff0cnode\u662f\u5f53\u524d\u7ebf\u7a0b\u7684\u8282\u70b9\uff0cpred\u662f\u5b83\u7684\u524d\u7f6e\u8282\u70b9 private static boolean shouldParkAfterFailedAcquire(Node pred, Node node) { //\u83b7\u53d6\u524d\u7f6e\u8282\u70b9\u7684waitStatus int ws = pred.waitStatus; if (ws == Node.SIGNAL) //\u5982\u679c\u524d\u7f6e\u8282\u70b9\u7684waitStatus\u662fNode.SIGNAL\u5219\u8fd4\u56detrue\uff0c\u7136\u540e\u4f1a\u6267\u884cparkAndCheckInterrupt()\u65b9\u6cd5\u8fdb\u884c\u6302\u8d77 return true; // \u8fd4\u56detrue,\u8bf4\u660e\u53ef\u4ee5\u6302\u8d77node\u4e2d\u7684\u7ebf\u7a0b if (ws > 0) { // \u8bf4\u660ews==Node.CANCELLED //\u8df3\u8fc7\u6240\u6709\u5df2\u7ecf\u53d6\u6d88\u7684\u524d\u7f6e\u8282\u70b9 do { node.prev = pred = pred.prev; } while (pred.waitStatus > 0); /* \u8fd9\u91cc\u6211\u4eec\u7531\u5f53\u524d\u8282\u70b9\u7684\u524d\u7f6e\u8282\u70b9\u5f00\u59cb\uff0c\u4e00\u76f4\u5411\u524d\u627e\u6700\u8fd1\u7684\u4e00\u4e2a\u6ca1\u6709\u88ab\u53d6\u6d88\u7684\u8282\u70b9 \u7531\u4e8e\u5934\u7ed3\u70b9head\u662f\u901a\u8fc7new Node()\u521b\u5efa\uff0c\u5b83\u7684waitStatus\u4e3a0,\u56e0\u6b64\u8fd9\u91cc\u4e0d\u4f1a\u51fa\u73b0\u7a7a\u6307\u9488\u95ee\u9898\uff0c\u5373\u6700\u591a\u627e\u5230\u5934\u8282\u70b9\uff0c do-while\u5faa\u73af\u5c31\u4f1a\u9000\u51fa */ pred.next = node; } else { //\u6839\u636ewaitStatus\u7684\u53d6\u503c\u9650\u5b9a\uff0c\u8fd9\u91ccwaitStatus\u7684\u503c\u53ea\u80fd\u662f0\u6216\u8005PROPAGATE\uff0c //\u56e0\u6b64\u628a\u524d\u7f6e\u8282\u70b9\u7684waitStatus\u8bbe\u4e3aNode.SIGNAL\uff0c\u7136\u540e\u91cd\u65b0\u8fdb\u5165\u8be5\u65b9\u6cd5\u8fdb\u884c\u5224\u65ad compareAndSetWaitStatus(pred, ws, Node.SIGNAL); } return false; // \u6302\u8d77\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u91cd\u65b0\u6267\u884cacquireQueued\u65b9\u6cd5\u7684\u5faa\u73af\u4f53 } private final boolean parkAndCheckInterrupt() { LockSupport.park(this); //\u88ab\u5524\u9192\u4e4b\u540e\uff0c\u8fd4\u56de\u4e2d\u65ad\u6807\u8bb0\uff0c\u5373\u5982\u679c\u662f\u6b63\u5e38\u5524\u9192\u5219\u8fd4\u56defalse\uff0c\u5982\u679c\u662f\u7531\u4e8e\u4e2d\u65ad\u9192\u6765\uff0c\u5c31\u8fd4\u56detrue return Thread.interrupted(); /* Thread.interrupted()\u65b9\u6cd5\u5728\u8fd4\u56de\u4e2d\u65ad\u6807\u8bb0\u7684\u540c\u65f6\u4f1a\u6e05\u9664\u4e2d\u65ad\u6807\u8bb0\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u7531\u4e8e\u4e2d\u65ad\u9192\u6765\u7136\u540e\u83b7\u53d6\u9501\u6210\u529f\uff0c \u90a3\u4e48\u6574\u4e2aacquireQueued\u65b9\u6cd5\u5c31\u4f1a\u8fd4\u56detrue\u8868\u793a\u662f\u56e0\u4e3a\u4e2d\u65ad\u9192\u6765\uff0c\u4f46\u5982\u679c\u4e2d\u65ad\u9192\u6765\u4ee5\u540e\u6ca1\u6709\u83b7\u53d6\u5230\u9501\uff0c\u7ee7\u7eed\u6302\u8d77\uff0c \u7531\u4e8e\u8fd9\u6b21\u7684\u4e2d\u65ad\u5df2\u7ecf\u88ab\u6e05\u9664\u4e86\uff0c\u4e0b\u6b21\u5982\u679c\u662f\u88ab\u6b63\u5e38\u5524\u9192\uff0c\u90a3\u4e48acquireQueued\u65b9\u6cd5\u5c31\u4f1a\u8fd4\u56defalse\uff0c\u8868\u793a\u6ca1\u6709\u4e2d\u65ad\u3002 */ } // acquireQueued\u7684finaly\u6a21\u5757\uff0c\u5904\u7406tryAcquire\u53ef\u80fd\u51fa\u73b0\u7684\u5f02\u5e38 //\u4f20\u5165\u7684\u65b9\u6cd5\u53c2\u6570\u662f\u5f53\u524d\u83b7\u53d6\u9501\u8d44\u6e90\u5931\u8d25\u7684\u8282\u70b9 private void cancelAcquire(Node node) { // \u5982\u679c\u8282\u70b9\u4e0d\u5b58\u5728\u5219\u76f4\u63a5\u5ffd\u7565 if (node == null) return; node.thread = null; // \u8df3\u8fc7\u6240\u6709\u5df2\u7ecf\u53d6\u6d88\u7684\u524d\u7f6e\u8282\u70b9 Node pred = node.prev; while (pred.waitStatus > 0) node.prev = pred = pred.prev; // \u5df2\u7ecf\u53d6\u6d88\u7684\u524d\u9a71\u8282\u70b9\u7684\u524d\u9a71\u7ed3\u70b9\u6210\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u524d\u9a71\u7ed3\u70b9 Node predNext = pred.next; //\u628a\u5f53\u524d\u8282\u70b9waitStatus\u7f6e\u4e3a\u53d6\u6d88\uff0c\u8fd9\u6837\u522b\u7684\u8282\u70b9\u5728\u5904\u7406\u65f6\u5c31\u4f1a\u8df3\u8fc7\u8be5\u8282\u70b9 node.waitStatus = Node.CANCELLED; //\u5982\u679c\u5f53\u524d\u662f\u5c3e\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u5220\u9664\uff0c\u5373\u51fa\u961f //\u6ce8\uff1a\u8fd9\u91cc\u4e0d\u7528\u5173\u5fc3CAS\u5931\u8d25\uff0c\u56e0\u4e3a\u5373\u4f7f\u5e76\u53d1\u5bfc\u81f4\u5931\u8d25\uff0c\u8be5\u8282\u70b9\u4e5f\u5df2\u7ecf\u88ab\u6210\u529f\u5220\u9664 if (node == tail && compareAndSetTail(node, pred)) { compareAndSetNext(pred, predNext, null); } else { int ws; if (pred != head && ((ws = pred.waitStatus) == Node.SIGNAL || (ws <= 0 && compareAndSetWaitStatus(pred, ws, Node.SIGNAL))) && pred.thread != null) { Node next = node.next; if (next != null && next.waitStatus <= 0) //\u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u524d\u7f6e\u8282\u70b9\u4e0d\u662f\u5934\u8282\u70b9\u4e14\u5b83\u540e\u9762\u7684\u8282\u70b9\u7b49\u5f85\u5b83\u5524\u9192\uff08waitStatus\u5c0f\u4e8e0\uff09\uff0c //\u518d\u52a0\u4e0a\u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9\u6ca1\u6709\u88ab\u53d6\u6d88\u5c31\u628a\u524d\u7f6e\u8282\u70b9\u8ddf\u540e\u7f6e\u8282\u70b9\u8fdb\u884c\u8fde\u63a5\uff0c\u76f8\u5f53\u4e8e\u5220\u9664\u4e86\u5f53\u524d\u8282\u70b9 compareAndSetNext(pred, predNext, next); } else { //\u8fdb\u5165\u8fd9\u91cc\uff0c\u8981\u4e48\u5f53\u524d\u8282\u70b9\u7684\u524d\u7f6e\u8282\u70b9\u662f\u5934\u7ed3\u70b9\uff0c\u8981\u4e48\u524d\u7f6e\u8282\u70b9\u7684waitStatus\u662fPROPAGATE\uff0c //\u76f4\u63a5\u5524\u9192\u5f53\u524d\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9 unparkSuccessor(node); } node.next = node; // help GC } } // release\u65b9\u6cd5 public final boolean release(int arg) { if (tryRelease(arg)) { Node h = head; /* \u540c\u6b65\u961f\u5217\u521d\u59cb\u5316\u65f6\u7684head\u8282\u70b9\u7684waitStatus\u4e3a0\uff0c\u5176\u4e0d\u9700\u5524\u9192\u540e\u7ee7\u8282\u70b9\uff0c\u6b64\u65f6\u5360\u6709\u9501\u7684\u8282\u70b9\u91ca\u653e\u9501\u540e\uff0c \u540c\u6b65\u961f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u963b\u585e\u7ebf\u7a0b\u7684\u8282\u70b9\uff0c\u56e0\u4e3a\u5176\u524d\u9a71\u7ed3\u70b9\u662fhead\u8282\u70b9\uff0c\u5982\u679ctryAcquire\u6210\u529f\u5c06\u83b7\u5f97\u9501\uff0c \u8be5\u8282\u70b9\u968f\u540e\u6210\u4e3a\u65b0\u7684head\uff0c\u8fd9\u90e8\u5206\u5728acquireQueued\u65b9\u6cd5\u4e2d\u5b9e\u73b0\uff0c \u65b0\u7684head\u7684waitStatus\u4e0d\u662f0\uff0c\u4e4b\u540e\u91ca\u653e\u65f6\u4f1a\u5524\u9192\u540e\u7ee7\u8282\u70b9 */ if (h != null && h.waitStatus != 0) unparkSuccessor(h); //\u5524\u9192head \u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9 return true; } return false; } \u5206\u6790\u4e86\u72ec\u5360\u5f0f\u540c\u6b65\u72b6\u6001\u83b7\u53d6\u548c\u91ca\u653e\u8fc7\u7a0b\u540e\uff0c\u9002\u5f53\u505a\u4e2a\u603b\u7ed3\uff1a\u5728\u83b7\u53d6\u540c\u6b65\u72b6\u6001\u65f6\uff0c\u540c\u6b65\u5668\u7ef4\u62a4\u4e00\u4e2a\u540c\u6b65\u961f\u5217\uff0c\u83b7\u53d6\u72b6\u6001\u5931\u8d25\u7684\u7ebf\u7a0b \u90fd\u4f1a\u88ab\u52a0\u5165\u5230\u961f\u5217\u4e2d\u5e76\u5728\u961f\u5217\u4e2d\u8fdb\u884c\u81ea\u65cb\uff1b\u79fb\u51fa\u961f\u5217(\u6216\u505c\u6b62\u81ea\u65cb)\u7684\u6761\u4ef6\u662f\u524d\u9a71\u8282\u70b9\u4e3a\u5934\u8282\u70b9\u4e14\u6210\u529f\u83b7\u53d6\u4e86\u540c\u6b65\u72b6\u6001\u3002 \u5728\u91ca\u653e\u540c\u6b65\u72b6\u6001\u65f6\uff0c\u540c\u6b65\u5668\u8c03\u7528tryRelease(int arg)\u65b9\u6cd5\u91ca\u653e\u540c\u6b65\u72b6\u6001\uff0c\u7136\u540e\u5524\u9192\u5934\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9\u3002 \u2003 \u5171\u4eab\u5f0f\u540c\u6b65\u72b6\u6001\u83b7\u53d6\u4e0e\u91ca\u653e \u5171\u4eab\u5f0f\u83b7\u53d6\u4e0e\u72ec\u5360\u5f0f\u83b7\u53d6\u6700\u4e3b\u8981\u7684\u533a\u522b\u5728\u4e8e\u540c\u4e00\u65f6\u523b\u80fd\u5426\u6709\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u83b7\u53d6\u5230\u540c\u6b65\u72b6\u6001\u3002 // \u5171\u4eab\u5f0f\u83b7\u53d6\u4f1a\u5ffd\u7565 interrupt public final void acquireShared(int arg) { if (tryAcquireShared(arg) < 0) doAcquireShared(arg); } private void doAcquireShared(int arg) { final Node node = addWaiter(Node.SHARED); boolean failed = true; try { boolean interrupted = false; for (;;) { // \u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u524d\u9a71\u4e3a\u5934\u8282\u70b9\u65f6\uff0c\u5c1d\u8bd5\u83b7\u53d6\u540c\u6b65\u72b6\u6001\uff0c\u5982\u679c\u8fd4\u56de\u503c\u5927\u4e8e\u7b49\u4e8e0\uff0c // \u8868\u793a\u8be5\u6b21\u83b7\u53d6\u540c\u6b65\u72b6\u6001\u6210\u529f\u5e76\u4ece\u81ea\u65cb\u8fc7\u7a0b\u4e2d\u9000\u51fa\u3002 final Node p = node.predecessor(); if (p == head) { int r = tryAcquireShared(arg); if (r >= 0) { setHeadAndPropagate(node, r); p.next = null; // help GC if (interrupted) selfInterrupt(); failed = false; return; } } if (shouldParkAfterFailedAcquire(p, node) && parkAndCheckInterrupt()) interrupted = true; } } finally { if (failed) cancelAcquire(node); } } // \u5171\u4eab\u5f0f\u91ca\u653e public final boolean releaseShared(int arg) { if (tryReleaseShared(arg)) { doReleaseShared(); return true; } return false; } /* \u548c\u72ec\u5360\u5f0f\u4e3b\u8981\u533a\u522b\u5728\u4e8etryReleaseShared(int arg) \u65b9\u6cd5\u5fc5\u987b\u786e\u4fdd\u540c\u6b65\u72b6\u6001\uff08\u6216\u8005\u8d44\u6e90\u6570\uff09\u7ebf\u7a0b\u5b89\u5168\u91ca\u653e\uff0c \u4e00\u822c\u662f\u901a\u8fc7\u5faa\u73af\u548cCAS\u6765\u4fdd\u8bc1\u7684\uff0c\u56e0\u4e3a\u91ca\u653e\u540c\u6b65\u72b6\u6001\u7684\u64cd\u4f5c\u4f1a\u540c\u65f6\u6765\u81ea\u591a\u4e2a\u7ebf\u7a0b\u3002 */ \u72ec\u5360\u5f0f\u8d85\u65f6\u83b7\u53d6\u540c\u6b65\u72b6\u6001 private boolean doAcquireNanos(int arg, long nanosTimeout) throws InterruptedException { if (nanosTimeout <= 0L) return false; final long deadline = System.nanoTime() + nanosTimeout; final Node node = addWaiter(Node.EXCLUSIVE); boolean failed = true; try { for (;;) { final Node p = node.predecessor(); if (p == head && tryAcquire(arg)) { setHead(node); p.next = null; // help GC failed = false; return true; } nanosTimeout = deadline - System.nanoTime(); if (nanosTimeout <= 0L) //\u8bf4\u660e\u7b49\u5f85\u65f6\u95f4\u5df2\u7ecf\u8017\u5c3d return false; // \u7b49\u5f85\u65f6\u95f4\u5c0f\u4e8espinForTimeoutThreshold(1000 ns)\uff0c\u8fdb\u5165\u5feb\u901f\u81ea\u65cb // \u56e0\u4e3a\u975e\u5e38\u77ed\u7684\u8d85\u65f6\u7b49\u5f85\u65e0\u6cd5\u505a\u5230\u5341\u5206\u7cbe\u786e if (shouldParkAfterFailedAcquire(p, node) && nanosTimeout > spinForTimeoutThreshold) LockSupport.parkNanos(this, nanosTimeout); if (Thread.interrupted()) throw new InterruptedException(); } } finally { if (failed) cancelAcquire(node); } } ReentrantLock ReentrantLock\u5185\u90e8\u6709\u4e09\u4e2a\u9759\u6001\u7c7b\uff0cSync(\u62bd\u8c61\u7c7b), FairSync, NonFairSync\uff0c\u540e\u4e24\u4e2a\u7ee7\u627f\u4e86Sync; Sync\u4e2d\u5b9e\u73b0\u4e86nonfairTryAcquire\u548ctryRelease\u65b9\u6cd5\uff1b NonFairSync\u4e2d\u7684tryAcquire\u65b9\u6cd5\u76f4\u63a5\u8c03\u7528\u4e86Sync\u4e2d\u7684nonfairTryAcquire\u65b9\u6cd5\uff1b FairSync\u4e2d\u5b9e\u73b0\u7684tryAcquire\u65b9\u6cd5\u5728nonfairTryAcquire\u57fa\u7840\u4e0a\uff0c\u591a\u4e86hasQueuedPredecessors\u5224\u65ad\u3002 \u975e\u516c\u5e73\u6027\u7684\u83b7\u53d6\u4e0e\u91ca\u653e final boolean nonfairTryAcquire(int acquires) { final Thread current = Thread.currentThread(); int c = getState(); if (c == 0) { if (compareAndSetState(0, acquires)) { setExclusiveOwnerThread(current); return true; } }// \u5982\u679c\u662f\u83b7\u53d6\u9501\u7684\u7ebf\u7a0b\u518d\u6b21\u8bf7\u6c42\uff0c\u5219\u5c06\u540c\u6b65\u72b6\u6001\u503c\u8fdb\u884c\u589e\u52a0\u5e76\u8fd4\u56de true\uff0c\u8868\u793a\u83b7\u53d6\u540c\u6b65\u72b6\u6001\u6210\u529f else if (current == getExclusiveOwnerThread()) { int nextc = c + acquires; if (nextc < 0) // overflow throw new Error(\"Maximum lock count exceeded\"); setState(nextc); return true; } return false; } /* \u5982\u679c\u8be5\u9501\u88ab\u83b7\u53d6\u4e86n\u6b21\uff0c\u90a3\u4e48\u524d(n-1)\u6b21tryRelease(int releases)\u65b9\u6cd5\u5fc5\u987b\u8fd4\u56defalse\uff0c \u800c\u53ea\u6709\u540c\u6b65\u72b6\u6001\u5b8c\u5168\u91ca\u653e\u4e86\uff0c\u624d\u80fd\u8fd4\u56detrue\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u8be5\u65b9\u6cd5\u5c06\u540c\u6b65\u72b6\u6001\u662f\u5426\u4e3a0\u4f5c\u4e3a\u6700\u7ec8\u91ca\u653e\u7684\u6761\u4ef6\uff0c \u5f53\u540c\u6b65\u72b6\u6001\u4e3a0\u65f6\uff0c\u5c06\u5360\u6709\u7ebf\u7a0b\u8bbe\u7f6e\u4e3anull\uff0c\u5e76\u8fd4\u56detrue\uff0c\u8868\u793a\u91ca\u653e\u6210\u529f */ protected final boolean tryRelease(int releases) { int c = getState() - releases; if (Thread.currentThread() != getExclusiveOwnerThread()) throw new IllegalMonitorStateException(); boolean free = false; if (c == 0) { free = true; setExclusiveOwnerThread(null); } setState(c); return free; } \u516c\u5e73\u83b7\u53d6\u4e0e\u91ca\u653e protected final boolean tryAcquire(int acquires) { final Thread current = Thread.currentThread(); int c = getState(); if (c == 0) { // hasQueuedPredecessors\uff0c\u5224\u65ad\u52a0\u5165\u4e86\u540c\u6b65\u961f\u5217\u4e2d\u5f53\u524d\u8282\u70b9\u662f\u5426\u6709\u524d\u9a71\u8282\u70b9\uff0c // \u5982\u679c\u8fd4\u56detrue\uff0c\u5219\u8868\u793a\u6709\u7ebf\u7a0b\u6bd4\u5f53\u524d\u7ebf\u7a0b\u66f4\u65e9\u5730\u8bf7\u6c42\u83b7\u53d6\u9501\uff0c\u56e0\u6b64\u9700\u8981\u7b49\u5f85\u524d\u9a71\u7ebf\u7a0b\u83b7\u53d6\u5e76\u91ca\u653e\u9501\u4e4b\u540e\u624d\u80fd\u7ee7\u7eed\u83b7\u53d6\u9501\u3002 if (!hasQueuedPredecessors() && compareAndSetState(0, acquires)) { setExclusiveOwnerThread(current); return true; } } else if (current == getExclusiveOwnerThread()) { int nextc = c + acquires; if (nextc < 0) throw new Error(\"Maximum lock count exceeded\"); setState(nextc); return true; } return false; } ReentrantReadWriteLock \u8bfb\u5199\u72b6\u6001\u7684\u8bbe\u8ba1 \u5728\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u4e0a\u7ef4\u62a4\u8bfb\u3001\u5199\u72b6\u6001\uff0c\u9ad816\u4f4d\u8868\u793a\u8bfb\uff0c\u4f4e16\u4f4d\u8868\u793a\u5199\uff1b state & 0x0000FFFF \u83b7\u53d6\u5199\u72b6\u6001\uff1b\u5f53\u8bfb\u72b6\u6001\u589e\u52a01\u65f6\uff0cstate+(1<<16); \u56e0\u6b64S\u4e0d\u7b49\u4e8e0\u65f6\uff0c\u5f53\u5199\u72b6\u6001\uff08S&0x0000FFFF\uff09\u7b49\u4e8e0\u65f6\uff0c\u5219\u8bfb \u72b6\u6001\uff08S>>>16\uff09\u5927\u4e8e0\uff0c\u5373\u8bfb\u9501\u5df2\u88ab\u83b7\u53d6\u3002 \u5199\u9501\u7684\u83b7\u53d6\u4e0e\u91ca\u653e \u5199\u9501\u662f\u4e00\u4e2a\u652f\u6301\u91cd\u8fdb\u5165\u7684\u6392\u5b83\u9501\u3002\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u5df2\u7ecf\u83b7\u53d6\u4e86\u5199\u9501\uff0c\u5219\u589e\u52a0\u5199\u72b6\u6001\u3002\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u5728\u83b7\u53d6\u5199\u9501\u65f6\uff0c \u8bfb\u9501\u5df2\u7ecf\u88ab\u83b7\u53d6\uff08\u8bfb\u72b6\u6001\u4e0d\u4e3a0\uff09\u6216\u8005\u8be5\u7ebf\u7a0b\u4e0d\u662f\u5df2\u7ecf\u83b7\u53d6\u5199\u9501\u7684\u7ebf\u7a0b\uff0c\u5219\u5f53\u524d\u7ebf\u7a0b\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\u3002 protected final boolean tryAcquire(int acquires) { /* * Walkthrough: * 1. If read count nonzero or write count nonzero * and owner is a different thread, fail. * 2. If count would saturate, fail. (This can only * happen if count is already nonzero.) * 3. Otherwise, this thread is eligible for lock if * it is either a reentrant acquire or * queue policy allows it. If so, update state * and set owner. */ Thread current = Thread.currentThread(); int c = getState(); int w = exclusiveCount(c); // w=state & 0x0000ffff if (c != 0) { // (Note: if c != 0 and w == 0 then shared count != 0)\uff0c\u5373\u5b58\u5728\u8bfb\u9501 if (w == 0 || current != getExclusiveOwnerThread()) return false; if (w + exclusiveCount(acquires) > MAX_COUNT) throw new Error(\"Maximum lock count exceeded\"); // Reentrant acquire setState(c + acquires); return true; } if (writerShouldBlock() || !compareAndSetState(c, c + acquires)) return false; setExclusiveOwnerThread(current); return true; } \u8bfb\u9501\u7684\u83b7\u53d6\u4e0e\u91ca\u653e \u8bfb\u9501\u662f\u4e00\u4e2a\u652f\u6301\u91cd\u8fdb\u5165\u7684\u5171\u4eab\u9501\uff0c\u5b83\u80fd\u591f\u88ab\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u83b7\u53d6\uff0c\u5728\u6ca1\u6709\u5176\u4ed6\u5199\u7ebf\u7a0b\u8bbf\u95ee \uff08\u6216\u8005\u5199\u72b6\u6001\u4e3a0\uff09\u65f6\uff0c\u8bfb\u9501\u603b\u4f1a\u88ab\u6210\u529f\u5730\u83b7\u53d6\uff0c\u800c\u6240\u505a\u7684\u4e5f\u53ea\u662f\uff08\u7ebf\u7a0b\u5b89\u5168\u7684\uff09\u589e\u52a0\u8bfb\u72b6\u6001\u3002\u5982 \u679c\u5f53\u524d\u7ebf\u7a0b\u5df2\u7ecf\u83b7\u53d6\u4e86\u8bfb\u9501\uff0c\u5219\u589e\u52a0\u8bfb\u72b6\u6001\u3002\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u5728\u83b7\u53d6\u8bfb\u9501\u65f6\uff0c\u5199\u9501\u5df2\u88ab\u5176\u4ed6\u7ebf\u7a0b \u83b7\u53d6\uff0c\u5219\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\u3002 protected final int tryAcquireShared(int unused) { /* * Walkthrough: * 1. If write lock held by another thread, fail. * 2. Otherwise, this thread is eligible for * lock wrt state, so ask if it should block * because of queue policy. If not, try * to grant by CASing state and updating count. * Note that step does not check for reentrant * acquires, which is postponed to full version * to avoid having to check hold count in * the more typical non-reentrant case. * 3. If step 2 fails either because thread * apparently not eligible or CAS fails or count * saturated, chain to version with full retry loop. */ Thread current = Thread.currentThread(); int c = getState(); if (exclusiveCount(c) != 0 && getExclusiveOwnerThread() != current) return -1; int r = sharedCount(c); if (!readerShouldBlock() && r < MAX_COUNT && compareAndSetState(c, c + SHARED_UNIT)) { // SHARED_UNIT = 1<<16 if (r == 0) { firstReader = current; firstReaderHoldCount = 1; } else if (firstReader == current) { firstReaderHoldCount++; } else { HoldCounter rh = cachedHoldCounter; if (rh == null || rh.tid != getThreadId(current)) cachedHoldCounter = rh = readHolds.get(); else if (rh.count == 0) readHolds.set(rh); rh.count++; } return 1; } return fullTryAcquireShared(current); } \u9501\u964d\u7ea7 \u9501\u964d\u7ea7\u662f\u6307\u628a\u6301\u4f4f\uff08\u5f53\u524d\u62e5\u6709\u7684\uff09\u5199\u9501\uff0c\u518d\u83b7\u53d6\u5230 \u8bfb\u9501\uff0c\u968f\u540e\u91ca\u653e\uff08\u5148\u524d\u62e5\u6709\u7684\uff09\u5199\u9501\u7684\u8fc7\u7a0b // \u4f2a\u4ee3\u7801 public void processData() { readLock.lock(); if (!update) { // \u5fc5\u987b\u5148\u91ca\u653e\u8bfb\u9501\uff0c\u5426\u5219\u65e0\u6cd5\u83b7\u53d6\u5199\u9501 readLock.unlock(); // \u9501\u964d\u7ea7\u4ece\u5199\u9501\u83b7\u53d6\u5230\u5f00\u59cb writeLock.lock(); try { if (!update) { // \u51c6\u5907\u6570\u636e\u7684\u6d41\u7a0b\uff08\u7565\uff09 update = true; } readLock.lock(); /* \u8fd9\u91cc\u8bfb\u9501\u83b7\u53d6\u662f\u5fc5\u8981\u7684\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u53ef\u89c1\u6027\uff0c \u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u4e0d\u83b7\u53d6\u8bfb\u9501\u800c\u662f\u76f4\u63a5\u91ca\u653e\u5199\u9501\uff0c\u5047\u8bbe\u6b64\u523b\u53e6\u4e00\u4e2a\u7ebf\u7a0b\uff08\u8bb0\u4f5c\u7ebf\u7a0bT\uff09\u83b7\u53d6\u4e86\u5199\u9501\u5e76\u4fee\u6539\u4e86\u6570\u636e\uff0c \u90a3\u4e48\u5f53\u524d\u7ebf\u7a0b\u65e0\u6cd5\u611f\u77e5\u7ebf\u7a0bT\u7684\u6570\u636e\u66f4\u65b0\u3002\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u83b7\u53d6\u8bfb\u9501\uff0c\u5373\u9075\u5faa\u9501\u964d\u7ea7\u7684\u6b65\u9aa4\uff0c \u5219\u7ebf\u7a0bT\u83b7\u53d6\u5199\u9501\u5c06\u4f1a\u88ab\u963b\u585e\uff0c\u76f4\u5230\u5f53\u524d\u7ebf\u7a0b\u4f7f\u7528\u6570\u636e\u5e76\u91ca\u653e\u8bfb\u9501\u4e4b\u540e\uff0c\u7ebf\u7a0bT\u624d\u80fd\u83b7\u53d6\u5199\u9501\u8fdb\u884c\u6570\u636e\u66f4\u65b0 */ } finally { writeLock.unlock(); }// \u9501\u964d\u7ea7\u5b8c\u6210\uff0c\u5199\u9501\u964d\u7ea7\u4e3a\u8bfb\u9501 } try { // \u4f7f\u7528\u6570\u636e\u7684\u6d41\u7a0b\uff08\u7565\uff09 } finally { readLock.unlock(); } } HashMap 1\u3001\u57fa\u4e8eHashTable\u7684\u5b9e\u73b0, provides all of the optional map operations, permits null value and null key, and is unsynchronized. public HashMap(int initialCapacity, float loadFactor) { if (initialCapacity < 0) throw new IllegalArgumentException(\"Illegal initial capacity: \" + initialCapacity); if (initialCapacity > MAXIMUM_CAPACITY) initialCapacity = MAXIMUM_CAPACITY; if (loadFactor <= 0 || Float.isNaN(loadFactor)) throw new IllegalArgumentException(\"Illegal load factor: \" + loadFactor); this.loadFactor = loadFactor; this.threshold = tableSizeFor(initialCapacity); } public HashMap(int initialCapacity) { this(initialCapacity, DEFAULT_LOAD_FACTOR); } public HashMap() { this.loadFactor = DEFAULT_LOAD_FACTOR; // all other fields defaulted // \u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u521d\u59cb\u5316\u65f6\uff0c\u67e5\u770bcapacity\uff0c\u8fd4\u56de\u9ed8\u8ba4\u503c16\uff1b // \u67e5\u770bthreshold, \u4e3a0 } public HashMap(Map<? extends K, ? extends V> m) { this.loadFactor = DEFAULT_LOAD_FACTOR; putMapEntries(m, false); } 2\u3001HashMap\u7684capacity\u6307 the number of buckets in the hash table; When the number of entries(entry:key-value) in the hash table exceeds the product of the load factor and the current capacity, the hash table is rehashed . capacity: hash table\u4e2dbin/bucket\u7684\u6570\u91cf\uff0c\u521d\u59cb\u5316HashMap\u65f6\u4e0d\u6307\u5b9ainitialCapacity\uff0c\u5219 initialCpacity\u9ed8\u8ba4\u53d616\uff1b capacity\u7684\u53d6\u503c\u4e00\u5b9a\u662f2\u7684\u5e42\u6b21\uff0c\u8fd9\u6837\u5728\u8ba1\u7b97 hashCode%capacity\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 hashCode & (capacity-1)\u6765\u4ee3\u66ff\uff0c\u6548\u7387\u66f4\u9ad8\u3002 final int capacity() { return (table != null) ? table.length : (threshold > 0) ? threshold : DEFAULT_INITIAL_CAPACITY; } threshold: \u5f53size > threshold\u65f6\uff0chash table\u9700\u8981\u8fdb\u884c\u6269\u5bb9; \u521d\u59cb\u5316\u65f6\uff0cthreshold = tableSize(initialCapacity);\u6b64\u65f6\u8c03\u7528capacity()\u8fd4\u56dethreshold; static final int tableSizeFor(int cap) { int n = cap - 1; // \u907f\u514d cap\u5df2\u7ecf\u662f2\u7684\u5e42\u6b21 n |= n >>> 1; n |= n >>> 2; n |= n >>> 4; n |= n >>> 8; n |= n >>> 16; /* \u5047\u8bben\u7684\u4e8c\u8fdb\u5236\u4e3a01xxx...xxx\u3002\u63a5\u7740 \u5bf9n\u53f3\u79fb1\u4f4d\uff1a001xx...xxx\uff0c\u518d\u4f4d\u6216\uff0c\u7ed3\u679c\u4e3a\uff1a011xx...xxx \u5bf9n\u53f3\u79fb2\u4e3a\uff1a00011...xxx\uff0c\u518d\u4f4d\u6216\uff0c\u7ed3\u679c\u4e3a\uff1a01111...xxx \u53f3\u79fb4\u4f4d\uff0c\u53ef\u5f978\u4e2a1\uff0c\u56e0\u4e3aint \u4e3a32\u4f4d\uff0c\u56e0\u6b64\u6700\u591a\u53f3\u79fb16\u4f4d \u6700\u540e\u7684\u7ed3\u679c\u662f\u8ba9\u539f\u59cbn\u6700\u9ad8\u4f4d\u76841\u540e\u9762\u7684\u4f4d\u5168\u53d8\u4e3a1, \u8fd4\u56den+1\uff0c\u5373\u5f97\u5230\u4e862\u7684\u6574\u6570\u6b21\u5e42\u7684\u503c\u4e86\u3002 \u5982\u679c n=cap\uff0c\u800ccap=2^x\uff0c\u6700\u540e\u8fd4\u56de\u7684\u7ed3\u679c\u5c06\u662f 2^(x+1) */ return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1; // \u4f7f\u7528\u53e6\u4e00\u4e2aHashMap m\u6765\u521d\u59cb\u5316\u5f53\u524dHashMap, \u6b64\u65f6threshold\u901a\u8fc7\u4e0b\u9762\u65b9\u5f0f\u6765\u8bbe\u7f6e\uff0c\u5176\u4e2ds=m.size() if (table == null) { // pre-size float ft = ((float)s / loadFactor) + 1.0F; int t = ((ft < (float)MAXIMUM_CAPACITY) ? (int)ft : MAXIMUM_CAPACITY); if (t > threshold) threshold = tableSizeFor(t); } else if (s > threshold) resize(); } final Node<K,V>[] resize() { Node<K,V>[] oldTab = table; int oldCap = (oldTab == null) ? 0 : oldTab.length; int oldThr = threshold; int newCap, newThr = 0; if (oldCap > 0) { if (oldCap >= MAXIMUM_CAPACITY) { * threshold = Integer.MAX_VALUE; return oldTab; } else if ((newCap = oldCap << 1) < MAXIMUM_CAPACITY && ** oldCap >= DEFAULT_INITIAL_CAPACITY) // \u5982\u679c\u65b0\u5bb9\u91cf\u5927\u4e8e\u7b49\u4e8eMAXIMUM_CAPACITY \u6216\u8005 \u65e7\u5bb9\u91cf\u5c0f\u4e8e\u9ed8\u8ba4\u521d\u59cb\u5bb9\u91cf\uff0c\u6b64\u65f6\u4e0d\u9700\u8981\u4fee\u6539threshold newThr = oldThr << 1; // double threshold }// \u8bf4\u660e\u662f\u521a\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u6b64\u65f6hash table\u4e2d\u5c1a\u672a\u63d2\u5165key-val else if (oldThr > 0) // initial capacity was placed in threshold *** newCap = oldThr; else { // \u8bf4\u660e\u521d\u59cb\u5316\u65f6\u6ca1\u6709\u6307\u5b9ainitialCapacity\u548cload factor **** newCap = DEFAULT_INITIAL_CAPACITY; newThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY); } if (newThr == 0) { // \u5bf9\u5e94 *** \u5904 float ft = (float)newCap * loadFactor; newThr = (newCap < MAXIMUM_CAPACITY && ft < (float)MAXIMUM_CAPACITY ? (int)ft : Integer.MAX_VALUE); } threshold = newThr; @SuppressWarnings({\"rawtypes\",\"unchecked\"}) Node<K,V>[] newTab = (Node<K,V>[])new Node[newCap]; table = newTab; if (oldTab != null) { // \u904d\u5386\u65e7\u7684hash table for (int j = 0; j < oldCap; ++j) { Node<K,V> e; if ((e = oldTab[j]) != null) { // \u53d6\u51fa\u65e7hash table\uff0c\u7b2cj\u4e2abin\u7684first node\u8d4b\u7ed9 e oldTab[j] = null; if (e.next == null) // \u7b2cj\u4e2abin\u4e2d\u7684\u94fe\u8868\u53ea\u67091\u4e2a\u8282\u70b9 newTab[e.hash & (newCap - 1)] = e; // \u5219\u76f4\u63a5\u5c06\u8fd9\u4e2a\u5143\u7d20\u653e\u7f6e\u5728\u65b0\u7684\u54c8\u5e0c\u6876\u91cc\u3002 else if (e instanceof TreeNode) ((TreeNode<K,V>)e).split(this, newTab, j, oldCap); // \u94fe\u8868\u4e2d\u8282\u70b9\u6570\u591a\u4e8e1\u4e2a\uff0c\u4f46\u5c0f\u4e8e8\u4e2a\uff0c\u5219\u8981\u6839\u636e\u94fe\u8868\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7684\u54c8\u5e0c\u503c\uff0c\u4f9d\u6b21\u653e\u5165\u65b0\u54c8\u5e0c\u6876\u5bf9\u5e94\u4e0b\u6807\u4f4d\u7f6e else { //preserve order /* \u56e0\u4e3a\u6269\u5bb9\u662f\u5bb9\u91cf\u7ffb\u500d\uff0c\u6240\u4ee5\u539f\u94fe\u8868\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u73b0\u5728\u53ef\u80fd\u5b58\u653e\u5728\u539f\u6765\u7684\u4e0b\u6807\uff0c\u5373low\u4f4d\uff0c \u6216\u8005\u6269\u5bb9\u540e\u7684\u4e0b\u6807\uff0c\u5373high\u4f4d\u3002 high\u4f4d= low\u4f4d+\u539f\u54c8\u5e0c\u6876\u5bb9\u91cf */ Node<K,V> loHead = null, loTail = null; Node<K,V> hiHead = null, hiTail = null; Node<K,V> next; do { next = e.next; if ((e.hash & oldCap) == 0) {// \u8bf4\u660e\u8282\u70b9hash\u503c\u5c0f\u4e8e\u65e7cap\uff0c\u653e\u5728\u4f4e\u4f4d\u94fe\u8868\u4e2d if (loTail == null) loHead = e; else loTail.next = e; loTail = e; } else { if (hiTail == null) hiHead = e; else hiTail.next = e; hiTail = e; } } while ((e = next) != null); // \u5c06\u4f4e\u4f4d\u94fe\u8868\u5b58\u653e\u5728\u539findex\u5904\uff0c if (loTail != null) { loTail.next = null; newTab[j] = loHead; } // \u5c06\u9ad8\u4f4d\u94fe\u8868\u5b58\u653e\u5728\u65b0index\u5904 if (hiTail != null) { hiTail.next = null; newTab[j + oldCap] = hiHead; } } } } } return newTab; } size: hash table\u4e2dkey-value\u7684\u6570\u91cf load factor = size/capacity 3\u3001default load factor is 0.75, offering a good tradeoff between time and space costs. 4\u3001HashMap\u7684\u6b63\u5e38\u5f62\u5f0f\u662f\u6570\u7ec4+\u94fe\u8868,\u6570\u7ec4\u6bcf\u4e2a\u4f4d\u7f6e\u79f0\u4e3abin or bucket,\u5f53\u4e00\u4e2abin\u4e2d\u7684\u5143\u7d20\u8fc7\u591a(\u8d85\u8fc7TREEIFY_THRESHOLD)\uff0c \u5373\u78b0\u649e\u4e25\u91cd, \u8fd9\u4e2abin\u4e2d\u7684Node\u5c31\u4f1a\u8f6c\u53d8\u4e3a TreeNode, \u8be5bin\u79f0\u4e3aTreeBin, TreeBin\u4ee5\u7ea2\u9ed1\u6811\u5f62\u5f0f\u6784\u5efa. \u9608\u503c\u4e00\u822c\u8bbe\u5b9a\u4e3a8: under random hashCodes, \u4e00\u4e2abin\u4e2d\u5404\u4e2a\u8282\u70b9\u7684\u78b0\u649e\u9891\u7387\u7b26\u53f7\u6cca\u677e\u5206\u5e03;\u5728load factor=0.75\u57fa\u7840\u4e0a, \u5e73\u5747\u53c2\u6570 \u03bb=0.5, \u800cbin\u4e2d\u5143\u7d20\u4e2a\u6570\u4e3ak, \u5219\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u6982\u7387\u4e3a(exp(-0.5) * pow(0.5, k) / factorial(k)), k=8\u65f6\uff0cprobability=0.00000006,\u4e3a\u4ebf\u5206\u4e4b\u516d\u3002 \u5355\u4e2aTreeNode\u5927\u5c0f\u662f\u666e\u901aNode\u5927\u5c0f\u76842\u500d, \u867d\u7136\u7ea2\u9ed1\u6811\u5e73\u5747\u67e5\u627e\u662fO(log N), \u94fe\u8868\u5e73\u5747\u67e5\u627e\u662fO(log N);\u4f46 N\u8f83\u5c0f\u65f6\uff0c\u4f7f\u7528\u7ea2\u9ed1\u6811\u7684\u7a7a\u95f4\u548c\u5efa\u6811\u65f6\u95f4\u90fd\u8981\u5927\u4e8e\u94fe\u8868\uff1b\u7531\u4e0a\u53ef\u77e5\uff0cbin\u4e2d\u5143\u7d20\u4e3a8\u65f6\uff0c\u53d1\u751f\u51b2\u7a81\u7684\u6982\u7387\u6781\u4f4e\uff0c \u56e0\u6b64\u5f53bin\u4e2d\u5143\u7d20\u5c0f\u4e8e8\u65f6\uff0c\u4f7f\u7528\u94fe\u8868\u662f\u6bd4\u8f83\u5408\u9002\u7684\uff1b\u5f53\u63d2\u5165\u65b0\u5143\u7d20\u540e\uff0cbinCount\u5927\u4e8e\u7b49\u4e8e8\u4e2a\u5143\u7d20\u65f6(\u5373\u6b64\u65f6binCount=7)\uff0c \u8f6c\u4e3a\u7ea2\u9ed1\u6811\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6709\u6bd4\u8f83\u597d\u7684\u67e5\u627e\u6027\u80fd\uff1b\u6811\u5f62\u5316\u540e\uff0c\u5f53\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u524d\uff0cbitCount\u5c0f\u4e8e\u7b49\u4e8e6\u65f6\uff0c\u53ef\u4ee5\u7531\u7ea2\u9ed1\u6811\u91cd\u65b0\u8f6c\u4e3a\u94fe\u8868\uff1b \u8bbe\u5b9a\u4e3a6\uff0c\u800c\u975e7\uff0c\u662f\u4e3a\u4e86\u907f\u514d\u9891\u7e41\u5728\u94fe\u8868\u548c\u6811\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002 \u9664TREEIFY_THRESHOLD\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u53c2\u6570MIN_TREEIFY_CAPACITY\uff0c\u53ea\u6709hash table\u7684capacity\u5927\u4e8e\u8fd9\u4e2a\u53c2\u6570\uff0c \u624d\u5141\u8bb8\u5c06\u94fe\u8868\u8f6c\u4e3a\u6811\uff0c\u5426\u5219\u6876\u5185\u5143\u7d20\u8fc7\u591a\uff0c\u5e94\u8be5\u8fdb\u884c\u6269\u5bb9\uff0c\u800c\u4e0d\u662f\u6811\u5f62\u5316\u3002 public V put(K key, V value) { return putVal(hash(key), key, value, false, true); } /** * Implements Map.put and related methods * * @param hash hash for key * @param key the key * @param value the value to put * @param onlyIfAbsent if true, don't change existing value * @param evict if false, the table is in creation mode. * @return previous value, or null if none */ final V putVal(int hash, K key, V value, boolean onlyIfAbsent, boolean evict) { Node<K,V>[] tab; Node<K,V> p; int n, i; if ((tab = table) == null || (n = tab.length) == 0) n = (tab = resize()).length; // \u5982\u679ctab\u4e0d\u4e3anull\uff0c\u4f46tab.length=0,\u5219\u9700\u8981\u6269\u5bb9 if ((p = tab[i = (n - 1) & hash]) == null) // \u63d2\u5165\u4e00\u4e2a new node tab[i] = newNode(hash, key, value, null); else { Node<K,V> e; K k; if (p.hash == hash && ((k = p.key) == key || (key != null && key.equals(k)))) e = p; // e is the first node else if (p instanceof TreeNode) e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value); else { for (int binCount = 0; ; ++binCount) { if ((e = p.next) == null) { // \u5728\u5f53\u524dbin\u7684\u94fe\u8868\u4e2d\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 p.next = newNode(hash, key, value, null); if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st treeifyBin(tab, hash); // \u63d2\u5165\u4e4b\u524dbinCount>=7\uff0c\u5219\u63d2\u5165\u65b0\u7684\u8282\u70b9\u540e\uff0c\u9700\u8981\u6811\u5f62\u5316bin break; } if (e.hash == hash && // \u627e\u5230\u5df2\u8986\u76d6\u7684\u8282\u70b9 ((k = e.key) == key || (key != null && key.equals(k)))) break; p = e; } } if (e != null) { // existing mapping for key V oldValue = e.value; // \u8986\u76d6\u8282\u70b9\u503c if (!onlyIfAbsent || oldValue == null) e.value = value; afterNodeAccess(e); // \u5728HashMap\u4e2d\u6ca1\u6709\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u7528\u4ee5LinkedHashMap\u91cd\u8f7d return oldValue; // \u8fd4\u56de\u65e7\u503c } } ++modCount; if (++size > threshold) resize(); afterNodeInsertion(evict); return null; } 5\u3001hash \u5728hashMap\u7c7b\u4e2d\u5b9a\u4e49\u4e86hash\u65b9\u6cd5 static final int hash(Object key) { int h; return (key == null) ? 0 : (h = key.hashCode()) ^ (h >>> 16); } /* \u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b h ^ (h>>>16) \u7531\u4e8e\u5728\u8ba1\u7b97 index\u65f6\u4f7f\u7528: index = hashcode & (capacity-1); \u5047\u8bbecapacity-1 \u7684\u4e8c\u8fdb\u5236\u4e3a 0b000...01111, \u800c\u4e24\u4e2a\u4e0d\u540c\u7684key\u7684hashcode\u5b83\u4eec\u7684\u533a\u522b\u5728\u4e8e\u9ad828\u4f4d\uff0c\u4f4e4\u4f4d\u662f\u76f8\u540c\u7684\uff0c \u5219\u5982\u679c\u76f4\u63a5\u8ba1\u7b97 hashcode & (capacity-1)\uff0c\u4f1a\u53d1\u751fhash\u78b0\u649e \u800c h^(h>>>16)\uff0c\u4fdd\u8bc1\u4e86h\u7684\u9ad816\u4f4d\u4e0d\u53d8\uff0c\u800c\u4f4e16\u4f4d\u548c\u9ad816\u4f4d\u8fdb\u884c\u5f02\u6216\uff0c\u76f8\u5f53\u4e8e\u5728\u4f4e16\u4f4d\u5f15\u5165\u9ad816\u4f4d\u7279\u5f81\uff0c \u8fd9\u6837\u53ef\u4ee5\u964d\u4f4e\u78b0\u649e\u51e0\u7387\u3002 */ ConcurrentHashMap jdk1.8\u4e0ejdk1.7\u4e2d\u5b9e\u73b0\u6709\u8f83\u5927\u5dee\u5f02\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u7684\u662fjdk1.8\u4e2d\u7684\u5b9e\u73b0\u3002 1\u3001\u521d\u59cb\u5316 public ConcurrentHashMap() { // \u9ed8\u8ba4table size \u4e3a16 } public ConcurrentHashMap(int initialCapacity) { if (initialCapacity < 0) throw new IllegalArgumentException(); // \u8fd9\u91cc\u4e0e1.7\u4e0d\u540c\uff0chash table\u7684capacity\u4e3a\u5927\u4e8e\u7b49\u4e8e (1.5*initialCapaccity+1)\u76842\u7684\u5e42\u6b21 // 1.7\u4e2d\uff0c\u4f20\u516532\uff0c\u5219cap=32, \u800c\u57281.8\u4e2d\uff0c\u4f20\u516532\uff0ccap=64 int cap = ((initialCapacity >= (MAXIMUM_CAPACITY >>> 1)) ? MAXIMUM_CAPACITY : tableSizeFor(initialCapacity + (initialCapacity >>> 1) + 1)); this.sizeCtl = cap; } public ConcurrentHashMap(Map<? extends K, ? extends V> m) { this.sizeCtl = DEFAULT_CAPACITY; putAll(m); } public ConcurrentHashMap(int initialCapacity, float loadFactor) { this(initialCapacity, loadFactor, 1); } 2\u3001sizeCtl sizeCtl=0\uff0c\u4ee3\u8868\u6570\u7ec4\u672a\u88ab\u521d\u59cb\u5316\uff0c\u9ed8\u8ba4\u521d\u59cb\u5bb9\u91cf\u4e3a16\uff1b sizeCtl>0\uff0c\u5982\u679c\u6570\u7ec4\u672a\u521d\u59cb\u5316\uff0c\u90a3\u4e48\u8bb0\u5f55\u6570\u7ec4\u7684\u521d\u59cb\u5bb9\u91cf\u3002\u5982\u679c\u6570\u7ec4\u5df2\u521d\u59cb\u5316\uff0c \u90a3\u4e48\u5176\u8bb0\u5f55\u6570\u7ec4\u7684\u6269\u5bb9\u9608\u503c\uff08\u6570\u7ec4\u7684\u521d\u59cb\u5bb9\u91cf * load factor\uff09\uff1b sizeCtl=-1\uff0c\u8868\u793a\u662f\u6570\u7ec4\u6b63\u5728\u89e3\u6790\u521d\u59cb\u5316\uff1b sizeCtl = -n (n>1)\uff0c\u6709\u591a\u4e2a\u7ebf\u7a0b\u6b63\u5728\u6269\u5bb9; \u5176\u4e2d\u4ee5\u4f4e16\u4f4d\u8868\u793a\u6b63\u6570m, \u8868\u793a\u6709m-1\u4e2a\u7ebf\u7a0b\u5728\u5e2e\u7740\u6269\u5bb9\uff1b \u9ad816\u4ee5\u65e0\u7b26\u53f7\u5f62\u5f0f\u5de6\u79fb16\u4f4d\uff0c\u7136\u540e\u51cf\u53bb 1 < < 15, \u5f97\u5230 numLeadingZeros, \u6269\u5bb9\u524d\u7684\u5bb9\u91cf\u5927\u5c0f\u7b49\u4e8e 2^(32-numLeadingZeros)>\u3002 \u2003 3\u3001\u6dfb\u52a0\u5143\u7d20 \u591a\u7ebf\u7a0b\u534f\u52a9\u6269\u5bb9\u7684\u64cd\u4f5c\u4f1a\u5728\u4e24\u4e2a\u5730\u65b9(*\u534f\u52a9\u6269\u5bb9)\u88ab\u89e6\u53d1\uff1a \u5f53\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u53d1\u73b0\u6dfb\u52a0\u7684\u5143\u7d20\u5bf9\u5e94\u6876\u4f4d\u4e3afwd\u8282\u70b9\uff0c\u5c31\u4f1a\u5148\u53bb\u534f\u52a9\u6269\u5bb9\uff0c\u7136\u540e\u518d\u6dfb\u52a0\u5143\u7d20 \u5f53\u6dfb\u52a0\u5b8c\u5143\u7d20\u540e\uff0c\u5224\u65ad\u5f53\u524d\u5143\u7d20\u4e2a\u6570\u8fbe\u5230\u4e86\u6269\u5bb9\u9608\u503c\uff0c\u6b64\u65f6\u53d1\u73b0sizeCtl\u7684\u503c\u5c0f\u4e8e0\uff0c\u5e76\u4e14\u65b0\u6570\u7ec4\u4e0d\u4e3a\u7a7a\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u4f1a\u53bb\u534f\u52a9\u6269\u5bb9\u3002 public V put(K key, V value) { return putVal(key, value, false); } /** Implementation for put and putIfAbsent */ final V putVal(K key, V value, boolean onlyIfAbsent) { if (key == null || value == null) throw new NullPointerException(); int hash = spread(key.hashCode()); int binCount = 0; for (Node<K,V>[] tab = table;;) { Node<K,V> f; int n, i, fh; if (tab == null || (n = tab.length) == 0) tab = initTable(); else if ((f = tabAt(tab, i = (n - 1) & hash)) == null) { if (casTabAt(tab, i, null, new Node<K,V>(hash, key, value, null))) break; // no lock when adding to empty bin } // MOVED=-1\uff0c\u5f53\u524d\u8282\u70b9hash\u503c=-1\uff0c\u4ee3\u8868\u662fforward\u8282\u70b9\uff0c\u8bf4\u660e\u8282\u70b9\u5df2\u7ecf\u88ab\u8fc1\u79fb\u5230\u65b0table\uff0c // \u5373\u6709\u7ebf\u7a0b\u5728\u5bf9\u5f53\u524dtable\u8fdb\u884c\u6269\u5bb9\uff0c\u4e8e\u662f\u5f53\u524d\u7ebf\u7a0b\u4f1a\u8fdb\u884c\u534f\u52a9\u6269\u5bb9 else if ((fh = f.hash) == MOVED) tab = helpTransfer(tab, f); // *\u534f\u52a9\u6269\u5bb9 else { V oldVal = null; synchronized (f) {// \u9501\u4f4f\u5f53\u524dbin\u4e2d\u7684\u5934\u8282\u70b9\uff0c\u4fdd\u8bc1\u5f53\u524d\u7ebf\u7a0b\u7684\u63d2\u5165\u5b89\u5168\uff1b\u540c\u65f6\u4e0d\u5f71\u54cd\u5176\u4ed6bin\u7684\u63d2\u5165 // \u8fd9\u91cc\u518d\u6b21\u8fdb\u884c\u5224\u65ad\uff0c\u662f\u4e3a\u4e86\u9632\u6b62\u591a\u7ebf\u7a0b\u540c\u65f6\u5728\u4e00\u4e2abin\u4e2d\u63d2\u5165\u5143\u7d20\u65f6\uff0c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u63d2\u5165\u5bfc\u81f4 // bin\u6811\u5f62\u5316\u6216\u8005\u6574\u4e2atable\u8fdb\u884c\u6269\u5bb9\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6301\u6709\u7684f\u4f4d\u7f6e\u53d1\u751f\u53d8\u5316 if (tabAt(tab, i) == f) { if (fh >= 0) { binCount = 1; // \u904d\u5386\u94fe\u8868\uff0c\u627e\u5230\u63d2\u5165\u4f4d\u7f6e for (Node<K,V> e = f;; ++binCount) { K ek; if (e.hash == hash && ((ek = e.key) == key || (ek != null && key.equals(ek)))) { oldVal = e.val; if (!onlyIfAbsent) e.val = value; break; } Node<K,V> pred = e; if ((e = e.next) == null) { //\u5728\u94fe\u8868\u5c3e\u90e8\u63d2\u5165\u4e00\u4e2a\u65b0\u8282\u70b9 pred.next = new Node<K,V>(hash, key, value, null); break; } } } else if (f instanceof TreeBin) { Node<K,V> p; binCount = 2; if ((p = ((TreeBin<K,V>)f).putTreeVal(hash, key, value)) != null) { oldVal = p.val; if (!onlyIfAbsent) p.val = value; } } } } if (binCount != 0) { if (binCount >= TREEIFY_THRESHOLD) treeifyBin(tab, i); if (oldVal != null) return oldVal; break; } } } // \u7ef4\u62a4hash table\u4e2dkey-value\u4e2a\u6570\uff0c\u540c\u65f6\u5224\u65ad\u662f\u5426\u8d85\u8fc7\u6269\u5bb9\u9608\u503c\uff0c\u9700\u8981\u6269\u5bb9 addCount(1L, binCount); return null; } static final int spread(int h) { return (h ^ (h >>> 16)) & HASH_BITS; /* HASH_BITS = 0X7FFFFFFF spread\u4f5c\u7528\u548chashMap\u4e2d\u7684hash()\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u5728\u4f4e16\u4f4d\u5f15\u5165\u9ad8\u4f4d\u7279\u5f81\uff0c\u964d\u4f4e\u8ba1\u7b97index\u65f6\u78b0\u649e\u51e0\u7387; \u4e0e\u4e0a HASH_BITS\uff0c\u5219\u4fdd\u8bc1\u8fd4\u56de\u503c\u4e00\u5b9a\u662f\u4e00\u4e2a\u975e\u8d1f\u6570 */ } /** * Initializes table, using the size recorded in sizeCtl. */ private final Node<K,V>[] initTable() { Node<K,V>[] tab; int sc; while ((tab = table) == null || tab.length == 0) { if ((sc = sizeCtl) < 0) // \u8bf4\u660e\u6709\u7ebf\u7a0b\u5728\u8fdb\u884c\u521d\u59cb\u5316 table,\u56e0\u6b64\u5f53\u524d\u7ebf\u7a0b\u9700\u8981\u8ba9\u51faCPU Thread.yield(); // lost initialization race; just spin else if (U.compareAndSwapInt(this, SIZECTL, sc, -1)) { try { // \u8fd9\u91cc\u518d\u6b21\u5224\u65ad\uff0c\u662f\u8fdb\u884c\u53cc\u91cd\u68c0\u6d4b\uff0c\u9632\u6b62\u5176\u4ed6\u7ebf\u7a0b\u8fdb\u884c\u91cd\u590d\u521d\u59cb\u5316 if ((tab = table) == null || tab.length == 0) { int n = (sc > 0) ? sc : DEFAULT_CAPACITY; @SuppressWarnings(\"unchecked\") Node<K,V>[] nt = (Node<K,V>[])new Node<?,?>[n]; table = tab = nt; sc = n - (n >>> 2); // sc = n-n/4 = 3n/4 = n*0.75, \u4ee3\u8868\u6269\u5bb9\u9608\u503c } } finally { sizeCtl = sc; // \u5b8c\u6210\u521d\u59cb\u5316\u540e\uff0csizeCtl\u4ee3\u8868\u7684\u662f\u6269\u5bb9\u9608\u503c } break; } } return tab; } private final void addCount(long x, int check) {// \u4f20\u5165\u7684check\u662fbin\u4e2d\u7d2f\u52a0\u6b21\u6570 CounterCell[] as; long b, s; //\u5f53CounterCell\u6570\u7ec4\u4e0d\u4e3a\u7a7a\uff0c\u5219\u4f18\u5148\u5229\u7528\u6570\u7ec4\u4e2d\u7684CounterCell\u8bb0\u5f55\u6570\u91cf //\u5f53 baseCount\u901a\u8fc7CAS\u5b9e\u73b0\u7d2f\u52a0\u64cd\u4f5c\u6210\u529f\uff0c\u5219\u76f4\u63a5\u7ed3\u675f\uff1b\u5426\u5219\u5229\u7528\u6570\u7ec4\u4e2d\u7684CounterCell\u8bb0\u5f55\u6570\u91cf if ((as = counterCells) != null || !U.compareAndSwapLong(this, BASECOUNT, b = baseCount, s = b + x)) { CounterCell a; long v; int m; //\u6807\u8bc6\u662f\u5426\u6709\u591a\u7ebf\u7a0b\u7ade\u4e89 boolean uncontended = true; //\u5f53as\u6570\u7ec4\u4e3a\u7a7a //\u6216\u8005\u5f53as\u957f\u5ea6\u4e3a0 //\u6216\u8005\u5f53\u524d\u7ebf\u7a0b\u5bf9\u5e94\u7684as\u6570\u7ec4\u6876\u4f4d\u7684\u5143\u7d20\u4e3a\u7a7a //\u6216\u8005\u5f53\u524d\u7ebf\u7a0b\u5bf9\u5e94\u7684as\u6570\u7ec4\u6876\u4f4d\u4e0d\u4e3a\u7a7a\uff0c\u4f46\u662f\u7d2f\u52a0\u5931\u8d25 if (as == null || (m = as.length - 1) < 0 || (a = as[ThreadLocalRandom.getProbe() & m]) == null || !(uncontended = U.compareAndSwapLong(a, CELLVALUE, v = a.value, v + x))) { //\u4ee5\u4e0a\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\u6210\u7acb\uff0c\u90fd\u4f1a\u8fdb\u5165\u8be5\u65b9\u6cd5\uff0c\u4f20\u5165\u7684uncontended\u662ffalse fullAddCount(x, uncontended); return; } if (check <= 1) // \u4f20\u5165\u7684check>=0\uff0c\u5982\u679ccheck=0,\u8bf4\u660e\u63d2\u5165\u5143\u7d20\u65f6\uff0c\u76f4\u63a5\u5728\u7a7a\u7684bin\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u8282\u70b9 // check=1,\u8bf4\u660ebin\u4e2d\u5934\u8282\u70b9\u7684\u503c\u88ab\u8986\u76d6\u4e86\uff1b\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u4e0d\u5fc5\u5224\u65ad\u662f\u5426\u9700\u8981\u6269\u5bb9 return; //\u8ba1\u7b97\u5143\u7d20\u4e2a\u6570 s = sumCount(); } if (check >= 0) { Node<K,V>[] tab, nt; int n, sc; //\u5f53\u5143\u7d20\u4e2a\u6570\u8fbe\u5230\u6269\u5bb9\u9608\u503c //\u5e76\u4e14\u6570\u7ec4\u4e0d\u4e3a\u7a7a //\u5e76\u4e14\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8e\u9650\u5b9a\u7684\u6700\u5927\u503c //\u6ee1\u8db3\u4ee5\u4e0a\u6240\u6709\u6761\u4ef6\uff0c\u6267\u884c\u6269\u5bb9 while (s >= (long)(sc = sizeCtl) && (tab = table) != null && (n = tab.length) < MAXIMUM_CAPACITY) { //\u8fd9\u4e2a\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6b63\u6570 int rs = resizeStamp(n); // rs = (n\u7684\u524d\u5bfc0\u4e2a\u6570) | (1<< 15) // \u7b2c\u4e00\u6b21sc\u4ee3\u8868\u6269\u5bb9\u9608\u503c\u5927\u4e8e0 // \u5f53sc\u5c0f\u4e8e0\uff0c\u8bf4\u660e\u6709\u7ebf\u7a0b\u6b63\u5728\u6269\u5bb9\uff0c\u90a3\u4e48\u4f1a\u534f\u52a9\u6269\u5bb9 if (sc < 0) { //\u6269\u5bb9\u7ed3\u675f\u6216\u8005\u6269\u5bb9\u7ebf\u7a0b\u6570\u8fbe\u5230\u6700\u5927\u503c\u6216\u8005\u6269\u5bb9\u540e\u7684\u6570\u7ec4\u4e3anull\u6216\u8005\u6ca1\u6709\u66f4\u591a\u7684\u6876\u4f4d\u9700\u8981\u8f6c\u79fb\uff0c\u7ed3\u675f\u64cd\u4f5c if ((sc >>> RESIZE_STAMP_SHIFT) != rs || sc == rs + 1 || sc == rs + MAX_RESIZERS || (nt = nextTable) == null || transferIndex <= 0) break; //\u6269\u5bb9\u7ebf\u7a0b\u6570\u52a01\uff0c\u6210\u529f\u540e\uff0c\u8fdb\u884c\u534f\u52a9\u6269\u5bb9\u64cd\u4f5c if (U.compareAndSwapInt(this, SIZECTL, sc, sc + 1)) //\u534f\u52a9\u6269\u5bb9\uff0cnewTable\u4e0d\u4e3anull transfer(tab, nt); // *\u534f\u52a9\u6269\u5bb9 } //\u6ca1\u6709\u5176\u4ed6\u7ebf\u7a0b\u5728\u8fdb\u884c\u6269\u5bb9\uff0c\u8fbe\u5230\u6269\u5bb9\u9608\u503c\u540e\uff0c\u7ed9sizeCtl\u8d4b\u4e86\u4e00\u4e2a\u5f88\u5927\u7684\u8d1f\u6570 //rs << RESIZE_STAMP_SHIFT\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u8d1f\u6570 // rs\u7684\u7b2c15\u4f4d\u4e00\u5b9a\u4e3a1\uff0crs\u518d\u5411\u5de6\u79fb\u52a816\u4f4d\uff0c\u5219\u6700\u9ad8\u4f4d\u4e3a1\uff0c\u6b64\u65f6rs\u53d8\u4e3a\u8d1f\u6570 // \u901a\u8fc7CAS\u64cd\u4f5c\u5c06\u65b0\u503c\u8d4b\u7ed9sizeCtl else if (U.compareAndSwapInt(this, SIZECTL, sc, (rs << RESIZE_STAMP_SHIFT) + 2)) //\u6269\u5bb9\uff0cnewTable\u4e3anull transfer(tab, null); s = sumCount(); } } } private final void fullAddCount(long x, boolean wasUncontended) { // \u7531\u4e8eaddCount\u4e2d\u81ea\u65cb\u7d2f\u52a0\u5931\u8d25\u800c\u8c03\u7528fullAddCount\u65b9\u6cd5\uff0c\u4f20\u5165wasUncontended=false; // \u5426\u5219\u4f20\u5165\u7684\u4e3atrue int h; //\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u7684hash\u503c\uff0c\u7528\u4e8e\u8ba1\u7b97\u6570\u7ec4\u4e0b\u6807 if ((h = ThreadLocalRandom.getProbe()) == 0) { * ThreadLocalRandom.localInit(); // force initialization h = ThreadLocalRandom.getProbe(); wasUncontended = true; } //\u6807\u8bc6\u662f\u5426\u6709\u51b2\u7a81\uff0c\u5982\u679c\u6700\u540e\u4e00\u4e2a\u6876\u4e0d\u662fnull\uff0c\u90a3\u4e48\u4e3atrue boolean collide = false; // True if last slot nonempty for (;;) { CounterCell[] as; CounterCell a; int n; long v; // \u6570\u7ec4\u4e0d\u4e3a\u7a7a\uff0c\u4f18\u5148\u5bf9\u6570\u7ec4\u4e2dCouterCell\u7684value\u7d2f\u52a0 // \u7b2c\u4e00\u6b21\u6267\u884c\u8be5\u65b9\u6cd5\u65f6\uff0c\u4e0d\u4f1a\u8fdb\u5165\uff0c\u800c\u662f\u4f1a\u5148\u8fdb\u884c\u6570\u7ec4\u7684\u521b\u5efa\uff1b\u6b64\u540e\u518d\u6b21\u6267\u884c\u65f6\uff0c\u4f1a\u8fdb\u5165 if ((as = counterCells) != null && (n = as.length) > 0) { //\u7ebf\u7a0b\u5bf9\u5e94\u7684\u6876\u4f4d\u4e3anull\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u76f4\u63a5\u5728\u8be5\u4f4d\u7f6e\u521b\u5efa\u4e00\u4e2aCounterCell\u5bf9\u8c61 //\u5426\u5219\u4f1a\u8ba1\u7b97\u4e00\u4e2a\u65b0\u4f4d\u7f6e\uff0c\u518d\u5c1d\u8bd5 if ((a = as[(n - 1) & h]) == null) { ** if (cellsBusy == 0) { // Try to attach new Cell //\u521b\u5efaCounterCell\u5bf9\u8c61 CounterCell r = new CounterCell(x); // Optimistic create //\u5229\u7528CAS\u4fee\u6539cellBusy\u72b6\u6001\u4e3a1\uff0c\u6210\u529f\u5219\u5c06\u521a\u624d\u521b\u5efa\u7684CounterCell\u5bf9\u8c61\u653e\u5165\u6570\u7ec4\u4e2d if (cellsBusy == 0 && U.compareAndSwapInt(this, CELLSBUSY, 0, 1)) { boolean created = false; try { // Recheck under lock CounterCell[] rs; int m, j; //\u6876\u4f4d\u4e3a\u7a7a\uff0c \u5c06CounterCell\u5bf9\u8c61\u653e\u5165\u6570\u7ec4 if ((rs = counterCells) != null && (m = rs.length) > 0 && rs[j = (m - 1) & h] == null) { rs[j] = r; //\u8868\u793a\u653e\u5165\u6210\u529f created = true; } } finally { cellsBusy = 0; } if (created) //\u6210\u529f\u9000\u51fa\u5faa\u73af break; //\u6876\u4f4d\u5df2\u7ecf\u88ab\u522b\u7684\u7ebf\u7a0b\u653e\u7f6e\u4e86\u5df2\u7ed9CounterCell\u5bf9\u8c61\uff0c\u7ee7\u7eed\u5faa\u73af continue; // Slot is now non-empty } } collide = false; } // \u5982\u679c * \u5904\u5f97\u5230h\u4e0d\u4e3a0\uff0c\u5219\u6b64\u65f6\u7684h\u4e0eaddCount\u4e2d\u5c1d\u8bd5\u8fdb\u884cCAS\u7d2f\u8ba1\u524d\u8ba1\u7b97\u7684hash\u662f\u4e00\u81f4\u7684 // \u4e14 ** \u5904\u6839\u636eh\u8ba1\u7b97\u4f4d\u7f6e\u4e0a\u7684bin\u4e0d\u4e3a\u7a7a\uff0c\u56e0\u6b64\u9700\u8981\u91cd\u65b0\u8ba1\u7b97hash\u503c\uff0c // \u6b64\u65f6\u8c03\u7528\u7684\u662fThreadLocalRandom.advanceProbe(h)\uff0c\u6839\u636e\u65e7probe\u503c\u751f\u6210\u65b0\u7684probe\u503c else if (!wasUncontended) // CAS already known to fail wasUncontended = true; // Continue after rehash //\u91cd\u65b0\u8ba1\u7b97\u4e86hash\u503c\u540e\uff0c\u5bf9\u5e94\u7684\u6876\u4f4d\u4f9d\u7136\u4e0d\u4e3a\u7a7a\uff0c\u5bf9value\u7d2f\u52a0 //\u6210\u529f\u5219\u7ed3\u675f\u5faa\u73af //\u5931\u8d25\u5219\u7ee7\u7eed\u4e0b\u9762\u5224\u65ad else if (U.compareAndSwapLong(a, CELLVALUE, v = a.value, v + x)) break; //\u6570\u7ec4\u88ab\u522b\u7684\u7ebf\u7a0b\u6539\u53d8\u4e86\uff0c\u6216\u8005\u6570\u7ec4\u957f\u5ea6\u8d85\u8fc7\u4e86\u53ef\u7528cpu\u5927\u5c0f\uff0c\u91cd\u65b0\u8ba1\u7b97\u7ebf\u7a0bhash\u503c\uff0c\u5426\u5219\u7ee7\u7eed\u4e0b\u4e00\u4e2a\u5224\u65ad else if (counterCells != as || n >= NCPU) collide = false; // At max size or stale //\u5f53\u6ca1\u6709\u51b2\u7a81\uff0c\u4fee\u6539\u4e3a\u6709\u51b2\u7a81\uff0c\u5e76\u91cd\u65b0\u8ba1\u7b97\u7ebf\u7a0bhash\uff0c\u7ee7\u7eed\u5faa\u73af else if (!collide) collide = true; //\u5982\u679cCounterCell\u7684\u6570\u7ec4\u957f\u5ea6\u6ca1\u6709\u8d85\u8fc7cpu\u6838\u6570\uff0c\u5bf9\u6570\u7ec4\u8fdb\u884c\u4e24\u500d\u6269\u5bb9 //\u5e76\u7ee7\u7eed\u5faa\u73af else if (cellsBusy == 0 && U.compareAndSwapInt(this, CELLSBUSY, 0, 1)) { try { if (counterCells == as) {// Expand table unless stale CounterCell[] rs = new CounterCell[n << 1]; for (int i = 0; i < n; ++i) rs[i] = as[i]; counterCells = rs; } } finally { cellsBusy = 0; } collide = false; continue; // Retry with expanded table } h = ThreadLocalRandom.advanceProbe(h); } //CounterCell\u6570\u7ec4\u4e3a\u7a7a\uff0c\u5e76\u4e14\u6ca1\u6709\u7ebf\u7a0b\u5728\u521b\u5efa\u6570\u7ec4\uff0c\u4fee\u6539\u6807\u8bb0\uff0c\u5e76\u521b\u5efa\u6570\u7ec4 else if (cellsBusy == 0 && counterCells == as && U.compareAndSwapInt(this, CELLSBUSY, 0, 1)) { boolean init = false; try { // Initialize table if (counterCells == as) { CounterCell[] rs = new CounterCell[2]; rs[h & 1] = new CounterCell(x); counterCells = rs; init = true; } } finally { cellsBusy = 0; } if (init) break; } //\u6570\u7ec4\u4e3a\u7a7a\uff0c\u5e76\u4e14\u6709\u522b\u7684\u7ebf\u7a0b\u5728\u521b\u5efa\u6570\u7ec4\uff0c\u90a3\u4e48\u5c1d\u8bd5\u5bf9baseCount\u505a\u7d2f\u52a0\uff0c\u6210\u529f\u5c31\u9000\u51fa\u5faa\u73af\uff0c\u5931\u8d25\u5c31\u7ee7\u7eed\u5faa\u73af else if (U.compareAndSwapLong(this, BASECOUNT, v = baseCount, v + x)) break; // Fall back on using base } } // \u7edf\u8ba1\u5f53\u524dtable\u4e2dkey-value\u4e2a\u6570 final long sumCount() { CounterCell[] as = counterCells; CounterCell a; long sum = baseCount; if (as != null) { for (int i = 0; i < as.length; ++i) { if ((a = as[i]) != null) sum += a.value; } } return sum; } /** * \u6876\u6269\u5bb9 * @param tab \u539f\u6876 * @param nextTab \u534f\u52a9\u6269\u5bb9\u6876 */ private final void transfer(Node<K,V>[] tab, Node<K,V>[] nextTab) { int n = tab.length, stride; // \u5c06length/8, \u7136\u540e\u9664\u4ee5CPU\u6838\u6570\u3002\u5982\u679c\u5f97\u5230\u7684\u7ed3\u679c\u5c0f\u4e8e16, \u90a3\u4e48\u5c31\u4f7f\u752816\u3002 // \u76ee\u7684\uff1a\u8ba9\u6bcf\u4e2aCPU\u5904\u7406\u7684\u6876\u4e00\u6837\u591a, \u907f\u514d\u51fa\u73b0\u8f6c\u79fb\u4efb\u52a1\u4e0d\u5747\u5300\u7684\u73b0\u8c61\u3002 // \u5982\u679c\u6876\u8f83\u5c11\u7684\u8bdd, \u9ed8\u8ba4\u4e00\u4e2a CPU\uff08\u4e00\u4e2a\u7ebf\u7a0b\uff09\u5904\u7406 16 \u4e2a\u6876 if ((stride = (NCPU > 1) ? (n >>> 3) / NCPU : n) < MIN_TRANSFER_STRIDE) stride = MIN_TRANSFER_STRIDE; // subdivide range if (nextTab == null) { // initiating try { // \u6269\u5bb92\u500d @SuppressWarnings(\"unchecked\") Node<K,V>[] nt = (Node<K,V>[])new Node<?,?>[n << 1]; nextTab = nt; } catch (Throwable ex) { // try to cope with OOME sizeCtl = Integer.MAX_VALUE; return; } // \u4fdd\u5b58\u65b0\u8868\u5728\u6210\u5458\u53d8\u91cf\u4e2d nextTable = nextTab; // transferIndex\u5c5e\u4e8e\u6210\u5458\u53d8\u91cf\uff0ctransferIndex-1 \u4ee3\u8868\u5f53\u524d\u7ebf\u7a0b\u6269\u5bb9\u65f6\u5728\u65e7table\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u5411\u524d\u79fb\u52a8 transferIndex = n; } int nextn = nextTab.length; // \u521b\u5efa\u4e00\u4e2afwd\u8282\u70b9, \u7528\u4e8e\u5360\u4f4d\u3002 // \u5f53\u5176\u4ed6\u7ebf\u7a0b\u53d1\u73b0\u8fd9\u4e2a\u69fd\u4f4d\u4e2d\u662ffwd\u7c7b\u578b\u7684\u8282\u70b9, \u5219\u8df3\u8fc7\u8fd9\u4e2a\u8282\u70b9\u3002 ForwardingNode<K,V> fwd = new ForwardingNode<K,V>(nextTab); boolean advance = true; // \u7528\u6765\u6807\u8bb0\u662f\u5426\u5b8c\u6210\uff0c\u65b9\u4fbf\u63d0\u4ea4\u66f4\u6539 boolean finishing = false; // to ensure sweep before committing nextTab for (int i = 0, bound = 0;;) { Node<K,V> f; int fh; // \u5148\u83b7\u53d6\u9501\u5b9a\u4e00\u4e0b\u8f6c\u79fb\u6570\u636e\u8868\u7684\u7d22\u5f15\u8303\u56f4\u503cbound ~ i while (advance) { int nextIndex, nextBound; if (--i >= bound || finishing) // \u4e0d\u505c\u5f80\u524d\u79fb\u52a8\u8868\u7d22\u5f15 advance = false; else if ((nextIndex = transferIndex) <= 0) { // \u5982\u679c\u662f<= 0\uff0c\u8868\u660e\u8f6c\u79fb\u5168\u90e8\u5b8c\u6210 i = -1; advance = false; } else if (U.compareAndSwapInt (this, TRANSFERINDEX, nextIndex, nextBound = (nextIndex > stride ? nextIndex - stride : 0))) { // transferIndex\u51cf\u53bb\u6b65\u4f10stride\uff0c\u4e0b\u4e2a\u7ebf\u7a0b\u5c31\u4ece\u65b0\u7684\u7d22\u5f15\u5904nextBound\u8f6c\u79fb\u6570\u636e bound = nextBound; i = nextIndex - 1; advance = false; } } if (i < 0 || i >= n || i + n >= nextn) { int sc; if (finishing) { // \u5c06\u65b0\u8868\u66ff\u6362\u65e7\u8868 nextTable = null; table = nextTab; // \u6269\u5bb9\u5b8c\u6210\u540e\uff0c\u91cd\u65b0\u8ba1\u7b97\u6269\u5bb9\u9608\u503c // sizeCtl = 2n - n/2 = 1.5n = 2n*0.75 sizeCtl = (n << 1) - (n >>> 1); return; } // \u5f53\u524d\u7684\u7ebf\u7a0b\u5b8c\u6210\u5176\u6240\u8d1f\u8d23\u7684\u5206\u533a\u7684\u8fc1\u79fb\uff0csizeCtl = sc-1, // \u8fd9\u6837\u6b63\u5728\u8fdb\u884c\u6269\u5bb9\u7684\u7ebf\u7a0b\u6570\u5c31\u51cf\u4e00 if (U.compareAndSwapInt(this, SIZECTL, sc = sizeCtl, sc - 1)) { // \u56e0\u4e3a\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u6269\u5bb9\u65f6\uff0csc = resizeStamp(n)<< RESIZE_STAMP_SHIFT + 2 // \u56e0\u6b64\u5982\u679c sc-2 == resizeStamp(n)<< RESIZE_STAMP_SHIFT // \u8bf4\u660e\u6240\u6709\u7ebf\u7a0b\u90fd\u5b8c\u6210\u5404\u81ea\u5206\u533a\u8fc1\u79fb\uff0c\u5373\u6574\u4e2atable\u7684\u6269\u5bb9\u64cd\u4f5c\u5b8c\u6210 // \u53cd\u4e4b\uff0c\u5219\u8fd8\u6709\u7ebf\u7a0b\u672a\u5b8c\u6210\uff0c\u76f4\u63a5return if ((sc - 2) != resizeStamp(n) << RESIZE_STAMP_SHIFT) return; // \u8f6c\u79fb\u5b8c\u6210 finishing = advance = true; i = n; // recheck before commit } } else if ((f = tabAt(tab, i)) == null) // \u5982\u539f\u6765\u7684\u8868\u6ca1\u6709\u6570\u636e\uff0c\u5219\u76f4\u63a5\u8bbe\u7f6e\u4e00\u4e2a\u8f6c\u79fb\u8282\u70b9\u5230\u65e7\u8868\u4e2d advance = casTabAt(tab, i, null, fwd); else if ((fh = f.hash) == MOVED) // \u6709\u53ef\u80fd\u5176\u4ed6\u7684\u7ebf\u7a0b\u5df2\u7ecf\u5904\u7406\u8fc7 advance = true; // already processed else { // \u9501\u5b9a\u8868\u4e2d\u5bf9\u5e94\u6876\uff0c\u7136\u540e\u8fdb\u884c\u6570\u636e\u8f6c\u79fb\uff0c\u5143\u7d20\u8981\u4e0d\u8fd8\u5728\u539f\u6765i\u5bf9\u5e94\u7684\u4f4e\u4f4d\u6876\uff0c\u8981\u4e0d\u5c31\u5728\u9ad8\u4f4d(i+n)\u5bf9\u5e94\u6876 synchronized (f) { if (tabAt(tab, i) == f) { // \u4e8c\u6b21\u786e\u8ba4\uff0c\u9632\u6b62\u88ab\u5176\u4ed6\u7ebf\u7a0b\u62a2 Node<K,V> ln, hn; if (fh >= 0) { // hash\u503c\u5927\u4e8e0\uff0c\u666e\u901a\u7684\u94fe\u8868 /* f 1 2 3 4 5 6 0 x 0 x x x x (x>0) \u5047\u8bbe\u7b2c\u4e8c\u5217\u4ee3\u8868\u76f8\u5e94\u8282\u70b9hash & n\u7684\u7ed3\u679c \u5219 =0\u7684\u8282\u70b9\u5728\u65b0table\u4e2d\u4f9d\u65e7\u4f4d\u4e8ei\u4f4d\u7f6e\uff0c=x\u7684\u8282\u70b9\u5728\u65b0table\u4e2d\u4f4d\u7f6e\u5219\u4f4d\u4e8ei+n 4\u53f7\u8282\u70b9\u5373\u662flastRun,\u56e0\u4e3a\u5176\u540e\u7684\u6240\u6709\u8282\u70b9\u7684hash\u503c\u90fd\u4e3ax\uff0c\u8fd9\u6837\u53ef\u4ee5\u76f4\u63a5\u5c06 4\u53f7\u8282\u70b9\u5373\u4e4b\u540e\u7684\u6240\u6709\u8282\u70b9\u90fd\u8fc1\u79fb\u5230\u65b0table\u4e2di+n\u4f4d\u7f6e\uff0c\u76f8\u6bd4\u6bcf\u4e2a\u8282\u70b9\u90fd\u8981\u5224\u65ad\u4e00\u6b21\uff0c\u51cf\u5c11\u4e86\u8fc1\u79fb\u6b21\u6570 */ int runBit = fh & n; Node<K,V> lastRun = f; for (Node<K,V> p = f.next; p != null; p = p.next) { int b = p.hash & n; if (b != runBit) { runBit = b; lastRun = p; } } if (runBit == 0) {//\u8bf4\u660e\u540e\u9762\u4e00\u6279\u8282\u70b9\u7684 hash&n \u7684\u7ed3\u679c\u90fd\u4e3a0 ln = lastRun; hn = null; } else { //\u8bf4\u660e\u540e\u9762\u4e00\u6279\u8282\u70b9\u7684 hash&n \u7684\u7ed3\u679c\u90fd\u4e3ax hn = lastRun; ln = null; } // \u91cd\u65b0\u5efa\u7acb\u65b0\u94fe\u8868 for (Node<K,V> p = f; p != lastRun; p = p.next) { // \u904d\u5386\u5230lastRun\u5373\u53ef\uff0c\u540e\u9762\u7684\u8282\u70b9\u4e00\u5b9a\u548clastRun\u5904\u4e8e\u540c\u4e00\u4e2a\u94fe\u8868\u4e2d int ph = p.hash; K pk = p.key; V pv = p.val; if ((ph & n) == 0) ln = new Node<K,V>(ph, pk, pv, ln); // (cur:key-value) -> ln, \u7136\u540e ln = cur else hn = new Node<K,V>(ph, pk, pv, hn); // (cur2:key-value) -> hn, \u7136\u540e hn = cur2 } // \u8bbe\u7f6e\u65b0\u8868\u4f4e\u4f4d\u3001\u9ad8\u4f4d\u7684\u5934\uff0c\u5e76\u5c06\u539f\u6765\u7684\u8282\u70b9\u8bbe\u7f6e\u4e3a\u8f6c\u79fb\u8282\u70b9 setTabAt(nextTab, i, ln); setTabAt(nextTab, i + n, hn); setTabAt(tab, i, fwd); advance = true; } else if (f instanceof TreeBin) { // \u4e8c\u53c9\u6811 TreeBin<K,V> t = (TreeBin<K,V>)f; TreeNode<K,V> lo = null, loTail = null; TreeNode<K,V> hi = null, hiTail = null; int lc = 0, hc = 0; // \u5c06\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u5206\u6210\u4f4e\u4f4d\u5143\u7d20\u548c\u9ad8\u4f4d\u5143\u7d20\u94fe\u8868 for (Node<K,V> e = t.first; e != null; e = e.next) { int h = e.hash; TreeNode<K,V> p = new TreeNode<K,V> (h, e.key, e.val, null, null); if ((h & n) == 0) { // \u4f4e\u4f4d\u5143\u7d20 if ((p.prev = loTail) == null) lo = p; else loTail.next = p; loTail = p; ++lc; } else { // \u9ad8\u4f4d\u5143\u7d20 if ((p.prev = hiTail) == null) hi = p; else hiTail.next = p; hiTail = p; ++hc; } } // \u5982\u679c\u5143\u7d20\u94fe\u8868\u6570\u91cf\u5c0f\u4e8e6\uff0c\u5219\u9000\u5316\u6210\u94fe\u8868\uff0c\u5426\u5219\u5c31\u751f\u4ea7\u4e8c\u53c9\u6811 ln = (lc <= UNTREEIFY_THRESHOLD) ? untreeify(lo) : (hc != 0) ? new TreeBin<K,V>(lo) : t; hn = (hc <= UNTREEIFY_THRESHOLD) ? untreeify(hi) : (lc != 0) ? new TreeBin<K,V>(hi) : t; // \u8bbe\u7f6e\u65b0\u8868\u7684\u5934\uff0c\u5e76\u4e14\u5c06\u65e7\u8868\u8bbe\u7f6e\u4e3a\u8f6c\u79fb\u8282\u70b9 setTabAt(nextTab, i, ln); setTabAt(nextTab, i + n, hn); setTabAt(tab, i, fwd); advance = true; } } } } } } final Node<K,V>[] helpTransfer(Node<K,V>[] tab, Node<K,V> f) { Node<K,V>[] nextTab; int sc; if (tab != null && (f instanceof ForwardingNode) && (nextTab = ((ForwardingNode<K,V>)f).nextTable) != null) { int rs = resizeStamp(tab.length); while (nextTab == nextTable && table == tab && (sc = sizeCtl) < 0) { if ((sc >>> RESIZE_STAMP_SHIFT) != rs || sc == rs + 1 || sc == rs + MAX_RESIZERS || transferIndex <= 0) break; // \u5c1d\u8bd5\u7ed9sizeCtl\u8d4b\u65b0\u503c\uff0c\u5176\u7ed3\u679c\u7684\u4f4e16\u4f4d\u4f1a\u52a01\uff0c\u8868\u660e\u6b63\u5728\u6269\u5bb9\u7684\u7ebf\u7a0b\u6570+1 if (U.compareAndSwapInt(this, SIZECTL, sc, sc + 1)) { transfer(tab, nextTab); break; } } return nextTab; } return table; } ThreadPoolExecutor run state // \u8fd9\u91cc\u8bbe\u7f6ectl\u7c7b\u578b\u4e3aAtomicInteger\uff0c\u5176\u5185\u90e8\u57fa\u4e8eCAS+volatile\u5b9e\u73b0\uff0cCAS\u4fdd\u8bc1\u539f\u5b50\u6027\uff0cvolatile\u4fdd\u8bc1\u53ef\u89c1\u6027 // \u56e0\u4e3a\u72b6\u6001\u7684\u8bbf\u95ee\u7c7b\u578b\u662f\u8bfb\u591a\u5199\u5c11\uff0c\u91c7\u7528CAS+volatile\u8981\u6bd4synchronized\u5f00\u9500\u66f4\u5c11; // \u7531\u4e8eCAS\u53ea\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u53d8\u91cf\u8bfb\u5199\u7684\u539f\u5b50\u6027\uff0c\u56e0\u6b64\u8fd9\u91cc\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u8868\u793a\u4e24\u79cd\u5171\u4eab\u7279\u5f81(\u8fd0\u884c\u72b6\u6001\u548c\u7ebf\u7a0b\u6570\u91cf) private final AtomicInteger ctl = new AtomicInteger(ctlOf(RUNNING, 0)); private static final int COUNT_BITS = Integer.SIZE - 3; private static final int CAPACITY = (1 << COUNT_BITS) - 1; // runState is stored in the high-order bits private static final int RUNNING = -1 << COUNT_BITS; private static final int SHUTDOWN = 0 << COUNT_BITS; private static final int STOP = 1 << COUNT_BITS; private static final int TIDYING = 2 << COUNT_BITS; private static final int TERMINATED = 3 << COUNT_BITS; // Packing and unpacking ctl private static int runStateOf(int c) { return c & ~CAPACITY; } private static int workerCountOf(int c) { return c & CAPACITY; } private static int ctlOf(int rs, int wc) { return rs | wc; } execute public void execute(Runnable command) { if (command == null) throw new NullPointerException(); /* * Proceed in 3 steps: * * 1. If fewer than corePoolSize threads are running, try to * start a new thread with the given command as its first * task. The call to addWorker atomically checks runState and * workerCount, and so prevents false alarms that would add * threads when it shouldn't, by returning false. * * 2. If a task can be successfully queued, then we still need * to double-check whether we should have added a thread * (because existing ones died since last checking) or that * the pool shut down since entry into this method. So we * recheck state and if necessary roll back the enqueuing if * stopped, or start a new thread if there are none. * * 3. If we cannot queue task, then we try to add a new * thread. If it fails, we know we are shut down or saturated * and so reject the task. */ int c = ctl.get(); if (workerCountOf(c) < corePoolSize) { if (addWorker(command, true)) // \u8fd9\u91cc\u628a\u7ebf\u7a0b\u6c60\u72b6\u6001\u68c0\u6d4b\u7559\u5728addWorker\u65b9\u6cd5\u91cc\u8fdb\u884c return; // \u8bf4\u660e\u521b\u5efa\u6838\u5fc3\u7ebf\u7a0b\u5931\u8d25 c = ctl.get(); } if (isRunning(c) && workQueue.offer(command)) {//offer\u5c1d\u8bd5\u6dfb\u52a0\u5143\u7d20\uff0c\u82e5\u961f\u5217\u5df2\u6ee1\uff0c\u8fd4\u56defalse int recheck = ctl.get(); // \u5982\u679c\u7ebf\u7a0b\u6c60\u72b6\u6001\u4e0d\u4e3aRUNNING\uff0c\u4e14\u4eceworkQueue\u4e2d\u6210\u529f\u5220\u9664command // remove\u65b9\u6cd5\u4e2d\u4f1a\u8c03\u7528tryTerminate()\u65b9\u6cd5 if (! isRunning(recheck) && remove(command)) reject(command); else if (workerCountOf(recheck) == 0) // \u5f53\u524d\u5de5\u4f5c\u7ebf\u7a0b\u6570\u91cf\u4e3a0 addWorker(null, false); // \u521b\u5efa\u4e00\u4e2a\u975e\u6838\u5fc3\u7ebf\u7a0b } else if (!addWorker(command, false)) // \u521b\u5efa\u4e00\u4e2a\u975e\u6838\u5fc3\u7ebf\u7a0b\u5931\u8d25\uff0c\u5219\u8c03\u7528reject reject(command); } /* firstTask\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u65b0\u589e\u7684\u7ebf\u7a0b\u6267\u884c\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\uff0c\u8be5\u53c2\u6570\u53ef\u4ee5\u4e3a\u7a7a\uff1b core\u53c2\u6570\u4e3atrue\u8868\u793a\u5728\u65b0\u589e\u7ebf\u7a0b\u65f6\u4f7f\u7528corePoolSize\u4f5c\u4e3a\u7ebf\u7a0b\u6c60\u5bb9\u91cf\u8fb9\u754c\uff0c false\u8868\u793a\u4f7f\u7528maximumPoolSize\u4f5c\u4e3a\u8fb9\u754c */ private boolean addWorker(Runnable firstTask, boolean core) { retry: for (;;) { int c = ctl.get(); int rs = runStateOf(c); // Check if queue empty only if necessary. /* \u5982\u679c\u7ebf\u7a0b\u6c60\u72b6\u6001\u4e0d\u4e3aRUNNING\uff0c\u4e14\u6ee1\u8db3\u4e0b\u9762\u4efb\u610f\u4e00\u4e2a\u6761\u4ef6: \u7ebf\u7a0b\u6c60\u72b6\u6001==SHUTDOWN\uff1bfirstTask\u4e3a\u7a7a\uff1b\u5b58\u50a8\u4efb\u52a1\u7684workQueue\u4e3a\u7a7a \u5219\u8fd4\u56defalse, \u8868\u793a\u6dfb\u52a0\u5de5\u4f5c\u7ebf\u7a0b\u5931\u8d25 */ if (rs >= SHUTDOWN && ! (rs == SHUTDOWN && firstTask == null && ! workQueue.isEmpty())) return false; for (;;) { int wc = workerCountOf(c); // \u68c0\u67e5\u5de5\u4f5c\u7ebf\u7a0b\u6570\u91cf\u662f\u5426\u8d85\u8fc7\u6700\u5927\u5bb9\u91cf\uff0c\u6216\u8005\u8d85\u8fc7\u8bbe\u5b9a\u7684\u8fb9\u754c if (wc >= CAPACITY || wc >= (core ? corePoolSize : maximumPoolSize)) return false; // \u5229\u7528CAS\u589e\u52a0work thread\u6570\u91cf if (compareAndIncrementWorkerCount(c)) break retry; c = ctl.get(); // Re-read ctl if (runStateOf(c) != rs) // \u6765\u5230\u8fd9\u4e00\u6b65\u8bf4\u660ecas\u5931\u8d25\uff0c continue retry; // \u5982\u679c\u6b64\u65f6\u8fd0\u884c\u72b6\u6001\u4e0e\u4e4b\u524d\u4e0d\u540c\uff0c\u4e0d\u518d\u662fRUNNING // else CAS failed due to workerCount change; retry inner loop } } boolean workerStarted = false; // \u7ebf\u7a0b\u662f\u5426\u6210\u529f\u542f\u52a8\u6807\u5fd7 boolean workerAdded = false; // \u7ebf\u7a0b\u662f\u5426\u6210\u529f\u6dfb\u52a0\u5230hashSet\u4e2d\u7684\u6807\u5fd7 Worker w = null; // Worker\u662fThreadPoolExecutor\u4e2d\u7684\u79c1\u6709\u5185\u90e8\u7c7b\uff0c\u7ee7\u627f\u4e86AQS\uff0c\u5b9e\u73b0\u4e86Runnable try { /* \u5728Worker\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u5c06firstTask\u8d4b\u503c\u7ed9\u5176firstTask\u5b57\u6bb5\uff1b \u8c03\u7528threadFactory\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\u8d4b\u503c\u7ed9\u5176thread\u5b57\u6bb5\uff0c\u540c\u65f6\u5c06\u5f53\u524dWorker\u5bf9\u8c61\u4f20\u9012\u7ed9\u8be5thread\uff1b */ w = new Worker(firstTask); final Thread t = w.thread; if (t != null) { final ReentrantLock mainLock = this.mainLock; mainLock.lock(); // \u8fd9\u91cc\u4e0a\u9501\u662f\u56e0\u4e3a\u4e0b\u9762\u4ee3\u7801\u5757\u4f1a\u4fee\u6539hashSet\u5bf9\u8c61 workers // \u800chashSet\u7c7b\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684 try { // Recheck while holding lock. // Back out on ThreadFactory failure or if // shut down before lock acquired. int rs = runStateOf(ctl.get()); /* \u5f53\u524drs=RUNNING,\u6216\u8005rs=SHUTDOWN,\u4e14firstTask=null \u610f\u5473\u7740\u8981\u4eceworkQueue\u4e2d\u53d6\u51fa\u4efb\u52a1 */ if (rs < SHUTDOWN || (rs == SHUTDOWN && firstTask == null)) { if (t.isAlive()) // precheck that t is startable throw new IllegalThreadStateException(); workers.add(w); // workers\u662f\u4e00\u4e2ahashSet int s = workers.size(); // largeestPoolSize\u5b57\u6bb5\u8bb0\u5f55\u7684\u662f\u7ebf\u7a0b\u6c60\u4e2d\u51fa\u73b0\u8fc7\u7684\u6700\u591a\u7684\u7ebf\u7a0b\u6570\u91cf if (s > largestPoolSize) largestPoolSize = s; workerAdded = true; } } finally { mainLock.unlock(); } if (workerAdded) { t.start(); // \u7ebf\u7a0b\u521b\u5efa\u6210\u529f\uff0c\u542f\u52a8\u7ebf\u7a0b\uff0c\u4f1a\u8c03\u7528w\u7684run()\u65b9\u6cd5\uff0c\u5176\u4e2d\u53c8\u4f1a\u8c03\u7528\u5916\u90e8\u7684runWorker\u65b9\u6cd5 workerStarted = true; } } } finally { if (! workerStarted) // \u7ebf\u7a0b\u542f\u52a8\u5931\u8d25 addWorkerFailed(w); } return workerStarted; } final void runWorker(Worker w) { Thread wt = Thread.currentThread(); Runnable task = w.firstTask; w.firstTask = null; w.unlock(); // allow interrupts boolean completedAbruptly = true; try { while (task != null || (task = getTask()) != null) { w.lock(); // If pool is stopping, ensure thread is interrupted; // if not, ensure thread is not interrupted. This // requires a recheck in second case to deal with // shutdownNow race while clearing interrupt if ((runStateAtLeast(ctl.get(), STOP) || // \u5224\u65ad\u7ebf\u7a0b\u6c60run state (Thread.interrupted() && // \u68c0\u67e5\u5f53\u524d\u7ebf\u7a0b\u662f\u5426\u4e2d\u65ad\uff0c\u6e05\u9664\u4e2d\u65ad\u6807\u5fd7 runStateAtLeast(ctl.get(), STOP))) && //\u5224\u65ad\u7ebf\u7a0b\u6c60run state !wt.isInterrupted()) //\u5230\u6b64\u8bf4\u660e\u5f53\u524d\u8c03\u7528\u8005\u7ebf\u7a0b\u88ab\u4e2d\u65ad\uff0c\u7ebf\u7a0b\u6c60\u5904\u4e8eSTOP wt.interrupt(); // \u786e\u4fdd\u5de5\u4f5c\u7ebf\u7a0b\u88ab\u4e2d\u65ad try { beforeExecute(wt, task); // \u7531user\u91cd\u5199 Throwable thrown = null; try { task.run(); } catch (RuntimeException x) { thrown = x; throw x; } catch (Error x) { thrown = x; throw x; } catch (Throwable x) { thrown = x; throw new Error(x); } finally { afterExecute(task, thrown); } } finally { task = null; w.completedTasks++; w.unlock(); } } completedAbruptly = false; //\u8bf4\u660eworker\u6b63\u5e38\u6267\u884c\u5b8c\u4efb\u52a1\u9000\u51fa } finally { // \u5982\u679cfirstTask\u4e3anull,\u4e14\u4eceworkQueue\u4e2d\u83b7\u53d6\u4efb\u52a1\u5931\u8d25\uff0c\u4e5f\u8fd4\u56denull // \u5219 completedAbruptly=true, \u5219\u5728processWorkerExit\u4e2d\u4f1a\u79fb\u9664worker,\u5e76\u51cf\u5c11workerCount processWorkerExit(w, completedAbruptly); } } /** * Rolls back the worker thread creation. * - removes worker from workers, if present * - decrements worker count * - rechecks for termination, in case the existence of this * worker was holding up termination */ private void addWorkerFailed(Worker w) { final ReentrantLock mainLock = this.mainLock; mainLock.lock(); try { if (w != null) workers.remove(w); decrementWorkerCount(); tryTerminate(); // \u5f53\u51cf\u5c11\u5de5\u4f5c\u7ebf\u7a0b\u6570\u91cf\u6216\u79fb\u9664\u4efb\u52a1\u65f6\uff0c\u90fd\u4f1a\u5c1d\u8bd5\u7ec8\u7ed3\u7ebf\u7a0b\u6c60 } finally { mainLock.unlock(); } } private Runnable getTask() { boolean timedOut = false; // Did the last poll() time out? for (;;) { int c = ctl.get(); int rs = runStateOf(c); // Check if queue empty only if necessary. /* decrementWorkerCount\u4e0ecompareAndDecrementWorkerCount\u533a\u522b: \u524d\u8005\u8c03\u7528\u540e\u8005\uff0c\u5e76\u4e14\u5904\u4e8e\u81ea\u65cb\uff0c\u53ea\u6709\u540e\u8005\u8fd4\u56detrue\uff0c\u624d\u80fd\u8fd4\u56de; \u8fd9\u91cc\u5982\u679c\u7ebf\u7a0b\u6c60 run state>=SHUTDOWN, \u4e14run state>=STOP \u6216 \u4efb\u52a1\u961f\u5217\u4e3a\u7a7a\uff0c \u5219\u5bf9workCount\u51cf\u4e00\uff0c\u8fd4\u56denull */ if (rs >= SHUTDOWN && (rs >= STOP || workQueue.isEmpty())) { decrementWorkerCount(); return null; } int wc = workerCountOf(c); // Are workers subject to culling? // \u5982\u679c \u5141\u8bb8\u6838\u5fc3\u7ebf\u7a0b\u8d85\u65f6\u6216\u8005wc>\u6838\u5fc3\u7ebf\u7a0b\u6570(\u8868\u9762\u5f53\u524d\u5de5\u4f5c\u7ebf\u7a0b\u662f\u975e\u6838\u5fc3\u7ebf\u7a0b) // \u5219\u5f53\u524d\u5de5\u4f5c\u7ebf\u7a0b\u662f\u6709\u8d85\u65f6\u65f6\u95f4\u7684 boolean timed = allowCoreThreadTimeOut || wc > corePoolSize; if ((wc > maximumPoolSize || (timed && timedOut)) && (wc > 1 || workQueue.isEmpty())) { if (compareAndDecrementWorkerCount(c)) return null; continue; } try { /* \u6839\u636e\u662f\u5426\u5141\u8bb8\u8d85\u65f6\u8c03\u7528\u4e0d\u540c\u65b9\u6cd5\uff1b take\u4e3a\u4e0d\u5e26\u8d85\u65f6\u7684\u4efb\u52a1\u83b7\u53d6\u65b9\u6cd5\uff0c\u4f1a\u4e00\u76f4\u963b\u585e\u76f4\u5230\u83b7\u53d6\u4efb\u52a1 */ Runnable r = timed ? workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) : workQueue.take(); if (r != null) return r; timedOut = true; } catch (InterruptedException retry) { timedOut = false; } } } private void processWorkerExit(Worker w, boolean completedAbruptly) { if (completedAbruptly) // If abrupt, then workerCount wasn't adjusted decrementWorkerCount(); final ReentrantLock mainLock = this.mainLock; mainLock.lock(); try { completedTaskCount += w.completedTasks; workers.remove(w); } finally { mainLock.unlock(); } tryTerminate(); int c = ctl.get(); if (runStateLessThan(c, STOP)) { if (!completedAbruptly) { int min = allowCoreThreadTimeOut ? 0 : corePoolSize; if (min == 0 && ! workQueue.isEmpty()) min = 1; // \u4fdd\u8bc1\u7ebf\u7a0b\u6c60\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b if (workerCountOf(c) >= min)// \u5f53\u524d\u5de5\u4f5c\u7ebf\u7a0b\u6570\u76ee\u5927\u4e8emin return; // replacement not needed } /* \u5230\u6b64\uff0c\u8bf4\u660e\u5de5\u4f5c\u7ebf\u7a0b\u56e0\u4e3a\u5f02\u5e38\u800c\u6b7b\u4ea1\uff0c\u6216 workCount < min\uff0c \u5bf9\u4e8e\u540e\u8005: \u5982\u679callowCoreThreadTimeOut=false, \u5219min=corePoolSize\uff0c \u8bf4\u660eworkCount < corePoolSize, \u800c\u5728getTask\u4e2d\uff0c\u5728\u6ee1\u8db3\u8fd0\u884c\u72b6\u6001\u524d\u63d0\u4e0b\uff0c\u6b64\u79cd\u6761\u4ef6 \u9996\u5148\u4e0d\u4f1a\u63d0\u524d\u8fd4\u56denull\uff0c\u5e76\u4e14\u5728\u4eceworkQueue\u4e2d\u53d6\u4efb\u52a1\u65f6\uff0c\u8c03\u7528\u7684\u662ftake\u65b9\u6cd5\uff0c\u4f1a\u4e00\u76f4\u963b\u585e \u76f4\u5230\u53d6\u56de\u4efb\u52a1\uff0c\u7136\u540e\u8fd4\u56de\uff0c\u4ece\u800c\u4e0d\u4f1a\u8fdb\u5165\u5230processWorkerExit\u65b9\u6cd5\u4e2d\uff1b \u56e0\u6b64allowCoreThreadTimeOut\u4e00\u5b9a\u4e3atrue\uff0c\u8bf4\u660e\u6b64\u65f6workCount < 0 \u6216 < 1; \u6240\u4ee5\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u975e\u6838\u5fc3\u7ebf\u7a0b\u6765\u5904\u7406workQueue\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u4efb\u52a1 */ addWorker(null, false); } } \u5173\u95ed\u7ebf\u7a0b\u6c60 /** * Invokes {@code shutdown} when this executor is no longer * referenced and it has no threads. */ protected void finalize() { shutdown(); } /* \u4e0d\u518d\u63a5\u6536\u65b0\u7684\u4efb\u52a1\uff0c\u5df2\u7ecf\u63a5\u6536\u7684\u4efb\u52a1\u7ee7\u7eed\u6267\u884c */ public void shutdown() { final ReentrantLock mainLock = this.mainLock; mainLock.lock(); try { checkShutdownAccess();//\u68c0\u6d4b\u8c03\u7528\u8005\u662f\u5426\u62e5\u6709\u5173\u95ed\u7ebf\u7a0b\u7684\u6743\u9650 advanceRunState(SHUTDOWN); //\u4fee\u6539\u7ebf\u7a0b\u6c60\u72b6\u6001\u4e3aSHUTDOWN interruptIdleWorkers(); // \u8c03\u7528interruptIdleWorkers(false); onShutdown(); // \u7559\u7ed9ScheduledThreadPoolExecutor\u91cd\u5199 } finally { mainLock.unlock(); } tryTerminate(); } public List< Runnable> shutdownNow() { List< Runnable> tasks; final ReentrantLock mainLock = this.mainLock; mainLock.lock(); try { checkShutdownAccess(); advanceRunState(STOP); interruptWorkers(); //\u5f3a\u5236\u5173\u95ed\u6240\u6709worker\uff0c\u5373\u4f7f\u6b63\u5728\u6267\u884c\u4efb\u52a1 /**drainQueue() Drains the task queue into a new list, normally using drainTo. But if the queue is a DelayQueue or any other kind of queue for which poll or drainTo may fail to remove some elements, it deletes them one by one. */ tasks = drainQueue(); } finally { mainLock.unlock(); } tryTerminate(); return tasks; } //onlyOne=false, \u5173\u95ed\u6240\u6709\u7a7a\u95f2\u5de5\u4f5c\u7ebf\u7a0b private void interruptIdleWorkers(boolean onlyOne) { final ReentrantLock mainLock = this.mainLock; mainLock.lock(); try { for (Worker w : workers) { Thread t = w.thread; // \u5f53\u524dworker\u6301\u6709\u7684\u7ebf\u7a0b\u6ca1\u6709\u88ab\u4e2d\u65ad\uff0c\u4e14\u6210\u529f\u83b7\u53d6worker\u7684\u9501 // \u83b7\u53d6\u9501\u5931\u8d25\uff0c\u8bf4\u660e\u5f53\u524dworker\u6b63\u5728\u6267\u884c\u4efb\u52a1 if (!t.isInterrupted() && w.tryLock()) { try { t.interrupt(); } catch (SecurityException ignore) { } finally { w.unlock(); } } if (onlyOne) break; } } finally { mainLock.unlock(); } } /** * Transitions to TERMINATED state if either (SHUTDOWN and pool * and queue empty) or (STOP and pool empty). If otherwise * eligible to terminate but workerCount is nonzero, interrupts an * idle worker to ensure that shutdown signals propagate. This * method must be called following any action that might make * termination possible -- reducing worker count or removing tasks * from the queue during shutdown. The method is non-private to * allow access from ScheduledThreadPoolExecutor. */ final void tryTerminate() { for (;;) { int c = ctl.get(); if (isRunning(c) || // current state is RUNNING, return runStateAtLeast(c, TIDYING) || // current state is TIDYING or TERMINATED, \u8bf4\u660e\u6709\u5176\u4ed6\u7ebf\u7a0b\u5728\u7ec8\u6b62 (runStateOf(c) == SHUTDOWN && ! workQueue.isEmpty())) // \u867d\u7136state=SHUTDOWN,\u4f46\u8fd8\u6709\u4efb\u52a1\u9700\u8981\u5904\u7406 return; if (workerCountOf(c) != 0) { // Eligible to terminate\uff0c\u80fd\u591f\u8fdb\u884c\u7ec8\u6b62 interruptIdleWorkers(ONLY_ONE); // \u4e2d\u65ad\u4e00\u4e2a\u7a7a\u95f2worker\uff0c\u786e\u4fdd\u5173\u95ed\u4fe1\u53f7\u7684\u4f20\u64ad return; } final ReentrantLock mainLock = this.mainLock; mainLock.lock(); try { if (ctl.compareAndSet(c, ctlOf(TIDYING, 0))) { try { terminated(); // \u4f9b\u7528\u6237\u91cd\u5199 } finally { ctl.set(ctlOf(TERMINATED, 0)); termination.signalAll(); } return; } } finally { mainLock.unlock(); } // else retry on failed CAS } }","title":"Java\u6e90\u7801"},{"location":"Java/3_SourceCode/#java","text":"","title":"Java\u6e90\u7801"},{"location":"Java/3_SourceCode/#abstractqueuedsynchronizer","text":"\u961f\u5217\u540c\u6b65\u5668 AbstractQueuedSynchronizer(AQS)\uff0c\u662f\u7528\u6765\u6784\u5efa\u9501\u6216\u8005\u5176\u4ed6\u540c\u6b65\u7ec4\u4ef6\u7684\u57fa\u7840\u6846\u67b6\uff0c \u4f7f\u7528\u4e86\u4e00\u4e2avolatile\u4fee\u9970\u7684int\u6210\u5458\u53d8\u91cf\u8868\u793a\u540c\u6b65\u72b6\u6001 \uff0c\u901a\u8fc7\u5185\u7f6e\u7684FIFO\u961f\u5217\u6765\u5b8c\u6210\u8d44\u6e90\u83b7\u53d6\u7ebf\u7a0b\u7684\u6392\u961f\u5de5\u4f5c\u3002 \u540c\u6b65\u5668\u63d0\u4f9b\u7684\u5982\u4e0b3\u4e2a\u65b9\u6cd5\u6765\u8bbf\u95ee\u6216\u4fee\u6539\u540c\u6b65\u72b6\u6001: getState()\uff1a\u83b7\u53d6\u5f53\u524d\u540c\u6b65\u72b6\u6001; setState(int newState)\uff1a\u8bbe\u7f6e\u5f53\u524d\u540c\u6b65\u72b6\u6001; compareAndSetState(int expect,int update)\uff1a\u4f7f\u7528CAS\u8bbe\u7f6e\u5f53\u524d\u72b6\u6001\uff0c\u8be5\u65b9\u6cd5\u80fd\u591f\u4fdd\u8bc1\u72b6\u6001 \u8bbe\u7f6e\u7684\u539f\u5b50\u6027\u3002 \u540c\u6b65\u5668\u81ea\u8eab\u6ca1\u6709\u5b9e\u73b0\u4efb\u4f55\u540c\u6b65\u63a5\u53e3\uff0c\u5b83\u4ec5\u4ec5\u662f\u5b9a\u4e49\u4e86\u82e5\u5e72\u540c\u6b65\u72b6\u6001\u83b7\u53d6\u548c\u91ca\u653e\u7684\u65b9\u6cd5\u6765\u4f9b\u81ea\u5b9a\u4e49\u540c\u6b65\u7ec4\u4ef6\u4f7f\u7528\uff0c \u540c\u6b65\u5668\u65e2\u53ef\u4ee5\u652f\u6301\u72ec\u5360\u5f0f\u5730\u83b7\u53d6\u540c\u6b65\u72b6\u6001\uff0c\u4e5f\u53ef\u4ee5\u652f\u6301\u5171\u4eab\u5f0f\u5730\u83b7\u53d6\u540c\u6b65\u72b6\u6001\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u65b9\u4fbf\u5b9e\u73b0\u4e0d\u540c\u7c7b\u578b\u7684\u540c\u6b65\u7ec4\u4ef6 (ReentrantLock\u3001 ReentrantReadWriteLock\u548cCountDownLatch\u7b49)\u3002 \u540c\u6b65\u5668\u63a5\u53e3: \u540c\u6b65\u5668\u7684\u8bbe\u8ba1\u662f\u57fa\u4e8e \u6a21\u677f\u65b9\u6cd5\u6a21\u5f0f \u7684,\u4f7f\u7528\u8005\u9700\u8981\u7ee7\u627f\u540c\u6b65\u5668\u5e76\u91cd\u5199\u6307\u5b9a\u7684\u65b9\u6cd5, \u968f\u540e\u5c06\u540c\u6b65\u5668\u7ec4\u5408\u5728\u81ea\u5b9a\u4e49\u540c\u6b65\u7ec4\u4ef6\u7684\u5b9e\u73b0\u4e2d; \u540c\u6b65\u5668\u63d0\u4f9b\u7684\u6a21\u677f\u65b9\u6cd5\u57fa\u672c\u4e0a\u5206\u4e3a3\u7c7b:\u72ec\u5360\u5f0f\u83b7\u53d6\u4e0e\u91ca\u653e\u540c\u6b65\u72b6\u6001\u3001\u5171\u4eab\u5f0f\u83b7\u53d6\u4e0e\u91ca\u653e\u540c\u6b65\u72b6\u6001\u3001 \u67e5\u8be2\u540c\u6b65\u961f\u5217\u4e2d\u7684\u7b49\u5f85\u7ebf\u7a0b\u60c5\u51b5\u3002 \u2003 \u540c\u6b65\u5668\u5b9e\u73b0\u7ebf\u7a0b\u540c\u6b65: \u540c\u6b65\u961f\u5217 \u540c\u6b65\u5668\u4f9d\u8d56\u5185\u90e8\u7684\u540c\u6b65\u961f\u5217(\u4e00\u4e2aFIFO\u53cc\u5411\u961f\u5217)\u6765\u5b8c\u6210\u540c\u6b65\u72b6\u6001\u7684\u7ba1\u7406\uff0c\u6b64\u5916\u8fd8\u5305\u542bhead\u3001tail\u4e24\u4e2a\u8282\u70b9\uff1b head\u8282\u70b9\u662f\u4f4d\u4e8e\u961f\u5217\u5934\u90e8\u7684\u54e8\u5175\u8282\u70b9\uff0c\u5176thread\u5b57\u6bb5\u4e3anull\uff0c\u5176\u4e0b\u4e00\u4e2a\u8282\u70b9\u662f\u771f\u6b63\u5305\u542b\u963b\u585e\u7ebf\u7a0b\u7684\u8282\u70b9\uff1b tail\u8282\u70b9\u7b49\u4e8e\u961f\u5217\u4e2d\u771f\u6b63\u7684\u5c3e\u8282\u70b9\u3002\u961f\u5217\u4e3a\u7a7a\u65f6\uff0chead\u7b49\u4e8etail\u3002 \u8282\u70b9\u7684\u7b49\u5f85\u72b6\u6001\u5305\u62ec: /** waitStatus value to indicate thread has cancelled */ static final int CANCELLED = 1; /** waitStatus value to indicate successor's thread needs unparking */ static final int SIGNAL = -1; /** waitStatus value to indicate thread is waiting on condition */ static final int CONDITION = -2; /** * waitStatus value to indicate the next acquireShared should * unconditionally propagate */ static final int PROPAGATE = -3; \u72ec\u5360\u5f0f\u540c\u6b65\u72b6\u6001\u83b7\u53d6\u4e0e\u91ca\u653e acquire(int arg): \u9996\u5148\u8c03\u7528\u81ea\u5b9a\u4e49\u540c\u6b65\u5668\u5b9e\u73b0\u7684tryAcquire(int arg)\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4fdd\u8bc1\u7ebf\u7a0b\u5b89\u5168\u7684\u83b7\u53d6\u540c\u6b65\u72b6\u6001\uff0c\u5982\u679c\u540c\u6b65\u72b6\u6001\u83b7\u53d6\u5931\u8d25\uff0c \u5219\u6784\u9020\u540c\u6b65\u8282\u70b9(\u72ec\u5360\u5f0f Node.EXCLUSIVE\uff0c\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6210\u529f\u83b7\u53d6\u540c\u6b65\u72b6\u6001)\u5e76\u901a\u8fc7addWaiter(Node node)\u65b9\u6cd5 \u5c06\u8be5\u8282\u70b9\u52a0\u5165\u5230\u540c\u6b65\u961f\u5217\u7684\u5c3e\u90e8\uff0c\u6700\u540e\u8c03\u7528acquireQueued(Node node,int arg)\u65b9\u6cd5\uff0c\u4f7f\u5f97\u8be5\u8282\u70b9\u4ee5\u201c\u6b7b\u5faa\u73af\u201d\u7684\u65b9\u5f0f \u83b7\u53d6\u540c\u6b65\u72b6\u6001\u3002\u5982\u679c\u83b7\u53d6\u4e0d\u5230\u5219\u963b\u585e\u8282\u70b9\u4e2d\u7684\u7ebf\u7a0b\uff0c\u800c \u88ab\u963b\u585e\u7ebf\u7a0b\u7684\u5524\u9192\u4e3b\u8981\u4f9d\u9760\u524d\u9a71\u8282\u70b9\u7684\u51fa\u961f\u6216\u963b\u585e\u7ebf\u7a0b\u88ab\u4e2d\u65ad\u6765\u5b9e\u73b0 \u3002 public final void acquire(int arg) { if (!tryAcquire(arg) && //\u5982\u679ctryAcquire\u83b7\u53d6\u6210\u529f\uff0c\u5219acquire()\u6267\u884c\u5b8c\u6bd5 acquireQueued(addWaiter(Node.EXCLUSIVE), arg)) selfInterrupt(); } // tryAcquire\u5931\u8d25\uff0c\u6267\u884c\u540e\u7eed\u903b\u8f91 //\u6ce8\u610f\uff1a\u8be5\u5165\u961f\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u5c31\u662f\u65b0\u521b\u5efa\u7684\u8282\u70b9 private Node addWaiter(Node mode) { //\u57fa\u4e8e\u5f53\u524d\u7ebf\u7a0b\uff0c\u8282\u70b9\u7c7b\u578b\uff08Node.EXCLUSIVE\uff09\u521b\u5efa\u65b0\u7684\u8282\u70b9 //\u7531\u4e8e\u8fd9\u91cc\u662f\u72ec\u5360\u6a21\u5f0f\uff0c\u56e0\u6b64\u8282\u70b9\u7c7b\u578b\u5c31\u662fNode.EXCLUSIVE Node node = new Node(Thread.currentThread(), mode); Node pred = tail; //\u8fd9\u91cc\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\uff0c\u9996\u5148\u6267\u884c\u4e00\u6b21\u5feb\u901f\u5165\u961f\u64cd\u4f5c\uff0c\u5373\u76f4\u63a5\u5c1d\u8bd5\u5c06\u65b0\u8282\u70b9\u52a0\u5165\u961f\u5c3e if (pred != null) { node.prev = pred; //\u8fd9\u91cc\u6839\u636eCAS\u7684\u903b\u8f91\uff0c\u5373\u4f7f\u5e76\u53d1\u64cd\u4f5c\u4e5f\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u6210\u529f\u5e76\u8fd4\u56de\uff0c\u5176\u4f59\u7684\u90fd\u8981\u6267\u884c\u540e\u9762\u7684\u5165\u961f\u64cd\u4f5c\u3002\u5373enq()\u65b9\u6cd5 if (compareAndSetTail(pred, node)) { pred.next = node; return node; } } enq(node); return node; } //\u5b8c\u6574\u7684\u5165\u961f\u64cd\u4f5c // \u6ce8\u610f\u5176\u4e2d\u7684CAS\u64cd\u4f5c\uff0c\u4ee5compareAndSetTail\u4e3a\u4f8b // enq()\u901a\u8fc7CAS\u64cd\u4f5c\u4f7f\u5f97\u5e76\u53d1\u6dfb\u52a0\u8282\u70b9\u7684\u8bf7\u6c42\u53d8\u5f97\"\u4e32\u884c\u5316\" private Node enq(final Node node) { for (;;) { Node t = tail; //\u5982\u679c\u961f\u5217\u8fd8\u6ca1\u6709\u521d\u59cb\u5316\uff0c\u5219\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u5373\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u5934\u8282\u70b9 if (t == null) { //\u540c\u6837\u662fCAS\uff0c\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u521d\u59cb\u5316\u5934\u7ed3\u70b9\u6210\u529f\uff0c\u5176\u4f59\u7684\u90fd\u8981\u91cd\u590d\u6267\u884c\u5faa\u73af\u4f53 if (compareAndSetHead(new Node())) tail = head; } else { //\u65b0\u521b\u5efa\u7684\u8282\u70b9\u6307\u5411\u961f\u5217\u5c3e\u8282\u70b9\uff0c\u5e76\u53d1\u60c5\u51b5\u4e0b\u8fd9\u91cc\u4f1a\u6709\u591a\u4e2a\u65b0\u521b\u5efa\u7684\u8282\u70b9\u6307\u5411\u6b64\u65f6\u7684\u961f\u5217\u5c3e\u8282\u70b9 node.prev = t; // \u8fd9\u4e00\u6b65\u7684CAS\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u53ea\u6709\u4e00\u4e2a\u8282\u70b9\u53ef\u4ee5\u66f4\u65b0tail\u8282\u70b9 // \u66f4\u65b0\u6210\u529f\u7684\u8282\u70b9\uff0c\u6b64\u65f6t\u662f\u65e7tail\u8282\u70b9\uff0c\u8ba9t->next = node\uff0c\u8fd4\u56de\u5c3e\u8282\u70b9\u7684\u524d\u9a71\u7ed3\u70b9 // \u672a\u6210\u529f\u66f4\u65b0\u7684\u8282\u70b9\uff0c\u5219\u8fdb\u884c\u5faa\u73af\uff0c\u91cd\u65b0\u5c1d\u8bd5 if (compareAndSetTail(t, node)) { t.next = node; //\u8be5\u5faa\u73af\u4f53\u552f\u4e00\u9000\u51fa\u7684\u64cd\u4f5c\uff0c\u5c31\u662f\u5165\u961f\u6210\u529f\uff08\u5426\u5219\u5c31\u8981\u65e0\u9650\u91cd\u8bd5\uff09 return t; } } } } private final boolean compareAndSetTail(Node expect, Node update) { return unsafe.compareAndSwapObject(this, tailOffset, expect, update); // \u8fd9\u91cc\u7684this\u6307\u5f53\u524dAQS\u5bf9\u8c61\uff0ctailOffser\u662ftail\u5b57\u6bb5\u5728AQS\u4e2d\u7684\u504f\u79fb\u91cf\uff0cexpect\u662f\u73b0\u5728\u770b\u5230\u7684tail node\uff0c // update\u662f\u8981\u66f4\u65b0\u7684\u5c3e\u8282\u70b9\u3002 // java\u4e2d\u7684\u5bf9\u8c61\u5f15\u7528\u5b9e\u9645\u4e0a\u662fC++\u4e2d\u7684\u5bf9\u8c61\u6307\u9488\uff0c // \u56e0\u6b64compareAndSwapObject\u7684c++\u5b9e\u73b0\u4e2d\uff0c\u4f1a\u6bd4\u8f83 this+tailOffser \u6307\u5411\u7684\u5730\u5740\u548cexpect\u6307\u5411\u7684\u5730\u5740\u662f\u5426\u76f8\u540c // \u5bf9\u4e8e\u67d0\u4e00\u4e2a\u8282\u70b9\u800c\u8a00\uff0c\u4e24\u8005\u76f8\u7b49\uff0c\u53ef\u4ee5\u66f4\u65b0this+tailOffser\u6307\u5411\u7684\u5730\u5740\u4e3aupdate\u6307\u5411\u7684\u5730\u5740, \u8fd4\u56detrue; // \u5176\u4f59\u8282\u70b9\uff0c\u770b\u5230\u7684this+tailOffser\u6307\u5411\u7684\u5730\u5740\u5df2\u7ecf\u4e0d\u540c\u4e8e\u4e4b\u524d\u770b\u5230\u7684expect\u6307\u5411\u7684\u5730\u5740\uff0c\u56e0\u6b64\u65e0\u6cd5\u66f4\u65b0\uff0c\u8fd4\u56defalse } // \u53c2\u6570\u4e2d\u7684node\u5df2\u7ecf\u52a0\u5165\u5230\u540c\u6b65\u961f\u5217\u4e2d // acquireQueued()\u65b9\u6cd5\u662f\u4e00\u4e2a\u81ea\u65cb\u8fc7\u7a0b\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u5728\u81ea\u7701\u5730\u89c2\u5bdf\uff0c\u5f53\u6761\u4ef6\u6ee1\u8db3\uff0c\u83b7\u53d6\u5230\u4e86\u540c\u6b65\u72b6\u6001\uff0c // \u5c31\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u81ea\u65cb\u8fc7\u7a0b\u4e2d\u9000\u51fa\uff0c\u5426\u5219\u4f9d\u65e7\u7559\u5728\u8fd9 \u4e2a\u81ea\u65cb\u8fc7\u7a0b\u4e2d\uff08\u5e76\u4f1a\u963b\u585e\u8282\u70b9\u7684\u7ebf\u7a0b\uff09 final boolean acquireQueued(final Node node, int arg) { //\u9501\u8d44\u6e90\u83b7\u53d6\u5931\u8d25\u6807\u8bb0\u4f4d boolean failed = true; try { //\u7b49\u5f85\u7ebf\u7a0b\u88ab\u4e2d\u65ad\u6807\u8bb0\u4f4d boolean interrupted = false; //\u8fd9\u4e2a\u5faa\u73af\u4f53\u6267\u884c\u7684\u65f6\u673a\u5305\u62ec\u65b0\u8282\u70b9\u5165\u961f\u548c\u961f\u5217\u4e2d\u7b49\u5f85\u8282\u70b9\u88ab\u5524\u9192\u4e24\u4e2a\u5730\u65b9 for (;;) { //\u83b7\u53d6\u5f53\u524d\u8282\u70b9\u7684\u524d\u7f6e\u8282\u70b9 final Node p = node.predecessor(); //\u5982\u679c\u524d\u7f6e\u8282\u70b9\u5c31\u662f\u5934\u7ed3\u70b9\uff0c\u5219\u5c1d\u8bd5\u83b7\u53d6\u9501\u8d44\u6e90 if (p == head && tryAcquire(arg)) { //\u5f53\u524d\u8282\u70b9\u83b7\u5f97\u9501\u8d44\u6e90\u4ee5\u540e\u8bbe\u7f6e\u4e3a\u5934\u8282\u70b9 //\u5934\u7ed3\u70b9\u5c31\u8868\u793a\u5f53\u524d\u6b63\u5360\u6709\u9501\u8d44\u6e90\u7684\u8282\u70b9 setHead(node); // \u6b64\u65f6\u4f1a\u7f6e node\u7684thread\u5b57\u6bb5\u4e3anull p.next = null; //\u8868\u793a\u9501\u8d44\u6e90\u6210\u529f\u83b7\u53d6\uff0c\u56e0\u6b64\u628afailed\u7f6e\u4e3afalse failed = false; //\u8fd4\u56de\u4e2d\u65ad\u6807\u8bb0\uff0c\u8868\u793a\u5f53\u524d\u8282\u70b9\u662f\u88ab\u6b63\u5e38\u5524\u9192\u8fd8\u662f\u88ab\u4e2d\u65ad\u5524\u9192 return interrupted; } \u5982\u679c\u6ca1\u6709\u83b7\u53d6\u9501\u6210\u529f\uff0c\u5219\u8fdb\u5165\u6302\u8d77\u903b\u8f91 if (shouldParkAfterFailedAcquire(p, node) && parkAndCheckInterrupt()) // parkAndCheckInterrupt()\u8fd4\u56detrue,\u8bf4\u660e\u7531\u4e8e\u4e2d\u65ad\u88ab\u5524\u9192 interrupted = true; // \u65e0\u8bba\u662f\u6b63\u5e38\u88ab\u5524\u9192\uff0c\u8fd8\u662f\u4e2d\u65ad\u88ab\u5524\u9192\uff0c\u5f53\u524d\u7ebf\u7a0b\u90fd\u4f1a\u91cd\u65b0\u5c1d\u8bd5\u53bb\u83b7\u53d6\u9501\u8d44\u6e90\u3002 // \u5982\u679c\u6210\u529f\u5219\u8fd4\u56de\u4e2d\u65ad\u6807\u8bb0\uff0c\u5426\u5219\u7ee7\u7eed\u6302\u8d77\u7b49\u5f85 } } finally { //\u6700\u540e\u4f1a\u5206\u6790\u83b7\u53d6\u9501\u5931\u8d25\u5904\u7406\u903b\u8f91 if (failed) cancelAcquire(node); } } /* \u53ea\u6709\u524d\u9a71\u8282\u70b9\u662f\u5934\u8282\u70b9\u624d\u80fd\u591f\u5c1d\u8bd5\u83b7\u53d6\u540c\u6b65\u72b6\u6001: 1\u3001\u5934\u8282\u70b9\u662f\u6210\u529f\u83b7\u53d6\u5230\u540c\u6b65\u72b6\u6001\u7684\u8282\u70b9\uff0c\u800c\u5934\u8282\u70b9\u7684\u7ebf\u7a0b\u91ca\u653e\u4e86\u540c\u6b65\u72b6\u6001\u4e4b\u540e\uff0c\u5c06\u4f1a\u5524\u9192\u5176\u540e\u7ee7\u8282\u70b9\uff0c \u540e\u7ee7\u8282\u70b9\u7684\u7ebf\u7a0b\u88ab\u5524\u9192\u540e\u9700\u8981\u68c0\u67e5\u81ea\u5df1\u7684\u524d\u9a71\u8282\u70b9\u662f\u5426\u662f\u5934\u8282\u70b9\u3002 2\u3001\u7ef4\u62a4\u540c\u6b65\u961f\u5217\u7684FIFO\u539f\u5219 */ //\u6302\u8d77\u7ebf\u7a0b //\u9996\u5148\u8bf4\u660e\u4e00\u4e0b\u53c2\u6570\uff0cnode\u662f\u5f53\u524d\u7ebf\u7a0b\u7684\u8282\u70b9\uff0cpred\u662f\u5b83\u7684\u524d\u7f6e\u8282\u70b9 private static boolean shouldParkAfterFailedAcquire(Node pred, Node node) { //\u83b7\u53d6\u524d\u7f6e\u8282\u70b9\u7684waitStatus int ws = pred.waitStatus; if (ws == Node.SIGNAL) //\u5982\u679c\u524d\u7f6e\u8282\u70b9\u7684waitStatus\u662fNode.SIGNAL\u5219\u8fd4\u56detrue\uff0c\u7136\u540e\u4f1a\u6267\u884cparkAndCheckInterrupt()\u65b9\u6cd5\u8fdb\u884c\u6302\u8d77 return true; // \u8fd4\u56detrue,\u8bf4\u660e\u53ef\u4ee5\u6302\u8d77node\u4e2d\u7684\u7ebf\u7a0b if (ws > 0) { // \u8bf4\u660ews==Node.CANCELLED //\u8df3\u8fc7\u6240\u6709\u5df2\u7ecf\u53d6\u6d88\u7684\u524d\u7f6e\u8282\u70b9 do { node.prev = pred = pred.prev; } while (pred.waitStatus > 0); /* \u8fd9\u91cc\u6211\u4eec\u7531\u5f53\u524d\u8282\u70b9\u7684\u524d\u7f6e\u8282\u70b9\u5f00\u59cb\uff0c\u4e00\u76f4\u5411\u524d\u627e\u6700\u8fd1\u7684\u4e00\u4e2a\u6ca1\u6709\u88ab\u53d6\u6d88\u7684\u8282\u70b9 \u7531\u4e8e\u5934\u7ed3\u70b9head\u662f\u901a\u8fc7new Node()\u521b\u5efa\uff0c\u5b83\u7684waitStatus\u4e3a0,\u56e0\u6b64\u8fd9\u91cc\u4e0d\u4f1a\u51fa\u73b0\u7a7a\u6307\u9488\u95ee\u9898\uff0c\u5373\u6700\u591a\u627e\u5230\u5934\u8282\u70b9\uff0c do-while\u5faa\u73af\u5c31\u4f1a\u9000\u51fa */ pred.next = node; } else { //\u6839\u636ewaitStatus\u7684\u53d6\u503c\u9650\u5b9a\uff0c\u8fd9\u91ccwaitStatus\u7684\u503c\u53ea\u80fd\u662f0\u6216\u8005PROPAGATE\uff0c //\u56e0\u6b64\u628a\u524d\u7f6e\u8282\u70b9\u7684waitStatus\u8bbe\u4e3aNode.SIGNAL\uff0c\u7136\u540e\u91cd\u65b0\u8fdb\u5165\u8be5\u65b9\u6cd5\u8fdb\u884c\u5224\u65ad compareAndSetWaitStatus(pred, ws, Node.SIGNAL); } return false; // \u6302\u8d77\u6761\u4ef6\u4e0d\u6ee1\u8db3\uff0c\u91cd\u65b0\u6267\u884cacquireQueued\u65b9\u6cd5\u7684\u5faa\u73af\u4f53 } private final boolean parkAndCheckInterrupt() { LockSupport.park(this); //\u88ab\u5524\u9192\u4e4b\u540e\uff0c\u8fd4\u56de\u4e2d\u65ad\u6807\u8bb0\uff0c\u5373\u5982\u679c\u662f\u6b63\u5e38\u5524\u9192\u5219\u8fd4\u56defalse\uff0c\u5982\u679c\u662f\u7531\u4e8e\u4e2d\u65ad\u9192\u6765\uff0c\u5c31\u8fd4\u56detrue return Thread.interrupted(); /* Thread.interrupted()\u65b9\u6cd5\u5728\u8fd4\u56de\u4e2d\u65ad\u6807\u8bb0\u7684\u540c\u65f6\u4f1a\u6e05\u9664\u4e2d\u65ad\u6807\u8bb0\uff0c\u4e5f\u5c31\u662f\u8bf4\u5f53\u7531\u4e8e\u4e2d\u65ad\u9192\u6765\u7136\u540e\u83b7\u53d6\u9501\u6210\u529f\uff0c \u90a3\u4e48\u6574\u4e2aacquireQueued\u65b9\u6cd5\u5c31\u4f1a\u8fd4\u56detrue\u8868\u793a\u662f\u56e0\u4e3a\u4e2d\u65ad\u9192\u6765\uff0c\u4f46\u5982\u679c\u4e2d\u65ad\u9192\u6765\u4ee5\u540e\u6ca1\u6709\u83b7\u53d6\u5230\u9501\uff0c\u7ee7\u7eed\u6302\u8d77\uff0c \u7531\u4e8e\u8fd9\u6b21\u7684\u4e2d\u65ad\u5df2\u7ecf\u88ab\u6e05\u9664\u4e86\uff0c\u4e0b\u6b21\u5982\u679c\u662f\u88ab\u6b63\u5e38\u5524\u9192\uff0c\u90a3\u4e48acquireQueued\u65b9\u6cd5\u5c31\u4f1a\u8fd4\u56defalse\uff0c\u8868\u793a\u6ca1\u6709\u4e2d\u65ad\u3002 */ } // acquireQueued\u7684finaly\u6a21\u5757\uff0c\u5904\u7406tryAcquire\u53ef\u80fd\u51fa\u73b0\u7684\u5f02\u5e38 //\u4f20\u5165\u7684\u65b9\u6cd5\u53c2\u6570\u662f\u5f53\u524d\u83b7\u53d6\u9501\u8d44\u6e90\u5931\u8d25\u7684\u8282\u70b9 private void cancelAcquire(Node node) { // \u5982\u679c\u8282\u70b9\u4e0d\u5b58\u5728\u5219\u76f4\u63a5\u5ffd\u7565 if (node == null) return; node.thread = null; // \u8df3\u8fc7\u6240\u6709\u5df2\u7ecf\u53d6\u6d88\u7684\u524d\u7f6e\u8282\u70b9 Node pred = node.prev; while (pred.waitStatus > 0) node.prev = pred = pred.prev; // \u5df2\u7ecf\u53d6\u6d88\u7684\u524d\u9a71\u8282\u70b9\u7684\u524d\u9a71\u7ed3\u70b9\u6210\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u524d\u9a71\u7ed3\u70b9 Node predNext = pred.next; //\u628a\u5f53\u524d\u8282\u70b9waitStatus\u7f6e\u4e3a\u53d6\u6d88\uff0c\u8fd9\u6837\u522b\u7684\u8282\u70b9\u5728\u5904\u7406\u65f6\u5c31\u4f1a\u8df3\u8fc7\u8be5\u8282\u70b9 node.waitStatus = Node.CANCELLED; //\u5982\u679c\u5f53\u524d\u662f\u5c3e\u8282\u70b9\uff0c\u5219\u76f4\u63a5\u5220\u9664\uff0c\u5373\u51fa\u961f //\u6ce8\uff1a\u8fd9\u91cc\u4e0d\u7528\u5173\u5fc3CAS\u5931\u8d25\uff0c\u56e0\u4e3a\u5373\u4f7f\u5e76\u53d1\u5bfc\u81f4\u5931\u8d25\uff0c\u8be5\u8282\u70b9\u4e5f\u5df2\u7ecf\u88ab\u6210\u529f\u5220\u9664 if (node == tail && compareAndSetTail(node, pred)) { compareAndSetNext(pred, predNext, null); } else { int ws; if (pred != head && ((ws = pred.waitStatus) == Node.SIGNAL || (ws <= 0 && compareAndSetWaitStatus(pred, ws, Node.SIGNAL))) && pred.thread != null) { Node next = node.next; if (next != null && next.waitStatus <= 0) //\u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u524d\u7f6e\u8282\u70b9\u4e0d\u662f\u5934\u8282\u70b9\u4e14\u5b83\u540e\u9762\u7684\u8282\u70b9\u7b49\u5f85\u5b83\u5524\u9192\uff08waitStatus\u5c0f\u4e8e0\uff09\uff0c //\u518d\u52a0\u4e0a\u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9\u6ca1\u6709\u88ab\u53d6\u6d88\u5c31\u628a\u524d\u7f6e\u8282\u70b9\u8ddf\u540e\u7f6e\u8282\u70b9\u8fdb\u884c\u8fde\u63a5\uff0c\u76f8\u5f53\u4e8e\u5220\u9664\u4e86\u5f53\u524d\u8282\u70b9 compareAndSetNext(pred, predNext, next); } else { //\u8fdb\u5165\u8fd9\u91cc\uff0c\u8981\u4e48\u5f53\u524d\u8282\u70b9\u7684\u524d\u7f6e\u8282\u70b9\u662f\u5934\u7ed3\u70b9\uff0c\u8981\u4e48\u524d\u7f6e\u8282\u70b9\u7684waitStatus\u662fPROPAGATE\uff0c //\u76f4\u63a5\u5524\u9192\u5f53\u524d\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9 unparkSuccessor(node); } node.next = node; // help GC } } // release\u65b9\u6cd5 public final boolean release(int arg) { if (tryRelease(arg)) { Node h = head; /* \u540c\u6b65\u961f\u5217\u521d\u59cb\u5316\u65f6\u7684head\u8282\u70b9\u7684waitStatus\u4e3a0\uff0c\u5176\u4e0d\u9700\u5524\u9192\u540e\u7ee7\u8282\u70b9\uff0c\u6b64\u65f6\u5360\u6709\u9501\u7684\u8282\u70b9\u91ca\u653e\u9501\u540e\uff0c \u540c\u6b65\u961f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u963b\u585e\u7ebf\u7a0b\u7684\u8282\u70b9\uff0c\u56e0\u4e3a\u5176\u524d\u9a71\u7ed3\u70b9\u662fhead\u8282\u70b9\uff0c\u5982\u679ctryAcquire\u6210\u529f\u5c06\u83b7\u5f97\u9501\uff0c \u8be5\u8282\u70b9\u968f\u540e\u6210\u4e3a\u65b0\u7684head\uff0c\u8fd9\u90e8\u5206\u5728acquireQueued\u65b9\u6cd5\u4e2d\u5b9e\u73b0\uff0c \u65b0\u7684head\u7684waitStatus\u4e0d\u662f0\uff0c\u4e4b\u540e\u91ca\u653e\u65f6\u4f1a\u5524\u9192\u540e\u7ee7\u8282\u70b9 */ if (h != null && h.waitStatus != 0) unparkSuccessor(h); //\u5524\u9192head \u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9 return true; } return false; } \u5206\u6790\u4e86\u72ec\u5360\u5f0f\u540c\u6b65\u72b6\u6001\u83b7\u53d6\u548c\u91ca\u653e\u8fc7\u7a0b\u540e\uff0c\u9002\u5f53\u505a\u4e2a\u603b\u7ed3\uff1a\u5728\u83b7\u53d6\u540c\u6b65\u72b6\u6001\u65f6\uff0c\u540c\u6b65\u5668\u7ef4\u62a4\u4e00\u4e2a\u540c\u6b65\u961f\u5217\uff0c\u83b7\u53d6\u72b6\u6001\u5931\u8d25\u7684\u7ebf\u7a0b \u90fd\u4f1a\u88ab\u52a0\u5165\u5230\u961f\u5217\u4e2d\u5e76\u5728\u961f\u5217\u4e2d\u8fdb\u884c\u81ea\u65cb\uff1b\u79fb\u51fa\u961f\u5217(\u6216\u505c\u6b62\u81ea\u65cb)\u7684\u6761\u4ef6\u662f\u524d\u9a71\u8282\u70b9\u4e3a\u5934\u8282\u70b9\u4e14\u6210\u529f\u83b7\u53d6\u4e86\u540c\u6b65\u72b6\u6001\u3002 \u5728\u91ca\u653e\u540c\u6b65\u72b6\u6001\u65f6\uff0c\u540c\u6b65\u5668\u8c03\u7528tryRelease(int arg)\u65b9\u6cd5\u91ca\u653e\u540c\u6b65\u72b6\u6001\uff0c\u7136\u540e\u5524\u9192\u5934\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9\u3002 \u2003 \u5171\u4eab\u5f0f\u540c\u6b65\u72b6\u6001\u83b7\u53d6\u4e0e\u91ca\u653e \u5171\u4eab\u5f0f\u83b7\u53d6\u4e0e\u72ec\u5360\u5f0f\u83b7\u53d6\u6700\u4e3b\u8981\u7684\u533a\u522b\u5728\u4e8e\u540c\u4e00\u65f6\u523b\u80fd\u5426\u6709\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u83b7\u53d6\u5230\u540c\u6b65\u72b6\u6001\u3002 // \u5171\u4eab\u5f0f\u83b7\u53d6\u4f1a\u5ffd\u7565 interrupt public final void acquireShared(int arg) { if (tryAcquireShared(arg) < 0) doAcquireShared(arg); } private void doAcquireShared(int arg) { final Node node = addWaiter(Node.SHARED); boolean failed = true; try { boolean interrupted = false; for (;;) { // \u5982\u679c\u5f53\u524d\u8282\u70b9\u7684\u524d\u9a71\u4e3a\u5934\u8282\u70b9\u65f6\uff0c\u5c1d\u8bd5\u83b7\u53d6\u540c\u6b65\u72b6\u6001\uff0c\u5982\u679c\u8fd4\u56de\u503c\u5927\u4e8e\u7b49\u4e8e0\uff0c // \u8868\u793a\u8be5\u6b21\u83b7\u53d6\u540c\u6b65\u72b6\u6001\u6210\u529f\u5e76\u4ece\u81ea\u65cb\u8fc7\u7a0b\u4e2d\u9000\u51fa\u3002 final Node p = node.predecessor(); if (p == head) { int r = tryAcquireShared(arg); if (r >= 0) { setHeadAndPropagate(node, r); p.next = null; // help GC if (interrupted) selfInterrupt(); failed = false; return; } } if (shouldParkAfterFailedAcquire(p, node) && parkAndCheckInterrupt()) interrupted = true; } } finally { if (failed) cancelAcquire(node); } } // \u5171\u4eab\u5f0f\u91ca\u653e public final boolean releaseShared(int arg) { if (tryReleaseShared(arg)) { doReleaseShared(); return true; } return false; } /* \u548c\u72ec\u5360\u5f0f\u4e3b\u8981\u533a\u522b\u5728\u4e8etryReleaseShared(int arg) \u65b9\u6cd5\u5fc5\u987b\u786e\u4fdd\u540c\u6b65\u72b6\u6001\uff08\u6216\u8005\u8d44\u6e90\u6570\uff09\u7ebf\u7a0b\u5b89\u5168\u91ca\u653e\uff0c \u4e00\u822c\u662f\u901a\u8fc7\u5faa\u73af\u548cCAS\u6765\u4fdd\u8bc1\u7684\uff0c\u56e0\u4e3a\u91ca\u653e\u540c\u6b65\u72b6\u6001\u7684\u64cd\u4f5c\u4f1a\u540c\u65f6\u6765\u81ea\u591a\u4e2a\u7ebf\u7a0b\u3002 */ \u72ec\u5360\u5f0f\u8d85\u65f6\u83b7\u53d6\u540c\u6b65\u72b6\u6001 private boolean doAcquireNanos(int arg, long nanosTimeout) throws InterruptedException { if (nanosTimeout <= 0L) return false; final long deadline = System.nanoTime() + nanosTimeout; final Node node = addWaiter(Node.EXCLUSIVE); boolean failed = true; try { for (;;) { final Node p = node.predecessor(); if (p == head && tryAcquire(arg)) { setHead(node); p.next = null; // help GC failed = false; return true; } nanosTimeout = deadline - System.nanoTime(); if (nanosTimeout <= 0L) //\u8bf4\u660e\u7b49\u5f85\u65f6\u95f4\u5df2\u7ecf\u8017\u5c3d return false; // \u7b49\u5f85\u65f6\u95f4\u5c0f\u4e8espinForTimeoutThreshold(1000 ns)\uff0c\u8fdb\u5165\u5feb\u901f\u81ea\u65cb // \u56e0\u4e3a\u975e\u5e38\u77ed\u7684\u8d85\u65f6\u7b49\u5f85\u65e0\u6cd5\u505a\u5230\u5341\u5206\u7cbe\u786e if (shouldParkAfterFailedAcquire(p, node) && nanosTimeout > spinForTimeoutThreshold) LockSupport.parkNanos(this, nanosTimeout); if (Thread.interrupted()) throw new InterruptedException(); } } finally { if (failed) cancelAcquire(node); } }","title":"AbstractQueuedSynchronizer"},{"location":"Java/3_SourceCode/#reentrantlock","text":"ReentrantLock\u5185\u90e8\u6709\u4e09\u4e2a\u9759\u6001\u7c7b\uff0cSync(\u62bd\u8c61\u7c7b), FairSync, NonFairSync\uff0c\u540e\u4e24\u4e2a\u7ee7\u627f\u4e86Sync; Sync\u4e2d\u5b9e\u73b0\u4e86nonfairTryAcquire\u548ctryRelease\u65b9\u6cd5\uff1b NonFairSync\u4e2d\u7684tryAcquire\u65b9\u6cd5\u76f4\u63a5\u8c03\u7528\u4e86Sync\u4e2d\u7684nonfairTryAcquire\u65b9\u6cd5\uff1b FairSync\u4e2d\u5b9e\u73b0\u7684tryAcquire\u65b9\u6cd5\u5728nonfairTryAcquire\u57fa\u7840\u4e0a\uff0c\u591a\u4e86hasQueuedPredecessors\u5224\u65ad\u3002 \u975e\u516c\u5e73\u6027\u7684\u83b7\u53d6\u4e0e\u91ca\u653e final boolean nonfairTryAcquire(int acquires) { final Thread current = Thread.currentThread(); int c = getState(); if (c == 0) { if (compareAndSetState(0, acquires)) { setExclusiveOwnerThread(current); return true; } }// \u5982\u679c\u662f\u83b7\u53d6\u9501\u7684\u7ebf\u7a0b\u518d\u6b21\u8bf7\u6c42\uff0c\u5219\u5c06\u540c\u6b65\u72b6\u6001\u503c\u8fdb\u884c\u589e\u52a0\u5e76\u8fd4\u56de true\uff0c\u8868\u793a\u83b7\u53d6\u540c\u6b65\u72b6\u6001\u6210\u529f else if (current == getExclusiveOwnerThread()) { int nextc = c + acquires; if (nextc < 0) // overflow throw new Error(\"Maximum lock count exceeded\"); setState(nextc); return true; } return false; } /* \u5982\u679c\u8be5\u9501\u88ab\u83b7\u53d6\u4e86n\u6b21\uff0c\u90a3\u4e48\u524d(n-1)\u6b21tryRelease(int releases)\u65b9\u6cd5\u5fc5\u987b\u8fd4\u56defalse\uff0c \u800c\u53ea\u6709\u540c\u6b65\u72b6\u6001\u5b8c\u5168\u91ca\u653e\u4e86\uff0c\u624d\u80fd\u8fd4\u56detrue\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u8be5\u65b9\u6cd5\u5c06\u540c\u6b65\u72b6\u6001\u662f\u5426\u4e3a0\u4f5c\u4e3a\u6700\u7ec8\u91ca\u653e\u7684\u6761\u4ef6\uff0c \u5f53\u540c\u6b65\u72b6\u6001\u4e3a0\u65f6\uff0c\u5c06\u5360\u6709\u7ebf\u7a0b\u8bbe\u7f6e\u4e3anull\uff0c\u5e76\u8fd4\u56detrue\uff0c\u8868\u793a\u91ca\u653e\u6210\u529f */ protected final boolean tryRelease(int releases) { int c = getState() - releases; if (Thread.currentThread() != getExclusiveOwnerThread()) throw new IllegalMonitorStateException(); boolean free = false; if (c == 0) { free = true; setExclusiveOwnerThread(null); } setState(c); return free; } \u516c\u5e73\u83b7\u53d6\u4e0e\u91ca\u653e protected final boolean tryAcquire(int acquires) { final Thread current = Thread.currentThread(); int c = getState(); if (c == 0) { // hasQueuedPredecessors\uff0c\u5224\u65ad\u52a0\u5165\u4e86\u540c\u6b65\u961f\u5217\u4e2d\u5f53\u524d\u8282\u70b9\u662f\u5426\u6709\u524d\u9a71\u8282\u70b9\uff0c // \u5982\u679c\u8fd4\u56detrue\uff0c\u5219\u8868\u793a\u6709\u7ebf\u7a0b\u6bd4\u5f53\u524d\u7ebf\u7a0b\u66f4\u65e9\u5730\u8bf7\u6c42\u83b7\u53d6\u9501\uff0c\u56e0\u6b64\u9700\u8981\u7b49\u5f85\u524d\u9a71\u7ebf\u7a0b\u83b7\u53d6\u5e76\u91ca\u653e\u9501\u4e4b\u540e\u624d\u80fd\u7ee7\u7eed\u83b7\u53d6\u9501\u3002 if (!hasQueuedPredecessors() && compareAndSetState(0, acquires)) { setExclusiveOwnerThread(current); return true; } } else if (current == getExclusiveOwnerThread()) { int nextc = c + acquires; if (nextc < 0) throw new Error(\"Maximum lock count exceeded\"); setState(nextc); return true; } return false; }","title":"ReentrantLock"},{"location":"Java/3_SourceCode/#reentrantreadwritelock","text":"\u8bfb\u5199\u72b6\u6001\u7684\u8bbe\u8ba1 \u5728\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u4e0a\u7ef4\u62a4\u8bfb\u3001\u5199\u72b6\u6001\uff0c\u9ad816\u4f4d\u8868\u793a\u8bfb\uff0c\u4f4e16\u4f4d\u8868\u793a\u5199\uff1b state & 0x0000FFFF \u83b7\u53d6\u5199\u72b6\u6001\uff1b\u5f53\u8bfb\u72b6\u6001\u589e\u52a01\u65f6\uff0cstate+(1<<16); \u56e0\u6b64S\u4e0d\u7b49\u4e8e0\u65f6\uff0c\u5f53\u5199\u72b6\u6001\uff08S&0x0000FFFF\uff09\u7b49\u4e8e0\u65f6\uff0c\u5219\u8bfb \u72b6\u6001\uff08S>>>16\uff09\u5927\u4e8e0\uff0c\u5373\u8bfb\u9501\u5df2\u88ab\u83b7\u53d6\u3002 \u5199\u9501\u7684\u83b7\u53d6\u4e0e\u91ca\u653e \u5199\u9501\u662f\u4e00\u4e2a\u652f\u6301\u91cd\u8fdb\u5165\u7684\u6392\u5b83\u9501\u3002\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u5df2\u7ecf\u83b7\u53d6\u4e86\u5199\u9501\uff0c\u5219\u589e\u52a0\u5199\u72b6\u6001\u3002\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u5728\u83b7\u53d6\u5199\u9501\u65f6\uff0c \u8bfb\u9501\u5df2\u7ecf\u88ab\u83b7\u53d6\uff08\u8bfb\u72b6\u6001\u4e0d\u4e3a0\uff09\u6216\u8005\u8be5\u7ebf\u7a0b\u4e0d\u662f\u5df2\u7ecf\u83b7\u53d6\u5199\u9501\u7684\u7ebf\u7a0b\uff0c\u5219\u5f53\u524d\u7ebf\u7a0b\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\u3002 protected final boolean tryAcquire(int acquires) { /* * Walkthrough: * 1. If read count nonzero or write count nonzero * and owner is a different thread, fail. * 2. If count would saturate, fail. (This can only * happen if count is already nonzero.) * 3. Otherwise, this thread is eligible for lock if * it is either a reentrant acquire or * queue policy allows it. If so, update state * and set owner. */ Thread current = Thread.currentThread(); int c = getState(); int w = exclusiveCount(c); // w=state & 0x0000ffff if (c != 0) { // (Note: if c != 0 and w == 0 then shared count != 0)\uff0c\u5373\u5b58\u5728\u8bfb\u9501 if (w == 0 || current != getExclusiveOwnerThread()) return false; if (w + exclusiveCount(acquires) > MAX_COUNT) throw new Error(\"Maximum lock count exceeded\"); // Reentrant acquire setState(c + acquires); return true; } if (writerShouldBlock() || !compareAndSetState(c, c + acquires)) return false; setExclusiveOwnerThread(current); return true; } \u8bfb\u9501\u7684\u83b7\u53d6\u4e0e\u91ca\u653e \u8bfb\u9501\u662f\u4e00\u4e2a\u652f\u6301\u91cd\u8fdb\u5165\u7684\u5171\u4eab\u9501\uff0c\u5b83\u80fd\u591f\u88ab\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u83b7\u53d6\uff0c\u5728\u6ca1\u6709\u5176\u4ed6\u5199\u7ebf\u7a0b\u8bbf\u95ee \uff08\u6216\u8005\u5199\u72b6\u6001\u4e3a0\uff09\u65f6\uff0c\u8bfb\u9501\u603b\u4f1a\u88ab\u6210\u529f\u5730\u83b7\u53d6\uff0c\u800c\u6240\u505a\u7684\u4e5f\u53ea\u662f\uff08\u7ebf\u7a0b\u5b89\u5168\u7684\uff09\u589e\u52a0\u8bfb\u72b6\u6001\u3002\u5982 \u679c\u5f53\u524d\u7ebf\u7a0b\u5df2\u7ecf\u83b7\u53d6\u4e86\u8bfb\u9501\uff0c\u5219\u589e\u52a0\u8bfb\u72b6\u6001\u3002\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u5728\u83b7\u53d6\u8bfb\u9501\u65f6\uff0c\u5199\u9501\u5df2\u88ab\u5176\u4ed6\u7ebf\u7a0b \u83b7\u53d6\uff0c\u5219\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\u3002 protected final int tryAcquireShared(int unused) { /* * Walkthrough: * 1. If write lock held by another thread, fail. * 2. Otherwise, this thread is eligible for * lock wrt state, so ask if it should block * because of queue policy. If not, try * to grant by CASing state and updating count. * Note that step does not check for reentrant * acquires, which is postponed to full version * to avoid having to check hold count in * the more typical non-reentrant case. * 3. If step 2 fails either because thread * apparently not eligible or CAS fails or count * saturated, chain to version with full retry loop. */ Thread current = Thread.currentThread(); int c = getState(); if (exclusiveCount(c) != 0 && getExclusiveOwnerThread() != current) return -1; int r = sharedCount(c); if (!readerShouldBlock() && r < MAX_COUNT && compareAndSetState(c, c + SHARED_UNIT)) { // SHARED_UNIT = 1<<16 if (r == 0) { firstReader = current; firstReaderHoldCount = 1; } else if (firstReader == current) { firstReaderHoldCount++; } else { HoldCounter rh = cachedHoldCounter; if (rh == null || rh.tid != getThreadId(current)) cachedHoldCounter = rh = readHolds.get(); else if (rh.count == 0) readHolds.set(rh); rh.count++; } return 1; } return fullTryAcquireShared(current); } \u9501\u964d\u7ea7 \u9501\u964d\u7ea7\u662f\u6307\u628a\u6301\u4f4f\uff08\u5f53\u524d\u62e5\u6709\u7684\uff09\u5199\u9501\uff0c\u518d\u83b7\u53d6\u5230 \u8bfb\u9501\uff0c\u968f\u540e\u91ca\u653e\uff08\u5148\u524d\u62e5\u6709\u7684\uff09\u5199\u9501\u7684\u8fc7\u7a0b // \u4f2a\u4ee3\u7801 public void processData() { readLock.lock(); if (!update) { // \u5fc5\u987b\u5148\u91ca\u653e\u8bfb\u9501\uff0c\u5426\u5219\u65e0\u6cd5\u83b7\u53d6\u5199\u9501 readLock.unlock(); // \u9501\u964d\u7ea7\u4ece\u5199\u9501\u83b7\u53d6\u5230\u5f00\u59cb writeLock.lock(); try { if (!update) { // \u51c6\u5907\u6570\u636e\u7684\u6d41\u7a0b\uff08\u7565\uff09 update = true; } readLock.lock(); /* \u8fd9\u91cc\u8bfb\u9501\u83b7\u53d6\u662f\u5fc5\u8981\u7684\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u7684\u53ef\u89c1\u6027\uff0c \u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u4e0d\u83b7\u53d6\u8bfb\u9501\u800c\u662f\u76f4\u63a5\u91ca\u653e\u5199\u9501\uff0c\u5047\u8bbe\u6b64\u523b\u53e6\u4e00\u4e2a\u7ebf\u7a0b\uff08\u8bb0\u4f5c\u7ebf\u7a0bT\uff09\u83b7\u53d6\u4e86\u5199\u9501\u5e76\u4fee\u6539\u4e86\u6570\u636e\uff0c \u90a3\u4e48\u5f53\u524d\u7ebf\u7a0b\u65e0\u6cd5\u611f\u77e5\u7ebf\u7a0bT\u7684\u6570\u636e\u66f4\u65b0\u3002\u5982\u679c\u5f53\u524d\u7ebf\u7a0b\u83b7\u53d6\u8bfb\u9501\uff0c\u5373\u9075\u5faa\u9501\u964d\u7ea7\u7684\u6b65\u9aa4\uff0c \u5219\u7ebf\u7a0bT\u83b7\u53d6\u5199\u9501\u5c06\u4f1a\u88ab\u963b\u585e\uff0c\u76f4\u5230\u5f53\u524d\u7ebf\u7a0b\u4f7f\u7528\u6570\u636e\u5e76\u91ca\u653e\u8bfb\u9501\u4e4b\u540e\uff0c\u7ebf\u7a0bT\u624d\u80fd\u83b7\u53d6\u5199\u9501\u8fdb\u884c\u6570\u636e\u66f4\u65b0 */ } finally { writeLock.unlock(); }// \u9501\u964d\u7ea7\u5b8c\u6210\uff0c\u5199\u9501\u964d\u7ea7\u4e3a\u8bfb\u9501 } try { // \u4f7f\u7528\u6570\u636e\u7684\u6d41\u7a0b\uff08\u7565\uff09 } finally { readLock.unlock(); } }","title":"ReentrantReadWriteLock"},{"location":"Java/3_SourceCode/#hashmap","text":"1\u3001\u57fa\u4e8eHashTable\u7684\u5b9e\u73b0, provides all of the optional map operations, permits null value and null key, and is unsynchronized. public HashMap(int initialCapacity, float loadFactor) { if (initialCapacity < 0) throw new IllegalArgumentException(\"Illegal initial capacity: \" + initialCapacity); if (initialCapacity > MAXIMUM_CAPACITY) initialCapacity = MAXIMUM_CAPACITY; if (loadFactor <= 0 || Float.isNaN(loadFactor)) throw new IllegalArgumentException(\"Illegal load factor: \" + loadFactor); this.loadFactor = loadFactor; this.threshold = tableSizeFor(initialCapacity); } public HashMap(int initialCapacity) { this(initialCapacity, DEFAULT_LOAD_FACTOR); } public HashMap() { this.loadFactor = DEFAULT_LOAD_FACTOR; // all other fields defaulted // \u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u521d\u59cb\u5316\u65f6\uff0c\u67e5\u770bcapacity\uff0c\u8fd4\u56de\u9ed8\u8ba4\u503c16\uff1b // \u67e5\u770bthreshold, \u4e3a0 } public HashMap(Map<? extends K, ? extends V> m) { this.loadFactor = DEFAULT_LOAD_FACTOR; putMapEntries(m, false); } 2\u3001HashMap\u7684capacity\u6307 the number of buckets in the hash table; When the number of entries(entry:key-value) in the hash table exceeds the product of the load factor and the current capacity, the hash table is rehashed . capacity: hash table\u4e2dbin/bucket\u7684\u6570\u91cf\uff0c\u521d\u59cb\u5316HashMap\u65f6\u4e0d\u6307\u5b9ainitialCapacity\uff0c\u5219 initialCpacity\u9ed8\u8ba4\u53d616\uff1b capacity\u7684\u53d6\u503c\u4e00\u5b9a\u662f2\u7684\u5e42\u6b21\uff0c\u8fd9\u6837\u5728\u8ba1\u7b97 hashCode%capacity\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 hashCode & (capacity-1)\u6765\u4ee3\u66ff\uff0c\u6548\u7387\u66f4\u9ad8\u3002 final int capacity() { return (table != null) ? table.length : (threshold > 0) ? threshold : DEFAULT_INITIAL_CAPACITY; } threshold: \u5f53size > threshold\u65f6\uff0chash table\u9700\u8981\u8fdb\u884c\u6269\u5bb9; \u521d\u59cb\u5316\u65f6\uff0cthreshold = tableSize(initialCapacity);\u6b64\u65f6\u8c03\u7528capacity()\u8fd4\u56dethreshold; static final int tableSizeFor(int cap) { int n = cap - 1; // \u907f\u514d cap\u5df2\u7ecf\u662f2\u7684\u5e42\u6b21 n |= n >>> 1; n |= n >>> 2; n |= n >>> 4; n |= n >>> 8; n |= n >>> 16; /* \u5047\u8bben\u7684\u4e8c\u8fdb\u5236\u4e3a01xxx...xxx\u3002\u63a5\u7740 \u5bf9n\u53f3\u79fb1\u4f4d\uff1a001xx...xxx\uff0c\u518d\u4f4d\u6216\uff0c\u7ed3\u679c\u4e3a\uff1a011xx...xxx \u5bf9n\u53f3\u79fb2\u4e3a\uff1a00011...xxx\uff0c\u518d\u4f4d\u6216\uff0c\u7ed3\u679c\u4e3a\uff1a01111...xxx \u53f3\u79fb4\u4f4d\uff0c\u53ef\u5f978\u4e2a1\uff0c\u56e0\u4e3aint \u4e3a32\u4f4d\uff0c\u56e0\u6b64\u6700\u591a\u53f3\u79fb16\u4f4d \u6700\u540e\u7684\u7ed3\u679c\u662f\u8ba9\u539f\u59cbn\u6700\u9ad8\u4f4d\u76841\u540e\u9762\u7684\u4f4d\u5168\u53d8\u4e3a1, \u8fd4\u56den+1\uff0c\u5373\u5f97\u5230\u4e862\u7684\u6574\u6570\u6b21\u5e42\u7684\u503c\u4e86\u3002 \u5982\u679c n=cap\uff0c\u800ccap=2^x\uff0c\u6700\u540e\u8fd4\u56de\u7684\u7ed3\u679c\u5c06\u662f 2^(x+1) */ return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1; // \u4f7f\u7528\u53e6\u4e00\u4e2aHashMap m\u6765\u521d\u59cb\u5316\u5f53\u524dHashMap, \u6b64\u65f6threshold\u901a\u8fc7\u4e0b\u9762\u65b9\u5f0f\u6765\u8bbe\u7f6e\uff0c\u5176\u4e2ds=m.size() if (table == null) { // pre-size float ft = ((float)s / loadFactor) + 1.0F; int t = ((ft < (float)MAXIMUM_CAPACITY) ? (int)ft : MAXIMUM_CAPACITY); if (t > threshold) threshold = tableSizeFor(t); } else if (s > threshold) resize(); } final Node<K,V>[] resize() { Node<K,V>[] oldTab = table; int oldCap = (oldTab == null) ? 0 : oldTab.length; int oldThr = threshold; int newCap, newThr = 0; if (oldCap > 0) { if (oldCap >= MAXIMUM_CAPACITY) { * threshold = Integer.MAX_VALUE; return oldTab; } else if ((newCap = oldCap << 1) < MAXIMUM_CAPACITY && ** oldCap >= DEFAULT_INITIAL_CAPACITY) // \u5982\u679c\u65b0\u5bb9\u91cf\u5927\u4e8e\u7b49\u4e8eMAXIMUM_CAPACITY \u6216\u8005 \u65e7\u5bb9\u91cf\u5c0f\u4e8e\u9ed8\u8ba4\u521d\u59cb\u5bb9\u91cf\uff0c\u6b64\u65f6\u4e0d\u9700\u8981\u4fee\u6539threshold newThr = oldThr << 1; // double threshold }// \u8bf4\u660e\u662f\u521a\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u6b64\u65f6hash table\u4e2d\u5c1a\u672a\u63d2\u5165key-val else if (oldThr > 0) // initial capacity was placed in threshold *** newCap = oldThr; else { // \u8bf4\u660e\u521d\u59cb\u5316\u65f6\u6ca1\u6709\u6307\u5b9ainitialCapacity\u548cload factor **** newCap = DEFAULT_INITIAL_CAPACITY; newThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY); } if (newThr == 0) { // \u5bf9\u5e94 *** \u5904 float ft = (float)newCap * loadFactor; newThr = (newCap < MAXIMUM_CAPACITY && ft < (float)MAXIMUM_CAPACITY ? (int)ft : Integer.MAX_VALUE); } threshold = newThr; @SuppressWarnings({\"rawtypes\",\"unchecked\"}) Node<K,V>[] newTab = (Node<K,V>[])new Node[newCap]; table = newTab; if (oldTab != null) { // \u904d\u5386\u65e7\u7684hash table for (int j = 0; j < oldCap; ++j) { Node<K,V> e; if ((e = oldTab[j]) != null) { // \u53d6\u51fa\u65e7hash table\uff0c\u7b2cj\u4e2abin\u7684first node\u8d4b\u7ed9 e oldTab[j] = null; if (e.next == null) // \u7b2cj\u4e2abin\u4e2d\u7684\u94fe\u8868\u53ea\u67091\u4e2a\u8282\u70b9 newTab[e.hash & (newCap - 1)] = e; // \u5219\u76f4\u63a5\u5c06\u8fd9\u4e2a\u5143\u7d20\u653e\u7f6e\u5728\u65b0\u7684\u54c8\u5e0c\u6876\u91cc\u3002 else if (e instanceof TreeNode) ((TreeNode<K,V>)e).split(this, newTab, j, oldCap); // \u94fe\u8868\u4e2d\u8282\u70b9\u6570\u591a\u4e8e1\u4e2a\uff0c\u4f46\u5c0f\u4e8e8\u4e2a\uff0c\u5219\u8981\u6839\u636e\u94fe\u8868\u4e0a\u6bcf\u4e2a\u8282\u70b9\u7684\u54c8\u5e0c\u503c\uff0c\u4f9d\u6b21\u653e\u5165\u65b0\u54c8\u5e0c\u6876\u5bf9\u5e94\u4e0b\u6807\u4f4d\u7f6e else { //preserve order /* \u56e0\u4e3a\u6269\u5bb9\u662f\u5bb9\u91cf\u7ffb\u500d\uff0c\u6240\u4ee5\u539f\u94fe\u8868\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\uff0c\u73b0\u5728\u53ef\u80fd\u5b58\u653e\u5728\u539f\u6765\u7684\u4e0b\u6807\uff0c\u5373low\u4f4d\uff0c \u6216\u8005\u6269\u5bb9\u540e\u7684\u4e0b\u6807\uff0c\u5373high\u4f4d\u3002 high\u4f4d= low\u4f4d+\u539f\u54c8\u5e0c\u6876\u5bb9\u91cf */ Node<K,V> loHead = null, loTail = null; Node<K,V> hiHead = null, hiTail = null; Node<K,V> next; do { next = e.next; if ((e.hash & oldCap) == 0) {// \u8bf4\u660e\u8282\u70b9hash\u503c\u5c0f\u4e8e\u65e7cap\uff0c\u653e\u5728\u4f4e\u4f4d\u94fe\u8868\u4e2d if (loTail == null) loHead = e; else loTail.next = e; loTail = e; } else { if (hiTail == null) hiHead = e; else hiTail.next = e; hiTail = e; } } while ((e = next) != null); // \u5c06\u4f4e\u4f4d\u94fe\u8868\u5b58\u653e\u5728\u539findex\u5904\uff0c if (loTail != null) { loTail.next = null; newTab[j] = loHead; } // \u5c06\u9ad8\u4f4d\u94fe\u8868\u5b58\u653e\u5728\u65b0index\u5904 if (hiTail != null) { hiTail.next = null; newTab[j + oldCap] = hiHead; } } } } } return newTab; } size: hash table\u4e2dkey-value\u7684\u6570\u91cf load factor = size/capacity 3\u3001default load factor is 0.75, offering a good tradeoff between time and space costs. 4\u3001HashMap\u7684\u6b63\u5e38\u5f62\u5f0f\u662f\u6570\u7ec4+\u94fe\u8868,\u6570\u7ec4\u6bcf\u4e2a\u4f4d\u7f6e\u79f0\u4e3abin or bucket,\u5f53\u4e00\u4e2abin\u4e2d\u7684\u5143\u7d20\u8fc7\u591a(\u8d85\u8fc7TREEIFY_THRESHOLD)\uff0c \u5373\u78b0\u649e\u4e25\u91cd, \u8fd9\u4e2abin\u4e2d\u7684Node\u5c31\u4f1a\u8f6c\u53d8\u4e3a TreeNode, \u8be5bin\u79f0\u4e3aTreeBin, TreeBin\u4ee5\u7ea2\u9ed1\u6811\u5f62\u5f0f\u6784\u5efa. \u9608\u503c\u4e00\u822c\u8bbe\u5b9a\u4e3a8: under random hashCodes, \u4e00\u4e2abin\u4e2d\u5404\u4e2a\u8282\u70b9\u7684\u78b0\u649e\u9891\u7387\u7b26\u53f7\u6cca\u677e\u5206\u5e03;\u5728load factor=0.75\u57fa\u7840\u4e0a, \u5e73\u5747\u53c2\u6570 \u03bb=0.5, \u800cbin\u4e2d\u5143\u7d20\u4e2a\u6570\u4e3ak, \u5219\u6bcf\u4e2a\u5143\u7d20\u51fa\u73b0\u6982\u7387\u4e3a(exp(-0.5) * pow(0.5, k) / factorial(k)), k=8\u65f6\uff0cprobability=0.00000006,\u4e3a\u4ebf\u5206\u4e4b\u516d\u3002 \u5355\u4e2aTreeNode\u5927\u5c0f\u662f\u666e\u901aNode\u5927\u5c0f\u76842\u500d, \u867d\u7136\u7ea2\u9ed1\u6811\u5e73\u5747\u67e5\u627e\u662fO(log N), \u94fe\u8868\u5e73\u5747\u67e5\u627e\u662fO(log N);\u4f46 N\u8f83\u5c0f\u65f6\uff0c\u4f7f\u7528\u7ea2\u9ed1\u6811\u7684\u7a7a\u95f4\u548c\u5efa\u6811\u65f6\u95f4\u90fd\u8981\u5927\u4e8e\u94fe\u8868\uff1b\u7531\u4e0a\u53ef\u77e5\uff0cbin\u4e2d\u5143\u7d20\u4e3a8\u65f6\uff0c\u53d1\u751f\u51b2\u7a81\u7684\u6982\u7387\u6781\u4f4e\uff0c \u56e0\u6b64\u5f53bin\u4e2d\u5143\u7d20\u5c0f\u4e8e8\u65f6\uff0c\u4f7f\u7528\u94fe\u8868\u662f\u6bd4\u8f83\u5408\u9002\u7684\uff1b\u5f53\u63d2\u5165\u65b0\u5143\u7d20\u540e\uff0cbinCount\u5927\u4e8e\u7b49\u4e8e8\u4e2a\u5143\u7d20\u65f6(\u5373\u6b64\u65f6binCount=7)\uff0c \u8f6c\u4e3a\u7ea2\u9ed1\u6811\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6709\u6bd4\u8f83\u597d\u7684\u67e5\u627e\u6027\u80fd\uff1b\u6811\u5f62\u5316\u540e\uff0c\u5f53\u5220\u9664\u4e00\u4e2a\u8282\u70b9\u524d\uff0cbitCount\u5c0f\u4e8e\u7b49\u4e8e6\u65f6\uff0c\u53ef\u4ee5\u7531\u7ea2\u9ed1\u6811\u91cd\u65b0\u8f6c\u4e3a\u94fe\u8868\uff1b \u8bbe\u5b9a\u4e3a6\uff0c\u800c\u975e7\uff0c\u662f\u4e3a\u4e86\u907f\u514d\u9891\u7e41\u5728\u94fe\u8868\u548c\u6811\u4e4b\u95f4\u8fdb\u884c\u8f6c\u6362\u3002 \u9664TREEIFY_THRESHOLD\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u53c2\u6570MIN_TREEIFY_CAPACITY\uff0c\u53ea\u6709hash table\u7684capacity\u5927\u4e8e\u8fd9\u4e2a\u53c2\u6570\uff0c \u624d\u5141\u8bb8\u5c06\u94fe\u8868\u8f6c\u4e3a\u6811\uff0c\u5426\u5219\u6876\u5185\u5143\u7d20\u8fc7\u591a\uff0c\u5e94\u8be5\u8fdb\u884c\u6269\u5bb9\uff0c\u800c\u4e0d\u662f\u6811\u5f62\u5316\u3002 public V put(K key, V value) { return putVal(hash(key), key, value, false, true); } /** * Implements Map.put and related methods * * @param hash hash for key * @param key the key * @param value the value to put * @param onlyIfAbsent if true, don't change existing value * @param evict if false, the table is in creation mode. * @return previous value, or null if none */ final V putVal(int hash, K key, V value, boolean onlyIfAbsent, boolean evict) { Node<K,V>[] tab; Node<K,V> p; int n, i; if ((tab = table) == null || (n = tab.length) == 0) n = (tab = resize()).length; // \u5982\u679ctab\u4e0d\u4e3anull\uff0c\u4f46tab.length=0,\u5219\u9700\u8981\u6269\u5bb9 if ((p = tab[i = (n - 1) & hash]) == null) // \u63d2\u5165\u4e00\u4e2a new node tab[i] = newNode(hash, key, value, null); else { Node<K,V> e; K k; if (p.hash == hash && ((k = p.key) == key || (key != null && key.equals(k)))) e = p; // e is the first node else if (p instanceof TreeNode) e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value); else { for (int binCount = 0; ; ++binCount) { if ((e = p.next) == null) { // \u5728\u5f53\u524dbin\u7684\u94fe\u8868\u4e2d\u63d2\u5165\u4e00\u4e2a\u65b0\u7684\u8282\u70b9 p.next = newNode(hash, key, value, null); if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st treeifyBin(tab, hash); // \u63d2\u5165\u4e4b\u524dbinCount>=7\uff0c\u5219\u63d2\u5165\u65b0\u7684\u8282\u70b9\u540e\uff0c\u9700\u8981\u6811\u5f62\u5316bin break; } if (e.hash == hash && // \u627e\u5230\u5df2\u8986\u76d6\u7684\u8282\u70b9 ((k = e.key) == key || (key != null && key.equals(k)))) break; p = e; } } if (e != null) { // existing mapping for key V oldValue = e.value; // \u8986\u76d6\u8282\u70b9\u503c if (!onlyIfAbsent || oldValue == null) e.value = value; afterNodeAccess(e); // \u5728HashMap\u4e2d\u6ca1\u6709\u5b9e\u73b0\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u7528\u4ee5LinkedHashMap\u91cd\u8f7d return oldValue; // \u8fd4\u56de\u65e7\u503c } } ++modCount; if (++size > threshold) resize(); afterNodeInsertion(evict); return null; } 5\u3001hash \u5728hashMap\u7c7b\u4e2d\u5b9a\u4e49\u4e86hash\u65b9\u6cd5 static final int hash(Object key) { int h; return (key == null) ? 0 : (h = key.hashCode()) ^ (h >>> 16); } /* \u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b h ^ (h>>>16) \u7531\u4e8e\u5728\u8ba1\u7b97 index\u65f6\u4f7f\u7528: index = hashcode & (capacity-1); \u5047\u8bbecapacity-1 \u7684\u4e8c\u8fdb\u5236\u4e3a 0b000...01111, \u800c\u4e24\u4e2a\u4e0d\u540c\u7684key\u7684hashcode\u5b83\u4eec\u7684\u533a\u522b\u5728\u4e8e\u9ad828\u4f4d\uff0c\u4f4e4\u4f4d\u662f\u76f8\u540c\u7684\uff0c \u5219\u5982\u679c\u76f4\u63a5\u8ba1\u7b97 hashcode & (capacity-1)\uff0c\u4f1a\u53d1\u751fhash\u78b0\u649e \u800c h^(h>>>16)\uff0c\u4fdd\u8bc1\u4e86h\u7684\u9ad816\u4f4d\u4e0d\u53d8\uff0c\u800c\u4f4e16\u4f4d\u548c\u9ad816\u4f4d\u8fdb\u884c\u5f02\u6216\uff0c\u76f8\u5f53\u4e8e\u5728\u4f4e16\u4f4d\u5f15\u5165\u9ad816\u4f4d\u7279\u5f81\uff0c \u8fd9\u6837\u53ef\u4ee5\u964d\u4f4e\u78b0\u649e\u51e0\u7387\u3002 */","title":"HashMap"},{"location":"Java/3_SourceCode/#concurrenthashmap","text":"jdk1.8\u4e0ejdk1.7\u4e2d\u5b9e\u73b0\u6709\u8f83\u5927\u5dee\u5f02\uff0c\u8fd9\u91cc\u4ecb\u7ecd\u7684\u662fjdk1.8\u4e2d\u7684\u5b9e\u73b0\u3002 1\u3001\u521d\u59cb\u5316 public ConcurrentHashMap() { // \u9ed8\u8ba4table size \u4e3a16 } public ConcurrentHashMap(int initialCapacity) { if (initialCapacity < 0) throw new IllegalArgumentException(); // \u8fd9\u91cc\u4e0e1.7\u4e0d\u540c\uff0chash table\u7684capacity\u4e3a\u5927\u4e8e\u7b49\u4e8e (1.5*initialCapaccity+1)\u76842\u7684\u5e42\u6b21 // 1.7\u4e2d\uff0c\u4f20\u516532\uff0c\u5219cap=32, \u800c\u57281.8\u4e2d\uff0c\u4f20\u516532\uff0ccap=64 int cap = ((initialCapacity >= (MAXIMUM_CAPACITY >>> 1)) ? MAXIMUM_CAPACITY : tableSizeFor(initialCapacity + (initialCapacity >>> 1) + 1)); this.sizeCtl = cap; } public ConcurrentHashMap(Map<? extends K, ? extends V> m) { this.sizeCtl = DEFAULT_CAPACITY; putAll(m); } public ConcurrentHashMap(int initialCapacity, float loadFactor) { this(initialCapacity, loadFactor, 1); } 2\u3001sizeCtl sizeCtl=0\uff0c\u4ee3\u8868\u6570\u7ec4\u672a\u88ab\u521d\u59cb\u5316\uff0c\u9ed8\u8ba4\u521d\u59cb\u5bb9\u91cf\u4e3a16\uff1b sizeCtl>0\uff0c\u5982\u679c\u6570\u7ec4\u672a\u521d\u59cb\u5316\uff0c\u90a3\u4e48\u8bb0\u5f55\u6570\u7ec4\u7684\u521d\u59cb\u5bb9\u91cf\u3002\u5982\u679c\u6570\u7ec4\u5df2\u521d\u59cb\u5316\uff0c \u90a3\u4e48\u5176\u8bb0\u5f55\u6570\u7ec4\u7684\u6269\u5bb9\u9608\u503c\uff08\u6570\u7ec4\u7684\u521d\u59cb\u5bb9\u91cf * load factor\uff09\uff1b sizeCtl=-1\uff0c\u8868\u793a\u662f\u6570\u7ec4\u6b63\u5728\u89e3\u6790\u521d\u59cb\u5316\uff1b sizeCtl = -n (n>1)\uff0c\u6709\u591a\u4e2a\u7ebf\u7a0b\u6b63\u5728\u6269\u5bb9; \u5176\u4e2d\u4ee5\u4f4e16\u4f4d\u8868\u793a\u6b63\u6570m, \u8868\u793a\u6709m-1\u4e2a\u7ebf\u7a0b\u5728\u5e2e\u7740\u6269\u5bb9\uff1b \u9ad816\u4ee5\u65e0\u7b26\u53f7\u5f62\u5f0f\u5de6\u79fb16\u4f4d\uff0c\u7136\u540e\u51cf\u53bb 1 < < 15, \u5f97\u5230 numLeadingZeros, \u6269\u5bb9\u524d\u7684\u5bb9\u91cf\u5927\u5c0f\u7b49\u4e8e 2^(32-numLeadingZeros)>\u3002 \u2003 3\u3001\u6dfb\u52a0\u5143\u7d20 \u591a\u7ebf\u7a0b\u534f\u52a9\u6269\u5bb9\u7684\u64cd\u4f5c\u4f1a\u5728\u4e24\u4e2a\u5730\u65b9(*\u534f\u52a9\u6269\u5bb9)\u88ab\u89e6\u53d1\uff1a \u5f53\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u53d1\u73b0\u6dfb\u52a0\u7684\u5143\u7d20\u5bf9\u5e94\u6876\u4f4d\u4e3afwd\u8282\u70b9\uff0c\u5c31\u4f1a\u5148\u53bb\u534f\u52a9\u6269\u5bb9\uff0c\u7136\u540e\u518d\u6dfb\u52a0\u5143\u7d20 \u5f53\u6dfb\u52a0\u5b8c\u5143\u7d20\u540e\uff0c\u5224\u65ad\u5f53\u524d\u5143\u7d20\u4e2a\u6570\u8fbe\u5230\u4e86\u6269\u5bb9\u9608\u503c\uff0c\u6b64\u65f6\u53d1\u73b0sizeCtl\u7684\u503c\u5c0f\u4e8e0\uff0c\u5e76\u4e14\u65b0\u6570\u7ec4\u4e0d\u4e3a\u7a7a\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u4f1a\u53bb\u534f\u52a9\u6269\u5bb9\u3002 public V put(K key, V value) { return putVal(key, value, false); } /** Implementation for put and putIfAbsent */ final V putVal(K key, V value, boolean onlyIfAbsent) { if (key == null || value == null) throw new NullPointerException(); int hash = spread(key.hashCode()); int binCount = 0; for (Node<K,V>[] tab = table;;) { Node<K,V> f; int n, i, fh; if (tab == null || (n = tab.length) == 0) tab = initTable(); else if ((f = tabAt(tab, i = (n - 1) & hash)) == null) { if (casTabAt(tab, i, null, new Node<K,V>(hash, key, value, null))) break; // no lock when adding to empty bin } // MOVED=-1\uff0c\u5f53\u524d\u8282\u70b9hash\u503c=-1\uff0c\u4ee3\u8868\u662fforward\u8282\u70b9\uff0c\u8bf4\u660e\u8282\u70b9\u5df2\u7ecf\u88ab\u8fc1\u79fb\u5230\u65b0table\uff0c // \u5373\u6709\u7ebf\u7a0b\u5728\u5bf9\u5f53\u524dtable\u8fdb\u884c\u6269\u5bb9\uff0c\u4e8e\u662f\u5f53\u524d\u7ebf\u7a0b\u4f1a\u8fdb\u884c\u534f\u52a9\u6269\u5bb9 else if ((fh = f.hash) == MOVED) tab = helpTransfer(tab, f); // *\u534f\u52a9\u6269\u5bb9 else { V oldVal = null; synchronized (f) {// \u9501\u4f4f\u5f53\u524dbin\u4e2d\u7684\u5934\u8282\u70b9\uff0c\u4fdd\u8bc1\u5f53\u524d\u7ebf\u7a0b\u7684\u63d2\u5165\u5b89\u5168\uff1b\u540c\u65f6\u4e0d\u5f71\u54cd\u5176\u4ed6bin\u7684\u63d2\u5165 // \u8fd9\u91cc\u518d\u6b21\u8fdb\u884c\u5224\u65ad\uff0c\u662f\u4e3a\u4e86\u9632\u6b62\u591a\u7ebf\u7a0b\u540c\u65f6\u5728\u4e00\u4e2abin\u4e2d\u63d2\u5165\u5143\u7d20\u65f6\uff0c\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u63d2\u5165\u5bfc\u81f4 // bin\u6811\u5f62\u5316\u6216\u8005\u6574\u4e2atable\u8fdb\u884c\u6269\u5bb9\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6301\u6709\u7684f\u4f4d\u7f6e\u53d1\u751f\u53d8\u5316 if (tabAt(tab, i) == f) { if (fh >= 0) { binCount = 1; // \u904d\u5386\u94fe\u8868\uff0c\u627e\u5230\u63d2\u5165\u4f4d\u7f6e for (Node<K,V> e = f;; ++binCount) { K ek; if (e.hash == hash && ((ek = e.key) == key || (ek != null && key.equals(ek)))) { oldVal = e.val; if (!onlyIfAbsent) e.val = value; break; } Node<K,V> pred = e; if ((e = e.next) == null) { //\u5728\u94fe\u8868\u5c3e\u90e8\u63d2\u5165\u4e00\u4e2a\u65b0\u8282\u70b9 pred.next = new Node<K,V>(hash, key, value, null); break; } } } else if (f instanceof TreeBin) { Node<K,V> p; binCount = 2; if ((p = ((TreeBin<K,V>)f).putTreeVal(hash, key, value)) != null) { oldVal = p.val; if (!onlyIfAbsent) p.val = value; } } } } if (binCount != 0) { if (binCount >= TREEIFY_THRESHOLD) treeifyBin(tab, i); if (oldVal != null) return oldVal; break; } } } // \u7ef4\u62a4hash table\u4e2dkey-value\u4e2a\u6570\uff0c\u540c\u65f6\u5224\u65ad\u662f\u5426\u8d85\u8fc7\u6269\u5bb9\u9608\u503c\uff0c\u9700\u8981\u6269\u5bb9 addCount(1L, binCount); return null; } static final int spread(int h) { return (h ^ (h >>> 16)) & HASH_BITS; /* HASH_BITS = 0X7FFFFFFF spread\u4f5c\u7528\u548chashMap\u4e2d\u7684hash()\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u5728\u4f4e16\u4f4d\u5f15\u5165\u9ad8\u4f4d\u7279\u5f81\uff0c\u964d\u4f4e\u8ba1\u7b97index\u65f6\u78b0\u649e\u51e0\u7387; \u4e0e\u4e0a HASH_BITS\uff0c\u5219\u4fdd\u8bc1\u8fd4\u56de\u503c\u4e00\u5b9a\u662f\u4e00\u4e2a\u975e\u8d1f\u6570 */ } /** * Initializes table, using the size recorded in sizeCtl. */ private final Node<K,V>[] initTable() { Node<K,V>[] tab; int sc; while ((tab = table) == null || tab.length == 0) { if ((sc = sizeCtl) < 0) // \u8bf4\u660e\u6709\u7ebf\u7a0b\u5728\u8fdb\u884c\u521d\u59cb\u5316 table,\u56e0\u6b64\u5f53\u524d\u7ebf\u7a0b\u9700\u8981\u8ba9\u51faCPU Thread.yield(); // lost initialization race; just spin else if (U.compareAndSwapInt(this, SIZECTL, sc, -1)) { try { // \u8fd9\u91cc\u518d\u6b21\u5224\u65ad\uff0c\u662f\u8fdb\u884c\u53cc\u91cd\u68c0\u6d4b\uff0c\u9632\u6b62\u5176\u4ed6\u7ebf\u7a0b\u8fdb\u884c\u91cd\u590d\u521d\u59cb\u5316 if ((tab = table) == null || tab.length == 0) { int n = (sc > 0) ? sc : DEFAULT_CAPACITY; @SuppressWarnings(\"unchecked\") Node<K,V>[] nt = (Node<K,V>[])new Node<?,?>[n]; table = tab = nt; sc = n - (n >>> 2); // sc = n-n/4 = 3n/4 = n*0.75, \u4ee3\u8868\u6269\u5bb9\u9608\u503c } } finally { sizeCtl = sc; // \u5b8c\u6210\u521d\u59cb\u5316\u540e\uff0csizeCtl\u4ee3\u8868\u7684\u662f\u6269\u5bb9\u9608\u503c } break; } } return tab; } private final void addCount(long x, int check) {// \u4f20\u5165\u7684check\u662fbin\u4e2d\u7d2f\u52a0\u6b21\u6570 CounterCell[] as; long b, s; //\u5f53CounterCell\u6570\u7ec4\u4e0d\u4e3a\u7a7a\uff0c\u5219\u4f18\u5148\u5229\u7528\u6570\u7ec4\u4e2d\u7684CounterCell\u8bb0\u5f55\u6570\u91cf //\u5f53 baseCount\u901a\u8fc7CAS\u5b9e\u73b0\u7d2f\u52a0\u64cd\u4f5c\u6210\u529f\uff0c\u5219\u76f4\u63a5\u7ed3\u675f\uff1b\u5426\u5219\u5229\u7528\u6570\u7ec4\u4e2d\u7684CounterCell\u8bb0\u5f55\u6570\u91cf if ((as = counterCells) != null || !U.compareAndSwapLong(this, BASECOUNT, b = baseCount, s = b + x)) { CounterCell a; long v; int m; //\u6807\u8bc6\u662f\u5426\u6709\u591a\u7ebf\u7a0b\u7ade\u4e89 boolean uncontended = true; //\u5f53as\u6570\u7ec4\u4e3a\u7a7a //\u6216\u8005\u5f53as\u957f\u5ea6\u4e3a0 //\u6216\u8005\u5f53\u524d\u7ebf\u7a0b\u5bf9\u5e94\u7684as\u6570\u7ec4\u6876\u4f4d\u7684\u5143\u7d20\u4e3a\u7a7a //\u6216\u8005\u5f53\u524d\u7ebf\u7a0b\u5bf9\u5e94\u7684as\u6570\u7ec4\u6876\u4f4d\u4e0d\u4e3a\u7a7a\uff0c\u4f46\u662f\u7d2f\u52a0\u5931\u8d25 if (as == null || (m = as.length - 1) < 0 || (a = as[ThreadLocalRandom.getProbe() & m]) == null || !(uncontended = U.compareAndSwapLong(a, CELLVALUE, v = a.value, v + x))) { //\u4ee5\u4e0a\u4efb\u4f55\u4e00\u79cd\u60c5\u51b5\u6210\u7acb\uff0c\u90fd\u4f1a\u8fdb\u5165\u8be5\u65b9\u6cd5\uff0c\u4f20\u5165\u7684uncontended\u662ffalse fullAddCount(x, uncontended); return; } if (check <= 1) // \u4f20\u5165\u7684check>=0\uff0c\u5982\u679ccheck=0,\u8bf4\u660e\u63d2\u5165\u5143\u7d20\u65f6\uff0c\u76f4\u63a5\u5728\u7a7a\u7684bin\u4e2d\u521b\u5efa\u4e86\u4e00\u4e2a\u8282\u70b9 // check=1,\u8bf4\u660ebin\u4e2d\u5934\u8282\u70b9\u7684\u503c\u88ab\u8986\u76d6\u4e86\uff1b\u8fd9\u4e24\u79cd\u60c5\u51b5\u90fd\u4e0d\u5fc5\u5224\u65ad\u662f\u5426\u9700\u8981\u6269\u5bb9 return; //\u8ba1\u7b97\u5143\u7d20\u4e2a\u6570 s = sumCount(); } if (check >= 0) { Node<K,V>[] tab, nt; int n, sc; //\u5f53\u5143\u7d20\u4e2a\u6570\u8fbe\u5230\u6269\u5bb9\u9608\u503c //\u5e76\u4e14\u6570\u7ec4\u4e0d\u4e3a\u7a7a //\u5e76\u4e14\u6570\u7ec4\u957f\u5ea6\u5c0f\u4e8e\u9650\u5b9a\u7684\u6700\u5927\u503c //\u6ee1\u8db3\u4ee5\u4e0a\u6240\u6709\u6761\u4ef6\uff0c\u6267\u884c\u6269\u5bb9 while (s >= (long)(sc = sizeCtl) && (tab = table) != null && (n = tab.length) < MAXIMUM_CAPACITY) { //\u8fd9\u4e2a\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u6b63\u6570 int rs = resizeStamp(n); // rs = (n\u7684\u524d\u5bfc0\u4e2a\u6570) | (1<< 15) // \u7b2c\u4e00\u6b21sc\u4ee3\u8868\u6269\u5bb9\u9608\u503c\u5927\u4e8e0 // \u5f53sc\u5c0f\u4e8e0\uff0c\u8bf4\u660e\u6709\u7ebf\u7a0b\u6b63\u5728\u6269\u5bb9\uff0c\u90a3\u4e48\u4f1a\u534f\u52a9\u6269\u5bb9 if (sc < 0) { //\u6269\u5bb9\u7ed3\u675f\u6216\u8005\u6269\u5bb9\u7ebf\u7a0b\u6570\u8fbe\u5230\u6700\u5927\u503c\u6216\u8005\u6269\u5bb9\u540e\u7684\u6570\u7ec4\u4e3anull\u6216\u8005\u6ca1\u6709\u66f4\u591a\u7684\u6876\u4f4d\u9700\u8981\u8f6c\u79fb\uff0c\u7ed3\u675f\u64cd\u4f5c if ((sc >>> RESIZE_STAMP_SHIFT) != rs || sc == rs + 1 || sc == rs + MAX_RESIZERS || (nt = nextTable) == null || transferIndex <= 0) break; //\u6269\u5bb9\u7ebf\u7a0b\u6570\u52a01\uff0c\u6210\u529f\u540e\uff0c\u8fdb\u884c\u534f\u52a9\u6269\u5bb9\u64cd\u4f5c if (U.compareAndSwapInt(this, SIZECTL, sc, sc + 1)) //\u534f\u52a9\u6269\u5bb9\uff0cnewTable\u4e0d\u4e3anull transfer(tab, nt); // *\u534f\u52a9\u6269\u5bb9 } //\u6ca1\u6709\u5176\u4ed6\u7ebf\u7a0b\u5728\u8fdb\u884c\u6269\u5bb9\uff0c\u8fbe\u5230\u6269\u5bb9\u9608\u503c\u540e\uff0c\u7ed9sizeCtl\u8d4b\u4e86\u4e00\u4e2a\u5f88\u5927\u7684\u8d1f\u6570 //rs << RESIZE_STAMP_SHIFT\u662f\u4e00\u4e2a\u5f88\u5927\u7684\u8d1f\u6570 // rs\u7684\u7b2c15\u4f4d\u4e00\u5b9a\u4e3a1\uff0crs\u518d\u5411\u5de6\u79fb\u52a816\u4f4d\uff0c\u5219\u6700\u9ad8\u4f4d\u4e3a1\uff0c\u6b64\u65f6rs\u53d8\u4e3a\u8d1f\u6570 // \u901a\u8fc7CAS\u64cd\u4f5c\u5c06\u65b0\u503c\u8d4b\u7ed9sizeCtl else if (U.compareAndSwapInt(this, SIZECTL, sc, (rs << RESIZE_STAMP_SHIFT) + 2)) //\u6269\u5bb9\uff0cnewTable\u4e3anull transfer(tab, null); s = sumCount(); } } } private final void fullAddCount(long x, boolean wasUncontended) { // \u7531\u4e8eaddCount\u4e2d\u81ea\u65cb\u7d2f\u52a0\u5931\u8d25\u800c\u8c03\u7528fullAddCount\u65b9\u6cd5\uff0c\u4f20\u5165wasUncontended=false; // \u5426\u5219\u4f20\u5165\u7684\u4e3atrue int h; //\u83b7\u53d6\u5f53\u524d\u7ebf\u7a0b\u7684hash\u503c\uff0c\u7528\u4e8e\u8ba1\u7b97\u6570\u7ec4\u4e0b\u6807 if ((h = ThreadLocalRandom.getProbe()) == 0) { * ThreadLocalRandom.localInit(); // force initialization h = ThreadLocalRandom.getProbe(); wasUncontended = true; } //\u6807\u8bc6\u662f\u5426\u6709\u51b2\u7a81\uff0c\u5982\u679c\u6700\u540e\u4e00\u4e2a\u6876\u4e0d\u662fnull\uff0c\u90a3\u4e48\u4e3atrue boolean collide = false; // True if last slot nonempty for (;;) { CounterCell[] as; CounterCell a; int n; long v; // \u6570\u7ec4\u4e0d\u4e3a\u7a7a\uff0c\u4f18\u5148\u5bf9\u6570\u7ec4\u4e2dCouterCell\u7684value\u7d2f\u52a0 // \u7b2c\u4e00\u6b21\u6267\u884c\u8be5\u65b9\u6cd5\u65f6\uff0c\u4e0d\u4f1a\u8fdb\u5165\uff0c\u800c\u662f\u4f1a\u5148\u8fdb\u884c\u6570\u7ec4\u7684\u521b\u5efa\uff1b\u6b64\u540e\u518d\u6b21\u6267\u884c\u65f6\uff0c\u4f1a\u8fdb\u5165 if ((as = counterCells) != null && (n = as.length) > 0) { //\u7ebf\u7a0b\u5bf9\u5e94\u7684\u6876\u4f4d\u4e3anull\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u76f4\u63a5\u5728\u8be5\u4f4d\u7f6e\u521b\u5efa\u4e00\u4e2aCounterCell\u5bf9\u8c61 //\u5426\u5219\u4f1a\u8ba1\u7b97\u4e00\u4e2a\u65b0\u4f4d\u7f6e\uff0c\u518d\u5c1d\u8bd5 if ((a = as[(n - 1) & h]) == null) { ** if (cellsBusy == 0) { // Try to attach new Cell //\u521b\u5efaCounterCell\u5bf9\u8c61 CounterCell r = new CounterCell(x); // Optimistic create //\u5229\u7528CAS\u4fee\u6539cellBusy\u72b6\u6001\u4e3a1\uff0c\u6210\u529f\u5219\u5c06\u521a\u624d\u521b\u5efa\u7684CounterCell\u5bf9\u8c61\u653e\u5165\u6570\u7ec4\u4e2d if (cellsBusy == 0 && U.compareAndSwapInt(this, CELLSBUSY, 0, 1)) { boolean created = false; try { // Recheck under lock CounterCell[] rs; int m, j; //\u6876\u4f4d\u4e3a\u7a7a\uff0c \u5c06CounterCell\u5bf9\u8c61\u653e\u5165\u6570\u7ec4 if ((rs = counterCells) != null && (m = rs.length) > 0 && rs[j = (m - 1) & h] == null) { rs[j] = r; //\u8868\u793a\u653e\u5165\u6210\u529f created = true; } } finally { cellsBusy = 0; } if (created) //\u6210\u529f\u9000\u51fa\u5faa\u73af break; //\u6876\u4f4d\u5df2\u7ecf\u88ab\u522b\u7684\u7ebf\u7a0b\u653e\u7f6e\u4e86\u5df2\u7ed9CounterCell\u5bf9\u8c61\uff0c\u7ee7\u7eed\u5faa\u73af continue; // Slot is now non-empty } } collide = false; } // \u5982\u679c * \u5904\u5f97\u5230h\u4e0d\u4e3a0\uff0c\u5219\u6b64\u65f6\u7684h\u4e0eaddCount\u4e2d\u5c1d\u8bd5\u8fdb\u884cCAS\u7d2f\u8ba1\u524d\u8ba1\u7b97\u7684hash\u662f\u4e00\u81f4\u7684 // \u4e14 ** \u5904\u6839\u636eh\u8ba1\u7b97\u4f4d\u7f6e\u4e0a\u7684bin\u4e0d\u4e3a\u7a7a\uff0c\u56e0\u6b64\u9700\u8981\u91cd\u65b0\u8ba1\u7b97hash\u503c\uff0c // \u6b64\u65f6\u8c03\u7528\u7684\u662fThreadLocalRandom.advanceProbe(h)\uff0c\u6839\u636e\u65e7probe\u503c\u751f\u6210\u65b0\u7684probe\u503c else if (!wasUncontended) // CAS already known to fail wasUncontended = true; // Continue after rehash //\u91cd\u65b0\u8ba1\u7b97\u4e86hash\u503c\u540e\uff0c\u5bf9\u5e94\u7684\u6876\u4f4d\u4f9d\u7136\u4e0d\u4e3a\u7a7a\uff0c\u5bf9value\u7d2f\u52a0 //\u6210\u529f\u5219\u7ed3\u675f\u5faa\u73af //\u5931\u8d25\u5219\u7ee7\u7eed\u4e0b\u9762\u5224\u65ad else if (U.compareAndSwapLong(a, CELLVALUE, v = a.value, v + x)) break; //\u6570\u7ec4\u88ab\u522b\u7684\u7ebf\u7a0b\u6539\u53d8\u4e86\uff0c\u6216\u8005\u6570\u7ec4\u957f\u5ea6\u8d85\u8fc7\u4e86\u53ef\u7528cpu\u5927\u5c0f\uff0c\u91cd\u65b0\u8ba1\u7b97\u7ebf\u7a0bhash\u503c\uff0c\u5426\u5219\u7ee7\u7eed\u4e0b\u4e00\u4e2a\u5224\u65ad else if (counterCells != as || n >= NCPU) collide = false; // At max size or stale //\u5f53\u6ca1\u6709\u51b2\u7a81\uff0c\u4fee\u6539\u4e3a\u6709\u51b2\u7a81\uff0c\u5e76\u91cd\u65b0\u8ba1\u7b97\u7ebf\u7a0bhash\uff0c\u7ee7\u7eed\u5faa\u73af else if (!collide) collide = true; //\u5982\u679cCounterCell\u7684\u6570\u7ec4\u957f\u5ea6\u6ca1\u6709\u8d85\u8fc7cpu\u6838\u6570\uff0c\u5bf9\u6570\u7ec4\u8fdb\u884c\u4e24\u500d\u6269\u5bb9 //\u5e76\u7ee7\u7eed\u5faa\u73af else if (cellsBusy == 0 && U.compareAndSwapInt(this, CELLSBUSY, 0, 1)) { try { if (counterCells == as) {// Expand table unless stale CounterCell[] rs = new CounterCell[n << 1]; for (int i = 0; i < n; ++i) rs[i] = as[i]; counterCells = rs; } } finally { cellsBusy = 0; } collide = false; continue; // Retry with expanded table } h = ThreadLocalRandom.advanceProbe(h); } //CounterCell\u6570\u7ec4\u4e3a\u7a7a\uff0c\u5e76\u4e14\u6ca1\u6709\u7ebf\u7a0b\u5728\u521b\u5efa\u6570\u7ec4\uff0c\u4fee\u6539\u6807\u8bb0\uff0c\u5e76\u521b\u5efa\u6570\u7ec4 else if (cellsBusy == 0 && counterCells == as && U.compareAndSwapInt(this, CELLSBUSY, 0, 1)) { boolean init = false; try { // Initialize table if (counterCells == as) { CounterCell[] rs = new CounterCell[2]; rs[h & 1] = new CounterCell(x); counterCells = rs; init = true; } } finally { cellsBusy = 0; } if (init) break; } //\u6570\u7ec4\u4e3a\u7a7a\uff0c\u5e76\u4e14\u6709\u522b\u7684\u7ebf\u7a0b\u5728\u521b\u5efa\u6570\u7ec4\uff0c\u90a3\u4e48\u5c1d\u8bd5\u5bf9baseCount\u505a\u7d2f\u52a0\uff0c\u6210\u529f\u5c31\u9000\u51fa\u5faa\u73af\uff0c\u5931\u8d25\u5c31\u7ee7\u7eed\u5faa\u73af else if (U.compareAndSwapLong(this, BASECOUNT, v = baseCount, v + x)) break; // Fall back on using base } } // \u7edf\u8ba1\u5f53\u524dtable\u4e2dkey-value\u4e2a\u6570 final long sumCount() { CounterCell[] as = counterCells; CounterCell a; long sum = baseCount; if (as != null) { for (int i = 0; i < as.length; ++i) { if ((a = as[i]) != null) sum += a.value; } } return sum; } /** * \u6876\u6269\u5bb9 * @param tab \u539f\u6876 * @param nextTab \u534f\u52a9\u6269\u5bb9\u6876 */ private final void transfer(Node<K,V>[] tab, Node<K,V>[] nextTab) { int n = tab.length, stride; // \u5c06length/8, \u7136\u540e\u9664\u4ee5CPU\u6838\u6570\u3002\u5982\u679c\u5f97\u5230\u7684\u7ed3\u679c\u5c0f\u4e8e16, \u90a3\u4e48\u5c31\u4f7f\u752816\u3002 // \u76ee\u7684\uff1a\u8ba9\u6bcf\u4e2aCPU\u5904\u7406\u7684\u6876\u4e00\u6837\u591a, \u907f\u514d\u51fa\u73b0\u8f6c\u79fb\u4efb\u52a1\u4e0d\u5747\u5300\u7684\u73b0\u8c61\u3002 // \u5982\u679c\u6876\u8f83\u5c11\u7684\u8bdd, \u9ed8\u8ba4\u4e00\u4e2a CPU\uff08\u4e00\u4e2a\u7ebf\u7a0b\uff09\u5904\u7406 16 \u4e2a\u6876 if ((stride = (NCPU > 1) ? (n >>> 3) / NCPU : n) < MIN_TRANSFER_STRIDE) stride = MIN_TRANSFER_STRIDE; // subdivide range if (nextTab == null) { // initiating try { // \u6269\u5bb92\u500d @SuppressWarnings(\"unchecked\") Node<K,V>[] nt = (Node<K,V>[])new Node<?,?>[n << 1]; nextTab = nt; } catch (Throwable ex) { // try to cope with OOME sizeCtl = Integer.MAX_VALUE; return; } // \u4fdd\u5b58\u65b0\u8868\u5728\u6210\u5458\u53d8\u91cf\u4e2d nextTable = nextTab; // transferIndex\u5c5e\u4e8e\u6210\u5458\u53d8\u91cf\uff0ctransferIndex-1 \u4ee3\u8868\u5f53\u524d\u7ebf\u7a0b\u6269\u5bb9\u65f6\u5728\u65e7table\u4e2d\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u5411\u524d\u79fb\u52a8 transferIndex = n; } int nextn = nextTab.length; // \u521b\u5efa\u4e00\u4e2afwd\u8282\u70b9, \u7528\u4e8e\u5360\u4f4d\u3002 // \u5f53\u5176\u4ed6\u7ebf\u7a0b\u53d1\u73b0\u8fd9\u4e2a\u69fd\u4f4d\u4e2d\u662ffwd\u7c7b\u578b\u7684\u8282\u70b9, \u5219\u8df3\u8fc7\u8fd9\u4e2a\u8282\u70b9\u3002 ForwardingNode<K,V> fwd = new ForwardingNode<K,V>(nextTab); boolean advance = true; // \u7528\u6765\u6807\u8bb0\u662f\u5426\u5b8c\u6210\uff0c\u65b9\u4fbf\u63d0\u4ea4\u66f4\u6539 boolean finishing = false; // to ensure sweep before committing nextTab for (int i = 0, bound = 0;;) { Node<K,V> f; int fh; // \u5148\u83b7\u53d6\u9501\u5b9a\u4e00\u4e0b\u8f6c\u79fb\u6570\u636e\u8868\u7684\u7d22\u5f15\u8303\u56f4\u503cbound ~ i while (advance) { int nextIndex, nextBound; if (--i >= bound || finishing) // \u4e0d\u505c\u5f80\u524d\u79fb\u52a8\u8868\u7d22\u5f15 advance = false; else if ((nextIndex = transferIndex) <= 0) { // \u5982\u679c\u662f<= 0\uff0c\u8868\u660e\u8f6c\u79fb\u5168\u90e8\u5b8c\u6210 i = -1; advance = false; } else if (U.compareAndSwapInt (this, TRANSFERINDEX, nextIndex, nextBound = (nextIndex > stride ? nextIndex - stride : 0))) { // transferIndex\u51cf\u53bb\u6b65\u4f10stride\uff0c\u4e0b\u4e2a\u7ebf\u7a0b\u5c31\u4ece\u65b0\u7684\u7d22\u5f15\u5904nextBound\u8f6c\u79fb\u6570\u636e bound = nextBound; i = nextIndex - 1; advance = false; } } if (i < 0 || i >= n || i + n >= nextn) { int sc; if (finishing) { // \u5c06\u65b0\u8868\u66ff\u6362\u65e7\u8868 nextTable = null; table = nextTab; // \u6269\u5bb9\u5b8c\u6210\u540e\uff0c\u91cd\u65b0\u8ba1\u7b97\u6269\u5bb9\u9608\u503c // sizeCtl = 2n - n/2 = 1.5n = 2n*0.75 sizeCtl = (n << 1) - (n >>> 1); return; } // \u5f53\u524d\u7684\u7ebf\u7a0b\u5b8c\u6210\u5176\u6240\u8d1f\u8d23\u7684\u5206\u533a\u7684\u8fc1\u79fb\uff0csizeCtl = sc-1, // \u8fd9\u6837\u6b63\u5728\u8fdb\u884c\u6269\u5bb9\u7684\u7ebf\u7a0b\u6570\u5c31\u51cf\u4e00 if (U.compareAndSwapInt(this, SIZECTL, sc = sizeCtl, sc - 1)) { // \u56e0\u4e3a\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u6269\u5bb9\u65f6\uff0csc = resizeStamp(n)<< RESIZE_STAMP_SHIFT + 2 // \u56e0\u6b64\u5982\u679c sc-2 == resizeStamp(n)<< RESIZE_STAMP_SHIFT // \u8bf4\u660e\u6240\u6709\u7ebf\u7a0b\u90fd\u5b8c\u6210\u5404\u81ea\u5206\u533a\u8fc1\u79fb\uff0c\u5373\u6574\u4e2atable\u7684\u6269\u5bb9\u64cd\u4f5c\u5b8c\u6210 // \u53cd\u4e4b\uff0c\u5219\u8fd8\u6709\u7ebf\u7a0b\u672a\u5b8c\u6210\uff0c\u76f4\u63a5return if ((sc - 2) != resizeStamp(n) << RESIZE_STAMP_SHIFT) return; // \u8f6c\u79fb\u5b8c\u6210 finishing = advance = true; i = n; // recheck before commit } } else if ((f = tabAt(tab, i)) == null) // \u5982\u539f\u6765\u7684\u8868\u6ca1\u6709\u6570\u636e\uff0c\u5219\u76f4\u63a5\u8bbe\u7f6e\u4e00\u4e2a\u8f6c\u79fb\u8282\u70b9\u5230\u65e7\u8868\u4e2d advance = casTabAt(tab, i, null, fwd); else if ((fh = f.hash) == MOVED) // \u6709\u53ef\u80fd\u5176\u4ed6\u7684\u7ebf\u7a0b\u5df2\u7ecf\u5904\u7406\u8fc7 advance = true; // already processed else { // \u9501\u5b9a\u8868\u4e2d\u5bf9\u5e94\u6876\uff0c\u7136\u540e\u8fdb\u884c\u6570\u636e\u8f6c\u79fb\uff0c\u5143\u7d20\u8981\u4e0d\u8fd8\u5728\u539f\u6765i\u5bf9\u5e94\u7684\u4f4e\u4f4d\u6876\uff0c\u8981\u4e0d\u5c31\u5728\u9ad8\u4f4d(i+n)\u5bf9\u5e94\u6876 synchronized (f) { if (tabAt(tab, i) == f) { // \u4e8c\u6b21\u786e\u8ba4\uff0c\u9632\u6b62\u88ab\u5176\u4ed6\u7ebf\u7a0b\u62a2 Node<K,V> ln, hn; if (fh >= 0) { // hash\u503c\u5927\u4e8e0\uff0c\u666e\u901a\u7684\u94fe\u8868 /* f 1 2 3 4 5 6 0 x 0 x x x x (x>0) \u5047\u8bbe\u7b2c\u4e8c\u5217\u4ee3\u8868\u76f8\u5e94\u8282\u70b9hash & n\u7684\u7ed3\u679c \u5219 =0\u7684\u8282\u70b9\u5728\u65b0table\u4e2d\u4f9d\u65e7\u4f4d\u4e8ei\u4f4d\u7f6e\uff0c=x\u7684\u8282\u70b9\u5728\u65b0table\u4e2d\u4f4d\u7f6e\u5219\u4f4d\u4e8ei+n 4\u53f7\u8282\u70b9\u5373\u662flastRun,\u56e0\u4e3a\u5176\u540e\u7684\u6240\u6709\u8282\u70b9\u7684hash\u503c\u90fd\u4e3ax\uff0c\u8fd9\u6837\u53ef\u4ee5\u76f4\u63a5\u5c06 4\u53f7\u8282\u70b9\u5373\u4e4b\u540e\u7684\u6240\u6709\u8282\u70b9\u90fd\u8fc1\u79fb\u5230\u65b0table\u4e2di+n\u4f4d\u7f6e\uff0c\u76f8\u6bd4\u6bcf\u4e2a\u8282\u70b9\u90fd\u8981\u5224\u65ad\u4e00\u6b21\uff0c\u51cf\u5c11\u4e86\u8fc1\u79fb\u6b21\u6570 */ int runBit = fh & n; Node<K,V> lastRun = f; for (Node<K,V> p = f.next; p != null; p = p.next) { int b = p.hash & n; if (b != runBit) { runBit = b; lastRun = p; } } if (runBit == 0) {//\u8bf4\u660e\u540e\u9762\u4e00\u6279\u8282\u70b9\u7684 hash&n \u7684\u7ed3\u679c\u90fd\u4e3a0 ln = lastRun; hn = null; } else { //\u8bf4\u660e\u540e\u9762\u4e00\u6279\u8282\u70b9\u7684 hash&n \u7684\u7ed3\u679c\u90fd\u4e3ax hn = lastRun; ln = null; } // \u91cd\u65b0\u5efa\u7acb\u65b0\u94fe\u8868 for (Node<K,V> p = f; p != lastRun; p = p.next) { // \u904d\u5386\u5230lastRun\u5373\u53ef\uff0c\u540e\u9762\u7684\u8282\u70b9\u4e00\u5b9a\u548clastRun\u5904\u4e8e\u540c\u4e00\u4e2a\u94fe\u8868\u4e2d int ph = p.hash; K pk = p.key; V pv = p.val; if ((ph & n) == 0) ln = new Node<K,V>(ph, pk, pv, ln); // (cur:key-value) -> ln, \u7136\u540e ln = cur else hn = new Node<K,V>(ph, pk, pv, hn); // (cur2:key-value) -> hn, \u7136\u540e hn = cur2 } // \u8bbe\u7f6e\u65b0\u8868\u4f4e\u4f4d\u3001\u9ad8\u4f4d\u7684\u5934\uff0c\u5e76\u5c06\u539f\u6765\u7684\u8282\u70b9\u8bbe\u7f6e\u4e3a\u8f6c\u79fb\u8282\u70b9 setTabAt(nextTab, i, ln); setTabAt(nextTab, i + n, hn); setTabAt(tab, i, fwd); advance = true; } else if (f instanceof TreeBin) { // \u4e8c\u53c9\u6811 TreeBin<K,V> t = (TreeBin<K,V>)f; TreeNode<K,V> lo = null, loTail = null; TreeNode<K,V> hi = null, hiTail = null; int lc = 0, hc = 0; // \u5c06\u4e8c\u53c9\u6811\u7684\u8282\u70b9\u5206\u6210\u4f4e\u4f4d\u5143\u7d20\u548c\u9ad8\u4f4d\u5143\u7d20\u94fe\u8868 for (Node<K,V> e = t.first; e != null; e = e.next) { int h = e.hash; TreeNode<K,V> p = new TreeNode<K,V> (h, e.key, e.val, null, null); if ((h & n) == 0) { // \u4f4e\u4f4d\u5143\u7d20 if ((p.prev = loTail) == null) lo = p; else loTail.next = p; loTail = p; ++lc; } else { // \u9ad8\u4f4d\u5143\u7d20 if ((p.prev = hiTail) == null) hi = p; else hiTail.next = p; hiTail = p; ++hc; } } // \u5982\u679c\u5143\u7d20\u94fe\u8868\u6570\u91cf\u5c0f\u4e8e6\uff0c\u5219\u9000\u5316\u6210\u94fe\u8868\uff0c\u5426\u5219\u5c31\u751f\u4ea7\u4e8c\u53c9\u6811 ln = (lc <= UNTREEIFY_THRESHOLD) ? untreeify(lo) : (hc != 0) ? new TreeBin<K,V>(lo) : t; hn = (hc <= UNTREEIFY_THRESHOLD) ? untreeify(hi) : (lc != 0) ? new TreeBin<K,V>(hi) : t; // \u8bbe\u7f6e\u65b0\u8868\u7684\u5934\uff0c\u5e76\u4e14\u5c06\u65e7\u8868\u8bbe\u7f6e\u4e3a\u8f6c\u79fb\u8282\u70b9 setTabAt(nextTab, i, ln); setTabAt(nextTab, i + n, hn); setTabAt(tab, i, fwd); advance = true; } } } } } } final Node<K,V>[] helpTransfer(Node<K,V>[] tab, Node<K,V> f) { Node<K,V>[] nextTab; int sc; if (tab != null && (f instanceof ForwardingNode) && (nextTab = ((ForwardingNode<K,V>)f).nextTable) != null) { int rs = resizeStamp(tab.length); while (nextTab == nextTable && table == tab && (sc = sizeCtl) < 0) { if ((sc >>> RESIZE_STAMP_SHIFT) != rs || sc == rs + 1 || sc == rs + MAX_RESIZERS || transferIndex <= 0) break; // \u5c1d\u8bd5\u7ed9sizeCtl\u8d4b\u65b0\u503c\uff0c\u5176\u7ed3\u679c\u7684\u4f4e16\u4f4d\u4f1a\u52a01\uff0c\u8868\u660e\u6b63\u5728\u6269\u5bb9\u7684\u7ebf\u7a0b\u6570+1 if (U.compareAndSwapInt(this, SIZECTL, sc, sc + 1)) { transfer(tab, nextTab); break; } } return nextTab; } return table; }","title":"ConcurrentHashMap"},{"location":"Java/3_SourceCode/#threadpoolexecutor","text":"run state // \u8fd9\u91cc\u8bbe\u7f6ectl\u7c7b\u578b\u4e3aAtomicInteger\uff0c\u5176\u5185\u90e8\u57fa\u4e8eCAS+volatile\u5b9e\u73b0\uff0cCAS\u4fdd\u8bc1\u539f\u5b50\u6027\uff0cvolatile\u4fdd\u8bc1\u53ef\u89c1\u6027 // \u56e0\u4e3a\u72b6\u6001\u7684\u8bbf\u95ee\u7c7b\u578b\u662f\u8bfb\u591a\u5199\u5c11\uff0c\u91c7\u7528CAS+volatile\u8981\u6bd4synchronized\u5f00\u9500\u66f4\u5c11; // \u7531\u4e8eCAS\u53ea\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u53d8\u91cf\u8bfb\u5199\u7684\u539f\u5b50\u6027\uff0c\u56e0\u6b64\u8fd9\u91cc\u7528\u4e00\u4e2a\u53d8\u91cf\u6765\u8868\u793a\u4e24\u79cd\u5171\u4eab\u7279\u5f81(\u8fd0\u884c\u72b6\u6001\u548c\u7ebf\u7a0b\u6570\u91cf) private final AtomicInteger ctl = new AtomicInteger(ctlOf(RUNNING, 0)); private static final int COUNT_BITS = Integer.SIZE - 3; private static final int CAPACITY = (1 << COUNT_BITS) - 1; // runState is stored in the high-order bits private static final int RUNNING = -1 << COUNT_BITS; private static final int SHUTDOWN = 0 << COUNT_BITS; private static final int STOP = 1 << COUNT_BITS; private static final int TIDYING = 2 << COUNT_BITS; private static final int TERMINATED = 3 << COUNT_BITS; // Packing and unpacking ctl private static int runStateOf(int c) { return c & ~CAPACITY; } private static int workerCountOf(int c) { return c & CAPACITY; } private static int ctlOf(int rs, int wc) { return rs | wc; } execute public void execute(Runnable command) { if (command == null) throw new NullPointerException(); /* * Proceed in 3 steps: * * 1. If fewer than corePoolSize threads are running, try to * start a new thread with the given command as its first * task. The call to addWorker atomically checks runState and * workerCount, and so prevents false alarms that would add * threads when it shouldn't, by returning false. * * 2. If a task can be successfully queued, then we still need * to double-check whether we should have added a thread * (because existing ones died since last checking) or that * the pool shut down since entry into this method. So we * recheck state and if necessary roll back the enqueuing if * stopped, or start a new thread if there are none. * * 3. If we cannot queue task, then we try to add a new * thread. If it fails, we know we are shut down or saturated * and so reject the task. */ int c = ctl.get(); if (workerCountOf(c) < corePoolSize) { if (addWorker(command, true)) // \u8fd9\u91cc\u628a\u7ebf\u7a0b\u6c60\u72b6\u6001\u68c0\u6d4b\u7559\u5728addWorker\u65b9\u6cd5\u91cc\u8fdb\u884c return; // \u8bf4\u660e\u521b\u5efa\u6838\u5fc3\u7ebf\u7a0b\u5931\u8d25 c = ctl.get(); } if (isRunning(c) && workQueue.offer(command)) {//offer\u5c1d\u8bd5\u6dfb\u52a0\u5143\u7d20\uff0c\u82e5\u961f\u5217\u5df2\u6ee1\uff0c\u8fd4\u56defalse int recheck = ctl.get(); // \u5982\u679c\u7ebf\u7a0b\u6c60\u72b6\u6001\u4e0d\u4e3aRUNNING\uff0c\u4e14\u4eceworkQueue\u4e2d\u6210\u529f\u5220\u9664command // remove\u65b9\u6cd5\u4e2d\u4f1a\u8c03\u7528tryTerminate()\u65b9\u6cd5 if (! isRunning(recheck) && remove(command)) reject(command); else if (workerCountOf(recheck) == 0) // \u5f53\u524d\u5de5\u4f5c\u7ebf\u7a0b\u6570\u91cf\u4e3a0 addWorker(null, false); // \u521b\u5efa\u4e00\u4e2a\u975e\u6838\u5fc3\u7ebf\u7a0b } else if (!addWorker(command, false)) // \u521b\u5efa\u4e00\u4e2a\u975e\u6838\u5fc3\u7ebf\u7a0b\u5931\u8d25\uff0c\u5219\u8c03\u7528reject reject(command); } /* firstTask\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u65b0\u589e\u7684\u7ebf\u7a0b\u6267\u884c\u7684\u7b2c\u4e00\u4e2a\u4efb\u52a1\uff0c\u8be5\u53c2\u6570\u53ef\u4ee5\u4e3a\u7a7a\uff1b core\u53c2\u6570\u4e3atrue\u8868\u793a\u5728\u65b0\u589e\u7ebf\u7a0b\u65f6\u4f7f\u7528corePoolSize\u4f5c\u4e3a\u7ebf\u7a0b\u6c60\u5bb9\u91cf\u8fb9\u754c\uff0c false\u8868\u793a\u4f7f\u7528maximumPoolSize\u4f5c\u4e3a\u8fb9\u754c */ private boolean addWorker(Runnable firstTask, boolean core) { retry: for (;;) { int c = ctl.get(); int rs = runStateOf(c); // Check if queue empty only if necessary. /* \u5982\u679c\u7ebf\u7a0b\u6c60\u72b6\u6001\u4e0d\u4e3aRUNNING\uff0c\u4e14\u6ee1\u8db3\u4e0b\u9762\u4efb\u610f\u4e00\u4e2a\u6761\u4ef6: \u7ebf\u7a0b\u6c60\u72b6\u6001==SHUTDOWN\uff1bfirstTask\u4e3a\u7a7a\uff1b\u5b58\u50a8\u4efb\u52a1\u7684workQueue\u4e3a\u7a7a \u5219\u8fd4\u56defalse, \u8868\u793a\u6dfb\u52a0\u5de5\u4f5c\u7ebf\u7a0b\u5931\u8d25 */ if (rs >= SHUTDOWN && ! (rs == SHUTDOWN && firstTask == null && ! workQueue.isEmpty())) return false; for (;;) { int wc = workerCountOf(c); // \u68c0\u67e5\u5de5\u4f5c\u7ebf\u7a0b\u6570\u91cf\u662f\u5426\u8d85\u8fc7\u6700\u5927\u5bb9\u91cf\uff0c\u6216\u8005\u8d85\u8fc7\u8bbe\u5b9a\u7684\u8fb9\u754c if (wc >= CAPACITY || wc >= (core ? corePoolSize : maximumPoolSize)) return false; // \u5229\u7528CAS\u589e\u52a0work thread\u6570\u91cf if (compareAndIncrementWorkerCount(c)) break retry; c = ctl.get(); // Re-read ctl if (runStateOf(c) != rs) // \u6765\u5230\u8fd9\u4e00\u6b65\u8bf4\u660ecas\u5931\u8d25\uff0c continue retry; // \u5982\u679c\u6b64\u65f6\u8fd0\u884c\u72b6\u6001\u4e0e\u4e4b\u524d\u4e0d\u540c\uff0c\u4e0d\u518d\u662fRUNNING // else CAS failed due to workerCount change; retry inner loop } } boolean workerStarted = false; // \u7ebf\u7a0b\u662f\u5426\u6210\u529f\u542f\u52a8\u6807\u5fd7 boolean workerAdded = false; // \u7ebf\u7a0b\u662f\u5426\u6210\u529f\u6dfb\u52a0\u5230hashSet\u4e2d\u7684\u6807\u5fd7 Worker w = null; // Worker\u662fThreadPoolExecutor\u4e2d\u7684\u79c1\u6709\u5185\u90e8\u7c7b\uff0c\u7ee7\u627f\u4e86AQS\uff0c\u5b9e\u73b0\u4e86Runnable try { /* \u5728Worker\u7684\u6784\u9020\u65b9\u6cd5\u4e2d\uff0c\u5c06firstTask\u8d4b\u503c\u7ed9\u5176firstTask\u5b57\u6bb5\uff1b \u8c03\u7528threadFactory\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\u8d4b\u503c\u7ed9\u5176thread\u5b57\u6bb5\uff0c\u540c\u65f6\u5c06\u5f53\u524dWorker\u5bf9\u8c61\u4f20\u9012\u7ed9\u8be5thread\uff1b */ w = new Worker(firstTask); final Thread t = w.thread; if (t != null) { final ReentrantLock mainLock = this.mainLock; mainLock.lock(); // \u8fd9\u91cc\u4e0a\u9501\u662f\u56e0\u4e3a\u4e0b\u9762\u4ee3\u7801\u5757\u4f1a\u4fee\u6539hashSet\u5bf9\u8c61 workers // \u800chashSet\u7c7b\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684 try { // Recheck while holding lock. // Back out on ThreadFactory failure or if // shut down before lock acquired. int rs = runStateOf(ctl.get()); /* \u5f53\u524drs=RUNNING,\u6216\u8005rs=SHUTDOWN,\u4e14firstTask=null \u610f\u5473\u7740\u8981\u4eceworkQueue\u4e2d\u53d6\u51fa\u4efb\u52a1 */ if (rs < SHUTDOWN || (rs == SHUTDOWN && firstTask == null)) { if (t.isAlive()) // precheck that t is startable throw new IllegalThreadStateException(); workers.add(w); // workers\u662f\u4e00\u4e2ahashSet int s = workers.size(); // largeestPoolSize\u5b57\u6bb5\u8bb0\u5f55\u7684\u662f\u7ebf\u7a0b\u6c60\u4e2d\u51fa\u73b0\u8fc7\u7684\u6700\u591a\u7684\u7ebf\u7a0b\u6570\u91cf if (s > largestPoolSize) largestPoolSize = s; workerAdded = true; } } finally { mainLock.unlock(); } if (workerAdded) { t.start(); // \u7ebf\u7a0b\u521b\u5efa\u6210\u529f\uff0c\u542f\u52a8\u7ebf\u7a0b\uff0c\u4f1a\u8c03\u7528w\u7684run()\u65b9\u6cd5\uff0c\u5176\u4e2d\u53c8\u4f1a\u8c03\u7528\u5916\u90e8\u7684runWorker\u65b9\u6cd5 workerStarted = true; } } } finally { if (! workerStarted) // \u7ebf\u7a0b\u542f\u52a8\u5931\u8d25 addWorkerFailed(w); } return workerStarted; } final void runWorker(Worker w) { Thread wt = Thread.currentThread(); Runnable task = w.firstTask; w.firstTask = null; w.unlock(); // allow interrupts boolean completedAbruptly = true; try { while (task != null || (task = getTask()) != null) { w.lock(); // If pool is stopping, ensure thread is interrupted; // if not, ensure thread is not interrupted. This // requires a recheck in second case to deal with // shutdownNow race while clearing interrupt if ((runStateAtLeast(ctl.get(), STOP) || // \u5224\u65ad\u7ebf\u7a0b\u6c60run state (Thread.interrupted() && // \u68c0\u67e5\u5f53\u524d\u7ebf\u7a0b\u662f\u5426\u4e2d\u65ad\uff0c\u6e05\u9664\u4e2d\u65ad\u6807\u5fd7 runStateAtLeast(ctl.get(), STOP))) && //\u5224\u65ad\u7ebf\u7a0b\u6c60run state !wt.isInterrupted()) //\u5230\u6b64\u8bf4\u660e\u5f53\u524d\u8c03\u7528\u8005\u7ebf\u7a0b\u88ab\u4e2d\u65ad\uff0c\u7ebf\u7a0b\u6c60\u5904\u4e8eSTOP wt.interrupt(); // \u786e\u4fdd\u5de5\u4f5c\u7ebf\u7a0b\u88ab\u4e2d\u65ad try { beforeExecute(wt, task); // \u7531user\u91cd\u5199 Throwable thrown = null; try { task.run(); } catch (RuntimeException x) { thrown = x; throw x; } catch (Error x) { thrown = x; throw x; } catch (Throwable x) { thrown = x; throw new Error(x); } finally { afterExecute(task, thrown); } } finally { task = null; w.completedTasks++; w.unlock(); } } completedAbruptly = false; //\u8bf4\u660eworker\u6b63\u5e38\u6267\u884c\u5b8c\u4efb\u52a1\u9000\u51fa } finally { // \u5982\u679cfirstTask\u4e3anull,\u4e14\u4eceworkQueue\u4e2d\u83b7\u53d6\u4efb\u52a1\u5931\u8d25\uff0c\u4e5f\u8fd4\u56denull // \u5219 completedAbruptly=true, \u5219\u5728processWorkerExit\u4e2d\u4f1a\u79fb\u9664worker,\u5e76\u51cf\u5c11workerCount processWorkerExit(w, completedAbruptly); } } /** * Rolls back the worker thread creation. * - removes worker from workers, if present * - decrements worker count * - rechecks for termination, in case the existence of this * worker was holding up termination */ private void addWorkerFailed(Worker w) { final ReentrantLock mainLock = this.mainLock; mainLock.lock(); try { if (w != null) workers.remove(w); decrementWorkerCount(); tryTerminate(); // \u5f53\u51cf\u5c11\u5de5\u4f5c\u7ebf\u7a0b\u6570\u91cf\u6216\u79fb\u9664\u4efb\u52a1\u65f6\uff0c\u90fd\u4f1a\u5c1d\u8bd5\u7ec8\u7ed3\u7ebf\u7a0b\u6c60 } finally { mainLock.unlock(); } } private Runnable getTask() { boolean timedOut = false; // Did the last poll() time out? for (;;) { int c = ctl.get(); int rs = runStateOf(c); // Check if queue empty only if necessary. /* decrementWorkerCount\u4e0ecompareAndDecrementWorkerCount\u533a\u522b: \u524d\u8005\u8c03\u7528\u540e\u8005\uff0c\u5e76\u4e14\u5904\u4e8e\u81ea\u65cb\uff0c\u53ea\u6709\u540e\u8005\u8fd4\u56detrue\uff0c\u624d\u80fd\u8fd4\u56de; \u8fd9\u91cc\u5982\u679c\u7ebf\u7a0b\u6c60 run state>=SHUTDOWN, \u4e14run state>=STOP \u6216 \u4efb\u52a1\u961f\u5217\u4e3a\u7a7a\uff0c \u5219\u5bf9workCount\u51cf\u4e00\uff0c\u8fd4\u56denull */ if (rs >= SHUTDOWN && (rs >= STOP || workQueue.isEmpty())) { decrementWorkerCount(); return null; } int wc = workerCountOf(c); // Are workers subject to culling? // \u5982\u679c \u5141\u8bb8\u6838\u5fc3\u7ebf\u7a0b\u8d85\u65f6\u6216\u8005wc>\u6838\u5fc3\u7ebf\u7a0b\u6570(\u8868\u9762\u5f53\u524d\u5de5\u4f5c\u7ebf\u7a0b\u662f\u975e\u6838\u5fc3\u7ebf\u7a0b) // \u5219\u5f53\u524d\u5de5\u4f5c\u7ebf\u7a0b\u662f\u6709\u8d85\u65f6\u65f6\u95f4\u7684 boolean timed = allowCoreThreadTimeOut || wc > corePoolSize; if ((wc > maximumPoolSize || (timed && timedOut)) && (wc > 1 || workQueue.isEmpty())) { if (compareAndDecrementWorkerCount(c)) return null; continue; } try { /* \u6839\u636e\u662f\u5426\u5141\u8bb8\u8d85\u65f6\u8c03\u7528\u4e0d\u540c\u65b9\u6cd5\uff1b take\u4e3a\u4e0d\u5e26\u8d85\u65f6\u7684\u4efb\u52a1\u83b7\u53d6\u65b9\u6cd5\uff0c\u4f1a\u4e00\u76f4\u963b\u585e\u76f4\u5230\u83b7\u53d6\u4efb\u52a1 */ Runnable r = timed ? workQueue.poll(keepAliveTime, TimeUnit.NANOSECONDS) : workQueue.take(); if (r != null) return r; timedOut = true; } catch (InterruptedException retry) { timedOut = false; } } } private void processWorkerExit(Worker w, boolean completedAbruptly) { if (completedAbruptly) // If abrupt, then workerCount wasn't adjusted decrementWorkerCount(); final ReentrantLock mainLock = this.mainLock; mainLock.lock(); try { completedTaskCount += w.completedTasks; workers.remove(w); } finally { mainLock.unlock(); } tryTerminate(); int c = ctl.get(); if (runStateLessThan(c, STOP)) { if (!completedAbruptly) { int min = allowCoreThreadTimeOut ? 0 : corePoolSize; if (min == 0 && ! workQueue.isEmpty()) min = 1; // \u4fdd\u8bc1\u7ebf\u7a0b\u6c60\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b if (workerCountOf(c) >= min)// \u5f53\u524d\u5de5\u4f5c\u7ebf\u7a0b\u6570\u76ee\u5927\u4e8emin return; // replacement not needed } /* \u5230\u6b64\uff0c\u8bf4\u660e\u5de5\u4f5c\u7ebf\u7a0b\u56e0\u4e3a\u5f02\u5e38\u800c\u6b7b\u4ea1\uff0c\u6216 workCount < min\uff0c \u5bf9\u4e8e\u540e\u8005: \u5982\u679callowCoreThreadTimeOut=false, \u5219min=corePoolSize\uff0c \u8bf4\u660eworkCount < corePoolSize, \u800c\u5728getTask\u4e2d\uff0c\u5728\u6ee1\u8db3\u8fd0\u884c\u72b6\u6001\u524d\u63d0\u4e0b\uff0c\u6b64\u79cd\u6761\u4ef6 \u9996\u5148\u4e0d\u4f1a\u63d0\u524d\u8fd4\u56denull\uff0c\u5e76\u4e14\u5728\u4eceworkQueue\u4e2d\u53d6\u4efb\u52a1\u65f6\uff0c\u8c03\u7528\u7684\u662ftake\u65b9\u6cd5\uff0c\u4f1a\u4e00\u76f4\u963b\u585e \u76f4\u5230\u53d6\u56de\u4efb\u52a1\uff0c\u7136\u540e\u8fd4\u56de\uff0c\u4ece\u800c\u4e0d\u4f1a\u8fdb\u5165\u5230processWorkerExit\u65b9\u6cd5\u4e2d\uff1b \u56e0\u6b64allowCoreThreadTimeOut\u4e00\u5b9a\u4e3atrue\uff0c\u8bf4\u660e\u6b64\u65f6workCount < 0 \u6216 < 1; \u6240\u4ee5\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u975e\u6838\u5fc3\u7ebf\u7a0b\u6765\u5904\u7406workQueue\u4e2d\u53ef\u80fd\u5b58\u5728\u7684\u4efb\u52a1 */ addWorker(null, false); } } \u5173\u95ed\u7ebf\u7a0b\u6c60 /** * Invokes {@code shutdown} when this executor is no longer * referenced and it has no threads. */ protected void finalize() { shutdown(); } /* \u4e0d\u518d\u63a5\u6536\u65b0\u7684\u4efb\u52a1\uff0c\u5df2\u7ecf\u63a5\u6536\u7684\u4efb\u52a1\u7ee7\u7eed\u6267\u884c */ public void shutdown() { final ReentrantLock mainLock = this.mainLock; mainLock.lock(); try { checkShutdownAccess();//\u68c0\u6d4b\u8c03\u7528\u8005\u662f\u5426\u62e5\u6709\u5173\u95ed\u7ebf\u7a0b\u7684\u6743\u9650 advanceRunState(SHUTDOWN); //\u4fee\u6539\u7ebf\u7a0b\u6c60\u72b6\u6001\u4e3aSHUTDOWN interruptIdleWorkers(); // \u8c03\u7528interruptIdleWorkers(false); onShutdown(); // \u7559\u7ed9ScheduledThreadPoolExecutor\u91cd\u5199 } finally { mainLock.unlock(); } tryTerminate(); } public List< Runnable> shutdownNow() { List< Runnable> tasks; final ReentrantLock mainLock = this.mainLock; mainLock.lock(); try { checkShutdownAccess(); advanceRunState(STOP); interruptWorkers(); //\u5f3a\u5236\u5173\u95ed\u6240\u6709worker\uff0c\u5373\u4f7f\u6b63\u5728\u6267\u884c\u4efb\u52a1 /**drainQueue() Drains the task queue into a new list, normally using drainTo. But if the queue is a DelayQueue or any other kind of queue for which poll or drainTo may fail to remove some elements, it deletes them one by one. */ tasks = drainQueue(); } finally { mainLock.unlock(); } tryTerminate(); return tasks; } //onlyOne=false, \u5173\u95ed\u6240\u6709\u7a7a\u95f2\u5de5\u4f5c\u7ebf\u7a0b private void interruptIdleWorkers(boolean onlyOne) { final ReentrantLock mainLock = this.mainLock; mainLock.lock(); try { for (Worker w : workers) { Thread t = w.thread; // \u5f53\u524dworker\u6301\u6709\u7684\u7ebf\u7a0b\u6ca1\u6709\u88ab\u4e2d\u65ad\uff0c\u4e14\u6210\u529f\u83b7\u53d6worker\u7684\u9501 // \u83b7\u53d6\u9501\u5931\u8d25\uff0c\u8bf4\u660e\u5f53\u524dworker\u6b63\u5728\u6267\u884c\u4efb\u52a1 if (!t.isInterrupted() && w.tryLock()) { try { t.interrupt(); } catch (SecurityException ignore) { } finally { w.unlock(); } } if (onlyOne) break; } } finally { mainLock.unlock(); } } /** * Transitions to TERMINATED state if either (SHUTDOWN and pool * and queue empty) or (STOP and pool empty). If otherwise * eligible to terminate but workerCount is nonzero, interrupts an * idle worker to ensure that shutdown signals propagate. This * method must be called following any action that might make * termination possible -- reducing worker count or removing tasks * from the queue during shutdown. The method is non-private to * allow access from ScheduledThreadPoolExecutor. */ final void tryTerminate() { for (;;) { int c = ctl.get(); if (isRunning(c) || // current state is RUNNING, return runStateAtLeast(c, TIDYING) || // current state is TIDYING or TERMINATED, \u8bf4\u660e\u6709\u5176\u4ed6\u7ebf\u7a0b\u5728\u7ec8\u6b62 (runStateOf(c) == SHUTDOWN && ! workQueue.isEmpty())) // \u867d\u7136state=SHUTDOWN,\u4f46\u8fd8\u6709\u4efb\u52a1\u9700\u8981\u5904\u7406 return; if (workerCountOf(c) != 0) { // Eligible to terminate\uff0c\u80fd\u591f\u8fdb\u884c\u7ec8\u6b62 interruptIdleWorkers(ONLY_ONE); // \u4e2d\u65ad\u4e00\u4e2a\u7a7a\u95f2worker\uff0c\u786e\u4fdd\u5173\u95ed\u4fe1\u53f7\u7684\u4f20\u64ad return; } final ReentrantLock mainLock = this.mainLock; mainLock.lock(); try { if (ctl.compareAndSet(c, ctlOf(TIDYING, 0))) { try { terminated(); // \u4f9b\u7528\u6237\u91cd\u5199 } finally { ctl.set(ctlOf(TERMINATED, 0)); termination.signalAll(); } return; } } finally { mainLock.unlock(); } // else retry on failed CAS } }","title":"ThreadPoolExecutor"},{"location":"Java/4_JVM/","text":"Java Virtual Machine JVM\u662fJava\u6280\u672f\u7528\u4ee5\u5b9e\u73b0\u4e0e\u786c\u4ef6\u3001\u64cd\u4f5c\u7cfb\u7edf\u65e0\u5173\u7684\u5173\u952e\u90e8\u5206\uff0c\u5176\u4e0eJava\u8bed\u8a00\u6ca1\u6709\u5fc5\u7136\u8054\u7cfb\uff0c\u53ea\u4e0e\u7279\u5b9a\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u2014\u2014class\u6587\u4ef6\u683c\u5f0f\u76f8\u5173\u8054\u3002class\u6587\u4ef6\u5305\u542b\u4e86Java\u865a\u62df\u673a\u6307\u4ee4\u96c6(\u5373\u5b57\u8282\u7801)\u548c\u7b26\u53f7\u8868\uff0c\u4ee5\u53ca\u4e00\u4e9b\u8f85\u52a9\u4fe1\u606f\uff1b\u51e1\u662f\u80fd\u7528class\u6587\u4ef6\u6b63\u786e\u8868\u8fbe\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u90fd\u53ef\u4ee5\u5728Java\u865a\u62df\u673a\u4e2d\u6267\u884c\u3002 \u6570\u636e\u7c7b\u578b JVM\u53ef\u4ee5\u64cd\u4f5c\u4e24\u79cd\u6570\u636e\u7c7b\u578b:\u539f\u59cb\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b\u3002 \u539f\u59cb\u7c7b\u578b \u5305\u62ec\u6570\u503c\u7c7b\u578b(\u6574\u6570\u7c7b\u578b\u548c\u6d6e\u70b9\u7c7b\u578b)\u3001boolean\u7c7b\u578b(JVM\u6ca1\u6709\u63d0\u4f9b \u4f9bboolean\u503c\u4e13\u7528\u7684\u5b57\u8282\u7801\u6307\u4ee4\uff0c\u5728\u7f16\u8bd1\u540e\uff0c\u4f7f\u7528JVM\u4e2d\u7684int\u7c7b\u578b\u6765\u4ee3\u66ff)\u3001returnAddress\u7c7b\u578b(\u4f1a\u88abJVM\u7684jsr\u3001ret\u3001jsr_w\u6307\u4ee4\u6240\u4f7f\u7528\uff0creturnAddress\u7c7b\u578b\u7684\u503c\u6307\u5411\u4e00\u6761\u865a\u62df\u673a\u6307\u4ee4\u7684\u64cd\u4f5c\u7801\uff0c\u5728java\u8bed\u8a00\u4e2d\u5e76\u4e0d\u5b58\u5728\u5bf9\u5e94\u7684\u7c7b\u578b\uff0c\u4e5f\u65e0\u6cd5\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u4fee\u6539)\u3002 \u5f15\u7528\u7c7b\u578b \u8fd0\u884c\u65f6\u6570\u636e\u533a\u57df \u7c7b\u52a0\u8f7d\u5668 : \u5c06\u7c7b\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5206\u4e3a3\u6b65: \u52a0\u8f7d\u3001\u94fe\u63a5\u3001\u521d\u59cb\u5316\u3002 loading: \u52a0\u8f7d\u6307\u7684\u662f\u5c06\u7c7b\u7684class\u6587\u4ef6\u8bfb\u5165\u5230\u5185\u5b58\uff0c\u5e76\u4e3a\u4e4b\u521b\u5efa\u4e00\u4e2ajava.lang.Class\u5bf9\u8c61; \u7c7b\u7684\u52a0\u8f7d\u7531\u7c7b\u52a0\u8f7d\u5668\u5b8c\u6210\uff0c\u7c7b\u52a0\u8f7d\u5668\u901a\u5e38\u7531JVM\u63d0\u4f9b; \u6b64\u5916\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627fClassLoader\u57fa\u7c7b\u6765\u521b\u5efa\u81ea\u5df1\u7684\u7c7b\u52a0\u8f7d\u5668\u3002 \u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684\u7c7b\u52a0\u8f7d\u5668\uff0c\u53ef\u4ee5\u4ece\u4e0d\u540c\u6765\u6e90\u52a0\u8f7d\u7c7b\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u901a\u5e38\u6709\u5982\u4e0b\u51e0\u79cd\u6765\u6e90\uff1a \u4ece\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u52a0\u8f7dclass\u6587\u4ef6\uff1b \u4eceJAR\u5305\u52a0\u8f7dclass\u6587\u4ef6\uff0c\u5982JDBC\u7f16\u7a0b\u65f6\u7528\u5230\u7684\u6570\u636e\u5e93\u9a71\u52a8\u7c7b\u5c31\u653e\u5728JAR\u6587\u4ef6\u4e2d\uff1b \u901a\u8fc7\u7f51\u7edc\u52a0\u8f7dclass\u6587\u4ef6\uff1b \u628a\u4e00\u4e2aJava\u6e90\u6587\u4ef6\u52a8\u6001\u7f16\u8bd1\uff0c\u5e76\u6267\u884c\u52a0\u8f7d. \u7c7b\u52a0\u8f7d\u5668\u901a\u5e38\u65e0\u987b\u7b49\u5230\u201c\u9996\u6b21\u4f7f\u7528\u201d\u8be5\u7c7b\u65f6\u624d\u52a0\u8f7d\u8be5\u7c7b\uff0cJava\u865a\u62df\u673a\u89c4\u8303\u5141\u8bb8\u7cfb\u7edf\u9884\u5148\u52a0\u8f7d\u67d0\u4e9b\u7c7b. \u4e00\u65e6\u4e00\u4e2a\u7c7b\u88ab\u52a0\u8f7d\u5982JVM\u4e2d\uff0c\u540c\u4e00\u4e2a\u7c7b\u5c31\u4e0d\u4f1a\u88ab\u518d\u6b21\u8f7d\u5165\u4e86\u3002\u6b63\u5982\u4e00\u4e2a\u5bf9\u8c61\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u6807\u8bc6\u4e00\u6837\uff0c\u4e00\u4e2a\u8f7d\u5165JVM\u7684\u7c7b\u4e5f\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u6807\u8bc6\u3002 \u5728Java\u4e2d\uff0c\u4e00\u4e2a\u7c7b\u7528\u5176\u5168\u9650\u5b9a\u7c7b\u540d\uff08\u5305\u62ec\u5305\u540d\u548c\u7c7b\u540d\uff09\u4f5c\u4e3a\u6807\u8bc6\uff1b\u4f46\u5728JVM\u4e2d\uff0c\u4e00\u4e2a\u7c7b\u7528\u5176 \u5168\u9650\u5b9a\u7c7b\u540d\u548c\u5176\u7c7b\u52a0\u8f7d\u5668 \u4f5c\u4e3a\u5176\u552f\u4e00\u6807\u8bc6. VM\u9884\u5b9a\u4e49\u6709\u4e09\u79cd\u7c7b\u52a0\u8f7d\u5668\uff0c\u5f53\u4e00\u4e2a JVM\u542f\u52a8\u7684\u65f6\u5019\uff0cJava\u5f00\u59cb\u4f7f\u7528\u5982\u4e0b\u4e09\u79cd\u7c7b\u52a0\u8f7d\u5668\uff1a 1)\u6839\u7c7b\u52a0\u8f7d\u5668\uff08bootstrap class loader\uff09:\u7528\u6765\u52a0\u8f7d Java \u7684\u6838\u5fc3\u7c7b\uff08\u8d1f\u8d23\u52a0\u8f7d$JAVA_HOME\u4e2djre/lib/rt.jar\u91cc\u6240\u6709\u7684class\uff0c \u7531C++\u5b9e\u73b0\uff0c\u4e0d\u662fClassLoader\u5b50\u7c7b\uff09\u3002\u7531\u4e8e\u5f15\u5bfc\u7c7b\u52a0\u8f7d\u5668\u6d89\u53ca\u5230\u865a\u62df\u673a\u672c\u5730\u5b9e\u73b0\u7ec6\u8282\uff0c\u5f00\u53d1\u8005\u65e0\u6cd5\u76f4\u63a5\u83b7\u53d6\u5230\u542f\u52a8\u7c7b\u52a0\u8f7d\u5668\u7684\u5f15\u7528\uff0c \u6240\u4ee5\u4e0d\u5141\u8bb8\u76f4\u63a5\u901a\u8fc7\u5f15\u7528\u8fdb\u884c\u64cd\u4f5c\u3002 2)\u6269\u5c55\u7c7b\u52a0\u8f7d\u5668\uff08extensions class loader\uff09\uff1a\u5b83\u8d1f\u8d23\u52a0\u8f7dJRE\u7684\u6269\u5c55\u76ee\u5f55\uff0clib/ext\u6216\u8005\u7531java.ext.dirs\u7cfb\u7edf\u5c5e\u6027\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\u7684JAR\u5305\u7684\u7c7b\u3002 \u7531Java\u8bed\u8a00\u5b9e\u73b0\uff0c\u7236\u7c7b\u52a0\u8f7d\u5668\u4e3a bootstrap class loader, \u4f46\u7531\u4e8e\u540e\u8005\u662fC++\u5b9e\u73b0\uff0c\u4e0d\u80fd\u76f4\u63a5\u88abjava\u8bed\u6cd5\u5f15\u7528\uff0c\u6240\u4ee5\u6253\u5370\u7ed3\u679c\u4e3anull\u3002 3)\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668\uff08system class loader\uff09\uff1a\u88ab\u79f0\u4e3a\u7cfb\u7edf\uff08\u4e5f\u79f0\u4e3a\u5e94\u7528\uff09\u7c7b\u52a0\u8f7d\u5668(Applcation Classloader)\uff0c \u5b83\u8d1f\u8d23\u5728JVM\u542f\u52a8\u65f6\u52a0\u8f7d\u6765\u81eaJava\u547d\u4ee4\u7684-classpath\u9009\u9879\u3001java.class.path\u7cfb\u7edf\u5c5e\u6027\uff0c\u6216\u8005CLASSPATH\u53d8\u91cf\u6240\u6307\u5b9a\u7684JAR\u5305\u548c\u7c7b\u8def\u5f84\u3002 \u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7ClassLoader\u7684\u9759\u6001\u65b9\u6cd5getSystemClassLoader()\u6765\u83b7\u53d6\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668\u3002\u5982\u679c\u6ca1\u6709\u7279\u522b\u6307\u5b9a\uff0c \u5219\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7c7b\u52a0\u8f7d\u5668\u90fd\u4ee5\u6b64\u7c7b\u52a0\u8f7d\u5668\u4f5c\u4e3a\u7236\u52a0\u8f7d\u5668\u3002\u7531Java\u8bed\u8a00\u5b9e\u73b0\uff0c\u7236\u7c7b\u52a0\u8f7d\u5668\u4e3aExtClassLoader\u3002 \u7c7b\u52a0\u8f7d\u673a\u5236: \u5168\u76d8\u8d1f\u8d23\uff1a\u6240\u8c13\u5168\u76d8\u8d1f\u8d23\uff0c\u5c31\u662f\u5f53\u4e00\u4e2a\u7c7b\u52a0\u8f7d\u5668\u8d1f\u8d23\u52a0\u8f7d\u67d0\u4e2aClass\u65f6\uff0c\u8be5Class\u6240\u4f9d\u8d56\u548c\u5f15\u7528\u5176\u4ed6Class\u4e5f\u5c06\u7531\u8be5\u7c7b\u52a0\u8f7d\u5668\u8d1f\u8d23\u8f7d\u5165\uff0c \u9664\u975e\u663e\u793a\u4f7f\u7528\u53e6\u5916\u4e00\u4e2a\u7c7b\u52a0\u8f7d\u5668\u6765\u8f7d\u5165\u3002 \u53cc\u4eb2\u59d4\u6d3e\uff1a\u6240\u8c13\u7684\u53cc\u4eb2\u59d4\u6d3e\uff0c\u5219\u662f\u5148\u8ba9\u7236\u7c7b\u52a0\u8f7d\u5668\u8bd5\u56fe\u52a0\u8f7d\u8be5Class\uff0c\u53ea\u6709\u5728\u7236\u7c7b\u52a0\u8f7d\u5668\u65e0\u6cd5\u52a0\u8f7d\u8be5\u7c7b\u65f6\u624d\u5c1d\u8bd5\u4ece\u81ea\u5df1\u7684\u7c7b\u8def\u5f84\u4e2d\u52a0\u8f7d\u8be5\u7c7b\u3002 \u901a\u4fd7\u7684\u8bb2\uff0c\u5c31\u662f\u67d0\u4e2a\u7279\u5b9a\u7684\u7c7b\u52a0\u8f7d\u5668\u5728\u63a5\u5230\u52a0\u8f7d\u7c7b\u7684\u8bf7\u6c42\u65f6\uff0c\u9996\u5148\u5c06\u52a0\u8f7d\u4efb\u52a1\u59d4\u6258\u7ed9\u7236\u52a0\u8f7d\u5668\uff0c\u4f9d\u6b21\u9012\u5f52\uff0c\u5982\u679c\u7236\u52a0\u8f7d\u5668\u53ef\u4ee5\u5b8c\u6210\u7c7b\u52a0\u8f7d\u4efb\u52a1\uff0c \u5c31\u6210\u529f\u8fd4\u56de\uff1b\u53ea\u6709\u7236\u52a0\u8f7d\u5668\u65e0\u6cd5\u5b8c\u6210\u6b64\u52a0\u8f7d\u4efb\u52a1\u65f6\uff0c\u624d\u81ea\u5df1\u53bb\u52a0\u8f7d\u3002 \u7f13\u5b58\u673a\u5236: \u7f13\u5b58\u673a\u5236\u5c06\u4f1a\u4fdd\u8bc1\u6240\u6709\u52a0\u8f7d\u8fc7\u7684Class\u90fd\u4f1a\u88ab\u7f13\u5b58\uff0c\u5f53\u7a0b\u5e8f\u4e2d\u9700\u8981\u4f7f\u7528\u67d0\u4e2aClass\u65f6\uff0c\u7c7b\u52a0\u8f7d\u5668\u5148\u4ece\u7f13\u5b58\u533a\u4e2d\u641c\u5bfb\u8be5Class\uff0c \u53ea\u6709\u5f53\u7f13\u5b58\u533a\u4e2d\u4e0d\u5b58\u5728\u8be5Class\u5bf9\u8c61\u65f6\uff0c\u7cfb\u7edf\u624d\u4f1a\u8bfb\u53d6\u8be5\u7c7b\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u6210Class\u5bf9\u8c61\uff0c\u5b58\u5165\u7f13\u51b2\u533a\u4e2d\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4fee\u6539\u4e86Class\u540e\uff0c\u5fc5\u987b\u91cd\u65b0\u542f\u52a8JVM\uff0c\u7a0b\u5e8f\u6240\u505a\u7684\u4fee\u6539\u624d\u4f1a\u751f\u6548\u7684\u539f\u56e0\u3002 \u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\u7684\u4f18\u52bf\uff1a 1\u3001Java\u7c7b\u968f\u7740\u5b83\u7684\u7c7b\u52a0\u8f7d\u5668\u4e00\u8d77\u5177\u5907\u4e86\u4e00\u79cd\u5e26\u6709\u4f18\u5148\u7ea7\u7684\u5c42\u6b21\u5173\u7cfb\uff0c\u901a\u8fc7\u8fd9\u79cd\u5c42\u7ea7\u5173\u53ef\u4ee5\u907f\u514d\u7c7b\u7684\u91cd\u590d\u52a0\u8f7d\uff0c\u5f53\u7236\u4eb2\u5df2\u7ecf\u52a0\u8f7d\u4e86\u8be5\u7c7b\u65f6\uff0c \u5b50ClassLoader\u65e0\u9700\u91cd\u590d\u52a0\u8f7d\u3002 2\u3001\u8003\u8651\u5230\u5b89\u5168\u56e0\u7d20\uff0cjava\u6838\u5fc3api\u4e2d\u5b9a\u4e49\u7c7b\u578b\u4e0d\u4f1a\u88ab\u968f\u610f\u66ff\u6362\uff0c\u5047\u8bbe\u8bd5\u56fe\u52a0\u8f7d\u81ea\u5b9a\u4e49\u7684java.lang.Integer\u7684\u7c7b(\u5b8c\u5168\u9650\u5b9a\u540d\u548c\u6838\u5fc3\u7c7b\u4e2d\u4e00\u81f4)\uff0c \u901a\u8fc7\u53cc\u4eb2\u59d4\u6258\u6a21\u5f0f\u4f20\u9012\u5230\u542f\u52a8\u7c7b\u52a0\u8f7d\u5668\uff0c\u800c\u6839\u7c7b\u52a0\u8f7d\u5668\u5728\u6838\u5fc3Java API\u53d1\u73b0\u8fd9\u4e2a\u540d\u5b57\u7684\u7c7b\uff0c\u53d1\u73b0\u8be5\u7c7b\u5df2\u88ab\u52a0\u8f7d\uff0c \u5219\u4e0d\u4f1a\u91cd\u65b0\u52a0\u8f7d\u8bf7\u6c42\u7684java.lang.Integer,\u800c\u662f\u76f4\u63a5\u8fd4\u56de\u5df2\u52a0\u8f7d\u8fc7\u7684Integer.class\uff0c\u8fd9\u6837\u4fbf\u53ef\u4ee5\u9632\u6b62\u6838\u5fc3API\u5e93\u88ab\u968f\u610f\u7be1\u6539\u3002 Linking: \u5f53\u7c7b\u88ab\u52a0\u8f7d\u4e4b\u540e\uff0c\u7cfb\u7edf\u4e3a\u4e4b\u751f\u6210\u4e00\u4e2a\u5bf9\u5e94\u7684Class\u5bf9\u8c61\uff0c\u63a5\u7740\u5c06\u4f1a\u8fdb\u5165\u8fde\u63a5\u9636\u6bb5\uff0c\u8fde\u63a5\u9636\u6bb5\u8d1f\u8d23\u628a\u7c7b\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u5408\u5e76\u5230JRE\u4e2d\u3002 \u7c7b\u8fde\u63a5\u53c8\u53ef\u5206\u4e3a\u5982\u4e0b3\u4e2a\u9636\u6bb5: 1)\u9a8c\u8bc1\uff1a\u9a8c\u8bc1\u9636\u6bb5\u7528\u4e8e\u68c0\u9a8c\u88ab\u52a0\u8f7d\u7684\u7c7b\u662f\u5426\u6709\u6b63\u786e\u7684\u5185\u90e8\u7ed3\u6784\uff0c\u5e76\u548c\u5176\u4ed6\u7c7b\u534f\u8c03\u4e00\u81f4\u3002Java\u662f\u76f8\u5bf9C++\u8bed\u8a00\u662f\u5b89\u5168\u7684\u8bed\u8a00\uff0c \u4f8b\u5982\u5b83\u6709C++\u4e0d\u5177\u6709\u7684\u6570\u7ec4\u8d8a\u754c\u7684\u68c0\u67e5\u3002\u9a8c\u8bc1\u7684\u76ee\u7684\u5728\u4e8e\u786e\u4fddClass\u6587\u4ef6\u7684\u5b57\u8282\u6d41\u4e2d\u5305\u542b\u4fe1\u606f\u7b26\u5408\u5f53\u524d\u865a\u62df\u673a\u8981\u6c42\uff0c\u4e0d\u4f1a\u5371\u5bb3\u865a\u62df\u673a\u81ea\u8eab\u5b89\u5168\u3002 \u5176\u4e3b\u8981\u5305\u62ec\u56db\u79cd\u9a8c\u8bc1: \u6587\u4ef6\u683c\u5f0f\u9a8c\u8bc1:\u4e3b\u8981\u9a8c\u8bc1\u5b57\u8282\u6d41\u662f\u5426\u7b26\u5408Class\u6587\u4ef6\u683c\u5f0f\u89c4\u8303,\u5e76\u4e14\u80fd\u88ab\u5f53\u524d\u7684\u865a\u62df\u673a\u52a0\u8f7d\u5904\u7406\u3002\u4f8b\u5982\u4e3b\u3001\u6b21\u7248\u672c\u53f7\u662f\u5426\u5728\u5f53\u524d\u865a\u62df\u673a\u5904\u7406\u7684\u8303\u56f4\u4e4b\u5185, \u5e38\u91cf\u6c60\u4e2d\u662f\u5426\u6709\u4e0d\u88ab\u652f\u6301\u7684\u5e38\u91cf\u7c7b\u578b; \u6307\u5411\u5e38\u91cf\u7684\u4e2d\u7684\u7d22\u5f15\u503c\u662f\u5426\u5305\u542b\u4e0d\u5b58\u5728\u7684\u5e38\u91cf\u6216\u4e0d\u7b26\u5408\u7c7b\u578b\u7684\u5e38\u91cf\u3002 \u5143\u6570\u636e\u9a8c\u8bc1\uff1a\u5bf9\u5b57\u8282\u7801\u63cf\u8ff0\u7684\u4fe1\u606f\u8fdb\u884c\u8bed\u4e49\u7684\u5206\u6790\uff0c\u5206\u6790\u662f\u5426\u7b26\u5408java\u7684\u8bed\u8a00\u8bed\u6cd5\u7684\u89c4\u8303\u3002 \u5b57\u8282\u7801\u9a8c\u8bc1\uff1a\u6700\u91cd\u8981\u7684\u9a8c\u8bc1\u73af\u8282\uff0c\u5206\u6790\u6570\u636e\u6d41\u548c\u63a7\u5236\uff0c\u786e\u5b9a\u8bed\u4e49\u662f\u5408\u6cd5\u7684\uff0c\u7b26\u5408\u903b\u8f91\u7684\u3002\u4e3b\u8981\u7684\u9488\u5bf9\u5143\u6570\u636e\u9a8c\u8bc1\u540e\u5bf9\u65b9\u6cd5\u4f53\u7684\u9a8c\u8bc1\u3002 \u4fdd\u8bc1\u7c7b\u65b9\u6cd5\u5728\u8fd0\u884c\u65f6\u4e0d\u4f1a\u6709\u5371\u5bb3\u51fa\u73b0\u3002 \u7b26\u53f7\u5f15\u7528\u9a8c\u8bc1\uff1a\u4e3b\u8981\u662f\u9488\u5bf9\u7b26\u53f7\u5f15\u7528\u8f6c\u6362\u4e3a\u76f4\u63a5\u5f15\u7528\u7684\u65f6\u5019\uff0c\u662f\u4f1a\u5ef6\u4f38\u5230\u7b2c\u4e09\u89e3\u6790\u9636\u6bb5\uff0c\u4e3b\u8981\u662f\u786e\u5b9a\u8bbf\u95ee\u7c7b\u578b\u7b49\u6d89\u53ca\u5230\u5f15\u7528\u7684\u60c5\u51b5\uff0c \u8981\u4fdd\u8bc1\u5f15\u7528\u4e00\u5b9a\u4f1a\u88ab\u8bbf\u95ee\u5230\uff0c\u4e0d\u4f1a\u51fa\u73b0\u7c7b\u7b49\u65e0\u6cd5\u8bbf\u95ee\u7684\u95ee\u9898\u3002 2)\u51c6\u5907\uff1a\u7c7b\u51c6\u5907\u9636\u6bb5\u8d1f\u8d23\u4e3a\u7c7b\u7684\u9759\u6001\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff0c\u5e76\u8bbe\u7f6e\u9ed8\u8ba4\u521d\u59cb\u503c\u3002 3)\u89e3\u6790\uff1a\u5c06\u7c7b\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u4e2d\u7684\u7b26\u53f7\u5f15\u7528\u66ff\u6362\u6210\u76f4\u63a5\u5f15\u7528\u3002 \u7b26\u53f7\u5f15\u7528\uff1a\u7b26\u53f7\u5f15\u7528\u662f\u4ee5\u4e00\u7ec4\u7b26\u53f7\u6765\u63cf\u8ff0\u6240\u5f15\u7528\u7684\u76ee\u6807,\u7b26\u53f7\u53ef\u4ee5\u662f\u4efb\u4f55\u5b57\u9762\u5f62\u5f0f\u7684\u5b57\u9762\u91cf\uff0c\u53ea\u8981\u4e0d\u4f1a\u51fa\u73b0\u51b2\u7a81\u80fd\u591f\u5b9a\u4f4d\u5230\u5c31\u884c\u3002\u5e03\u5c40\u548c\u5185\u5b58\u65e0\u5173\u3002 \u76f4\u63a5\u5f15\u7528\uff1a\u662f\u6307\u5411\u76ee\u6807\u7684\u6307\u9488\uff0c\u504f\u79fb\u91cf\u6216\u8005\u80fd\u591f\u76f4\u63a5\u5b9a\u4f4d\u7684\u53e5\u67c4\u3002\u8be5\u5f15\u7528\u662f\u548c\u5185\u5b58\u4e2d\u7684\u5e03\u5c40\u6709\u5173\u7684\uff0c\u5e76\u4e14\u4e00\u5b9a\u52a0\u8f7d\u8fdb\u6765\u7684\u3002 initializing: \u521d\u59cb\u5316\u662f\u4e3a\u7c7b\u7684\u9759\u6001\u53d8\u91cf\u8d4b\u4e88\u6b63\u786e\u7684\u521d\u59cb\u503c. \u7a0b\u5e8f\u8ba1\u6570\u5668/PC\u5bc4\u5b58\u5668 : \u4e0d\u540c\u7684\u7ebf\u7a0b\u7684PC\u662f\u72ec\u7acb\u7684\uff0c\u5b58\u653e\u5f53\u524d\u7ebf\u7a0b\u6b63\u5728\u6267\u884c\u7684\u65b9\u6cd5\u7684\u5b57\u8282\u7801\u6307\u4ee4\u5730\u5740\uff1b\u4f46\u5982\u679c\u8be5\u65b9\u6cd5\u662fnative\u7684\uff0c\u5219pc\u7684\u503c\u662fundefined(\u5373PC\u5bc4\u5b58\u5668\u4e3a\u7a7a)\u3002 Java\u865a\u62df\u673a\u6808 : \u751f\u547d\u5468\u671f\u4e0e\u7ebf\u7a0b\u76f8\u540c\uff0c\u7528\u4e8e\u5b58\u50a8\u6808\u5e27\uff0c\u56e0\u4e3a\u9664\u4e86stack frame\u7684\u5165\u6808\u548c\u51fa\u6808\u5916\uff0cJVM stack\u4e0d\u518d\u53d7\u5176\u5b83\u56e0\u7d20\u5f71\u54cd\uff0c\u6240\u4ee5\u6808\u5e27\u53ef\u4ee5\u5728\u5806\u4e2d\u5206\u914d\uff0cJVM stack\u4f7f\u7528\u7684\u5185\u5b58\u4e5f\u4e0d\u9700\u8981\u4fdd\u8bc1\u662f\u8fde\u7eed\u7684\uff1bJVM stack\u4e2d\u53ef\u80fd\u51fa\u73b0\u4e24\u79cd\u5f02\u5e38: \u7ebf\u7a0b\u8bf7\u6c42\u5206\u914d\u7684\u6808\u5bb9\u91cf\u5927\u4e8eJVM stack\u5bb9\u8bb8\u7684\u6700\u5927\u5bb9\u91cf\uff0c\u629b\u51faStackOverflowError\uff1b \u82e5JVM stack\u5141\u8bb8\u52a8\u6001\u6269\u5c55\u5bb9\u91cf\uff0c\u5f53\u6269\u5c55\u65f6\u65e0\u6cd5\u7533\u8bf7\u5230\u8db3\u591f\u7684\u5185\u5b58\uff0c\u5c06\u629b\u51faOutOfMemoryError. Java\u5806 : \u4f9b\u5404\u4e2a\u7ebf\u7a0b\u5171\u4eab\u7684\u8fd0\u884c\u65f6\u5185\u5b58\u533a\u57df \uff0c\u4e5f\u662f\u53ef\u4f9b\u6240\u6709\u7c7b\u5b9e\u4f8b\u548c\u6570\u7ec4\u5bf9\u8c61\u5206\u914d\u5185\u5b58\u7684\u533a\u57df\uff1b\u5728JVM\u542f\u52a8\u65f6\u88ab\u521b\u5efa\uff0c\u5b58\u50a8\u4e86\u6240\u6709\u88abGC\u7ba1\u7406\u7684\u5404\u79cd\u5bf9\u8c61\uff1bJava\u5806\u53ef\u4ee5\u5904\u4e8e\u7269\u7406\u4e0a\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\uff0c\u53ea\u9700\u8981\u903b\u8f91\u4e0a\u8fde\u7eed\u5373\u53ef\uff1b\u8fd0\u884c\u52a8\u6001\u6269\u5c55\uff0c\u4e14\u53ef\u4ee5\u81ea\u52a8\u6536\u7f29\u65e0\u7528\u7684\u7a7a\u95f4\uff0c\u5f53\u5b9e\u9645\u6240\u9700\u7684\u5806\u5927\u5c0f\u8d85\u51fa\u6700\u5927\u5bb9\u91cf\u65f6\uff0c\u629b\u51faOutOfMemory. \u65b9\u6cd5\u533a : \u540c\u6837\u5c5e\u4e8e\u7ebf\u7a0b\u7684\u5171\u4eab\u533a\u57df \uff0c\u5b58\u50a8\u4e86\u6bcf\u4e00\u4e2a\u7c7b\u7684\u7ed3\u6784\u4fe1\u606f\uff0c\u5305\u62ec\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\u3001\u5b57\u6bb5\u548c\u65b9\u6cd5\u6570\u636e\u3001\u6784\u9020\u51fd\u6570\u548c\u666e\u901a\u65b9\u6cd5\u7684\u5b57\u8282\u7801\u5185\u5bb9\uff0c\u4ee5\u53ca\u4e00\u4e9b\u5728\u7c7b\u3001\u5b9e\u4f8b\u3001\u63a5\u53e3\u521d\u59cb\u5316\u65f6\u7528\u5230\u7684\u7279\u6b8a\u65b9\u6cd5\uff1b\u5728\u5b9e\u73b0\u4e0a\uff0c\u6ca1\u6709\u89c4\u5b9a\u5982\u4f55\u5b9e\u73b0\uff0c\u7531\u4e0d\u540c\u7684\u865a\u62df\u673a\u5382\u5bb6\u81ea\u5df1\u89c9\u5f97\uff1b\u903b\u8f91\u4e0a\u662f\u5806\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u4e3a\u4e86\u4e0ejava heap\u533a\u5206\u5f00\uff0c\u4e5f\u79f0\u4e3aNon-heap(\u975e\u5806)\uff0c\u540c\u6837\u4e0d\u9700\u8981\u7269\u7406\u8fde\u7eed\u7684\u5185\u5b58\uff0c\u5141\u8bb8\u6269\u5c55\uff0c\u4f46\u53ef\u4ee5\u9009\u62e9\u4e0d\u5b9e\u73b0\u5783\u573e\u6536\u96c6\uff1b\u5f53\u5185\u5b58\u7a7a\u95f4\u4e0d\u6ee1\u8db3\u5185\u5b58\u5206\u914d\u8bf7\u6c42\u65f6\uff0c\u629b\u51faOutOfMemory\u5f02\u5e38\u3002 \u8fd0\u884c\u65f6\u5e38\u91cf\u6c60 : \u672c\u5730\u65b9\u6cd5\u6808 : \u5185\u5b58\u5206\u4ee3 JVM\u6839\u636e\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u5b58\u6d3b\u65f6\u95f4\u7684\u957f\u77ed\uff0c\u628a\u5806\u5185\u5b58\u5206\u4e3a\u65b0\u751f\u4ee3\uff08\u5305\u62ec\u4e00\u4e2aEden\u533a\u3001\u4e24\u4e2aSurvivor\u533a\uff09\u548c\u8001\u5e74\u4ee3\uff08Tenured\u6216Old\uff09\u3002 \u7ed9\u5806\u5185\u5b58\u5206\u4ee3\u662f\u4e3a\u4e86\u63d0\u9ad8\u5bf9\u8c61\u5185\u5b58\u5206\u914d\u548c\u5783\u573e\u56de\u6536\u7684\u6548\u7387\uff0c\u907f\u514d\u9891\u7e41\u56de\u6536\u5185\u5b58\u65f6\uff0c\u9700\u8981\u904d\u5386\u6240\u6709\u7684\u5bf9\u8c61; \u6c38\u4e45\u4ee3 : \u662fHotSpot jvm\u7279\u6709\u6982\u5ff5\uff0c\u662f\u65b9\u6cd5\u533a\u7684\u4e00\u79cd\u5b9e\u73b0\uff1b\u4f46\u4eceJKD1.8\u5f00\u59cb\uff0c\u5df2\u7ecf\u91c7\u7528MetaSpace\u4ee3\u66ff\u6c38\u4e45\u4ee3\uff0c\u6c38\u4e45\u4ee3\u4e2d\u7684class-metadata\u8f6c\u79fb\u5230\u672c\u5730\u5185\u5b58\u4e2d\uff0c\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\u8f6c\u79fb\u5230java heap\u4e2d. \u5185\u5b58\u5206\u914d\u62c5\u4fdd : \u5728\u771f\u6b63\u89e6\u53d1Minor GC\u4e4b\u524d\uff0cJVM\u4f1a\u5148\u53bb\u8001\u5e74\u4ee3\u4e2d\u68c0\u67e5\u6700\u5927\u53ef\u7528\u7684\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\u662f\u5426\u5927\u4e8e\u65b0\u751f\u4ee3\u4e2d\u7684\u6240\u6709\u5bf9\u8c61\u603b\u7a7a\u95f4\uff0c\u5982\u679c\u8fd9\u4e2a\u6761\u4ef6\u6210\u7acb\uff0c\u90a3\u4e48\u8fd9\u4e00\u6b21\u7684Minor GC\u662f\u5b89\u5168\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u5bf9\u8c61\u9700\u8981\u56de\u6536\uff0c\u4e14\u8001\u5e74\u4ee3\u6709\u8db3\u591f\u7684\u7a7a\u95f4(JVM\u4f1a\u53d6\u4e4b\u524d\u6bcf\u4e00\u6b21\u56de\u6536\u664b\u5347\u5230\u8001\u5e74\u4ee3\u5bf9\u8c61\u7684\u5bb9\u91cf\u7684\u5e73\u5747\u5927\u5c0f\u503c\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u8003\uff0c\u4e0e\u76ee\u524d\u8001\u5e74\u4ee3\u4e2d\u7684\u5269\u4f59\u7a7a\u95f4\u8fdb\u884c\u6bd4\u8f83\uff0c\u4ee5\u6b64\u6765\u786e\u8ba4\u672c\u6b21\u5185\u5b58\u5206\u914d\u62c5\u4fdd\u662f\u5426\u53ef\u4ee5\u6210\u529f)\uff0c\u5219\u65b0\u751f\u4ee3\u4e2d\u591a\u4f59\u7684\u5bf9\u8c61\u4f1a\u664b\u5347\u5230\u8001\u5e74\u4ee3\uff1b\u5426\u5219\u7684\u8bdd\uff0c\u5219\u4f1a\u8fdb\u884c\u4e00\u6b21major/full GC,\u8ba9\u8001\u5e74\u4ee3\u817e\u51fa\u66f4\u591a\u7a7a\u95f4\u3002 JVM\u63d0\u4f9bHandlePromotionFailure\u53c2\u6570\uff0c\u4e3atrue\u65f6\uff0c\u5219\u4f1a\u5148\u5192\u9669\u8fdb\u884cminor GC, \u5982\u679c\u5931\u8d25\u518d\u8fdb\u884c\u5206\u914d\u62c5\u4fdd\uff0c\u8fd9\u6837\u5728\u4e00\u5b9a\u7a0b\u5ea6\u53ef\u4ee5\u907f\u514d\u62c5\u4fdd\u7684\u5f00\u9500\u3002 \u2003\u5173\u4e8emajor GC\u548cfull GC, \u6982\u5ff5\u4e0a\u901a\u5e38\u6bd4\u8f83\u6df7\u4e71\uff0cfull GC\u6709\u8d44\u6599\u79f0\u5176\u662f\u9488\u5bf9\u6574\u4e2a\u5806\u8fdb\u884c\u56de\u6536\uff0c\u5305\u62ecyoung\u548cold\uff0c\u751a\u81f3\u65b9\u6cd5\u533a\u3002 \u6808\u5e27 \u5b58\u50a8\u6570\u636e\u548c\u90e8\u5206\u8fc7\u7a0b\u7ed3\u679c\uff0c\u540c\u65f6\u7528\u6765\u5904\u7406\u52a8\u6001\u94fe\u63a5\u3001\u65b9\u6cd5\u8fd4\u56de\u503c\u3001\u5f02\u5e38\u5206\u6d3e\uff1b\u968f\u7740\u65b9\u6cd5\u8c03\u7528\u800c\u521b\u5efa\uff0c\u968f\u7740\u65b9\u6cd5\u7ed3\u675f\u800c\u9500\u6bc1\uff1b stack frame\u7684\u5185\u5b58\u7a7a\u95f4\u7531\u521b\u5efa\u5b83\u7684\u7ebf\u7a0b\u5206\u914d\u5728java stack\u4e2d\uff0c\u6bcf\u4e00\u4e2astack frame\u90fd\u6709\u81ea\u5df1\u7684\u672c\u5730\u53d8\u91cf\u8868\u3001\u64cd\u4f5c\u6570\u6808\u3001\u6307\u5411\u5f53\u524d\u65b9\u6cd5\u6240\u5c5e\u7684\u7c7b\u7684\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\u7684\u5f15\u7528\u3002 \u5c40\u90e8\u53d8\u91cf\u8868 \u7c7b\u4f3cC++\u4e2d\uff0c\u901a\u8fc7\u83b7\u53d6\u7c7b\u7684\u5b58\u50a8\u5730\u5740\uff0c\u901a\u8fc7\u6307\u9488\u8bbf\u95ee\u8ba1\u7b97\u5bf9\u9f50\u540e\u53d8\u91cf\u5b58\u653e\u5730\u5740\u76f8\u5bf9\u5b58\u50a8\u5730\u5740\u7684\u504f\u79fb\uff0c\u83b7\u53d6\u5230\u53d8\u91cf\u503c\u3002 \u52a8\u6001\u94fe\u63a5 \u5bf9\u8c61\u8bbf\u95ee \u5783\u573e\u56de\u6536 \u7a0b\u5e8f\u8ba1\u6570\u5668\u3001\u865a\u62df\u673a\u6808\u3001\u672c\u5730\u65b9\u6cd5\u6808\u751f\u547d\u5468\u671f\u4e0e\u7ebf\u7a0b\u4e00\u81f4\uff1b\u6808\u4e2d\u7684\u6808\u5e27\u5206\u914d\u7684\u5185\u5b58\u5927\u5c0f\u5728\u7c7b\u7ed3\u6784\u786e\u5b9a\u65f6\u57fa\u672c\u56fa\u5b9a\uff0c\u56e0\u6b64\u8fd9\u51e0\u4e2a\u533a\u57df\u5185\u5b58\u7684\u5206\u914d\u548c\u56de\u6536\u90fd\u5177\u5907\u786e\u5b9a\u6027\u3002\u800cjava heap\u548c\u65b9\u6cd5\u533a\u4e2d\uff0c\u7531\u4e8e\u4e00\u4e2a\u63a5\u53e3\u7684\u4e0d\u540c\u5b9e\u73b0\u7c7b\u9700\u8981\u7684\u5185\u5b58\u4e0d\u4e00\u6837\uff0c\u4e00\u4e2a\u65b9\u6cd5\u7684\u4e0d\u540c\u5206\u652f\u9700\u8981\u7684\u5185\u5b58\u4e5f\u4e0d\u4e00\u6837\uff0c\u8fd9\u90e8\u5206\u5185\u5b58\u7684\u5206\u914d\u548c\u56de\u6536\u662f\u52a8\u6001\u7684\uff0cGC\u5173\u6ce8\u7684\u4e5f\u662f\u8fd9\u90e8\u5206\u5185\u5b58\u3002 \u5bf9\u8c61\u5f15\u7528 \u6839\u641c\u7d22\u7b97\u6cd5 java\u4e2d\u4f7f\u7528 GC Root Tracing \u7b97\u6cd5\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u5b58\u6d3b\uff0c\u800c\u975e \u5f15\u7528\u8ba1\u6570\u6cd5\u3002\u901a\u8fc7\u4e00\u7cfb\u5217\u540d\u4e3aGC Roots\u7684\u5bf9\u8c61\u4f5c\u4e3a\u8d77\u59cb\u70b9\uff0c\u4ece\u8fd9\u4e9b\u8282\u70b9\u5f00\u59cb\u5411\u4e0b\u641c\u7d22\uff0c\u641c\u7d22\u8d70\u8fc7\u7684\u8def\u5f84\u79f0\u4e3a\u5f15\u7528\u94fe(reference chain), \u5f53\u4e00\u4e2a\u5bf9\u8c61\u5230 GC Roots\u6ca1\u6709\u4efb\u4f55\u5f15\u7528\u94fe\u76f8\u8fde\u65f6\uff0c\u5219\u8bc1\u660e\u6b64\u5bf9\u8c61\u662f\u4e0d\u53ef\u7528\u7684\uff0c\u5373\u88ab\u5224\u5b9a\u4e3a\u53ef\u56de\u6536\u7684\u5bf9\u8c61\u3002 \u5f15\u7528\u7c7b\u578b \u5f15\u7528\u7684\u5b58\u6d3b \u56de\u6536\u65b9\u6cd5\u533a \u65b9\u6cd5\u533a(HotSpot\u865a\u62df\u673a\u4e2d\u79f0\u4e3a\u6c38\u4e45\u4ee3)\u7684\u5783\u573e\u56de\u6536\u5305\u62ec\u4e24\u90e8\u5206: \u5e9f\u5f03\u5e38\u91cf(\u5982\u5e38\u91cf\u6c60\u4e2d\u4e0d\u518d\u88ab\u4efb\u4f55\u5bf9\u8c61\u5f15\u7528\u7684\u5b57\u9762\u91cf, \u5e38\u91cf\u6c60\u4e2d\u7684\u5176\u4ed6\u7c7b/\u63a5\u53e3\u3001\u65b9\u6cd5\u3001\u5b57\u6bb5\u7684\u7b26\u53f7\u5f15\u7528\u4e0e\u6b64\u7c7b\u4f3c)\u3001\u65e0\u7528\u7684\u7c7b(\u9700\u8981\u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6: \u5783\u573e\u6536\u96c6\u7b97\u6cd5 \u6807\u8bb0-\u6e05\u9664\u7b97\u6cd5 \u9996\u5148\u6807\u8bb0\u51fa\u6240\u6709\u9700\u8981\u56de\u6536\u7684\u5bf9\u8c61\uff0c\u5728\u6807\u8bb0\u5b8c\u6210\u540e\u7edf\u4e00\u56de\u6536\u6389\u6240\u6709\u88ab\u6807\u8bb0\u7684\u5bf9\u8c61\uff1b\u4e3b\u8981\u7f3a\u70b9\u4e3a: 1\u3001\u6548\u7387\u95ee\u9898\uff0c\u6807\u8bb0\u548c\u6e05\u9664\u7684\u6548\u7387\u90fd\u4e0d\u9ad8; 2\u3001\u7a7a\u95f4\u95ee\u9898\uff0c\u6807\u8bb0\u6e05\u9664\u4e4b\u540e\u4f1a\u4ea7\u751f\u5927\u91cf\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u788e\u7247\uff0c\u5bfc\u81f4\u5206\u914d\u8f83\u5927\u5bf9\u8c61\u65f6\u65e0\u6cd5\u627e\u5230\u8db3\u591f\u7684\u8fde\u7eed\u5185\u5b58\u800c\u89e6\u53d1\u53e6\u4e00\u6b21\u5783\u573e\u56de\u6536\u52a8\u4f5c\u3002 \u590d\u5236\u7b97\u6cd5 \u6807\u8bb0-\u6574\u7406\u7b97\u6cd5 \u9996\u5148\u6807\u8bb0\u51fa\u6240\u6709\u9700\u8981\u56de\u6536\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u8ba9\u6240\u6709\u5b58\u6d3b\u7684\u5bf9\u8c61\u5411\u4e00\u7aef\u79fb\u52a8\uff0c\u6700\u540e\u76f4\u63a5\u6e05\u7406\u6389\u7aef\u8fb9\u754c\u4ee5\u5916\u7684\u5185\u5b58\uff0c\u53ef\u4ee5\u907f\u514d\u6807\u8bb0-\u6e05\u9664\u53ef\u80fd\u4ea7\u751f\u7684\u5185\u5b58\u788e\u7247\u3002 \u5206\u4ee3\u6536\u96c6\u7b97\u6cd5 \u57fa\u4e8e\u5185\u5b58\u5206\u4ee3\uff0c\u9488\u5bf9\u4e0d\u540c\u533a\u57df\u91c7\u7528\u4e0d\u540c\u7684\u6536\u96c6\u7b97\u6cd5\uff0c\u4f8b\u5982\u65b0\u751f\u4ee3\u9009\u7528\u590d\u5236\u7b97\u6cd5\uff1b\u8001\u5e74\u4ee3\u91c7\u7528\u6807\u8bb0-\u6e05\u9664\u6216\u8005\u6807\u8bb0-\u6574\u7406\u7b97\u6cd5\u3002","title":"Java Virtual Machine"},{"location":"Java/4_JVM/#java-virtual-machine","text":"JVM\u662fJava\u6280\u672f\u7528\u4ee5\u5b9e\u73b0\u4e0e\u786c\u4ef6\u3001\u64cd\u4f5c\u7cfb\u7edf\u65e0\u5173\u7684\u5173\u952e\u90e8\u5206\uff0c\u5176\u4e0eJava\u8bed\u8a00\u6ca1\u6709\u5fc5\u7136\u8054\u7cfb\uff0c\u53ea\u4e0e\u7279\u5b9a\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u683c\u5f0f\u2014\u2014class\u6587\u4ef6\u683c\u5f0f\u76f8\u5173\u8054\u3002class\u6587\u4ef6\u5305\u542b\u4e86Java\u865a\u62df\u673a\u6307\u4ee4\u96c6(\u5373\u5b57\u8282\u7801)\u548c\u7b26\u53f7\u8868\uff0c\u4ee5\u53ca\u4e00\u4e9b\u8f85\u52a9\u4fe1\u606f\uff1b\u51e1\u662f\u80fd\u7528class\u6587\u4ef6\u6b63\u786e\u8868\u8fbe\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u90fd\u53ef\u4ee5\u5728Java\u865a\u62df\u673a\u4e2d\u6267\u884c\u3002","title":"Java Virtual Machine"},{"location":"Java/4_JVM/#_1","text":"JVM\u53ef\u4ee5\u64cd\u4f5c\u4e24\u79cd\u6570\u636e\u7c7b\u578b:\u539f\u59cb\u7c7b\u578b\u548c\u5f15\u7528\u7c7b\u578b\u3002 \u539f\u59cb\u7c7b\u578b \u5305\u62ec\u6570\u503c\u7c7b\u578b(\u6574\u6570\u7c7b\u578b\u548c\u6d6e\u70b9\u7c7b\u578b)\u3001boolean\u7c7b\u578b(JVM\u6ca1\u6709\u63d0\u4f9b \u4f9bboolean\u503c\u4e13\u7528\u7684\u5b57\u8282\u7801\u6307\u4ee4\uff0c\u5728\u7f16\u8bd1\u540e\uff0c\u4f7f\u7528JVM\u4e2d\u7684int\u7c7b\u578b\u6765\u4ee3\u66ff)\u3001returnAddress\u7c7b\u578b(\u4f1a\u88abJVM\u7684jsr\u3001ret\u3001jsr_w\u6307\u4ee4\u6240\u4f7f\u7528\uff0creturnAddress\u7c7b\u578b\u7684\u503c\u6307\u5411\u4e00\u6761\u865a\u62df\u673a\u6307\u4ee4\u7684\u64cd\u4f5c\u7801\uff0c\u5728java\u8bed\u8a00\u4e2d\u5e76\u4e0d\u5b58\u5728\u5bf9\u5e94\u7684\u7c7b\u578b\uff0c\u4e5f\u65e0\u6cd5\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u4fee\u6539)\u3002 \u5f15\u7528\u7c7b\u578b \u8fd0\u884c\u65f6\u6570\u636e\u533a\u57df \u7c7b\u52a0\u8f7d\u5668 : \u5c06\u7c7b\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\uff0c\u5206\u4e3a3\u6b65: \u52a0\u8f7d\u3001\u94fe\u63a5\u3001\u521d\u59cb\u5316\u3002 loading: \u52a0\u8f7d\u6307\u7684\u662f\u5c06\u7c7b\u7684class\u6587\u4ef6\u8bfb\u5165\u5230\u5185\u5b58\uff0c\u5e76\u4e3a\u4e4b\u521b\u5efa\u4e00\u4e2ajava.lang.Class\u5bf9\u8c61; \u7c7b\u7684\u52a0\u8f7d\u7531\u7c7b\u52a0\u8f7d\u5668\u5b8c\u6210\uff0c\u7c7b\u52a0\u8f7d\u5668\u901a\u5e38\u7531JVM\u63d0\u4f9b; \u6b64\u5916\u5f00\u53d1\u8005\u53ef\u4ee5\u901a\u8fc7\u7ee7\u627fClassLoader\u57fa\u7c7b\u6765\u521b\u5efa\u81ea\u5df1\u7684\u7c7b\u52a0\u8f7d\u5668\u3002 \u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684\u7c7b\u52a0\u8f7d\u5668\uff0c\u53ef\u4ee5\u4ece\u4e0d\u540c\u6765\u6e90\u52a0\u8f7d\u7c7b\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u901a\u5e38\u6709\u5982\u4e0b\u51e0\u79cd\u6765\u6e90\uff1a \u4ece\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u52a0\u8f7dclass\u6587\u4ef6\uff1b \u4eceJAR\u5305\u52a0\u8f7dclass\u6587\u4ef6\uff0c\u5982JDBC\u7f16\u7a0b\u65f6\u7528\u5230\u7684\u6570\u636e\u5e93\u9a71\u52a8\u7c7b\u5c31\u653e\u5728JAR\u6587\u4ef6\u4e2d\uff1b \u901a\u8fc7\u7f51\u7edc\u52a0\u8f7dclass\u6587\u4ef6\uff1b \u628a\u4e00\u4e2aJava\u6e90\u6587\u4ef6\u52a8\u6001\u7f16\u8bd1\uff0c\u5e76\u6267\u884c\u52a0\u8f7d. \u7c7b\u52a0\u8f7d\u5668\u901a\u5e38\u65e0\u987b\u7b49\u5230\u201c\u9996\u6b21\u4f7f\u7528\u201d\u8be5\u7c7b\u65f6\u624d\u52a0\u8f7d\u8be5\u7c7b\uff0cJava\u865a\u62df\u673a\u89c4\u8303\u5141\u8bb8\u7cfb\u7edf\u9884\u5148\u52a0\u8f7d\u67d0\u4e9b\u7c7b. \u4e00\u65e6\u4e00\u4e2a\u7c7b\u88ab\u52a0\u8f7d\u5982JVM\u4e2d\uff0c\u540c\u4e00\u4e2a\u7c7b\u5c31\u4e0d\u4f1a\u88ab\u518d\u6b21\u8f7d\u5165\u4e86\u3002\u6b63\u5982\u4e00\u4e2a\u5bf9\u8c61\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u6807\u8bc6\u4e00\u6837\uff0c\u4e00\u4e2a\u8f7d\u5165JVM\u7684\u7c7b\u4e5f\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u6807\u8bc6\u3002 \u5728Java\u4e2d\uff0c\u4e00\u4e2a\u7c7b\u7528\u5176\u5168\u9650\u5b9a\u7c7b\u540d\uff08\u5305\u62ec\u5305\u540d\u548c\u7c7b\u540d\uff09\u4f5c\u4e3a\u6807\u8bc6\uff1b\u4f46\u5728JVM\u4e2d\uff0c\u4e00\u4e2a\u7c7b\u7528\u5176 \u5168\u9650\u5b9a\u7c7b\u540d\u548c\u5176\u7c7b\u52a0\u8f7d\u5668 \u4f5c\u4e3a\u5176\u552f\u4e00\u6807\u8bc6. VM\u9884\u5b9a\u4e49\u6709\u4e09\u79cd\u7c7b\u52a0\u8f7d\u5668\uff0c\u5f53\u4e00\u4e2a JVM\u542f\u52a8\u7684\u65f6\u5019\uff0cJava\u5f00\u59cb\u4f7f\u7528\u5982\u4e0b\u4e09\u79cd\u7c7b\u52a0\u8f7d\u5668\uff1a 1)\u6839\u7c7b\u52a0\u8f7d\u5668\uff08bootstrap class loader\uff09:\u7528\u6765\u52a0\u8f7d Java \u7684\u6838\u5fc3\u7c7b\uff08\u8d1f\u8d23\u52a0\u8f7d$JAVA_HOME\u4e2djre/lib/rt.jar\u91cc\u6240\u6709\u7684class\uff0c \u7531C++\u5b9e\u73b0\uff0c\u4e0d\u662fClassLoader\u5b50\u7c7b\uff09\u3002\u7531\u4e8e\u5f15\u5bfc\u7c7b\u52a0\u8f7d\u5668\u6d89\u53ca\u5230\u865a\u62df\u673a\u672c\u5730\u5b9e\u73b0\u7ec6\u8282\uff0c\u5f00\u53d1\u8005\u65e0\u6cd5\u76f4\u63a5\u83b7\u53d6\u5230\u542f\u52a8\u7c7b\u52a0\u8f7d\u5668\u7684\u5f15\u7528\uff0c \u6240\u4ee5\u4e0d\u5141\u8bb8\u76f4\u63a5\u901a\u8fc7\u5f15\u7528\u8fdb\u884c\u64cd\u4f5c\u3002 2)\u6269\u5c55\u7c7b\u52a0\u8f7d\u5668\uff08extensions class loader\uff09\uff1a\u5b83\u8d1f\u8d23\u52a0\u8f7dJRE\u7684\u6269\u5c55\u76ee\u5f55\uff0clib/ext\u6216\u8005\u7531java.ext.dirs\u7cfb\u7edf\u5c5e\u6027\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d\u7684JAR\u5305\u7684\u7c7b\u3002 \u7531Java\u8bed\u8a00\u5b9e\u73b0\uff0c\u7236\u7c7b\u52a0\u8f7d\u5668\u4e3a bootstrap class loader, \u4f46\u7531\u4e8e\u540e\u8005\u662fC++\u5b9e\u73b0\uff0c\u4e0d\u80fd\u76f4\u63a5\u88abjava\u8bed\u6cd5\u5f15\u7528\uff0c\u6240\u4ee5\u6253\u5370\u7ed3\u679c\u4e3anull\u3002 3)\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668\uff08system class loader\uff09\uff1a\u88ab\u79f0\u4e3a\u7cfb\u7edf\uff08\u4e5f\u79f0\u4e3a\u5e94\u7528\uff09\u7c7b\u52a0\u8f7d\u5668(Applcation Classloader)\uff0c \u5b83\u8d1f\u8d23\u5728JVM\u542f\u52a8\u65f6\u52a0\u8f7d\u6765\u81eaJava\u547d\u4ee4\u7684-classpath\u9009\u9879\u3001java.class.path\u7cfb\u7edf\u5c5e\u6027\uff0c\u6216\u8005CLASSPATH\u53d8\u91cf\u6240\u6307\u5b9a\u7684JAR\u5305\u548c\u7c7b\u8def\u5f84\u3002 \u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7ClassLoader\u7684\u9759\u6001\u65b9\u6cd5getSystemClassLoader()\u6765\u83b7\u53d6\u7cfb\u7edf\u7c7b\u52a0\u8f7d\u5668\u3002\u5982\u679c\u6ca1\u6709\u7279\u522b\u6307\u5b9a\uff0c \u5219\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u7c7b\u52a0\u8f7d\u5668\u90fd\u4ee5\u6b64\u7c7b\u52a0\u8f7d\u5668\u4f5c\u4e3a\u7236\u52a0\u8f7d\u5668\u3002\u7531Java\u8bed\u8a00\u5b9e\u73b0\uff0c\u7236\u7c7b\u52a0\u8f7d\u5668\u4e3aExtClassLoader\u3002 \u7c7b\u52a0\u8f7d\u673a\u5236: \u5168\u76d8\u8d1f\u8d23\uff1a\u6240\u8c13\u5168\u76d8\u8d1f\u8d23\uff0c\u5c31\u662f\u5f53\u4e00\u4e2a\u7c7b\u52a0\u8f7d\u5668\u8d1f\u8d23\u52a0\u8f7d\u67d0\u4e2aClass\u65f6\uff0c\u8be5Class\u6240\u4f9d\u8d56\u548c\u5f15\u7528\u5176\u4ed6Class\u4e5f\u5c06\u7531\u8be5\u7c7b\u52a0\u8f7d\u5668\u8d1f\u8d23\u8f7d\u5165\uff0c \u9664\u975e\u663e\u793a\u4f7f\u7528\u53e6\u5916\u4e00\u4e2a\u7c7b\u52a0\u8f7d\u5668\u6765\u8f7d\u5165\u3002 \u53cc\u4eb2\u59d4\u6d3e\uff1a\u6240\u8c13\u7684\u53cc\u4eb2\u59d4\u6d3e\uff0c\u5219\u662f\u5148\u8ba9\u7236\u7c7b\u52a0\u8f7d\u5668\u8bd5\u56fe\u52a0\u8f7d\u8be5Class\uff0c\u53ea\u6709\u5728\u7236\u7c7b\u52a0\u8f7d\u5668\u65e0\u6cd5\u52a0\u8f7d\u8be5\u7c7b\u65f6\u624d\u5c1d\u8bd5\u4ece\u81ea\u5df1\u7684\u7c7b\u8def\u5f84\u4e2d\u52a0\u8f7d\u8be5\u7c7b\u3002 \u901a\u4fd7\u7684\u8bb2\uff0c\u5c31\u662f\u67d0\u4e2a\u7279\u5b9a\u7684\u7c7b\u52a0\u8f7d\u5668\u5728\u63a5\u5230\u52a0\u8f7d\u7c7b\u7684\u8bf7\u6c42\u65f6\uff0c\u9996\u5148\u5c06\u52a0\u8f7d\u4efb\u52a1\u59d4\u6258\u7ed9\u7236\u52a0\u8f7d\u5668\uff0c\u4f9d\u6b21\u9012\u5f52\uff0c\u5982\u679c\u7236\u52a0\u8f7d\u5668\u53ef\u4ee5\u5b8c\u6210\u7c7b\u52a0\u8f7d\u4efb\u52a1\uff0c \u5c31\u6210\u529f\u8fd4\u56de\uff1b\u53ea\u6709\u7236\u52a0\u8f7d\u5668\u65e0\u6cd5\u5b8c\u6210\u6b64\u52a0\u8f7d\u4efb\u52a1\u65f6\uff0c\u624d\u81ea\u5df1\u53bb\u52a0\u8f7d\u3002 \u7f13\u5b58\u673a\u5236: \u7f13\u5b58\u673a\u5236\u5c06\u4f1a\u4fdd\u8bc1\u6240\u6709\u52a0\u8f7d\u8fc7\u7684Class\u90fd\u4f1a\u88ab\u7f13\u5b58\uff0c\u5f53\u7a0b\u5e8f\u4e2d\u9700\u8981\u4f7f\u7528\u67d0\u4e2aClass\u65f6\uff0c\u7c7b\u52a0\u8f7d\u5668\u5148\u4ece\u7f13\u5b58\u533a\u4e2d\u641c\u5bfb\u8be5Class\uff0c \u53ea\u6709\u5f53\u7f13\u5b58\u533a\u4e2d\u4e0d\u5b58\u5728\u8be5Class\u5bf9\u8c61\u65f6\uff0c\u7cfb\u7edf\u624d\u4f1a\u8bfb\u53d6\u8be5\u7c7b\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u6210Class\u5bf9\u8c61\uff0c\u5b58\u5165\u7f13\u51b2\u533a\u4e2d\u3002 \u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u4fee\u6539\u4e86Class\u540e\uff0c\u5fc5\u987b\u91cd\u65b0\u542f\u52a8JVM\uff0c\u7a0b\u5e8f\u6240\u505a\u7684\u4fee\u6539\u624d\u4f1a\u751f\u6548\u7684\u539f\u56e0\u3002 \u53cc\u4eb2\u59d4\u6d3e\u673a\u5236\u7684\u4f18\u52bf\uff1a 1\u3001Java\u7c7b\u968f\u7740\u5b83\u7684\u7c7b\u52a0\u8f7d\u5668\u4e00\u8d77\u5177\u5907\u4e86\u4e00\u79cd\u5e26\u6709\u4f18\u5148\u7ea7\u7684\u5c42\u6b21\u5173\u7cfb\uff0c\u901a\u8fc7\u8fd9\u79cd\u5c42\u7ea7\u5173\u53ef\u4ee5\u907f\u514d\u7c7b\u7684\u91cd\u590d\u52a0\u8f7d\uff0c\u5f53\u7236\u4eb2\u5df2\u7ecf\u52a0\u8f7d\u4e86\u8be5\u7c7b\u65f6\uff0c \u5b50ClassLoader\u65e0\u9700\u91cd\u590d\u52a0\u8f7d\u3002 2\u3001\u8003\u8651\u5230\u5b89\u5168\u56e0\u7d20\uff0cjava\u6838\u5fc3api\u4e2d\u5b9a\u4e49\u7c7b\u578b\u4e0d\u4f1a\u88ab\u968f\u610f\u66ff\u6362\uff0c\u5047\u8bbe\u8bd5\u56fe\u52a0\u8f7d\u81ea\u5b9a\u4e49\u7684java.lang.Integer\u7684\u7c7b(\u5b8c\u5168\u9650\u5b9a\u540d\u548c\u6838\u5fc3\u7c7b\u4e2d\u4e00\u81f4)\uff0c \u901a\u8fc7\u53cc\u4eb2\u59d4\u6258\u6a21\u5f0f\u4f20\u9012\u5230\u542f\u52a8\u7c7b\u52a0\u8f7d\u5668\uff0c\u800c\u6839\u7c7b\u52a0\u8f7d\u5668\u5728\u6838\u5fc3Java API\u53d1\u73b0\u8fd9\u4e2a\u540d\u5b57\u7684\u7c7b\uff0c\u53d1\u73b0\u8be5\u7c7b\u5df2\u88ab\u52a0\u8f7d\uff0c \u5219\u4e0d\u4f1a\u91cd\u65b0\u52a0\u8f7d\u8bf7\u6c42\u7684java.lang.Integer,\u800c\u662f\u76f4\u63a5\u8fd4\u56de\u5df2\u52a0\u8f7d\u8fc7\u7684Integer.class\uff0c\u8fd9\u6837\u4fbf\u53ef\u4ee5\u9632\u6b62\u6838\u5fc3API\u5e93\u88ab\u968f\u610f\u7be1\u6539\u3002 Linking: \u5f53\u7c7b\u88ab\u52a0\u8f7d\u4e4b\u540e\uff0c\u7cfb\u7edf\u4e3a\u4e4b\u751f\u6210\u4e00\u4e2a\u5bf9\u5e94\u7684Class\u5bf9\u8c61\uff0c\u63a5\u7740\u5c06\u4f1a\u8fdb\u5165\u8fde\u63a5\u9636\u6bb5\uff0c\u8fde\u63a5\u9636\u6bb5\u8d1f\u8d23\u628a\u7c7b\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u5408\u5e76\u5230JRE\u4e2d\u3002 \u7c7b\u8fde\u63a5\u53c8\u53ef\u5206\u4e3a\u5982\u4e0b3\u4e2a\u9636\u6bb5: 1)\u9a8c\u8bc1\uff1a\u9a8c\u8bc1\u9636\u6bb5\u7528\u4e8e\u68c0\u9a8c\u88ab\u52a0\u8f7d\u7684\u7c7b\u662f\u5426\u6709\u6b63\u786e\u7684\u5185\u90e8\u7ed3\u6784\uff0c\u5e76\u548c\u5176\u4ed6\u7c7b\u534f\u8c03\u4e00\u81f4\u3002Java\u662f\u76f8\u5bf9C++\u8bed\u8a00\u662f\u5b89\u5168\u7684\u8bed\u8a00\uff0c \u4f8b\u5982\u5b83\u6709C++\u4e0d\u5177\u6709\u7684\u6570\u7ec4\u8d8a\u754c\u7684\u68c0\u67e5\u3002\u9a8c\u8bc1\u7684\u76ee\u7684\u5728\u4e8e\u786e\u4fddClass\u6587\u4ef6\u7684\u5b57\u8282\u6d41\u4e2d\u5305\u542b\u4fe1\u606f\u7b26\u5408\u5f53\u524d\u865a\u62df\u673a\u8981\u6c42\uff0c\u4e0d\u4f1a\u5371\u5bb3\u865a\u62df\u673a\u81ea\u8eab\u5b89\u5168\u3002 \u5176\u4e3b\u8981\u5305\u62ec\u56db\u79cd\u9a8c\u8bc1: \u6587\u4ef6\u683c\u5f0f\u9a8c\u8bc1:\u4e3b\u8981\u9a8c\u8bc1\u5b57\u8282\u6d41\u662f\u5426\u7b26\u5408Class\u6587\u4ef6\u683c\u5f0f\u89c4\u8303,\u5e76\u4e14\u80fd\u88ab\u5f53\u524d\u7684\u865a\u62df\u673a\u52a0\u8f7d\u5904\u7406\u3002\u4f8b\u5982\u4e3b\u3001\u6b21\u7248\u672c\u53f7\u662f\u5426\u5728\u5f53\u524d\u865a\u62df\u673a\u5904\u7406\u7684\u8303\u56f4\u4e4b\u5185, \u5e38\u91cf\u6c60\u4e2d\u662f\u5426\u6709\u4e0d\u88ab\u652f\u6301\u7684\u5e38\u91cf\u7c7b\u578b; \u6307\u5411\u5e38\u91cf\u7684\u4e2d\u7684\u7d22\u5f15\u503c\u662f\u5426\u5305\u542b\u4e0d\u5b58\u5728\u7684\u5e38\u91cf\u6216\u4e0d\u7b26\u5408\u7c7b\u578b\u7684\u5e38\u91cf\u3002 \u5143\u6570\u636e\u9a8c\u8bc1\uff1a\u5bf9\u5b57\u8282\u7801\u63cf\u8ff0\u7684\u4fe1\u606f\u8fdb\u884c\u8bed\u4e49\u7684\u5206\u6790\uff0c\u5206\u6790\u662f\u5426\u7b26\u5408java\u7684\u8bed\u8a00\u8bed\u6cd5\u7684\u89c4\u8303\u3002 \u5b57\u8282\u7801\u9a8c\u8bc1\uff1a\u6700\u91cd\u8981\u7684\u9a8c\u8bc1\u73af\u8282\uff0c\u5206\u6790\u6570\u636e\u6d41\u548c\u63a7\u5236\uff0c\u786e\u5b9a\u8bed\u4e49\u662f\u5408\u6cd5\u7684\uff0c\u7b26\u5408\u903b\u8f91\u7684\u3002\u4e3b\u8981\u7684\u9488\u5bf9\u5143\u6570\u636e\u9a8c\u8bc1\u540e\u5bf9\u65b9\u6cd5\u4f53\u7684\u9a8c\u8bc1\u3002 \u4fdd\u8bc1\u7c7b\u65b9\u6cd5\u5728\u8fd0\u884c\u65f6\u4e0d\u4f1a\u6709\u5371\u5bb3\u51fa\u73b0\u3002 \u7b26\u53f7\u5f15\u7528\u9a8c\u8bc1\uff1a\u4e3b\u8981\u662f\u9488\u5bf9\u7b26\u53f7\u5f15\u7528\u8f6c\u6362\u4e3a\u76f4\u63a5\u5f15\u7528\u7684\u65f6\u5019\uff0c\u662f\u4f1a\u5ef6\u4f38\u5230\u7b2c\u4e09\u89e3\u6790\u9636\u6bb5\uff0c\u4e3b\u8981\u662f\u786e\u5b9a\u8bbf\u95ee\u7c7b\u578b\u7b49\u6d89\u53ca\u5230\u5f15\u7528\u7684\u60c5\u51b5\uff0c \u8981\u4fdd\u8bc1\u5f15\u7528\u4e00\u5b9a\u4f1a\u88ab\u8bbf\u95ee\u5230\uff0c\u4e0d\u4f1a\u51fa\u73b0\u7c7b\u7b49\u65e0\u6cd5\u8bbf\u95ee\u7684\u95ee\u9898\u3002 2)\u51c6\u5907\uff1a\u7c7b\u51c6\u5907\u9636\u6bb5\u8d1f\u8d23\u4e3a\u7c7b\u7684\u9759\u6001\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff0c\u5e76\u8bbe\u7f6e\u9ed8\u8ba4\u521d\u59cb\u503c\u3002 3)\u89e3\u6790\uff1a\u5c06\u7c7b\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u4e2d\u7684\u7b26\u53f7\u5f15\u7528\u66ff\u6362\u6210\u76f4\u63a5\u5f15\u7528\u3002 \u7b26\u53f7\u5f15\u7528\uff1a\u7b26\u53f7\u5f15\u7528\u662f\u4ee5\u4e00\u7ec4\u7b26\u53f7\u6765\u63cf\u8ff0\u6240\u5f15\u7528\u7684\u76ee\u6807,\u7b26\u53f7\u53ef\u4ee5\u662f\u4efb\u4f55\u5b57\u9762\u5f62\u5f0f\u7684\u5b57\u9762\u91cf\uff0c\u53ea\u8981\u4e0d\u4f1a\u51fa\u73b0\u51b2\u7a81\u80fd\u591f\u5b9a\u4f4d\u5230\u5c31\u884c\u3002\u5e03\u5c40\u548c\u5185\u5b58\u65e0\u5173\u3002 \u76f4\u63a5\u5f15\u7528\uff1a\u662f\u6307\u5411\u76ee\u6807\u7684\u6307\u9488\uff0c\u504f\u79fb\u91cf\u6216\u8005\u80fd\u591f\u76f4\u63a5\u5b9a\u4f4d\u7684\u53e5\u67c4\u3002\u8be5\u5f15\u7528\u662f\u548c\u5185\u5b58\u4e2d\u7684\u5e03\u5c40\u6709\u5173\u7684\uff0c\u5e76\u4e14\u4e00\u5b9a\u52a0\u8f7d\u8fdb\u6765\u7684\u3002 initializing: \u521d\u59cb\u5316\u662f\u4e3a\u7c7b\u7684\u9759\u6001\u53d8\u91cf\u8d4b\u4e88\u6b63\u786e\u7684\u521d\u59cb\u503c. \u7a0b\u5e8f\u8ba1\u6570\u5668/PC\u5bc4\u5b58\u5668 : \u4e0d\u540c\u7684\u7ebf\u7a0b\u7684PC\u662f\u72ec\u7acb\u7684\uff0c\u5b58\u653e\u5f53\u524d\u7ebf\u7a0b\u6b63\u5728\u6267\u884c\u7684\u65b9\u6cd5\u7684\u5b57\u8282\u7801\u6307\u4ee4\u5730\u5740\uff1b\u4f46\u5982\u679c\u8be5\u65b9\u6cd5\u662fnative\u7684\uff0c\u5219pc\u7684\u503c\u662fundefined(\u5373PC\u5bc4\u5b58\u5668\u4e3a\u7a7a)\u3002 Java\u865a\u62df\u673a\u6808 : \u751f\u547d\u5468\u671f\u4e0e\u7ebf\u7a0b\u76f8\u540c\uff0c\u7528\u4e8e\u5b58\u50a8\u6808\u5e27\uff0c\u56e0\u4e3a\u9664\u4e86stack frame\u7684\u5165\u6808\u548c\u51fa\u6808\u5916\uff0cJVM stack\u4e0d\u518d\u53d7\u5176\u5b83\u56e0\u7d20\u5f71\u54cd\uff0c\u6240\u4ee5\u6808\u5e27\u53ef\u4ee5\u5728\u5806\u4e2d\u5206\u914d\uff0cJVM stack\u4f7f\u7528\u7684\u5185\u5b58\u4e5f\u4e0d\u9700\u8981\u4fdd\u8bc1\u662f\u8fde\u7eed\u7684\uff1bJVM stack\u4e2d\u53ef\u80fd\u51fa\u73b0\u4e24\u79cd\u5f02\u5e38: \u7ebf\u7a0b\u8bf7\u6c42\u5206\u914d\u7684\u6808\u5bb9\u91cf\u5927\u4e8eJVM stack\u5bb9\u8bb8\u7684\u6700\u5927\u5bb9\u91cf\uff0c\u629b\u51faStackOverflowError\uff1b \u82e5JVM stack\u5141\u8bb8\u52a8\u6001\u6269\u5c55\u5bb9\u91cf\uff0c\u5f53\u6269\u5c55\u65f6\u65e0\u6cd5\u7533\u8bf7\u5230\u8db3\u591f\u7684\u5185\u5b58\uff0c\u5c06\u629b\u51faOutOfMemoryError. Java\u5806 : \u4f9b\u5404\u4e2a\u7ebf\u7a0b\u5171\u4eab\u7684\u8fd0\u884c\u65f6\u5185\u5b58\u533a\u57df \uff0c\u4e5f\u662f\u53ef\u4f9b\u6240\u6709\u7c7b\u5b9e\u4f8b\u548c\u6570\u7ec4\u5bf9\u8c61\u5206\u914d\u5185\u5b58\u7684\u533a\u57df\uff1b\u5728JVM\u542f\u52a8\u65f6\u88ab\u521b\u5efa\uff0c\u5b58\u50a8\u4e86\u6240\u6709\u88abGC\u7ba1\u7406\u7684\u5404\u79cd\u5bf9\u8c61\uff1bJava\u5806\u53ef\u4ee5\u5904\u4e8e\u7269\u7406\u4e0a\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\uff0c\u53ea\u9700\u8981\u903b\u8f91\u4e0a\u8fde\u7eed\u5373\u53ef\uff1b\u8fd0\u884c\u52a8\u6001\u6269\u5c55\uff0c\u4e14\u53ef\u4ee5\u81ea\u52a8\u6536\u7f29\u65e0\u7528\u7684\u7a7a\u95f4\uff0c\u5f53\u5b9e\u9645\u6240\u9700\u7684\u5806\u5927\u5c0f\u8d85\u51fa\u6700\u5927\u5bb9\u91cf\u65f6\uff0c\u629b\u51faOutOfMemory. \u65b9\u6cd5\u533a : \u540c\u6837\u5c5e\u4e8e\u7ebf\u7a0b\u7684\u5171\u4eab\u533a\u57df \uff0c\u5b58\u50a8\u4e86\u6bcf\u4e00\u4e2a\u7c7b\u7684\u7ed3\u6784\u4fe1\u606f\uff0c\u5305\u62ec\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\u3001\u5b57\u6bb5\u548c\u65b9\u6cd5\u6570\u636e\u3001\u6784\u9020\u51fd\u6570\u548c\u666e\u901a\u65b9\u6cd5\u7684\u5b57\u8282\u7801\u5185\u5bb9\uff0c\u4ee5\u53ca\u4e00\u4e9b\u5728\u7c7b\u3001\u5b9e\u4f8b\u3001\u63a5\u53e3\u521d\u59cb\u5316\u65f6\u7528\u5230\u7684\u7279\u6b8a\u65b9\u6cd5\uff1b\u5728\u5b9e\u73b0\u4e0a\uff0c\u6ca1\u6709\u89c4\u5b9a\u5982\u4f55\u5b9e\u73b0\uff0c\u7531\u4e0d\u540c\u7684\u865a\u62df\u673a\u5382\u5bb6\u81ea\u5df1\u89c9\u5f97\uff1b\u903b\u8f91\u4e0a\u662f\u5806\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u4e3a\u4e86\u4e0ejava heap\u533a\u5206\u5f00\uff0c\u4e5f\u79f0\u4e3aNon-heap(\u975e\u5806)\uff0c\u540c\u6837\u4e0d\u9700\u8981\u7269\u7406\u8fde\u7eed\u7684\u5185\u5b58\uff0c\u5141\u8bb8\u6269\u5c55\uff0c\u4f46\u53ef\u4ee5\u9009\u62e9\u4e0d\u5b9e\u73b0\u5783\u573e\u6536\u96c6\uff1b\u5f53\u5185\u5b58\u7a7a\u95f4\u4e0d\u6ee1\u8db3\u5185\u5b58\u5206\u914d\u8bf7\u6c42\u65f6\uff0c\u629b\u51faOutOfMemory\u5f02\u5e38\u3002 \u8fd0\u884c\u65f6\u5e38\u91cf\u6c60 : \u672c\u5730\u65b9\u6cd5\u6808 : \u5185\u5b58\u5206\u4ee3 JVM\u6839\u636e\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u5b58\u6d3b\u65f6\u95f4\u7684\u957f\u77ed\uff0c\u628a\u5806\u5185\u5b58\u5206\u4e3a\u65b0\u751f\u4ee3\uff08\u5305\u62ec\u4e00\u4e2aEden\u533a\u3001\u4e24\u4e2aSurvivor\u533a\uff09\u548c\u8001\u5e74\u4ee3\uff08Tenured\u6216Old\uff09\u3002 \u7ed9\u5806\u5185\u5b58\u5206\u4ee3\u662f\u4e3a\u4e86\u63d0\u9ad8\u5bf9\u8c61\u5185\u5b58\u5206\u914d\u548c\u5783\u573e\u56de\u6536\u7684\u6548\u7387\uff0c\u907f\u514d\u9891\u7e41\u56de\u6536\u5185\u5b58\u65f6\uff0c\u9700\u8981\u904d\u5386\u6240\u6709\u7684\u5bf9\u8c61; \u6c38\u4e45\u4ee3 : \u662fHotSpot jvm\u7279\u6709\u6982\u5ff5\uff0c\u662f\u65b9\u6cd5\u533a\u7684\u4e00\u79cd\u5b9e\u73b0\uff1b\u4f46\u4eceJKD1.8\u5f00\u59cb\uff0c\u5df2\u7ecf\u91c7\u7528MetaSpace\u4ee3\u66ff\u6c38\u4e45\u4ee3\uff0c\u6c38\u4e45\u4ee3\u4e2d\u7684class-metadata\u8f6c\u79fb\u5230\u672c\u5730\u5185\u5b58\u4e2d\uff0c\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\u8f6c\u79fb\u5230java heap\u4e2d. \u5185\u5b58\u5206\u914d\u62c5\u4fdd : \u5728\u771f\u6b63\u89e6\u53d1Minor GC\u4e4b\u524d\uff0cJVM\u4f1a\u5148\u53bb\u8001\u5e74\u4ee3\u4e2d\u68c0\u67e5\u6700\u5927\u53ef\u7528\u7684\u8fde\u7eed\u5185\u5b58\u7a7a\u95f4\u662f\u5426\u5927\u4e8e\u65b0\u751f\u4ee3\u4e2d\u7684\u6240\u6709\u5bf9\u8c61\u603b\u7a7a\u95f4\uff0c\u5982\u679c\u8fd9\u4e2a\u6761\u4ef6\u6210\u7acb\uff0c\u90a3\u4e48\u8fd9\u4e00\u6b21\u7684Minor GC\u662f\u5b89\u5168\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u5bf9\u8c61\u9700\u8981\u56de\u6536\uff0c\u4e14\u8001\u5e74\u4ee3\u6709\u8db3\u591f\u7684\u7a7a\u95f4(JVM\u4f1a\u53d6\u4e4b\u524d\u6bcf\u4e00\u6b21\u56de\u6536\u664b\u5347\u5230\u8001\u5e74\u4ee3\u5bf9\u8c61\u7684\u5bb9\u91cf\u7684\u5e73\u5747\u5927\u5c0f\u503c\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u8003\uff0c\u4e0e\u76ee\u524d\u8001\u5e74\u4ee3\u4e2d\u7684\u5269\u4f59\u7a7a\u95f4\u8fdb\u884c\u6bd4\u8f83\uff0c\u4ee5\u6b64\u6765\u786e\u8ba4\u672c\u6b21\u5185\u5b58\u5206\u914d\u62c5\u4fdd\u662f\u5426\u53ef\u4ee5\u6210\u529f)\uff0c\u5219\u65b0\u751f\u4ee3\u4e2d\u591a\u4f59\u7684\u5bf9\u8c61\u4f1a\u664b\u5347\u5230\u8001\u5e74\u4ee3\uff1b\u5426\u5219\u7684\u8bdd\uff0c\u5219\u4f1a\u8fdb\u884c\u4e00\u6b21major/full GC,\u8ba9\u8001\u5e74\u4ee3\u817e\u51fa\u66f4\u591a\u7a7a\u95f4\u3002 JVM\u63d0\u4f9bHandlePromotionFailure\u53c2\u6570\uff0c\u4e3atrue\u65f6\uff0c\u5219\u4f1a\u5148\u5192\u9669\u8fdb\u884cminor GC, \u5982\u679c\u5931\u8d25\u518d\u8fdb\u884c\u5206\u914d\u62c5\u4fdd\uff0c\u8fd9\u6837\u5728\u4e00\u5b9a\u7a0b\u5ea6\u53ef\u4ee5\u907f\u514d\u62c5\u4fdd\u7684\u5f00\u9500\u3002 \u2003\u5173\u4e8emajor GC\u548cfull GC, \u6982\u5ff5\u4e0a\u901a\u5e38\u6bd4\u8f83\u6df7\u4e71\uff0cfull GC\u6709\u8d44\u6599\u79f0\u5176\u662f\u9488\u5bf9\u6574\u4e2a\u5806\u8fdb\u884c\u56de\u6536\uff0c\u5305\u62ecyoung\u548cold\uff0c\u751a\u81f3\u65b9\u6cd5\u533a\u3002 \u6808\u5e27 \u5b58\u50a8\u6570\u636e\u548c\u90e8\u5206\u8fc7\u7a0b\u7ed3\u679c\uff0c\u540c\u65f6\u7528\u6765\u5904\u7406\u52a8\u6001\u94fe\u63a5\u3001\u65b9\u6cd5\u8fd4\u56de\u503c\u3001\u5f02\u5e38\u5206\u6d3e\uff1b\u968f\u7740\u65b9\u6cd5\u8c03\u7528\u800c\u521b\u5efa\uff0c\u968f\u7740\u65b9\u6cd5\u7ed3\u675f\u800c\u9500\u6bc1\uff1b stack frame\u7684\u5185\u5b58\u7a7a\u95f4\u7531\u521b\u5efa\u5b83\u7684\u7ebf\u7a0b\u5206\u914d\u5728java stack\u4e2d\uff0c\u6bcf\u4e00\u4e2astack frame\u90fd\u6709\u81ea\u5df1\u7684\u672c\u5730\u53d8\u91cf\u8868\u3001\u64cd\u4f5c\u6570\u6808\u3001\u6307\u5411\u5f53\u524d\u65b9\u6cd5\u6240\u5c5e\u7684\u7c7b\u7684\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\u7684\u5f15\u7528\u3002 \u5c40\u90e8\u53d8\u91cf\u8868 \u7c7b\u4f3cC++\u4e2d\uff0c\u901a\u8fc7\u83b7\u53d6\u7c7b\u7684\u5b58\u50a8\u5730\u5740\uff0c\u901a\u8fc7\u6307\u9488\u8bbf\u95ee\u8ba1\u7b97\u5bf9\u9f50\u540e\u53d8\u91cf\u5b58\u653e\u5730\u5740\u76f8\u5bf9\u5b58\u50a8\u5730\u5740\u7684\u504f\u79fb\uff0c\u83b7\u53d6\u5230\u53d8\u91cf\u503c\u3002 \u52a8\u6001\u94fe\u63a5 \u5bf9\u8c61\u8bbf\u95ee","title":"\u6570\u636e\u7c7b\u578b"},{"location":"Java/4_JVM/#_2","text":"\u7a0b\u5e8f\u8ba1\u6570\u5668\u3001\u865a\u62df\u673a\u6808\u3001\u672c\u5730\u65b9\u6cd5\u6808\u751f\u547d\u5468\u671f\u4e0e\u7ebf\u7a0b\u4e00\u81f4\uff1b\u6808\u4e2d\u7684\u6808\u5e27\u5206\u914d\u7684\u5185\u5b58\u5927\u5c0f\u5728\u7c7b\u7ed3\u6784\u786e\u5b9a\u65f6\u57fa\u672c\u56fa\u5b9a\uff0c\u56e0\u6b64\u8fd9\u51e0\u4e2a\u533a\u57df\u5185\u5b58\u7684\u5206\u914d\u548c\u56de\u6536\u90fd\u5177\u5907\u786e\u5b9a\u6027\u3002\u800cjava heap\u548c\u65b9\u6cd5\u533a\u4e2d\uff0c\u7531\u4e8e\u4e00\u4e2a\u63a5\u53e3\u7684\u4e0d\u540c\u5b9e\u73b0\u7c7b\u9700\u8981\u7684\u5185\u5b58\u4e0d\u4e00\u6837\uff0c\u4e00\u4e2a\u65b9\u6cd5\u7684\u4e0d\u540c\u5206\u652f\u9700\u8981\u7684\u5185\u5b58\u4e5f\u4e0d\u4e00\u6837\uff0c\u8fd9\u90e8\u5206\u5185\u5b58\u7684\u5206\u914d\u548c\u56de\u6536\u662f\u52a8\u6001\u7684\uff0cGC\u5173\u6ce8\u7684\u4e5f\u662f\u8fd9\u90e8\u5206\u5185\u5b58\u3002","title":"\u5783\u573e\u56de\u6536"},{"location":"Java/4_JVM/#_3","text":"\u6839\u641c\u7d22\u7b97\u6cd5 java\u4e2d\u4f7f\u7528 GC Root Tracing \u7b97\u6cd5\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u5b58\u6d3b\uff0c\u800c\u975e \u5f15\u7528\u8ba1\u6570\u6cd5\u3002\u901a\u8fc7\u4e00\u7cfb\u5217\u540d\u4e3aGC Roots\u7684\u5bf9\u8c61\u4f5c\u4e3a\u8d77\u59cb\u70b9\uff0c\u4ece\u8fd9\u4e9b\u8282\u70b9\u5f00\u59cb\u5411\u4e0b\u641c\u7d22\uff0c\u641c\u7d22\u8d70\u8fc7\u7684\u8def\u5f84\u79f0\u4e3a\u5f15\u7528\u94fe(reference chain), \u5f53\u4e00\u4e2a\u5bf9\u8c61\u5230 GC Roots\u6ca1\u6709\u4efb\u4f55\u5f15\u7528\u94fe\u76f8\u8fde\u65f6\uff0c\u5219\u8bc1\u660e\u6b64\u5bf9\u8c61\u662f\u4e0d\u53ef\u7528\u7684\uff0c\u5373\u88ab\u5224\u5b9a\u4e3a\u53ef\u56de\u6536\u7684\u5bf9\u8c61\u3002 \u5f15\u7528\u7c7b\u578b \u5f15\u7528\u7684\u5b58\u6d3b \u56de\u6536\u65b9\u6cd5\u533a \u65b9\u6cd5\u533a(HotSpot\u865a\u62df\u673a\u4e2d\u79f0\u4e3a\u6c38\u4e45\u4ee3)\u7684\u5783\u573e\u56de\u6536\u5305\u62ec\u4e24\u90e8\u5206: \u5e9f\u5f03\u5e38\u91cf(\u5982\u5e38\u91cf\u6c60\u4e2d\u4e0d\u518d\u88ab\u4efb\u4f55\u5bf9\u8c61\u5f15\u7528\u7684\u5b57\u9762\u91cf, \u5e38\u91cf\u6c60\u4e2d\u7684\u5176\u4ed6\u7c7b/\u63a5\u53e3\u3001\u65b9\u6cd5\u3001\u5b57\u6bb5\u7684\u7b26\u53f7\u5f15\u7528\u4e0e\u6b64\u7c7b\u4f3c)\u3001\u65e0\u7528\u7684\u7c7b(\u9700\u8981\u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6:","title":"\u5bf9\u8c61\u5f15\u7528"},{"location":"Java/4_JVM/#_4","text":"\u6807\u8bb0-\u6e05\u9664\u7b97\u6cd5 \u9996\u5148\u6807\u8bb0\u51fa\u6240\u6709\u9700\u8981\u56de\u6536\u7684\u5bf9\u8c61\uff0c\u5728\u6807\u8bb0\u5b8c\u6210\u540e\u7edf\u4e00\u56de\u6536\u6389\u6240\u6709\u88ab\u6807\u8bb0\u7684\u5bf9\u8c61\uff1b\u4e3b\u8981\u7f3a\u70b9\u4e3a: 1\u3001\u6548\u7387\u95ee\u9898\uff0c\u6807\u8bb0\u548c\u6e05\u9664\u7684\u6548\u7387\u90fd\u4e0d\u9ad8; 2\u3001\u7a7a\u95f4\u95ee\u9898\uff0c\u6807\u8bb0\u6e05\u9664\u4e4b\u540e\u4f1a\u4ea7\u751f\u5927\u91cf\u4e0d\u8fde\u7eed\u7684\u5185\u5b58\u788e\u7247\uff0c\u5bfc\u81f4\u5206\u914d\u8f83\u5927\u5bf9\u8c61\u65f6\u65e0\u6cd5\u627e\u5230\u8db3\u591f\u7684\u8fde\u7eed\u5185\u5b58\u800c\u89e6\u53d1\u53e6\u4e00\u6b21\u5783\u573e\u56de\u6536\u52a8\u4f5c\u3002 \u590d\u5236\u7b97\u6cd5 \u6807\u8bb0-\u6574\u7406\u7b97\u6cd5 \u9996\u5148\u6807\u8bb0\u51fa\u6240\u6709\u9700\u8981\u56de\u6536\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u8ba9\u6240\u6709\u5b58\u6d3b\u7684\u5bf9\u8c61\u5411\u4e00\u7aef\u79fb\u52a8\uff0c\u6700\u540e\u76f4\u63a5\u6e05\u7406\u6389\u7aef\u8fb9\u754c\u4ee5\u5916\u7684\u5185\u5b58\uff0c\u53ef\u4ee5\u907f\u514d\u6807\u8bb0-\u6e05\u9664\u53ef\u80fd\u4ea7\u751f\u7684\u5185\u5b58\u788e\u7247\u3002 \u5206\u4ee3\u6536\u96c6\u7b97\u6cd5 \u57fa\u4e8e\u5185\u5b58\u5206\u4ee3\uff0c\u9488\u5bf9\u4e0d\u540c\u533a\u57df\u91c7\u7528\u4e0d\u540c\u7684\u6536\u96c6\u7b97\u6cd5\uff0c\u4f8b\u5982\u65b0\u751f\u4ee3\u9009\u7528\u590d\u5236\u7b97\u6cd5\uff1b\u8001\u5e74\u4ee3\u91c7\u7528\u6807\u8bb0-\u6e05\u9664\u6216\u8005\u6807\u8bb0-\u6574\u7406\u7b97\u6cd5\u3002","title":"\u5783\u573e\u6536\u96c6\u7b97\u6cd5"},{"location":"Java/5_Spring/","text":"Spring Maven \u56db\u5927\u7279\u6027 I.\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf 1\u3001 \u57fa\u7840\u4f9d\u8d56 \u7528 groupId\u3001 artifactId\u3001 version \u7ec4\u6210\u7684Coordination\uff08\u5750\u6807\uff09\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u4f9d\u8d56; \u901a\u8fc7\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u6765\u7ba1\u7406jar\u5305 1)\u5750\u6807\u5c5e\u6027\u7684\u7406\u89e3: Maven \u5750\u6807\u4e3a\u5404\u79cd\u7ec4\u4ef6\u5f15\u5165\u4e86\u79e9\u5e8f\uff0c\u4efb\u4f55\u4e00\u4e2a\u7ec4\u4ef6\u90fd\u5fc5\u987b\u660e\u786e\u5b9a\u4e49\u81ea\u5df1\u7684\u5750\u6807\u3002 \u200b 2)groupId: \u5b9a\u4e49\u5f53\u524d Maven \u9879\u76ee\u96b6\u5c5e\u7684\u5b9e\u9645\u9879\u76ee-\u516c\u53f8\u540d\u79f0, jar\u5305\u6240\u5728\u4ed3\u5e93\u8def\u5f84 \u200b 3)artifactId(\u5de5\u7a0b\u540d): \u8be5\u5143\u7d20\u5b9a\u4e49\u5b9e\u9645\u9879\u76ee\u4e2d\u7684\u4e00\u4e2a Maven \u6a21\u5757-\u9879\u76ee\u540d \u200b 4)version: \u8be5\u5143\u7d20\u5b9a\u4e49 Maven \u9879\u76ee\u5f53\u524d\u6240\u5904\u7684\u7248\u672c\uff0c\u4e5f\u5373\u6240\u9700\u8981\u4e0b\u8f7d\u7684jar\u5305\u7248\u672c\u3002 \u2003 \u2003\u4f20\u9012\u6027\u4f9d\u8d56: \u8ba9\u6211\u4eec\u5728\u4f7f\u7528\u67d0\u4e2ajar\u65f6\uff0c\u4e0d\u7528\u8003\u8651\u5b83\u4f9d\u8d56\u4e86\u4ec0\u4e48\uff0c\u4e0d\u7528\u62c5\u5fc3\u5f15\u5165\u591a\u4f59\u7684\u4f9d\u8d56\uff0cMaven\u4f1a\u89e3\u6790\u5404\u4e2a\u76f4\u63a5\u4f9d\u8d56\u7684POM\uff0c\u5c06\u90a3\u4e9b\u5fc5\u8981\u7684\u95f4\u63a5\u4f9d\u8d56\uff0c\u4ee5\u4f20\u9012\u6027\u4f9d\u8d56\u7684\u5f62\u5f0f\u5f15\u5165\u5230\u5f53\u524d\u9879\u76ee\u4e2d\u3002 \u2003\u4f46\u662f\u4f20\u9012\u4f9d\u8d56\u53ef\u80fd\u4ea7\u751f\u51b2\u7a81\uff0c\u5373A\u95f4\u63a5\u4f9d\u8d56\u4e24\u4e2a\u4e0d\u540c\u7684\u7248\u672c\u7684C,\u53ef\u4ee5\u901a\u8fc7exclusions\u6392\u9664\u51b2\u7a81\u7248\u672c\u3002 \u2003 \u4f9d\u8d56\u8303\u56f4 : \u2003 II. \u591a\u6a21\u5757\u6784\u5efa \u5c06\u4e00\u4e2a\u9879\u76ee\u5206\u89e3\u4e3a\u591a\u4e2a\u6a21\u5757\u5df2\u7ecf\u662f\u4e00\u4e2a\u5f88\u901a\u7528\u7684\u65b9\u5f0f, \u5728 Maven \u4e2d\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a parent POM \u4f5c\u4e3a\u4e00\u7ec4 module \u7684\u805a\u5408 POM\u3002 \u5728\u8be5 POM \u4e2d\u53ef\u4ee5\u4f7f\u7528\u6807\u7b7e\u6765\u5b9a\u4e49\u4e00\u7ec4\u5b50\u6a21\u5757\u3002parent POM \u4e0d\u4f1a\u6709\u4ec0\u4e48\u5b9e\u9645\u6784\u5efa\u4ea7\u51fa\u3002 \u800cparent POM \u4e2d\u7684 build \u914d\u7f6e\u4ee5\u53ca\u4f9d\u8d56\u914d\u7f6e\u90fd\u4f1a\u81ea\u52a8\u7ee7\u627f\u7ed9\u5b50 module\u3002 III. \u4e00\u81f4\u7684\u9879\u76ee\u7ed3\u6784 (\u4e0d\u540c\u7684 IDE \u9879\u76ee\u7ed3\u6784\u662f\u4e00\u81f4) \u5236\u5b9a\u4e86\u4e00\u5957\u9879\u76ee\u76ee\u5f55\u7ed3\u6784\u4f5c\u4e3a\u6807\u51c6\u7684 Java \u9879\u76ee\u7ed3\u6784,\u89e3\u51b3\u4e0d\u540c ide \u5e26\u6765\u7684\u6587\u4ef6\u76ee\u5f55\u4e0d\u4e00\u81f4\u95ee\u9898\u3002 IV. \u4e00\u81f4\u7684\u6784\u5efa\u6a21\u578b\u548c\u63d2\u4ef6\u673a\u5236 <dependency> <groupId>javax.servlet</groupId> // \u5305\u540d/\u9879\u76ee\u540d <artifactId>javax.servlet-api</artifactId> // \u67d0\u4e00\u6a21\u5757\u540d <version>3.1.0</version> // \u6240\u9700\u8981jar\u5305\u7684\u7248\u672c </dependency> \u5e38\u7528\u547d\u4ee4 \u6ce8\u610f maven\u4e2d\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\uff0c\u56e0\u6b64\u5bfc\u51fatarget\u65f6\u53ef\u80fd\u4f1a\u9047\u5230\u914d\u7f6e\u6587\u4ef6\u65e0\u6cd5\u5bfc\u51fa\u7684\u60c5\u51b5\uff0c\u89e3\u51b3\u65b9\u6848\u662f\u5728pom.xml\u4e2d\u7684build\u4e2d\u914d\u7f6eresources\uff0c\u6765\u9632\u6b62\u5bfc\u51fa\u5931\u8d25\u3002 <build> <resources> <resource> <directory>src/main/resources</directory> <includes> <include>**/*.properties</include> <include>**/*.xml</include> </includes> <filtering>true</filtering> </resource> <resource> <directory>src/main/java</directory> <includes> <include>**/*.properties</include> <include>**/*.xml</include> </includes> <filtering>true</filtering> </resource> </resources> </build> Prepare POJO Plain Old Java Object, \u201c\u7b80\u5355java\u5bf9\u8c61\u201d\u3002POJO\u7684\u5185\u5728\u542b\u4e49\u662f\u6307\u90a3\u4e9b\u6ca1\u6709\u4ece\u4efb\u4f55\u7c7b\u7ee7\u627f\u3001\u4e5f\u6ca1\u6709\u5b9e\u73b0\u4efb\u4f55\u63a5\u53e3\uff0c\u66f4\u6ca1\u6709\u88ab\u5176\u5b83\u6846\u67b6\u4fb5\u5165\u7684java\u5bf9\u8c61\u3002 JavaBean\u5bf9\u8c61 JavaBean\u662f\u4e00\u4e2a\u9075\u5faa\u7279\u5b9a\u5199\u6cd5\u7684Java\u7c7b,\u662f\u4e00\u79cdJava\u8bed\u8a00\u7f16\u5199\u7684\u53ef\u91cd\u7528\u7ec4\u4ef6,\u5b83\u7684\u65b9\u6cd5\u547d\u540d,\u6784\u9020\u53ca\u884c\u4e3a\u5fc5\u987b\u7b26\u5408\u7279\u5b9a\u7684\u7ea6\u5b9a\uff1a 1\u3001\u8fd9\u4e2a\u7c7b\u5fc5\u987b\u5177\u6709\u4e00\u4e2a\u516c\u5171\u7684(public)\u65e0\u53c2\u6784\u9020\u51fd\u6570\uff1b 2\u3001\u6240\u6709\u5c5e\u6027\u79c1\u6709\u5316\uff08private\uff09\uff1b 3\u3001\u79c1\u6709\u5316\u5c5e\u6027\u5fc5\u987b\u901a\u8fc7public\u7c7b\u578b\u7684\u65b9\u6cd5(getter\u548csetter)\u66b4\u9732\u7ed9\u5176\u4ed6\u7a0b\u5e8f,\u5e76\u4e14\u65b9\u6cd5\u7684\u547d\u540d\u4e5f\u5fc5\u987b\u9075\u5faa\u4e00\u5b9a\u7684\u547d\u540d\u89c4\u8303\u3002 4\u3001\u8fd9\u4e2a\u7c7b\u5e94\u662f\u53ef\u5e8f\u5217\u5316\u7684\u3002\uff08\u6bd4\u5982\u53ef\u4ee5\u5b9e\u73b0Serializable \u63a5\u53e3\uff0c\u7528\u4e8e\u5b9e\u73b0bean\u7684\u6301\u4e45\u6027\uff09 IoC(Inverse of Control) \u63a7\u5236\u53cd\u8f6c\u662f\u5c06\u5bf9\u8c61\u5b9e\u4f8b\u5316\u7684\u521b\u5efa\u8fc7\u7a0b\u4ea4\u7ed9\u5916\u90e8\u5bb9\u5668\u53bb\u8d1f\u8d23, \u800c\u975e\u7531\u7a0b\u5e8f\u5458\u5728\u4ee3\u7801\u4e2d\u4e8b\u5148\u663e\u793a\u5b9e\u4f8b\u5316 \uff1a\u5bf9\u8c61\u4ec5\u901a\u8fc7\u6784\u9020\u51fd\u6570\u53c2\u6570\u3001\u5de5\u5382\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u6216\u5bf9\u8c61\u5b9e\u4f8b\u4e2d(\u5b9e\u4f8b\u53ef\u4ee5\u7531\u6784\u9020\u51fd\u6570\u6216\u8005\u5de5\u5382\u65b9\u6cd5\u8fd4\u56de)\u7684\u5c5e\u6027\u6765\u5b9a\u4e49\u6240\u9700\u7684\u4f9d\u8d56\u5173\u7cfb\uff08\u5373\u5b83\u4eec\u4f7f\u7528\u7684\u5176\u4ed6\u5bf9\u8c61\uff09\u3002\u7136\u540e\u5bb9\u5668\u5728\u521b\u5efabean\u65f6\u6ce8\u5165\u8fd9\u4e9b\u4f9d\u8d56\u9879\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u57fa\u672c\u4e0a\u662fbean\u672c\u8eab(\u5373\u901a\u8fc7\u4f7f\u7528\u7c7b\u7684\u76f4\u63a5\u6784\u9020\u6216\u670d\u52a1\u5b9a\u4f4d\u5668\u6a21\u5f0f\u7b49\u673a\u5236\u6765\u63a7\u5236\u5176\u4f9d\u8d56\u9879\u7684\u5b9e\u4f8b\u5316\u6216\u4f4d\u7f6e)\u7684\u9006\u8fc7\u7a0b\uff0c\u56e0\u6b64\u79f0\u4e3a\u63a7\u5236\u53cd\u8f6c; \u4f9d\u8d56\u6ce8\u5165(Dependency Injection\uff0c DI)\u662fIOC\u7684\u5177\u4f53\u5b9e\u73b0 \uff0c\u53ef\u4ee5\u770b\u4f5c\u5c5e\u6027\u8d4b\u503c\u7684\u4e00\u79cd\u64cd\u4f5c(\u672c\u8d28\u662f\u57fa\u4e8e\u53cd\u5c04\uff0c\u8c03\u7528bean\u7c7b\u7684setter\u65b9\u6cd5\u6216\u8005\u6784\u9020\u65b9\u6cd5\uff0c\u4f20\u9012\u9700\u8981\u6ce8\u5165\u7684\u5bf9\u8c61)\uff1b\u4f9d\u8d56: \u6307Bean\u5bf9\u8c61\u7684\u521b\u5efa\u4f9d\u8d56\u4e8e\u5bb9\u5668\uff1b\u6ce8\u5165 : \u6307Bean\u5bf9\u8c61\u6240\u4f9d\u8d56\u7684\u8d44\u6e90, \u7531\u5bb9\u5668\u6765\u8bbe\u7f6e\u548c\u88c5\u914d\u3002 Container Review configuration meatdata: The configuration metadata is represented in XML, Java annotations, or Java code. It lets you express the objects that compose your application and the rich interdependencies between those objects. This configuration metadata represents how you, as an application developer, tell the Spring container to instantiate, configure, and assemble the objects in your application. Spring Container : The org.springframework.beans and org.springframework.context packages are the basis for Spring Framework\u2019s IoC container. The BeanFactory interface provides an advanced configuration mechanism capable of managing any type of object. ApplicationContext is a sub-interface of BeanFactory\u3002 \u2003 \u6838\u5fc3\u6280\u672f: \u5de5\u5382\u6a21\u5f0f\u3001xml\u89e3\u6790\u3001\u53cd\u5c04\u6280\u672f\u3001\u7b56\u7565\u6a21\u5f0f(\u521b\u5efa\u8868\u793a\u5404\u79cd\u7b56\u7565\u7684\u5bf9\u8c61\u548c\u4e00\u4e2a\u884c\u4e3a\u968f\u7740\u7b56\u7565\u5bf9\u8c61\u6539\u53d8\u800c\u6539\u53d8\u7684 context \u5bf9\u8c61\uff0c\u7b56\u7565\u5bf9\u8c61\u5c31\u662fconfiguration metadata)\u3001\u5355\u4f8b\u6a21\u5f0f(IoC\u5bb9\u5668\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u90fd\u662f\u5355\u4f8b\u5bf9\u8c61\uff0c \u76f8\u5e94\u7684\u6784\u9020\u51fd\u6570\u53ea\u4f1a\u88ab\u8c03\u7528\u4e00\u6b21) Instantiating Beans 1\u3001Instantiation with a Constructor: \u5982\u679cbean\u7c7b\u4e2d\u5305\u542b\u5c5e\u6027\uff0c\u8981\u6c42bean\u63d0\u4f9b\u65e0\u53c2\u6784\u9020\u51fd\u6570; <bean id=\"exampleBean\" class=\"examples.ExampleBean\"/> \u2003\u20032\u3001Instantiation with a Static Factory Method\uff0c Spring\u89e3\u6790\u914d\u7f6e\u6587\u4ef6\uff0c\u901a\u8fc7\u53cd\u5c04\u8c03\u7528\u9759\u6001\u5de5\u5382\u7c7b\u7684\u9759\u6001\u5de5\u5382\u65b9\u6cd5\uff0c\u7531\u4e8e\u4e0d\u4f7f\u7528\u5bb9\u5668\u6765\u6784\u9020\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u5728\u6784\u9020\u5b9e\u4f8b\u524d\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u3002 <bean id=\"clientService\" class=\"examples.ClientService\" // \u5305\u542b static factory method\u7684\u7c7b factory-method=\"createInstance\"/> // \u9759\u6001\u5de5\u5382\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u5b9e\u4f8b\u5316\u5bf9\u8c61 \u2003\u20033\u3001Instantiation by Using an Instance Factory Method \u4f7f\u7528\u5b9e\u4f8b\u5de5\u5382\u65b9\u6cd5\u8fdb\u884c\u5b9e\u4f8b\u5316\u4f1a\u4ece\u5bb9\u5668\u4e2d\u8c03\u7528\u73b0\u6709bean\u7684\u975e\u9759\u6001\u65b9\u6cd5\u6765\u521b\u5efa\u65b0bean\u3002\u8981\u4f7f\u7528\u6b64\u673a\u5236\uff0c\u8bf7\u5c06class\u5c5e\u6027\u7559\u7a7a\uff0c\u5e76\u5728factory-bean\u5c5e\u6027\u4e2d\u6307\u5b9a\u5f53\u524d\u5bb9\u5668\uff08\u6216\u7236\u5bb9\u5668\u6216\u7956\u5148\u5bb9\u5668\uff09\u4e2d\u5305\u542b\u8981\u521b\u5efa\u5bf9\u8c61\u7684\u5b9e\u4f8b\u65b9\u6cd5\u7684Bean\u7684\u540d\u79f0\u3002\u4f7f\u7528factory-method\u5c5e\u6027\u8bbe\u7f6e\u5de5\u5382\u65b9\u6cd5\u672c\u8eab\u7684\u540d\u79f0\u3002\u4ee5\u4e0b\u793a\u4f8b\u663e\u793a\u4e86\u5982\u4f55\u914d\u7f6e\u6b64\u7c7bBean\uff1a <!-- the factory bean, which contains a method called createInstance() --> <bean id=\"serviceLocator\" class=\"examples.DefaultServiceLocator\"> <!-- inject any dependencies required by this locator bean --> </bean> <!-- the bean to be created via the factory bean --> <bean id=\"clientService\" factory-bean=\"serviceLocator\" factory-method=\"createClientServiceInstance\"/> // serviceLocator\u4e2d\u7684\u5de5\u5382\u65b9\u6cd5(\u975e\u9759\u6001) IoC\u6ce8\u5165 \u5206\u4e3asetter\u6ce8\u5165\u548c\u6784\u9020\u5668\u6ce8\u5165 setter\u6ce8\u5165 :\u5bb9\u5668\u901a\u8fc7\u5728bean\u4e0a\u8c03\u7528setter\u65b9\u6cd5\u6765\u5b9e\u73b0\u57fa\u4e8esetter\u7684DI\uff1b\u5982\u679c\u5c5e\u6027\u662fboolean\u7c7b\u578b, \u5219\u6ca1\u6709set\u65b9\u6cd5, \u662f is \u3002 \u6784\u9020\u5668\u6ce8\u5165 :\u57fa\u4e8e\u6784\u9020\u51fd\u6570\u7684DI\u662f\u901a\u8fc7\u5bb9\u5668\u8c03\u7528\u5177\u6709\u591a\u4e2a\u53c2\u6570\uff08\u6bcf\u4e2a\u53c2\u6570\u4ee3\u8868\u4e00\u4e2a\u4f9d\u8d56\u9879\uff09\u7684\u6784\u9020\u51fd\u6570\u6765\u5b8c\u6210\u7684. \u6784\u9020\u5668\u6ce8\u5165\u53ef\u80fd\u4ea7\u751f\u5faa\u73af\u4f9d\u8d56\u95ee\u9898\uff0c\u4e92\u76f8\u4f9d\u8d56\u5bf9\u65b9\u5bfc\u81f4bean\u65e0\u6cd5\u5b9e\u4f8b\u5316\uff0c\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7\u5c06\u4e92\u76f8\u4f9d\u8d56\u7684\u53cc\u65b9\u7531\u6784\u9020\u5668\u6ce8\u5165\u8f6c\u4e3asetter\u6ce8\u5165\uff0c\u56e0\u4e3a\u540e\u8005\u662f\u5148\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u518d\u53bb\u5b9e\u4f8b\u5316setter\u65b9\u6cd5\u6240\u9700\u7684bean\u5bf9\u8c61\uff1b\u800c\u524d\u8005\u662f\u5148\u53bb\u5b9e\u4f8b\u5316\u6784\u9020\u5668\u6240\u9700\u7684bean\u5bf9\u8c61\u3002 \u6b64\u5916\u8fd8\u6709\u9759\u6001\u5de5\u5382\u6ce8\u5165\u548c\u5b9e\u4f8b\u5316\u5de5\u5382\u6ce8\u5165\uff0c\u672c\u8d28\u90fd\u662fsetter\u6ce8\u5165\uff0c\u4e0d\u8fc7\u662f\u88ab\u6ce8\u5165\u7684bean\u5bf9\u8c61\u662f\u901a\u8fc7\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u6216\u8005\u5b9e\u4f8b\u5316\u5de5\u5382\u65b9\u6cd5\u83b7\u53d6\u7684\uff1b\u4f8b\u5982userDao\u662f\u901a\u8fc7\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u5b9e\u4f8b\u5316\u7684\u3002 <bean id=\"userService\" class=\"com.wh.service.UserService\"> <!--set\u65b9\u6cd5\u6ce8\u5165 \u901a\u8fc7property\u5c5e\u6027\u6ce8\u5165 name:bean\u5bf9\u8c61\u4e2d\u5c5e\u6027\u5b57\u6bb5\u540d, \u8be5\u5c5e\u6027\u9700\u8981\u6709\u5bf9\u5e94\u7684setter\u65b9\u6cd5 ref: \u8be5\u5b57\u6bb5\u7c7b\u578b\u5bf9\u5e94\u7684bean \u7684id value: \u6ce8\u5165\u5e38\u7528\u5bf9\u8c61\u7c7b\u578b\u6216\u8005\u57fa\u672c\u7c7b\u578b\u65f6\uff0c\u6307\u5b9a\u5176\u503c --> <!--\u6ce8\u5165Javabean\u5bf9\u8c61--> <property name=\"_userDao\" ref=\"userDao\"/> <!--\u6ce8\u5165\u5e38\u7528\u5bf9\u8c61\u7c7b\u578b\u6216\u8005\u57fa\u672c\u7c7b\u578b--> <!-- \u6ce8\u5165\u7c7b\u578b\u4e3aString --> <property name=\"host\" value=\"127.0.0.1\"/> <!-- \u6ce8\u5165\u7c7b\u578b\u4e3a Integer --> <property name=\"port\" value=\"9999\"/> <!-- \u6ce8\u5165\u7c7b\u578b\u4e3aList --> <property name=\"_strList\"> <list> <value>wh</value> <value>xx</value> </list> </property> <!--\u901a\u8fc7\u6784\u9020\u5668\u6ce8\u5165--> <constructor-arg name=\"_studentDao\" ref=\"studentDao\"/> <!--index\u5c5e\u6027\u6765\u660e\u786e\u6307\u5b9a\u6784\u9020\u51fd\u6570\u53c2\u6570\u7684\u7d22\u5f15--> <constructor-arg name=\"uname\" value=\"root\" index=\"1\"/> </bean> <bean name=\"studentDao\" class=\"com.wh.dao.StudentDao\"></bean> <!--\u901a\u8fc7import\uff0c\u52a0\u8f7ddao\u7684\u914d\u7f6e\u6587\u4ef6\uff0c dao.xml\u4e2d\u901a\u8fc7\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u5b9e\u4f8b\u5316UserDao\u5bf9\u8c61, --> <import resource=\"dao.xml\"/> <!-- p\u7a7a\u95f4\u6ce8\u5165: properties namespace, \u8981\u6c42\u5c5e\u6027\u63d0\u4f9bset\u65b9\u6cd5\uff0c\u672c\u8d28\u662fsetter\u6ce8\u5165 --> <!-- \u5bfc\u5165\u7ea6\u675f :--> xmlns:p=\"http://www.springframework.org/schema/p\" <bean id=\"user\" class=\"com.kuang.pojo.User\" p:name=\"\u72c2\u795e\" p:age=\"18\"/> <!-- c\u7a7a\u95f4\u6ce8\u5165: construct namespace, \u8981\u6c42\u5c5e\u6027\u63d0\u4f9b\u6709\u53c2\u6784\u9020\u51fd\u6570\uff0c\u672c\u8d28\u662f\u6784\u9020\u5668\u6ce8\u5165 --> <!-- \u5bfc\u5165\u7ea6\u675f --> xmlns:c=\"http://www.springframework.org/schema/c\" <!--C(\u6784\u9020: Constructor)\u547d\u540d\u7a7a\u95f4 , \u5c5e\u6027\u4f9d\u7136\u8981\u8bbe\u7f6eset\u65b9\u6cd5--> <bean id=\"user\" class=\"com.kuang.pojo.User\" c:name=\"\u72c2\u795e\" c:age=\"18\"/> IoC\u81ea\u52a8\u88c5\u914d \u81ea\u52a8\u88c5\u914d\u662f\u4f7f\u7528spring\u6ee1\u8db3bean\u4f9d\u8d56\u7684\u4e00\u79cd\u65b9\u6cd5\uff1bspring\u4f1a\u5728\u5e94\u7528\u4e0a\u4e0b\u6587\u4e2d\u4e3a\u67d0\u4e2abean\u5bfb\u627e\u5176\u4f9d\u8d56\u7684bean\u3002 Spring\u4e2dbean\u6709\u4e09\u79cd\u88c5\u914d\u673a\u5236\uff0c\u5206\u522b\u662f:\u5728xml\u4e2d\u663e\u5f0f\u914d\u7f6e;\u5728java\u4e2d\u663e\u5f0f\u914d\u7f6e;\u9690\u5f0f\u7684bean\u53d1\u73b0\u673a\u5236\u548c\u81ea\u52a8\u88c5\u914d\u3002 Spring\u7684\u81ea\u52a8\u88c5\u914d\u9700\u8981\u4ece\u4e24\u4e2a\u89d2\u5ea6\u6765\u5b9e\u73b0\uff0c\u6216\u8005\u8bf4\u662f\u4e24\u4e2a\u64cd\u4f5c\uff1a \u7ec4\u4ef6\u626b\u63cf(component scanning)\uff1aspring\u4f1a\u81ea\u52a8\u53d1\u73b0\u5e94\u7528\u4e0a\u4e0b\u6587\u4e2d\u6240\u521b\u5efa\u7684bean\uff1b \u81ea\u52a8\u88c5\u914d(autowiring)\uff1aspring\u81ea\u52a8\u6ee1\u8db3bean\u4e4b\u95f4\u7684\u4f9d\u8d56\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8bf4\u7684IoC/DI\u3002 1.\u4f7f\u7528xml public class Cat { public void shout() { System.out.println(\"miao~\"); } } public class Dog { public void shout() { System.out.println(\"wang~\"); } } // \u65b0\u5efa\u4e00\u4e2a\u7528\u6237\u7c7b User public class User { private Cat cat; private Dog dog; private String str; // setter\u65b9\u6cd5 } <!-- \u4f7f\u7528xml --> <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"> <bean id=\"dog\" class=\"com.kuang.pojo.Dog\"/> <bean id=\"cat\" class=\"com.kuang.pojo.Cat\"/> <bean id=\"user\" class=\"com.kuang.pojo.User\"> <property name=\"cat\" ref=\"cat\"/> <property name=\"dog\" ref=\"dog\"/> <property name=\"str\" value=\"qinjiang\"/> </bean> </beans> 1.2. \u4f7f\u7528\u7b80\u5316xml : \u5f53\u4e00\u4e2abean\u8282\u70b9\u5e26\u6709 autowire=\"byName\" \u7684\u5c5e\u6027\u65f6, \u5c06\u67e5\u627e\u5176\u7c7b\u4e2d\u6240\u6709\u7684set\u65b9\u6cd5\u540d\uff0c\u4f8b\u5982setCat\uff0c\u83b7\u5f97\u5c06set\u53bb\u6389\u5e76\u4e14\u9996\u5b57\u6bcd\u5c0f\u5199\u7684\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982cat; \u53bbspring\u5bb9\u5668\u4e2d\u5bfb\u627e\u662f\u5426\u6709\u6b64\u5b57\u7b26\u4e32\u540d\u79f0id\u7684\u5bf9\u8c61; \u5982\u679c\u6709\uff0c\u5c31\u53d6\u51fa\u6ce8\u5165\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u62a5\u7a7a\u6307\u9488\u5f02\u5e38\u3002 autowire byType (\u6309\u7c7b\u578b\u81ea\u52a8\u88c5\u914d): \u4f7f\u7528autowire=\"byType\", \u9996\u5148\u9700\u8981\u4fdd\u8bc1\uff1a\u540c\u4e00\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5728spring\u5bb9\u5668\u4e2d\u552f\u4e00\u3002\u5982\u679c\u4e0d\u552f\u4e00\uff0c\u4f1a\u62a5\u4e0d\u552f\u4e00\u7684\u5f02\u5e38\u3002 <bean id=\"user\" class=\"com.kuang.pojo.User\" autowire=\"byName\"> <property name=\"str\" value=\"qinjiang\"/> </bean> <!-- ====== --> <bean id=\"user\" class=\"com.kuang.pojo.User\" autowire=\"byType\"> <property name=\"str\" value=\"qinjiang\"/> </bean>s 2. \u4f7f\u7528\u6ce8\u89e3 : \u5229\u7528\u6ce8\u89e3\u7684\u65b9\u5f0f\u6ce8\u5165\u5c5e\u6027 \u524d\u63d0: \u5728spring\u914d\u7f6e\u6587\u4ef6\u4e2d\u5f15\u5165context\u6587\u4ef6\u5934; \u5f00\u542f\u5c5e\u6027\u6ce8\u89e3\u652f\u6301\uff01 @Resource \u6ce8\u89e3: 1\u3001\u6ce8\u89e3\u9ed8\u8ba4\u901a\u8fc7\u5c5e\u6027\u5b57\u6bb5\u540d\u79f0\u67e5\u627e\u5bf9\u5e94\u7684bean\u5bf9\u8c61(byName)\uff0c\u56e0\u6b64\u8be5\u540d\u79f0\u4e00\u822c\u5e94\u4e0ebean\u6807\u7b7e\u7684id\u503c\u76f8\u540c\u3002 2\u3001\u5982\u679c\u4e0d\u76f8\u540c\uff0c\u5219\u4f1a\u901a\u8fc7\u5c5e\u6027\u5bf9\u5e94\u7684class\u7c7b\u578b\u6765\u67e5\u627e\u3002 3\u3001\u5c5e\u6027\u53ef\u4ee5\u63d0\u4f9bsetter\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u63d0\u4f9b\u3002 4\u3001\u6ce8\u89e3\u53ef\u4ee5\u58f0\u660e\u5728\u5c5e\u6027\u5b57\u6bb5\u4e0a\uff0c\u6216setter\u65b9\u6cd5\u4e0a\u3002 5\u3001\u53ef\u4ee5\u8bbe\u7f6e\u6ce8\u89e3\u7684name\u5c5e\u6027\uff0c\u8981\u4e0ebean\u6807\u7b7e\u7684id\u503c\u76f8\u540c\u3002 6\u3001\u5f53\u6ce8\u5165\u63a5\u53e3\u65f6\uff0c\u5982\u679c\u63a5\u53e3\u53ea\u6709\u4e00\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u5219\u6b63\u5e38\u5b9e\u4f8b\u5316\uff1b\u5426\u5219\u9700\u8981\u901a\u8fc7\u6ce8\u89e3\u7684name\u5c5e\u6027\u6307\u5b9a\u5177\u4f53\u7684\u5b9e\u73b0\u7c7b\u7684bean\u6807\u7b7e\u7684id\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u6b67\u4e49\u800c\u62a5\u9519\u3002 @Autowired \u6ce8\u89e3: 1\u3001\u9ed8\u8ba4\u901a\u8fc7class\u7c7b\u578b\u67e5\u627ebean\u5bf9\u8c61(byType)\uff0c\u4e0e\u5c5e\u6027\u5b57\u6bb5\u7684\u540d\u79f0\u65e0\u5173\u3002 2\u3001\u5c5e\u6027\u53ef\u4ee5\u63d0\u4f9bsetter\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4e0d\u63d0\u4f9b\u3002 3\u3001\u6ce8\u89e3\u53ef\u4ee5\u58f0\u660e\u5728\u5c5e\u6027\u5b57\u6bb5\u4e0a\uff0c\u6216setter\u65b9\u6cd5\u4e0a\u3002 4\u3001@Autowired\u6ce8\u89e3\u6ca1\u6709name\u5c5e\u6027\uff0c\u53ef\u4ee5\u6dfb\u52a0 @Qualifier\u7ed3\u5408\u4f7f\u7528\uff0c\u901a\u8fc7value\u5c5e\u6027\u503c\u67e5\u627ebean\u5bf9\u8c61(value\u5bf9\u8c61\u5fc5\u987b\u8bbe\u7f6e\uff0c\u4e14\u9700\u4e0ebean\u6807\u7b7eid\u76f8\u540c)\u3002 // Bean\u7c7b\u4e2d\u4e0d\u9700\u8981\u518d\u8bbe\u7f6esetter\u65b9\u6cd5\uff1b public class User { @Autowired @Qualifier(value=\"cat_alias\") private Cat cat; @Resource private Dog dog; } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context=\"http://www.springframework.org/schema/context\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\"> <!-- \u9700\u8981\u5728spring\u914d\u7f6e\u6587\u4ef6\u4e2d\u5f15\u5165context\u6587\u4ef6\u5934 --> <!--\u5f00\u542f\u5c5e\u6027\u6ce8\u89e3\u652f\u6301--> <context:annotation-config/> <bean id=\"dog\" class=\"com.kuang.pojo.Dog\"/> <bean id=\"cat_alias\" class=\"com.kuang.pojo.Cat\"/> <bean id=\"user\" class=\"com.kuang.pojo.User\"/> </beand> 3. \u4f7f\u7528java config /** Configuration\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a@Component\uff0c\u4ee5\u8be5\u6ce8\u89e3\u4fee\u9970\u7684\u7c7b\uff0c\u4ee3\u8868\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff1b Import\uff0c\u5bfc\u5165\u5408\u5e76\u5176\u4ed6\u914d\u7f6e\u7c7b\uff0c\u7c7b\u4f3c\u4e8e\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 inculde \u6807\u7b7e */ @Configuration @Import(MyConfig2.class) public class MyConfig{ // \u6ce8\u518c\u4e00\u4e2abean, \u7b49\u540c\u4e8exml\u914d\u7f6e\uff0c\u65b9\u6cd5\u540d\u7b49\u4ef7\u4e8e bean id @Bean public User getUser{ return new User(); } } @Test public void test(){ // \u901a\u8fc7 AnnotationConfigApplicationContext \u83b7\u53d6\u4e0a\u4e0b\u6587 // \u901a\u8fc7\u914d\u7f6e\u7c7b\u7684\u5bf9\u8c61\u6765\u52a0\u8f7d ApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class); User user = (User)applicationContext.getBean(\"getUser\"); } IoC\u626b\u63cf\u5668 \u4e3a\u4e86\u907f\u514d\u624b\u52a8\u914d\u7f6e\u5927\u91cf\u7684bean\u5bf9\u8c61\uff0cSpring\u63d0\u4f9b\u4e86\u626b\u63cf\u5668\uff0c\u5bf9\u626b\u63cf\u5230\u7684bean\u5bf9\u8c61\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\uff0c\u7b80\u5316\u5f00\u53d1\u914d\u7f6e\u3002 \u5728\u9700\u8981\u5b9e\u4f8b\u5316\u7684JavaBean\u5bf9\u8c61\u7684\u7c7b\u5b9a\u4e49\u524d\u52a0\u4e0a\u6ce8\u89e3: Dao\u5c42: @Repository; Service\u5c42: @Service; Controller\u5c42: @Controller; \u666e\u901a\u5c42: @Component <!--\u8bbe\u7f6e\u626b\u63cf\u8303\u56f4--> <context:component-scan base-package=\"com.wh\" /> \u5bf9\u4e8e\u57fa\u672c\u7c7b\u578b\u6216\u8005String\u7c7b\u578b\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3\u6ce8\u5165\u503c // \u53ef\u4ee5\u4e0d\u7528\u63d0\u4f9bset\u65b9\u6cd5\uff0c\u76f4\u63a5\u5728\u76f4\u63a5\u540d\u4e0a\u6dfb\u52a0@value(\"\u503c\") @Component(\"user\") // \u76f8\u5f53\u4e8e\u914d\u7f6e\u6587\u4ef6\u4e2d <bean id=\"user\" class=\"\u5f53\u524d\u6ce8\u89e3\u7684\u7c7b\"/> public class User { @Value(\"wh\") // \u76f8\u5f53\u4e8e\u914d\u7f6e\u6587\u4ef6\u4e2d <property name=\"name\" value=\"wh\"/> public String name; // \u5982\u679c\u63d0\u4f9b\u4e86set\u65b9\u6cd5\uff0c\u5728set\u65b9\u6cd5\u4e0a\u6dfb\u52a0@value(\"\u503c\"); @Value(\"wh\") public void setName(String name) { this.name = name; } } Bean\u4f5c\u7528\u57df 1\u3001singleton\u4f5c\u7528\u57df \u5bb9\u5668\u4e2d\u9ed8\u8ba4\u60c5\u51b5\u662flazy-init=false, \u539f\u56e0\u662f\u53ef\u4ee5\u63d0\u524d\u53d1\u73b0\u914d\u7f6e\u95ee\u9898\uff1bBean\u5bf9\u8c61\u5728\u542f\u52a8\u65f6\u5c31\u4f1a\u88ab\u5b9e\u4f8b\u5316\u653e\u5165\u7f13\u5b58\u6c60\u4e2d\uff0c\u4f7f\u7528\u65f6\uff0c\u4e0d\u9700\u8981\u518d\u53bb\u5b9e\u4f8b\u5316\uff0c\u63d0\u9ad8\u6548\u7387\u3002 \u4ec0\u4e48\u7c7b\u578b\u5bf9\u8c61\u9002\u5408\u5355\u4f8b/\u4ec0\u4e48\u7c7b\u578b\u5bf9\u8c61\u9002\u5408\u4ea4\u7ed9IoC\u5b9e\u4f8b\u5316?: \u65e0\u72b6\u6001\u5bf9\u8c61 \uff0c\u5373\u4e0d\u5b58\u5728\u4f1a\u6539\u53d8\u5f53\u524d\u5bf9\u8c61\u72b6\u6001\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5982Controller\u3001Dao\u3001Service\u5c42\u3002\u8fd9\u4e9b\u4e1a\u52a1\u5c42\u8003\u8651\u5230\u7ebf\u7a0b\u5b89\u5168\uff0c\u5176\u4e2d\u4e0d\u9700\u8981\u5305\u542b\u4f1a\u53d8\u5316\u7684\u5c5e\u6027\u503c\u6216\u8005\u8bf4\u4e0d\u9700\u8981\u5b9e\u4f8b\u53d8\u91cf\u7684\u5b58\u5728\uff0c\u5176\u4f9d\u8d56\u7684bean\u5bf9\u8c61\u90fd\u662f\u901a\u8fc7\u6ce8\u5165\u83b7\u53d6\u5230\u5b9e\u4f8b\u3002 2\u3001prototype\u4f5c\u7528\u57df 3\u3001Web\u5e94\u7528\u4e2d\u7684\u4f5c\u7528\u57df Bean\u751f\u547d\u5468\u671f \u5305\u62ecBean\u7684\u5b9a\u4e49\u3001\u521d\u59cb\u5316\u3001\u4f7f\u7528\u548c\u9500\u6bc14\u4e2a\u9636\u6bb5: AOP Aspect Oriented Programming: \u9762\u5411\u5207\u9762\u7f16\u7a0b \u901a\u8fc7\u4ee3\u7406\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5728\u6307\u5b9a\u4f4d\u7f6e\u6267\u884c\u5bf9\u5e94\u6d41\u7a0b\uff0c\u4ece\u800c\u5c06\u4e00\u4e9b\u6a2a\u5411\u529f\u80fd\u62bd\u79bb\u5f62\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u6a21\u5757\uff0c\u7136\u540e\u518d\u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u8fd9\u4e9b\u529f\u80fd\u3002 \u4ee3\u7406\u6a21\u5f0f \u4e3a\u67d0\u4e00\u4e2a\u5bf9\u8c61(\u59d4\u6258\u7c7b)\u63d0\u4f9b\u4e00\u4e2a\u4ee3\u7406(\u4ee3\u7406\u7c7b)\uff0c\u7528\u6765\u63a7\u5236\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u7684\u8bbf\u95ee\uff1b\u8981\u6c42\u59d4\u6258\u7c7b\u548c\u4ee3\u7406\u7c7b\u6709\u4e00\u4e2a\u5171\u540c\u7684\u7236\u7c7b\u6216\u7236\u63a5\u53e3\uff0c\u4ee3\u7406\u7c7b\u4f1a\u5bf9\u8bf7\u6c42\u505a\u9884\u5904\u7406\u3001\u8fc7\u6ee4\uff0c\u5c06\u8bf7\u6c42\u5206\u914d\u7ed9\u6307\u5b9a\u5bf9\u8c61\u3002 \u4ee3\u7406\u6a21\u5f0f\u7684\u4e24\u4e2a\u8bbe\u8ba1\u539f\u5219: 1\u3001\u4ee3\u7406\u7c7b\u4e0e\u59d4\u6258\u7c7b\u5177\u6709\u76f8\u4f3c\u7684\u884c\u4e3a(\u901a\u5e38\u662f\u5b9e\u73b0\u76f8\u540c\u7684\u63a5\u53e3)\uff1b2\u3001\u4ee3\u7406\u7c7b\u589e\u5f3a\u59d4\u6258\u7c7b\u7684\u884c\u4e3a\u3002 \u5e38\u89c1\u7684\u4ee3\u7406\u6a21\u5f0f:\u9759\u6001\u4ee3\u7406\u548c\u52a8\u6001\u4ee3\u7406\u3002 \u9759\u6001\u4ee3\u7406 \u4e3a\u67d0\u4e2a\u5bf9\u8c61(\u59d4\u6258\u7c7b\uff0c\u5373\u76ee\u6807\u5bf9\u8c61)\u63d0\u4f9b\u4e00\u4e2a\u4ee3\u7406\uff0c\u4ee5\u63a7\u5236\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u7684\u8bbf\u95ee\u3002\u4ee3\u7406\u7c7b\u548c\u59d4\u6258\u7c7b\u6709\u5171\u540c\u7684\u7236\u7c7b/\u7236\u63a5\u53e3\uff0c\u8fd9\u6837\u4efb\u4f55\u53ef\u4ee5\u4f7f\u7528\u59d4\u6258\u7c7b\u5bf9\u8c61\u7684\u5730\u65b9\u90fd\u53ef\u4ee5\u4f7f\u7528\u4ee3\u7406\u7c7b\u5bf9\u8c61\u3002\u4ee3\u7406\u7c7b\u8d1f\u8d23\u8bf7\u6c42\u7684\u9884\u5904\u7406\u3001\u8fc7\u6ee4\u3001\u5c06\u8bf7\u6c42\u5206\u914d\u7ed9\u59d4\u6258\u7c7b\u5904\u7406\uff0c\u4ee5\u53ca\u59d4\u6258\u7c7b\u6267\u884c\u5b8c\u8bf7\u6c42\u540e\u7684\u540e\u7eed\u5904\u7406\u3002 \u7279\u70b9 : \u4e00\u4e2a\u76ee\u6807\u5bf9\u8c61\u5bf9\u5e94\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u4ee3\u7406\u7c7b\u4e2d\u7684\u76ee\u6807\u5bf9\u8c61\u7c7b\u578b\u662f\u56fa\u5b9a\u7684(\u5728\u4ee3\u7406\u5bf9\u8c61\u6267\u884c\u65b9\u6cd5\u524d\u5c31\u5df2\u786e\u5b9a)\uff1b\u6574\u4f53\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\uff0c\u5bb9\u6613\u7406\u89e3\u3002 \u7f3a\u70b9: \u5f53\u59d4\u6258\u7c7b\u589e\u52a0\uff0c\u4ee3\u7406\u7c7b\u53ef\u80fd\u9700\u8981\u6210\u500d\u589e\u52a0\uff0c\u4ee3\u7406\u7c7b\u6570\u91cf\u8fc7\u5ea6\uff1b\u5f53\u63a5\u53e3\u4e2d\u529f\u80fd\u589e\u52a0\u65f6\u6216\u8005\u4fee\u6539\u65f6\uff0c\u4f1a\u5f71\u54cd\u6240\u6709\u7684\u5b9e\u73b0\u7c7b\u3002 \u52a8\u6001\u4ee3\u7406 \u52a8\u6001\u4ee3\u7406\u7684\u6839\u636e\u5b9e\u73b0\u65b9\u5f0f\u7684\u4e0d\u540c\u53ef\u4ee5\u5206\u4e3a JDK \u52a8\u6001\u4ee3\u7406\u548c CGlib \u52a8\u6001\u4ee3\u7406\u3002 JDK \u52a8\u6001\u4ee3\u7406 \uff1a\u5229\u7528\u53cd\u5c04\u673a\u5236\u751f\u6210\u4e00\u4e2a\u5b9e\u73b0\u516c\u5171\u63a5\u53e3\u7684\u4ee3\u7406\u5bf9\u8c61\uff0c\u5728\u8c03\u7528\u5177\u4f53\u65b9\u6cd5\u524d\u8c03\u7528InvokeHandler\u6765\u5904\u7406\u3002 /** * jdk \u52a8\u6001\u4ee3\u7406\u7c7b * \u9700\u8981\u5b9e\u73b0 InvocationHandler */ public class jdkDynamicProxy implements InvocationHandler{ private Object target; //\u76ee\u6807\u5bf9\u8c61\u7c7b\u578b\u4e0d\u56fa\u5b9a // \u901a\u8fc7\u5e26\u53c2\u6784\u9020\u5668\u4f20\u5165\u76ee\u6807\u5bf9\u8c61 public jdkDynamicProxy(Object target) { this.target = target; } /** * public static Object newProxyInstance(ClassLoader loader, Class<?>[] interfaces, InvocationHandler h) * loader: \u4ee3\u7406\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668 * interfaces: \u4ee3\u7406\u7c7b/\u59d4\u6258\u7c7b \u9700\u8981\u5b9e\u73b0\u7684\u63a5\u53e3\u6570\u7ec4 * h:\u4e00\u4e2aInvocationHandler\u63a5\u53e3\uff0c\u8868\u793a\u4ee3\u7406\u5b9e\u4f8b\u7684\u8c03\u7528\u5904\u7406\u7a0b\u5e8f\u7684\u63a5\u53e3\uff0c\u6bcf\u4e2a\u4ee3\u7406\u5b9e\u4f8b\u90fd\u5177\u6709\u4e00\u4e2a * \u5173\u8054\u7684\u8c03\u7528\u5904\u7406\u7a0b\u5e8f. \u901a\u8fc7\u4ee3\u7406\u5b9e\u4f8b\u8c03\u7528\u76ee\u6807\u5bf9\u8c61\u7684\u65b9\u6cd5\u65f6\uff0c\u5c06\u5bf9\u65b9\u6cd5\u8c03\u7528\u8fdb\u884c\u7f16\u7801\uff0c\u5e76\u5c06\u5176\u6307\u6d3e\u5230 * \u8be5\u4ee3\u7406\u5b9e\u4f8b\u7684\u8c03\u7528\u5904\u7406\u7a0b\u5e8f\u7684 invoke \u65b9\u6cd5 * @return object: \u4ee3\u7406\u5b9e\u4f8b\uff0c \u5177\u6709\u4e00\u4e2a invocation handler, * \u8be5\u4ee3\u7406\u5b9e\u4f8b\u6240\u5c5e\u7684\u7c7b\u5b9e\u73b0\u4e86\u4f20\u5165\u7684\u63a5\u53e3\u6570\u7ec4\uff0c\u7531\u4f20\u5165\u7684\u7279\u5b9a\u7c7b\u52a0\u8f7d\u5668\u6765\u5b9a\u4e49 */ public Object getProxy(){ Object object = Proxy.newProxyInstance(this.getClass().getClassLoader(), target.getClass().getInterfaces(), this ); return object; } /** * * @param proxy \u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u4ee3\u7406\u5b9e\u4f8b, getProxy\u8fd4\u56de\u7684\u4ee3\u7406\u5bf9\u8c61 * @param method \u76ee\u6807\u5bf9\u8c61\u7684\u65b9\u6cd5 * @param args \u76ee\u6807\u65b9\u6cd5\u6240\u9700\u7684\u53c2\u6570 * @return * @throws Throwable */ @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable { before(); Object object = method.invoke(target); after(); return object; } public void before(){ System.out.println(\"before\"); } public void after(){ System.out.println(\"after\"); } } CGlib \u52a8\u6001\u4ee3\u7406 \uff1a\u9488\u5bf9\u7c7b\u5b9e\u73b0\u4ee3\u7406\uff0c\u5bf9\u59d4\u6258\u7c7b\u751f\u6210\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5e76\u8986\u76d6\u5176\u4e2d\u7684\u65b9\u6cd5\u5b9e\u73b0\u589e\u5f3a\u3002 <!--\u6dfb\u52a0cglib\u4f9d\u8d56 --> <dependency> <groupId>cglib</groupId> <artifactId>cglib</artifactId> <version>2.2.2</version> </dependency> /** * \u65b9\u6cd5\u62e6\u622a\u5668 */ public class CglibDynamicProxy implements net.sf.cglib.proxy.MethodInterceptor { /** * \u62e6\u622a\u5668 * * @param o cglib\u751f\u6210\u7684\u4ee3\u7406\u5b9e\u4f8b * @param method \u76ee\u6807\u7c7b\u4e2d\u88ab\u4ee3\u7406\u7684\u65b9\u6cd5\u7684\u5f15\u7528 * @param objects \u53c2\u6570\u5217\u8868 * @param methodProxy \u751f\u6210\u7684\u4ee3\u7406\u7c7b\u5bf9\u65b9\u6cd5\u7684\u4ee3\u7406\u5f15\u7528 * @return * @throws Throwable */ @Override public Object intercept(Object o, Method method, Object[] objects, MethodProxy methodProxy) throws Throwable { before(); // \u8c03\u7528\u76ee\u6807\u7c7b\u4e2d\u7684\u65b9\u6cd5 Object object = methodProxy.invoke(target, objects); after(); return object; } public Object target; public CglibDynamicProxy(Object target) { this.target = target; } public Object getProxy(){ // \u901a\u8fc7enhancer\u7684create()\u65b9\u6cd5\u751f\u6210\u4e00\u4e2a\u7c7b\uff0c\u7528\u4e8e\u751f\u6210\u4ee3\u7406\u5bf9\u8c61\u3002 Enhancer enhancer = new Enhancer(); // \u5c06\u76ee\u6807\u7c7b\u8bbe\u4e3a\u4ee3\u7406\u7c7b\u7684\u7236\u7c7b enhancer.setSuperclass(target.getClass()); // \u8bbe\u7f6e\u62e6\u622a\u5668\uff0c \u56de\u8c03\u5bf9\u8c61\u4e3a\u672c\u8eab enhancer.setCallback(this); // \u8fd4\u56de\u4ee3\u7406\u5bf9\u8c61 return enhancer.create(); } private void before(){ System.out.println(\"before\"); } private void after(){ System.out.println(\"after\"); } } \u533a\u522b \uff1aJDK\u4ee3\u7406\u53ea\u80fd\u5bf9\u5b9e\u73b0\u63a5\u53e3\u7684\u7c7b\u751f\u6210\u4ee3\u7406(\u4ee3\u7406\u7c7b\u548c\u59d4\u6258\u7c7b\u9700\u8981\u5b9e\u73b0\u5171\u540c\u7684\u63a5\u53e3)\uff1b CGlib\u662f\u9488\u5bf9\u7c7b\u5b9e\u73b0\u4ee3\u7406\uff0c\u5bf9\u59d4\u6258\u7c7b\u751f\u6210\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5e76\u8986\u76d6\u5176\u4e2d\u7684\u65b9\u6cd5\u5b9e\u73b0\u589e\u5f3a\uff1b\u4f46\u7531\u4e8e\u91c7\u7528\u7ee7\u627f\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4e0d\u80fd\u4ee3\u7406final\u4fee\u9970\u7684\u7c7b\u3002 \u52a8\u6001\u4ee3\u7406\u7279\u70b9 : \u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u52a8\u6001\u521b\u5efa\u76ee\u6807\u5bf9\u8c61\uff0c\u901a\u8fc7\u5e26\u53c2\u6784\u9020\u5668\u4f20\u9012\u7ed9\u4ee3\u7406\u5bf9\u8c61, \u5373\u4ee3\u7406\u7c7b\u4e2d\u7684\u76ee\u6807\u5bf9\u8c61\u7c7b\u578b\u4e0d\u56fa\u5b9a\uff0c\u8fd0\u884c\u65f6\u901a\u8fc7\u53cd\u5c04\u786e\u5b9a\u5b9e\u9645\u76ee\u6807\u5bf9\u8c61\u7684\u7c7b\u578b\u3002 AOP AOP\u7528\u5904 AOP\u4e3b\u8981\u5e94\u7528\u4e8e\u65e5\u5fd7\u8bb0\u5f55\u3001\u6027\u80fd\u7edf\u8ba1\u3001\u5b89\u5168\u63a7\u5236\u3001\u4e8b\u7269\u5904\u7406\u7b49\u65b9\u9762\uff0c\u5b9e\u73b0\u516c\u5171\u529f\u80fd\u6027\u7684\u91cd\u590d\u4f7f\u7528\u3002 \u7279\u70b9 1\u3001\u964d\u4f4e\u6a21\u5757\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\uff0c\u63d0\u4f9b\u4e1a\u52a1\u4ee3\u7801\u7684\u805a\u5408\u5ea6\uff1b 2\u3001\u63d0\u9ad8\u4ee3\u7801\u590d\u7528\u6027\uff1b 3\u3001\u63d0\u4f9b\u7cfb\u7edf\u6269\u5c55\u6027\uff1b 4\u3001\u53ef\u4ee5\u5728\u4e0d\u5f71\u54cd\u539f\u6709\u529f\u80fd\u57fa\u7840\u4e0a\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\u3002 \u5b9e\u73b0 \u53ef\u4ee5\u91c7\u7528xml\u914d\u7f6e\u6216\u8005\u6ce8\u89e3\u5b9e\u73b0\uff0c\u5e95\u5c42\u5b9e\u73b0\u662f\u57fa\u4e8e\u52a8\u6001\u4ee3\u7406(JDK + CGLIB) <!--\u914d\u7f6eaop, \u9700\u8981\u5728beans\u4e2d\u5f15\u5165 aop \u7684 \u89c4\u8303--> <aop:config> <!--\u5207\u9762--> <aop:aspect ref=\"logCut02\"> <!--\u5207\u5165\u70b9--> <aop:pointcut id=\"cut\" expression=\"execution(* com.wh.service.*.*(..))\"/> <!--\u914d\u7f6e\u901a\u77e5, \u8bbe\u7f6e\u5bf9\u5e94\u65b9\u6cd5\u540d\u548c\u5207\u5165\u70b9--> <aop:before method=\"before\" pointcut-ref=\"cut\"/> <aop:after method=\"after\" pointcut-ref=\"cut\"/> <aop:after-returning method=\"afterReturn\" pointcut-ref=\"cut\"/> <aop:after-throwing method=\"afterThrow\" pointcut-ref=\"cut\" throwing=\"e\"/> <aop:around method=\"around\" pointcut-ref=\"cut\"/> </aop:aspect> </aop:config> /** * \u5207\u9762: \u5207\u5165\u70b9\u548c\u901a\u77e5\u7684\u62bd\u8c61 * \u5207\u5165\u70b9:\u5b9a\u4e49\u8981\u62e6\u622a\u54ea\u4e9b\u7c7b\u7684\u54ea\u4e9b\u65b9\u6cd5 * \u901a\u77e5: \u5b9a\u4e49\u62e6\u622a\u4e4b\u540e\u65b9\u6cd5\u8981\u505a\u4ec0\u4e48 */ @Component // \u5c06\u5bf9\u8c61\u4ea4\u7ed9IOC\u5bb9\u5668\u5b9e\u4f8b\u5316 @Aspect //\u58f0\u660e\u5f53\u524d\u7c7b\u662f\u4e00\u4e2a\u5207\u9762 public class LogCut { /** * \u5207\u5165\u70b9: \u5339\u914d\u89c4\u5219 * @Pointcut(\"\u5339\u914d\u89c4\u5219\")\uff0c \u6839\u636e\u89c4\u5219\u9009\u62e9\u65b9\u6cd5\u662f\u5426\u88ab\u62e6\u622a * \u5e38\u89c1\u5339\u914d\u89c4\u5219: \"execution(* *(..))\" * 1\u3001\u8fd9\u91cc\u7684\u7b2c\u4e00\u4e2a * \u8868\u793a\u6240\u6709\u65b9\u6cd5\u4fee\u9970\u8303\u56f4\uff0c\u53ef\u4ee5\u6307\u5b9a\u662fpublic,protected,private * \u5982\"execution(public *...))\" * \"*.(..)\" \u8868\u793a\u4efb\u610f\u5305\u4e0b\u7684\u4efb\u610f\u65b9\u6cd5, .. \u6307\u4ee3\u53c2\u6570 * 2\u3001\u53ef\u4ee5\u6307\u5b9a\u67d0\u4e2a\u5305\u4e0b\u7684\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u65b9\u6cd5\u7c7b\u578b\uff0c\u5982setter\u6216getter\u65b9\u6cd5 * \u5982 \"execution(* com.wh.service.*.*(..))\", * \"execution(* set*(..))\" * 3\u3001\u5982\u679c\u60f3\u62e6\u622a\u67d0\u4e2a\u5305\u53ca\u5176\u5b50\u5305\u4e2d\u7684\u65b9\u6cd5\uff0c * \"execution(* com.wh.service..*.*(..))\", \u4e0e\u4e0a\u9762\u76f8\u6bd4, \u591a\u4e86\u4e00\u4e2a . * */ @Pointcut(\"execution(* com.wh.service.*.*(..))\") public void cut(){ } /** * \u58f0\u660e\u524d\u7f6e\u901a\u77e5\uff0c\u5e76\u63d2\u5165\u5230\u5207\u5165\u70b9(\u901a\u8fc7value\u6307\u5b9a) * \u76ee\u6807\u7c7b\u65b9\u6cd5\u6307\u5411\u524d\uff0c\u6307\u5411\u524d\u7f6e\u901a\u77e5 * */ @Before(value = \"cut()\") public void before(){ System.out.println(\"\u524d\u7f6e\u901a\u77e5\"); } /** * \u58f0\u660e\u8fd4\u56de\u901a\u77e5\uff0c\u76ee\u6807\u7c7b\u7684\u65b9\u6cd5\u5728\u65e0\u5f02\u5e38\u8fd4\u56de\u65f6\uff0c\u6267\u884c\u8be5\u540c\u5fd7 */ @AfterReturning(value = \"cut()\") public void afterReturn(){ System.out.println(\"\u8fd4\u56de\u901a\u77e5\"); } /** * \u58f0\u660e\u6700\u7ec8\u901a\u77e5\uff0c \u65e0\u8bba\u662f\u5426\u53d1\u751f\u5f02\u5e38\uff0c\u90fd\u4f1a\u6267\u884c\u8be5\u901a\u77e5 */ @After(value = \"cut()\") public void after(){ System.out.println(\"\u6700\u7ec8\u901a\u77e5\"); } /** * \u58f0\u660e\u5f02\u5e38\u901a\u77e5\uff0c\u76ee\u6807\u7c7b\u65b9\u6cd5\u6267\u884c\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u6267\u884c\u8be5\u901a\u77e5 */ @AfterThrowing(value = \"cut()\", throwing = \"e\") public void afterThrow(Exception e){ System.out.println(\"\u5f02\u5e38\u901a\u77e5:\"+e.getMessage()); } /** * \u58f0\u660e\u73af\u7ed5\u901a\u77e5\uff0c\u76ee\u6807\u7c7b\u65b9\u6cd5\u6267\u884c\u524d\u540e\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u73af\u7ed5\u901a\u77e5\u5b9a\u4e49\u54cd\u5e94\u7684\u5904\u7406\uff0c\u76f8\u5f53\u4e8e\u540c\u65f6\u5b9e\u73b0\u4e86 * \u4e0a\u8ff0\u56db\u79cd\u901a\u77e5 * \u9700\u8981\u901a\u8fc7\u663e\u793a\u8c03\u7528\u65b9\u6cd5(point.proceed())\uff0c\u5426\u5219\u65e0\u6cd5\u8bbf\u95ee\u6307\u5b9a\u65b9\u6cd5 * @param point * @return */ @Around(value = \"cut()\") public Object around(ProceedingJoinPoint point){ System.out.println(\"\u73af\u7ed5\u901a\u77e5-before\"); Object object=null; try{ // \u663e\u793a\u8c03\u7528\u5bf9\u5e94\u65b9\u6cd5 System.out.println(\"\u901a\u8fc7\u6ce8\u89e3\u914d\u7f6e\u73af\u7ed5\u901a\u77e5\"); object = point.proceed(); System.out.println(\"target:\"+point.getTarget()); System.out.println(\"\u73af\u7ed5\u901a\u77e5-afterReturn\"); }catch (Throwable throwable){ throwable.printStackTrace(); System.out.println(\"\u73af\u7ed5\u901a\u77e5-afterThrowing\"); }finally { System.out.println(\"\u73af\u7ed5\u901a\u77e5-after\"); } return object; } } \u57fa\u672c\u6982\u5ff5 Spring Task \u5b9a\u65f6\u4efb\u52a1 \u57fa\u4e8exml\u914d\u7f6e <!--\u914d\u7f6e\u5b9a\u65f6\u4efb\u52a1--> <task:scheduled-tasks> <task:scheduled ref=\"taskJob\" method=\"job1\" cron=\"0/2 * * * * ?\"/> <task:scheduled ref=\"taskJob\" method=\"job2\" cron=\"0/5 * * * * ?\"/> </task:scheduled-tasks> \u57fa\u4e8e\u6ce8\u89e3 <!--\u914d\u7f6e\u5b9a\u65f6\u4efb\u52a1\u9a71\u52a8\uff0cspring\u624d\u80fd\u8bc6\u522bscheduled\u6ce8\u89e3--> <task:annotation-driven/> @Scheduled(cron = \"0/2 * * * * ?\") public void job1(){ System.out.println(\"TaskJob2 job1...\"+simpleDateFormat.format(new Date())); } cron expression cron\u8868\u8fbe\u5f0f\u81f3\u5c11\u67096\u4e2a\u7531\u7a7a\u683c\u5206\u9694\u5f97\u65f6\u95f4\u5143\u7d20\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u662f \u79d2\u3001\u5206\u949f\u3001\u5c0f\u65f6(0~23)\u3001\u65e5\u671f\u3001\u6708\u4efd\u3001\u661f\u671f\u4e2d\u7684\u65e5\u671f(SUN-SAT)\u3001\u5e74\u4efd(1970~2099) <!-- \u540c\u4e00\u4e2a\u65f6\u95f4\u5143\u7d20\uff0c\u901a\u8fc7 , \u5206\u9694 --> <!-- \u8868\u793a\u6bcf\u592910\u70b9\u300114\u70b9\u300116\u70b9\u6267\u884c\u4efb\u52a1\uff0c*\u8868\u793a\u4efb\u610f\uff0c? \u8868\u793a\u4e0d\u786e\u5b9a --> 0 0 10,14,16 * * ? <!--\u8868\u793a\u6bcf\u6708\u524d10\u5929\uff0c\u6bcf\u969415\u5206\u949f\u6267\u884c\u4efb\u52a1\uff0c 1-10\u8868\u793a1\u523010\u53f7--> 0 0 15,30,45 * 1-10 * ? MyBatis \u6301\u4e45\u5c42\u6846\u67b6\uff0c\u6240\u8c13\u6301\u4e45\u5316\u662f\u5c06\u7a0b\u5e8f\u6570\u636e\u5728\u6301\u4e45\u72b6\u6001\u548c\u77ac\u65f6\u72b6\u6001\u95f4\u8f6c\u6362\u7684\u673a\u5236\u3002\u901a\u4fd7\u7684\u8bb2\uff0c\u5c31\u662f\u77ac\u65f6\u6570\u636e\uff08\u6bd4\u5982\u5185\u5b58\u4e2d\u7684\u6570\u636e\uff0c\u662f\u4e0d\u80fd\u6c38\u4e45\u4fdd\u5b58\u7684\uff09\u6301\u4e45\u5316\u4e3a\u6301\u4e45\u6570\u636e\uff08\u6bd4\u5982\u6301\u4e45\u5316\u81f3\u6570\u636e\u5e93\u4e2d\uff0c\u80fd\u591f\u957f\u4e45\u4fdd\u5b58\uff09 \u5165\u95e8 <!-- mybatis-config.xml --> <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <environments default=\"development\"> <environment id=\"development\"> <transactionManager type=\"JDBC\"/> <dataSource type=\"POOLED\"> <property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/> <property name=\"url\" value=\"jdbc:mysql://localhost:3306/how2java?useSSL=true&amp; useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC\"/> <property name=\"username\" value=\"root\"/> <property name=\"password\" value=\"admin\"/> </dataSource> </environment> </environments> <mappers> <mapper resource=\"com/wh/dao/UserMapper.xml\"/> </mappers> </configuration> <!-- UserMapper.xml --> <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <!--namespace \u7ed1\u5b9a\u5bf9\u5e94\u7684\u63a5\u53e3--> <mapper namespace=\"com.wh.dao.UserMapper\"> <!-- id: \u5bf9\u5e94\u65b9\u6cd5\u540d resultType: \u67e5\u8be2\u8fd4\u56de\u503c\u7c7b\u578b parameterType: \u53c2\u6570\u7c7b\u578b\uff0c \u83b7\u53d6\u53c2\u6570: \u901a\u8fc7 #{param_name}\u53d6\u5f97\u53c2\u6570\u503c, \u9002\u7528\u4e8e\u8f83\u5c11\u53c2\u6570\uff1b \u6b64\u5916\u53ef\u4ee5\u5728\u65b9\u6cd5\u4e2d\u4e3a\u53c2\u6570\u6dfb\u52a0 @param(new_name) \u6ce8\u89e3\uff0c \u5219\u6b64\u65f6 \u9700\u8981\u901a\u8fc7 #{new_name}\u53d6\u5f97\u53c2\u6570\u503c \u901a\u8fc7 #{obj_attribute}\u83b7\u53d6\u5bf9\u8c61\u5c5e\u6027 \u901a\u8fc7 #{map_key} \u83b7\u53d6map \u952e\u503c\u5bf9\u7684 value, \u9002\u7528\u4e8e\u591a\u4e2a\u53c2\u6570 \u8003\u8651\u5230\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5305\u542b\u592a\u591a\u5b57\u6bb5\u7684pojo\u5bf9\u8c61\uff0c\u6765\u4ec5\u4ec5\u4fee\u6539\u5f88\u5c11\u7684\u5b57\u6bb5, \u91c7\u7528hashmap, \u66f4\u4e3a\u9002\u5408\uff0c\u6b64\u65f6parameterType\u7c7b\u578b\u4e3a map. --> <!--\u7ed3\u679c\u96c6\u6620\u5c04\uff0c \u89e3\u51b3\u6570\u636e\u5e93\u5217\u540d\u548cPOJO\u5bf9\u8c61\u7684\u5c5e\u6027\u540d\u4e0d\u4e00\u81f4 sql\u8bed\u53e5\u4e2d\u7684resultType\u6362\u7528resultMap, \u6307\u5411\u5bf9\u5e94\u7684resultMap id; \u5bf9\u4e8e \u591a\u5bf9\u4e00 \u6216\u8005 \u4e00\u5bf9\u591a \u7b49sql\u67e5\u8be2\u8fd4\u56de\u7ed3\u679c\uff0c\u5176\u8fd4\u56de\u7c7b\u578b\u4e0d\u662f\u7b80\u5355\u7684 java bean\u5bf9\u8c61\u7c7b\u578b\uff0c \u4e5f\u9700\u8981\u901a\u8fc7reseultMap\u8fdb\u884c\u6620\u5c04 --> <!--<resultMap id=\"UserMap\" type=\"User\">--> <!--\u5c06\u5c5e\u6027\u6620\u5c04\u5230\u5bf9\u5e94\u7684\u5217, \u4ec5\u9700\u8981\u6784\u5efa\u540d\u79f0\u4e0d\u4e00\u81f4\u7684\u6620\u5c04\u5173\u7cfb--> <!--<result property=\"password\" column=\"other_\"/>--> <!--</resultMap>--> <select id=\"getUserList\" resultType=\"com.wh.pojo.User\" > select * from how2java.users </select> <select id=\"getUserById\" resultType=\"com.wh.pojo.User\" parameterType=\"int\"> SELECT * FROM how2java.users WHERE id=#{id} </select> <!--\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u53ef\u4ee5\u76f4\u63a5\u53d6\u5f97--> <insert id=\"addUser\" parameterType=\"com.wh.pojo.User\" > insert into how2java.users (id, name, password) values (#{id}, #{name},#{password}); </insert> <update id=\"updateUser\" parameterType=\"com.wh.pojo.User\"> update how2java.users set name=#{name}, password=#{password} where id=#{id}; </update> <update id=\"updateUserPWD\" parameterType=\"com.wh.pojo.User\"> update how2java.users set password=#{pwd} where id=#{userid}; </update> <delete id=\"deleteUser\" parameterType=\"int\"> DELETE FROM how2java.users WHERE id=#{id} </delete> </mapper> public interface UserMapper { // \u67e5\u8be2\u6240\u6709\u7528\u6237 public List<User> getUserList(); // \u6839\u636eID\u67e5\u8be2 public User getUserById(int id); // \u589e\u52a0\u7528\u6237 public int addUser(User user); // \u4fee\u6539\u7528\u6237 public int updateUser(User user); public int updateUserPWD(Map<String, Object> map); // \u5220\u9664\u7528\u6237 public int deleteUser(int id); } /** \u5de5\u5177\u7c7b\uff0c\u7528\u4e8e \u83b7\u53d6 SqlSession \u5bf9\u8c61 */ public class MybatisUtils { private static SqlSessionFactory sqlSessionFactory; static { try { String resource = \"mybatis-config.xml\"; InputStream inputStream = Resources.getResourceAsStream(resource); sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream); }catch (IOException e){ e.printStackTrace(); } } public static SqlSession getSqlSession(){ return sqlSessionFactory.openSession(); } } public class UserDaoTest { @Test public void test(){ try(SqlSession sqlSession = MybatisUtils.getSqlSession()){ UserMapper userMapper = sqlSession.getMapper(UserMapper.class); // \u83b7\u53d6\u5168\u90e8\u7528\u6237\u4fe1\u606f List<User> userList = userMapper.getUserList(); userList.forEach(System.out::println); // \u6839\u636eid\u83b7\u53d6\u7528\u6237 System.out.println(userMapper.getUserById(2)); /** * \u589e\u5220\u6539 \u9700\u8981\u63d0\u4ea4\u4e8b\u52a1\u540e\uff0c\u6570\u636e\u624d\u80fd\u5199\u5165\u6570\u636e\u5e93\u4e2d\uff0c\u83b7\u53d6 SqlSession\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u4e3a * openSession \u63d0\u4f9b\u4e00\u4e2a boolean\u53c2\u6570\uff0c \u8868\u793a\u662f\u5426\u5f00\u542f autoCommit */ // \u6dfb\u52a0\u7528\u6237 System.out.println(userMapper.addUser(new User(\"dio\", \"ssm\"))); // \u4fee\u6539\u7528\u6237 System.out.println(userMapper.updateUser(new User(5,\"ss\",\"\u5bc6\u7801\"))); // Map\u4f5c\u4e3a\u53c2\u6570\uff0c\u901a\u8fc7key\u53d6\u503c\uff0c\u53ef\u4ee5\u907f\u514d\u6784\u9020pojo\u5bf9\u8c61\u5b9e\u4f8b Map<String, Object> map = new HashMap<>(); map.put(\"pwd\", \"newpwd\"); map.put(\"userid\", 8); System.out.println(userMapper.updateUserPWD(map)); // \u5220\u9664\u7528\u6237 System.out.println(userMapper.deleteUser(9)); // \u63d0\u4ea4\u4e8b\u52a1 sqlSession.commit(); }catch (Exception e){ e.printStackTrace(); } } } \u591a\u5bf9\u4e00\u548c\u4e00\u5bf9\u591a <!-- \u591a\u5bf9\u4e00 --> <mapper namespace=\"com.wh.dao.StudentMapper\"> <!--\u5b9e\u73b0\u65f6\uff0c\u6839\u636e\u67e5\u8be2\u51fa\u7684\u5b66\u751f\u7684tid, \u518d\u53bb\u67e5\u8be2\u5bf9\u5e94\u8001\u5e08\uff0c \u76f8\u5f53\u4e8e\u5b50\u67e5\u8be2--> <resultMap id=\"StudentTeacher\" type=\"student\"> <result property=\"id\" column=\"id\"/> <result property=\"name\" column=\"name\"/> <!-- \u57fa\u672c\u7c7b\u578b\u6620\u5c04\u6216\u8005String\uff0c\u4f7f\u7528result; \u5bf9\u8c61\u7c7b\u578b\u6620\u5c04\uff0c\u4f7f\u7528association; \u96c6\u5408\u7c7b\u578b\uff0c\u4f7f\u7528collection javaType or ofType: javaType \u6307\u5b9a POJO\u7c7b\u4e2d\u5c5e\u6027\u7684\u7c7b\u578b ofType \u5982\u679c\u8be5\u5c5e\u6027\u5c5e\u4e8e\u96c6\u5408\u7c7b\u578b\uff0c ofType\u6307\u5b9a\u4e86\u5143\u7d20\u7c7b\u578b --> <association property=\"teacher\" column=\"tid\" javaType=\"Teacher\" select=\"getTeacher\"/> </resultMap> <select id=\"getStudentList\" resultMap=\"StudentTeacher\"> SELECT * from how2java.student; </select> <!-- #{id} \u4e2d\u7684 'id' \u540d\u79f0\u5e76\u672a\u6307\u5b9a\u7684\uff0c\u800c\u662f\u7531MyBatis\u81ea\u884c\u63a8\u65ad\u7684\uff0c \u8fd9\u91cc\u5373\u4f7f\u8bbe\u5b9a\u4e3a\u5176\u4ed6\u503c\uff0c\u4efb\u7136\u80fd\u8fd0\u884c--> <select id=\"getTeacher\" resultType=\"Teacher\"> SELECT * FROM how2java.teacher WHERE id=#{id} </select> <!-- ================================================================== --> <!--\u5b9e\u73b0\u65f6\uff0c\u901a\u8fc7\u8868\u7684\u8054\u7ed3, \u6309\u7167\u7ed3\u679c\u8fdb\u884c\u5d4c\u5957\u5904\u7406--> <select id=\"getStudentList2\" resultMap=\"StudentTeacher2\"> SELECT S.id as sid, S.name as sname, T.id as tid, T.name as tname FROM student S INNER JOIN teacher T ON S.tid = T.id </select> <resultMap id=\"StudentTeacher2\" type=\"student\"> <result property=\"id\" column=\"sid\"/> <result property=\"name\" column=\"sname\"/> <association property=\"teacher\" javaType=\"teacher\"> <result property=\"id\" column=\"tid\"/> <result property=\"name\" column=\"tname\"/> </association> </resultMap> </mapper> <!-- \u4e00\u5bf9\u591a --> <mapper namespace=\"com.wh.dao.TeacherMapper\"> <!-- \u83b7\u53d6\u6240\u6709\u8001\u5e08\u4fe1\u606f\uff0c Teacher\u7c7b\u4e2d\u5305\u542b \u4e00\u4e2a List<Student> student\u5c5e\u6027 --> <select id=\"getTeacherList\" resultMap=\"TS\"> SELECT T.id as tid, T.name as tname, S.name as sname FROM teacher as T INNER JOIN student AS S ON T.id = S.tid; </select> <!-- \u6839\u636e id \u83b7\u53d6\u6307\u5b9a\u8001\u5e08\u4fe1\u606f --> <select id=\"getTeacher\" resultMap=\"TS\"> SELECT T.id as tid, T.name as tname, S.name as sname FROM teacher as T, student AS S WHERE T.id = #{tid} </select> <resultMap id=\"TS\" type=\"teacher\"> <result property=\"id\" column=\"tid\"/> <result property=\"name\" column=\"tname\"/> <collection property=\"students\" ofType=\"student\"> <result property=\"name\" column=\"sname\"/> </collection> </resultMap> </mapper> \u4f5c\u7528\u57df\u548c\u751f\u547d\u5468\u671f SqlSessionFactoryBuilder \u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u88ab\u5b9e\u4f8b\u5316\u3001\u4f7f\u7528\u548c\u4e22\u5f03\uff0c\u4e00\u65e6\u521b\u5efa\u4e86 SqlSessionFactory\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u5b83\u4e86\u3002 \u56e0\u6b64 SqlSessionFactoryBuilder \u5b9e\u4f8b\u7684\u6700\u4f73\u4f5c\u7528\u57df\u662f\u65b9\u6cd5\u4f5c\u7528\u57df\uff08\u4e5f\u5c31\u662f\u5c40\u90e8\u65b9\u6cd5\u53d8\u91cf\uff09\u3002 \u4f60\u53ef\u4ee5\u91cd\u7528 SqlSessionFactoryBuilder \u6765\u521b\u5efa\u591a\u4e2a SqlSessionFactory \u5b9e\u4f8b\uff0c\u4f46\u6700\u597d\u8fd8\u662f\u4e0d\u8981\u4e00\u76f4\u4fdd\u7559\u7740\u5b83\uff0c\u4ee5\u4fdd\u8bc1\u6240\u6709\u7684 XML \u89e3\u6790\u8d44\u6e90\u53ef\u4ee5\u88ab\u91ca\u653e\u7ed9\u66f4\u91cd\u8981\u7684\u4e8b\u60c5\u3002 SqlSessionFactory \u4e00\u65e6\u88ab\u521b\u5efa\u5c31\u5e94\u8be5\u5728\u5e94\u7528\u7684\u8fd0\u884c\u671f\u95f4\u4e00\u76f4\u5b58\u5728\uff0c\u6ca1\u6709\u4efb\u4f55\u7406\u7531\u4e22\u5f03\u5b83\u6216\u91cd\u65b0\u521b\u5efa\u53e6\u4e00\u4e2a\u5b9e\u4f8b\u3002 \u4f7f\u7528 SqlSessionFactory \u7684\u6700\u4f73\u5b9e\u8df5\u662f\u5728\u5e94\u7528\u8fd0\u884c\u671f\u95f4\u4e0d\u8981\u91cd\u590d\u521b\u5efa\u591a\u6b21\uff0c\u591a\u6b21\u91cd\u5efa SqlSessionFactory \u88ab\u89c6\u4e3a\u4e00\u79cd\u4ee3\u7801\u201c\u574f\u4e60\u60ef\u201d\u3002\u56e0\u6b64 SqlSessionFactory \u7684\u6700\u4f73\u4f5c\u7528\u57df\u662f\u5e94\u7528\u4f5c\u7528\u57df\u3002 \u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\uff0c\u6700\u7b80\u5355\u7684\u5c31\u662f\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u6216\u8005\u9759\u6001\u5355\u4f8b\u6a21\u5f0f\u3002 SqlSession \u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u5e94\u8be5\u6709\u5b83\u81ea\u5df1\u7684 SqlSession \u5b9e\u4f8b\u3002SqlSession \u7684\u5b9e\u4f8b\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u56e0\u6b64\u662f\u4e0d\u80fd\u88ab\u5171\u4eab\u7684\uff0c\u6240\u4ee5\u5b83\u7684\u6700\u4f73\u7684\u4f5c\u7528\u57df\u662f\u8bf7\u6c42\u6216\u65b9\u6cd5\u4f5c\u7528\u57df\u3002 \u7edd\u5bf9\u4e0d\u80fd\u5c06 SqlSession \u5b9e\u4f8b\u7684\u5f15\u7528\u653e\u5728\u4e00\u4e2a\u7c7b\u7684\u9759\u6001\u57df\uff0c\u751a\u81f3\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\u4e5f\u4e0d\u884c\u3002 \u4e5f\u7edd\u4e0d\u80fd\u5c06 SqlSession \u5b9e\u4f8b\u7684\u5f15\u7528\u653e\u5728\u4efb\u4f55\u7c7b\u578b\u7684\u6258\u7ba1\u4f5c\u7528\u57df\u4e2d\uff0c\u6bd4\u5982 Servlet \u6846\u67b6\u4e2d\u7684 HttpSession\u3002 \u5982\u679c\u4f60\u73b0\u5728\u6b63\u5728\u4f7f\u7528\u4e00\u79cd Web \u6846\u67b6\uff0c\u8003\u8651\u5c06 SqlSession \u653e\u5728\u4e00\u4e2a\u548c HTTP \u8bf7\u6c42\u76f8\u4f3c\u7684\u4f5c\u7528\u57df\u4e2d\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u6bcf\u6b21\u6536\u5230 HTTP \u8bf7\u6c42\uff0c\u5c31\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2a SqlSession\uff0c\u8fd4\u56de\u4e00\u4e2a\u54cd\u5e94\u540e\uff0c\u5c31\u5173\u95ed\u5b83\u3002 \u6620\u5c04\u5668\u5b9e\u4f8b \u6620\u5c04\u5668\u662f\u4e00\u4e9b\u7ed1\u5b9a\u6620\u5c04\u8bed\u53e5\u7684\u63a5\u53e3(\u53c2\u89c1\u4e0a\u9762\u7684UserMapper\u63a5\u53e3)\u3002\u6620\u5c04\u5668\u63a5\u53e3\u7684\u5b9e\u4f8b\u662f\u4ece SqlSession \u4e2d\u83b7\u5f97\u7684\u3002\u867d\u7136\u4ece\u6280\u672f\u5c42\u9762\u4e0a\u6765\u8bb2\uff0c\u4efb\u4f55\u6620\u5c04\u5668\u5b9e\u4f8b\u7684\u6700\u5927\u4f5c\u7528\u57df\u4e0e\u8bf7\u6c42\u5b83\u4eec\u7684 SqlSession \u76f8\u540c\u3002\u4f46\u65b9\u6cd5\u4f5c\u7528\u57df\u624d\u662f\u6620\u5c04\u5668\u5b9e\u4f8b\u7684\u6700\u5408\u9002\u7684\u4f5c\u7528\u57df\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u6620\u5c04\u5668\u5b9e\u4f8b\u5e94\u8be5\u5728\u8c03\u7528\u5b83\u4eec\u7684\u65b9\u6cd5\u4e2d\u88ab\u83b7\u53d6\uff0c\u4f7f\u7528\u5b8c\u6bd5\u4e4b\u540e\u5373\u53ef\u4e22\u5f03\u3002 \u6620\u5c04\u5668\u5b9e\u4f8b\u5e76\u4e0d\u9700\u8981\u88ab\u663e\u5f0f\u5730\u5173\u95ed\u3002 xml\u914d\u7f6e <!-- db.properties --> driver=com.mysql.cj.jdbc.Driver <!-- \u53ea\u8981\u53c2\u6570\u540d\u4e0d\u8bbe\u7f6e\u4e3a url \u5747\u53ef \u5982\u679c\u662f\u5728xml\u914d\u7f6e\u6587\u4ef6\u4e2d\u76f4\u63a5\u5199\u5b9aurl\uff0c\u5176\u4e2d\u7684 & \u9700\u8981 \u5199\u6210 &amp; \u5f62\u5f0f\u8868\u793a\u8f6c\u4e49 --> jdbcurl=jdbc:mysql://localhost:3306/how2java?useSSL=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC username=root password=admin <configuration> <!--\u5f15\u5165\u5916\u90e8\u914d\u7f6e\u6761\u4ef6--> <properties resource=\"db.properties\"/> <!-- \u4e5f\u53ef\u4ee5\u5728properties \u5143\u7d20\u7684\u5b50\u5143\u7d20\u4e2d\u8bbe\u7f6e --> <!-- <properties> <properity name=\"xx\" value=\"xx\"> </properties> --> <!-- \u4e5f\u53ef\u4ee5\u5728 SqlSessionFactoryBuilder.build() \u65b9\u6cd5\u4e2d\u4f20\u5165\u5c5e\u6027\u503c\u3002\u4f8b\u5982\uff1a SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props); // ... \u6216\u8005 ... SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, environment, props); --> <!-- \u5982\u679c\u4e00\u4e2a\u5c5e\u6027\u5728\u4e0d\u53ea\u4e00\u4e2a\u5730\u65b9\u8fdb\u884c\u4e86\u914d\u7f6e\uff0c\u90a3\u4e48\uff0cMyBatis \u5c06\u6309\u7167\u4e0b\u9762\u7684\u987a\u5e8f\u6765\u52a0\u8f7d\uff1a \u9996\u5148\u8bfb\u53d6\u5728 properties \u5143\u7d20\u4f53\u5185\u6307\u5b9a\u7684\u5c5e\u6027\u3002 \u7136\u540e\u6839\u636e properties \u5143\u7d20\u4e2d\u7684 resource \u5c5e\u6027\u8bfb\u53d6\u7c7b\u8def\u5f84\u4e0b\u5c5e\u6027\u6587\u4ef6\uff0c\u6216\u6839\u636e url \u5c5e\u6027\u6307\u5b9a\u7684\u8def\u5f84\u8bfb\u53d6\u5c5e\u6027\u6587 \u4ef6\uff0c\u5e76\u8986\u76d6\u4e4b\u524d\u8bfb\u53d6\u8fc7\u7684\u540c\u540d\u5c5e\u6027\u3002 \u6700\u540e\u8bfb\u53d6\u4f5c\u4e3a\u65b9\u6cd5\u53c2\u6570\u4f20\u9012\u7684\u5c5e\u6027\uff0c\u5e76\u8986\u76d6\u4e4b\u524d\u8bfb\u53d6\u8fc7\u7684\u540c\u540d\u5c5e\u6027\u3002 --> <!-- \u8bbe\u7f6e --> <settings> <!--\u6807\u51c6\u65e5\u5fd7\u5de5\u5382--> <!--<setting name=\"logImpl\" value=\"STDOUT_LOGGING\"/>--> <!--\u4f7f\u7528LOG4J\u65e5\u5fd7\uff0c \u9700\u8981\u5bfc\u5165\u4f9d\u8d56\uff0c\u548c\u63d0\u4f9blog4j.properties\u914d\u7f6e\u6587\u4ef6--> <setting name=\"logImpl\" value=\"LOG4J\"/> <!--\u5f00\u542f\u81ea\u52a8\u9a7c\u5cf0\u547d\u540d\u89c4\u5219\uff0c\u5c06\u7ecf\u5178\u6570\u636e\u5e93\u5217\u540d A_column \u6620\u5c04\u5230\u7ecf\u5178java\u5c5e\u6027\u540d aColumn--> <setting name=\"mapUnderscoreToCamelCase\" value=\"true\"/> </settings> <!--\u914d\u7f6e\u522b\u540d\uff0c\u964d\u4f4e\u5197\u4f59\u7684\u5168\u9650\u5b9a\u7c7b\u540d\u4e66\u5199--> <typeAliases> <!--\u7b2c\u4e00\u79cd\u522b\u540d\u5f62\u5f0f: \u4e3ajava bean\u5bf9\u8c61 \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u522b\u540d--> <!--<typeAlias type=\"com.wh.pojo.User\" alias=\"User\"/>--> <!--\u7b2c\u4e8c\u79cd\u5f62\u5f0f: \u626b\u63cf\u6307\u5b9a\u5305\u4e0b\u7684POJO\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u522b\u540d\u4e3a\u7c7b\u7684\u9996\u5b57\u6bcd\u5c0f\u5199\uff0c \u5927\u5199\u4e5f\u53ef\u4ee5 \u9664\u6b64\u4e4b\u5916\uff0c\u5728POJO\u7c7b\u4e0a\u6dfb\u52a0 @Alias\u6ce8\u89e3 \u6765\u81ea\u5b9a\u4e49\u522b\u540d\uff0c\u7136\u540e\u88ab\u626b\u63cf --> <package name=\"com.wh.pojo\"/> <!-- \u5b9e\u4f53\u7c7b\u6bd4\u8f83\u5c11\u53ef\u4ee5\u9009\u62e9\u65b9\u5f0f\u4e00\uff0c\u4e14\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff1b \u7c7b\u6bd4\u8f83\u591a\uff0c\u5efa\u8bae\u65b9\u5f0f\u4e8c --> </typeAliases> <environments default=\"development\"> <environment id=\"development\"> <!-- \u5728 MyBatis \u4e2d\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u4e8b\u52a1\u7ba1\u7406\u5668\uff08\u4e5f\u5c31\u662f type=\"[JDBC|MANAGED]\"\uff09\uff1a JDBC \u2013 \u8fd9\u4e2a\u914d\u7f6e\u76f4\u63a5\u4f7f\u7528\u4e86 JDBC \u7684\u63d0\u4ea4\u548c\u56de\u6eda\u8bbe\u65bd\uff0c\u5b83\u4f9d\u8d56\u4ece\u6570\u636e\u6e90\u83b7\u5f97\u7684\u8fde\u63a5\u6765\u7ba1\u7406\u4e8b\u52a1\u4f5c\u7528\u57df\u3002 MANAGED \u2013 \u8fd9\u4e2a\u914d\u7f6e\u51e0\u4e4e\u6ca1\u505a\u4ec0\u4e48\u3002\u5b83\u4ece\u4e0d\u63d0\u4ea4\u6216\u56de\u6eda\u4e00\u4e2a\u8fde\u63a5\uff0c\u800c\u662f\u8ba9\u5bb9\u5668\u6765\u7ba1\u7406\u4e8b\u52a1\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\uff08\u6bd4 \u5982 JEE \u5e94\u7528\u670d\u52a1\u5668\u7684\u4e0a\u4e0b\u6587\uff09\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4f1a\u5173\u95ed\u8fde\u63a5\u3002\u7136\u800c\u4e00\u4e9b\u5bb9\u5668\u5e76\u4e0d\u5e0c\u671b\u8fde\u63a5\u88ab\u5173\u95ed\uff0c\u56e0\u6b64\u9700\u8981\u5c06 closeConnection \u5c5e\u6027\u8bbe\u7f6e\u4e3a false \u6765\u963b\u6b62\u9ed8\u8ba4\u7684\u5173\u95ed\u884c\u4e3a --> <transactionManager type=\"JDBC\"/> <dataSource type=\"POOLED\"> <property name=\"driver\" value=\"${driver}\"/> <property name=\"url\" value=\"${jdbcurl}\"/> <property name=\"username\" value=\"${username}\"/> <property name=\"password\" value=\"${password}\"/> </dataSource> </environment> </environments> <mappers> <!--\u4f7f\u7528\u76f8\u5bf9\u4e8e\u7c7b\u8def\u5f84\u7684\u8d44\u6e90\u5f15\u7528--> <mapper resource=\"com/wh/dao/UserMapper.xml\"/> <!--\u4f7f\u7528\u6620\u5c04\u5668\u63a5\u53e3\u5b9e\u73b0\u7c7b\u7684\u5b8c\u5168\u9650\u5b9a\u7c7b\u540d, \u8981\u6c42\u63a5\u53e3\u548c\u914d\u7f6e\u6587\u4ef6\u540c\u540d\uff0c\u5904\u4e8e\u540c\u4e00\u4e2a\u5305\u4e0b--> <!--<mapper class=\"com.wh.dao.UserMapper\"/>--> <!--\u5c06\u5305\u5185\u7684\u6620\u5c04\u5668\u63a5\u53e3\u5b9e\u73b0\u5168\u90e8\u6ce8\u518c\u4e3a\u6620\u5c04\u5668 \u540c\u6837\u8981\u6c42\u63a5\u53e3\u548c\u914d\u7f6e\u6587\u4ef6\u540c\u540d\uff0c\u5904\u4e8e\u540c\u4e00\u4e2a\u5305\u4e0b --> <!--<package name=\"com.wh.dao\"/>--> </mappers> </configuration> \u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e \u9002\u7528\u4e8e\u7b80\u5355sql\u8bed\u53e5\uff1b\u4f7f\u7528\u524d\uff0c\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u7ed1\u5b9a\u63a5\u53e3\u7c7b\uff0c\u4f7f\u7528\u6ce8\u89e3\u7684\u65b9\u5f0f\u4e0d\u9700\u8981mapper\u6587\u4ef6\uff1b \u4f46\u901a\u5e38\u63a5\u53e3\u548c\u5176mapper\u6587\u4ef6\u540d\u76f8\u540c\uff0c\u4e14\u5904\u4e8e\u540c\u4e00\u4e2a\u5305\u4e0b\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u7528class\u6216resource\u65b9\u6cd5\u8bfb\u53d6\u5230\uff0c\u4e14\u80fd\u540c\u65f6\u4f7f\u7528xml\u548c\u6ce8\u89e3\u7684\u65b9\u6cd5\u914d\u7f6e\u3002 \u52a8\u6001SQL <!-- where \u5143\u7d20\u53ea\u4f1a\u5728\u5b50\u5143\u7d20\u8fd4\u56de\u4efb\u4f55\u5185\u5bb9\u7684\u60c5\u51b5\u4e0b\u624d\u63d2\u5165 \u201cWHERE\u201d \u5b50\u53e5\u3002\u800c\u4e14\uff0c\u82e5\u5b50\u53e5\u7684\u5f00\u5934\u4e3a \u201cAND\u201d \u6216 \u201cOR\u201d\uff0c where \u5143\u7d20\u4e5f\u4f1a\u5c06\u5b83\u4eec\u53bb\u9664\uff1b MyBatis \u63d0\u4f9b\u4e86 choose \u5143\u7d20\uff0c\u5b83\u6709\u70b9\u50cf Java \u4e2d\u7684 switch \u8bed\u53e5\uff0c\u5f53when\u6807\u7b7e\u4e2d\u7684test \u5168\u4e0d\u6ee1\u8db3\u65f6\uff0c \u4f1a\u62fc\u63a5 otherwise\u4e2d\u7684\u8bed\u53e5\uff1b\u5426\u5219\u53ea\u4f1a\u62fc\u63a5\u7b2c\u4e00\u6761\u6ee1\u8db3\u6761\u4ef6\u7684when\u4e2d\u7684\u8bed\u53e5 --> <!-- sql\u7247\u6bb5 \u4e2d \u62bd\u53d6\u53ef\u80fd\u88ab\u9891\u7e41\u590d\u7528\u7684 sql \u64cd\u4f5c \uff1b \u5728\u9700\u8981\u4f7f\u7528\u7684\u5730\u65b9\uff0c\u901a\u8fc7 include\u5f15\u5165\uff1b \u6700\u597d\u57fa\u4e8e\u5355\u8868\u6765\u5b9a\u4e49\uff0c\u591a\u8868\u67e5\u8be2\u65f6\uff0c\u91cd\u590d\u6027\u5f88\u4f4e\uff0c\u65e0\u9700\u62bd\u53d6\uff1b \u4e0d\u8981\u5c06 where\u6807\u7b7e \u52a0\u5165\u5230 sql\u7247\u6bb5\u4e2d --> <sql id=\"select-if\"> <if test=\"title != null\"> blog.title LIKE concat('%', #{title}, '%') </if> <if test=\"author !=null\"> AND blog.author=#{author} </if> <if test=\"views != null\"> AND blog.views >= #{views} </if> </sql> <select id=\"queryBlogIf\" parameterType=\"map\" resultType=\"blog\"> SELECT * from how2java.blog <where> <include refid=\"select-if\"/> </where> </select> <select id=\"queryBlogChoose\" parameterType=\"map\" resultType=\"blog\"> SELECT * FROM how2java.blog <where> <choose> <when test=\"title != null\"> blog.title LIKE concat('%', #{title}, '%') </when> <when test=\"author != null\"> blog.author=#{author} </when> <when test=\"views != null\"> blog.views >= #{views} </when> <otherwise> blog.views >= 0 </otherwise> </choose> </where> </select> <update id=\"updateBlog\" parameterType=\"map\"> UPDATE how2java.blog <set> <if test=\"title != null\"> title = #{title}, </if> <if test=\"author != null\"> authot = #{author}, </if> <if test=\"views != null\"> views = #{views}, </if> </set> WHERE id=#{id} </update> \u7f13\u5b58 \u4e00\u7ea7\u7f13\u5b58 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u542f\u7528\u4e86\u672c\u5730\u7684\u4f1a\u8bdd\u7f13\u5b58\uff0c\u5b83\u4ec5\u4ec5\u5bf9\u4e00\u4e2a\u4f1a\u8bdd\u4e2d(Sqlsession)\u7684\u6570\u636e\u8fdb\u884c\u7f13\u5b58: \u6620\u5c04\u8bed\u53e5\u6587\u4ef6\u4e2d\u7684\u6240\u6709 select \u8bed\u53e5\u7684\u7ed3\u679c\u5c06\u4f1a\u88ab\u7f13\u5b58; \u6620\u5c04\u8bed\u53e5\u6587\u4ef6\u4e2d\u7684\u6240\u6709 insert\u3001update \u548c delete \u8bed\u53e5\u4f1a\u5237\u65b0\u7f13\u5b58; Sqlsession\u5bf9\u8c61\u5305\u542bclearCache\u65b9\u6cd5\uff0c\u7528\u4e8e\u6e05\u9664\u4e00\u7ea7\u7f13\u5b58; \u4e8b\u5b9e\u4e0a\uff0c\u4e00\u7ea7\u7f13\u5b58\u5c31\u662f\u4e00\u4e2aConcurrentHashMap; \u4e8c\u7ea7\u7f13\u5b58 \u4e5f\u79f0\u5168\u5c40\u7f13\u5b58\uff0c\u9700\u8981\u5728config.xml\u4e2d\u6dfb\u52a0\u8bbe\u7f6e\uff0c\u5f00\u542f\u5168\u5c40\u7f13\u5b58\uff0c\u540c\u65f6\u5728 SQL \u6620\u5c04\u6587\u4ef6(Mpper.xml)\u4e2d\u6dfb\u52a0\u4e00\u884c\uff1a < cache />\uff0c \u56e0\u6b64\u5c5e\u4e8e\u57fa\u4e8e namespace\u7ea7\u522b\u7684\u7f13\u5b58 \u8fd9\u4e2a\u7b80\u5355\u8bed\u53e5\u7684\u6548\u679c\u5982\u4e0b: \u6620\u5c04\u8bed\u53e5\u6587\u4ef6\u4e2d\u7684\u6240\u6709 select \u8bed\u53e5\u7684\u7ed3\u679c\u5c06\u4f1a\u88ab\u7f13\u5b58\u3002 \u6620\u5c04\u8bed\u53e5\u6587\u4ef6\u4e2d\u7684\u6240\u6709 insert\u3001update \u548c delete \u8bed\u53e5\u4f1a\u5237\u65b0\u7f13\u5b58\u3002 \u7f13\u5b58\u4f1a\u4f7f\u7528\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7b97\u6cd5\uff08LRU, Least Recently Used\uff09\u7b97\u6cd5\u6765\u6e05\u9664\u4e0d\u9700\u8981\u7684\u7f13\u5b58\u3002 \u7f13\u5b58\u4e0d\u4f1a\u5b9a\u65f6\u8fdb\u884c\u5237\u65b0\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6ca1\u6709\u5237\u65b0\u95f4\u9694\uff09\u3002 \u7f13\u5b58\u4f1a\u4fdd\u5b58\u5217\u8868\u6216\u5bf9\u8c61\uff08\u65e0\u8bba\u67e5\u8be2\u65b9\u6cd5\u8fd4\u56de\u54ea\u79cd\uff09\u7684 1024 \u4e2a\u5f15\u7528\u3002 \u7f13\u5b58\u4f1a\u88ab\u89c6\u4e3a\u8bfb/\u5199\u7f13\u5b58\uff0c\u8fd9\u610f\u5473\u7740\u83b7\u53d6\u5230\u7684\u5bf9\u8c61\u5e76\u4e0d\u662f\u5171\u4eab\u7684\uff0c\u53ef\u4ee5\u5b89\u5168\u5730\u88ab\u8c03\u7528\u8005\u4fee\u6539\uff0c \u800c\u4e0d\u5e72\u6270\u5176\u4ed6\u8c03\u7528\u8005\u6216\u7ebf\u7a0b\u6240\u505a\u7684\u6f5c\u5728\u4fee\u6539\u3002 \u7f13\u5b58\u53ea\u4f5c\u7528\u4e8e cache \u6807\u7b7e\u6240\u5728\u7684\u6620\u5c04\u6587\u4ef6\u4e2d\u7684\u8bed\u53e5\u3002\u5982\u679c\u4f60\u6df7\u5408\u4f7f\u7528 Java API \u548c XML \u6620\u5c04\u6587\u4ef6\uff0c \u5728\u5171\u7528\u63a5\u53e3\u4e2d\u7684\u8bed\u53e5\u5c06\u4e0d\u4f1a\u88ab\u9ed8\u8ba4\u7f13\u5b58\u3002\u4f60\u9700\u8981\u4f7f\u7528 @CacheNamespaceRef \u6ce8\u89e3\u6307\u5b9a\u7f13\u5b58\u4f5c\u7528\u57df\u3002 \u2003 \u8fd9\u4e9b\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7 cache \u5143\u7d20\u7684\u5c5e\u6027\u6765\u4fee\u6539\u3002\u6bd4\u5982\uff1a < cache eviction=\"FIFO\" flushInterval=\"60000\" size=\"512\" readOnly=\"true\"/> \u2003 eviction \u6e05\u9664\u7f13\u5b58\u7b56\u7565\uff1a LRU \u2013 \u6700\u8fd1\u6700\u5c11\u4f7f\u7528\uff1a\u79fb\u9664\u6700\u957f\u65f6\u95f4\u4e0d\u88ab\u4f7f\u7528\u7684\u5bf9\u8c61\u3002 FIFO \u2013 \u5148\u8fdb\u5148\u51fa\uff1a\u6309\u5bf9\u8c61\u8fdb\u5165\u7f13\u5b58\u7684\u987a\u5e8f\u6765\u79fb\u9664\u5b83\u4eec\u3002 SOFT \u2013 \u8f6f\u5f15\u7528\uff1a\u57fa\u4e8e\u5783\u573e\u56de\u6536\u5668\u72b6\u6001\u548c\u8f6f\u5f15\u7528\u89c4\u5219\u79fb\u9664\u5bf9\u8c61\u3002 WEAK \u2013 \u5f31\u5f15\u7528\uff1a\u66f4\u79ef\u6781\u5730\u57fa\u4e8e\u5783\u573e\u6536\u96c6\u5668\u72b6\u6001\u548c\u5f31\u5f15\u7528\u89c4\u5219\u79fb\u9664\u5bf9\u8c61\u3002 \u9ed8\u8ba4\u7684\u6e05\u9664\u7b56\u7565\u662f LRU\u3002 \u2003 flushInterval\uff08\u5237\u65b0\u95f4\u9694\uff09\u5c5e\u6027\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a\u4efb\u610f\u7684\u6b63\u6574\u6570\uff0c\u8bbe\u7f6e\u7684\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u7684\u5408\u7406\u65f6\u95f4\u91cf\u3002 \u9ed8\u8ba4\u60c5\u51b5\u662f\u4e0d\u8bbe\u7f6e\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u5237\u65b0\u95f4\u9694\uff0c\u7f13\u5b58\u4ec5\u4ec5\u4f1a\u5728\u8c03\u7528\u8bed\u53e5\u65f6\u5237\u65b0\u3002 size\uff08\u5f15\u7528\u6570\u76ee\uff09\u5c5e\u6027\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a\u4efb\u610f\u6b63\u6574\u6570\uff0c\u8981\u6ce8\u610f\u6b32\u7f13\u5b58\u5bf9\u8c61\u7684\u5927\u5c0f\u548c\u8fd0\u884c\u73af\u5883\u4e2d\u53ef\u7528\u7684\u5185\u5b58\u8d44\u6e90\u3002\u9ed8\u8ba4\u503c\u662f 1024\u3002 readOnly\uff08\u53ea\u8bfb\uff09\u5c5e\u6027\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a true \u6216 false\u3002\u53ea\u8bfb\u7684\u7f13\u5b58\u4f1a\u7ed9\u6240\u6709\u8c03\u7528\u8005\u8fd4\u56de\u7f13\u5b58\u5bf9\u8c61\u7684\u76f8\u540c\u5b9e\u4f8b\u3002 \u56e0\u6b64\u8fd9\u4e9b\u5bf9\u8c61\u4e0d\u80fd\u88ab\u4fee\u6539\u3002\u8fd9\u5c31\u63d0\u4f9b\u4e86\u53ef\u89c2\u7684\u6027\u80fd\u63d0\u5347\u3002\u800c\u53ef\u8bfb\u5199\u7684\u7f13\u5b58\u4f1a\uff08\u901a\u8fc7\u5e8f\u5217\u5316\uff09\u8fd4\u56de\u7f13\u5b58\u5bf9\u8c61\u7684\u62f7\u8d1d\u3002 \u901f\u5ea6\u4e0a\u4f1a\u6162\u4e00\u4e9b\uff0c\u4f46\u662f\u66f4\u5b89\u5168\uff0c\u56e0\u6b64\u9ed8\u8ba4\u503c\u662f false\uff0c\u5219\u8981\u7f13\u5b58\u4e2d\u7684POJO\u5bf9\u8c61\u5fc5\u987b\u53ef\u5e8f\u5217\u5316\u3002 \u4e8c\u7ea7\u7f13\u5b58\u662f\u4e8b\u52a1\u6027\u7684\u3002\u6240\u6709\u6570\u636e\u90fd\u4f1a\u5148\u5b58\u5728\u4e00\u7ea7\u7f13\u5b58\u4e2d\uff0c\u5f53 SqlSession \u5b8c\u6210\u5e76\u63d0\u4ea4\u65f6\uff0c\u6216\u662f\u5b8c\u6210\u5e76\u56de\u6eda\uff0c \u4f46\u6ca1\u6709\u6267\u884c flushCache=true \u7684 insert/delete/update \u8bed\u53e5\u65f6\uff0c\u4e8c\u7ea7\u7f13\u5b58\u4f1a\u83b7\u5f97\u66f4\u65b0\u3002 \u65b0\u7684Sqlsession\u5982\u679c\u6267\u884c\u548c\u4e4b\u524d\u76f8\u540c\u7684\u67e5\u8be2\uff0c\u5c06\u4f1a\u4ece\u4e8c\u7ea7\u7f13\u5b58\u4e2d\u83b7\u53d6\u7ed3\u679c SpringMVC MVC Controller(\u63a7\u5236\u5668, \u5982servlet): \u53d6\u5f97\u8868\u5355\u6570\u636e, \u8c03\u7528\u4e1a\u52a1\u903b\u8f91, \u8f6c\u5411\u6307\u5b9a\u7684\u9875\u9762; Model(\u6a21\u578b, \u5982dao\u3001service): \u4e1a\u52a1\u903b\u8f91, \u4fdd\u5b58\u6570\u636e\u7684\u72b6\u6001; View(\u89c6\u56fe, \u5982view): \u663e\u793a\u9875\u9762; SpingMVC \u6267\u884c\u539f\u7406 \u5047\u8bbe\u8bf7\u6c42\u7684url\u4e3a : http://localhost:8080/SpringMVC/hello, \u5982\u4e0aurl\u62c6\u5206\u6210\u4e09\u90e8\u5206\uff1a http://localhost:8080 \u670d\u52a1\u5668\u57df\u540d; SpringMVC: \u90e8\u7f72\u5728\u670d\u52a1\u5668\u4e0a\u7684web\u7ad9\u70b9; hello:\u8868\u793a\u63a7\u5236\u5668; SpringMVC\u5904\u7406\u6d41\u7a0b: 1.\u7528\u6237\u53d1\u9001\u8bf7\u6c42\u81f3\u524d\u7aef\u63a7\u5236\u5668DispatcherServlet 2.DispatcherServlet\u6536\u5230\u8bf7\u6c42\u8c03\u7528\u5904\u7406\u5668\u6620\u5c04\u5668HandlerMapping\u3002 3.\u5904\u7406\u5668\u6620\u5c04\u5668\u6839\u636e\u8bf7\u6c42url\u627e\u5230\u5177\u4f53\u7684\u5904\u7406\u5668(\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u662fhello)\uff0c\u751f\u6210\u5904\u7406\u5668\u6267\u884c\u94feHandlerExecutionChain (\u5305\u62ec\u5904\u7406\u5668\u5bf9\u8c61\u548c\u5904\u7406\u5668\u62e6\u622a\u5668)\u4e00\u5e76\u8fd4\u56de\u7ed9DispatcherServlet\u3002 4.DispatcherServlet\u6839\u636e\u5904\u7406\u5668Handler\uff0c\u7136\u540e\u83b7\u53d6\u5904\u7406\u5668\u9002\u914d\u5668HandlerAdapter\uff0c\u5e76\u6267\u884cHandlerAdapter \u5b8c\u6210\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\uff0c\u5982\uff1a\u53c2\u6570\u5c01\u88c5\uff0c\u6570\u636e\u683c\u5f0f\u8f6c\u6362\uff0c\u6570\u636e\u9a8c\u8bc1\u7b49\u64cd\u4f5c\u3002 5.\u6267\u884c\u5904\u7406\u5668Handler(Controller\uff0c\u4e5f\u53eb\u9875\u9762\u63a7\u5236\u5668)\u3002 6.Handler\u6267\u884c\u5b8c\u6210\u8fd4\u56deModelAndView 7.HandlerAdapter\u5c06Handler\u6267\u884c\u7ed3\u679cModelAndView\u8fd4\u56de\u5230DispatcherServlet 8.DispatcherServlet\u5c06ModelAndView\u4f20\u7ed9ViewReslover\u89c6\u56fe\u89e3\u6790\u5668 9.ViewReslover\u89e3\u6790\u540e\u8fd4\u56de\u5177\u4f53View 10.DispatcherServlet\u5bf9View\u8fdb\u884c\u6e32\u67d3\u89c6\u56fe\uff08\u5373\u5c06\u6a21\u578b\u6570\u636emodel\u586b\u5145\u81f3\u89c6\u56fe\u4e2d\uff09\u3002 11.DispatcherServlet\u54cd\u5e94\u7528\u6237\u3002 <!-- web.xml \u6ce8\u518cDispatchServlet --> <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\" version=\"3.1\"> <!--1.\u6ce8\u518cDispatcherServlet\uff0c MVC\u6838\u5fc3\uff1a \u8bf7\u6c42\u5206\u53d1\u5668\uff0c\u524d\u7aef\u63a7\u5236\u5668--> <servlet> <servlet-name>springmvc</servlet-name> <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> <!--\u5173\u8054\u4e00\u4e2aspringmvc\u7684\u914d\u7f6e\u6587\u4ef6:\u3010servlet-name\u3011-servlet.xml--> <init-param> <param-name>contextConfigLocation</param-name> <param-value>classpath:springmvc-servlet.xml</param-value> </init-param> <!--\u542f\u52a8\u7ea7\u522b-1--> <load-on-startup>1</load-on-startup> </servlet> <!--/ \u5339\u914d\u6240\u6709\u7684\u8bf7\u6c42\uff1b\uff08\u4e0d\u5305\u62ec.jsp\uff09--> <!--/* \u5339\u914d\u6240\u6709\u7684\u8bf7\u6c42\uff1b\uff08\u5305\u62ec.jsp\uff09--> <servlet-mapping> <servlet-name>springmvc</servlet-name> <url-pattern>/</url-pattern> </servlet-mapping> </web-app> <!-- \u901a\u8fc7 bean \u6ce8\u5165Controller--> <!-- springmvc-servlet.xml \u914d\u7f6eDispatchServlet --> <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"> <!--\u6dfb\u52a0 \u5904\u7406\u6620\u5c04\u5668--> <bean class=\"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping\"/> <!--\u6dfb\u52a0 \u5904\u7406\u9002\u914d\u5668--> <bean class=\"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter\"/> <!--\u6dfb\u52a0 \u89c6\u56fe\u89e3\u6790\u5668--> <!-- \u89c6\u56fe\u89e3\u6790\u5668:DispatcherServlet\u7ed9\u4ed6\u7684ModelAndView: 1. \u83b7\u53d6ModelAndView\u7684\u6570\u636e 2. \u89e3\u6790ModelAndView \u7684\u89c6\u56fe\u540d\u5b57 3. \u62fc\u63a5\u89c6\u56fename(prefix+view_name+suffix), \u627e\u5230\u5bf9\u5e94\u7684\u89c6\u56fe, view_name\u5728controller\u4e2d\u8bbe\u7f6e\uff0c\u5b58\u50a8\u5728ModelAndView\u4e2d 4. \u6e32\u67d3\u6570\u636e\u5230\u89c6\u56fe --> <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\" id=\"InternalResourceViewResolver\"> <!--\u524d\u7f00--> <property name=\"prefix\" value=\"/WEB-INF/jsp/\"/> <!--\u540e\u7f00--> <property name=\"suffix\" value=\".jsp\"/> </bean> <!-- \u56e0\u4e3a\u9009\u62e9\u7684\u5904\u7406\u6620\u5c04\u5668\u4e3aBeanNameUrlHandlerMapping\uff0c \u5176\u6839\u636e\u89e3\u6790\u7684url\u53bb\u5339\u914d\u662f\u5426\u6709\u5bf9\u5e94\u7684bean\u5b58\u5728 --> <bean id=\"/hello\" class=\"com.wh.controller.HelloController\"/> </beans> <!-- \u5f00\u542f\u81ea\u52a8\u626b\u63cf\u6ce8\u89e3\uff0c\u6ce8\u5165Controller --> <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd\"> <!-- \u81ea\u52a8\u626b\u63cf\u5305\uff0c\u8ba9\u6307\u5b9a\u5305\u4e0b\u7684\u6ce8\u89e3\u751f\u6548,\u7531IOC\u5bb9\u5668\u7edf\u4e00\u7ba1\u7406 --> <context:component-scan base-package=\"com.wh.controller\"/> <!-- \u8ba9Spring MVC\u4e0d\u5904\u7406\u9759\u6001\u8d44\u6e90 \u5982.css, .js, .html\u7b49--> <mvc:default-servlet-handler /> <!-- \u652f\u6301mvc\u6ce8\u89e3\u9a71\u52a8 \u5728spring\u4e2d\u4e00\u822c\u91c7\u7528@RequestMapping\u6ce8\u89e3\u6765\u5b8c\u6210\u6620\u5c04\u5173\u7cfb \u8981\u60f3\u4f7f@RequestMapping\u6ce8\u89e3\u751f\u6548 \u5fc5\u987b\u5411\u4e0a\u4e0b\u6587\u4e2d\u6ce8\u518cDefaultAnnotationHandlerMapping \u548c\u4e00\u4e2aAnnotationMethodHandlerAdapter\u5b9e\u4f8b \u8fd9\u4e24\u4e2a\u5b9e\u4f8b\u5206\u522b\u5728\u7c7b\u7ea7\u522b\u548c\u65b9\u6cd5\u7ea7\u522b\u5904\u7406\u3002 \u800cannotation-driven\u914d\u7f6e\u5e2e\u52a9\u6211\u4eec\u81ea\u52a8\u5b8c\u6210\u4e0a\u8ff0\u4e24\u4e2a\u5b9e\u4f8b\u7684\u6ce8\u5165\u3002 --> <mvc:annotation-driven /> <!-- \u89c6\u56fe\u89e3\u6790\u5668 --> <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\" id=\"internalResourceViewResolver\"> <!-- \u524d\u7f00 --> <property name=\"prefix\" value=\"/WEB-INF/jsp/\" /> <!-- \u540e\u7f00 --> <property name=\"suffix\" value=\".jsp\" /> </bean> </beans> Controller \u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u63a5\u53e3\u7684\u65b9\u5f0f\uff0c\u6216\u8005\u901a\u8fc7\u6ce8\u89e3\u7684\u65b9\u5f0f\uff0c\u6765\u81ea\u5b9a\u4e49Controller // \u5b9e\u73b0controller\u63a5\u53e3 // \u8fd9\u79cd\u5f62\u5f0f\u4e0b\u8bbf\u95ee\u8def\u5f84\u53ea\u80fd\u901a\u8fc7 \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d \u6dfb\u52a0 bean \u4e2d\uff0c\u8bbe\u7f6eid // \u5373\u901a\u8fc7\u63a5\u53e3\u5b9e\u73b0controller\u8981\u4e0exml\u914d\u7f6e\u7ed3\u5408 public class HelloController implements Controller { @Nullable @Override public ModelAndView handleRequest(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) throws Exception { //ModelAndView \u6a21\u578b\u548c\u89c6\u56fe ModelAndView mv = new ModelAndView(); //\u5c01\u88c5\u5bf9\u8c61\uff0c\u653e\u5728ModelAndView\u4e2d\u3002Model mv.addObject(\"msg\",\"HelloSpringMVC!\"); //\u5c01\u88c5\u8981\u8df3\u8f6c\u7684\u89c6\u56fe\uff0c\u653e\u5728ModelAndView\u4e2d mv.setViewName(\"hello\"); //: /WEB-INF/jsp/hello.jsp return mv; } } // \u901a\u8fc7\u6ce8\u89e3\uff0c \u8bbf\u95ee\u8def\u5f84\u901a\u8fc7@RequestMapping\u8bbe\u7f6e @Controller //@RequestMapping(\"/HelloController\") public class HelloController { // \u8bbe\u5b9a\u8bbf\u95ee\u5730\u5740, \u5b9e\u9645\u62fc\u63a5\u4e3a \u670d\u52a1\u5668\u5730\u5740/HelloController/test // \u5982\u679c\u4e0d\u4e3a\u7c7b\u8bbe\u7f6e\u6620\u5c04\uff0c\u5219\u5b9e\u9645\u8bbf\u95ee\u5730\u5740\u4e3a \u670d\u52a1\u5668\u5730\u5740/test // \u8fd9\u91cc\u7684\u5730\u5740\u4e0d\u9700\u8981\u4e0e\u89c6\u56fe\u6587\u4ef6\u540d\u4e00\u81f4 @RequestMapping(\"/Mytest\") public String hello(Model model){ model.addAttribute(\"msg\", \"hello SpringMVC\"); return \"test\"; // \u5c06\u89c6\u56fe\u6587\u4ef6\u540d\u8fd4\u56de\u7ed9\u89c6\u56fe\u89e3\u6790\u5668 } } RestFul\u98ce\u683c \u901a\u8fc7\u4e0d\u540c\u7684\u8bf7\u6c42\u65b9\u5f0f\u6765\u5b9e\u73b0\u4e0d\u540c\u7684\u6548\u679c\uff0c\u4f8b\u5982\u8bf7\u6c42\u5730\u5740\u4e00\u6837\uff0c\u4f46\u662f\u8bf7\u6c42\u65b9\u5f0f\u4e0d\u540c\uff0c\u5982get\u3001post\u3001update\u3001delete\uff0c\u5c06\u4ea7\u751f\u4e0d\u540c\u7684\u7ed3\u679c\uff1b\u907f\u514d\u4e86\u5728\u8bbf\u95ee\u5730\u5740\u4e2d\u9009\u62e9\u4e0d\u540c\u7684\u53c2\u6570\u6765\u64cd\u4f5c\u540c\u4e00\u5bf9\u8c61\u3002 \u5728Spring MVC\u4e2d\u53ef\u4ee5\u4f7f\u7528 @PathVariable \u6ce8\u89e3\uff0c\u8ba9\u65b9\u6cd5\u53c2\u6570\u7684\u503c\u5bf9\u5e94\u7ed1\u5b9a\u5230\u4e00\u4e2aURI\u6a21\u677f\u53d8\u91cf\u4e0a // \u8bbf\u95ee\u5f62\u5f0f\uff0c http://localhost:8080/add?a=1&b=3 @RequestMapping(\"/add\") public String test(int a, int b, Model model){ model.addAttribute(\"msg\", \"result=\"+(a+b)); return \"test\"; } // \u8bbf\u95ee\u5f62\u5f0f http://localhost:8080/Radd/1/3 @RequestMapping(value = \"/Radd/{a}/{b}\", method = RequestMethod.GET) public String test2(@PathVariable int a, @PathVariable int b, Model model){ model.addAttribute(\"msg\", \"result=\"+(a+b)); return \"test\"; } \u8f6c\u53d1\u4e0e\u91cd\u5b9a\u5411 \u8bf7\u6c42\u8f6c\u53d1\uff1a \u5ba2\u6237\u9996\u5148\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\u5230\u670d\u52a1\u5668\u7aef\uff0c\u670d\u52a1\u5668\u7aef\u53d1\u73b0\u5339\u914d\u7684servlet\uff0c\u5e76\u6307\u5b9a\u5b83\u53bb\u6267\u884c\uff0c\u5f53\u8fd9\u4e2aservlet\u6267\u884c\u5b8c\u4e4b\u540e\uff0c \u5b83\u8981\u8c03\u7528getRequestDispacther()\u65b9\u6cd5\uff0c\u628a\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u6307\u5b9a\u7684\u65b0\u7684jsp,\u6574\u4e2a\u6d41\u7a0b\u90fd\u662f\u5728\u670d\u52a1\u5668\u7aef\u5b8c\u6210\u7684\uff0c \u800c\u4e14\u662f\u5728\u540c\u4e00\u4e2a\u8bf7\u6c42\u91cc\u9762\u5b8c\u6210\u7684\uff0c\u56e0\u6b64servlet\u548cjsp\u5171\u4eab\u7684\u662f\u540c\u4e00\u4e2arequest\uff0c\u5728servlet\u91cc\u9762\u653e\u7684\u6240\u6709\u4e1c\u897f\uff0c \u5728\u65b0\u7684jsp\u4e2d\u90fd\u80fd\u901a\u8fc7getAttribute()\u83b7\u53d6\uff0cg\u6267\u884c\u5b8c\u628a\u7ed3\u679c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\u6574\u4e2a\u8fc7\u7a0b\u662f\u4e00\u4e2a\u8bf7\u6c42\uff0c\u4e00\u4e2a\u54cd\u5e94\u3002 \u2003 \u91cd\u5b9a\u5411\uff1a \u5ba2\u6237\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\u5230\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u5339\u914dservlet\uff0cservlet\u5904\u7406\u5b8c\u4e4b\u540e\u8c03\u7528\u4e86sendRedirect()\u65b9\u6cd5\uff0c \u7acb\u5373\u5411\u5ba2\u6237\u7aef\u8fd4\u56de\u8fd9\u4e2a\u54cd\u5e94(http\u72b6\u6001\u7801\u4e3a302)\uff0c\u54cd\u5e94\u884c\u544a\u8bc9\u5ba2\u6237\u7aef\u5fc5\u987b\u8981\u518d\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\uff0c\u53bb\u8bbf\u95ee\u65b0\u7684jsp\uff1b \u5ba2\u6237\u7aef\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u7acb\u523b\u53d1\u51fa\u4e00\u4e2a\u65b0\u7684\u8bf7\u6c42\uff0c\u53bb\u8bf7\u6c42\u6307\u5b9a\u7684jsp, \u524d\u540e\u4e24\u4e2a\u8bf7\u6c42\u4e92\u4e0d\u5e72\u6270\uff0c\u76f8\u4e92\u72ec\u7acb\uff0c \u5728\u524d\u9762request\u91cc\u9762setAttribute()\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u5728\u540e\u9762\u7684request\u91cc\u9762\u90fd\u83b7\u5f97\u4e0d\u4e86\u3002 \u2003 \u8bf7\u6c42\u8f6c\u53d1\uff1arequest.getRequestDispatcher(\"/test.jsp\").forword(request,response); \u91cd\u5b9a\u5411\uff1aresponse.sendRedirect(\"/test.jsp\"); \u2003 \u533a\u522b\uff1a 1\u3001\u8bf7\u6c42\u6b21\u6570\uff1a\u91cd\u5b9a\u5411\u662f\u6d4f\u89c8\u5668\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\u5e76\u6536\u5230\u54cd\u5e94\u540e\u518d\u6b21\u5411\u4e00\u4e2a\u65b0\u5730\u5740\u53d1\u51fa\u8bf7\u6c42\uff0c \u8f6c\u53d1\u662f\u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\u540e\u4e3a\u4e86\u5b8c\u6210\u54cd\u5e94\u8df3\u8f6c\u5230\u4e00\u4e2a\u65b0\u7684\u5730\u5740\uff1b\u91cd\u5b9a\u5411\u81f3\u5c11\u8bf7\u6c42\u4e24\u6b21\uff0c\u8f6c\u53d1\u8bf7\u6c42\u4e00\u6b21\uff1b 2\u3001\u5730\u5740\u680f\u4e0d\u540c\uff1a\u91cd\u5b9a\u5411\u5730\u5740\u680f\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u8f6c\u53d1\u5730\u5740\u680f\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff1b 3\u3001 \u662f\u5426\u5171\u4eab\u6570\u636e\uff1a\u91cd\u5b9a\u5411\u4e24\u6b21\u8bf7\u6c42\u4e0d\u5171\u4eab\u6570\u636e\uff0c\u8f6c\u53d1\u4e00\u6b21\u8bf7\u6c42\u5171\u4eab\u6570\u636e\uff08 \u5728request\u7ea7\u522b\u4f7f\u7528\u4fe1\u606f\u5171\u4eab\uff0c\u4f7f\u7528\u91cd\u5b9a\u5411\u5fc5\u7136\u51fa\u9519; \u5bf9\u4e8e\u5b58\u653e\u5728WEB-INF\u4e0b\u7684\u8d44\u6e90\uff0c\u5bf9\u4e8e\u670d\u52a1\u5668\u7ea7\u522b\u7684\u8f6c\u53d1\u662f\u53ef\u89c1\u7684\uff0c \u800c\u91cd\u5b9a\u5411\u662f\u4e0d\u80fd\u8bbf\u95eeWEB-INF\u4e0b\u7684\u8d44\u6e90\u7684\uff09 \uff1b 4\u3001\u8df3\u8f6c\u9650\u5236\uff1a\u91cd\u5b9a\u5411\u53ef\u4ee5\u8df3\u8f6c\u5230\u4efb\u610fURL\uff0c\u8f6c\u53d1\u53ea\u80fd\u8df3\u8f6c\u672c\u7ad9\u70b9\u8d44\u6e90\uff1b 5\u3001\u53d1\u751f\u884c\u4e3a\u4e0d\u540c\uff1a\u91cd\u5b9a\u5411\u662f\u5ba2\u6237\u7aef\u884c\u4e3a\uff0c\u8f6c\u53d1\u662f\u670d\u52a1\u5668\u7aef\u884c\u4e3a\uff1b // SpringMVC\u4e0b\u7684\u8f6c\u53d1\u4e0e\u91cd\u5b9a\u5411 // \u4ee5\u6ce8\u89e3\u5b9e\u73b0\u4e3a\u4f8b // \u5f00\u542f\u89c6\u56fe\u89e3\u6790\u5668\uff0c\u9ed8\u8ba4\u5c31\u662f\u901a\u8fc7\u8f6c\u53d1\u5f62\u5f0f\uff0c\u8bbf\u95ee\u7684\u8d44\u6e90\u662f\u672c\u7ad9\u70b9\uff0c\u5373WEB-INF\u4e0b\u7684\u8d44\u6e90\uff0c\u89c6\u56fe\u89e3\u6790\u5668\u8d1f\u8d23\u62fc\u63a5URL @RequestMapping(\"/add\") public String test(int a, int b, Model model){ model.addAttribute(\"msg\", \"result=\"+(a+b)); return \"test\"; } // \u663e\u793a\u4f7f\u7528forward\u8f6c\u53d1\uff0c\u5c06\u4e0d\u4f7f\u7528\u89c6\u56fe\u89e3\u6790\u5668\uff0c\u56e0\u6b64\u8f6c\u53d1\u8def\u5f84\u5fc5\u987b\u660e\u786e\u6307\u5b9a @RequestMapping(value = \"/Radd/{a}/{b}\", method = RequestMethod.GET) public String test2(@PathVariable int a, @PathVariable int b, Model model){ model.addAttribute(\"msg\", \"result=\"+(a+b)); return \"forward:/WEB-INF/jsp/test.jsp\"; // return \"forward:/index.jsp\" //\u53ef\u4ee5\u8f6c\u53d1\u5230\u975eWEB-INF\u4e0b\u7684jsp } // \u4f7f\u7528redirect\uff0c\u540c\u6837\u4e0d\u4f7f\u7528\u89c6\u56fe\u89e3\u6790\u5668\uff0c\u4e14\u4e0d\u80fd\u8bbf\u95eeWEB-INF\u4e0b\u7684\u8d44\u6e90 @RequestMapping(\"/hello\") public String test3(Model model){ model.addAttribute(\"msg\", \"hello\"); return \"redirect:/index.jsp\"; } /** \u4e0b\u9762\u7684test2\u8fd4\u56de\u4e2d\u4f7f\u7528\u4e86forward\u8f6c\u53d1\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528redirect\uff0c \u540c\u6837\u662f\u4e0d\u4f7f\u7528\u89c6\u56fe\u89e3\u6790\u5668\uff0c\u4f46\u5e76\u4e0d\u662f\u76f4\u63a5\u8bbf\u95eetest.jsp\uff0c\u800c\u662f\u8bbf\u95ee toTest()\u65b9\u6cd5\uff0c \u7136\u540e\u518d\u8bbf\u95eetest.jsp */ @RequestMapping(\"/test\") public String toTest(){ return \"test\"; } @RequestMapping(value = \"/Radd/{a}/{b}\", method = RequestMethod.GET) public String test2(@PathVariable int a, @PathVariable int b, Model model){ model.addAttribute(\"msg\", \"result=\"+(a+b)); return \"forward:/test\"; } \u4e71\u7801\u95ee\u9898 1\u3001request.setCharacterEncoding(\"UTF-8\"); \u5fc5\u987b\u5728\u653e\u5728request.getParameter()\u4e4b\u524d\uff0c\u8fd9\u6837\u53ef\u4ee5\u6b63\u786e\u83b7\u53d6\u4e2d\u6587\u53c2\u6570\uff1b\u4f46\u5728SpringMVC\u4e2d\uff0c\u901a\u5e38\u53c2\u6570\u90fd\u662f\u81ea\u52a8\u83b7\u53d6\uff0c\u6b64\u65f6\u8fd9\u79cd\u65b9\u6cd5\u65e0\u6548\uff1b\u9664\u975e\u624b\u52a8\u83b7\u53d6\u53c2\u6570\u3002 @RequestMapping(\"/encode\") public String test3(Model model, HttpServletRequest request) throws Exception { request.setCharacterEncoding(\"UTF-8\"); // \u53c2\u6570\u662f\u901a\u8fc7post\u65b9\u5f0f\u63d0\u4ea4\uff0c\u82e5\u662f\u901a\u8fc7get\u65b9\u5f0f\u63d0\u4ea4\u8868\u5355\uff0c \u5e76\u4e0d\u4f1a\u4e71\u7801 String nename = request.getParameter(\"name\"); // \u6b64\u65f6\u63a7\u5236\u53f0\u8f93\u51fa\u53ef\u80fd\u4f9d\u65e7\u4e71\u7801\uff0c\u9700\u8981\u8bbe\u7f6e tomcat VMOptions: -Dfile.encoding=UTF-8 System.out.println(\"name\"+nename); model.addAttribute(\"msg\", name); return \"test\"; } 2\u3001\u901a\u8fc7\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668 3\u3001\u914d\u7f6eSpringMVC\u63d0\u4f9b\u7684\u7f16\u7801\u8fc7\u6ee4\u5668 <filter> <filter-name>encode</filter-name> <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> <init-param> <param-name>encoding</param-name> <param-value>utf-8</param-value> </init-param> </filter> <filter-mapping> <filter-name>encode</filter-name> <url-pattern>/*</url-pattern> </filter-mapping> \u62e6\u622a\u5668 \u62e6\u622a\u65f6\u673a: \u4e0e\u8fc7\u6ee4\u5668\u533a\u522b: 1\u3001\u62e6\u622a\u5668\u662f\u57fa\u4e8eJava\u7684\u53cd\u5c04\u673a\u5236\u7684\uff0c\u800c\u8fc7\u6ee4\u5668\u662f\u57fa\u4e8e\u51fd\u6570\u56de\u8c03; 2\u3001\u8fc7\u6ee4\u5668\u4f9d\u8d56\u4e0eservlet\u5bb9\u5668\uff0c\u800c\u62e6\u622a\u5668\u4e0d\u4f9d\u8d56\u4e0eservlet\u5bb9\u5668; 3\u3001\u62e6\u622a\u5668\u53ea\u80fd\u5bf9action\u8bf7\u6c42\u8d77\u4f5c\u7528\uff0c\u800c\u8fc7\u6ee4\u5668\u5219\u53ef\u4ee5\u5bf9\u51e0\u4e4e\u6240\u6709\u7684\u8bf7\u6c42\u8d77\u4f5c\u7528; 4\u3001\u62e6\u622a\u5668\u53ef\u4ee5\u8bbf\u95eeaction\u4e0a\u4e0b\u6587\u3001\u503c\u6808\u91cc\u7684\u5bf9\u8c61\uff0c\u800c\u8fc7\u6ee4\u5668\u4e0d\u80fd; 5\u3001\u5728action\u7684\u751f\u547d\u5468\u671f\u4e2d\uff0c\u62e6\u622a\u5668\u53ef\u4ee5\u591a\u6b21\u88ab\u8c03\u7528\uff0c\u800c\u8fc7\u6ee4\u5668\u53ea\u80fd\u5728servlet\u5bb9\u5668\u521d\u59cb\u5316\u65f6\u88ab\u8c03\u7528\u4e00\u6b21; 6\u3001\u62e6\u622a\u5668\u53ef\u4ee5\u83b7\u53d6IOC\u5bb9\u5668\u4e2d\u7684\u5404\u4e2abean\uff0c\u800c\u8fc7\u6ee4\u5668\u5c31\u4e0d\u884c\uff0c\u56e0\u6b64\u53ef\u4ee5\u62e6\u622a\u5668\u91cc\u6ce8\u5165\u4e00\u4e2aservice\uff0c\u8c03\u7528\u4e1a\u52a1\u903b\u8f91\u3002 \u81ea\u5b9a\u4e49\u62e6\u622a\u5668\u9700\u8981\u5b9e\u73b0 springframework\u4e0b\u7684HandlerInterceptor\u63a5\u53e3\uff0c\u5e76\u5728spring-mvx.xml\u4e2d\u914d\u7f6e\uff0c \u6258\u7ba1\u7ed9IOC\u5bb9\u5668\uff0c\u5c5e\u4e8eSpring\u7684\u7ec4\u4ef6\uff0c\u56e0\u6b64\u5176\u672c\u8d28\u662f\u57fa\u4e8e\u53cd\u5c04\u5b9e\u4f8b\u5316\u7684(\u533a\u522b1)\uff0c\u4e5f\u610f\u5473\u7740\u53ef\u4ee5\u4f7f\u7528Spring\u4e2d\u7684\u4efb\u4f55\u8d44\u6e90\u3001\u5bf9\u8c61\uff0c \u4f8b\u5982\u6ce8\u5165bean\u5bf9\u8c61(\u533a\u522b6)\uff1b \u62e6\u622a\u5668\u7684preHandle\u3001postHanle\u3001afterCompletion\u4e2d\u7684request\u3001response\u7c7b\u578b\u4e3aHttpRequesr\u3001HttpResponse; <mvc:interceptors> <mvc:interceptor> <!--/** \u5305\u62ec\u8def\u5f84\u53ca\u5176\u5b50\u8def\u5f84--> <!--/admin/* \u62e6\u622a\u7684\u662f/admin/add\u7b49\u7b49\u8fd9\u79cd , /admin/add/user\u4e0d\u4f1a\u88ab\u62e6\u622a--> <!--/admin/** \u62e6\u622a\u7684\u662f/admin/\u4e0b\u7684\u6240\u6709--> <mvc:mapping path=\"/**\"/> <!--\u6307\u5411\u62e6\u622a\u5668--> <bean class=\"com.kuanwhg.interceptor.MyInterceptor\"/> </mvc:interceptor> </mvc:interceptors> \u8fc7\u6ee4\u5668\u662f\u7531servlet\u89c4\u8303\u5b9a\u4e49\u7684\uff0c\u53ea\u80fd\u7528\u4e8eWeb\u7a0b\u5e8f\u4e2d(\u533a\u522b2)\uff1b\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\u901a\u5e38\u5b9e\u73b0javax.servlet.Filter\u63a5\u53e3\uff0c \u7531\u62e6\u622a\u65f6\u673a\u53ef\u4ee5\u770b\u5230\uff0c\u8fc7\u6ee4\u5668\u53ea\u5728servlet\u524d\u8d77\u4f5c\u7528\uff0c\u8fc7\u6ee4\u5668\u4e2ddoFilter\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u4e5f\u662fServletRequest\u3001ServletResponse; AJAX Asynchronous JavaScript and XML\uff08\u5f02\u6b65\u7684 JavaScript \u548c XML\uff09\u3002 AJAX \u662f\u4e00\u79cd\u5728\u65e0\u9700\u91cd\u65b0\u52a0\u8f7d\u6574\u4e2a\u7f51\u9875\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u591f\u66f4\u65b0\u90e8\u5206\u7f51\u9875\u7684\u6280\u672f\u3002Ajax \u4e0d\u662f\u4e00\u79cd\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u800c\u662f\u4e00\u79cd\u7528\u4e8e\u521b\u5efa\u66f4\u597d\u66f4\u5feb\u4ee5\u53ca\u4ea4\u4e92\u6027\u66f4\u5f3a\u7684Web\u5e94\u7528\u7a0b\u5e8f\u7684\u6280\u672f\u3002 Ajax\u7684\u6838\u5fc3\u662fXMLHttpRequest\u5bf9\u8c61(XHR)\u3002XHR\u4e3a\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u548c\u89e3\u6790\u670d\u52a1\u5668\u54cd\u5e94\u63d0\u4f9b\u4e86\u63a5\u53e3\u3002\u80fd\u591f\u4ee5\u5f02\u6b65\u65b9\u5f0f\u4ece\u670d\u52a1\u5668\u83b7\u53d6\u65b0\u6570\u636e\u3002 jQuery \u63d0\u4f9b\u591a\u4e2a\u4e0e AJAX \u6709\u5173\u7684\u65b9\u6cd5\u3002\u901a\u8fc7 jQuery AJAX \u65b9\u6cd5\uff0c\u80fd\u591f\u4f7f\u7528 HTTP Get \u548c HTTP Post \u4ece\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u8bf7\u6c42\u6587\u672c\u3001HTML\u3001XML \u6216 JSON, \u540c\u65f6\u80fd\u591f\u628a\u8fd9\u4e9b\u5916\u90e8\u6570\u636e\u76f4\u63a5\u8f7d\u5165\u7f51\u9875\u7684\u88ab\u9009\u5143\u7d20\u4e2d\u3002 jQuery Ajax\u672c\u8d28\u5c31\u662f XMLHttpRequest\uff0c\u5bf9\u5b83\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u65b9\u4fbf\u8c03\u7528\u3002 SpringBoot \u8fd0\u884c\u539f\u7406\u521d\u63a2 pom.xml java\u5143\u6ce8\u89e3 @Target \u8868\u793a\u8be5\u6ce8\u89e3\u7528\u4e8e\u4ec0\u4e48\u5730\u65b9\uff0c\u53ef\u80fd\u7684\u503c\u5728\u679a\u4e3e\u7c7b ElemenetType \u4e2d\uff0c\u5305\u62ec\uff1a ElemenetType.CONSTRUCTOR-----------------------------\u6784\u9020\u5668\u58f0\u660e ElemenetType.FIELD ----------------------------------\u57df\u58f0\u660e\uff08\u5305\u62ec enum \u5b9e\u4f8b\uff09 ElemenetType.LOCAL_VARIABLE------------------------- \u5c40\u90e8\u53d8\u91cf\u58f0\u660e ElemenetType.METHOD ---------------------------------\u65b9\u6cd5\u58f0\u660e ElemenetType.PACKAGE --------------------------------\u5305\u58f0\u660e ElemenetType.PARAMETER ------------------------------\u53c2\u6570\u58f0\u660e ElemenetType.TYPE----------------------------------- \u7c7b\uff0c\u63a5\u53e3\uff08\u5305\u62ec\u6ce8\u89e3\u7c7b\u578b\uff09\u6216enum\u58f0\u660e @Retention \u8868\u793a\u5728\u4ec0\u4e48\u7ea7\u522b\u4fdd\u5b58\u8be5\u6ce8\u89e3\u4fe1\u606f\u3002\u53ef\u9009\u7684\u53c2\u6570\u503c\u5728\u679a\u4e3e\u7c7b\u578b RetentionPolicy \u4e2d\uff0c\u5305\u62ec\uff1a RetentionPolicy.SOURCE-------------\u6ce8\u89e3\u5c06\u88ab\u7f16\u8bd1\u5668\u4e22\u5f03 RetentionPolicy.CLASS -------------\u6ce8\u89e3\u5728class\u6587\u4ef6\u4e2d\u53ef\u7528\uff0c\u4f46\u4f1a\u88abVM\u4e22\u5f03 RetentionPolicy.RUNTIME ---------VM\u5c06\u5728\u8fd0\u884c\u671f\u4e5f\u4fdd\u7559\u6ce8\u91ca\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u673a\u5236\u8bfb\u53d6\u6ce8\u89e3\u7684\u4fe1\u606f\u3002 @Documented \u5c06\u6b64\u6ce8\u89e3\u5305\u542b\u5728 javadoc \u4e2d \uff0c\u5b83\u4ee3\u8868\u7740\u6b64\u6ce8\u89e3\u4f1a\u88abjavadoc\u5de5\u5177\u63d0\u53d6\u6210\u6587\u6863\u3002\u5728doc\u6587\u6863\u4e2d\u7684\u5185\u5bb9\u4f1a\u56e0\u4e3a\u6b64 \u6ce8\u89e3\u7684\u4fe1\u606f\u5185\u5bb9\u4e0d\u540c\u800c\u4e0d\u540c\u3002\u76f8\u5f53\u4e0e@see,@param \u7b49\u3002 @Inherited \u5141\u8bb8\u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u4e2d\u7684\u6ce8\u89e3 \u4e3b\u542f\u52a8\u7c7b\u6ce8\u89e3 \u4e3b\u542f\u52a8\u7c7b /* SpringApplication \u8fd9\u4e2a\u7c7b\u4e3b\u8981\u505a\u4e86\u4ee5\u4e0b\u56db\u4ef6\u4e8b\u60c5\uff1a 1\u3001\u63a8\u65ad\u5e94\u7528\u7684\u7c7b\u578b\u662f\u666e\u901a\u7684\u9879\u76ee\u8fd8\u662fWeb\u9879\u76ee 2\u3001\u67e5\u627e\u5e76\u52a0\u8f7d\u6240\u6709\u53ef\u7528\u521d\u59cb\u5316\u5668 \uff0c \u8bbe\u7f6e\u5230initializers\u5c5e\u6027\u4e2d 3\u3001\u627e\u51fa\u6240\u6709\u7684\u5e94\u7528\u7a0b\u5e8f\u76d1\u542c\u5668\uff0c\u8bbe\u7f6e\u5230listeners\u5c5e\u6027\u4e2d 4\u3001\u63a8\u65ad\u5e76\u8bbe\u7f6emain\u65b9\u6cd5\u7684\u5b9a\u4e49\u7c7b\uff0c\u627e\u5230\u8fd0\u884c\u7684\u4e3b\u7c7b */ public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) { this.resourceLoader = resourceLoader; Assert.notNull(primarySources, \"PrimarySources must not be null\"); this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources)); this.webApplicationType = WebApplicationType.deduceFromClasspath(); this.bootstrapRegistryInitializers = getBootstrapRegistryInitializersFromSpringFactories(); setInitializers((Collection) getSpringFactoriesInstances(ApplicationContextInitializer.class)); setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class)); this.mainApplicationClass = deduceMainApplicationClass(); } \u81ea\u52a8\u88c5\u914d\u539f\u7406 SpringBoot\u5728Spring.factories\u4e2d\u63d0\u4f9b\u4e86\u5927\u91cf\u914d\u7f6e\u7c7b xxxAutoConfiguration \uff0c\u53ef\u4ee5\u88abIOC\u5bb9\u5668\u63a5\u7ba1\uff1b \u8fd9\u4e9b\u914d\u7f6e\u7c7b\u662f\u5426\u751f\u6548\u53d6\u51b3\u4e8e@ConditionalOnxxx()\u4e2d\u7684\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\uff1b\u5f53\u914d\u7f6e\u7c7b\u751f\u6548\u65f6\uff0c\u5219\u4f1a\u5411IOC\u5bb9\u5668\u4e2d\u6dfb\u52a0\u8bb8\u591a\u7ec4\u4ef6\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u5c5e\u6027\u5219\u4ece\u4e0e xxxAutoConfiguration \u5bf9\u5e94\u7684xxxProperites\u7c7b\u4e2d\u83b7\u53d6\u9ed8\u8ba4\u503c\uff1b xxxProperties\u4e2d\u7684\u5c5e\u6027\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6 application.yml/application.properties\u4e2d\u4fee\u6539\uff0c\u8fd9\u6837 xxxAutoConfiguration \u83b7\u53d6\u5230\u7684\u5c06\u662f\u6307\u5b9a\u7684\u5c5e\u6027\u503c\uff1b //\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u6839\u636e server \u6807\u7b7e\uff0c\u83b7\u53d6\u6307\u5b9a\u7684\u503c\u548cxxxProperties\u7c7b\u4e2dbean\u7684\u5c5e\u6027\u8fdb\u884c\u7ed1\u5b9a @ConfigurationProperties(prefix = \"server\", ignoreUnknownFields = true) public class ServerProperties {...} SpringBoot web\u5f00\u53d1 \u9759\u6001\u8d44\u6e90 //WebMvcAutoConfiguration.java /* \u5982\u679c\u5df2\u7ecf\u6307\u5b9a\u9759\u6001\u8d44\u6e90\u76ee\u5f55(addMappings\u5c5e\u6027\u4e3afalse), \u5219\u4f1a\u63d0\u793a\u9ed8\u8ba4\u8d44\u6e90\u5904\u7406\u4f1a\u5931\u6548\uff1b \u5426\u5219: \u5bf9\u4e8e \u6839\u76ee\u5f55/webjars/** \u4e0b\u7684\u8d44\u6e90\u8bbf\u95ee\uff0c\u4f1a\u5230classpath:/META-INF/resources/webjars/\u4e0b\u5bfb\u627e\uff1b \u5bf9\u4e8e \u6839\u76ee\u5f55/ \u4e0b\u7684\u8d44\u6e90\u8bbf\u95ee\uff0c\u4f1a\u5230 { \"classpath:/META-INF/resources/\", \"classpath:/resources/\", \"classpath:/static/\", \"classpath:/public/\" } \u4e0b\u5bfb\u627e\uff0c \u5bfb\u627e\u4f18\u5148\u7ea7\u4e5f\u6309\u6b64\u987a\u5e8f \u6839\u76ee\u5f55\u5373 ip\u5730\u5740:\u7aef\u53e3\u53f7\uff0c\u5982localhost:8080\uff1b classpath \u6307 resources\u76ee\u5f55\uff0c\u5f15\u5165\u7684\u5916\u90e8\u5305\uff0c\u4e5f\u662f\u4f4d\u4e8eresources\u76ee\u5f55\u4e0b */ public void addResourceHandlers(ResourceHandlerRegistry registry) { if (!this.resourceProperties.isAddMappings()) { logger.debug(\"Default resource handling disabled\"); return; } // addResourceHandler(registry, \u6a21\u5f0f, \u4f4d\u7f6e) addResourceHandler(registry, \"/webjars/**\", \"classpath:/META-INF/resources/webjars/\"); addResourceHandler(registry, this.mvcProperties.getStaticPathPattern(), (registration) -> { registration.addResourceLocations(this.resourceProperties.getStaticLocations()); if (this.servletContext != null) { ServletContextResource resource = new ServletContextResource(this.servletContext, SERVLET_LOCATION); registration.addResourceLocations(resource); } }); }","title":"Spring"},{"location":"Java/5_Spring/#spring","text":"","title":"Spring"},{"location":"Java/5_Spring/#maven","text":"","title":"Maven"},{"location":"Java/5_Spring/#_1","text":"I.\u4f9d\u8d56\u7ba1\u7406\u7cfb\u7edf 1\u3001 \u57fa\u7840\u4f9d\u8d56 \u7528 groupId\u3001 artifactId\u3001 version \u7ec4\u6210\u7684Coordination\uff08\u5750\u6807\uff09\u552f\u4e00\u6807\u8bc6\u4e00\u4e2a\u4f9d\u8d56; \u901a\u8fc7\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u6765\u7ba1\u7406jar\u5305 1)\u5750\u6807\u5c5e\u6027\u7684\u7406\u89e3: Maven \u5750\u6807\u4e3a\u5404\u79cd\u7ec4\u4ef6\u5f15\u5165\u4e86\u79e9\u5e8f\uff0c\u4efb\u4f55\u4e00\u4e2a\u7ec4\u4ef6\u90fd\u5fc5\u987b\u660e\u786e\u5b9a\u4e49\u81ea\u5df1\u7684\u5750\u6807\u3002 \u200b 2)groupId: \u5b9a\u4e49\u5f53\u524d Maven \u9879\u76ee\u96b6\u5c5e\u7684\u5b9e\u9645\u9879\u76ee-\u516c\u53f8\u540d\u79f0, jar\u5305\u6240\u5728\u4ed3\u5e93\u8def\u5f84 \u200b 3)artifactId(\u5de5\u7a0b\u540d): \u8be5\u5143\u7d20\u5b9a\u4e49\u5b9e\u9645\u9879\u76ee\u4e2d\u7684\u4e00\u4e2a Maven \u6a21\u5757-\u9879\u76ee\u540d \u200b 4)version: \u8be5\u5143\u7d20\u5b9a\u4e49 Maven \u9879\u76ee\u5f53\u524d\u6240\u5904\u7684\u7248\u672c\uff0c\u4e5f\u5373\u6240\u9700\u8981\u4e0b\u8f7d\u7684jar\u5305\u7248\u672c\u3002 \u2003 \u2003\u4f20\u9012\u6027\u4f9d\u8d56: \u8ba9\u6211\u4eec\u5728\u4f7f\u7528\u67d0\u4e2ajar\u65f6\uff0c\u4e0d\u7528\u8003\u8651\u5b83\u4f9d\u8d56\u4e86\u4ec0\u4e48\uff0c\u4e0d\u7528\u62c5\u5fc3\u5f15\u5165\u591a\u4f59\u7684\u4f9d\u8d56\uff0cMaven\u4f1a\u89e3\u6790\u5404\u4e2a\u76f4\u63a5\u4f9d\u8d56\u7684POM\uff0c\u5c06\u90a3\u4e9b\u5fc5\u8981\u7684\u95f4\u63a5\u4f9d\u8d56\uff0c\u4ee5\u4f20\u9012\u6027\u4f9d\u8d56\u7684\u5f62\u5f0f\u5f15\u5165\u5230\u5f53\u524d\u9879\u76ee\u4e2d\u3002 \u2003\u4f46\u662f\u4f20\u9012\u4f9d\u8d56\u53ef\u80fd\u4ea7\u751f\u51b2\u7a81\uff0c\u5373A\u95f4\u63a5\u4f9d\u8d56\u4e24\u4e2a\u4e0d\u540c\u7684\u7248\u672c\u7684C,\u53ef\u4ee5\u901a\u8fc7exclusions\u6392\u9664\u51b2\u7a81\u7248\u672c\u3002 \u2003 \u4f9d\u8d56\u8303\u56f4 : \u2003 II. \u591a\u6a21\u5757\u6784\u5efa \u5c06\u4e00\u4e2a\u9879\u76ee\u5206\u89e3\u4e3a\u591a\u4e2a\u6a21\u5757\u5df2\u7ecf\u662f\u4e00\u4e2a\u5f88\u901a\u7528\u7684\u65b9\u5f0f, \u5728 Maven \u4e2d\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a parent POM \u4f5c\u4e3a\u4e00\u7ec4 module \u7684\u805a\u5408 POM\u3002 \u5728\u8be5 POM \u4e2d\u53ef\u4ee5\u4f7f\u7528\u6807\u7b7e\u6765\u5b9a\u4e49\u4e00\u7ec4\u5b50\u6a21\u5757\u3002parent POM \u4e0d\u4f1a\u6709\u4ec0\u4e48\u5b9e\u9645\u6784\u5efa\u4ea7\u51fa\u3002 \u800cparent POM \u4e2d\u7684 build \u914d\u7f6e\u4ee5\u53ca\u4f9d\u8d56\u914d\u7f6e\u90fd\u4f1a\u81ea\u52a8\u7ee7\u627f\u7ed9\u5b50 module\u3002 III. \u4e00\u81f4\u7684\u9879\u76ee\u7ed3\u6784 (\u4e0d\u540c\u7684 IDE \u9879\u76ee\u7ed3\u6784\u662f\u4e00\u81f4) \u5236\u5b9a\u4e86\u4e00\u5957\u9879\u76ee\u76ee\u5f55\u7ed3\u6784\u4f5c\u4e3a\u6807\u51c6\u7684 Java \u9879\u76ee\u7ed3\u6784,\u89e3\u51b3\u4e0d\u540c ide \u5e26\u6765\u7684\u6587\u4ef6\u76ee\u5f55\u4e0d\u4e00\u81f4\u95ee\u9898\u3002 IV. \u4e00\u81f4\u7684\u6784\u5efa\u6a21\u578b\u548c\u63d2\u4ef6\u673a\u5236 <dependency> <groupId>javax.servlet</groupId> // \u5305\u540d/\u9879\u76ee\u540d <artifactId>javax.servlet-api</artifactId> // \u67d0\u4e00\u6a21\u5757\u540d <version>3.1.0</version> // \u6240\u9700\u8981jar\u5305\u7684\u7248\u672c </dependency>","title":"\u56db\u5927\u7279\u6027"},{"location":"Java/5_Spring/#_2","text":"","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"Java/5_Spring/#_3","text":"maven\u4e2d\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\uff0c\u56e0\u6b64\u5bfc\u51fatarget\u65f6\u53ef\u80fd\u4f1a\u9047\u5230\u914d\u7f6e\u6587\u4ef6\u65e0\u6cd5\u5bfc\u51fa\u7684\u60c5\u51b5\uff0c\u89e3\u51b3\u65b9\u6848\u662f\u5728pom.xml\u4e2d\u7684build\u4e2d\u914d\u7f6eresources\uff0c\u6765\u9632\u6b62\u5bfc\u51fa\u5931\u8d25\u3002 <build> <resources> <resource> <directory>src/main/resources</directory> <includes> <include>**/*.properties</include> <include>**/*.xml</include> </includes> <filtering>true</filtering> </resource> <resource> <directory>src/main/java</directory> <includes> <include>**/*.properties</include> <include>**/*.xml</include> </includes> <filtering>true</filtering> </resource> </resources> </build>","title":"\u6ce8\u610f"},{"location":"Java/5_Spring/#prepare","text":"POJO Plain Old Java Object, \u201c\u7b80\u5355java\u5bf9\u8c61\u201d\u3002POJO\u7684\u5185\u5728\u542b\u4e49\u662f\u6307\u90a3\u4e9b\u6ca1\u6709\u4ece\u4efb\u4f55\u7c7b\u7ee7\u627f\u3001\u4e5f\u6ca1\u6709\u5b9e\u73b0\u4efb\u4f55\u63a5\u53e3\uff0c\u66f4\u6ca1\u6709\u88ab\u5176\u5b83\u6846\u67b6\u4fb5\u5165\u7684java\u5bf9\u8c61\u3002 JavaBean\u5bf9\u8c61 JavaBean\u662f\u4e00\u4e2a\u9075\u5faa\u7279\u5b9a\u5199\u6cd5\u7684Java\u7c7b,\u662f\u4e00\u79cdJava\u8bed\u8a00\u7f16\u5199\u7684\u53ef\u91cd\u7528\u7ec4\u4ef6,\u5b83\u7684\u65b9\u6cd5\u547d\u540d,\u6784\u9020\u53ca\u884c\u4e3a\u5fc5\u987b\u7b26\u5408\u7279\u5b9a\u7684\u7ea6\u5b9a\uff1a 1\u3001\u8fd9\u4e2a\u7c7b\u5fc5\u987b\u5177\u6709\u4e00\u4e2a\u516c\u5171\u7684(public)\u65e0\u53c2\u6784\u9020\u51fd\u6570\uff1b 2\u3001\u6240\u6709\u5c5e\u6027\u79c1\u6709\u5316\uff08private\uff09\uff1b 3\u3001\u79c1\u6709\u5316\u5c5e\u6027\u5fc5\u987b\u901a\u8fc7public\u7c7b\u578b\u7684\u65b9\u6cd5(getter\u548csetter)\u66b4\u9732\u7ed9\u5176\u4ed6\u7a0b\u5e8f,\u5e76\u4e14\u65b9\u6cd5\u7684\u547d\u540d\u4e5f\u5fc5\u987b\u9075\u5faa\u4e00\u5b9a\u7684\u547d\u540d\u89c4\u8303\u3002 4\u3001\u8fd9\u4e2a\u7c7b\u5e94\u662f\u53ef\u5e8f\u5217\u5316\u7684\u3002\uff08\u6bd4\u5982\u53ef\u4ee5\u5b9e\u73b0Serializable \u63a5\u53e3\uff0c\u7528\u4e8e\u5b9e\u73b0bean\u7684\u6301\u4e45\u6027\uff09","title":"Prepare"},{"location":"Java/5_Spring/#iocinverse-of-control","text":"\u63a7\u5236\u53cd\u8f6c\u662f\u5c06\u5bf9\u8c61\u5b9e\u4f8b\u5316\u7684\u521b\u5efa\u8fc7\u7a0b\u4ea4\u7ed9\u5916\u90e8\u5bb9\u5668\u53bb\u8d1f\u8d23, \u800c\u975e\u7531\u7a0b\u5e8f\u5458\u5728\u4ee3\u7801\u4e2d\u4e8b\u5148\u663e\u793a\u5b9e\u4f8b\u5316 \uff1a\u5bf9\u8c61\u4ec5\u901a\u8fc7\u6784\u9020\u51fd\u6570\u53c2\u6570\u3001\u5de5\u5382\u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u6216\u5bf9\u8c61\u5b9e\u4f8b\u4e2d(\u5b9e\u4f8b\u53ef\u4ee5\u7531\u6784\u9020\u51fd\u6570\u6216\u8005\u5de5\u5382\u65b9\u6cd5\u8fd4\u56de)\u7684\u5c5e\u6027\u6765\u5b9a\u4e49\u6240\u9700\u7684\u4f9d\u8d56\u5173\u7cfb\uff08\u5373\u5b83\u4eec\u4f7f\u7528\u7684\u5176\u4ed6\u5bf9\u8c61\uff09\u3002\u7136\u540e\u5bb9\u5668\u5728\u521b\u5efabean\u65f6\u6ce8\u5165\u8fd9\u4e9b\u4f9d\u8d56\u9879\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u57fa\u672c\u4e0a\u662fbean\u672c\u8eab(\u5373\u901a\u8fc7\u4f7f\u7528\u7c7b\u7684\u76f4\u63a5\u6784\u9020\u6216\u670d\u52a1\u5b9a\u4f4d\u5668\u6a21\u5f0f\u7b49\u673a\u5236\u6765\u63a7\u5236\u5176\u4f9d\u8d56\u9879\u7684\u5b9e\u4f8b\u5316\u6216\u4f4d\u7f6e)\u7684\u9006\u8fc7\u7a0b\uff0c\u56e0\u6b64\u79f0\u4e3a\u63a7\u5236\u53cd\u8f6c; \u4f9d\u8d56\u6ce8\u5165(Dependency Injection\uff0c DI)\u662fIOC\u7684\u5177\u4f53\u5b9e\u73b0 \uff0c\u53ef\u4ee5\u770b\u4f5c\u5c5e\u6027\u8d4b\u503c\u7684\u4e00\u79cd\u64cd\u4f5c(\u672c\u8d28\u662f\u57fa\u4e8e\u53cd\u5c04\uff0c\u8c03\u7528bean\u7c7b\u7684setter\u65b9\u6cd5\u6216\u8005\u6784\u9020\u65b9\u6cd5\uff0c\u4f20\u9012\u9700\u8981\u6ce8\u5165\u7684\u5bf9\u8c61)\uff1b\u4f9d\u8d56: \u6307Bean\u5bf9\u8c61\u7684\u521b\u5efa\u4f9d\u8d56\u4e8e\u5bb9\u5668\uff1b\u6ce8\u5165 : \u6307Bean\u5bf9\u8c61\u6240\u4f9d\u8d56\u7684\u8d44\u6e90, \u7531\u5bb9\u5668\u6765\u8bbe\u7f6e\u548c\u88c5\u914d\u3002 Container Review configuration meatdata: The configuration metadata is represented in XML, Java annotations, or Java code. It lets you express the objects that compose your application and the rich interdependencies between those objects. This configuration metadata represents how you, as an application developer, tell the Spring container to instantiate, configure, and assemble the objects in your application. Spring Container : The org.springframework.beans and org.springframework.context packages are the basis for Spring Framework\u2019s IoC container. The BeanFactory interface provides an advanced configuration mechanism capable of managing any type of object. ApplicationContext is a sub-interface of BeanFactory\u3002 \u2003 \u6838\u5fc3\u6280\u672f: \u5de5\u5382\u6a21\u5f0f\u3001xml\u89e3\u6790\u3001\u53cd\u5c04\u6280\u672f\u3001\u7b56\u7565\u6a21\u5f0f(\u521b\u5efa\u8868\u793a\u5404\u79cd\u7b56\u7565\u7684\u5bf9\u8c61\u548c\u4e00\u4e2a\u884c\u4e3a\u968f\u7740\u7b56\u7565\u5bf9\u8c61\u6539\u53d8\u800c\u6539\u53d8\u7684 context \u5bf9\u8c61\uff0c\u7b56\u7565\u5bf9\u8c61\u5c31\u662fconfiguration metadata)\u3001\u5355\u4f8b\u6a21\u5f0f(IoC\u5bb9\u5668\u5b9e\u4f8b\u5316\u7684\u5bf9\u8c61\u90fd\u662f\u5355\u4f8b\u5bf9\u8c61\uff0c \u76f8\u5e94\u7684\u6784\u9020\u51fd\u6570\u53ea\u4f1a\u88ab\u8c03\u7528\u4e00\u6b21) Instantiating Beans 1\u3001Instantiation with a Constructor: \u5982\u679cbean\u7c7b\u4e2d\u5305\u542b\u5c5e\u6027\uff0c\u8981\u6c42bean\u63d0\u4f9b\u65e0\u53c2\u6784\u9020\u51fd\u6570; <bean id=\"exampleBean\" class=\"examples.ExampleBean\"/> \u2003\u20032\u3001Instantiation with a Static Factory Method\uff0c Spring\u89e3\u6790\u914d\u7f6e\u6587\u4ef6\uff0c\u901a\u8fc7\u53cd\u5c04\u8c03\u7528\u9759\u6001\u5de5\u5382\u7c7b\u7684\u9759\u6001\u5de5\u5382\u65b9\u6cd5\uff0c\u7531\u4e8e\u4e0d\u4f7f\u7528\u5bb9\u5668\u6765\u6784\u9020\u5b9e\u4f8b\uff0c\u53ef\u4ee5\u5728\u6784\u9020\u5b9e\u4f8b\u524d\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u3002 <bean id=\"clientService\" class=\"examples.ClientService\" // \u5305\u542b static factory method\u7684\u7c7b factory-method=\"createInstance\"/> // \u9759\u6001\u5de5\u5382\u65b9\u6cd5\uff0c\u8fd4\u56de\u4e00\u4e2a\u5b9e\u4f8b\u5316\u5bf9\u8c61 \u2003\u20033\u3001Instantiation by Using an Instance Factory Method \u4f7f\u7528\u5b9e\u4f8b\u5de5\u5382\u65b9\u6cd5\u8fdb\u884c\u5b9e\u4f8b\u5316\u4f1a\u4ece\u5bb9\u5668\u4e2d\u8c03\u7528\u73b0\u6709bean\u7684\u975e\u9759\u6001\u65b9\u6cd5\u6765\u521b\u5efa\u65b0bean\u3002\u8981\u4f7f\u7528\u6b64\u673a\u5236\uff0c\u8bf7\u5c06class\u5c5e\u6027\u7559\u7a7a\uff0c\u5e76\u5728factory-bean\u5c5e\u6027\u4e2d\u6307\u5b9a\u5f53\u524d\u5bb9\u5668\uff08\u6216\u7236\u5bb9\u5668\u6216\u7956\u5148\u5bb9\u5668\uff09\u4e2d\u5305\u542b\u8981\u521b\u5efa\u5bf9\u8c61\u7684\u5b9e\u4f8b\u65b9\u6cd5\u7684Bean\u7684\u540d\u79f0\u3002\u4f7f\u7528factory-method\u5c5e\u6027\u8bbe\u7f6e\u5de5\u5382\u65b9\u6cd5\u672c\u8eab\u7684\u540d\u79f0\u3002\u4ee5\u4e0b\u793a\u4f8b\u663e\u793a\u4e86\u5982\u4f55\u914d\u7f6e\u6b64\u7c7bBean\uff1a <!-- the factory bean, which contains a method called createInstance() --> <bean id=\"serviceLocator\" class=\"examples.DefaultServiceLocator\"> <!-- inject any dependencies required by this locator bean --> </bean> <!-- the bean to be created via the factory bean --> <bean id=\"clientService\" factory-bean=\"serviceLocator\" factory-method=\"createClientServiceInstance\"/> // serviceLocator\u4e2d\u7684\u5de5\u5382\u65b9\u6cd5(\u975e\u9759\u6001) IoC\u6ce8\u5165 \u5206\u4e3asetter\u6ce8\u5165\u548c\u6784\u9020\u5668\u6ce8\u5165 setter\u6ce8\u5165 :\u5bb9\u5668\u901a\u8fc7\u5728bean\u4e0a\u8c03\u7528setter\u65b9\u6cd5\u6765\u5b9e\u73b0\u57fa\u4e8esetter\u7684DI\uff1b\u5982\u679c\u5c5e\u6027\u662fboolean\u7c7b\u578b, \u5219\u6ca1\u6709set\u65b9\u6cd5, \u662f is \u3002 \u6784\u9020\u5668\u6ce8\u5165 :\u57fa\u4e8e\u6784\u9020\u51fd\u6570\u7684DI\u662f\u901a\u8fc7\u5bb9\u5668\u8c03\u7528\u5177\u6709\u591a\u4e2a\u53c2\u6570\uff08\u6bcf\u4e2a\u53c2\u6570\u4ee3\u8868\u4e00\u4e2a\u4f9d\u8d56\u9879\uff09\u7684\u6784\u9020\u51fd\u6570\u6765\u5b8c\u6210\u7684. \u6784\u9020\u5668\u6ce8\u5165\u53ef\u80fd\u4ea7\u751f\u5faa\u73af\u4f9d\u8d56\u95ee\u9898\uff0c\u4e92\u76f8\u4f9d\u8d56\u5bf9\u65b9\u5bfc\u81f4bean\u65e0\u6cd5\u5b9e\u4f8b\u5316\uff0c\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7\u5c06\u4e92\u76f8\u4f9d\u8d56\u7684\u53cc\u65b9\u7531\u6784\u9020\u5668\u6ce8\u5165\u8f6c\u4e3asetter\u6ce8\u5165\uff0c\u56e0\u4e3a\u540e\u8005\u662f\u5148\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u518d\u53bb\u5b9e\u4f8b\u5316setter\u65b9\u6cd5\u6240\u9700\u7684bean\u5bf9\u8c61\uff1b\u800c\u524d\u8005\u662f\u5148\u53bb\u5b9e\u4f8b\u5316\u6784\u9020\u5668\u6240\u9700\u7684bean\u5bf9\u8c61\u3002 \u6b64\u5916\u8fd8\u6709\u9759\u6001\u5de5\u5382\u6ce8\u5165\u548c\u5b9e\u4f8b\u5316\u5de5\u5382\u6ce8\u5165\uff0c\u672c\u8d28\u90fd\u662fsetter\u6ce8\u5165\uff0c\u4e0d\u8fc7\u662f\u88ab\u6ce8\u5165\u7684bean\u5bf9\u8c61\u662f\u901a\u8fc7\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u6216\u8005\u5b9e\u4f8b\u5316\u5de5\u5382\u65b9\u6cd5\u83b7\u53d6\u7684\uff1b\u4f8b\u5982userDao\u662f\u901a\u8fc7\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u5b9e\u4f8b\u5316\u7684\u3002 <bean id=\"userService\" class=\"com.wh.service.UserService\"> <!--set\u65b9\u6cd5\u6ce8\u5165 \u901a\u8fc7property\u5c5e\u6027\u6ce8\u5165 name:bean\u5bf9\u8c61\u4e2d\u5c5e\u6027\u5b57\u6bb5\u540d, \u8be5\u5c5e\u6027\u9700\u8981\u6709\u5bf9\u5e94\u7684setter\u65b9\u6cd5 ref: \u8be5\u5b57\u6bb5\u7c7b\u578b\u5bf9\u5e94\u7684bean \u7684id value: \u6ce8\u5165\u5e38\u7528\u5bf9\u8c61\u7c7b\u578b\u6216\u8005\u57fa\u672c\u7c7b\u578b\u65f6\uff0c\u6307\u5b9a\u5176\u503c --> <!--\u6ce8\u5165Javabean\u5bf9\u8c61--> <property name=\"_userDao\" ref=\"userDao\"/> <!--\u6ce8\u5165\u5e38\u7528\u5bf9\u8c61\u7c7b\u578b\u6216\u8005\u57fa\u672c\u7c7b\u578b--> <!-- \u6ce8\u5165\u7c7b\u578b\u4e3aString --> <property name=\"host\" value=\"127.0.0.1\"/> <!-- \u6ce8\u5165\u7c7b\u578b\u4e3a Integer --> <property name=\"port\" value=\"9999\"/> <!-- \u6ce8\u5165\u7c7b\u578b\u4e3aList --> <property name=\"_strList\"> <list> <value>wh</value> <value>xx</value> </list> </property> <!--\u901a\u8fc7\u6784\u9020\u5668\u6ce8\u5165--> <constructor-arg name=\"_studentDao\" ref=\"studentDao\"/> <!--index\u5c5e\u6027\u6765\u660e\u786e\u6307\u5b9a\u6784\u9020\u51fd\u6570\u53c2\u6570\u7684\u7d22\u5f15--> <constructor-arg name=\"uname\" value=\"root\" index=\"1\"/> </bean> <bean name=\"studentDao\" class=\"com.wh.dao.StudentDao\"></bean> <!--\u901a\u8fc7import\uff0c\u52a0\u8f7ddao\u7684\u914d\u7f6e\u6587\u4ef6\uff0c dao.xml\u4e2d\u901a\u8fc7\u9759\u6001\u5de5\u5382\u65b9\u6cd5\u5b9e\u4f8b\u5316UserDao\u5bf9\u8c61, --> <import resource=\"dao.xml\"/> <!-- p\u7a7a\u95f4\u6ce8\u5165: properties namespace, \u8981\u6c42\u5c5e\u6027\u63d0\u4f9bset\u65b9\u6cd5\uff0c\u672c\u8d28\u662fsetter\u6ce8\u5165 --> <!-- \u5bfc\u5165\u7ea6\u675f :--> xmlns:p=\"http://www.springframework.org/schema/p\" <bean id=\"user\" class=\"com.kuang.pojo.User\" p:name=\"\u72c2\u795e\" p:age=\"18\"/> <!-- c\u7a7a\u95f4\u6ce8\u5165: construct namespace, \u8981\u6c42\u5c5e\u6027\u63d0\u4f9b\u6709\u53c2\u6784\u9020\u51fd\u6570\uff0c\u672c\u8d28\u662f\u6784\u9020\u5668\u6ce8\u5165 --> <!-- \u5bfc\u5165\u7ea6\u675f --> xmlns:c=\"http://www.springframework.org/schema/c\" <!--C(\u6784\u9020: Constructor)\u547d\u540d\u7a7a\u95f4 , \u5c5e\u6027\u4f9d\u7136\u8981\u8bbe\u7f6eset\u65b9\u6cd5--> <bean id=\"user\" class=\"com.kuang.pojo.User\" c:name=\"\u72c2\u795e\" c:age=\"18\"/> IoC\u81ea\u52a8\u88c5\u914d \u81ea\u52a8\u88c5\u914d\u662f\u4f7f\u7528spring\u6ee1\u8db3bean\u4f9d\u8d56\u7684\u4e00\u79cd\u65b9\u6cd5\uff1bspring\u4f1a\u5728\u5e94\u7528\u4e0a\u4e0b\u6587\u4e2d\u4e3a\u67d0\u4e2abean\u5bfb\u627e\u5176\u4f9d\u8d56\u7684bean\u3002 Spring\u4e2dbean\u6709\u4e09\u79cd\u88c5\u914d\u673a\u5236\uff0c\u5206\u522b\u662f:\u5728xml\u4e2d\u663e\u5f0f\u914d\u7f6e;\u5728java\u4e2d\u663e\u5f0f\u914d\u7f6e;\u9690\u5f0f\u7684bean\u53d1\u73b0\u673a\u5236\u548c\u81ea\u52a8\u88c5\u914d\u3002 Spring\u7684\u81ea\u52a8\u88c5\u914d\u9700\u8981\u4ece\u4e24\u4e2a\u89d2\u5ea6\u6765\u5b9e\u73b0\uff0c\u6216\u8005\u8bf4\u662f\u4e24\u4e2a\u64cd\u4f5c\uff1a \u7ec4\u4ef6\u626b\u63cf(component scanning)\uff1aspring\u4f1a\u81ea\u52a8\u53d1\u73b0\u5e94\u7528\u4e0a\u4e0b\u6587\u4e2d\u6240\u521b\u5efa\u7684bean\uff1b \u81ea\u52a8\u88c5\u914d(autowiring)\uff1aspring\u81ea\u52a8\u6ee1\u8db3bean\u4e4b\u95f4\u7684\u4f9d\u8d56\uff0c\u4e5f\u5c31\u662f\u6211\u4eec\u8bf4\u7684IoC/DI\u3002 1.\u4f7f\u7528xml public class Cat { public void shout() { System.out.println(\"miao~\"); } } public class Dog { public void shout() { System.out.println(\"wang~\"); } } // \u65b0\u5efa\u4e00\u4e2a\u7528\u6237\u7c7b User public class User { private Cat cat; private Dog dog; private String str; // setter\u65b9\u6cd5 } <!-- \u4f7f\u7528xml --> <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"> <bean id=\"dog\" class=\"com.kuang.pojo.Dog\"/> <bean id=\"cat\" class=\"com.kuang.pojo.Cat\"/> <bean id=\"user\" class=\"com.kuang.pojo.User\"> <property name=\"cat\" ref=\"cat\"/> <property name=\"dog\" ref=\"dog\"/> <property name=\"str\" value=\"qinjiang\"/> </bean> </beans> 1.2. \u4f7f\u7528\u7b80\u5316xml : \u5f53\u4e00\u4e2abean\u8282\u70b9\u5e26\u6709 autowire=\"byName\" \u7684\u5c5e\u6027\u65f6, \u5c06\u67e5\u627e\u5176\u7c7b\u4e2d\u6240\u6709\u7684set\u65b9\u6cd5\u540d\uff0c\u4f8b\u5982setCat\uff0c\u83b7\u5f97\u5c06set\u53bb\u6389\u5e76\u4e14\u9996\u5b57\u6bcd\u5c0f\u5199\u7684\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982cat; \u53bbspring\u5bb9\u5668\u4e2d\u5bfb\u627e\u662f\u5426\u6709\u6b64\u5b57\u7b26\u4e32\u540d\u79f0id\u7684\u5bf9\u8c61; \u5982\u679c\u6709\uff0c\u5c31\u53d6\u51fa\u6ce8\u5165\uff1b\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u62a5\u7a7a\u6307\u9488\u5f02\u5e38\u3002 autowire byType (\u6309\u7c7b\u578b\u81ea\u52a8\u88c5\u914d): \u4f7f\u7528autowire=\"byType\", \u9996\u5148\u9700\u8981\u4fdd\u8bc1\uff1a\u540c\u4e00\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5728spring\u5bb9\u5668\u4e2d\u552f\u4e00\u3002\u5982\u679c\u4e0d\u552f\u4e00\uff0c\u4f1a\u62a5\u4e0d\u552f\u4e00\u7684\u5f02\u5e38\u3002 <bean id=\"user\" class=\"com.kuang.pojo.User\" autowire=\"byName\"> <property name=\"str\" value=\"qinjiang\"/> </bean> <!-- ====== --> <bean id=\"user\" class=\"com.kuang.pojo.User\" autowire=\"byType\"> <property name=\"str\" value=\"qinjiang\"/> </bean>s 2. \u4f7f\u7528\u6ce8\u89e3 : \u5229\u7528\u6ce8\u89e3\u7684\u65b9\u5f0f\u6ce8\u5165\u5c5e\u6027 \u524d\u63d0: \u5728spring\u914d\u7f6e\u6587\u4ef6\u4e2d\u5f15\u5165context\u6587\u4ef6\u5934; \u5f00\u542f\u5c5e\u6027\u6ce8\u89e3\u652f\u6301\uff01 @Resource \u6ce8\u89e3: 1\u3001\u6ce8\u89e3\u9ed8\u8ba4\u901a\u8fc7\u5c5e\u6027\u5b57\u6bb5\u540d\u79f0\u67e5\u627e\u5bf9\u5e94\u7684bean\u5bf9\u8c61(byName)\uff0c\u56e0\u6b64\u8be5\u540d\u79f0\u4e00\u822c\u5e94\u4e0ebean\u6807\u7b7e\u7684id\u503c\u76f8\u540c\u3002 2\u3001\u5982\u679c\u4e0d\u76f8\u540c\uff0c\u5219\u4f1a\u901a\u8fc7\u5c5e\u6027\u5bf9\u5e94\u7684class\u7c7b\u578b\u6765\u67e5\u627e\u3002 3\u3001\u5c5e\u6027\u53ef\u4ee5\u63d0\u4f9bsetter\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u63d0\u4f9b\u3002 4\u3001\u6ce8\u89e3\u53ef\u4ee5\u58f0\u660e\u5728\u5c5e\u6027\u5b57\u6bb5\u4e0a\uff0c\u6216setter\u65b9\u6cd5\u4e0a\u3002 5\u3001\u53ef\u4ee5\u8bbe\u7f6e\u6ce8\u89e3\u7684name\u5c5e\u6027\uff0c\u8981\u4e0ebean\u6807\u7b7e\u7684id\u503c\u76f8\u540c\u3002 6\u3001\u5f53\u6ce8\u5165\u63a5\u53e3\u65f6\uff0c\u5982\u679c\u63a5\u53e3\u53ea\u6709\u4e00\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u5219\u6b63\u5e38\u5b9e\u4f8b\u5316\uff1b\u5426\u5219\u9700\u8981\u901a\u8fc7\u6ce8\u89e3\u7684name\u5c5e\u6027\u6307\u5b9a\u5177\u4f53\u7684\u5b9e\u73b0\u7c7b\u7684bean\u6807\u7b7e\u7684id\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u6b67\u4e49\u800c\u62a5\u9519\u3002 @Autowired \u6ce8\u89e3: 1\u3001\u9ed8\u8ba4\u901a\u8fc7class\u7c7b\u578b\u67e5\u627ebean\u5bf9\u8c61(byType)\uff0c\u4e0e\u5c5e\u6027\u5b57\u6bb5\u7684\u540d\u79f0\u65e0\u5173\u3002 2\u3001\u5c5e\u6027\u53ef\u4ee5\u63d0\u4f9bsetter\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4e0d\u63d0\u4f9b\u3002 3\u3001\u6ce8\u89e3\u53ef\u4ee5\u58f0\u660e\u5728\u5c5e\u6027\u5b57\u6bb5\u4e0a\uff0c\u6216setter\u65b9\u6cd5\u4e0a\u3002 4\u3001@Autowired\u6ce8\u89e3\u6ca1\u6709name\u5c5e\u6027\uff0c\u53ef\u4ee5\u6dfb\u52a0 @Qualifier\u7ed3\u5408\u4f7f\u7528\uff0c\u901a\u8fc7value\u5c5e\u6027\u503c\u67e5\u627ebean\u5bf9\u8c61(value\u5bf9\u8c61\u5fc5\u987b\u8bbe\u7f6e\uff0c\u4e14\u9700\u4e0ebean\u6807\u7b7eid\u76f8\u540c)\u3002 // Bean\u7c7b\u4e2d\u4e0d\u9700\u8981\u518d\u8bbe\u7f6esetter\u65b9\u6cd5\uff1b public class User { @Autowired @Qualifier(value=\"cat_alias\") private Cat cat; @Resource private Dog dog; } <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context=\"http://www.springframework.org/schema/context\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd\"> <!-- \u9700\u8981\u5728spring\u914d\u7f6e\u6587\u4ef6\u4e2d\u5f15\u5165context\u6587\u4ef6\u5934 --> <!--\u5f00\u542f\u5c5e\u6027\u6ce8\u89e3\u652f\u6301--> <context:annotation-config/> <bean id=\"dog\" class=\"com.kuang.pojo.Dog\"/> <bean id=\"cat_alias\" class=\"com.kuang.pojo.Cat\"/> <bean id=\"user\" class=\"com.kuang.pojo.User\"/> </beand> 3. \u4f7f\u7528java config /** Configuration\u672c\u8eab\u4e5f\u662f\u4e00\u4e2a@Component\uff0c\u4ee5\u8be5\u6ce8\u89e3\u4fee\u9970\u7684\u7c7b\uff0c\u4ee3\u8868\u662f\u4e00\u4e2a\u914d\u7f6e\u7c7b\uff1b Import\uff0c\u5bfc\u5165\u5408\u5e76\u5176\u4ed6\u914d\u7f6e\u7c7b\uff0c\u7c7b\u4f3c\u4e8e\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 inculde \u6807\u7b7e */ @Configuration @Import(MyConfig2.class) public class MyConfig{ // \u6ce8\u518c\u4e00\u4e2abean, \u7b49\u540c\u4e8exml\u914d\u7f6e\uff0c\u65b9\u6cd5\u540d\u7b49\u4ef7\u4e8e bean id @Bean public User getUser{ return new User(); } } @Test public void test(){ // \u901a\u8fc7 AnnotationConfigApplicationContext \u83b7\u53d6\u4e0a\u4e0b\u6587 // \u901a\u8fc7\u914d\u7f6e\u7c7b\u7684\u5bf9\u8c61\u6765\u52a0\u8f7d ApplicationContext applicationContext = new AnnotationConfigApplicationContext(MyConfig.class); User user = (User)applicationContext.getBean(\"getUser\"); } IoC\u626b\u63cf\u5668 \u4e3a\u4e86\u907f\u514d\u624b\u52a8\u914d\u7f6e\u5927\u91cf\u7684bean\u5bf9\u8c61\uff0cSpring\u63d0\u4f9b\u4e86\u626b\u63cf\u5668\uff0c\u5bf9\u626b\u63cf\u5230\u7684bean\u5bf9\u8c61\u8fdb\u884c\u7edf\u4e00\u7ba1\u7406\uff0c\u7b80\u5316\u5f00\u53d1\u914d\u7f6e\u3002 \u5728\u9700\u8981\u5b9e\u4f8b\u5316\u7684JavaBean\u5bf9\u8c61\u7684\u7c7b\u5b9a\u4e49\u524d\u52a0\u4e0a\u6ce8\u89e3: Dao\u5c42: @Repository; Service\u5c42: @Service; Controller\u5c42: @Controller; \u666e\u901a\u5c42: @Component <!--\u8bbe\u7f6e\u626b\u63cf\u8303\u56f4--> <context:component-scan base-package=\"com.wh\" /> \u5bf9\u4e8e\u57fa\u672c\u7c7b\u578b\u6216\u8005String\u7c7b\u578b\u7684\u5c5e\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3\u6ce8\u5165\u503c // \u53ef\u4ee5\u4e0d\u7528\u63d0\u4f9bset\u65b9\u6cd5\uff0c\u76f4\u63a5\u5728\u76f4\u63a5\u540d\u4e0a\u6dfb\u52a0@value(\"\u503c\") @Component(\"user\") // \u76f8\u5f53\u4e8e\u914d\u7f6e\u6587\u4ef6\u4e2d <bean id=\"user\" class=\"\u5f53\u524d\u6ce8\u89e3\u7684\u7c7b\"/> public class User { @Value(\"wh\") // \u76f8\u5f53\u4e8e\u914d\u7f6e\u6587\u4ef6\u4e2d <property name=\"name\" value=\"wh\"/> public String name; // \u5982\u679c\u63d0\u4f9b\u4e86set\u65b9\u6cd5\uff0c\u5728set\u65b9\u6cd5\u4e0a\u6dfb\u52a0@value(\"\u503c\"); @Value(\"wh\") public void setName(String name) { this.name = name; } } Bean\u4f5c\u7528\u57df 1\u3001singleton\u4f5c\u7528\u57df \u5bb9\u5668\u4e2d\u9ed8\u8ba4\u60c5\u51b5\u662flazy-init=false, \u539f\u56e0\u662f\u53ef\u4ee5\u63d0\u524d\u53d1\u73b0\u914d\u7f6e\u95ee\u9898\uff1bBean\u5bf9\u8c61\u5728\u542f\u52a8\u65f6\u5c31\u4f1a\u88ab\u5b9e\u4f8b\u5316\u653e\u5165\u7f13\u5b58\u6c60\u4e2d\uff0c\u4f7f\u7528\u65f6\uff0c\u4e0d\u9700\u8981\u518d\u53bb\u5b9e\u4f8b\u5316\uff0c\u63d0\u9ad8\u6548\u7387\u3002 \u4ec0\u4e48\u7c7b\u578b\u5bf9\u8c61\u9002\u5408\u5355\u4f8b/\u4ec0\u4e48\u7c7b\u578b\u5bf9\u8c61\u9002\u5408\u4ea4\u7ed9IoC\u5b9e\u4f8b\u5316?: \u65e0\u72b6\u6001\u5bf9\u8c61 \uff0c\u5373\u4e0d\u5b58\u5728\u4f1a\u6539\u53d8\u5f53\u524d\u5bf9\u8c61\u72b6\u6001\u7684\u6210\u5458\u53d8\u91cf\uff0c\u5982Controller\u3001Dao\u3001Service\u5c42\u3002\u8fd9\u4e9b\u4e1a\u52a1\u5c42\u8003\u8651\u5230\u7ebf\u7a0b\u5b89\u5168\uff0c\u5176\u4e2d\u4e0d\u9700\u8981\u5305\u542b\u4f1a\u53d8\u5316\u7684\u5c5e\u6027\u503c\u6216\u8005\u8bf4\u4e0d\u9700\u8981\u5b9e\u4f8b\u53d8\u91cf\u7684\u5b58\u5728\uff0c\u5176\u4f9d\u8d56\u7684bean\u5bf9\u8c61\u90fd\u662f\u901a\u8fc7\u6ce8\u5165\u83b7\u53d6\u5230\u5b9e\u4f8b\u3002 2\u3001prototype\u4f5c\u7528\u57df 3\u3001Web\u5e94\u7528\u4e2d\u7684\u4f5c\u7528\u57df Bean\u751f\u547d\u5468\u671f \u5305\u62ecBean\u7684\u5b9a\u4e49\u3001\u521d\u59cb\u5316\u3001\u4f7f\u7528\u548c\u9500\u6bc14\u4e2a\u9636\u6bb5:","title":"IoC(Inverse of Control)"},{"location":"Java/5_Spring/#aop","text":"Aspect Oriented Programming: \u9762\u5411\u5207\u9762\u7f16\u7a0b \u901a\u8fc7\u4ee3\u7406\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5728\u6307\u5b9a\u4f4d\u7f6e\u6267\u884c\u5bf9\u5e94\u6d41\u7a0b\uff0c\u4ece\u800c\u5c06\u4e00\u4e9b\u6a2a\u5411\u529f\u80fd\u62bd\u79bb\u5f62\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u6a21\u5757\uff0c\u7136\u540e\u518d\u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u8fd9\u4e9b\u529f\u80fd\u3002","title":"AOP"},{"location":"Java/5_Spring/#_4","text":"\u4e3a\u67d0\u4e00\u4e2a\u5bf9\u8c61(\u59d4\u6258\u7c7b)\u63d0\u4f9b\u4e00\u4e2a\u4ee3\u7406(\u4ee3\u7406\u7c7b)\uff0c\u7528\u6765\u63a7\u5236\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u7684\u8bbf\u95ee\uff1b\u8981\u6c42\u59d4\u6258\u7c7b\u548c\u4ee3\u7406\u7c7b\u6709\u4e00\u4e2a\u5171\u540c\u7684\u7236\u7c7b\u6216\u7236\u63a5\u53e3\uff0c\u4ee3\u7406\u7c7b\u4f1a\u5bf9\u8bf7\u6c42\u505a\u9884\u5904\u7406\u3001\u8fc7\u6ee4\uff0c\u5c06\u8bf7\u6c42\u5206\u914d\u7ed9\u6307\u5b9a\u5bf9\u8c61\u3002 \u4ee3\u7406\u6a21\u5f0f\u7684\u4e24\u4e2a\u8bbe\u8ba1\u539f\u5219: 1\u3001\u4ee3\u7406\u7c7b\u4e0e\u59d4\u6258\u7c7b\u5177\u6709\u76f8\u4f3c\u7684\u884c\u4e3a(\u901a\u5e38\u662f\u5b9e\u73b0\u76f8\u540c\u7684\u63a5\u53e3)\uff1b2\u3001\u4ee3\u7406\u7c7b\u589e\u5f3a\u59d4\u6258\u7c7b\u7684\u884c\u4e3a\u3002 \u5e38\u89c1\u7684\u4ee3\u7406\u6a21\u5f0f:\u9759\u6001\u4ee3\u7406\u548c\u52a8\u6001\u4ee3\u7406\u3002 \u9759\u6001\u4ee3\u7406 \u4e3a\u67d0\u4e2a\u5bf9\u8c61(\u59d4\u6258\u7c7b\uff0c\u5373\u76ee\u6807\u5bf9\u8c61)\u63d0\u4f9b\u4e00\u4e2a\u4ee3\u7406\uff0c\u4ee5\u63a7\u5236\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u7684\u8bbf\u95ee\u3002\u4ee3\u7406\u7c7b\u548c\u59d4\u6258\u7c7b\u6709\u5171\u540c\u7684\u7236\u7c7b/\u7236\u63a5\u53e3\uff0c\u8fd9\u6837\u4efb\u4f55\u53ef\u4ee5\u4f7f\u7528\u59d4\u6258\u7c7b\u5bf9\u8c61\u7684\u5730\u65b9\u90fd\u53ef\u4ee5\u4f7f\u7528\u4ee3\u7406\u7c7b\u5bf9\u8c61\u3002\u4ee3\u7406\u7c7b\u8d1f\u8d23\u8bf7\u6c42\u7684\u9884\u5904\u7406\u3001\u8fc7\u6ee4\u3001\u5c06\u8bf7\u6c42\u5206\u914d\u7ed9\u59d4\u6258\u7c7b\u5904\u7406\uff0c\u4ee5\u53ca\u59d4\u6258\u7c7b\u6267\u884c\u5b8c\u8bf7\u6c42\u540e\u7684\u540e\u7eed\u5904\u7406\u3002 \u7279\u70b9 : \u4e00\u4e2a\u76ee\u6807\u5bf9\u8c61\u5bf9\u5e94\u4e00\u4e2a\u4ee3\u7406\u5bf9\u8c61\uff0c\u4ee3\u7406\u7c7b\u4e2d\u7684\u76ee\u6807\u5bf9\u8c61\u7c7b\u578b\u662f\u56fa\u5b9a\u7684(\u5728\u4ee3\u7406\u5bf9\u8c61\u6267\u884c\u65b9\u6cd5\u524d\u5c31\u5df2\u786e\u5b9a)\uff1b\u6574\u4f53\u5b9e\u73b0\u6bd4\u8f83\u7b80\u5355\uff0c\u5bb9\u6613\u7406\u89e3\u3002 \u7f3a\u70b9: \u5f53\u59d4\u6258\u7c7b\u589e\u52a0\uff0c\u4ee3\u7406\u7c7b\u53ef\u80fd\u9700\u8981\u6210\u500d\u589e\u52a0\uff0c\u4ee3\u7406\u7c7b\u6570\u91cf\u8fc7\u5ea6\uff1b\u5f53\u63a5\u53e3\u4e2d\u529f\u80fd\u589e\u52a0\u65f6\u6216\u8005\u4fee\u6539\u65f6\uff0c\u4f1a\u5f71\u54cd\u6240\u6709\u7684\u5b9e\u73b0\u7c7b\u3002 \u52a8\u6001\u4ee3\u7406 \u52a8\u6001\u4ee3\u7406\u7684\u6839\u636e\u5b9e\u73b0\u65b9\u5f0f\u7684\u4e0d\u540c\u53ef\u4ee5\u5206\u4e3a JDK \u52a8\u6001\u4ee3\u7406\u548c CGlib \u52a8\u6001\u4ee3\u7406\u3002 JDK \u52a8\u6001\u4ee3\u7406 \uff1a\u5229\u7528\u53cd\u5c04\u673a\u5236\u751f\u6210\u4e00\u4e2a\u5b9e\u73b0\u516c\u5171\u63a5\u53e3\u7684\u4ee3\u7406\u5bf9\u8c61\uff0c\u5728\u8c03\u7528\u5177\u4f53\u65b9\u6cd5\u524d\u8c03\u7528InvokeHandler\u6765\u5904\u7406\u3002 /** * jdk \u52a8\u6001\u4ee3\u7406\u7c7b * \u9700\u8981\u5b9e\u73b0 InvocationHandler */ public class jdkDynamicProxy implements InvocationHandler{ private Object target; //\u76ee\u6807\u5bf9\u8c61\u7c7b\u578b\u4e0d\u56fa\u5b9a // \u901a\u8fc7\u5e26\u53c2\u6784\u9020\u5668\u4f20\u5165\u76ee\u6807\u5bf9\u8c61 public jdkDynamicProxy(Object target) { this.target = target; } /** * public static Object newProxyInstance(ClassLoader loader, Class<?>[] interfaces, InvocationHandler h) * loader: \u4ee3\u7406\u7c7b\u7684\u7c7b\u52a0\u8f7d\u5668 * interfaces: \u4ee3\u7406\u7c7b/\u59d4\u6258\u7c7b \u9700\u8981\u5b9e\u73b0\u7684\u63a5\u53e3\u6570\u7ec4 * h:\u4e00\u4e2aInvocationHandler\u63a5\u53e3\uff0c\u8868\u793a\u4ee3\u7406\u5b9e\u4f8b\u7684\u8c03\u7528\u5904\u7406\u7a0b\u5e8f\u7684\u63a5\u53e3\uff0c\u6bcf\u4e2a\u4ee3\u7406\u5b9e\u4f8b\u90fd\u5177\u6709\u4e00\u4e2a * \u5173\u8054\u7684\u8c03\u7528\u5904\u7406\u7a0b\u5e8f. \u901a\u8fc7\u4ee3\u7406\u5b9e\u4f8b\u8c03\u7528\u76ee\u6807\u5bf9\u8c61\u7684\u65b9\u6cd5\u65f6\uff0c\u5c06\u5bf9\u65b9\u6cd5\u8c03\u7528\u8fdb\u884c\u7f16\u7801\uff0c\u5e76\u5c06\u5176\u6307\u6d3e\u5230 * \u8be5\u4ee3\u7406\u5b9e\u4f8b\u7684\u8c03\u7528\u5904\u7406\u7a0b\u5e8f\u7684 invoke \u65b9\u6cd5 * @return object: \u4ee3\u7406\u5b9e\u4f8b\uff0c \u5177\u6709\u4e00\u4e2a invocation handler, * \u8be5\u4ee3\u7406\u5b9e\u4f8b\u6240\u5c5e\u7684\u7c7b\u5b9e\u73b0\u4e86\u4f20\u5165\u7684\u63a5\u53e3\u6570\u7ec4\uff0c\u7531\u4f20\u5165\u7684\u7279\u5b9a\u7c7b\u52a0\u8f7d\u5668\u6765\u5b9a\u4e49 */ public Object getProxy(){ Object object = Proxy.newProxyInstance(this.getClass().getClassLoader(), target.getClass().getInterfaces(), this ); return object; } /** * * @param proxy \u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u4ee3\u7406\u5b9e\u4f8b, getProxy\u8fd4\u56de\u7684\u4ee3\u7406\u5bf9\u8c61 * @param method \u76ee\u6807\u5bf9\u8c61\u7684\u65b9\u6cd5 * @param args \u76ee\u6807\u65b9\u6cd5\u6240\u9700\u7684\u53c2\u6570 * @return * @throws Throwable */ @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable { before(); Object object = method.invoke(target); after(); return object; } public void before(){ System.out.println(\"before\"); } public void after(){ System.out.println(\"after\"); } } CGlib \u52a8\u6001\u4ee3\u7406 \uff1a\u9488\u5bf9\u7c7b\u5b9e\u73b0\u4ee3\u7406\uff0c\u5bf9\u59d4\u6258\u7c7b\u751f\u6210\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5e76\u8986\u76d6\u5176\u4e2d\u7684\u65b9\u6cd5\u5b9e\u73b0\u589e\u5f3a\u3002 <!--\u6dfb\u52a0cglib\u4f9d\u8d56 --> <dependency> <groupId>cglib</groupId> <artifactId>cglib</artifactId> <version>2.2.2</version> </dependency> /** * \u65b9\u6cd5\u62e6\u622a\u5668 */ public class CglibDynamicProxy implements net.sf.cglib.proxy.MethodInterceptor { /** * \u62e6\u622a\u5668 * * @param o cglib\u751f\u6210\u7684\u4ee3\u7406\u5b9e\u4f8b * @param method \u76ee\u6807\u7c7b\u4e2d\u88ab\u4ee3\u7406\u7684\u65b9\u6cd5\u7684\u5f15\u7528 * @param objects \u53c2\u6570\u5217\u8868 * @param methodProxy \u751f\u6210\u7684\u4ee3\u7406\u7c7b\u5bf9\u65b9\u6cd5\u7684\u4ee3\u7406\u5f15\u7528 * @return * @throws Throwable */ @Override public Object intercept(Object o, Method method, Object[] objects, MethodProxy methodProxy) throws Throwable { before(); // \u8c03\u7528\u76ee\u6807\u7c7b\u4e2d\u7684\u65b9\u6cd5 Object object = methodProxy.invoke(target, objects); after(); return object; } public Object target; public CglibDynamicProxy(Object target) { this.target = target; } public Object getProxy(){ // \u901a\u8fc7enhancer\u7684create()\u65b9\u6cd5\u751f\u6210\u4e00\u4e2a\u7c7b\uff0c\u7528\u4e8e\u751f\u6210\u4ee3\u7406\u5bf9\u8c61\u3002 Enhancer enhancer = new Enhancer(); // \u5c06\u76ee\u6807\u7c7b\u8bbe\u4e3a\u4ee3\u7406\u7c7b\u7684\u7236\u7c7b enhancer.setSuperclass(target.getClass()); // \u8bbe\u7f6e\u62e6\u622a\u5668\uff0c \u56de\u8c03\u5bf9\u8c61\u4e3a\u672c\u8eab enhancer.setCallback(this); // \u8fd4\u56de\u4ee3\u7406\u5bf9\u8c61 return enhancer.create(); } private void before(){ System.out.println(\"before\"); } private void after(){ System.out.println(\"after\"); } } \u533a\u522b \uff1aJDK\u4ee3\u7406\u53ea\u80fd\u5bf9\u5b9e\u73b0\u63a5\u53e3\u7684\u7c7b\u751f\u6210\u4ee3\u7406(\u4ee3\u7406\u7c7b\u548c\u59d4\u6258\u7c7b\u9700\u8981\u5b9e\u73b0\u5171\u540c\u7684\u63a5\u53e3)\uff1b CGlib\u662f\u9488\u5bf9\u7c7b\u5b9e\u73b0\u4ee3\u7406\uff0c\u5bf9\u59d4\u6258\u7c7b\u751f\u6210\u4e00\u4e2a\u5b50\u7c7b\uff0c\u5e76\u8986\u76d6\u5176\u4e2d\u7684\u65b9\u6cd5\u5b9e\u73b0\u589e\u5f3a\uff1b\u4f46\u7531\u4e8e\u91c7\u7528\u7ee7\u627f\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4e0d\u80fd\u4ee3\u7406final\u4fee\u9970\u7684\u7c7b\u3002 \u52a8\u6001\u4ee3\u7406\u7279\u70b9 : \u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u52a8\u6001\u521b\u5efa\u76ee\u6807\u5bf9\u8c61\uff0c\u901a\u8fc7\u5e26\u53c2\u6784\u9020\u5668\u4f20\u9012\u7ed9\u4ee3\u7406\u5bf9\u8c61, \u5373\u4ee3\u7406\u7c7b\u4e2d\u7684\u76ee\u6807\u5bf9\u8c61\u7c7b\u578b\u4e0d\u56fa\u5b9a\uff0c\u8fd0\u884c\u65f6\u901a\u8fc7\u53cd\u5c04\u786e\u5b9a\u5b9e\u9645\u76ee\u6807\u5bf9\u8c61\u7684\u7c7b\u578b\u3002","title":"\u4ee3\u7406\u6a21\u5f0f"},{"location":"Java/5_Spring/#aop_1","text":"AOP\u7528\u5904 AOP\u4e3b\u8981\u5e94\u7528\u4e8e\u65e5\u5fd7\u8bb0\u5f55\u3001\u6027\u80fd\u7edf\u8ba1\u3001\u5b89\u5168\u63a7\u5236\u3001\u4e8b\u7269\u5904\u7406\u7b49\u65b9\u9762\uff0c\u5b9e\u73b0\u516c\u5171\u529f\u80fd\u6027\u7684\u91cd\u590d\u4f7f\u7528\u3002 \u7279\u70b9 1\u3001\u964d\u4f4e\u6a21\u5757\u4e4b\u95f4\u7684\u8026\u5408\u5ea6\uff0c\u63d0\u4f9b\u4e1a\u52a1\u4ee3\u7801\u7684\u805a\u5408\u5ea6\uff1b 2\u3001\u63d0\u9ad8\u4ee3\u7801\u590d\u7528\u6027\uff1b 3\u3001\u63d0\u4f9b\u7cfb\u7edf\u6269\u5c55\u6027\uff1b 4\u3001\u53ef\u4ee5\u5728\u4e0d\u5f71\u54cd\u539f\u6709\u529f\u80fd\u57fa\u7840\u4e0a\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\u3002 \u5b9e\u73b0 \u53ef\u4ee5\u91c7\u7528xml\u914d\u7f6e\u6216\u8005\u6ce8\u89e3\u5b9e\u73b0\uff0c\u5e95\u5c42\u5b9e\u73b0\u662f\u57fa\u4e8e\u52a8\u6001\u4ee3\u7406(JDK + CGLIB) <!--\u914d\u7f6eaop, \u9700\u8981\u5728beans\u4e2d\u5f15\u5165 aop \u7684 \u89c4\u8303--> <aop:config> <!--\u5207\u9762--> <aop:aspect ref=\"logCut02\"> <!--\u5207\u5165\u70b9--> <aop:pointcut id=\"cut\" expression=\"execution(* com.wh.service.*.*(..))\"/> <!--\u914d\u7f6e\u901a\u77e5, \u8bbe\u7f6e\u5bf9\u5e94\u65b9\u6cd5\u540d\u548c\u5207\u5165\u70b9--> <aop:before method=\"before\" pointcut-ref=\"cut\"/> <aop:after method=\"after\" pointcut-ref=\"cut\"/> <aop:after-returning method=\"afterReturn\" pointcut-ref=\"cut\"/> <aop:after-throwing method=\"afterThrow\" pointcut-ref=\"cut\" throwing=\"e\"/> <aop:around method=\"around\" pointcut-ref=\"cut\"/> </aop:aspect> </aop:config> /** * \u5207\u9762: \u5207\u5165\u70b9\u548c\u901a\u77e5\u7684\u62bd\u8c61 * \u5207\u5165\u70b9:\u5b9a\u4e49\u8981\u62e6\u622a\u54ea\u4e9b\u7c7b\u7684\u54ea\u4e9b\u65b9\u6cd5 * \u901a\u77e5: \u5b9a\u4e49\u62e6\u622a\u4e4b\u540e\u65b9\u6cd5\u8981\u505a\u4ec0\u4e48 */ @Component // \u5c06\u5bf9\u8c61\u4ea4\u7ed9IOC\u5bb9\u5668\u5b9e\u4f8b\u5316 @Aspect //\u58f0\u660e\u5f53\u524d\u7c7b\u662f\u4e00\u4e2a\u5207\u9762 public class LogCut { /** * \u5207\u5165\u70b9: \u5339\u914d\u89c4\u5219 * @Pointcut(\"\u5339\u914d\u89c4\u5219\")\uff0c \u6839\u636e\u89c4\u5219\u9009\u62e9\u65b9\u6cd5\u662f\u5426\u88ab\u62e6\u622a * \u5e38\u89c1\u5339\u914d\u89c4\u5219: \"execution(* *(..))\" * 1\u3001\u8fd9\u91cc\u7684\u7b2c\u4e00\u4e2a * \u8868\u793a\u6240\u6709\u65b9\u6cd5\u4fee\u9970\u8303\u56f4\uff0c\u53ef\u4ee5\u6307\u5b9a\u662fpublic,protected,private * \u5982\"execution(public *...))\" * \"*.(..)\" \u8868\u793a\u4efb\u610f\u5305\u4e0b\u7684\u4efb\u610f\u65b9\u6cd5, .. \u6307\u4ee3\u53c2\u6570 * 2\u3001\u53ef\u4ee5\u6307\u5b9a\u67d0\u4e2a\u5305\u4e0b\u7684\u65b9\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u65b9\u6cd5\u7c7b\u578b\uff0c\u5982setter\u6216getter\u65b9\u6cd5 * \u5982 \"execution(* com.wh.service.*.*(..))\", * \"execution(* set*(..))\" * 3\u3001\u5982\u679c\u60f3\u62e6\u622a\u67d0\u4e2a\u5305\u53ca\u5176\u5b50\u5305\u4e2d\u7684\u65b9\u6cd5\uff0c * \"execution(* com.wh.service..*.*(..))\", \u4e0e\u4e0a\u9762\u76f8\u6bd4, \u591a\u4e86\u4e00\u4e2a . * */ @Pointcut(\"execution(* com.wh.service.*.*(..))\") public void cut(){ } /** * \u58f0\u660e\u524d\u7f6e\u901a\u77e5\uff0c\u5e76\u63d2\u5165\u5230\u5207\u5165\u70b9(\u901a\u8fc7value\u6307\u5b9a) * \u76ee\u6807\u7c7b\u65b9\u6cd5\u6307\u5411\u524d\uff0c\u6307\u5411\u524d\u7f6e\u901a\u77e5 * */ @Before(value = \"cut()\") public void before(){ System.out.println(\"\u524d\u7f6e\u901a\u77e5\"); } /** * \u58f0\u660e\u8fd4\u56de\u901a\u77e5\uff0c\u76ee\u6807\u7c7b\u7684\u65b9\u6cd5\u5728\u65e0\u5f02\u5e38\u8fd4\u56de\u65f6\uff0c\u6267\u884c\u8be5\u540c\u5fd7 */ @AfterReturning(value = \"cut()\") public void afterReturn(){ System.out.println(\"\u8fd4\u56de\u901a\u77e5\"); } /** * \u58f0\u660e\u6700\u7ec8\u901a\u77e5\uff0c \u65e0\u8bba\u662f\u5426\u53d1\u751f\u5f02\u5e38\uff0c\u90fd\u4f1a\u6267\u884c\u8be5\u901a\u77e5 */ @After(value = \"cut()\") public void after(){ System.out.println(\"\u6700\u7ec8\u901a\u77e5\"); } /** * \u58f0\u660e\u5f02\u5e38\u901a\u77e5\uff0c\u76ee\u6807\u7c7b\u65b9\u6cd5\u6267\u884c\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u6267\u884c\u8be5\u901a\u77e5 */ @AfterThrowing(value = \"cut()\", throwing = \"e\") public void afterThrow(Exception e){ System.out.println(\"\u5f02\u5e38\u901a\u77e5:\"+e.getMessage()); } /** * \u58f0\u660e\u73af\u7ed5\u901a\u77e5\uff0c\u76ee\u6807\u7c7b\u65b9\u6cd5\u6267\u884c\u524d\u540e\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u73af\u7ed5\u901a\u77e5\u5b9a\u4e49\u54cd\u5e94\u7684\u5904\u7406\uff0c\u76f8\u5f53\u4e8e\u540c\u65f6\u5b9e\u73b0\u4e86 * \u4e0a\u8ff0\u56db\u79cd\u901a\u77e5 * \u9700\u8981\u901a\u8fc7\u663e\u793a\u8c03\u7528\u65b9\u6cd5(point.proceed())\uff0c\u5426\u5219\u65e0\u6cd5\u8bbf\u95ee\u6307\u5b9a\u65b9\u6cd5 * @param point * @return */ @Around(value = \"cut()\") public Object around(ProceedingJoinPoint point){ System.out.println(\"\u73af\u7ed5\u901a\u77e5-before\"); Object object=null; try{ // \u663e\u793a\u8c03\u7528\u5bf9\u5e94\u65b9\u6cd5 System.out.println(\"\u901a\u8fc7\u6ce8\u89e3\u914d\u7f6e\u73af\u7ed5\u901a\u77e5\"); object = point.proceed(); System.out.println(\"target:\"+point.getTarget()); System.out.println(\"\u73af\u7ed5\u901a\u77e5-afterReturn\"); }catch (Throwable throwable){ throwable.printStackTrace(); System.out.println(\"\u73af\u7ed5\u901a\u77e5-afterThrowing\"); }finally { System.out.println(\"\u73af\u7ed5\u901a\u77e5-after\"); } return object; } } \u57fa\u672c\u6982\u5ff5","title":"AOP"},{"location":"Java/5_Spring/#spring-task","text":"\u5b9a\u65f6\u4efb\u52a1 \u57fa\u4e8exml\u914d\u7f6e <!--\u914d\u7f6e\u5b9a\u65f6\u4efb\u52a1--> <task:scheduled-tasks> <task:scheduled ref=\"taskJob\" method=\"job1\" cron=\"0/2 * * * * ?\"/> <task:scheduled ref=\"taskJob\" method=\"job2\" cron=\"0/5 * * * * ?\"/> </task:scheduled-tasks> \u57fa\u4e8e\u6ce8\u89e3 <!--\u914d\u7f6e\u5b9a\u65f6\u4efb\u52a1\u9a71\u52a8\uff0cspring\u624d\u80fd\u8bc6\u522bscheduled\u6ce8\u89e3--> <task:annotation-driven/> @Scheduled(cron = \"0/2 * * * * ?\") public void job1(){ System.out.println(\"TaskJob2 job1...\"+simpleDateFormat.format(new Date())); } cron expression cron\u8868\u8fbe\u5f0f\u81f3\u5c11\u67096\u4e2a\u7531\u7a7a\u683c\u5206\u9694\u5f97\u65f6\u95f4\u5143\u7d20\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u662f \u79d2\u3001\u5206\u949f\u3001\u5c0f\u65f6(0~23)\u3001\u65e5\u671f\u3001\u6708\u4efd\u3001\u661f\u671f\u4e2d\u7684\u65e5\u671f(SUN-SAT)\u3001\u5e74\u4efd(1970~2099) <!-- \u540c\u4e00\u4e2a\u65f6\u95f4\u5143\u7d20\uff0c\u901a\u8fc7 , \u5206\u9694 --> <!-- \u8868\u793a\u6bcf\u592910\u70b9\u300114\u70b9\u300116\u70b9\u6267\u884c\u4efb\u52a1\uff0c*\u8868\u793a\u4efb\u610f\uff0c? \u8868\u793a\u4e0d\u786e\u5b9a --> 0 0 10,14,16 * * ? <!--\u8868\u793a\u6bcf\u6708\u524d10\u5929\uff0c\u6bcf\u969415\u5206\u949f\u6267\u884c\u4efb\u52a1\uff0c 1-10\u8868\u793a1\u523010\u53f7--> 0 0 15,30,45 * 1-10 * ?","title":"Spring Task"},{"location":"Java/5_Spring/#mybatis","text":"\u6301\u4e45\u5c42\u6846\u67b6\uff0c\u6240\u8c13\u6301\u4e45\u5316\u662f\u5c06\u7a0b\u5e8f\u6570\u636e\u5728\u6301\u4e45\u72b6\u6001\u548c\u77ac\u65f6\u72b6\u6001\u95f4\u8f6c\u6362\u7684\u673a\u5236\u3002\u901a\u4fd7\u7684\u8bb2\uff0c\u5c31\u662f\u77ac\u65f6\u6570\u636e\uff08\u6bd4\u5982\u5185\u5b58\u4e2d\u7684\u6570\u636e\uff0c\u662f\u4e0d\u80fd\u6c38\u4e45\u4fdd\u5b58\u7684\uff09\u6301\u4e45\u5316\u4e3a\u6301\u4e45\u6570\u636e\uff08\u6bd4\u5982\u6301\u4e45\u5316\u81f3\u6570\u636e\u5e93\u4e2d\uff0c\u80fd\u591f\u957f\u4e45\u4fdd\u5b58\uff09","title":"MyBatis"},{"location":"Java/5_Spring/#_5","text":"<!-- mybatis-config.xml --> <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE configuration PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-config.dtd\"> <configuration> <environments default=\"development\"> <environment id=\"development\"> <transactionManager type=\"JDBC\"/> <dataSource type=\"POOLED\"> <property name=\"driver\" value=\"com.mysql.jdbc.Driver\"/> <property name=\"url\" value=\"jdbc:mysql://localhost:3306/how2java?useSSL=true&amp; useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC\"/> <property name=\"username\" value=\"root\"/> <property name=\"password\" value=\"admin\"/> </dataSource> </environment> </environments> <mappers> <mapper resource=\"com/wh/dao/UserMapper.xml\"/> </mappers> </configuration> <!-- UserMapper.xml --> <?xml version=\"1.0\" encoding=\"UTF-8\" ?> <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <!--namespace \u7ed1\u5b9a\u5bf9\u5e94\u7684\u63a5\u53e3--> <mapper namespace=\"com.wh.dao.UserMapper\"> <!-- id: \u5bf9\u5e94\u65b9\u6cd5\u540d resultType: \u67e5\u8be2\u8fd4\u56de\u503c\u7c7b\u578b parameterType: \u53c2\u6570\u7c7b\u578b\uff0c \u83b7\u53d6\u53c2\u6570: \u901a\u8fc7 #{param_name}\u53d6\u5f97\u53c2\u6570\u503c, \u9002\u7528\u4e8e\u8f83\u5c11\u53c2\u6570\uff1b \u6b64\u5916\u53ef\u4ee5\u5728\u65b9\u6cd5\u4e2d\u4e3a\u53c2\u6570\u6dfb\u52a0 @param(new_name) \u6ce8\u89e3\uff0c \u5219\u6b64\u65f6 \u9700\u8981\u901a\u8fc7 #{new_name}\u53d6\u5f97\u53c2\u6570\u503c \u901a\u8fc7 #{obj_attribute}\u83b7\u53d6\u5bf9\u8c61\u5c5e\u6027 \u901a\u8fc7 #{map_key} \u83b7\u53d6map \u952e\u503c\u5bf9\u7684 value, \u9002\u7528\u4e8e\u591a\u4e2a\u53c2\u6570 \u8003\u8651\u5230\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5305\u542b\u592a\u591a\u5b57\u6bb5\u7684pojo\u5bf9\u8c61\uff0c\u6765\u4ec5\u4ec5\u4fee\u6539\u5f88\u5c11\u7684\u5b57\u6bb5, \u91c7\u7528hashmap, \u66f4\u4e3a\u9002\u5408\uff0c\u6b64\u65f6parameterType\u7c7b\u578b\u4e3a map. --> <!--\u7ed3\u679c\u96c6\u6620\u5c04\uff0c \u89e3\u51b3\u6570\u636e\u5e93\u5217\u540d\u548cPOJO\u5bf9\u8c61\u7684\u5c5e\u6027\u540d\u4e0d\u4e00\u81f4 sql\u8bed\u53e5\u4e2d\u7684resultType\u6362\u7528resultMap, \u6307\u5411\u5bf9\u5e94\u7684resultMap id; \u5bf9\u4e8e \u591a\u5bf9\u4e00 \u6216\u8005 \u4e00\u5bf9\u591a \u7b49sql\u67e5\u8be2\u8fd4\u56de\u7ed3\u679c\uff0c\u5176\u8fd4\u56de\u7c7b\u578b\u4e0d\u662f\u7b80\u5355\u7684 java bean\u5bf9\u8c61\u7c7b\u578b\uff0c \u4e5f\u9700\u8981\u901a\u8fc7reseultMap\u8fdb\u884c\u6620\u5c04 --> <!--<resultMap id=\"UserMap\" type=\"User\">--> <!--\u5c06\u5c5e\u6027\u6620\u5c04\u5230\u5bf9\u5e94\u7684\u5217, \u4ec5\u9700\u8981\u6784\u5efa\u540d\u79f0\u4e0d\u4e00\u81f4\u7684\u6620\u5c04\u5173\u7cfb--> <!--<result property=\"password\" column=\"other_\"/>--> <!--</resultMap>--> <select id=\"getUserList\" resultType=\"com.wh.pojo.User\" > select * from how2java.users </select> <select id=\"getUserById\" resultType=\"com.wh.pojo.User\" parameterType=\"int\"> SELECT * FROM how2java.users WHERE id=#{id} </select> <!--\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u53ef\u4ee5\u76f4\u63a5\u53d6\u5f97--> <insert id=\"addUser\" parameterType=\"com.wh.pojo.User\" > insert into how2java.users (id, name, password) values (#{id}, #{name},#{password}); </insert> <update id=\"updateUser\" parameterType=\"com.wh.pojo.User\"> update how2java.users set name=#{name}, password=#{password} where id=#{id}; </update> <update id=\"updateUserPWD\" parameterType=\"com.wh.pojo.User\"> update how2java.users set password=#{pwd} where id=#{userid}; </update> <delete id=\"deleteUser\" parameterType=\"int\"> DELETE FROM how2java.users WHERE id=#{id} </delete> </mapper> public interface UserMapper { // \u67e5\u8be2\u6240\u6709\u7528\u6237 public List<User> getUserList(); // \u6839\u636eID\u67e5\u8be2 public User getUserById(int id); // \u589e\u52a0\u7528\u6237 public int addUser(User user); // \u4fee\u6539\u7528\u6237 public int updateUser(User user); public int updateUserPWD(Map<String, Object> map); // \u5220\u9664\u7528\u6237 public int deleteUser(int id); } /** \u5de5\u5177\u7c7b\uff0c\u7528\u4e8e \u83b7\u53d6 SqlSession \u5bf9\u8c61 */ public class MybatisUtils { private static SqlSessionFactory sqlSessionFactory; static { try { String resource = \"mybatis-config.xml\"; InputStream inputStream = Resources.getResourceAsStream(resource); sqlSessionFactory = new SqlSessionFactoryBuilder().build(inputStream); }catch (IOException e){ e.printStackTrace(); } } public static SqlSession getSqlSession(){ return sqlSessionFactory.openSession(); } } public class UserDaoTest { @Test public void test(){ try(SqlSession sqlSession = MybatisUtils.getSqlSession()){ UserMapper userMapper = sqlSession.getMapper(UserMapper.class); // \u83b7\u53d6\u5168\u90e8\u7528\u6237\u4fe1\u606f List<User> userList = userMapper.getUserList(); userList.forEach(System.out::println); // \u6839\u636eid\u83b7\u53d6\u7528\u6237 System.out.println(userMapper.getUserById(2)); /** * \u589e\u5220\u6539 \u9700\u8981\u63d0\u4ea4\u4e8b\u52a1\u540e\uff0c\u6570\u636e\u624d\u80fd\u5199\u5165\u6570\u636e\u5e93\u4e2d\uff0c\u83b7\u53d6 SqlSession\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u4e3a * openSession \u63d0\u4f9b\u4e00\u4e2a boolean\u53c2\u6570\uff0c \u8868\u793a\u662f\u5426\u5f00\u542f autoCommit */ // \u6dfb\u52a0\u7528\u6237 System.out.println(userMapper.addUser(new User(\"dio\", \"ssm\"))); // \u4fee\u6539\u7528\u6237 System.out.println(userMapper.updateUser(new User(5,\"ss\",\"\u5bc6\u7801\"))); // Map\u4f5c\u4e3a\u53c2\u6570\uff0c\u901a\u8fc7key\u53d6\u503c\uff0c\u53ef\u4ee5\u907f\u514d\u6784\u9020pojo\u5bf9\u8c61\u5b9e\u4f8b Map<String, Object> map = new HashMap<>(); map.put(\"pwd\", \"newpwd\"); map.put(\"userid\", 8); System.out.println(userMapper.updateUserPWD(map)); // \u5220\u9664\u7528\u6237 System.out.println(userMapper.deleteUser(9)); // \u63d0\u4ea4\u4e8b\u52a1 sqlSession.commit(); }catch (Exception e){ e.printStackTrace(); } } } \u591a\u5bf9\u4e00\u548c\u4e00\u5bf9\u591a <!-- \u591a\u5bf9\u4e00 --> <mapper namespace=\"com.wh.dao.StudentMapper\"> <!--\u5b9e\u73b0\u65f6\uff0c\u6839\u636e\u67e5\u8be2\u51fa\u7684\u5b66\u751f\u7684tid, \u518d\u53bb\u67e5\u8be2\u5bf9\u5e94\u8001\u5e08\uff0c \u76f8\u5f53\u4e8e\u5b50\u67e5\u8be2--> <resultMap id=\"StudentTeacher\" type=\"student\"> <result property=\"id\" column=\"id\"/> <result property=\"name\" column=\"name\"/> <!-- \u57fa\u672c\u7c7b\u578b\u6620\u5c04\u6216\u8005String\uff0c\u4f7f\u7528result; \u5bf9\u8c61\u7c7b\u578b\u6620\u5c04\uff0c\u4f7f\u7528association; \u96c6\u5408\u7c7b\u578b\uff0c\u4f7f\u7528collection javaType or ofType: javaType \u6307\u5b9a POJO\u7c7b\u4e2d\u5c5e\u6027\u7684\u7c7b\u578b ofType \u5982\u679c\u8be5\u5c5e\u6027\u5c5e\u4e8e\u96c6\u5408\u7c7b\u578b\uff0c ofType\u6307\u5b9a\u4e86\u5143\u7d20\u7c7b\u578b --> <association property=\"teacher\" column=\"tid\" javaType=\"Teacher\" select=\"getTeacher\"/> </resultMap> <select id=\"getStudentList\" resultMap=\"StudentTeacher\"> SELECT * from how2java.student; </select> <!-- #{id} \u4e2d\u7684 'id' \u540d\u79f0\u5e76\u672a\u6307\u5b9a\u7684\uff0c\u800c\u662f\u7531MyBatis\u81ea\u884c\u63a8\u65ad\u7684\uff0c \u8fd9\u91cc\u5373\u4f7f\u8bbe\u5b9a\u4e3a\u5176\u4ed6\u503c\uff0c\u4efb\u7136\u80fd\u8fd0\u884c--> <select id=\"getTeacher\" resultType=\"Teacher\"> SELECT * FROM how2java.teacher WHERE id=#{id} </select> <!-- ================================================================== --> <!--\u5b9e\u73b0\u65f6\uff0c\u901a\u8fc7\u8868\u7684\u8054\u7ed3, \u6309\u7167\u7ed3\u679c\u8fdb\u884c\u5d4c\u5957\u5904\u7406--> <select id=\"getStudentList2\" resultMap=\"StudentTeacher2\"> SELECT S.id as sid, S.name as sname, T.id as tid, T.name as tname FROM student S INNER JOIN teacher T ON S.tid = T.id </select> <resultMap id=\"StudentTeacher2\" type=\"student\"> <result property=\"id\" column=\"sid\"/> <result property=\"name\" column=\"sname\"/> <association property=\"teacher\" javaType=\"teacher\"> <result property=\"id\" column=\"tid\"/> <result property=\"name\" column=\"tname\"/> </association> </resultMap> </mapper> <!-- \u4e00\u5bf9\u591a --> <mapper namespace=\"com.wh.dao.TeacherMapper\"> <!-- \u83b7\u53d6\u6240\u6709\u8001\u5e08\u4fe1\u606f\uff0c Teacher\u7c7b\u4e2d\u5305\u542b \u4e00\u4e2a List<Student> student\u5c5e\u6027 --> <select id=\"getTeacherList\" resultMap=\"TS\"> SELECT T.id as tid, T.name as tname, S.name as sname FROM teacher as T INNER JOIN student AS S ON T.id = S.tid; </select> <!-- \u6839\u636e id \u83b7\u53d6\u6307\u5b9a\u8001\u5e08\u4fe1\u606f --> <select id=\"getTeacher\" resultMap=\"TS\"> SELECT T.id as tid, T.name as tname, S.name as sname FROM teacher as T, student AS S WHERE T.id = #{tid} </select> <resultMap id=\"TS\" type=\"teacher\"> <result property=\"id\" column=\"tid\"/> <result property=\"name\" column=\"tname\"/> <collection property=\"students\" ofType=\"student\"> <result property=\"name\" column=\"sname\"/> </collection> </resultMap> </mapper> \u4f5c\u7528\u57df\u548c\u751f\u547d\u5468\u671f SqlSessionFactoryBuilder \u8fd9\u4e2a\u7c7b\u53ef\u4ee5\u88ab\u5b9e\u4f8b\u5316\u3001\u4f7f\u7528\u548c\u4e22\u5f03\uff0c\u4e00\u65e6\u521b\u5efa\u4e86 SqlSessionFactory\uff0c\u5c31\u4e0d\u518d\u9700\u8981\u5b83\u4e86\u3002 \u56e0\u6b64 SqlSessionFactoryBuilder \u5b9e\u4f8b\u7684\u6700\u4f73\u4f5c\u7528\u57df\u662f\u65b9\u6cd5\u4f5c\u7528\u57df\uff08\u4e5f\u5c31\u662f\u5c40\u90e8\u65b9\u6cd5\u53d8\u91cf\uff09\u3002 \u4f60\u53ef\u4ee5\u91cd\u7528 SqlSessionFactoryBuilder \u6765\u521b\u5efa\u591a\u4e2a SqlSessionFactory \u5b9e\u4f8b\uff0c\u4f46\u6700\u597d\u8fd8\u662f\u4e0d\u8981\u4e00\u76f4\u4fdd\u7559\u7740\u5b83\uff0c\u4ee5\u4fdd\u8bc1\u6240\u6709\u7684 XML \u89e3\u6790\u8d44\u6e90\u53ef\u4ee5\u88ab\u91ca\u653e\u7ed9\u66f4\u91cd\u8981\u7684\u4e8b\u60c5\u3002 SqlSessionFactory \u4e00\u65e6\u88ab\u521b\u5efa\u5c31\u5e94\u8be5\u5728\u5e94\u7528\u7684\u8fd0\u884c\u671f\u95f4\u4e00\u76f4\u5b58\u5728\uff0c\u6ca1\u6709\u4efb\u4f55\u7406\u7531\u4e22\u5f03\u5b83\u6216\u91cd\u65b0\u521b\u5efa\u53e6\u4e00\u4e2a\u5b9e\u4f8b\u3002 \u4f7f\u7528 SqlSessionFactory \u7684\u6700\u4f73\u5b9e\u8df5\u662f\u5728\u5e94\u7528\u8fd0\u884c\u671f\u95f4\u4e0d\u8981\u91cd\u590d\u521b\u5efa\u591a\u6b21\uff0c\u591a\u6b21\u91cd\u5efa SqlSessionFactory \u88ab\u89c6\u4e3a\u4e00\u79cd\u4ee3\u7801\u201c\u574f\u4e60\u60ef\u201d\u3002\u56e0\u6b64 SqlSessionFactory \u7684\u6700\u4f73\u4f5c\u7528\u57df\u662f\u5e94\u7528\u4f5c\u7528\u57df\u3002 \u6709\u5f88\u591a\u65b9\u6cd5\u53ef\u4ee5\u505a\u5230\uff0c\u6700\u7b80\u5355\u7684\u5c31\u662f\u4f7f\u7528\u5355\u4f8b\u6a21\u5f0f\u6216\u8005\u9759\u6001\u5355\u4f8b\u6a21\u5f0f\u3002 SqlSession \u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u5e94\u8be5\u6709\u5b83\u81ea\u5df1\u7684 SqlSession \u5b9e\u4f8b\u3002SqlSession \u7684\u5b9e\u4f8b\u4e0d\u662f\u7ebf\u7a0b\u5b89\u5168\u7684\uff0c\u56e0\u6b64\u662f\u4e0d\u80fd\u88ab\u5171\u4eab\u7684\uff0c\u6240\u4ee5\u5b83\u7684\u6700\u4f73\u7684\u4f5c\u7528\u57df\u662f\u8bf7\u6c42\u6216\u65b9\u6cd5\u4f5c\u7528\u57df\u3002 \u7edd\u5bf9\u4e0d\u80fd\u5c06 SqlSession \u5b9e\u4f8b\u7684\u5f15\u7528\u653e\u5728\u4e00\u4e2a\u7c7b\u7684\u9759\u6001\u57df\uff0c\u751a\u81f3\u4e00\u4e2a\u7c7b\u7684\u5b9e\u4f8b\u53d8\u91cf\u4e5f\u4e0d\u884c\u3002 \u4e5f\u7edd\u4e0d\u80fd\u5c06 SqlSession \u5b9e\u4f8b\u7684\u5f15\u7528\u653e\u5728\u4efb\u4f55\u7c7b\u578b\u7684\u6258\u7ba1\u4f5c\u7528\u57df\u4e2d\uff0c\u6bd4\u5982 Servlet \u6846\u67b6\u4e2d\u7684 HttpSession\u3002 \u5982\u679c\u4f60\u73b0\u5728\u6b63\u5728\u4f7f\u7528\u4e00\u79cd Web \u6846\u67b6\uff0c\u8003\u8651\u5c06 SqlSession \u653e\u5728\u4e00\u4e2a\u548c HTTP \u8bf7\u6c42\u76f8\u4f3c\u7684\u4f5c\u7528\u57df\u4e2d\u3002 \u6362\u53e5\u8bdd\u8bf4\uff0c\u6bcf\u6b21\u6536\u5230 HTTP \u8bf7\u6c42\uff0c\u5c31\u53ef\u4ee5\u6253\u5f00\u4e00\u4e2a SqlSession\uff0c\u8fd4\u56de\u4e00\u4e2a\u54cd\u5e94\u540e\uff0c\u5c31\u5173\u95ed\u5b83\u3002 \u6620\u5c04\u5668\u5b9e\u4f8b \u6620\u5c04\u5668\u662f\u4e00\u4e9b\u7ed1\u5b9a\u6620\u5c04\u8bed\u53e5\u7684\u63a5\u53e3(\u53c2\u89c1\u4e0a\u9762\u7684UserMapper\u63a5\u53e3)\u3002\u6620\u5c04\u5668\u63a5\u53e3\u7684\u5b9e\u4f8b\u662f\u4ece SqlSession \u4e2d\u83b7\u5f97\u7684\u3002\u867d\u7136\u4ece\u6280\u672f\u5c42\u9762\u4e0a\u6765\u8bb2\uff0c\u4efb\u4f55\u6620\u5c04\u5668\u5b9e\u4f8b\u7684\u6700\u5927\u4f5c\u7528\u57df\u4e0e\u8bf7\u6c42\u5b83\u4eec\u7684 SqlSession \u76f8\u540c\u3002\u4f46\u65b9\u6cd5\u4f5c\u7528\u57df\u624d\u662f\u6620\u5c04\u5668\u5b9e\u4f8b\u7684\u6700\u5408\u9002\u7684\u4f5c\u7528\u57df\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c\u6620\u5c04\u5668\u5b9e\u4f8b\u5e94\u8be5\u5728\u8c03\u7528\u5b83\u4eec\u7684\u65b9\u6cd5\u4e2d\u88ab\u83b7\u53d6\uff0c\u4f7f\u7528\u5b8c\u6bd5\u4e4b\u540e\u5373\u53ef\u4e22\u5f03\u3002 \u6620\u5c04\u5668\u5b9e\u4f8b\u5e76\u4e0d\u9700\u8981\u88ab\u663e\u5f0f\u5730\u5173\u95ed\u3002","title":"\u5165\u95e8"},{"location":"Java/5_Spring/#xml","text":"<!-- db.properties --> driver=com.mysql.cj.jdbc.Driver <!-- \u53ea\u8981\u53c2\u6570\u540d\u4e0d\u8bbe\u7f6e\u4e3a url \u5747\u53ef \u5982\u679c\u662f\u5728xml\u914d\u7f6e\u6587\u4ef6\u4e2d\u76f4\u63a5\u5199\u5b9aurl\uff0c\u5176\u4e2d\u7684 & \u9700\u8981 \u5199\u6210 &amp; \u5f62\u5f0f\u8868\u793a\u8f6c\u4e49 --> jdbcurl=jdbc:mysql://localhost:3306/how2java?useSSL=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC username=root password=admin <configuration> <!--\u5f15\u5165\u5916\u90e8\u914d\u7f6e\u6761\u4ef6--> <properties resource=\"db.properties\"/> <!-- \u4e5f\u53ef\u4ee5\u5728properties \u5143\u7d20\u7684\u5b50\u5143\u7d20\u4e2d\u8bbe\u7f6e --> <!-- <properties> <properity name=\"xx\" value=\"xx\"> </properties> --> <!-- \u4e5f\u53ef\u4ee5\u5728 SqlSessionFactoryBuilder.build() \u65b9\u6cd5\u4e2d\u4f20\u5165\u5c5e\u6027\u503c\u3002\u4f8b\u5982\uff1a SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, props); // ... \u6216\u8005 ... SqlSessionFactory factory = new SqlSessionFactoryBuilder().build(reader, environment, props); --> <!-- \u5982\u679c\u4e00\u4e2a\u5c5e\u6027\u5728\u4e0d\u53ea\u4e00\u4e2a\u5730\u65b9\u8fdb\u884c\u4e86\u914d\u7f6e\uff0c\u90a3\u4e48\uff0cMyBatis \u5c06\u6309\u7167\u4e0b\u9762\u7684\u987a\u5e8f\u6765\u52a0\u8f7d\uff1a \u9996\u5148\u8bfb\u53d6\u5728 properties \u5143\u7d20\u4f53\u5185\u6307\u5b9a\u7684\u5c5e\u6027\u3002 \u7136\u540e\u6839\u636e properties \u5143\u7d20\u4e2d\u7684 resource \u5c5e\u6027\u8bfb\u53d6\u7c7b\u8def\u5f84\u4e0b\u5c5e\u6027\u6587\u4ef6\uff0c\u6216\u6839\u636e url \u5c5e\u6027\u6307\u5b9a\u7684\u8def\u5f84\u8bfb\u53d6\u5c5e\u6027\u6587 \u4ef6\uff0c\u5e76\u8986\u76d6\u4e4b\u524d\u8bfb\u53d6\u8fc7\u7684\u540c\u540d\u5c5e\u6027\u3002 \u6700\u540e\u8bfb\u53d6\u4f5c\u4e3a\u65b9\u6cd5\u53c2\u6570\u4f20\u9012\u7684\u5c5e\u6027\uff0c\u5e76\u8986\u76d6\u4e4b\u524d\u8bfb\u53d6\u8fc7\u7684\u540c\u540d\u5c5e\u6027\u3002 --> <!-- \u8bbe\u7f6e --> <settings> <!--\u6807\u51c6\u65e5\u5fd7\u5de5\u5382--> <!--<setting name=\"logImpl\" value=\"STDOUT_LOGGING\"/>--> <!--\u4f7f\u7528LOG4J\u65e5\u5fd7\uff0c \u9700\u8981\u5bfc\u5165\u4f9d\u8d56\uff0c\u548c\u63d0\u4f9blog4j.properties\u914d\u7f6e\u6587\u4ef6--> <setting name=\"logImpl\" value=\"LOG4J\"/> <!--\u5f00\u542f\u81ea\u52a8\u9a7c\u5cf0\u547d\u540d\u89c4\u5219\uff0c\u5c06\u7ecf\u5178\u6570\u636e\u5e93\u5217\u540d A_column \u6620\u5c04\u5230\u7ecf\u5178java\u5c5e\u6027\u540d aColumn--> <setting name=\"mapUnderscoreToCamelCase\" value=\"true\"/> </settings> <!--\u914d\u7f6e\u522b\u540d\uff0c\u964d\u4f4e\u5197\u4f59\u7684\u5168\u9650\u5b9a\u7c7b\u540d\u4e66\u5199--> <typeAliases> <!--\u7b2c\u4e00\u79cd\u522b\u540d\u5f62\u5f0f: \u4e3ajava bean\u5bf9\u8c61 \u8bbe\u7f6e\u81ea\u5b9a\u4e49\u522b\u540d--> <!--<typeAlias type=\"com.wh.pojo.User\" alias=\"User\"/>--> <!--\u7b2c\u4e8c\u79cd\u5f62\u5f0f: \u626b\u63cf\u6307\u5b9a\u5305\u4e0b\u7684POJO\u5bf9\u8c61\uff0c\u9ed8\u8ba4\u522b\u540d\u4e3a\u7c7b\u7684\u9996\u5b57\u6bcd\u5c0f\u5199\uff0c \u5927\u5199\u4e5f\u53ef\u4ee5 \u9664\u6b64\u4e4b\u5916\uff0c\u5728POJO\u7c7b\u4e0a\u6dfb\u52a0 @Alias\u6ce8\u89e3 \u6765\u81ea\u5b9a\u4e49\u522b\u540d\uff0c\u7136\u540e\u88ab\u626b\u63cf --> <package name=\"com.wh.pojo\"/> <!-- \u5b9e\u4f53\u7c7b\u6bd4\u8f83\u5c11\u53ef\u4ee5\u9009\u62e9\u65b9\u5f0f\u4e00\uff0c\u4e14\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff1b \u7c7b\u6bd4\u8f83\u591a\uff0c\u5efa\u8bae\u65b9\u5f0f\u4e8c --> </typeAliases> <environments default=\"development\"> <environment id=\"development\"> <!-- \u5728 MyBatis \u4e2d\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u4e8b\u52a1\u7ba1\u7406\u5668\uff08\u4e5f\u5c31\u662f type=\"[JDBC|MANAGED]\"\uff09\uff1a JDBC \u2013 \u8fd9\u4e2a\u914d\u7f6e\u76f4\u63a5\u4f7f\u7528\u4e86 JDBC \u7684\u63d0\u4ea4\u548c\u56de\u6eda\u8bbe\u65bd\uff0c\u5b83\u4f9d\u8d56\u4ece\u6570\u636e\u6e90\u83b7\u5f97\u7684\u8fde\u63a5\u6765\u7ba1\u7406\u4e8b\u52a1\u4f5c\u7528\u57df\u3002 MANAGED \u2013 \u8fd9\u4e2a\u914d\u7f6e\u51e0\u4e4e\u6ca1\u505a\u4ec0\u4e48\u3002\u5b83\u4ece\u4e0d\u63d0\u4ea4\u6216\u56de\u6eda\u4e00\u4e2a\u8fde\u63a5\uff0c\u800c\u662f\u8ba9\u5bb9\u5668\u6765\u7ba1\u7406\u4e8b\u52a1\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\uff08\u6bd4 \u5982 JEE \u5e94\u7528\u670d\u52a1\u5668\u7684\u4e0a\u4e0b\u6587\uff09\u3002 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u4f1a\u5173\u95ed\u8fde\u63a5\u3002\u7136\u800c\u4e00\u4e9b\u5bb9\u5668\u5e76\u4e0d\u5e0c\u671b\u8fde\u63a5\u88ab\u5173\u95ed\uff0c\u56e0\u6b64\u9700\u8981\u5c06 closeConnection \u5c5e\u6027\u8bbe\u7f6e\u4e3a false \u6765\u963b\u6b62\u9ed8\u8ba4\u7684\u5173\u95ed\u884c\u4e3a --> <transactionManager type=\"JDBC\"/> <dataSource type=\"POOLED\"> <property name=\"driver\" value=\"${driver}\"/> <property name=\"url\" value=\"${jdbcurl}\"/> <property name=\"username\" value=\"${username}\"/> <property name=\"password\" value=\"${password}\"/> </dataSource> </environment> </environments> <mappers> <!--\u4f7f\u7528\u76f8\u5bf9\u4e8e\u7c7b\u8def\u5f84\u7684\u8d44\u6e90\u5f15\u7528--> <mapper resource=\"com/wh/dao/UserMapper.xml\"/> <!--\u4f7f\u7528\u6620\u5c04\u5668\u63a5\u53e3\u5b9e\u73b0\u7c7b\u7684\u5b8c\u5168\u9650\u5b9a\u7c7b\u540d, \u8981\u6c42\u63a5\u53e3\u548c\u914d\u7f6e\u6587\u4ef6\u540c\u540d\uff0c\u5904\u4e8e\u540c\u4e00\u4e2a\u5305\u4e0b--> <!--<mapper class=\"com.wh.dao.UserMapper\"/>--> <!--\u5c06\u5305\u5185\u7684\u6620\u5c04\u5668\u63a5\u53e3\u5b9e\u73b0\u5168\u90e8\u6ce8\u518c\u4e3a\u6620\u5c04\u5668 \u540c\u6837\u8981\u6c42\u63a5\u53e3\u548c\u914d\u7f6e\u6587\u4ef6\u540c\u540d\uff0c\u5904\u4e8e\u540c\u4e00\u4e2a\u5305\u4e0b --> <!--<package name=\"com.wh.dao\"/>--> </mappers> </configuration>","title":"xml\u914d\u7f6e"},{"location":"Java/5_Spring/#_6","text":"\u9002\u7528\u4e8e\u7b80\u5355sql\u8bed\u53e5\uff1b\u4f7f\u7528\u524d\uff0c\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u7ed1\u5b9a\u63a5\u53e3\u7c7b\uff0c\u4f7f\u7528\u6ce8\u89e3\u7684\u65b9\u5f0f\u4e0d\u9700\u8981mapper\u6587\u4ef6\uff1b \u4f46\u901a\u5e38\u63a5\u53e3\u548c\u5176mapper\u6587\u4ef6\u540d\u76f8\u540c\uff0c\u4e14\u5904\u4e8e\u540c\u4e00\u4e2a\u5305\u4e0b\uff0c\u8fd9\u6837\u53ef\u4ee5\u4f7f\u7528class\u6216resource\u65b9\u6cd5\u8bfb\u53d6\u5230\uff0c\u4e14\u80fd\u540c\u65f6\u4f7f\u7528xml\u548c\u6ce8\u89e3\u7684\u65b9\u6cd5\u914d\u7f6e\u3002","title":"\u4f7f\u7528\u6ce8\u89e3\u914d\u7f6e"},{"location":"Java/5_Spring/#sql","text":"<!-- where \u5143\u7d20\u53ea\u4f1a\u5728\u5b50\u5143\u7d20\u8fd4\u56de\u4efb\u4f55\u5185\u5bb9\u7684\u60c5\u51b5\u4e0b\u624d\u63d2\u5165 \u201cWHERE\u201d \u5b50\u53e5\u3002\u800c\u4e14\uff0c\u82e5\u5b50\u53e5\u7684\u5f00\u5934\u4e3a \u201cAND\u201d \u6216 \u201cOR\u201d\uff0c where \u5143\u7d20\u4e5f\u4f1a\u5c06\u5b83\u4eec\u53bb\u9664\uff1b MyBatis \u63d0\u4f9b\u4e86 choose \u5143\u7d20\uff0c\u5b83\u6709\u70b9\u50cf Java \u4e2d\u7684 switch \u8bed\u53e5\uff0c\u5f53when\u6807\u7b7e\u4e2d\u7684test \u5168\u4e0d\u6ee1\u8db3\u65f6\uff0c \u4f1a\u62fc\u63a5 otherwise\u4e2d\u7684\u8bed\u53e5\uff1b\u5426\u5219\u53ea\u4f1a\u62fc\u63a5\u7b2c\u4e00\u6761\u6ee1\u8db3\u6761\u4ef6\u7684when\u4e2d\u7684\u8bed\u53e5 --> <!-- sql\u7247\u6bb5 \u4e2d \u62bd\u53d6\u53ef\u80fd\u88ab\u9891\u7e41\u590d\u7528\u7684 sql \u64cd\u4f5c \uff1b \u5728\u9700\u8981\u4f7f\u7528\u7684\u5730\u65b9\uff0c\u901a\u8fc7 include\u5f15\u5165\uff1b \u6700\u597d\u57fa\u4e8e\u5355\u8868\u6765\u5b9a\u4e49\uff0c\u591a\u8868\u67e5\u8be2\u65f6\uff0c\u91cd\u590d\u6027\u5f88\u4f4e\uff0c\u65e0\u9700\u62bd\u53d6\uff1b \u4e0d\u8981\u5c06 where\u6807\u7b7e \u52a0\u5165\u5230 sql\u7247\u6bb5\u4e2d --> <sql id=\"select-if\"> <if test=\"title != null\"> blog.title LIKE concat('%', #{title}, '%') </if> <if test=\"author !=null\"> AND blog.author=#{author} </if> <if test=\"views != null\"> AND blog.views >= #{views} </if> </sql> <select id=\"queryBlogIf\" parameterType=\"map\" resultType=\"blog\"> SELECT * from how2java.blog <where> <include refid=\"select-if\"/> </where> </select> <select id=\"queryBlogChoose\" parameterType=\"map\" resultType=\"blog\"> SELECT * FROM how2java.blog <where> <choose> <when test=\"title != null\"> blog.title LIKE concat('%', #{title}, '%') </when> <when test=\"author != null\"> blog.author=#{author} </when> <when test=\"views != null\"> blog.views >= #{views} </when> <otherwise> blog.views >= 0 </otherwise> </choose> </where> </select> <update id=\"updateBlog\" parameterType=\"map\"> UPDATE how2java.blog <set> <if test=\"title != null\"> title = #{title}, </if> <if test=\"author != null\"> authot = #{author}, </if> <if test=\"views != null\"> views = #{views}, </if> </set> WHERE id=#{id} </update>","title":"\u52a8\u6001SQL"},{"location":"Java/5_Spring/#_7","text":"\u4e00\u7ea7\u7f13\u5b58 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u542f\u7528\u4e86\u672c\u5730\u7684\u4f1a\u8bdd\u7f13\u5b58\uff0c\u5b83\u4ec5\u4ec5\u5bf9\u4e00\u4e2a\u4f1a\u8bdd\u4e2d(Sqlsession)\u7684\u6570\u636e\u8fdb\u884c\u7f13\u5b58: \u6620\u5c04\u8bed\u53e5\u6587\u4ef6\u4e2d\u7684\u6240\u6709 select \u8bed\u53e5\u7684\u7ed3\u679c\u5c06\u4f1a\u88ab\u7f13\u5b58; \u6620\u5c04\u8bed\u53e5\u6587\u4ef6\u4e2d\u7684\u6240\u6709 insert\u3001update \u548c delete \u8bed\u53e5\u4f1a\u5237\u65b0\u7f13\u5b58; Sqlsession\u5bf9\u8c61\u5305\u542bclearCache\u65b9\u6cd5\uff0c\u7528\u4e8e\u6e05\u9664\u4e00\u7ea7\u7f13\u5b58; \u4e8b\u5b9e\u4e0a\uff0c\u4e00\u7ea7\u7f13\u5b58\u5c31\u662f\u4e00\u4e2aConcurrentHashMap; \u4e8c\u7ea7\u7f13\u5b58 \u4e5f\u79f0\u5168\u5c40\u7f13\u5b58\uff0c\u9700\u8981\u5728config.xml\u4e2d\u6dfb\u52a0\u8bbe\u7f6e\uff0c\u5f00\u542f\u5168\u5c40\u7f13\u5b58\uff0c\u540c\u65f6\u5728 SQL \u6620\u5c04\u6587\u4ef6(Mpper.xml)\u4e2d\u6dfb\u52a0\u4e00\u884c\uff1a < cache />\uff0c \u56e0\u6b64\u5c5e\u4e8e\u57fa\u4e8e namespace\u7ea7\u522b\u7684\u7f13\u5b58 \u8fd9\u4e2a\u7b80\u5355\u8bed\u53e5\u7684\u6548\u679c\u5982\u4e0b: \u6620\u5c04\u8bed\u53e5\u6587\u4ef6\u4e2d\u7684\u6240\u6709 select \u8bed\u53e5\u7684\u7ed3\u679c\u5c06\u4f1a\u88ab\u7f13\u5b58\u3002 \u6620\u5c04\u8bed\u53e5\u6587\u4ef6\u4e2d\u7684\u6240\u6709 insert\u3001update \u548c delete \u8bed\u53e5\u4f1a\u5237\u65b0\u7f13\u5b58\u3002 \u7f13\u5b58\u4f1a\u4f7f\u7528\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\u7b97\u6cd5\uff08LRU, Least Recently Used\uff09\u7b97\u6cd5\u6765\u6e05\u9664\u4e0d\u9700\u8981\u7684\u7f13\u5b58\u3002 \u7f13\u5b58\u4e0d\u4f1a\u5b9a\u65f6\u8fdb\u884c\u5237\u65b0\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u6ca1\u6709\u5237\u65b0\u95f4\u9694\uff09\u3002 \u7f13\u5b58\u4f1a\u4fdd\u5b58\u5217\u8868\u6216\u5bf9\u8c61\uff08\u65e0\u8bba\u67e5\u8be2\u65b9\u6cd5\u8fd4\u56de\u54ea\u79cd\uff09\u7684 1024 \u4e2a\u5f15\u7528\u3002 \u7f13\u5b58\u4f1a\u88ab\u89c6\u4e3a\u8bfb/\u5199\u7f13\u5b58\uff0c\u8fd9\u610f\u5473\u7740\u83b7\u53d6\u5230\u7684\u5bf9\u8c61\u5e76\u4e0d\u662f\u5171\u4eab\u7684\uff0c\u53ef\u4ee5\u5b89\u5168\u5730\u88ab\u8c03\u7528\u8005\u4fee\u6539\uff0c \u800c\u4e0d\u5e72\u6270\u5176\u4ed6\u8c03\u7528\u8005\u6216\u7ebf\u7a0b\u6240\u505a\u7684\u6f5c\u5728\u4fee\u6539\u3002 \u7f13\u5b58\u53ea\u4f5c\u7528\u4e8e cache \u6807\u7b7e\u6240\u5728\u7684\u6620\u5c04\u6587\u4ef6\u4e2d\u7684\u8bed\u53e5\u3002\u5982\u679c\u4f60\u6df7\u5408\u4f7f\u7528 Java API \u548c XML \u6620\u5c04\u6587\u4ef6\uff0c \u5728\u5171\u7528\u63a5\u53e3\u4e2d\u7684\u8bed\u53e5\u5c06\u4e0d\u4f1a\u88ab\u9ed8\u8ba4\u7f13\u5b58\u3002\u4f60\u9700\u8981\u4f7f\u7528 @CacheNamespaceRef \u6ce8\u89e3\u6307\u5b9a\u7f13\u5b58\u4f5c\u7528\u57df\u3002 \u2003 \u8fd9\u4e9b\u5c5e\u6027\u53ef\u4ee5\u901a\u8fc7 cache \u5143\u7d20\u7684\u5c5e\u6027\u6765\u4fee\u6539\u3002\u6bd4\u5982\uff1a < cache eviction=\"FIFO\" flushInterval=\"60000\" size=\"512\" readOnly=\"true\"/> \u2003 eviction \u6e05\u9664\u7f13\u5b58\u7b56\u7565\uff1a LRU \u2013 \u6700\u8fd1\u6700\u5c11\u4f7f\u7528\uff1a\u79fb\u9664\u6700\u957f\u65f6\u95f4\u4e0d\u88ab\u4f7f\u7528\u7684\u5bf9\u8c61\u3002 FIFO \u2013 \u5148\u8fdb\u5148\u51fa\uff1a\u6309\u5bf9\u8c61\u8fdb\u5165\u7f13\u5b58\u7684\u987a\u5e8f\u6765\u79fb\u9664\u5b83\u4eec\u3002 SOFT \u2013 \u8f6f\u5f15\u7528\uff1a\u57fa\u4e8e\u5783\u573e\u56de\u6536\u5668\u72b6\u6001\u548c\u8f6f\u5f15\u7528\u89c4\u5219\u79fb\u9664\u5bf9\u8c61\u3002 WEAK \u2013 \u5f31\u5f15\u7528\uff1a\u66f4\u79ef\u6781\u5730\u57fa\u4e8e\u5783\u573e\u6536\u96c6\u5668\u72b6\u6001\u548c\u5f31\u5f15\u7528\u89c4\u5219\u79fb\u9664\u5bf9\u8c61\u3002 \u9ed8\u8ba4\u7684\u6e05\u9664\u7b56\u7565\u662f LRU\u3002 \u2003 flushInterval\uff08\u5237\u65b0\u95f4\u9694\uff09\u5c5e\u6027\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a\u4efb\u610f\u7684\u6b63\u6574\u6570\uff0c\u8bbe\u7f6e\u7684\u503c\u5e94\u8be5\u662f\u4e00\u4e2a\u4ee5\u6beb\u79d2\u4e3a\u5355\u4f4d\u7684\u5408\u7406\u65f6\u95f4\u91cf\u3002 \u9ed8\u8ba4\u60c5\u51b5\u662f\u4e0d\u8bbe\u7f6e\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u5237\u65b0\u95f4\u9694\uff0c\u7f13\u5b58\u4ec5\u4ec5\u4f1a\u5728\u8c03\u7528\u8bed\u53e5\u65f6\u5237\u65b0\u3002 size\uff08\u5f15\u7528\u6570\u76ee\uff09\u5c5e\u6027\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a\u4efb\u610f\u6b63\u6574\u6570\uff0c\u8981\u6ce8\u610f\u6b32\u7f13\u5b58\u5bf9\u8c61\u7684\u5927\u5c0f\u548c\u8fd0\u884c\u73af\u5883\u4e2d\u53ef\u7528\u7684\u5185\u5b58\u8d44\u6e90\u3002\u9ed8\u8ba4\u503c\u662f 1024\u3002 readOnly\uff08\u53ea\u8bfb\uff09\u5c5e\u6027\u53ef\u4ee5\u88ab\u8bbe\u7f6e\u4e3a true \u6216 false\u3002\u53ea\u8bfb\u7684\u7f13\u5b58\u4f1a\u7ed9\u6240\u6709\u8c03\u7528\u8005\u8fd4\u56de\u7f13\u5b58\u5bf9\u8c61\u7684\u76f8\u540c\u5b9e\u4f8b\u3002 \u56e0\u6b64\u8fd9\u4e9b\u5bf9\u8c61\u4e0d\u80fd\u88ab\u4fee\u6539\u3002\u8fd9\u5c31\u63d0\u4f9b\u4e86\u53ef\u89c2\u7684\u6027\u80fd\u63d0\u5347\u3002\u800c\u53ef\u8bfb\u5199\u7684\u7f13\u5b58\u4f1a\uff08\u901a\u8fc7\u5e8f\u5217\u5316\uff09\u8fd4\u56de\u7f13\u5b58\u5bf9\u8c61\u7684\u62f7\u8d1d\u3002 \u901f\u5ea6\u4e0a\u4f1a\u6162\u4e00\u4e9b\uff0c\u4f46\u662f\u66f4\u5b89\u5168\uff0c\u56e0\u6b64\u9ed8\u8ba4\u503c\u662f false\uff0c\u5219\u8981\u7f13\u5b58\u4e2d\u7684POJO\u5bf9\u8c61\u5fc5\u987b\u53ef\u5e8f\u5217\u5316\u3002 \u4e8c\u7ea7\u7f13\u5b58\u662f\u4e8b\u52a1\u6027\u7684\u3002\u6240\u6709\u6570\u636e\u90fd\u4f1a\u5148\u5b58\u5728\u4e00\u7ea7\u7f13\u5b58\u4e2d\uff0c\u5f53 SqlSession \u5b8c\u6210\u5e76\u63d0\u4ea4\u65f6\uff0c\u6216\u662f\u5b8c\u6210\u5e76\u56de\u6eda\uff0c \u4f46\u6ca1\u6709\u6267\u884c flushCache=true \u7684 insert/delete/update \u8bed\u53e5\u65f6\uff0c\u4e8c\u7ea7\u7f13\u5b58\u4f1a\u83b7\u5f97\u66f4\u65b0\u3002 \u65b0\u7684Sqlsession\u5982\u679c\u6267\u884c\u548c\u4e4b\u524d\u76f8\u540c\u7684\u67e5\u8be2\uff0c\u5c06\u4f1a\u4ece\u4e8c\u7ea7\u7f13\u5b58\u4e2d\u83b7\u53d6\u7ed3\u679c","title":"\u7f13\u5b58"},{"location":"Java/5_Spring/#springmvc","text":"","title":"SpringMVC"},{"location":"Java/5_Spring/#mvc","text":"Controller(\u63a7\u5236\u5668, \u5982servlet): \u53d6\u5f97\u8868\u5355\u6570\u636e, \u8c03\u7528\u4e1a\u52a1\u903b\u8f91, \u8f6c\u5411\u6307\u5b9a\u7684\u9875\u9762; Model(\u6a21\u578b, \u5982dao\u3001service): \u4e1a\u52a1\u903b\u8f91, \u4fdd\u5b58\u6570\u636e\u7684\u72b6\u6001; View(\u89c6\u56fe, \u5982view): \u663e\u793a\u9875\u9762;","title":"MVC"},{"location":"Java/5_Spring/#spingmvc","text":"\u5047\u8bbe\u8bf7\u6c42\u7684url\u4e3a : http://localhost:8080/SpringMVC/hello, \u5982\u4e0aurl\u62c6\u5206\u6210\u4e09\u90e8\u5206\uff1a http://localhost:8080 \u670d\u52a1\u5668\u57df\u540d; SpringMVC: \u90e8\u7f72\u5728\u670d\u52a1\u5668\u4e0a\u7684web\u7ad9\u70b9; hello:\u8868\u793a\u63a7\u5236\u5668; SpringMVC\u5904\u7406\u6d41\u7a0b: 1.\u7528\u6237\u53d1\u9001\u8bf7\u6c42\u81f3\u524d\u7aef\u63a7\u5236\u5668DispatcherServlet 2.DispatcherServlet\u6536\u5230\u8bf7\u6c42\u8c03\u7528\u5904\u7406\u5668\u6620\u5c04\u5668HandlerMapping\u3002 3.\u5904\u7406\u5668\u6620\u5c04\u5668\u6839\u636e\u8bf7\u6c42url\u627e\u5230\u5177\u4f53\u7684\u5904\u7406\u5668(\u8fd9\u4e2a\u4f8b\u5b50\u91cc\u662fhello)\uff0c\u751f\u6210\u5904\u7406\u5668\u6267\u884c\u94feHandlerExecutionChain (\u5305\u62ec\u5904\u7406\u5668\u5bf9\u8c61\u548c\u5904\u7406\u5668\u62e6\u622a\u5668)\u4e00\u5e76\u8fd4\u56de\u7ed9DispatcherServlet\u3002 4.DispatcherServlet\u6839\u636e\u5904\u7406\u5668Handler\uff0c\u7136\u540e\u83b7\u53d6\u5904\u7406\u5668\u9002\u914d\u5668HandlerAdapter\uff0c\u5e76\u6267\u884cHandlerAdapter \u5b8c\u6210\u4e00\u7cfb\u5217\u7684\u64cd\u4f5c\uff0c\u5982\uff1a\u53c2\u6570\u5c01\u88c5\uff0c\u6570\u636e\u683c\u5f0f\u8f6c\u6362\uff0c\u6570\u636e\u9a8c\u8bc1\u7b49\u64cd\u4f5c\u3002 5.\u6267\u884c\u5904\u7406\u5668Handler(Controller\uff0c\u4e5f\u53eb\u9875\u9762\u63a7\u5236\u5668)\u3002 6.Handler\u6267\u884c\u5b8c\u6210\u8fd4\u56deModelAndView 7.HandlerAdapter\u5c06Handler\u6267\u884c\u7ed3\u679cModelAndView\u8fd4\u56de\u5230DispatcherServlet 8.DispatcherServlet\u5c06ModelAndView\u4f20\u7ed9ViewReslover\u89c6\u56fe\u89e3\u6790\u5668 9.ViewReslover\u89e3\u6790\u540e\u8fd4\u56de\u5177\u4f53View 10.DispatcherServlet\u5bf9View\u8fdb\u884c\u6e32\u67d3\u89c6\u56fe\uff08\u5373\u5c06\u6a21\u578b\u6570\u636emodel\u586b\u5145\u81f3\u89c6\u56fe\u4e2d\uff09\u3002 11.DispatcherServlet\u54cd\u5e94\u7528\u6237\u3002 <!-- web.xml \u6ce8\u518cDispatchServlet --> <?xml version=\"1.0\" encoding=\"UTF-8\"?> <web-app xmlns=\"http://xmlns.jcp.org/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd\" version=\"3.1\"> <!--1.\u6ce8\u518cDispatcherServlet\uff0c MVC\u6838\u5fc3\uff1a \u8bf7\u6c42\u5206\u53d1\u5668\uff0c\u524d\u7aef\u63a7\u5236\u5668--> <servlet> <servlet-name>springmvc</servlet-name> <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> <!--\u5173\u8054\u4e00\u4e2aspringmvc\u7684\u914d\u7f6e\u6587\u4ef6:\u3010servlet-name\u3011-servlet.xml--> <init-param> <param-name>contextConfigLocation</param-name> <param-value>classpath:springmvc-servlet.xml</param-value> </init-param> <!--\u542f\u52a8\u7ea7\u522b-1--> <load-on-startup>1</load-on-startup> </servlet> <!--/ \u5339\u914d\u6240\u6709\u7684\u8bf7\u6c42\uff1b\uff08\u4e0d\u5305\u62ec.jsp\uff09--> <!--/* \u5339\u914d\u6240\u6709\u7684\u8bf7\u6c42\uff1b\uff08\u5305\u62ec.jsp\uff09--> <servlet-mapping> <servlet-name>springmvc</servlet-name> <url-pattern>/</url-pattern> </servlet-mapping> </web-app> <!-- \u901a\u8fc7 bean \u6ce8\u5165Controller--> <!-- springmvc-servlet.xml \u914d\u7f6eDispatchServlet --> <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd\"> <!--\u6dfb\u52a0 \u5904\u7406\u6620\u5c04\u5668--> <bean class=\"org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping\"/> <!--\u6dfb\u52a0 \u5904\u7406\u9002\u914d\u5668--> <bean class=\"org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter\"/> <!--\u6dfb\u52a0 \u89c6\u56fe\u89e3\u6790\u5668--> <!-- \u89c6\u56fe\u89e3\u6790\u5668:DispatcherServlet\u7ed9\u4ed6\u7684ModelAndView: 1. \u83b7\u53d6ModelAndView\u7684\u6570\u636e 2. \u89e3\u6790ModelAndView \u7684\u89c6\u56fe\u540d\u5b57 3. \u62fc\u63a5\u89c6\u56fename(prefix+view_name+suffix), \u627e\u5230\u5bf9\u5e94\u7684\u89c6\u56fe, view_name\u5728controller\u4e2d\u8bbe\u7f6e\uff0c\u5b58\u50a8\u5728ModelAndView\u4e2d 4. \u6e32\u67d3\u6570\u636e\u5230\u89c6\u56fe --> <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\" id=\"InternalResourceViewResolver\"> <!--\u524d\u7f00--> <property name=\"prefix\" value=\"/WEB-INF/jsp/\"/> <!--\u540e\u7f00--> <property name=\"suffix\" value=\".jsp\"/> </bean> <!-- \u56e0\u4e3a\u9009\u62e9\u7684\u5904\u7406\u6620\u5c04\u5668\u4e3aBeanNameUrlHandlerMapping\uff0c \u5176\u6839\u636e\u89e3\u6790\u7684url\u53bb\u5339\u914d\u662f\u5426\u6709\u5bf9\u5e94\u7684bean\u5b58\u5728 --> <bean id=\"/hello\" class=\"com.wh.controller.HelloController\"/> </beans> <!-- \u5f00\u542f\u81ea\u52a8\u626b\u63cf\u6ce8\u89e3\uff0c\u6ce8\u5165Controller --> <?xml version=\"1.0\" encoding=\"UTF-8\"?> <beans xmlns=\"http://www.springframework.org/schema/beans\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context=\"http://www.springframework.org/schema/context\" xmlns:mvc=\"http://www.springframework.org/schema/mvc\" xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd\"> <!-- \u81ea\u52a8\u626b\u63cf\u5305\uff0c\u8ba9\u6307\u5b9a\u5305\u4e0b\u7684\u6ce8\u89e3\u751f\u6548,\u7531IOC\u5bb9\u5668\u7edf\u4e00\u7ba1\u7406 --> <context:component-scan base-package=\"com.wh.controller\"/> <!-- \u8ba9Spring MVC\u4e0d\u5904\u7406\u9759\u6001\u8d44\u6e90 \u5982.css, .js, .html\u7b49--> <mvc:default-servlet-handler /> <!-- \u652f\u6301mvc\u6ce8\u89e3\u9a71\u52a8 \u5728spring\u4e2d\u4e00\u822c\u91c7\u7528@RequestMapping\u6ce8\u89e3\u6765\u5b8c\u6210\u6620\u5c04\u5173\u7cfb \u8981\u60f3\u4f7f@RequestMapping\u6ce8\u89e3\u751f\u6548 \u5fc5\u987b\u5411\u4e0a\u4e0b\u6587\u4e2d\u6ce8\u518cDefaultAnnotationHandlerMapping \u548c\u4e00\u4e2aAnnotationMethodHandlerAdapter\u5b9e\u4f8b \u8fd9\u4e24\u4e2a\u5b9e\u4f8b\u5206\u522b\u5728\u7c7b\u7ea7\u522b\u548c\u65b9\u6cd5\u7ea7\u522b\u5904\u7406\u3002 \u800cannotation-driven\u914d\u7f6e\u5e2e\u52a9\u6211\u4eec\u81ea\u52a8\u5b8c\u6210\u4e0a\u8ff0\u4e24\u4e2a\u5b9e\u4f8b\u7684\u6ce8\u5165\u3002 --> <mvc:annotation-driven /> <!-- \u89c6\u56fe\u89e3\u6790\u5668 --> <bean class=\"org.springframework.web.servlet.view.InternalResourceViewResolver\" id=\"internalResourceViewResolver\"> <!-- \u524d\u7f00 --> <property name=\"prefix\" value=\"/WEB-INF/jsp/\" /> <!-- \u540e\u7f00 --> <property name=\"suffix\" value=\".jsp\" /> </bean> </beans> Controller \u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u63a5\u53e3\u7684\u65b9\u5f0f\uff0c\u6216\u8005\u901a\u8fc7\u6ce8\u89e3\u7684\u65b9\u5f0f\uff0c\u6765\u81ea\u5b9a\u4e49Controller // \u5b9e\u73b0controller\u63a5\u53e3 // \u8fd9\u79cd\u5f62\u5f0f\u4e0b\u8bbf\u95ee\u8def\u5f84\u53ea\u80fd\u901a\u8fc7 \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d \u6dfb\u52a0 bean \u4e2d\uff0c\u8bbe\u7f6eid // \u5373\u901a\u8fc7\u63a5\u53e3\u5b9e\u73b0controller\u8981\u4e0exml\u914d\u7f6e\u7ed3\u5408 public class HelloController implements Controller { @Nullable @Override public ModelAndView handleRequest(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse) throws Exception { //ModelAndView \u6a21\u578b\u548c\u89c6\u56fe ModelAndView mv = new ModelAndView(); //\u5c01\u88c5\u5bf9\u8c61\uff0c\u653e\u5728ModelAndView\u4e2d\u3002Model mv.addObject(\"msg\",\"HelloSpringMVC!\"); //\u5c01\u88c5\u8981\u8df3\u8f6c\u7684\u89c6\u56fe\uff0c\u653e\u5728ModelAndView\u4e2d mv.setViewName(\"hello\"); //: /WEB-INF/jsp/hello.jsp return mv; } } // \u901a\u8fc7\u6ce8\u89e3\uff0c \u8bbf\u95ee\u8def\u5f84\u901a\u8fc7@RequestMapping\u8bbe\u7f6e @Controller //@RequestMapping(\"/HelloController\") public class HelloController { // \u8bbe\u5b9a\u8bbf\u95ee\u5730\u5740, \u5b9e\u9645\u62fc\u63a5\u4e3a \u670d\u52a1\u5668\u5730\u5740/HelloController/test // \u5982\u679c\u4e0d\u4e3a\u7c7b\u8bbe\u7f6e\u6620\u5c04\uff0c\u5219\u5b9e\u9645\u8bbf\u95ee\u5730\u5740\u4e3a \u670d\u52a1\u5668\u5730\u5740/test // \u8fd9\u91cc\u7684\u5730\u5740\u4e0d\u9700\u8981\u4e0e\u89c6\u56fe\u6587\u4ef6\u540d\u4e00\u81f4 @RequestMapping(\"/Mytest\") public String hello(Model model){ model.addAttribute(\"msg\", \"hello SpringMVC\"); return \"test\"; // \u5c06\u89c6\u56fe\u6587\u4ef6\u540d\u8fd4\u56de\u7ed9\u89c6\u56fe\u89e3\u6790\u5668 } } RestFul\u98ce\u683c \u901a\u8fc7\u4e0d\u540c\u7684\u8bf7\u6c42\u65b9\u5f0f\u6765\u5b9e\u73b0\u4e0d\u540c\u7684\u6548\u679c\uff0c\u4f8b\u5982\u8bf7\u6c42\u5730\u5740\u4e00\u6837\uff0c\u4f46\u662f\u8bf7\u6c42\u65b9\u5f0f\u4e0d\u540c\uff0c\u5982get\u3001post\u3001update\u3001delete\uff0c\u5c06\u4ea7\u751f\u4e0d\u540c\u7684\u7ed3\u679c\uff1b\u907f\u514d\u4e86\u5728\u8bbf\u95ee\u5730\u5740\u4e2d\u9009\u62e9\u4e0d\u540c\u7684\u53c2\u6570\u6765\u64cd\u4f5c\u540c\u4e00\u5bf9\u8c61\u3002 \u5728Spring MVC\u4e2d\u53ef\u4ee5\u4f7f\u7528 @PathVariable \u6ce8\u89e3\uff0c\u8ba9\u65b9\u6cd5\u53c2\u6570\u7684\u503c\u5bf9\u5e94\u7ed1\u5b9a\u5230\u4e00\u4e2aURI\u6a21\u677f\u53d8\u91cf\u4e0a // \u8bbf\u95ee\u5f62\u5f0f\uff0c http://localhost:8080/add?a=1&b=3 @RequestMapping(\"/add\") public String test(int a, int b, Model model){ model.addAttribute(\"msg\", \"result=\"+(a+b)); return \"test\"; } // \u8bbf\u95ee\u5f62\u5f0f http://localhost:8080/Radd/1/3 @RequestMapping(value = \"/Radd/{a}/{b}\", method = RequestMethod.GET) public String test2(@PathVariable int a, @PathVariable int b, Model model){ model.addAttribute(\"msg\", \"result=\"+(a+b)); return \"test\"; } \u8f6c\u53d1\u4e0e\u91cd\u5b9a\u5411 \u8bf7\u6c42\u8f6c\u53d1\uff1a \u5ba2\u6237\u9996\u5148\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\u5230\u670d\u52a1\u5668\u7aef\uff0c\u670d\u52a1\u5668\u7aef\u53d1\u73b0\u5339\u914d\u7684servlet\uff0c\u5e76\u6307\u5b9a\u5b83\u53bb\u6267\u884c\uff0c\u5f53\u8fd9\u4e2aservlet\u6267\u884c\u5b8c\u4e4b\u540e\uff0c \u5b83\u8981\u8c03\u7528getRequestDispacther()\u65b9\u6cd5\uff0c\u628a\u8bf7\u6c42\u8f6c\u53d1\u7ed9\u6307\u5b9a\u7684\u65b0\u7684jsp,\u6574\u4e2a\u6d41\u7a0b\u90fd\u662f\u5728\u670d\u52a1\u5668\u7aef\u5b8c\u6210\u7684\uff0c \u800c\u4e14\u662f\u5728\u540c\u4e00\u4e2a\u8bf7\u6c42\u91cc\u9762\u5b8c\u6210\u7684\uff0c\u56e0\u6b64servlet\u548cjsp\u5171\u4eab\u7684\u662f\u540c\u4e00\u4e2arequest\uff0c\u5728servlet\u91cc\u9762\u653e\u7684\u6240\u6709\u4e1c\u897f\uff0c \u5728\u65b0\u7684jsp\u4e2d\u90fd\u80fd\u901a\u8fc7getAttribute()\u83b7\u53d6\uff0cg\u6267\u884c\u5b8c\u628a\u7ed3\u679c\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\u6574\u4e2a\u8fc7\u7a0b\u662f\u4e00\u4e2a\u8bf7\u6c42\uff0c\u4e00\u4e2a\u54cd\u5e94\u3002 \u2003 \u91cd\u5b9a\u5411\uff1a \u5ba2\u6237\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\u5230\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u5339\u914dservlet\uff0cservlet\u5904\u7406\u5b8c\u4e4b\u540e\u8c03\u7528\u4e86sendRedirect()\u65b9\u6cd5\uff0c \u7acb\u5373\u5411\u5ba2\u6237\u7aef\u8fd4\u56de\u8fd9\u4e2a\u54cd\u5e94(http\u72b6\u6001\u7801\u4e3a302)\uff0c\u54cd\u5e94\u884c\u544a\u8bc9\u5ba2\u6237\u7aef\u5fc5\u987b\u8981\u518d\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\uff0c\u53bb\u8bbf\u95ee\u65b0\u7684jsp\uff1b \u5ba2\u6237\u7aef\u6536\u5230\u8bf7\u6c42\u540e\uff0c\u7acb\u523b\u53d1\u51fa\u4e00\u4e2a\u65b0\u7684\u8bf7\u6c42\uff0c\u53bb\u8bf7\u6c42\u6307\u5b9a\u7684jsp, \u524d\u540e\u4e24\u4e2a\u8bf7\u6c42\u4e92\u4e0d\u5e72\u6270\uff0c\u76f8\u4e92\u72ec\u7acb\uff0c \u5728\u524d\u9762request\u91cc\u9762setAttribute()\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u5728\u540e\u9762\u7684request\u91cc\u9762\u90fd\u83b7\u5f97\u4e0d\u4e86\u3002 \u2003 \u8bf7\u6c42\u8f6c\u53d1\uff1arequest.getRequestDispatcher(\"/test.jsp\").forword(request,response); \u91cd\u5b9a\u5411\uff1aresponse.sendRedirect(\"/test.jsp\"); \u2003 \u533a\u522b\uff1a 1\u3001\u8bf7\u6c42\u6b21\u6570\uff1a\u91cd\u5b9a\u5411\u662f\u6d4f\u89c8\u5668\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\u5e76\u6536\u5230\u54cd\u5e94\u540e\u518d\u6b21\u5411\u4e00\u4e2a\u65b0\u5730\u5740\u53d1\u51fa\u8bf7\u6c42\uff0c \u8f6c\u53d1\u662f\u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\u540e\u4e3a\u4e86\u5b8c\u6210\u54cd\u5e94\u8df3\u8f6c\u5230\u4e00\u4e2a\u65b0\u7684\u5730\u5740\uff1b\u91cd\u5b9a\u5411\u81f3\u5c11\u8bf7\u6c42\u4e24\u6b21\uff0c\u8f6c\u53d1\u8bf7\u6c42\u4e00\u6b21\uff1b 2\u3001\u5730\u5740\u680f\u4e0d\u540c\uff1a\u91cd\u5b9a\u5411\u5730\u5740\u680f\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u8f6c\u53d1\u5730\u5740\u680f\u4e0d\u4f1a\u53d1\u751f\u53d8\u5316\uff1b 3\u3001 \u662f\u5426\u5171\u4eab\u6570\u636e\uff1a\u91cd\u5b9a\u5411\u4e24\u6b21\u8bf7\u6c42\u4e0d\u5171\u4eab\u6570\u636e\uff0c\u8f6c\u53d1\u4e00\u6b21\u8bf7\u6c42\u5171\u4eab\u6570\u636e\uff08 \u5728request\u7ea7\u522b\u4f7f\u7528\u4fe1\u606f\u5171\u4eab\uff0c\u4f7f\u7528\u91cd\u5b9a\u5411\u5fc5\u7136\u51fa\u9519; \u5bf9\u4e8e\u5b58\u653e\u5728WEB-INF\u4e0b\u7684\u8d44\u6e90\uff0c\u5bf9\u4e8e\u670d\u52a1\u5668\u7ea7\u522b\u7684\u8f6c\u53d1\u662f\u53ef\u89c1\u7684\uff0c \u800c\u91cd\u5b9a\u5411\u662f\u4e0d\u80fd\u8bbf\u95eeWEB-INF\u4e0b\u7684\u8d44\u6e90\u7684\uff09 \uff1b 4\u3001\u8df3\u8f6c\u9650\u5236\uff1a\u91cd\u5b9a\u5411\u53ef\u4ee5\u8df3\u8f6c\u5230\u4efb\u610fURL\uff0c\u8f6c\u53d1\u53ea\u80fd\u8df3\u8f6c\u672c\u7ad9\u70b9\u8d44\u6e90\uff1b 5\u3001\u53d1\u751f\u884c\u4e3a\u4e0d\u540c\uff1a\u91cd\u5b9a\u5411\u662f\u5ba2\u6237\u7aef\u884c\u4e3a\uff0c\u8f6c\u53d1\u662f\u670d\u52a1\u5668\u7aef\u884c\u4e3a\uff1b // SpringMVC\u4e0b\u7684\u8f6c\u53d1\u4e0e\u91cd\u5b9a\u5411 // \u4ee5\u6ce8\u89e3\u5b9e\u73b0\u4e3a\u4f8b // \u5f00\u542f\u89c6\u56fe\u89e3\u6790\u5668\uff0c\u9ed8\u8ba4\u5c31\u662f\u901a\u8fc7\u8f6c\u53d1\u5f62\u5f0f\uff0c\u8bbf\u95ee\u7684\u8d44\u6e90\u662f\u672c\u7ad9\u70b9\uff0c\u5373WEB-INF\u4e0b\u7684\u8d44\u6e90\uff0c\u89c6\u56fe\u89e3\u6790\u5668\u8d1f\u8d23\u62fc\u63a5URL @RequestMapping(\"/add\") public String test(int a, int b, Model model){ model.addAttribute(\"msg\", \"result=\"+(a+b)); return \"test\"; } // \u663e\u793a\u4f7f\u7528forward\u8f6c\u53d1\uff0c\u5c06\u4e0d\u4f7f\u7528\u89c6\u56fe\u89e3\u6790\u5668\uff0c\u56e0\u6b64\u8f6c\u53d1\u8def\u5f84\u5fc5\u987b\u660e\u786e\u6307\u5b9a @RequestMapping(value = \"/Radd/{a}/{b}\", method = RequestMethod.GET) public String test2(@PathVariable int a, @PathVariable int b, Model model){ model.addAttribute(\"msg\", \"result=\"+(a+b)); return \"forward:/WEB-INF/jsp/test.jsp\"; // return \"forward:/index.jsp\" //\u53ef\u4ee5\u8f6c\u53d1\u5230\u975eWEB-INF\u4e0b\u7684jsp } // \u4f7f\u7528redirect\uff0c\u540c\u6837\u4e0d\u4f7f\u7528\u89c6\u56fe\u89e3\u6790\u5668\uff0c\u4e14\u4e0d\u80fd\u8bbf\u95eeWEB-INF\u4e0b\u7684\u8d44\u6e90 @RequestMapping(\"/hello\") public String test3(Model model){ model.addAttribute(\"msg\", \"hello\"); return \"redirect:/index.jsp\"; } /** \u4e0b\u9762\u7684test2\u8fd4\u56de\u4e2d\u4f7f\u7528\u4e86forward\u8f6c\u53d1\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4f7f\u7528redirect\uff0c \u540c\u6837\u662f\u4e0d\u4f7f\u7528\u89c6\u56fe\u89e3\u6790\u5668\uff0c\u4f46\u5e76\u4e0d\u662f\u76f4\u63a5\u8bbf\u95eetest.jsp\uff0c\u800c\u662f\u8bbf\u95ee toTest()\u65b9\u6cd5\uff0c \u7136\u540e\u518d\u8bbf\u95eetest.jsp */ @RequestMapping(\"/test\") public String toTest(){ return \"test\"; } @RequestMapping(value = \"/Radd/{a}/{b}\", method = RequestMethod.GET) public String test2(@PathVariable int a, @PathVariable int b, Model model){ model.addAttribute(\"msg\", \"result=\"+(a+b)); return \"forward:/test\"; } \u4e71\u7801\u95ee\u9898 1\u3001request.setCharacterEncoding(\"UTF-8\"); \u5fc5\u987b\u5728\u653e\u5728request.getParameter()\u4e4b\u524d\uff0c\u8fd9\u6837\u53ef\u4ee5\u6b63\u786e\u83b7\u53d6\u4e2d\u6587\u53c2\u6570\uff1b\u4f46\u5728SpringMVC\u4e2d\uff0c\u901a\u5e38\u53c2\u6570\u90fd\u662f\u81ea\u52a8\u83b7\u53d6\uff0c\u6b64\u65f6\u8fd9\u79cd\u65b9\u6cd5\u65e0\u6548\uff1b\u9664\u975e\u624b\u52a8\u83b7\u53d6\u53c2\u6570\u3002 @RequestMapping(\"/encode\") public String test3(Model model, HttpServletRequest request) throws Exception { request.setCharacterEncoding(\"UTF-8\"); // \u53c2\u6570\u662f\u901a\u8fc7post\u65b9\u5f0f\u63d0\u4ea4\uff0c\u82e5\u662f\u901a\u8fc7get\u65b9\u5f0f\u63d0\u4ea4\u8868\u5355\uff0c \u5e76\u4e0d\u4f1a\u4e71\u7801 String nename = request.getParameter(\"name\"); // \u6b64\u65f6\u63a7\u5236\u53f0\u8f93\u51fa\u53ef\u80fd\u4f9d\u65e7\u4e71\u7801\uff0c\u9700\u8981\u8bbe\u7f6e tomcat VMOptions: -Dfile.encoding=UTF-8 System.out.println(\"name\"+nename); model.addAttribute(\"msg\", name); return \"test\"; } 2\u3001\u901a\u8fc7\u8bbe\u7f6e\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668 3\u3001\u914d\u7f6eSpringMVC\u63d0\u4f9b\u7684\u7f16\u7801\u8fc7\u6ee4\u5668 <filter> <filter-name>encode</filter-name> <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class> <init-param> <param-name>encoding</param-name> <param-value>utf-8</param-value> </init-param> </filter> <filter-mapping> <filter-name>encode</filter-name> <url-pattern>/*</url-pattern> </filter-mapping> \u62e6\u622a\u5668 \u62e6\u622a\u65f6\u673a: \u4e0e\u8fc7\u6ee4\u5668\u533a\u522b: 1\u3001\u62e6\u622a\u5668\u662f\u57fa\u4e8eJava\u7684\u53cd\u5c04\u673a\u5236\u7684\uff0c\u800c\u8fc7\u6ee4\u5668\u662f\u57fa\u4e8e\u51fd\u6570\u56de\u8c03; 2\u3001\u8fc7\u6ee4\u5668\u4f9d\u8d56\u4e0eservlet\u5bb9\u5668\uff0c\u800c\u62e6\u622a\u5668\u4e0d\u4f9d\u8d56\u4e0eservlet\u5bb9\u5668; 3\u3001\u62e6\u622a\u5668\u53ea\u80fd\u5bf9action\u8bf7\u6c42\u8d77\u4f5c\u7528\uff0c\u800c\u8fc7\u6ee4\u5668\u5219\u53ef\u4ee5\u5bf9\u51e0\u4e4e\u6240\u6709\u7684\u8bf7\u6c42\u8d77\u4f5c\u7528; 4\u3001\u62e6\u622a\u5668\u53ef\u4ee5\u8bbf\u95eeaction\u4e0a\u4e0b\u6587\u3001\u503c\u6808\u91cc\u7684\u5bf9\u8c61\uff0c\u800c\u8fc7\u6ee4\u5668\u4e0d\u80fd; 5\u3001\u5728action\u7684\u751f\u547d\u5468\u671f\u4e2d\uff0c\u62e6\u622a\u5668\u53ef\u4ee5\u591a\u6b21\u88ab\u8c03\u7528\uff0c\u800c\u8fc7\u6ee4\u5668\u53ea\u80fd\u5728servlet\u5bb9\u5668\u521d\u59cb\u5316\u65f6\u88ab\u8c03\u7528\u4e00\u6b21; 6\u3001\u62e6\u622a\u5668\u53ef\u4ee5\u83b7\u53d6IOC\u5bb9\u5668\u4e2d\u7684\u5404\u4e2abean\uff0c\u800c\u8fc7\u6ee4\u5668\u5c31\u4e0d\u884c\uff0c\u56e0\u6b64\u53ef\u4ee5\u62e6\u622a\u5668\u91cc\u6ce8\u5165\u4e00\u4e2aservice\uff0c\u8c03\u7528\u4e1a\u52a1\u903b\u8f91\u3002 \u81ea\u5b9a\u4e49\u62e6\u622a\u5668\u9700\u8981\u5b9e\u73b0 springframework\u4e0b\u7684HandlerInterceptor\u63a5\u53e3\uff0c\u5e76\u5728spring-mvx.xml\u4e2d\u914d\u7f6e\uff0c \u6258\u7ba1\u7ed9IOC\u5bb9\u5668\uff0c\u5c5e\u4e8eSpring\u7684\u7ec4\u4ef6\uff0c\u56e0\u6b64\u5176\u672c\u8d28\u662f\u57fa\u4e8e\u53cd\u5c04\u5b9e\u4f8b\u5316\u7684(\u533a\u522b1)\uff0c\u4e5f\u610f\u5473\u7740\u53ef\u4ee5\u4f7f\u7528Spring\u4e2d\u7684\u4efb\u4f55\u8d44\u6e90\u3001\u5bf9\u8c61\uff0c \u4f8b\u5982\u6ce8\u5165bean\u5bf9\u8c61(\u533a\u522b6)\uff1b \u62e6\u622a\u5668\u7684preHandle\u3001postHanle\u3001afterCompletion\u4e2d\u7684request\u3001response\u7c7b\u578b\u4e3aHttpRequesr\u3001HttpResponse; <mvc:interceptors> <mvc:interceptor> <!--/** \u5305\u62ec\u8def\u5f84\u53ca\u5176\u5b50\u8def\u5f84--> <!--/admin/* \u62e6\u622a\u7684\u662f/admin/add\u7b49\u7b49\u8fd9\u79cd , /admin/add/user\u4e0d\u4f1a\u88ab\u62e6\u622a--> <!--/admin/** \u62e6\u622a\u7684\u662f/admin/\u4e0b\u7684\u6240\u6709--> <mvc:mapping path=\"/**\"/> <!--\u6307\u5411\u62e6\u622a\u5668--> <bean class=\"com.kuanwhg.interceptor.MyInterceptor\"/> </mvc:interceptor> </mvc:interceptors> \u8fc7\u6ee4\u5668\u662f\u7531servlet\u89c4\u8303\u5b9a\u4e49\u7684\uff0c\u53ea\u80fd\u7528\u4e8eWeb\u7a0b\u5e8f\u4e2d(\u533a\u522b2)\uff1b\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\u901a\u5e38\u5b9e\u73b0javax.servlet.Filter\u63a5\u53e3\uff0c \u7531\u62e6\u622a\u65f6\u673a\u53ef\u4ee5\u770b\u5230\uff0c\u8fc7\u6ee4\u5668\u53ea\u5728servlet\u524d\u8d77\u4f5c\u7528\uff0c\u8fc7\u6ee4\u5668\u4e2ddoFilter\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u4e5f\u662fServletRequest\u3001ServletResponse; AJAX Asynchronous JavaScript and XML\uff08\u5f02\u6b65\u7684 JavaScript \u548c XML\uff09\u3002 AJAX \u662f\u4e00\u79cd\u5728\u65e0\u9700\u91cd\u65b0\u52a0\u8f7d\u6574\u4e2a\u7f51\u9875\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u591f\u66f4\u65b0\u90e8\u5206\u7f51\u9875\u7684\u6280\u672f\u3002Ajax \u4e0d\u662f\u4e00\u79cd\u65b0\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u800c\u662f\u4e00\u79cd\u7528\u4e8e\u521b\u5efa\u66f4\u597d\u66f4\u5feb\u4ee5\u53ca\u4ea4\u4e92\u6027\u66f4\u5f3a\u7684Web\u5e94\u7528\u7a0b\u5e8f\u7684\u6280\u672f\u3002 Ajax\u7684\u6838\u5fc3\u662fXMLHttpRequest\u5bf9\u8c61(XHR)\u3002XHR\u4e3a\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u548c\u89e3\u6790\u670d\u52a1\u5668\u54cd\u5e94\u63d0\u4f9b\u4e86\u63a5\u53e3\u3002\u80fd\u591f\u4ee5\u5f02\u6b65\u65b9\u5f0f\u4ece\u670d\u52a1\u5668\u83b7\u53d6\u65b0\u6570\u636e\u3002 jQuery \u63d0\u4f9b\u591a\u4e2a\u4e0e AJAX \u6709\u5173\u7684\u65b9\u6cd5\u3002\u901a\u8fc7 jQuery AJAX \u65b9\u6cd5\uff0c\u80fd\u591f\u4f7f\u7528 HTTP Get \u548c HTTP Post \u4ece\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u8bf7\u6c42\u6587\u672c\u3001HTML\u3001XML \u6216 JSON, \u540c\u65f6\u80fd\u591f\u628a\u8fd9\u4e9b\u5916\u90e8\u6570\u636e\u76f4\u63a5\u8f7d\u5165\u7f51\u9875\u7684\u88ab\u9009\u5143\u7d20\u4e2d\u3002 jQuery Ajax\u672c\u8d28\u5c31\u662f XMLHttpRequest\uff0c\u5bf9\u5b83\u8fdb\u884c\u4e86\u5c01\u88c5\uff0c\u65b9\u4fbf\u8c03\u7528\u3002","title":"SpingMVC \u6267\u884c\u539f\u7406"},{"location":"Java/5_Spring/#springboot","text":"","title":"SpringBoot"},{"location":"Java/5_Spring/#_8","text":"pom.xml java\u5143\u6ce8\u89e3 @Target \u8868\u793a\u8be5\u6ce8\u89e3\u7528\u4e8e\u4ec0\u4e48\u5730\u65b9\uff0c\u53ef\u80fd\u7684\u503c\u5728\u679a\u4e3e\u7c7b ElemenetType \u4e2d\uff0c\u5305\u62ec\uff1a ElemenetType.CONSTRUCTOR-----------------------------\u6784\u9020\u5668\u58f0\u660e ElemenetType.FIELD ----------------------------------\u57df\u58f0\u660e\uff08\u5305\u62ec enum \u5b9e\u4f8b\uff09 ElemenetType.LOCAL_VARIABLE------------------------- \u5c40\u90e8\u53d8\u91cf\u58f0\u660e ElemenetType.METHOD ---------------------------------\u65b9\u6cd5\u58f0\u660e ElemenetType.PACKAGE --------------------------------\u5305\u58f0\u660e ElemenetType.PARAMETER ------------------------------\u53c2\u6570\u58f0\u660e ElemenetType.TYPE----------------------------------- \u7c7b\uff0c\u63a5\u53e3\uff08\u5305\u62ec\u6ce8\u89e3\u7c7b\u578b\uff09\u6216enum\u58f0\u660e @Retention \u8868\u793a\u5728\u4ec0\u4e48\u7ea7\u522b\u4fdd\u5b58\u8be5\u6ce8\u89e3\u4fe1\u606f\u3002\u53ef\u9009\u7684\u53c2\u6570\u503c\u5728\u679a\u4e3e\u7c7b\u578b RetentionPolicy \u4e2d\uff0c\u5305\u62ec\uff1a RetentionPolicy.SOURCE-------------\u6ce8\u89e3\u5c06\u88ab\u7f16\u8bd1\u5668\u4e22\u5f03 RetentionPolicy.CLASS -------------\u6ce8\u89e3\u5728class\u6587\u4ef6\u4e2d\u53ef\u7528\uff0c\u4f46\u4f1a\u88abVM\u4e22\u5f03 RetentionPolicy.RUNTIME ---------VM\u5c06\u5728\u8fd0\u884c\u671f\u4e5f\u4fdd\u7559\u6ce8\u91ca\uff0c\u56e0\u6b64\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u673a\u5236\u8bfb\u53d6\u6ce8\u89e3\u7684\u4fe1\u606f\u3002 @Documented \u5c06\u6b64\u6ce8\u89e3\u5305\u542b\u5728 javadoc \u4e2d \uff0c\u5b83\u4ee3\u8868\u7740\u6b64\u6ce8\u89e3\u4f1a\u88abjavadoc\u5de5\u5177\u63d0\u53d6\u6210\u6587\u6863\u3002\u5728doc\u6587\u6863\u4e2d\u7684\u5185\u5bb9\u4f1a\u56e0\u4e3a\u6b64 \u6ce8\u89e3\u7684\u4fe1\u606f\u5185\u5bb9\u4e0d\u540c\u800c\u4e0d\u540c\u3002\u76f8\u5f53\u4e0e@see,@param \u7b49\u3002 @Inherited \u5141\u8bb8\u5b50\u7c7b\u7ee7\u627f\u7236\u7c7b\u4e2d\u7684\u6ce8\u89e3 \u4e3b\u542f\u52a8\u7c7b\u6ce8\u89e3 \u4e3b\u542f\u52a8\u7c7b /* SpringApplication \u8fd9\u4e2a\u7c7b\u4e3b\u8981\u505a\u4e86\u4ee5\u4e0b\u56db\u4ef6\u4e8b\u60c5\uff1a 1\u3001\u63a8\u65ad\u5e94\u7528\u7684\u7c7b\u578b\u662f\u666e\u901a\u7684\u9879\u76ee\u8fd8\u662fWeb\u9879\u76ee 2\u3001\u67e5\u627e\u5e76\u52a0\u8f7d\u6240\u6709\u53ef\u7528\u521d\u59cb\u5316\u5668 \uff0c \u8bbe\u7f6e\u5230initializers\u5c5e\u6027\u4e2d 3\u3001\u627e\u51fa\u6240\u6709\u7684\u5e94\u7528\u7a0b\u5e8f\u76d1\u542c\u5668\uff0c\u8bbe\u7f6e\u5230listeners\u5c5e\u6027\u4e2d 4\u3001\u63a8\u65ad\u5e76\u8bbe\u7f6emain\u65b9\u6cd5\u7684\u5b9a\u4e49\u7c7b\uff0c\u627e\u5230\u8fd0\u884c\u7684\u4e3b\u7c7b */ public SpringApplication(ResourceLoader resourceLoader, Class<?>... primarySources) { this.resourceLoader = resourceLoader; Assert.notNull(primarySources, \"PrimarySources must not be null\"); this.primarySources = new LinkedHashSet<>(Arrays.asList(primarySources)); this.webApplicationType = WebApplicationType.deduceFromClasspath(); this.bootstrapRegistryInitializers = getBootstrapRegistryInitializersFromSpringFactories(); setInitializers((Collection) getSpringFactoriesInstances(ApplicationContextInitializer.class)); setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.class)); this.mainApplicationClass = deduceMainApplicationClass(); } \u81ea\u52a8\u88c5\u914d\u539f\u7406 SpringBoot\u5728Spring.factories\u4e2d\u63d0\u4f9b\u4e86\u5927\u91cf\u914d\u7f6e\u7c7b xxxAutoConfiguration \uff0c\u53ef\u4ee5\u88abIOC\u5bb9\u5668\u63a5\u7ba1\uff1b \u8fd9\u4e9b\u914d\u7f6e\u7c7b\u662f\u5426\u751f\u6548\u53d6\u51b3\u4e8e@ConditionalOnxxx()\u4e2d\u7684\u6761\u4ef6\u662f\u5426\u6ee1\u8db3\uff1b\u5f53\u914d\u7f6e\u7c7b\u751f\u6548\u65f6\uff0c\u5219\u4f1a\u5411IOC\u5bb9\u5668\u4e2d\u6dfb\u52a0\u8bb8\u591a\u7ec4\u4ef6\uff0c\u8fd9\u4e9b\u7ec4\u4ef6\u7684\u5c5e\u6027\u5219\u4ece\u4e0e xxxAutoConfiguration \u5bf9\u5e94\u7684xxxProperites\u7c7b\u4e2d\u83b7\u53d6\u9ed8\u8ba4\u503c\uff1b xxxProperties\u4e2d\u7684\u5c5e\u6027\u53ef\u4ee5\u5728\u914d\u7f6e\u6587\u4ef6 application.yml/application.properties\u4e2d\u4fee\u6539\uff0c\u8fd9\u6837 xxxAutoConfiguration \u83b7\u53d6\u5230\u7684\u5c06\u662f\u6307\u5b9a\u7684\u5c5e\u6027\u503c\uff1b //\u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u6839\u636e server \u6807\u7b7e\uff0c\u83b7\u53d6\u6307\u5b9a\u7684\u503c\u548cxxxProperties\u7c7b\u4e2dbean\u7684\u5c5e\u6027\u8fdb\u884c\u7ed1\u5b9a @ConfigurationProperties(prefix = \"server\", ignoreUnknownFields = true) public class ServerProperties {...}","title":"\u8fd0\u884c\u539f\u7406\u521d\u63a2"},{"location":"Java/5_Spring/#springboot-web","text":"\u9759\u6001\u8d44\u6e90 //WebMvcAutoConfiguration.java /* \u5982\u679c\u5df2\u7ecf\u6307\u5b9a\u9759\u6001\u8d44\u6e90\u76ee\u5f55(addMappings\u5c5e\u6027\u4e3afalse), \u5219\u4f1a\u63d0\u793a\u9ed8\u8ba4\u8d44\u6e90\u5904\u7406\u4f1a\u5931\u6548\uff1b \u5426\u5219: \u5bf9\u4e8e \u6839\u76ee\u5f55/webjars/** \u4e0b\u7684\u8d44\u6e90\u8bbf\u95ee\uff0c\u4f1a\u5230classpath:/META-INF/resources/webjars/\u4e0b\u5bfb\u627e\uff1b \u5bf9\u4e8e \u6839\u76ee\u5f55/ \u4e0b\u7684\u8d44\u6e90\u8bbf\u95ee\uff0c\u4f1a\u5230 { \"classpath:/META-INF/resources/\", \"classpath:/resources/\", \"classpath:/static/\", \"classpath:/public/\" } \u4e0b\u5bfb\u627e\uff0c \u5bfb\u627e\u4f18\u5148\u7ea7\u4e5f\u6309\u6b64\u987a\u5e8f \u6839\u76ee\u5f55\u5373 ip\u5730\u5740:\u7aef\u53e3\u53f7\uff0c\u5982localhost:8080\uff1b classpath \u6307 resources\u76ee\u5f55\uff0c\u5f15\u5165\u7684\u5916\u90e8\u5305\uff0c\u4e5f\u662f\u4f4d\u4e8eresources\u76ee\u5f55\u4e0b */ public void addResourceHandlers(ResourceHandlerRegistry registry) { if (!this.resourceProperties.isAddMappings()) { logger.debug(\"Default resource handling disabled\"); return; } // addResourceHandler(registry, \u6a21\u5f0f, \u4f4d\u7f6e) addResourceHandler(registry, \"/webjars/**\", \"classpath:/META-INF/resources/webjars/\"); addResourceHandler(registry, this.mvcProperties.getStaticPathPattern(), (registration) -> { registration.addResourceLocations(this.resourceProperties.getStaticLocations()); if (this.servletContext != null) { ServletContextResource resource = new ServletContextResource(this.servletContext, SERVLET_LOCATION); registration.addResourceLocations(resource); } }); }","title":"SpringBoot web\u5f00\u53d1"},{"location":"Java/Jinterview/","text":"Java\u9762\u8bd5 \u57fa\u7840\u8bed\u6cd5 JDK && JRE \u901a\u5e38\u628aJava\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u3001Java\u865a\u62df\u673a\u3001Java API\u7c7b\u5e93\u8fd9\u4e09\u90e8\u5206\u7edf\u79f0\u4e3aJDK(Java Development Kit)\uff0c\u662f\u7528\u4e8e\u652f\u6301Java\u7a0b\u5e8f\u8bbe\u8ba1\u5f00\u53d1\u7684\u6700\u5c0f\u73af\u5883; \u800c\u628aJava API\u7c7b\u5e93\u4e2d\u7684Java SE API\u5b50\u96c6\u548cJava \u865a\u62df\u673a\u8fd9\u4e24\u90e8\u5206\u7edf\u79f0\u4e3aJRE(Java Runtime Environment)\uff0c\u662f\u652f\u6301\u7a0b\u5e8f\u8fd0\u884c\u7684\u6807\u51c6\u73af\u5883\u3002 \u5173\u4e8e\u6cdb\u578b Java\u6cdb\u578b\u7684\u539f\u7406\uff1f\u4ec0\u4e48\u662f\u6cdb\u578b\u64e6\u9664\u673a\u5236\uff1f Java\u7684\u6cdb\u578b\u662fJDK5\u65b0\u5f15\u5165\u7684\u7279\u6027\uff0c\u4e3a\u4e86\u5411\u4e0b\u517c\u5bb9\uff0c\u865a\u62df\u673a\u5176\u5b9e\u662f\u4e0d\u652f\u6301\u6cdb\u578b\uff0c\u6240\u4ee5Java\u5b9e\u73b0\u7684\u662f\u4e00\u79cd\u4f2a\u6cdb\u578b\u673a\u5236\uff0c\u4e5f\u5c31\u662f\u8bf4Java\u5728\u7f16\u8bd1\u671f\u64e6\u9664\u4e86\u6240\u6709\u7684\u6cdb\u578b\u4fe1\u606f\uff0c\u8fd9\u6837Java\u5c31\u4e0d\u9700\u8981\u4ea7\u751f\u65b0\u7684\u7c7b\u578b\u5230\u5b57\u8282\u7801\uff0c\u6240\u6709\u7684\u6cdb\u578b\u7c7b\u578b\u6700\u7ec8\u90fd\u662f\u4e00\u79cd\u539f\u59cb\u7c7b\u578b\uff0c\u5728Java\u8fd0\u884c\u65f6\u6839\u672c\u5c31\u4e0d\u5b58\u5728\u6cdb\u578b\u4fe1\u606f\u3002 \u7c7b\u578b\u64e6\u9664\u5176\u5b9e\u5728\u7c7b\u5e38\u91cf\u6c60\u4e2d\u4fdd\u5b58\u4e86\u6cdb\u578b\u4fe1\u606f\uff0c\u8fd0\u884c\u65f6\u8fd8\u80fd\u62ff\u5230\u4fe1\u606f\u3002 \u6cdb\u578b\u7b97\u6cd5\u5b9e\u73b0\u7684\u5173\u952e\uff1a\u5229\u7528\u53d7\u9650\u7c7b\u578b\u53c2\u6570\u3002 Java\u4e2dList< Object >\u548c\u539f\u59cb\u7c7b\u578bList\u4e4b\u95f4\u7684\u533a\u522b? \u4e3b\u8981\u533a\u522b\u662f\uff0c\u5728\u7f16\u8bd1\u65f6\u7f16\u8bd1\u5668\u4e0d\u4f1a\u5bf9\u539f\u59cb\u7c7b\u578b\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u5374\u4f1a\u5bf9\u5e26\u53c2\u6570\u7684\u7c7b\u578b\u8fdb\u884c\u68c0\u67e5\uff0c\u901a\u8fc7\u4f7f\u7528Object\u4f5c\u4e3a\u7c7b\u578b\uff0c\u53ef\u4ee5\u544a\u77e5\u7f16\u8bd1\u5668\u8be5\u65b9\u6cd5\u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u6bd4\u5982String\u6216Integer\u3002 \u5b83\u4eec\u4e4b\u95f4\u7684\u7b2c\u4e8c\u70b9\u533a\u522b\u662f\uff0c\u4f60\u53ef\u4ee5\u628a\u4efb\u4f55\u5e26\u53c2\u6570\u7684\u6cdb\u578b\u7c7b\u578b\u4f20\u9012\u7ed9\u63a5\u53d7\u539f\u59cb\u7c7b\u578bList\u7684\u65b9\u6cd5\uff0c \u4f46\u5374\u4e0d\u80fd\u628aList< String >\u4f20\u9012\u7ed9\u63a5\u53d7List< Object >\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\u3002 Java\u4e2dSet\u4e0eSet<?>\u5230\u5e95\u533a\u522b\u5728\u54ea\uff1f Set\u53ef\u4ee5\u652f\u6301\u6dfb\u52a0\u6570\u636e\uff0c\u5e76\u4e14\u4e0d\u4f1a\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u4f46\u662fSet<?> \u662f\u652f\u6301\u7c7b\u578b\u68c0\u67e5\u7684\u3002 Java\u4e2dList<?>\u548cList< Object >\u4e4b\u95f4\u7684\u533a\u522b\u662f\u4ec0\u4e48? \u867d\u7136\u4ed6\u4eec\u90fd\u4f1a\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u5b9e\u8d28\u4e0a\u5374\u5b8c\u5168\u4e0d\u540c\u3002List<?> \u662f\u4e00\u4e2a\u672a\u77e5\u7c7b\u578b\u7684List\uff0c\u800cList< Object >\u5176\u5b9e\u662f\u4efb\u610f\u7c7b\u578b\u7684List\u3002\u4f60\u53ef\u4ee5\u628aList< String >, List< Integer >\u8d4b\u503c\u7ed9List<?>\uff0c\u5374\u4e0d\u80fd\u628aList< String > \u8d4b\u503c\u7ed9List< Object >\u3002 \u4ec0\u4e48\u662f\u6cdb\u578b\u4e2d\u975e\u9650\u5b9a\u901a\u914d\u7b26\uff1f < ? > \u975e\u9650\u5b9a\u901a\u914d\u7b26\u65e2\u4e0d\u80fd\u5b58\u4e5f\u4e0d\u80fd\u53d6, \u4e00\u822c\u4f7f\u7528\u975e\u9650\u5b9a\u901a\u914d\u7b26\u53ea\u6709\u4e00\u4e2a\u76ee\u7684\uff0c\u5c31\u662f\u4e3a\u4e86\u7075\u6d3b\u7684\u8f6c\u578b\u3002 \u5176\u5b9eList<?> \u7b49\u4e8e List< ? extends Object >\u3002 C++\u6a21\u677f\u548cjava\u6cdb\u578b\u4e4b\u95f4\u6709\u4f55\u4e0d\u540c\uff1f java\u6cdb\u578b\u5b9e\u73b0\u6839\u690d\u4e8e\u201c\u7c7b\u578b\u6d88\u9664\u201d\u8fd9\u4e00\u6982\u5ff5\u3002\u5f53\u6e90\u4ee3\u7801\u88ab\u8f6c\u6362\u4e3aJava\u865a\u62df\u673a\u5b57\u8282\u7801\u65f6\uff0c\u8fd9\u79cd\u6280\u672f\u4f1a\u6d88\u9664\u53c2\u6570\u5316\u7c7b\u578b\u3002\u6709\u4e86Java\u6cdb\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\u4e5f\u5e76\u6ca1\u6709\u771f\u6b63\u6539\u53d8\u591a\u5c11\u5b83\u4ed6\u53ea\u662f\u8ba9\u4ee3\u7801\u53d8\u5f97\u6f02\u4eae\u4e9b\u3002\u9274\u4e8e\u6b64\uff0cJava\u6cdb\u578b\u6709\u65f6\u4e5f\u88ab\u79f0\u4e3a\u201c\u8bed\u6cd5\u7cd6\u201d\u3002 \u8fd9\u548c C++\u6a21\u677f\u622a\u7136\u4e0d\u540c\u3002\u5728 C++\u4e2d\uff0c\u6a21\u677f\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u5957\u5b8f\u6307\u4ee4\u96c6\uff0c\u53ea\u662f\u6362\u4e86\u4e2a\u540d\u5934\uff0c\u7f16\u8bd1\u5668\u4f1a\u9488\u5bf9\u6bcf\u79cd\u7c7b\u578b\u521b\u5efa\u4e00\u4efd\u6a21\u677f\u4ee3\u7801\u7684\u526f\u672c\u3002 \u7531\u4e8e\u67b6\u6784\u8bbe\u8ba1\u4e0a\u7684\u5dee\u5f02\uff0cJava\u6cdb\u578b\u548cC++\u6a21\u677f\u6709\u5f88\u591a\u4e0d\u540c\u70b9: C++\u6a21\u677f\u53ef\u4ee5\u4f7f\u7528int\u7b49\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002Java\u5219\u4e0d\u884c\uff0c\u5fc5\u987b\u8f6c\u800c\u4f7f\u7528Integer\u3002 \u5728Java\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u9650\u5b9a\uff0c\u6bd4C++\u4e2d\u6a21\u677f\u7279\u5316\u6709\u66f4\u65b9\u4fbf\u7684\u4f7f\u7528\u548c\u66f4\u5f3a\u7684\u7ea6\u675f\u3002 \u5728C++\u4e2d\uff0c\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u5b9e\u4f8b\u5316\uff0c\u4f46java\u4e0d\u652f\u6301\u3002 \u5728Java\u4e2d\uff0c \u7c7b\u578b\u53c2\u6570\u4e0d\u80fd\u7528\u4e8e\u9759\u6001\u65b9\u6cd5\u548c\u53d8\u91cf\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u88ab\u4e0d\u540c\u7c7b\u578b\u53c2\u6570\u6307\u5b9a\u7684\u5b9e\u4f8b\u5171\u4eab \u3002 \u5728C++\uff0c\u8fd9\u4e9b\u7c7b\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u6b64\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u7528\u4e8e\u9759\u6001\u65b9\u6cd5\u548c\u9759\u6001\u53d8\u91cf\u3002 \u5728Java\u4e2d\uff0c\u4e0d\u7ba1\u7c7b\u578b\u53c2\u6570\u662f\u4ec0\u4e48\uff0c\u6240\u6709\u7684\u5b9e\u4f8b\u53d8\u91cf\u90fd\u662f\u540c\u4e00\u7c7b\u578b\u3002\u7c7b\u578b\u53c2\u6570\u4f1a\u5728\u8fd0\u884c\u65f6\u88ab\u62b9\u53bb\u3002 \u5728C++\u4e2d\uff0c\u7c7b\u578b\u53c2\u6570\u4e0d\u540c\uff0c\u5b9e\u4f8b\u53d8\u91cf\u4e5f\u4e0d\u540c\u3002","title":"Java\u9762\u8bd5"},{"location":"Java/Jinterview/#java","text":"","title":"Java\u9762\u8bd5"},{"location":"Java/Jinterview/#_1","text":"JDK && JRE \u901a\u5e38\u628aJava\u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u3001Java\u865a\u62df\u673a\u3001Java API\u7c7b\u5e93\u8fd9\u4e09\u90e8\u5206\u7edf\u79f0\u4e3aJDK(Java Development Kit)\uff0c\u662f\u7528\u4e8e\u652f\u6301Java\u7a0b\u5e8f\u8bbe\u8ba1\u5f00\u53d1\u7684\u6700\u5c0f\u73af\u5883; \u800c\u628aJava API\u7c7b\u5e93\u4e2d\u7684Java SE API\u5b50\u96c6\u548cJava \u865a\u62df\u673a\u8fd9\u4e24\u90e8\u5206\u7edf\u79f0\u4e3aJRE(Java Runtime Environment)\uff0c\u662f\u652f\u6301\u7a0b\u5e8f\u8fd0\u884c\u7684\u6807\u51c6\u73af\u5883\u3002","title":"\u57fa\u7840\u8bed\u6cd5"},{"location":"Java/Jinterview/#_2","text":"Java\u6cdb\u578b\u7684\u539f\u7406\uff1f\u4ec0\u4e48\u662f\u6cdb\u578b\u64e6\u9664\u673a\u5236\uff1f Java\u7684\u6cdb\u578b\u662fJDK5\u65b0\u5f15\u5165\u7684\u7279\u6027\uff0c\u4e3a\u4e86\u5411\u4e0b\u517c\u5bb9\uff0c\u865a\u62df\u673a\u5176\u5b9e\u662f\u4e0d\u652f\u6301\u6cdb\u578b\uff0c\u6240\u4ee5Java\u5b9e\u73b0\u7684\u662f\u4e00\u79cd\u4f2a\u6cdb\u578b\u673a\u5236\uff0c\u4e5f\u5c31\u662f\u8bf4Java\u5728\u7f16\u8bd1\u671f\u64e6\u9664\u4e86\u6240\u6709\u7684\u6cdb\u578b\u4fe1\u606f\uff0c\u8fd9\u6837Java\u5c31\u4e0d\u9700\u8981\u4ea7\u751f\u65b0\u7684\u7c7b\u578b\u5230\u5b57\u8282\u7801\uff0c\u6240\u6709\u7684\u6cdb\u578b\u7c7b\u578b\u6700\u7ec8\u90fd\u662f\u4e00\u79cd\u539f\u59cb\u7c7b\u578b\uff0c\u5728Java\u8fd0\u884c\u65f6\u6839\u672c\u5c31\u4e0d\u5b58\u5728\u6cdb\u578b\u4fe1\u606f\u3002 \u7c7b\u578b\u64e6\u9664\u5176\u5b9e\u5728\u7c7b\u5e38\u91cf\u6c60\u4e2d\u4fdd\u5b58\u4e86\u6cdb\u578b\u4fe1\u606f\uff0c\u8fd0\u884c\u65f6\u8fd8\u80fd\u62ff\u5230\u4fe1\u606f\u3002 \u6cdb\u578b\u7b97\u6cd5\u5b9e\u73b0\u7684\u5173\u952e\uff1a\u5229\u7528\u53d7\u9650\u7c7b\u578b\u53c2\u6570\u3002 Java\u4e2dList< Object >\u548c\u539f\u59cb\u7c7b\u578bList\u4e4b\u95f4\u7684\u533a\u522b? \u4e3b\u8981\u533a\u522b\u662f\uff0c\u5728\u7f16\u8bd1\u65f6\u7f16\u8bd1\u5668\u4e0d\u4f1a\u5bf9\u539f\u59cb\u7c7b\u578b\u8fdb\u884c\u7c7b\u578b\u5b89\u5168\u68c0\u67e5\uff0c\u5374\u4f1a\u5bf9\u5e26\u53c2\u6570\u7684\u7c7b\u578b\u8fdb\u884c\u68c0\u67e5\uff0c\u901a\u8fc7\u4f7f\u7528Object\u4f5c\u4e3a\u7c7b\u578b\uff0c\u53ef\u4ee5\u544a\u77e5\u7f16\u8bd1\u5668\u8be5\u65b9\u6cd5\u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u6bd4\u5982String\u6216Integer\u3002 \u5b83\u4eec\u4e4b\u95f4\u7684\u7b2c\u4e8c\u70b9\u533a\u522b\u662f\uff0c\u4f60\u53ef\u4ee5\u628a\u4efb\u4f55\u5e26\u53c2\u6570\u7684\u6cdb\u578b\u7c7b\u578b\u4f20\u9012\u7ed9\u63a5\u53d7\u539f\u59cb\u7c7b\u578bList\u7684\u65b9\u6cd5\uff0c \u4f46\u5374\u4e0d\u80fd\u628aList< String >\u4f20\u9012\u7ed9\u63a5\u53d7List< Object >\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u4f1a\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef\u3002 Java\u4e2dSet\u4e0eSet<?>\u5230\u5e95\u533a\u522b\u5728\u54ea\uff1f Set\u53ef\u4ee5\u652f\u6301\u6dfb\u52a0\u6570\u636e\uff0c\u5e76\u4e14\u4e0d\u4f1a\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u4f46\u662fSet<?> \u662f\u652f\u6301\u7c7b\u578b\u68c0\u67e5\u7684\u3002 Java\u4e2dList<?>\u548cList< Object >\u4e4b\u95f4\u7684\u533a\u522b\u662f\u4ec0\u4e48? \u867d\u7136\u4ed6\u4eec\u90fd\u4f1a\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u5b9e\u8d28\u4e0a\u5374\u5b8c\u5168\u4e0d\u540c\u3002List<?> \u662f\u4e00\u4e2a\u672a\u77e5\u7c7b\u578b\u7684List\uff0c\u800cList< Object >\u5176\u5b9e\u662f\u4efb\u610f\u7c7b\u578b\u7684List\u3002\u4f60\u53ef\u4ee5\u628aList< String >, List< Integer >\u8d4b\u503c\u7ed9List<?>\uff0c\u5374\u4e0d\u80fd\u628aList< String > \u8d4b\u503c\u7ed9List< Object >\u3002 \u4ec0\u4e48\u662f\u6cdb\u578b\u4e2d\u975e\u9650\u5b9a\u901a\u914d\u7b26\uff1f < ? > \u975e\u9650\u5b9a\u901a\u914d\u7b26\u65e2\u4e0d\u80fd\u5b58\u4e5f\u4e0d\u80fd\u53d6, \u4e00\u822c\u4f7f\u7528\u975e\u9650\u5b9a\u901a\u914d\u7b26\u53ea\u6709\u4e00\u4e2a\u76ee\u7684\uff0c\u5c31\u662f\u4e3a\u4e86\u7075\u6d3b\u7684\u8f6c\u578b\u3002 \u5176\u5b9eList<?> \u7b49\u4e8e List< ? extends Object >\u3002 C++\u6a21\u677f\u548cjava\u6cdb\u578b\u4e4b\u95f4\u6709\u4f55\u4e0d\u540c\uff1f java\u6cdb\u578b\u5b9e\u73b0\u6839\u690d\u4e8e\u201c\u7c7b\u578b\u6d88\u9664\u201d\u8fd9\u4e00\u6982\u5ff5\u3002\u5f53\u6e90\u4ee3\u7801\u88ab\u8f6c\u6362\u4e3aJava\u865a\u62df\u673a\u5b57\u8282\u7801\u65f6\uff0c\u8fd9\u79cd\u6280\u672f\u4f1a\u6d88\u9664\u53c2\u6570\u5316\u7c7b\u578b\u3002\u6709\u4e86Java\u6cdb\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u505a\u7684\u4e8b\u60c5\u4e5f\u5e76\u6ca1\u6709\u771f\u6b63\u6539\u53d8\u591a\u5c11\u5b83\u4ed6\u53ea\u662f\u8ba9\u4ee3\u7801\u53d8\u5f97\u6f02\u4eae\u4e9b\u3002\u9274\u4e8e\u6b64\uff0cJava\u6cdb\u578b\u6709\u65f6\u4e5f\u88ab\u79f0\u4e3a\u201c\u8bed\u6cd5\u7cd6\u201d\u3002 \u8fd9\u548c C++\u6a21\u677f\u622a\u7136\u4e0d\u540c\u3002\u5728 C++\u4e2d\uff0c\u6a21\u677f\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u5957\u5b8f\u6307\u4ee4\u96c6\uff0c\u53ea\u662f\u6362\u4e86\u4e2a\u540d\u5934\uff0c\u7f16\u8bd1\u5668\u4f1a\u9488\u5bf9\u6bcf\u79cd\u7c7b\u578b\u521b\u5efa\u4e00\u4efd\u6a21\u677f\u4ee3\u7801\u7684\u526f\u672c\u3002 \u7531\u4e8e\u67b6\u6784\u8bbe\u8ba1\u4e0a\u7684\u5dee\u5f02\uff0cJava\u6cdb\u578b\u548cC++\u6a21\u677f\u6709\u5f88\u591a\u4e0d\u540c\u70b9: C++\u6a21\u677f\u53ef\u4ee5\u4f7f\u7528int\u7b49\u57fa\u672c\u6570\u636e\u7c7b\u578b\u3002Java\u5219\u4e0d\u884c\uff0c\u5fc5\u987b\u8f6c\u800c\u4f7f\u7528Integer\u3002 \u5728Java\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u7c7b\u578b\u9650\u5b9a\uff0c\u6bd4C++\u4e2d\u6a21\u677f\u7279\u5316\u6709\u66f4\u65b9\u4fbf\u7684\u4f7f\u7528\u548c\u66f4\u5f3a\u7684\u7ea6\u675f\u3002 \u5728C++\u4e2d\uff0c\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u5b9e\u4f8b\u5316\uff0c\u4f46java\u4e0d\u652f\u6301\u3002 \u5728Java\u4e2d\uff0c \u7c7b\u578b\u53c2\u6570\u4e0d\u80fd\u7528\u4e8e\u9759\u6001\u65b9\u6cd5\u548c\u53d8\u91cf\uff0c\u56e0\u4e3a\u5b83\u4eec\u4f1a\u88ab\u4e0d\u540c\u7c7b\u578b\u53c2\u6570\u6307\u5b9a\u7684\u5b9e\u4f8b\u5171\u4eab \u3002 \u5728C++\uff0c\u8fd9\u4e9b\u7c7b\u662f\u4e0d\u540c\u7684\uff0c\u56e0\u6b64\u7c7b\u578b\u53c2\u6570\u53ef\u4ee5\u7528\u4e8e\u9759\u6001\u65b9\u6cd5\u548c\u9759\u6001\u53d8\u91cf\u3002 \u5728Java\u4e2d\uff0c\u4e0d\u7ba1\u7c7b\u578b\u53c2\u6570\u662f\u4ec0\u4e48\uff0c\u6240\u6709\u7684\u5b9e\u4f8b\u53d8\u91cf\u90fd\u662f\u540c\u4e00\u7c7b\u578b\u3002\u7c7b\u578b\u53c2\u6570\u4f1a\u5728\u8fd0\u884c\u65f6\u88ab\u62b9\u53bb\u3002 \u5728C++\u4e2d\uff0c\u7c7b\u578b\u53c2\u6570\u4e0d\u540c\uff0c\u5b9e\u4f8b\u53d8\u91cf\u4e5f\u4e0d\u540c\u3002","title":"\u5173\u4e8e\u6cdb\u578b"},{"location":"MySQL/0_start/","text":"\u6570\u636e\u5e93\u5165\u95e8 \u57fa\u7840\u6982\u5ff5 \u6570\u636e\u7c7b\u578b: \u6bcf\u4e2a\u8868\u5217\u90fd\u6709\u76f8\u5e94\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5141\u8bb8\u8be5\u5217\u4e2d\u53ef\u4ee5\u5b58\u50a8\u7684\u6570\u636e\u3002 \u6570\u503c\u7c7b\u578b: \u5305\u62ec\u4e25\u683c\u6570\u503c\u6570\u636e\u7c7b\u578b(INTEGER\u3001SMALLINT\u3001DECIMAL\u548cNUMERIC)\uff0c\u4ee5\u53ca\u8fd1\u4f3c\u6570\u503c\u6570\u636e\u7c7b\u578b (FLOAT\u3001REAL\u548cDOUBLE PRECISION)\u3002\u5173\u952e\u5b57INT\u662fINTEGER\u7684\u540c\u4e49\u8bcd\uff0c\u5173\u952e\u5b57DEC\u662fDECIMAL\u7684\u540c\u4e49\u8bcd\u3002 \u2003 \u65e5\u671f\u548c\u65f6\u95f4\u7c7b\u578b:\u6709 DATETIME(YYYY-MM-DD HH:MM:SS)\u3001TIMESTAMP(YYYYMMDD HHMMSS)\u3001\u548cDATE(YYYY-MM-DD)\u3001 TIME(HH:MM:SS)\u3001YEAR(YYYY)\u3002 \u2003 \u5b57\u7b26\u4e32\u7c7b\u578b: \u5305\u542bCHAR\u3001VARCHAR\u3001BINARY\u3001VARBINARY\u3001BLOB\u3001TEXT\u3001ENUM\u548cSET\uff1b CHAR\u5b9a\u957f\u5b57\u7b26\u4e32\uff0c\u7279\u70b9: \u5b58\u50a8\u7a7a\u95f4\u56fa\u5b9a\u3002 \u957f\u5ea6\u4e0d\u591f\u65f6\u5185\u90e8\u5b58\u50a8\u4f7f\u7528\u7a7a\u683c\u586b\u5145\u3002 \u82e5\u5b57\u6bb5\u672c\u8eab\u672b\u5c3e\u5b58\u5728\u7a7a\u683c\uff0c\u68c0\u7d22\u51fa\u6765\u81ea\u52a8\u622a\u65ad\u672b\u5c3e\u7a7a\u683c\uff08\u56e0\u4e3a\u5206\u4e0d\u6e05\u7a7a\u683c\u662f\u5b57\u6bb5\u542b\u6709\u7684\u8fd8\u662f\u586b\u5145\u4ea7\u751f\u7684\uff09\u3002 \u82e5\u5b57\u6bb5\u672c\u8eab\u524d\u7aef\u5b58\u5728\u7a7a\u683c\uff0c\u662f\u4e0d\u4f1a\u622a\u65ad\u7684\u3002 \u5f53\u8f93\u5165\u7684\u5b57\u7b26\u957f\u5ea6\u8d85\u8fc7\u6307\u5b9a\u957f\u5ea6\u65f6\uff0cchar\u4f1a\u622a\u53d6\u8d85\u51fa\u7684\u5b57\u7b26\u3002 VARCHAR\u53d8\u957f\u5b57\u7b26\u4e32\uff0c\u7279\u70b9: \u5b58\u50a8\u7a7a\u95f4\u4e0d\u56fa\u5b9a\uff0c\u6839\u636e\u5b57\u6bb5\u957f\u5ea6\u51b3\u5b9a\u3002 \u9700\u8981\u989d\u5916\u76841\u4e2a\u62162\u4e2a\u5b57\u8282\u8bb0\u5f55\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u5c0f\u4e8e255\u5b57\u8282\u4f7f\u75281\u4e2a\u5b57\u8282\uff0c\u5426\u5219\u4f7f\u75282\u4e2a\u3002 \u6700\u5927\u5bb9\u91cf\u4e3a 65535 \u5b57\u8282\uff08\u8fd9\u91cc\u5355\u4f4d\u662f\u5b57\u8282\u800c\u975e\u5b57\u7b26) \u5982\u679c\u5217\u53ef\u4ee5\u4e3anull\uff0c\u5219\u9700\u8981\u989d\u5916\u7684\u4e00\u4e2a\u5b57\u8282\u4f5c\u4e3a\u6807\u5fd7\u3002 \u6700\u5927\u957f\u5ea6 = \u5b57\u6bb5\u957f\u5ea6 + [\u957f\u5ea6\u8bb0\u5f55\uff1a(1\u62162) B] + [null\u6807\u5fd7\u4f4d\uff1a1B] CAHR(M)\u4e2dM\u7684\u8303\u56f4\u662f0~255\uff0cVARCHAR(M)\u4e2dM\u7684\u8303\u56f4\u662f0~65535\uff1bM\u4ee3\u8868\u5b57\u7b26\u4e2a\u6570\uff0c\u6545VARCHAR\u6700\u5927\u5bb9\u91cf\u4e3a65535\u5b57\u8282\u3002 \u5bf9\u4e8eVARCHAR, 4.0\u7248\u672c\u4ee5\u4e0b\uff1avarchar(n)\uff0c\u6307\u7684\u662fn\u4e2a\u5b57\u8282\uff0c\u5982\u679c\u5b58\u653eUTF8\u6c49\u5b57\u65f6\uff0c\u53ea\u80fd\u5b58n/3\u4e2a\uff08\u6bcf\u4e2a\u6c49\u5b573\u5b57\u8282\uff09\u3002 5.0\u7248\u672c\u4ee5\u4e0a\uff1avarchar(n)\uff0c\u6307\u7684\u662fn\u4e2a\u5b57\u7b26\uff0c\u65e0\u8bba\u5b58\u653e\u7684\u662f\u6570\u5b57\u3001\u5b57\u6bcd\u8fd8\u662fUTF8\u6c49\u5b57\uff08\u6bcf\u4e2a\u6c49\u5b573\u5b57\u8282\uff09\uff0c\u90fd\u53ef\u4ee5\u5b58\u653en\u4e2a\uff0c \u8003\u8651\u5230VARCHAR\u6700\u5927\u5bb9\u91cf\uff0c\u6b64\u65f6n\u7684\u5927\u5c0f\u53d7\u5236\u4e8e\u5b57\u7b26\u96c6\uff0c\u5bf9\u4e8eUTF-8\uff0cn\u6700\u5927\u4e3a(65535-2)/3=21844\uff1b \u5bf9\u4e8eGBK\uff0cn\u6700\u5927\u4e3a(65535-2)/2=32766\u3002 \u2003 BINARY \u548c VARBINARY\u7c7b\u4f3c\u4e8e CHAR \u548c VARCHAR\uff0c\u5b58\u50a8\u7684\u662f\u5b57\u8282\u5b57\u7b26\u4e32\uff0c\u5373\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b50\u4e32\uff1b BLOB \u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5927\u5bf9\u8c61\uff0c\u53ef\u4ee5\u5bb9\u7eb3\u53ef\u53d8\u6570\u91cf\u7684\u6570\u636e\u3002\u6709 4 \u79cd BLOB \u7c7b\u578b\uff1aTINYBLOB\u3001BLOB\u3001MEDIUMBLOB \u548c LONGBLOB\u3002 \u5b83\u4eec\u533a\u522b\u5728\u4e8e\u53ef\u5bb9\u7eb3\u5b58\u50a8\u8303\u56f4\u4e0d\u540c\uff1b \u6709 4 \u79cd TEXT \u7c7b\u578b\uff1aTINYTEXT\u3001TEXT\u3001MEDIUMTEXT \u548c LONGTEXT\u3002\u5bf9\u5e94\u7684\u8fd9 4 \u79cd BLOB \u7c7b\u578b\uff0c \u53ef\u5b58\u50a8\u7684\u6700\u5927\u957f\u5ea6\u4e0d\u540c\uff0c\u53ef\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u3002 \u4e3b\u952e(primary key): \u4e00\u5217\u6216\u4e00\u7ec4\u5217\uff0c\u5176\u503c(\u4f7f\u7528\u591a\u5217\uff0c\u5219\u8981\u6c42\u5b83\u4eec\u7684\u7ec4\u5408\u503c)\u80fd\u552f\u4e00\u533a\u5206\u8868\u4e2d\u6bcf\u4e00\u4e2a\u884c\u3002 \u2003\u4efb\u610f\u4e24\u884c\u90fd\u4e0d\u5177\u6709\u76f8\u540c\u7684\u4e3b\u952e\u503c\u3002 \u2003\u6bcf\u4e2a\u884c\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u4e3b\u952e\u503c(\u4e3b\u952e\u5217\u4e0d\u5141\u8bb8\u4e3aNULL\u503c)\u3002 NULL && NOT NULL: \u521b\u5efa\u8868\u65f6\uff0c\u53ef\u4ee5\u5bf9\u5217\u65bd\u52a0\u8fd9\u4e24\u79cd\u7ea6\u675f\uff1b\u5176\u4e2dNOT NULL\uff0c\u610f\u5473\u7740\u63d2\u5165\u65f6\u8be5\u5217\u4e0d\u80fd\u4e3aNULL\uff0c\u4f46\u53ef\u4ee5\u4e3a\u7a7a\u503c(\u4f1a\u5360\u7528\u7a7a\u95f4)\uff1b\u5982\u679c\u662fNULL\uff0c\u5219\u63d2\u5165\u65f6\uff0c\u8be5\u5217\u7684\u503c\u53ef\u4ee5\u4e3aNULL(\u4e0d\u5360\u7528\u7a7a\u95f4)\u3002 \u5916\u952e(foreign key): \u4ee5A\u8868\u4e2d\u7684col\u5217\u5173\u8054B\u8868\u4e2d\u7684col\u5217\uff0c\u8981\u6c42B\u4e2dcol\u5217\u5177\u6709\u552f\u4e00\u6027\u7ea6\u675f\uff0c\u4e00\u822c\u4e3a\u5176\u4e3b\u952e\uff1b\u65bd\u52a0\u7ea6\u675f\u540e\uff0cB\u8868\u79f0\u4e3a\u4e3b\u8868\uff0cA\u8868\u79f0\u4e3a\u5916\u952e\u8868\uff1a \u5916\u952e\u5b57\u6bb5\u5728\u521b\u5efa\u7684\u65f6\u5019\u5c31\u5e94\u8be5\u4e0e\u4e3b\u8868\u7684\u7c7b\u578b\u5b8c\u5168\u4e00\u81f4(\u957f\u5ea6\u554a\u7b49)\uff0c\u5426\u5219\u521b\u5efa\u5916\u952e\u4f1a\u62a5\u9519 \u5916\u952e\u8868\u662f\u4e0d\u80fd\u63d2\u5165\u4e3b\u8868\u4e0d\u5b58\u5728\u7684\u6570\u636e \u5916\u952e\u8868\u4e0d\u80fd\u5220\u9664\u5df2\u7ecf\u5173\u8054\u4e0a\u7684\u4e3b\u8868\u6570\u636e \u5e38\u7528\u547d\u4ee4 show use xx_database; # help show; \u67e5\u770b\u6240\u6709show show databases; show tables from db_name; show columns from tbl_name; describe xx_table; # \u662f\u4e0a\u9762\u4e00\u53e5\u7684\u5feb\u6377\u547d\u4ee4 show status; # \u663e\u793a\u670d\u52a1\u5668\u72b6\u6001\u4fe1\u606f show variables; # \u67e5\u770b\u5f53\u524dmysql\u914d\u7f6e show create database/table db_name/tbl_name; # \u663e\u793a\u521b\u5efa\u7279\u5b9a\u6570\u636e\u5e93/\u8868\u7684mysql\u8bed\u53e5 show errors; show warnings; \u68c0\u7d22\u8bed\u53e5 select col_name from tbl_name; select col_name1, col_name2 from tbl_name; SELECT DISTINCT col_name FROM tbl_name; # \u8fd4\u56de\u4e0d\u540c\u7684col_name\u884c(\u53bb\u91cd)\u3002distinct\u4f1a\u4fee\u9970\u5176\u540e\u6240\u6709\u7684\u5217 SELECT col_name FROM tbl_name LIMIT 5; # \u8fd4\u56de\u7684\u884c\u4e0d\u591a\u4e8e5\u884c SELECT col_name FROM tbl_name LIMIT 1, 6; # \u8fd4\u56de\u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\u76846\u884c SELECT col_name FROM tbl_name LIMIT 6 OFFSET 1; # \u4eceMysql 5 \u5f00\u59cb\uff0c\u652f\u6301\u4e0a\u4e00\u53e5\u7684\u66ff\u4ee3\u65b9\u6cd5 SELECT tbl_name.col_name FROM db_name.tbl_name; # \u5b8c\u5168\u9650\u5b9a\u8868\u540d\u548c\u5217\u540d \u6392\u5e8f\u6570\u636e SELECT col_name FROM tbl_name ORDER BY col_name; # \u4e5f\u53ef\u4f7f\u7528\u5176\u4ed6\u5217\u8fdb\u884c\u6392\u5e8f SELECT col_name, .. FROM tbl_name ORDER BY col_name1, col_name2, ..; # \u6309\u591a\u4e2a\u5217\u6392\u5e8f\uff0c\u4e14\u6309\u7167\u5217\u51fa\u7684\u5217\u987a\u5e8f # \u9ed8\u8ba4\u662f\u5347\u5e8f\u6392\u5e8f\uff0c\u8fd9\u91cc\u6307\u5b9a\u964d\u5e8f\u6392\u5e8f\u3002DESC\u53ea\u4fee\u9970\u5176\u524d\u7684\u5217\uff0c\u5bf9\u4e8e\u540e\u9762\u7684\u5217\u4efb\u6309\u7167\u5347\u5e8f\u6392\u5e8f SELECT col_name FORM tbl_name ORDER BY col_name DESC; \u8fc7\u6ee4\u6570\u636e SELECT col_name, .. FROM tbl_name WHERE col_name=xx; # where\u5e94\u8be5\u5728order by\u4e4b\u524d # where\u5b50\u53e5\u64cd\u4f5c\u7b26\u5305\u62ec =\u3001<\u3001<=\u3001>\u3001>=\uff0c<>\u548c!=\u90fd\u662f\u4e0d\u7b49\u4e8e # \u4ee5\u53cabetween SELECT prod_name, prod_price FROM products WHERE prod_price BETWEEN 10 AND 20; SELECT col_name FROM tbl_name WHERE col_name IS NULL; # \u68c0\u7d22col_name\u503c\u4e3aNULL\u7684\u884c # AND\u3001OR \u64cd\u4f5c\u7b26\u53ef\u4ee5\u7528\u6765\u7ec4\u5408\u591a\u4e2a\u5b50\u53e5\uff0c\u4e14AND\u7684\u8ba1\u7b97\u6b21\u5e8f\u66f4\u9ad8\uff0c\u53ef\u4ee5\u901a\u8fc7()\u6765\u660e\u786e\u5206\u7ec4\u76f8\u5e94\u7684\u64cd\u4f5c\u7b26 SELECT prod_id FROM products WHERE vend_id = 1000 AND prod_price<100; # IN \u64cd\u4f5c\u7b26\uff0c\u5bf9\u4e8e()\u5185\u7684\u6bcf\u4e2a\u6761\u4ef6\u90fd\u8fdb\u884c\u5339\u914d SELECT col_name FROM tbl_name WHERE col_name2 IN (x, xx, xxx); # NOT \u64cd\u4f5c\u7b26\u7528\u6765\u5426\u5b9a\u540e\u8ddf\u6761\u4ef6\uff0c MySQL\u652f\u6301\u4f7f\u7528NOT\u5bf9 IN\u3001BETWEEN \u548c EXISTS \u5b50\u53e5\u53d6\u53cd SELECT col_name FROM tbl_name WHERE col_name2 NOT IN (x, xx, xxx); \u901a\u914d\u7b26 \u4e3a\u5728\u641c\u7d22\u5b50\u53e5\u4e2d\u4f7f\u7528\u901a\u914d\u7b26\uff0c\u5fc5\u987b\u4f7f\u7528LIKE\u64cd\u4f5c\u7b26\uff0c\u5176\u6307\u793aMySQL\u540e\u8ddf\u7684\u641c\u7d22\u6a21\u5f0f\u5229\u7528\u901a\u914d\u7b26\u5339\u914d\u800c\u4e0d\u662f\u76f4\u63a5\u76f8\u7b49\u5339\u914d\u8fdb\u884c\u6bd4\u8f83\u3002 # %\uff0c \u8868\u793a\u4efb\u4f55\u5b57\u7b26\u51fa\u73b0\u4efb\u4f55\u6b21\u6570, \u8fd9\u662f\u641c\u7d22\u4efb\u610f\u4ee5'jet'\u5f00\u5934\u7684\u8bcd\uff0c\u4e14\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u5373'JET'\u4e0d\u5339\u914d # LIKE '%' \u5e76\u4e0d\u80fd\u7528\u6765\u5339\u914d\u5176\u503c\u4e3aNULL\u7684\u884c SELECT prod_id, prod_name FROM prodcuts WHERE prod_name LIKE 'jet%'; # _\uff0c \u8868\u793a\u5339\u914d\u4efb\u610f\u5355\u4e2a\u5b57\u7b26 \u6b63\u5219\u8868\u8fbe\u5f0f\u641c\u7d22 \u4f7f\u7528REGEXP\u64cd\u4f5c\u7b26\uff0c\u6307\u660e\u5176\u540e\u7684\u6a21\u5f0f\u4f5c\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u5904\u7406 SELECT col_name, .. FROM tbl_name WHERE col_name2 REGEXP 'XX'; # LIKE \u4f1a\u5339\u914d\u6574\u4e2a\u5217\uff1b\u800cREGEXP\u5728\u5217\u503c\u5185\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u88ab\u5339\u914d\u7684\u6587\u672c\u51fa\u73b0\u5728\u5217\u503c\u4e2d\uff0c\u4e14\u8fd8\u5305\u542b\u5176\u4ed6\u6587\u672c # \u5728\u4e0d\u4f7f\u7528\u901a\u914d\u7b26\u60c5\u51b5\u4e0b\uff0cLIKE\u662f\u65e0\u6cd5\u5339\u914d\u7684\uff0c\u800cREGEXP\u662f\u53ef\u4ee5\u8fd4\u56de\u5339\u914d\u7ed3\u679c\u7684 SELECT prod_name FROM products WHERE prod_name LIKE/REGEXP '1000'; # \u4e14\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u9664\u975e\u662f\u6709BINARY \u5173\u952e\u5b57 SELECT prod_name FROM producys WHERE prod_name REGEXP BINARY 'JET'; . \u8868\u793a\u5339\u914d\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\uff1b | \u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u7684or\u64cd\u4f5c\u7b26\uff0c\u8868\u793a\u5339\u914d\u5176\u4e2d\u4e4b\u4e00\uff0c\u201c100|200|300\u201d\uff1b [] \u5339\u914d\u5176\u4e2d\u5b57\u7b26\u4e4b\u4e00\uff0c\u201c[123] tom\u201d \u8868\u793a\u5339\u914d \u201c1 tom\u201d \u6216 \u201c2 tom\u201d \u6216 \u201c3 tom\u201d\uff1b () \u7528\u5706\u62ec\u53f7\u5c06\u6240\u6709\u9009\u62e9\u9879\u62ec\u8d77\u6765\uff0c\u76f8\u90bb\u7684\u9009\u62e9\u9879\u4e4b\u95f4\u7528 | \u5206\u9694 [0-9] \u5339\u914d0\u52309\u4e2d\u7684\u4e00\u4e2a\u6570\u5b57\uff0c[a-z]\u5339\u914da\u5230z\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\uff1b \\\\ \u8f6c\u4e49\uff0c\u7528\u6765\u5339\u914d\u7279\u6b8a\u5b57\u7b26 \u5b9a\u4f4d\u5143\u5b57\u7b26\uff1a ^ \u6587\u672c\u7684\u5f00\u59cb $ \u6587\u672c\u7684\u7ed3\u5c3e [[: < :]] \u8bcd\u7684\u5f00\u59cb [[:>:]] \u8bcd\u7684\u7ed3\u5c3e eg. \"\\\\([0-9] sticks?\\\\)\": \u5339\u914d\u5305\u542b\u5f62\u5982 \"(1 stick)\" \u6216\u8005 \"(2 stciks)\"\u6587\u672c\u7684\u5217\u503c \"[[:digit:]]{4}\"\uff1a\u5339\u914d\u8fde\u5728\u4e00\u8d77\u7684\u4efb\u610f4\u4f4d\u6570\u5b57 \"^[0-9\\\\.]\"\uff1a\u5339\u914d\u4ee5\u6570\u5b57\u6216\u5c0f\u6570\u70b9\u5f00\u59cb\u7684\u6587\u672c CASE WHEN Show the name and the continent - but substitute Eurasia for Europe and Asia; substitute America - for each country in North America or South America or Caribbean. Show countries beginning with A or B select name, CASE WHEN continent in ('Europe', 'Asia') THEN 'Eurasia' WHEN continent in ('North America','South America', 'Caribbean') THEN 'America' ELSE continent END from world where name like 'A%' or name like 'B%' /* Put the continents right... Oceania becomes Australasia Countries in Eurasia and Turkey go to Europe/Asia Caribbean islands starting with 'B' go to North America, other Caribbean islands go to South America Show the name, the original continent and the new continent of all countries. */ select name,continent, case when continent in ('Eurasia', 'Turkey') then 'Europe/Asia' when continent ='Oceania' then 'Australasia' when continent='Caribbean' then case when name like 'B%' then 'North America' else 'South America' end else continent end from world \u8ba1\u7b97\u5b57\u6bb5 \u8fd0\u884c\u65f6\u5728SELECT\u8bed\u53e5\u5185\u521b\u5efa \uff0c\u4f8b\u5982\u5d4c\u5957\u5b50\u67e5\u8be2\u6216\u8005\u901a\u8fc7\u7ec4\u5408\u5b57\u6bb5(\u5373 column)\u6765\u683c\u5f0f\u5316\u68c0\u7d22\u8f93\u51fa\u7ed3\u679c Concat()\u62fc\u63a5\u5b50\u4e32 \u5220\u9664\u7a7a\u683c\uff0cRTrim()\u53bb\u9664\u4e32\u53f3\u4fa7\u7a7a\u683c\uff0cLTrim()\u53bb\u9664\u4e32\u53f3\u4fa7\u7a7a\u683c\uff0cTrim()\u53bb\u9664\u4e24\u4fa7\u7a7a\u683c AS\uff0c\u53ef\u4ee5\u4e3aConcat()\u5f97\u5230\u7684\u7ed3\u679c\u521b\u5efa\u4e00\u4e2a\u5217\u522b\u540d\uff0c\u65b9\u4fbf\u5ba2\u6237\u673a\u4f7f\u7528 \u53ef\u4ee5\u5728\u8ba1\u7b97\u5b57\u6bb5\u4e2d\u6307\u5411\u7b97\u672f\u8ba1\u7b97 ROUND(), returns f rounded to p decimal places SELECT Concat(Rtrim(vend_name), '(', RTrim(vend_country), ')') AS vend_title FROM vendors; SELECT quantity*item_price AS expanded_price FROM orderitems; \u5173\u4e8enull 1\u3001\u5982\u679c\u8981\u6c42\u67e5\u8be2\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\uff0c\u8f93\u51fanull\uff0c\u6709\u4ee5\u4e0b\u51e0\u79cd\u5904\u7406\u65b9\u6cd5: eg: \u8fd4\u56de\u7b2c2\u9ad8\u85aa\u8d44\uff0c\u6ca1\u6709\u65f6\u8fd4\u56denull(\u4f8b\u5982\u53ea\u6709\u4e00\u6761\u8bb0\u5f55\u6216\u8005\u8bb0\u5f55\u4e2d\u85aa\u8d44\u5168\u90e8\u76f8\u540c) // \u56e0\u4e3aselect null \u8fd4\u56denull select (select distinct salary from employee order by salary desc limit 1, 1) as SecondHighestSalary \u6216 // IFNULL(expr1,expr2)\u7684\u7528\u6cd5\uff1a // \u5047\u5982expr1 \u4e0d\u4e3a NULL\uff0c\u5219 IFNULL() \u7684\u8fd4\u56de\u503c\u4e3a expr1; \u5426\u5219\u5176\u8fd4\u56de\u503c\u4e3a expr2\u3002 select IFNULL( (select distinct salary from employrr order by salary desc limit 1, 1), null ) as HighestSecondSalary \u6570\u636e\u5904\u7406\u51fd\u6570 \u6587\u672c\u5904\u7406\u51fd\u6570: Trim(), Upper(), Lower(), Soundex()\u7b49\uff1b\u5176\u4e2dSoundex\u53ef\u4ee5\u5c06\u6587\u672c\u4e32\u8f6c\u4e3a\u63cf\u8ff0\u5176\u8bed\u97f3\u8868\u793a\u7684\u5b57\u6bcd\u6570\u5b57\u6a21\u5f0f\u7684\u7b97\u6cd5\uff0c\u8003\u8651\u4e86\u7c7b\u4f3c\u7684\u53d1\u97f3\u5b57\u7b26\u548c\u97f3\u8282\uff0c\u4f7f\u5f97\u5bf9\u4e32\u8fdb\u884c\u53d1\u97f3\u6bd4\u8f83\u800c\u4e0d\u662f\u5b57\u7b26\u6bd4\u8f83\u3002 # \u5339\u914d\u6240\u6709\u53d1\u97f3\u7c7b\u4f3c\u2018Lee\u2019\u7684cust_name SELECT cust_name, cust_contact FROM customers WHERE Soundex(cust_name)=Soundex('Lee') \u65e5\u671f\u548c\u65f6\u95f4\u5904\u7406\u51fd\u6570 MySQL\u4f7f\u7528\u7684\u9ed8\u8ba4\u65e5\u671f\u683c\u5f0f\u4e3ayyyy-mm-dd, datetime\u7c7b\u578b\u9664\u4e86\u65e5\u671f\u8fd8\u5305\u62ec\u65f6\u95f4\u503c\uff0chh-mm-ss # \u68c0\u7d222005\u5e749\u6708\u6240\u6709\u8ba2\u5355 SELECT cust_id, order_num FROM orders WHERE DATE(order_date) BETWEEN '2005-09-01' AND '2005-09-30'; SELECT cust_id, order_num FROM orders WHERE Year(order_data)=2005 AND Month(order_date)=9; \u6570\u503c\u5904\u7406\u51fd\u6570 \u4ec5\u7528\u6765\u5904\u7406\u6570\u503c\u6570\u636e\uff0c\u7528\u4e8e\u4ee3\u6570\u3001\u4e09\u89d2\u51fd\u6570\u8ba1\u7b97\u3002\u5982Abs()\u3001Cos()\u3001Sin()\u3001Pi()\u3001Rand()\u3001Mod()\u3001Sqrt()\u3001Exp(). \u5f00\u7a97\u51fd\u6570 \u4ecemysql 8.0\u5f00\u59cb\u652f\u6301 1\u3001\u8bed\u6cd5\u7ed3\u6784 <\u5f00\u7a97\u51fd\u6570> over ([PARTITION by <\u5217\u6e05\u5355>] Order by <\u6392\u5e8f\u7528\u5217\u6e05\u5355>\uff09 \u8bed\u53e5\u4e2d\uff0cPARTITION By \u6307\u5b9a\u6392\u5e8f\u7684\u5bf9\u8c61\u8303\u56f4\uff0c\u542b\u4e49\u4e0a\u7c7b\u4f3cGroup By, \u4f46\u4e0d\u4f1a\u5c06\u7ed3\u679c\u805a\u5408\u5728\u4e00\u8d77, \u800c\u662f\u76f8\u540c\u5217\u6e05\u5355\u7684\u6570\u636e\u7d27\u6328\u4e00\u8d77\uff0c\u671f\u95f4\u987a\u5e8f\u901a\u8fc7 order by\u8fdb\u884c\u6307\u5b9a order by \u6307\u5b9a\u4e86\u6309\u7167\u54ea\u4e00\u5217\uff0c\u4f55\u79cd\u987a\u5e8f\u8fdb\u884c\u6392\u5217\uff08\u7eb5\u5411\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\uff09 2\u3001\u5e38\u7528\u5f00\u7a97\u51fd\u6570\u5305\u62ec\u805a\u5408\u51fd\u6570\u548c\u4e0b\u9762\u51e0\u79cd\u4e13\u7528\u5f00\u7a97\u51fd\u6570 row_number()\uff1a\u4f9d\u6b21\u9012\u589e\u6392\u540d\uff0c\u65e0\u91cd\u590d\u6392\u540d rank()\uff1a\u76f8\u540c\u5206\u6570\u6709\u91cd\u590d\u6392\u540d\uff0c\u4f46\u662f\u91cd\u590d\u540e\u4e0b\u4e00\u4e2a\u4eba\u6309\u7167\u5b9e\u9645\u6392\u540d dense_rank()\uff1a\u5206\u6570\u4e00\u81f4\u6392\u540d\u4e00\u81f4\uff0c\u5206\u6570\u4e0d\u4e00\u81f4\u6392\u540d+1 NTILE(4)\uff1a\u5206\u7ec4\u6392\u540d\uff0c\u91cc\u9762\u7684\u6570\u5b57\u662f\u51e0\uff0c\u6700\u591a\u6392\u540d\u5c31\u662f\u51e0\uff0c\u91cc\u9762\u7684\u6570\u5b57\u662f4\uff0c\u6700\u591a\u7684\u6392\u540d\u5c31\u662f4 \u805a\u5408\u51fd\u6570(aggregate function) \u7528\u4e8e\u5bf9\u8868\u4e2d\u6570\u636e\u8fdb\u884c\u6c47\u603b\uff0c\u4f46\u65e0\u9700\u8fd4\u56de\u5b9e\u9645\u8868\u9879\u6570\u636e\uff0c\u5982\u6ee1\u8db3\u6761\u4ef6\u7684\u884c\u6570\uff0c\u8868\u5217\u7684\u6700\u5927/\u5c0f\u503c\u7b49\u3002 \u2003\u82e5\u67d0\u884c\u7684score\u503c\u4e3anull\u65f6\uff0c\u8ba1\u7b97\u5e73\u5747\u503c\u65f6\u4f1a\u5ffd\u7565\u5e26\u6709null\u503c\u7684\u90a3\u4e00\u884c\u3002\u5982\u679c\u60f3\u8981\u628anull\u5f53\u505a0\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528IsNull\u51fd\u6570\u628anull\u8f6c\u6362\u62100\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a avg(IsNull(score\uff0c0)\uff09 as 'Average Score' # AVG\u53ea\u80fd\u7528\u4e8e\u5355\u4e2a\u5217\uff0c\u4e3a\u83b7\u5f97\u591a\u4e2a\u5217\uff0c\u5fc5\u987b\u4f7f\u7528\u591a\u4e2aAVG\u51fd\u6570 SELECT AVG(prod_price) AS avg_price WHERE vend_id=100; # COUNT(*) \u7edf\u8ba1\u8868\u4e2d\u884c\u7684\u6570\u76ee\uff0c\u5373\u4f7f\u5217\u503c\u4e3aNULL\uff0c\u800cCOUNT(column)\u5bf9\u7279\u5b9a\u5217\u4e2d\u5177\u6709\u503c\u5f97\u884c\u8fdb\u884c\u7edf\u8ba1\uff0c\u5ffd\u7565NULL # \u5229\u7528\u6807\u51c6\u7b97\u672f\u64cd\u4f5c\u7b26\uff0c\u53ef\u4ee5\u5728\u591a\u4e2a\u5217\u4e0a\u8fdb\u884c\u8ba1\u7b97; SUM\u4f1a\u5ffd\u7565\u5217\u503c\u4e3aNULL\u7684\u884c SELECT SUM(item_price*quantity) AS total_price FROM orderitems WHERE order_num=200; \u805a\u96c6\u4e0d\u540c\u503c: \u4e0a\u8ff0\u4e94\u4e2a\u805a\u96c6\u51fd\u6570\u53ef\u4ee5\u5bf9\u76f8\u5e94\u7684\u5217\u6307\u5b9aALL\u6216DISTINCT\u5173\u952e\u5b57\uff0c\u524d\u8005\u8868\u793a\u5bf9\u6240\u6709\u7684\u884c\u6267\u884c\u7b5b\u9009\uff1b\u540e\u8005\u53ea\u5bf9\u503c\u4e0d\u540c\u7684\u884c\u8fdb\u884c\u7b5b\u9009\u3002ALL\u53ef\u4ee5\u4e0d\u7528\u6307\u5b9a\uff0c\u662f\u9ed8\u8ba4\u884c\u4e3a\u3002 SELECT\u8bed\u53e5\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u805a\u96c6\u51fd\u6570\u3002 SELECT COUNT(*) AS num_items, MIN(prod_price) AS price_min, AVG(prod_price) AS avg_price FROM products; \u81ea\u5b9a\u4e49\u51fd\u6570 delimiter \u81ea\u5b9a\u4e49\u7b26\u53f7\u3000\u3000-- \u5982\u679c\u51fd\u6570\u4f53\u53ea\u6709\u4e00\u6761\u8bed\u53e5, begin\u548cend\u53ef\u4ee5\u7701\u7565, \u540c\u65f6delimiter\u4e5f\u53ef\u4ee5\u7701\u7565 create function \u51fd\u6570\u540d(\u5f62\u53c2\u5217\u8868) returns \u8fd4\u56de\u7c7b\u578b\u3000\u3000 -- \u6ce8\u610f\u662fretruns\uff1b \u5f62\u53c2\u5217\u8868\u5f62\u5f0f\uff1a\u5f62\u53c2\u540d\uff0c\u5f62\u53c2\u7c7b\u578b\uff0c \u4f8b\u5982 a INT \u3000\u3000begin \u3000\u3000\u3000\u3000\u51fd\u6570\u4f53 -- \u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u5982\uff1aset @x = 1; \u53d8\u91cfx\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u5916\u9762\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff1b -- \u4f7f\u7528declare\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\uff0c \u4f8b\u5982 declare i int default 1; -- \u4fee\u6539\u53d8\u91cf\u503c: set i = i+1; return (-- \u8fd9\u91cc\u53ef\u4ee5\u5199SQL\u8bed\u53e5); \u3000\u3000end \u3000\u3000\u81ea\u5b9a\u4e49\u7b26\u53f7 delimiter ; \u5206\u7ec4\u6570\u636e \u521b\u5efa\u5206\u7ec4: GROUP BY \u8fc7\u6ee4\u5206\u7ec4: HAVING HAVING\u5b50\u53e5\u7c7b\u4f3cWHERE\uff0cWHERE\u5b50\u53e5\u53ef\u4ee5\u7528HAVING\u4ee3\u66ff\uff0c\u4e24\u8005\u533a\u522b\u5728\u4e8e: \u2003WHERE\u53ea\u80fd\u8fc7\u6ee4\u884c\uff0c\u4e14\u5176\u5728\u5206\u7ec4\u524d\u8fdb\u884c\u8fc7\u6ee4\uff0c\u800cHAVING\u57fa\u4e8e\u5206\u7ec4\u7684\u805a\u5408\u503c\u800c\u4e0d\u662f\u7279\u5b9a\u884c\u7684\u503c\u6765\u8fc7\u6ee4\u6570\u636e\uff0c\u4e3b\u8981\u7528\u6765\u8fc7\u6ee4\u5206\u7ec4\u3002 \u2003WHERE\u5b50\u53e5\u4e0d\u53ef\u4ee5\u5305\u542b\u805a\u5408\u51fd\u6570\uff0cHAVING \u5b50\u53e5\u4e2d\u7684\u6761\u4ef6\u53ef\u4ee5\u5305\u542b\u805a\u5408\u51fd\u6570\u3002 \u2003HAVING \u5b50\u53e5\u662f\u5728\u6570\u636e\u5206\u7ec4\u540e\u8fdb\u884c\u8fc7\u6ee4\uff0cWHERE \u5b50\u53e5\u4f1a\u5728\u6570\u636e\u5206\u7ec4\u524d\u8fdb\u884c\u8fc7\u6ee4\u3002WHERE \u5b50\u53e5\u6392\u9664\u7684\u884c\u4e0d\u5305\u542b\u5728\u5206\u7ec4\u4e2d\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd HAVING \u5b50\u53e5\u57fa\u4e8e\u8fd9\u4e9b\u503c\u8fc7\u6ee4\u6389\u7684\u5206\u7ec4\u3002 \u2003\u4f7f\u7528GROUP BY\u65f6\uff0cselect \u540e\u9762\u7684\u6240\u6709\u5217\u4e2d,\u6ca1\u6709\u4f7f\u7528\u805a\u5408\u51fd\u6570\u7684\u5217,\u5fc5\u987b\u51fa\u73b0\u5728 group by \u540e\u9762 SELECT vend_id, COUNT(*) AS num_prods FROM products GROUP BY vend_id; SELECT cust_id, COUNT(*) AS orders FROM orders GROUP BY cust_id HAVING COUNT(*)>=2; SELECT vend_id, COUNT(*) AS num_prods FROM products WHERE prod_price>=10 GROUP BY vend_id HAVING COUNT(*)>=2; SELECT order_num, SUM(quantity*item_price) AS ordertotal FROM orderitems GROUP BY order_num HAVING SUM(quantity*item_price) ORDER BY ordertotal; \u5b50\u67e5\u8be2 \u2003\u5d4c\u5957\u5728\u5176\u4ed6\u67e5\u8be2\u4e2d\u7684\u67e5\u8be2\u3002 SELECT cust_name,cust_contact FROM customers WHERE cust_id IN ( SELECT cust_id FROM orders WHERE order_num IN ( SELECT order_num FROM orderitems WHERE prod_id='TNT2' ) ); SELECT cust_name, (SELECT COUNT(*) FROM orders WHERE orders.cust_id=customere.cust_id) AS num_orders FROM customers ORDER BY cust_name; \u8054\u7ed3 \u2003\u662f\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u5728SELECT\u4e2d\u5173\u8054\u8868\uff0c\u53ef\u4ee5\u8054\u7ed3\u591a\u4e2a\u8868\u8fd4\u56de\u4e00\u7ec4\u8f93\u51fa\uff0c\u8054\u7ed3\u5728\u8fd0\u884c\u65f6\u5173\u8054\u8868\u4e2d\u7684\u884c\u3002 # \u901a\u8fc7where\u5b50\u53e5\u5b9e\u73b0\u8054\u7ed3 SELECT vend_name, prod_name, prod_price FROM vendors, products WHERE vendors.vend_id=products.vend_id ORDER BY vend_nam, prod_name; # \u53c9\u8054\u7ed3/\u7b1b\u5361\u5c14\u79ef\uff0c\u7531\u6ca1\u6709\u8054\u7ed3\u5173\u7cfb\u7684\u8868\u8fd4\u56de\u7684\u7ed3\u679c\u4e3a\u7b1b\u5361\u5c14\u79ef # \u68c0\u7d22\u7684\u884c\u7684\u6570\u76ee\u5c06\u662f\u7b2c\u4e00\u4e2a\u8868\u7684\u884c\u6570\u4e58\u4ee5\u7b2c\u4e8c\u4e2a\u8868\u7684\u884c\u6570 SELECT vend_name, prod_name, prod_price FROM vendors, products ORDER BY vend_nam, prod_name; # \u7b49\u503c\u8054\u7ed3/\u5185\u90e8\u8054\u7ed3\uff0c\u57fa\u4e8e\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u76f8\u7b49\u6d4b\u8bd5\uff0c\u901a\u8fc7where\u5b50\u53e5\u5b9e\u73b0\u7684\u5c31\u662f\u8fd9\u79cd\u8054\u7ed3 # \u4e0d\u8fc7\u4e5f\u53ef\u7528\u5176\u4ed6\u8bed\u6cd5(INNER JOIN)\u6765\u6307\u660e\u8054\u7ed3\u5173\u7cfb, \u6b64\u65f6\u53ea\u80fd\u7528ON\u4f20\u9012\u8054\u7ed3\u6761\u4ef6 SELECT vend_name, prod_name, prod_price FROM vendors INNER JOIN products ON vendors.vend_id=products.vend_id # \u8054\u7ed3\u591a\u4e2a\u8868\uff0cSQL\u5bf9\u4e8e\u8054\u7ed3\u7684\u8868\u6570\u91cf\u6ca1\u6709\u9650\u5236 # \u4e0b\u9762\u7528\u8054\u7ed3\u5b9e\u73b0\u4e4b\u524d\u7684\u5b50\u67e5\u8be2 SELECT cust_name, cust_contact FROM customers, orders, orderitems WHERE customers.cust_id=orders.cust_id AND orders.order_num=orderitems.order_num AND prod_id='TNT2'; # \u4f7f\u7528\u8868\u522b\u540d\uff0c\u7b80\u5316\u8bed\u53e5\uff0c\u8868\u522b\u540d\u53ea\u5728\u67e5\u8be2\u4e2d\u4f7f\u7528\uff0c\u4e0d\u8fd4\u56de\u5ba2\u6237\u673a # \u8868\u522b\u540d\u5728 FROM \u5b50\u53e5\u4e2d\u5b9a\u4e49\uff0c\u53ef\u7528\u5728 SELECT\u3001WHERE\u3001ORDER BY \u7b49\u5b50\u53e5\u4e2d SELECT cust_name, cust_contact FROM customers AS c, orders AS o, orderitems AS oi WHERE c.cust_id=o.cust_id AND o.order_num=oi.order_num AND prod_id='TNT2'; # \u81ea\u8054\u7ed3\uff0c\u5728\u5355\u6761\u8bed\u53e5\u503c\u591a\u6b21\u5f15\u7528\u76f8\u540c\u7684\u8868 # \u901a\u8fc7\u8868\u522b\u540d\u6765\u907f\u514d\u4e8c\u4e49\u6027\uff0c\u4ece\u800c\u5c06\u540c\u4e00\u4e2a\u8868\u770b\u6210\u65b0\u8868\uff0c\u548c\u81ea\u8eab\u8054\u7ed3 # \u4e0b\u9762\u662f\u67e5\u8be2\u63d0\u4f9bDTNTR\u7684\u4f9b\u8d27\u5546\u63d0\u4f9b\u7684\u6240\u6709\u4ea7\u54c1 SELECT p1.prod_id, p1.prod_num FROM products AS p1, products AS p2 WHERE p1.vend_id=p2.vend_id AND p2.prod_id='DTNTR'; # \u5916\u90e8\u8054\u7ed3\uff0c\u8054\u7ed3\u5305\u542b\u4e86\u90a3\u4e9b\u5728\u76f8\u5173\u8868\u4e2d\u6ca1\u6709\u5173\u8054\u884c\u7684\u884c # \u4f8b\u5982\u7edf\u8ba1\u6bcf\u4e2a\u7528\u6237\u7684\u8ba2\u5355\uff0c\u5305\u62ec\u90a3\u4e9b\u6ca1\u6709\u8ba2\u5355\u7684\u7528\u6237(\u5176\u5728\u8ba2\u5355\u8868\u4e2d\u4e0d\u5b58\u5728\u5173\u8054\u7684\u884c) # OUTER JOIN\u6307\u660e\u5c5e\u4e8e\u5916\u90e8\u8054\u7ed3\uff0cLEFT\u6307\u660e\u662f\u5de6\u4fa7\u7684customers\u5305\u542b\u6240\u6709\u7684\u884c\uff1b # \u82e5\u662f\u4f7f\u7528 RIGHT\uff0c\u5219\u662f\u53f3\u4fa7\u7684order\u8868\u6240\u6709\u7684\u884c\uff0c\u8fd4\u56de\u7ed3\u679c\u662f\u90a3\u4e9b\u4e0b\u4e86\u8ba2\u5355\u7684\u7528\u6237\u7684\u884c\u3002 # order_num\u4ee3\u8868\u7684\u662f\u8ba2\u5355 id, \u800c\u975e\u6570\u91cf SELECT customers.cust_id, order_num FROM customers LEFT OUTER JOIN orders ON customers.cust_id=orders.cust_id; # \u4e0b\u9762\u5219\u662f\u7edf\u8ba1\u6bcf\u4e2a\u7528\u6237\u7684\u8ba2\u5355\u6570\u91cf\uff0c\u91c7\u7528\u805a\u96c6\u51fd\u6570\u7684\u5916\u90e8\u8054\u7ed3 SELECT customers.cust_id, COUNT(order_num) AS num_ord FROM customers LEFT OUTER JOIN orders ON customers.cust_id=orders.cust_id GROUP BY customers.cust_id; \u7ec4\u5408\u67e5\u8be2 \u2003\u5728\u5355\u4e2a\u67e5\u8be2\u4e2d\u4ece\u4e0d\u540c\u7684\u8868\u8fd4\u56de\u7c7b\u4f3c\u7ed3\u6784\u7684\u6570\u636e \u2003\u5bf9\u5355\u4e2a\u8868\u6267\u884c\u591a\u4e2a\u67e5\u8be2\uff0c\u6309\u5355\u4e2a\u67e5\u8be2\u8fd4\u56de\u6570\u636e \u53ef\u4f7f\u7528 UNION \u64cd\u4f5c\u7b26\u7ec4\u5408\u6570\u6761SQL\u67e5\u8be2\uff0c\u5176\u6548\u679c\u4e0e\u5177\u6709\u591a\u4e2aWHERE\u5b50\u53e5\u6761\u4ef6\u7684\u67e5\u8be2\u5b8c\u6210\u7684\u5de5\u4f5c\u76f8\u540c\uff0c\u5177\u4f53\u4f7f\u7528\u54ea\u79cd\u65b9\u5f0f\u7b80\u4fbf\u3001\u9ad8\u6548\u9700\u8981\u7ecf\u8fc7\u6d4b\u8bd5\u3002 UNION\u5fc5\u987b\u7531\u4e24\u6761\u6216\u591a\u6761SELECT\u8bed\u53e5\u7ec4\u6210\uff0c\u8bed\u53e5\u4e4b\u95f4\u901a\u8fc7UNION\u5206\u9694\uff1b UNION\u7684\u6bcf\u4e2a\u67e5\u8be2 \u5fc5\u987b\u5305\u542b\u76f8\u540c\u7684\u5217\u3001\u8868\u8fbe\u5f0f\u3001\u805a\u96c6\u51fd\u6570 \uff1b \u5217\u7c7b\u578b\u5fc5\u987b\u517c\u5bb9\uff0c\u5373DBMS\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u7684\u7c7b\u578b \u2003 UNION\u9ed8\u8ba4\u4f1a\u53bb\u9664\u591a\u6761\u67e5\u8be2\u8bed\u53e5\u8fd4\u56de\u4e2d\u91cd\u590d\u7684\u884c\uff0c\u4f7f\u7528UNION ALL\u53ef\u4ee5\u8fd4\u56de\u6240\u6709\u5339\u914d\u884c\uff0c\u5305\u62ec\u91cd\u590d\u884c\u3002 \u5bf9\u7ec4\u5408\u7ed3\u679c\u6392\u5e8f\uff0c\u53ea\u80fd\u5728\u6700\u540e\u4e00\u6761SELECT\u8bed\u53e5\u4e4b\u540e\u4f7f\u7528 ORDER BY\u3002 SELECT vend_id, prod_id, prod_price FROM proucts WHERE prod_price <=5 UNION SELECT vend_id, prod_id, prod_price FROM proucts WHERE vend_id in (1000, 1005); \u5168\u6587\u672c\u641c\u7d22 MyISAM\u5f15\u64ce\u652f\u6301\uff0c\u800cInnoDB\u4e0d\u652f\u6301(5.7\u7248\u672c\u5f00\u59cb\u652f\u6301)\u3002 \u76f8\u8f83\u4e8e\u901a\u914d\u7b26\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c1d\u8bd5\u5339\u914d\u8868\u4e2d\u6240\u6709\u884c\uff0c\u65e0\u6cd5\u660e\u786e\u63a7\u5236\u5339\u914d\u6761\u4ef6\uff0c\u4ee5\u53ca\u4e0d\u80fd\u63d0\u4f9b\u667a\u80fd\u5316\u7684\u641c\u7d22\u7ed3\u679c\uff0c \u5168\u6587\u672c\u641c\u7d22\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002 \u542f\u7528\u5168\u6587\u672c\u641c\u7d22\uff0cMySQL\u4f1a\u521b\u5efa\u6307\u5b9a\u5217\u4e2d\u5404\u8bcd\u7684\u4e00\u4e2a\u7d22\u5f15\uff0c\u641c\u7d22\u65f6\u4f1a\u9488\u5bf9\u8fd9\u4e9b\u8bcd\u8fdb\u884c\u3002 \u2003 \u4e00\u822c\u5728\u521b\u5efa\u8868\u65f6\u542f\u7528\u5168\u6587\u672c\u641c\u7d22\uff0c CREATE TABLE productnotes( note_text text NULL, FULLTEXT(note_text) )ENGINE=MyISAM; FULLTEXT\u53ef\u4ee5\u7d22\u5f15\u591a\u4e2a\u5217\uff0c\u5b9a\u4e49\u4e4b\u540e\uff0cMySQL\u4f1a\u81ea\u52a8\u7ef4\u62a4\u7d22\u5f15\u3002\u4f7f\u7528Match()\u548cAgainst()\u6267\u884c\u5168\u6587\u672c\u641c\u7d22\u3002 \u5168\u6587\u672c\u641c\u7d22\u7684\u4e00\u4e2a\u91cd\u8981\u90e8\u5206\u5c31\u662f\u5bf9\u7ed3\u679c\u6392\u5e8f\uff0c\u5177\u6709\u8f83\u9ad8\u7b49\u7ea7\u7684\u884c\u5148\u8fd4\u56de # \u4f20\u9012\u7ed9Match()\u7684\u503c\u5fc5\u987b\u4e0eFULLTEXT\u4e2d\u7684\u5b9a\u4e49\u76f8\u540c\uff0c\u4e14\u6b21\u5e8f\u76f8\u540c\uff0c\u5373\u4f7f\u4e0d\u641c\u7d22\u67d0\u4e2a\u5217\uff0c\u4e5f\u8981\u5217\u51fa\u6765 # \u641c\u7d22\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u9664\u975e\u4f7f\u7528BINARY\u3002 SELECT note_text FROM productnotes WHERE Match(note_text) Against('rabbit'); \u67e5\u8be2\u6269\u5c55 SELECT note_text FROM productnotes WHERE Match(note_text) Against('anvils' WITH QUERY EXPANSION); \u5e03\u5c14\u6587\u672c\u641c\u7d22 # \u5339\u914d\u5305\u542banvils\u4f46\u4e0d\u5305\u542b\u4efb\u610f\u4ee5rope\u5f00\u5934\u7684\u8bcd\u7684\u884c SELECT note_text FROM productnotes WHERE Match(note_text) Against('anvils -rope*' IN BOOLEAN MODE); # \u5339\u914d\u77ed\u8bedrabbit bait\u800c\u975e\u4e24\u4e2a\u5355\u72ec\u7684\u5355\u8bcd SELECT note_text FROM productnotes WHERE Match(note_text) Against('\"rabbit bait\"' IN BOOLEAN MODE); # \u5339\u914dsafe\u548ccombination\uff0c\u4f46\u964d\u4f4e\u540e\u8005\u7684\u7b49\u7ea7 SELECT note_text FROM productnotes WHERE Match(note_text) Against('+safe +(<combination)' IN BOOLEAN MODE); \u6570\u636e\u63d2\u5165 # \u6309\u521b\u5efa\u8868\u65f6\u5217\u7684\u987a\u5e8f\uff0c\u63d2\u5165\u5217\u503c INSERT INTO tbl_name VALUES(..); # \u6839\u636e\u7b2c\u4e00\u4e2a()\u5185\u63d0\u4f9b\u7684\u5217\u540d\u6765\u9009\u62e9\u63d2\u5165\uff0c\u987a\u5e8f\u4e0d\u9700\u6309\u7167\u521b\u5efa\u987a\u5e8f\uff0c\u4e14\u53ef\u4ee5\u7701\u7565\u67d0\u4e9b\u5217(\u8981\u6c42\u8be5\u5217\u5141\u8bb8NULL\u6216\u8005\u6709\u9ed8\u8ba4\u503c) INSERT INTO tbl_name(col_name1, ..) VALUES(col_value1,..) # \u63d2\u5165\u591a\u884c, \u53ef\u4ee5\u4f7f\u7528\u591a\u6761INSERT\u8bed\u53e5\uff0c\u4e00\u6b21\u63d0\u4ea4\uff0c\u4e2d\u95f4\u7528\u2018;\u2019\u9694\u5f00, # \u6216\u8005\u5982\u4e0b, \u8981\u6c42INSERT\u8bed\u53e5\u4e2d\u5217\u540d\u548c\u6b21\u5e8f\u76f8\u540c\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6027\u80fd\u4e5f\u8981\u66f4\u597d INSERT INTO tbl_name(col_name1, ..) VALUES(col1_value,..), (col1_value2, ..); # \u63d2\u5165\u68c0\u7d22\u51fa\u7684\u6570\u636e, \u5c06\u4ece\u5176\u4ed6\u8868\u4e2d\u68c0\u7d22\u5230\u7684\u6570\u636e\u63d2\u5165\u8868\u4e2d # \u68c0\u7d22\u7684\u5217\u5bf9\u5e94\u88ab\u63d2\u5165\u8868\u7684\u6bcf\u4e00\u5217 INSERT INTO tbl_name(col_name, ..) SELECT tbl_nameX, .. FROM tbl_name_new WHERE ..; \u66f4\u65b0\u6570\u636e # IGNORE, \u5728\u66f4\u65b0\u591a\u884c\u65f6\uff0c\u5982\u679c\u67d0\u4e00\u884c\u66f4\u65b0\u9519\u8bef\uff0c\u4f7f\u7528IGNORE\u5173\u952e\u5b57\u53ef\u4ee5\u907f\u514d\u4e4b\u524d\u53d1\u751f\u66f4\u65b0\u7684\u884c\u6062\u590d\u5230\u539f\u503c UPDATE IGNORE tbl_name SET col_name='xx' col_name2='xx' WHERE ..; # \u82e5\u7f3a\u5c11WHERE\u5b50\u53e5\u5219\u4f1a\u66f4\u65b0\u6240\u6709\u884c # \u5220\u9664\u67d0\u4e9b\u884c\u7684\u4e00\u5217\u7684\u503c UPDATE tbl_name SET col_name=NULL WHERE ..; \u5220\u9664\u6570\u636e # \u5220\u9664\u7279\u5b9a\u7684\u884c, \u82e5\u60f3\u5220\u9664\u5217\uff0c\u9700\u8981\u901a\u8fc7UPDATE\u6765\u66f4\u65b0\u8be5\u5217\u503c\u4e3aNULL\u3002 DELETE FROM tbl_name; WHERE ..; # \u4ece\u8868\u4e2d\u5220\u9664\u6240\u6709\u884c\uff0c\u5b9e\u9645\u4e0a\u662f\u5220\u9664\u539f\u8868\uff0c\u5e76\u91cd\u65b0\u521b\u5efa\uff1b # DELETE FROM tbl_name;\u5219\u662f\u9010\u884c\u5220\u9664 TRUNCATE tbl_name; MySQL\u6ca1\u6709\u64a4\u9500\u64cd\u4f5c\uff0c\u5e94\u5341\u5206\u5c0f\u5fc3\u4f7f\u7528UPDATE\u548cDELETE \u521b\u5efa\u548c\u64cd\u4f5c\u8868 # cust_id \u548ccust_name\u4e24\u5217\u4e0d\u5141\u8bb8\u4e3a\u7a7a\uff1b # \u5176\u4e2dcust_id\u8bbe\u7f6e\u4e3a\u81ea\u589e\uff0c\u53ef\u4ee5\u5728\u63d2\u5165\u65f6\u4e0d\u63d0\u4f9b\u503c\uff0c\u7531MySQL\u81ea\u52a8\u63d0\u4f9b # \u6bcf\u4e2a\u8868\u53ea\u80fd\u6709\u4e00\u4e2a\u5217\u8bbe\u7f6eAUTO_INCREMENT # \u63d2\u5165\u65f6\u4e5f\u53ef\u4ee5\u4e3a\u8fd9\u6837\u7684\u5217\u8bbe\u7f6e\u4e00\u4e2a\u4ece\u672a\u7528\u8fc7\u7684\u503c\uff0c\u540e\u7eed\u5c06\u4ece\u65b0\u503c\u5f00\u59cb\u9012\u589e # \u4f7f\u7528last_insert_id()\u53ef\u4ee5\u83b7\u5f97\u6700\u540e\u4e00\u6b21\u9012\u589e\u5f97\u5230\u7684AUTO_INCREMENT\u503c\uff1b # \u53ef\u4ee5\u4f7f\u7528' DEFAULT xx '\u5728'NULL, '\u540e\uff0c\u4e3a\u8be5\u5217\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u503c\uff1b CREATE TABLE customers IF NOT EXISTS # IF NOT EXISTS \u8868\u793a\u4ec5\u5728customers\u8868\u4e0d\u5b58\u5728\u65f6\u521b\u5efa\uff0c\u5426\u5219\u8df3\u8fc7 ( cust_id int NOT NULL AUTO_INCREMENT, cust_name char(50) NOT NULL , cust_address char(50) NULL , cust_city char(50) NULL , cust_state char(5) NULL , cust_zip char(10) NULL , cust_country char(50) NULL , cust_contact char(50) NULL , cust_email char(255) NULL , PRIMARY KEY (cust_id) # \u6307\u5b9a\u4e3b\u952e, \u62ec\u53f7\u5185\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u5217 ) ENGINE=InnoDB; # \u901a\u8fc7 ALTER TABLE \u66f4\u65b0\u8868\uff0c\u53ef\u4ee5\u65b0\u589e\u5217\uff0c\u5220\u9664\u65e7\u5217(DROP COLUMN col_name)\uff0c\u4ee5\u53ca\u5b9a\u4e49\u5916\u952e ALTER TABLE tbl_name ADD col_name, col_type; # \u4e3atbl_name.col_name1\u65bd\u52a0\u5916\u952etbl_name2.col_name2\u7ea6\u675f ALTER TABLE tbl_name ADD CONSTRAINT fk_name FOREIGN KEY (col_name1) REFERENCES tbl_name2(col_name2); # \u5220\u9664\u5916\u952e ALTER TABLE tbl_name DROP FOREIGN KEY fk_name; # \u5220\u9664\u8868 DROP TABLE tbl_name; # \u91cd\u547d\u540d\u8868 RENAME TABLE old_tbl TO new_tbl, old_tbl2 TO new_tbl2; \u2003ENGINE:MySQL\u5e38\u7528\u7684\u5f15\u64ce\u5305\u62ecInnoDB(\u4e00\u79cd\u4e8b\u52a1\u5904\u7406\u5f15\u64ce\uff0c\u4e0d\u652f\u6301\u5168\u6587\u672c\u641c\u7d22)\u3001MyISAM(\u6027\u80fd\u6781\u9ad8\uff0c\u652f\u6301\u5168\u6587\u672c\u5904\u7406\uff0c\u4e0d\u652f\u6301\u4e8b\u52a1\u5904\u7406)\u3001MEMORY(\u529f\u80fd\u7b49\u540cMyISAM\uff0c\u4f46\u7531\u4e8e\u6570\u636e\u5b58\u50a8\u5728\u5185\u5b58\u800c\u975e\u78c1\u76d8\u4e2d\uff0c\u901f\u5ea6\u5f88\u5feb\uff0c\u9002\u7528\u4e8e\u4e34\u65f6\u8868)\uff0c\u5728\u4e00\u4e2a\u6570\u636e\u5e93\u4e2d\uff0c\u4e0d\u540c\u8868\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u5f15\u64ce\u3002 \u8865\u5145 # SELECT \u53ef\u4ee5\u7701\u7565 FROM \u5b50\u53e5\u4ee5\u4fbf\u7b80\u5355\u8bbf\u95ee\u548c\u5904\u7406\u8868\u8fbe\u5f0f\uff0c\u4ece\u800c\u8fdb\u884c\u6d4b\u8bd5\u548c\u5b9e\u9a8c SELECT 2*3; # \u8fd4\u56de6 SELECT Trim(' abc '); # \u8fd4\u56de'abc' set names gbk; # \u8bbe\u7f6eMYSQL\u663e\u793a\u5b57\u7b26\u96c6\uff0cCMD\u9ed8\u8ba4\u7f16\u7801\u4e3aGBK\uff0c\u901a\u8fc7\u6b64\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u663e\u793a\u4e2d\u6587 \u89c6\u56fe \u89c6\u56fe\u662f\u865a\u62df\u7684\u8868\uff0c\u4e0e\u5305\u542b\u6570\u636e\u7684\u8868\u4e0d\u540c\uff0c\u89c6\u56fe\u53ea\u5305\u542b\u4f7f\u7528\u65f6\u52a8\u6001\u68c0\u7d22\u6570\u636e\u7684\u67e5\u8be2\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cdSELECT\u8bed\u53e5\u5c42\u6b21\u7684\u5c01\u88c5\uff0c\u7528\u4ee5\u7b80\u5316\u6570\u636e\u5904\u7406\u4ee5\u53ca\u91cd\u65b0\u683c\u5f0f\u5316\u57fa\u7840\u6570\u636e\u6216\u5305\u542b\u57fa\u7840\u6570\u636e\u3002 \u89c6\u56fe\u7684\u89c4\u5219\u548c\u9650\u5236 # \u521b\u5efa\u89c6\u56fe\uff0cproductcustomers\u8054\u7ed3\u4e09\u4e2a\u8868 CREATE VIEW productcustomers AS SELECT cust_name, cust_contact, prod_id FROM customers, orders, orderitems WHERE customers.cust_id=orders.cust_id AND orders.order_num=orderitems.order_num; # \u5220\u9664\u89c6\u56fe DROP VIEW viewname; # \u67e5\u770b\u521b\u5efa\u89c6\u56fe\u8bed\u53e5 SHOW CREEATE VIEW viewname; \u66f4\u65b0\u89c6\u56fe\uff1a\u53ef\u4ee5\u5bf9\u89c6\u56fe\u4f7f\u7528INSERT\u3001UPDATE \u3001DELETE\u6765\u8fdb\u884c\u66f4\u65b0(\u5b9e\u9645\u4e0a\u662f\u5728\u66f4\u65b0\u57fa\u8868)\uff0c\u4e0d\u8fc7\u5f53\u89c6\u56fe\u5b9a\u4e49\u4e2d\u5305\u542b\u4ee5\u4e0b\u64cd\u4f5c\u65f6\uff0c\u5219\u4e0d\u80fd\u8fdb\u884c\u66f4\u65b0: \u5206\u7ec4(GROUP BY\u548cHAVING)\u3001\u8054\u7ed3\u3001\u5b50\u67e5\u8be2\u3001\u5e76(UNION)\u3001\u805a\u96c6\u51fd\u6570\u3001DISTINCT\u3001\u5bfc\u51fa(\u8ba1\u7b97)\u5217 \u5b58\u50a8\u8fc7\u7a0b \u4fdd\u5b58\u7684\u4e00\u6761\u6216\u591a\u6761MySQL\u8bed\u53e5\u7684\u96c6\u5408\u3002 \u4f18\u70b9: CREATE PROCEDURE productpricing() # ()\u5185\u662f\u5b58\u50a8\u8fc7\u7a0b\u63a5\u6536\u7684\u53c2\u6570 BEGIN SELECT Avg(pord_price) AS priceaverage FROM products; END; # \u6ce8\u610f\u521b\u5efa\u5b58\u50a8\u8fc7\u7a0b\u7ed3\u675f\u65f6\u7684';'\u5c5e\u4e8e\u5b58\u50a8\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u4ee3\u8868MySQL\u8bed\u6cd5\u4e2d\u7684\u5206\u9694\u7b26\uff1b # \u4e00\u822c\u5728\u547d\u4ee4\u884c\u8fd0\u884cSQL\u8bed\u53e5\u65f6\u7ed3\u5c3e\u7684';'\u662f\u5219\u662f\u547d\u4ee4\u884c\u8bed\u53e5\u5206\u9694\u7b26\uff1b # \u5728\u547d\u4ee4\u884c\u4e2d\u521b\u5efa\u8fc7\u7a0b\u65f6\u5185\u90e8\u7684';'\u4e0d\u4f1a\u88ab\u89e3\u91ca\u4e3a\u5b58\u50a8\u8fc7\u7a0b\u7684\u6210\u5206\uff1b # \u53ef\u4ee5\u5728\u521b\u5efa\u524d\u91c7\u7528 DELIMETER \\\\ \u4e34\u65f6\u66f4\u6539\u547d\u4ee4\u884c\u8bed\u53e5\u5206\u9694\u7b26\u4e3a'\\\\' DELIMETER \\\\ CREATE PROCEDURE productpricing() # ()\u5185\u662f\u5b58\u50a8\u8fc7\u7a0b\u63a5\u6536\u7684\u53c2\u6570 BEGIN SELECT Avg(pord_price) AS priceaverage FROM products; END \\\\ DELIMETER ; # \u6062\u590d\u539f\u6765\u7684\u5206\u9694\u7b26 CALL productpricing(); # \u8c03\u7528\u5b58\u50a8\u8fc7\u7a0b DROP PROCEDURE pro_name IF EXISTS; # \u5220\u9664\u5b58\u50a8\u8fc7\u7a0b\uff0c \u540e\u9762\u7684IF EXISTS\u4fdd\u8bc1\u5220\u9664\u65f6\u5373\u4f7f\u4e0d\u5b58\u5728\u4e5f\u4e0d\u4f1a\u62a5\u9519 SHOW CREATE PROCEDURE pro_name; #\u663e\u793a\u5b58\u50a8\u8fc7\u7a0b\u521b\u5efa\u8bed\u53e5 SHOW PROCEDURE STATUS like 'pro_name'; # \u663e\u793a\u5b58\u50a8\u8fc7\u7a0b\u4fe1\u606f\u5217\u8868 \u4f7f\u7528\u53c2\u6570 \u2003\u53c2\u6570\u4f20\u9012\u7c7b\u578b: OUT(\u4ece\u5b58\u50a8\u8fc7\u7a0b\u4f20\u51fa\uff0c\u76f8\u5f53\u4e8e\u8fd4\u56de\u53d8\u91cf)\u3001IN(\u4f20\u9012\u7ed9\u5b58\u50a8\u8fc7\u7a0b\uff0c\u76f8\u5f53\u4e8e\u4f20\u5165\u53c2\u6570)\u3001INOUT(\u5bf9\u5b58\u50a8\u8fc7\u7a0b\u4f20\u5165\u3001\u4f20\u51fa\uff0c\u76f8\u5f53\u4e8e\u5f15\u7528\u53c2\u6570). (\u56e0\u6b64\u5b58\u50a8\u8fc7\u7a0b\u5176\u5b9e\u7c7b\u4f3c\u81ea\u5b9a\u4e49\u7684\u67e5\u8be2\u51fd\u6570) \u2003INTO\u628a\u68c0\u7d22\u7ed3\u679c\u4fdd\u5b58\u5230\u6307\u5b9a\u53d8\u91cf\u3002 \u2003\u56e0\u4e3a\u4e0d\u5141\u8bb8\u901a\u8fc7\u4e00\u4e2a\u53c2\u6570\u8fd4\u56de\u591a\u4e2a\u884c\u548c\u5217\uff0c\u56e0\u6b64\u524d\u9762\u8981\u91c7\u75283\u4e2a\u53c2\u6570\u3002 CALL productpricing( @pricelow, @pricehigh, @priceaverage ); # \u8c03\u7528\u540e\uff0c\u5e76\u4e0d\u663e\u793a\u7ed3\u679c\uff0c\u7ed3\u679c\u5b58\u50a8\u5728\u76f8\u5e94\u7684\u53d8\u91cf\u4e2d SELECT @pricelow; # \u663e\u793a\u7ed3\u679c CREATE PROCEDURE ordertotal( IN onumber INT, OUT total DECIMAL (8, 2) ) BEGIN SELECT Sum(quantity*item_price) FROM orderitems WHERE order_num=onumber INTO total; END; CALL ordertotal(20005, @total); SELECT @total; \u2003 --\u4ee3\u8868\u6ce8\u91ca\uff1bDECLARE\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\uff0c\u6307\u5b9a\u53d8\u91cf\u540d\u548c\u6570\u636e\u7c7b\u578b\uff1b \u6e38\u6807 \u3002\u3002\u3002 \u89e6\u53d1\u5668 \u2003\u5728\u8868\u53d1\u751f\u6539\u52a8\u4e14\u6ee1\u8db3\u54cd\u5e94\u6761\u4ef6\u65f6\u81ea\u52a8\u6267\u884c\uff0c\u53ea\u80fd\u4e3a\u54cd\u5e94DELETE\u3001INSERT\u3001UPDATE\u7684SQL\u8bed\u53e5\u6216\u8005\u4f4d\u4e8eBEGIN\u548cEND\u4e4b\u5185\u7684\u4e00\u7ec4\u8bed\u53e5\u3002 \u2003\u53ea\u6709\u8868\u624d\u652f\u6301TRIGGER\uff0cVIEW\u548c\u4e34\u65f6\u8868\u90fd\u4e0d\u652f\u6301\u3002 # \u89e6\u53d1\u5668\u540d\u6700\u597d\u5728\u6570\u636e\u5e93\u4e2d\u552f\u4e00(MySQL5\u5141\u8bb8\u4e0d\u540c\u7684\u8868\u6709\u76f8\u540c\u7684trigger name) # BEFORE \u548c AFTER\uff0c\u89e6\u53d1\u5668\u88ab\u89e6\u53d1\u7684\u65f6\u523b\u3002\u82e5\u5e0c\u671b\u9a8c\u8bc1\u65b0\u6570\u636e\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219\u4f7f\u7528 BEFORE \u9009\u9879\uff1b # \u82e5\u5e0c\u671b\u5728\u6fc0\u6d3b\u89e6\u53d1\u5668\u7684\u8bed\u53e5\u6267\u884c\u4e4b\u540e\u5b8c\u6210\u51e0\u4e2a\u6216\u66f4\u591a\u7684\u6539\u53d8\uff0c\u5219\u901a\u5e38\u4f7f\u7528 AFTER \u9009\u9879 # FOR EACH ROW \u4e00\u822c\u662f\u6307\u884c\u7ea7\u89e6\u53d1\uff0c\u5bf9\u4e8e\u53d7\u89e6\u53d1\u4e8b\u4ef6\u5f71\u54cd\u7684\u6bcf\u4e00\u884c\u90fd\u8981\u6fc0\u6d3b\u89e6\u53d1\u5668\u7684\u52a8\u4f5c # \u89e6\u53d1\u5668\u52a8\u4f5c\u4e3b\u4f53\uff0c\u5305\u542b\u89e6\u53d1\u5668\u6fc0\u6d3b\u65f6\u5c06\u8981\u6267\u884c\u7684 MySQL \u8bed\u53e5\u3002\u5982\u679c\u8981\u6267\u884c\u591a\u4e2a\u8bed\u53e5\uff0c\u53ef\u4f7f\u7528 BEGIN\u2026END \u590d\u5408\u8bed\u53e5\u7ed3\u6784 # \u6bcf\u4e2a\u8868\u6700\u591a\u652f\u63016\u4e2aTRIGGER(insert\\update\\delete\u7684before\u548cafter) CREATE <\u89e6\u53d1\u5668\u540d> < BEFORE | AFTER > <INSERT | UPDATE | DELETE > ON <\u8868\u540d> FOR EACH Row<\u89e6\u53d1\u5668\u4e3b\u4f53> # MySQL5\u4ee5\u540e\u4e0d\u5141\u8bb8TRIGGER\u8fd4\u56de\u7ed3\u679c\u96c6\uff0c\u8fd9\u91cc\u53ea\u80fd\u5c06\u7ed3\u679c\u8d4b\u7ed9\u53d8\u91cf CREATE TRIGGER newproduct AFTER INSERT ON products FOR EACH ROW SELECT 'Product added' INTO @result; SELECT @result; # \u5220\u9664\u89e6\u53d1\u5668 DROP TRIGGER tri_name; # \u5728INSERT TRIGGER\u4ee3\u7801\u5185\uff0c\u53ef\u5f15\u7528\u4e00\u4e2a\u540d\u4e3aNEW\u7684\u865a\u62df\u8868 # \u800c\u5728DELETE TRIGGER\u4ee3\u7801\u5185\uff0c\u53ef\u5f15\u7528\u4e00\u4e2a\u540d\u4e3aOLD\u7684\u865a\u62df\u8868\uff0c\u8bbf\u95ee\u88ab\u5220\u9664\u7684\u884c CREATE TRIGGER neworder AFTER INSERT ON orders FOR EACH ROW SELECT NEW.order_num INTO @result; \u4e8b\u7269\u5904\u7406 \u7528\u4ee5\u7ef4\u62a4\u6570\u636e\u5e93\u7684\u5b8c\u6574\u6027\uff0c\u5b83\u4fdd\u8bc1\u6210\u6279\u7684MySQL\u64cd\u4f5c\u8981\u4e48\u5b8c\u5168\u6267\u884c\uff0c\u8981\u4e48\u5b8c\u5168\u4e0d\u6267\u884c\u3002 SELECT * FROM tbl; START TRANSACTION; # \u5f00\u59cb\u4e00\u4e2a\u4e8b\u7269\u5904\u7406 DELETE TABLE tbl; DELETE TABLE tbl2; ROLLBACK; # \u56de\u9000\u5230\u4e8b\u7269\u5f00\u59cb\u4e4b\u524d\uff0cSELECT\\CREATE\\DROP\u8fd9\u4e09\u79cd\u8bed\u53e5\u65e0\u6cd5\u56de\u9000 COMMIT; # \u624b\u52a8\u63d0\u4ea4\uff0c\u5982\u679c DELETE \u51fa\u9519,\u5219\u81ea\u52a8\u64a4\u9500\u63d0\u4ea4 # \u4f7f\u7528\u4fdd\u7559\u70b9\uff0c\u5b9e\u73b0\u90e8\u5206\u56de\u9000\uff0c \u4fdd\u7559\u70b9\u5728\u4e8b\u7269\u5904\u7406\u5b8c\u6210(ROLLBACK \u6216 commit)\u540e\u81ea\u52a8\u91ca\u653e SAVEPOINT pos1; ROLLBACK pos1; # pos1\u4e4b\u540e\u7684\u8bed\u53e5\u4e0d\u4f1a\u88ab\u6267\u884c # \u5173\u95ed\u9ed8\u8ba4\u63d0\u4ea4 SET autocommit=0; \u5b57\u7b26\u96c6\u548c\u6821\u5bf9\u987a\u5e8f \u2003\u5b57\u7b26\u96c6\u4e3a\u5b57\u6bcd\u548c\u7b26\u53f7\u7684\u96c6\u5408 \u2003\u7f16\u7801\u4e3a\u67d0\u4e2a\u5b57\u7b26\u96c6\u7684\u5185\u90e8\u8868\u793a \u2003\u6821\u5bf9\u4e3a\u89c4\u5b9a\u5b57\u7b26\u5982\u4f55\u6bd4\u8f83\u7684\u6307\u4ee4, \u5728ORDER BY\\GROUP BY\u7b49\u68c0\u7d22\u6392\u5e8f\u65f6\u6709\u7528\u3002 SHOW CHARACTER SET; SHOW COLLATION; # \u663e\u793a\u6821\u5bf9\u5217\u8868 # \u786e\u5b9a\u6570\u636e\u5e93\u4f7f\u7528\u7684\u5b57\u7b26\u96c6\u548c\u6821\u5bf9 SHOW VARIABLES LIKE 'character%'; SHOW VARIABLES LIKE 'collation%'; #\u5728\u521b\u5efa\u8868\u65f6\u6307\u5b9a\u5b57\u7b26\u96c6\u6216\u8005\u6821\u5bf9\uff0c\u751a\u81f3\u5141\u8bb8\u5bf9\u5217\u8fdb\u884c\u8bbe\u7f6e CREATE TABLE tbl{ xx, column VARCHAR(10) CHARACTER SET BIG5 COLLATE big5_chinese_ci }DEFAULT CHARACTER SET latine COLLATE xx; # \u53ef\u4ee5\u5728SELECT\u65f6\u6307\u5b9a\u4e0e\u521b\u5efa\u65f6\u4e0d\u540c\u7684\u6821\u5bf9 SELECT * FROM tbl ORDER BY x COLLATE XX; \u7ba1\u7406\u7528\u6237 # IDENTIFIED BY 'p@$$w0rd' \u6307\u5b9a\u7528\u6237\u767b\u5f55\u5bc6\u7801(\u6216\u79f0\u53e3\u4ee4) CREATE USER name IDENTIFIED BY 'p@$$w0rd'; RENAME USER old_name TO new_name; DROP USER name; # \u67e5\u770b\u7528\u6237\u8d26\u53f7\u6743\u9650, host\u8868\u793a\u4e3b\u673a\u540d\uff0c\u53ea\u63d0\u4f9busername\u65f6\uff0c\u5219\u9ed8\u8ba4\u4e3b\u673a\u540d\u4e3a%\uff0c\u8868\u793a\u4e0d\u7ba1\u4e3b\u673a\u540d SHOW GRANTS FOR username@host; SHOW GRANTS FOR root@localhost; # \u6388\u4e88\u7528\u6237\u6743\u9650; \u6388\u4e88\u7528\u6237\u5728db_name\u7684\u6240\u6709\u8868\u4e0a\u67e5\u8be2\u7684\u6743\u9650 GRANT SELECT ON db_name.* TO username; # \u64a4\u9500\u6743\u9650 REVOKE SELECT ON db_name.* FROM username; # \u66f4\u6539\u5bc6\u7801 SET PASSWORD FOR username = Password('new password');","title":"home"},{"location":"MySQL/0_start/#_1","text":"","title":"\u6570\u636e\u5e93\u5165\u95e8"},{"location":"MySQL/0_start/#_2","text":"\u6570\u636e\u7c7b\u578b: \u6bcf\u4e2a\u8868\u5217\u90fd\u6709\u76f8\u5e94\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5141\u8bb8\u8be5\u5217\u4e2d\u53ef\u4ee5\u5b58\u50a8\u7684\u6570\u636e\u3002 \u6570\u503c\u7c7b\u578b: \u5305\u62ec\u4e25\u683c\u6570\u503c\u6570\u636e\u7c7b\u578b(INTEGER\u3001SMALLINT\u3001DECIMAL\u548cNUMERIC)\uff0c\u4ee5\u53ca\u8fd1\u4f3c\u6570\u503c\u6570\u636e\u7c7b\u578b (FLOAT\u3001REAL\u548cDOUBLE PRECISION)\u3002\u5173\u952e\u5b57INT\u662fINTEGER\u7684\u540c\u4e49\u8bcd\uff0c\u5173\u952e\u5b57DEC\u662fDECIMAL\u7684\u540c\u4e49\u8bcd\u3002 \u2003 \u65e5\u671f\u548c\u65f6\u95f4\u7c7b\u578b:\u6709 DATETIME(YYYY-MM-DD HH:MM:SS)\u3001TIMESTAMP(YYYYMMDD HHMMSS)\u3001\u548cDATE(YYYY-MM-DD)\u3001 TIME(HH:MM:SS)\u3001YEAR(YYYY)\u3002 \u2003 \u5b57\u7b26\u4e32\u7c7b\u578b: \u5305\u542bCHAR\u3001VARCHAR\u3001BINARY\u3001VARBINARY\u3001BLOB\u3001TEXT\u3001ENUM\u548cSET\uff1b CHAR\u5b9a\u957f\u5b57\u7b26\u4e32\uff0c\u7279\u70b9: \u5b58\u50a8\u7a7a\u95f4\u56fa\u5b9a\u3002 \u957f\u5ea6\u4e0d\u591f\u65f6\u5185\u90e8\u5b58\u50a8\u4f7f\u7528\u7a7a\u683c\u586b\u5145\u3002 \u82e5\u5b57\u6bb5\u672c\u8eab\u672b\u5c3e\u5b58\u5728\u7a7a\u683c\uff0c\u68c0\u7d22\u51fa\u6765\u81ea\u52a8\u622a\u65ad\u672b\u5c3e\u7a7a\u683c\uff08\u56e0\u4e3a\u5206\u4e0d\u6e05\u7a7a\u683c\u662f\u5b57\u6bb5\u542b\u6709\u7684\u8fd8\u662f\u586b\u5145\u4ea7\u751f\u7684\uff09\u3002 \u82e5\u5b57\u6bb5\u672c\u8eab\u524d\u7aef\u5b58\u5728\u7a7a\u683c\uff0c\u662f\u4e0d\u4f1a\u622a\u65ad\u7684\u3002 \u5f53\u8f93\u5165\u7684\u5b57\u7b26\u957f\u5ea6\u8d85\u8fc7\u6307\u5b9a\u957f\u5ea6\u65f6\uff0cchar\u4f1a\u622a\u53d6\u8d85\u51fa\u7684\u5b57\u7b26\u3002 VARCHAR\u53d8\u957f\u5b57\u7b26\u4e32\uff0c\u7279\u70b9: \u5b58\u50a8\u7a7a\u95f4\u4e0d\u56fa\u5b9a\uff0c\u6839\u636e\u5b57\u6bb5\u957f\u5ea6\u51b3\u5b9a\u3002 \u9700\u8981\u989d\u5916\u76841\u4e2a\u62162\u4e2a\u5b57\u8282\u8bb0\u5f55\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u5b57\u7b26\u4e32\u957f\u5ea6\u5c0f\u4e8e255\u5b57\u8282\u4f7f\u75281\u4e2a\u5b57\u8282\uff0c\u5426\u5219\u4f7f\u75282\u4e2a\u3002 \u6700\u5927\u5bb9\u91cf\u4e3a 65535 \u5b57\u8282\uff08\u8fd9\u91cc\u5355\u4f4d\u662f\u5b57\u8282\u800c\u975e\u5b57\u7b26) \u5982\u679c\u5217\u53ef\u4ee5\u4e3anull\uff0c\u5219\u9700\u8981\u989d\u5916\u7684\u4e00\u4e2a\u5b57\u8282\u4f5c\u4e3a\u6807\u5fd7\u3002 \u6700\u5927\u957f\u5ea6 = \u5b57\u6bb5\u957f\u5ea6 + [\u957f\u5ea6\u8bb0\u5f55\uff1a(1\u62162) B] + [null\u6807\u5fd7\u4f4d\uff1a1B] CAHR(M)\u4e2dM\u7684\u8303\u56f4\u662f0~255\uff0cVARCHAR(M)\u4e2dM\u7684\u8303\u56f4\u662f0~65535\uff1bM\u4ee3\u8868\u5b57\u7b26\u4e2a\u6570\uff0c\u6545VARCHAR\u6700\u5927\u5bb9\u91cf\u4e3a65535\u5b57\u8282\u3002 \u5bf9\u4e8eVARCHAR, 4.0\u7248\u672c\u4ee5\u4e0b\uff1avarchar(n)\uff0c\u6307\u7684\u662fn\u4e2a\u5b57\u8282\uff0c\u5982\u679c\u5b58\u653eUTF8\u6c49\u5b57\u65f6\uff0c\u53ea\u80fd\u5b58n/3\u4e2a\uff08\u6bcf\u4e2a\u6c49\u5b573\u5b57\u8282\uff09\u3002 5.0\u7248\u672c\u4ee5\u4e0a\uff1avarchar(n)\uff0c\u6307\u7684\u662fn\u4e2a\u5b57\u7b26\uff0c\u65e0\u8bba\u5b58\u653e\u7684\u662f\u6570\u5b57\u3001\u5b57\u6bcd\u8fd8\u662fUTF8\u6c49\u5b57\uff08\u6bcf\u4e2a\u6c49\u5b573\u5b57\u8282\uff09\uff0c\u90fd\u53ef\u4ee5\u5b58\u653en\u4e2a\uff0c \u8003\u8651\u5230VARCHAR\u6700\u5927\u5bb9\u91cf\uff0c\u6b64\u65f6n\u7684\u5927\u5c0f\u53d7\u5236\u4e8e\u5b57\u7b26\u96c6\uff0c\u5bf9\u4e8eUTF-8\uff0cn\u6700\u5927\u4e3a(65535-2)/3=21844\uff1b \u5bf9\u4e8eGBK\uff0cn\u6700\u5927\u4e3a(65535-2)/2=32766\u3002 \u2003 BINARY \u548c VARBINARY\u7c7b\u4f3c\u4e8e CHAR \u548c VARCHAR\uff0c\u5b58\u50a8\u7684\u662f\u5b57\u8282\u5b57\u7b26\u4e32\uff0c\u5373\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5b50\u4e32\uff1b BLOB \u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u5927\u5bf9\u8c61\uff0c\u53ef\u4ee5\u5bb9\u7eb3\u53ef\u53d8\u6570\u91cf\u7684\u6570\u636e\u3002\u6709 4 \u79cd BLOB \u7c7b\u578b\uff1aTINYBLOB\u3001BLOB\u3001MEDIUMBLOB \u548c LONGBLOB\u3002 \u5b83\u4eec\u533a\u522b\u5728\u4e8e\u53ef\u5bb9\u7eb3\u5b58\u50a8\u8303\u56f4\u4e0d\u540c\uff1b \u6709 4 \u79cd TEXT \u7c7b\u578b\uff1aTINYTEXT\u3001TEXT\u3001MEDIUMTEXT \u548c LONGTEXT\u3002\u5bf9\u5e94\u7684\u8fd9 4 \u79cd BLOB \u7c7b\u578b\uff0c \u53ef\u5b58\u50a8\u7684\u6700\u5927\u957f\u5ea6\u4e0d\u540c\uff0c\u53ef\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u9009\u62e9\u3002 \u4e3b\u952e(primary key): \u4e00\u5217\u6216\u4e00\u7ec4\u5217\uff0c\u5176\u503c(\u4f7f\u7528\u591a\u5217\uff0c\u5219\u8981\u6c42\u5b83\u4eec\u7684\u7ec4\u5408\u503c)\u80fd\u552f\u4e00\u533a\u5206\u8868\u4e2d\u6bcf\u4e00\u4e2a\u884c\u3002 \u2003\u4efb\u610f\u4e24\u884c\u90fd\u4e0d\u5177\u6709\u76f8\u540c\u7684\u4e3b\u952e\u503c\u3002 \u2003\u6bcf\u4e2a\u884c\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u4e3b\u952e\u503c(\u4e3b\u952e\u5217\u4e0d\u5141\u8bb8\u4e3aNULL\u503c)\u3002 NULL && NOT NULL: \u521b\u5efa\u8868\u65f6\uff0c\u53ef\u4ee5\u5bf9\u5217\u65bd\u52a0\u8fd9\u4e24\u79cd\u7ea6\u675f\uff1b\u5176\u4e2dNOT NULL\uff0c\u610f\u5473\u7740\u63d2\u5165\u65f6\u8be5\u5217\u4e0d\u80fd\u4e3aNULL\uff0c\u4f46\u53ef\u4ee5\u4e3a\u7a7a\u503c(\u4f1a\u5360\u7528\u7a7a\u95f4)\uff1b\u5982\u679c\u662fNULL\uff0c\u5219\u63d2\u5165\u65f6\uff0c\u8be5\u5217\u7684\u503c\u53ef\u4ee5\u4e3aNULL(\u4e0d\u5360\u7528\u7a7a\u95f4)\u3002 \u5916\u952e(foreign key): \u4ee5A\u8868\u4e2d\u7684col\u5217\u5173\u8054B\u8868\u4e2d\u7684col\u5217\uff0c\u8981\u6c42B\u4e2dcol\u5217\u5177\u6709\u552f\u4e00\u6027\u7ea6\u675f\uff0c\u4e00\u822c\u4e3a\u5176\u4e3b\u952e\uff1b\u65bd\u52a0\u7ea6\u675f\u540e\uff0cB\u8868\u79f0\u4e3a\u4e3b\u8868\uff0cA\u8868\u79f0\u4e3a\u5916\u952e\u8868\uff1a \u5916\u952e\u5b57\u6bb5\u5728\u521b\u5efa\u7684\u65f6\u5019\u5c31\u5e94\u8be5\u4e0e\u4e3b\u8868\u7684\u7c7b\u578b\u5b8c\u5168\u4e00\u81f4(\u957f\u5ea6\u554a\u7b49)\uff0c\u5426\u5219\u521b\u5efa\u5916\u952e\u4f1a\u62a5\u9519 \u5916\u952e\u8868\u662f\u4e0d\u80fd\u63d2\u5165\u4e3b\u8868\u4e0d\u5b58\u5728\u7684\u6570\u636e \u5916\u952e\u8868\u4e0d\u80fd\u5220\u9664\u5df2\u7ecf\u5173\u8054\u4e0a\u7684\u4e3b\u8868\u6570\u636e","title":"\u57fa\u7840\u6982\u5ff5"},{"location":"MySQL/0_start/#_3","text":"show use xx_database; # help show; \u67e5\u770b\u6240\u6709show show databases; show tables from db_name; show columns from tbl_name; describe xx_table; # \u662f\u4e0a\u9762\u4e00\u53e5\u7684\u5feb\u6377\u547d\u4ee4 show status; # \u663e\u793a\u670d\u52a1\u5668\u72b6\u6001\u4fe1\u606f show variables; # \u67e5\u770b\u5f53\u524dmysql\u914d\u7f6e show create database/table db_name/tbl_name; # \u663e\u793a\u521b\u5efa\u7279\u5b9a\u6570\u636e\u5e93/\u8868\u7684mysql\u8bed\u53e5 show errors; show warnings; \u68c0\u7d22\u8bed\u53e5 select col_name from tbl_name; select col_name1, col_name2 from tbl_name; SELECT DISTINCT col_name FROM tbl_name; # \u8fd4\u56de\u4e0d\u540c\u7684col_name\u884c(\u53bb\u91cd)\u3002distinct\u4f1a\u4fee\u9970\u5176\u540e\u6240\u6709\u7684\u5217 SELECT col_name FROM tbl_name LIMIT 5; # \u8fd4\u56de\u7684\u884c\u4e0d\u591a\u4e8e5\u884c SELECT col_name FROM tbl_name LIMIT 1, 6; # \u8fd4\u56de\u4ece\u7b2c\u4e00\u884c\u5f00\u59cb\u76846\u884c SELECT col_name FROM tbl_name LIMIT 6 OFFSET 1; # \u4eceMysql 5 \u5f00\u59cb\uff0c\u652f\u6301\u4e0a\u4e00\u53e5\u7684\u66ff\u4ee3\u65b9\u6cd5 SELECT tbl_name.col_name FROM db_name.tbl_name; # \u5b8c\u5168\u9650\u5b9a\u8868\u540d\u548c\u5217\u540d \u6392\u5e8f\u6570\u636e SELECT col_name FROM tbl_name ORDER BY col_name; # \u4e5f\u53ef\u4f7f\u7528\u5176\u4ed6\u5217\u8fdb\u884c\u6392\u5e8f SELECT col_name, .. FROM tbl_name ORDER BY col_name1, col_name2, ..; # \u6309\u591a\u4e2a\u5217\u6392\u5e8f\uff0c\u4e14\u6309\u7167\u5217\u51fa\u7684\u5217\u987a\u5e8f # \u9ed8\u8ba4\u662f\u5347\u5e8f\u6392\u5e8f\uff0c\u8fd9\u91cc\u6307\u5b9a\u964d\u5e8f\u6392\u5e8f\u3002DESC\u53ea\u4fee\u9970\u5176\u524d\u7684\u5217\uff0c\u5bf9\u4e8e\u540e\u9762\u7684\u5217\u4efb\u6309\u7167\u5347\u5e8f\u6392\u5e8f SELECT col_name FORM tbl_name ORDER BY col_name DESC; \u8fc7\u6ee4\u6570\u636e SELECT col_name, .. FROM tbl_name WHERE col_name=xx; # where\u5e94\u8be5\u5728order by\u4e4b\u524d # where\u5b50\u53e5\u64cd\u4f5c\u7b26\u5305\u62ec =\u3001<\u3001<=\u3001>\u3001>=\uff0c<>\u548c!=\u90fd\u662f\u4e0d\u7b49\u4e8e # \u4ee5\u53cabetween SELECT prod_name, prod_price FROM products WHERE prod_price BETWEEN 10 AND 20; SELECT col_name FROM tbl_name WHERE col_name IS NULL; # \u68c0\u7d22col_name\u503c\u4e3aNULL\u7684\u884c # AND\u3001OR \u64cd\u4f5c\u7b26\u53ef\u4ee5\u7528\u6765\u7ec4\u5408\u591a\u4e2a\u5b50\u53e5\uff0c\u4e14AND\u7684\u8ba1\u7b97\u6b21\u5e8f\u66f4\u9ad8\uff0c\u53ef\u4ee5\u901a\u8fc7()\u6765\u660e\u786e\u5206\u7ec4\u76f8\u5e94\u7684\u64cd\u4f5c\u7b26 SELECT prod_id FROM products WHERE vend_id = 1000 AND prod_price<100; # IN \u64cd\u4f5c\u7b26\uff0c\u5bf9\u4e8e()\u5185\u7684\u6bcf\u4e2a\u6761\u4ef6\u90fd\u8fdb\u884c\u5339\u914d SELECT col_name FROM tbl_name WHERE col_name2 IN (x, xx, xxx); # NOT \u64cd\u4f5c\u7b26\u7528\u6765\u5426\u5b9a\u540e\u8ddf\u6761\u4ef6\uff0c MySQL\u652f\u6301\u4f7f\u7528NOT\u5bf9 IN\u3001BETWEEN \u548c EXISTS \u5b50\u53e5\u53d6\u53cd SELECT col_name FROM tbl_name WHERE col_name2 NOT IN (x, xx, xxx); \u901a\u914d\u7b26 \u4e3a\u5728\u641c\u7d22\u5b50\u53e5\u4e2d\u4f7f\u7528\u901a\u914d\u7b26\uff0c\u5fc5\u987b\u4f7f\u7528LIKE\u64cd\u4f5c\u7b26\uff0c\u5176\u6307\u793aMySQL\u540e\u8ddf\u7684\u641c\u7d22\u6a21\u5f0f\u5229\u7528\u901a\u914d\u7b26\u5339\u914d\u800c\u4e0d\u662f\u76f4\u63a5\u76f8\u7b49\u5339\u914d\u8fdb\u884c\u6bd4\u8f83\u3002 # %\uff0c \u8868\u793a\u4efb\u4f55\u5b57\u7b26\u51fa\u73b0\u4efb\u4f55\u6b21\u6570, \u8fd9\u662f\u641c\u7d22\u4efb\u610f\u4ee5'jet'\u5f00\u5934\u7684\u8bcd\uff0c\u4e14\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684\uff0c\u5373'JET'\u4e0d\u5339\u914d # LIKE '%' \u5e76\u4e0d\u80fd\u7528\u6765\u5339\u914d\u5176\u503c\u4e3aNULL\u7684\u884c SELECT prod_id, prod_name FROM prodcuts WHERE prod_name LIKE 'jet%'; # _\uff0c \u8868\u793a\u5339\u914d\u4efb\u610f\u5355\u4e2a\u5b57\u7b26 \u6b63\u5219\u8868\u8fbe\u5f0f\u641c\u7d22 \u4f7f\u7528REGEXP\u64cd\u4f5c\u7b26\uff0c\u6307\u660e\u5176\u540e\u7684\u6a21\u5f0f\u4f5c\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u5904\u7406 SELECT col_name, .. FROM tbl_name WHERE col_name2 REGEXP 'XX'; # LIKE \u4f1a\u5339\u914d\u6574\u4e2a\u5217\uff1b\u800cREGEXP\u5728\u5217\u503c\u5185\u8fdb\u884c\u5339\u914d\uff0c\u5982\u679c\u88ab\u5339\u914d\u7684\u6587\u672c\u51fa\u73b0\u5728\u5217\u503c\u4e2d\uff0c\u4e14\u8fd8\u5305\u542b\u5176\u4ed6\u6587\u672c # \u5728\u4e0d\u4f7f\u7528\u901a\u914d\u7b26\u60c5\u51b5\u4e0b\uff0cLIKE\u662f\u65e0\u6cd5\u5339\u914d\u7684\uff0c\u800cREGEXP\u662f\u53ef\u4ee5\u8fd4\u56de\u5339\u914d\u7ed3\u679c\u7684 SELECT prod_name FROM products WHERE prod_name LIKE/REGEXP '1000'; # \u4e14\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u9664\u975e\u662f\u6709BINARY \u5173\u952e\u5b57 SELECT prod_name FROM producys WHERE prod_name REGEXP BINARY 'JET'; . \u8868\u793a\u5339\u914d\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\uff1b | \u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u7684or\u64cd\u4f5c\u7b26\uff0c\u8868\u793a\u5339\u914d\u5176\u4e2d\u4e4b\u4e00\uff0c\u201c100|200|300\u201d\uff1b [] \u5339\u914d\u5176\u4e2d\u5b57\u7b26\u4e4b\u4e00\uff0c\u201c[123] tom\u201d \u8868\u793a\u5339\u914d \u201c1 tom\u201d \u6216 \u201c2 tom\u201d \u6216 \u201c3 tom\u201d\uff1b () \u7528\u5706\u62ec\u53f7\u5c06\u6240\u6709\u9009\u62e9\u9879\u62ec\u8d77\u6765\uff0c\u76f8\u90bb\u7684\u9009\u62e9\u9879\u4e4b\u95f4\u7528 | \u5206\u9694 [0-9] \u5339\u914d0\u52309\u4e2d\u7684\u4e00\u4e2a\u6570\u5b57\uff0c[a-z]\u5339\u914da\u5230z\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\uff1b \\\\ \u8f6c\u4e49\uff0c\u7528\u6765\u5339\u914d\u7279\u6b8a\u5b57\u7b26 \u5b9a\u4f4d\u5143\u5b57\u7b26\uff1a ^ \u6587\u672c\u7684\u5f00\u59cb $ \u6587\u672c\u7684\u7ed3\u5c3e [[: < :]] \u8bcd\u7684\u5f00\u59cb [[:>:]] \u8bcd\u7684\u7ed3\u5c3e eg. \"\\\\([0-9] sticks?\\\\)\": \u5339\u914d\u5305\u542b\u5f62\u5982 \"(1 stick)\" \u6216\u8005 \"(2 stciks)\"\u6587\u672c\u7684\u5217\u503c \"[[:digit:]]{4}\"\uff1a\u5339\u914d\u8fde\u5728\u4e00\u8d77\u7684\u4efb\u610f4\u4f4d\u6570\u5b57 \"^[0-9\\\\.]\"\uff1a\u5339\u914d\u4ee5\u6570\u5b57\u6216\u5c0f\u6570\u70b9\u5f00\u59cb\u7684\u6587\u672c CASE WHEN Show the name and the continent - but substitute Eurasia for Europe and Asia; substitute America - for each country in North America or South America or Caribbean. Show countries beginning with A or B select name, CASE WHEN continent in ('Europe', 'Asia') THEN 'Eurasia' WHEN continent in ('North America','South America', 'Caribbean') THEN 'America' ELSE continent END from world where name like 'A%' or name like 'B%' /* Put the continents right... Oceania becomes Australasia Countries in Eurasia and Turkey go to Europe/Asia Caribbean islands starting with 'B' go to North America, other Caribbean islands go to South America Show the name, the original continent and the new continent of all countries. */ select name,continent, case when continent in ('Eurasia', 'Turkey') then 'Europe/Asia' when continent ='Oceania' then 'Australasia' when continent='Caribbean' then case when name like 'B%' then 'North America' else 'South America' end else continent end from world \u8ba1\u7b97\u5b57\u6bb5 \u8fd0\u884c\u65f6\u5728SELECT\u8bed\u53e5\u5185\u521b\u5efa \uff0c\u4f8b\u5982\u5d4c\u5957\u5b50\u67e5\u8be2\u6216\u8005\u901a\u8fc7\u7ec4\u5408\u5b57\u6bb5(\u5373 column)\u6765\u683c\u5f0f\u5316\u68c0\u7d22\u8f93\u51fa\u7ed3\u679c Concat()\u62fc\u63a5\u5b50\u4e32 \u5220\u9664\u7a7a\u683c\uff0cRTrim()\u53bb\u9664\u4e32\u53f3\u4fa7\u7a7a\u683c\uff0cLTrim()\u53bb\u9664\u4e32\u53f3\u4fa7\u7a7a\u683c\uff0cTrim()\u53bb\u9664\u4e24\u4fa7\u7a7a\u683c AS\uff0c\u53ef\u4ee5\u4e3aConcat()\u5f97\u5230\u7684\u7ed3\u679c\u521b\u5efa\u4e00\u4e2a\u5217\u522b\u540d\uff0c\u65b9\u4fbf\u5ba2\u6237\u673a\u4f7f\u7528 \u53ef\u4ee5\u5728\u8ba1\u7b97\u5b57\u6bb5\u4e2d\u6307\u5411\u7b97\u672f\u8ba1\u7b97 ROUND(), returns f rounded to p decimal places SELECT Concat(Rtrim(vend_name), '(', RTrim(vend_country), ')') AS vend_title FROM vendors; SELECT quantity*item_price AS expanded_price FROM orderitems; \u5173\u4e8enull 1\u3001\u5982\u679c\u8981\u6c42\u67e5\u8be2\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\uff0c\u8f93\u51fanull\uff0c\u6709\u4ee5\u4e0b\u51e0\u79cd\u5904\u7406\u65b9\u6cd5: eg: \u8fd4\u56de\u7b2c2\u9ad8\u85aa\u8d44\uff0c\u6ca1\u6709\u65f6\u8fd4\u56denull(\u4f8b\u5982\u53ea\u6709\u4e00\u6761\u8bb0\u5f55\u6216\u8005\u8bb0\u5f55\u4e2d\u85aa\u8d44\u5168\u90e8\u76f8\u540c) // \u56e0\u4e3aselect null \u8fd4\u56denull select (select distinct salary from employee order by salary desc limit 1, 1) as SecondHighestSalary \u6216 // IFNULL(expr1,expr2)\u7684\u7528\u6cd5\uff1a // \u5047\u5982expr1 \u4e0d\u4e3a NULL\uff0c\u5219 IFNULL() \u7684\u8fd4\u56de\u503c\u4e3a expr1; \u5426\u5219\u5176\u8fd4\u56de\u503c\u4e3a expr2\u3002 select IFNULL( (select distinct salary from employrr order by salary desc limit 1, 1), null ) as HighestSecondSalary \u6570\u636e\u5904\u7406\u51fd\u6570 \u6587\u672c\u5904\u7406\u51fd\u6570: Trim(), Upper(), Lower(), Soundex()\u7b49\uff1b\u5176\u4e2dSoundex\u53ef\u4ee5\u5c06\u6587\u672c\u4e32\u8f6c\u4e3a\u63cf\u8ff0\u5176\u8bed\u97f3\u8868\u793a\u7684\u5b57\u6bcd\u6570\u5b57\u6a21\u5f0f\u7684\u7b97\u6cd5\uff0c\u8003\u8651\u4e86\u7c7b\u4f3c\u7684\u53d1\u97f3\u5b57\u7b26\u548c\u97f3\u8282\uff0c\u4f7f\u5f97\u5bf9\u4e32\u8fdb\u884c\u53d1\u97f3\u6bd4\u8f83\u800c\u4e0d\u662f\u5b57\u7b26\u6bd4\u8f83\u3002 # \u5339\u914d\u6240\u6709\u53d1\u97f3\u7c7b\u4f3c\u2018Lee\u2019\u7684cust_name SELECT cust_name, cust_contact FROM customers WHERE Soundex(cust_name)=Soundex('Lee') \u65e5\u671f\u548c\u65f6\u95f4\u5904\u7406\u51fd\u6570 MySQL\u4f7f\u7528\u7684\u9ed8\u8ba4\u65e5\u671f\u683c\u5f0f\u4e3ayyyy-mm-dd, datetime\u7c7b\u578b\u9664\u4e86\u65e5\u671f\u8fd8\u5305\u62ec\u65f6\u95f4\u503c\uff0chh-mm-ss # \u68c0\u7d222005\u5e749\u6708\u6240\u6709\u8ba2\u5355 SELECT cust_id, order_num FROM orders WHERE DATE(order_date) BETWEEN '2005-09-01' AND '2005-09-30'; SELECT cust_id, order_num FROM orders WHERE Year(order_data)=2005 AND Month(order_date)=9; \u6570\u503c\u5904\u7406\u51fd\u6570 \u4ec5\u7528\u6765\u5904\u7406\u6570\u503c\u6570\u636e\uff0c\u7528\u4e8e\u4ee3\u6570\u3001\u4e09\u89d2\u51fd\u6570\u8ba1\u7b97\u3002\u5982Abs()\u3001Cos()\u3001Sin()\u3001Pi()\u3001Rand()\u3001Mod()\u3001Sqrt()\u3001Exp(). \u5f00\u7a97\u51fd\u6570 \u4ecemysql 8.0\u5f00\u59cb\u652f\u6301 1\u3001\u8bed\u6cd5\u7ed3\u6784 <\u5f00\u7a97\u51fd\u6570> over ([PARTITION by <\u5217\u6e05\u5355>] Order by <\u6392\u5e8f\u7528\u5217\u6e05\u5355>\uff09 \u8bed\u53e5\u4e2d\uff0cPARTITION By \u6307\u5b9a\u6392\u5e8f\u7684\u5bf9\u8c61\u8303\u56f4\uff0c\u542b\u4e49\u4e0a\u7c7b\u4f3cGroup By, \u4f46\u4e0d\u4f1a\u5c06\u7ed3\u679c\u805a\u5408\u5728\u4e00\u8d77, \u800c\u662f\u76f8\u540c\u5217\u6e05\u5355\u7684\u6570\u636e\u7d27\u6328\u4e00\u8d77\uff0c\u671f\u95f4\u987a\u5e8f\u901a\u8fc7 order by\u8fdb\u884c\u6307\u5b9a order by \u6307\u5b9a\u4e86\u6309\u7167\u54ea\u4e00\u5217\uff0c\u4f55\u79cd\u987a\u5e8f\u8fdb\u884c\u6392\u5217\uff08\u7eb5\u5411\u5b9a\u4e49\u6392\u5e8f\u89c4\u5219\uff09 2\u3001\u5e38\u7528\u5f00\u7a97\u51fd\u6570\u5305\u62ec\u805a\u5408\u51fd\u6570\u548c\u4e0b\u9762\u51e0\u79cd\u4e13\u7528\u5f00\u7a97\u51fd\u6570 row_number()\uff1a\u4f9d\u6b21\u9012\u589e\u6392\u540d\uff0c\u65e0\u91cd\u590d\u6392\u540d rank()\uff1a\u76f8\u540c\u5206\u6570\u6709\u91cd\u590d\u6392\u540d\uff0c\u4f46\u662f\u91cd\u590d\u540e\u4e0b\u4e00\u4e2a\u4eba\u6309\u7167\u5b9e\u9645\u6392\u540d dense_rank()\uff1a\u5206\u6570\u4e00\u81f4\u6392\u540d\u4e00\u81f4\uff0c\u5206\u6570\u4e0d\u4e00\u81f4\u6392\u540d+1 NTILE(4)\uff1a\u5206\u7ec4\u6392\u540d\uff0c\u91cc\u9762\u7684\u6570\u5b57\u662f\u51e0\uff0c\u6700\u591a\u6392\u540d\u5c31\u662f\u51e0\uff0c\u91cc\u9762\u7684\u6570\u5b57\u662f4\uff0c\u6700\u591a\u7684\u6392\u540d\u5c31\u662f4 \u805a\u5408\u51fd\u6570(aggregate function) \u7528\u4e8e\u5bf9\u8868\u4e2d\u6570\u636e\u8fdb\u884c\u6c47\u603b\uff0c\u4f46\u65e0\u9700\u8fd4\u56de\u5b9e\u9645\u8868\u9879\u6570\u636e\uff0c\u5982\u6ee1\u8db3\u6761\u4ef6\u7684\u884c\u6570\uff0c\u8868\u5217\u7684\u6700\u5927/\u5c0f\u503c\u7b49\u3002 \u2003\u82e5\u67d0\u884c\u7684score\u503c\u4e3anull\u65f6\uff0c\u8ba1\u7b97\u5e73\u5747\u503c\u65f6\u4f1a\u5ffd\u7565\u5e26\u6709null\u503c\u7684\u90a3\u4e00\u884c\u3002\u5982\u679c\u60f3\u8981\u628anull\u5f53\u505a0\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528IsNull\u51fd\u6570\u628anull\u8f6c\u6362\u62100\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a avg(IsNull(score\uff0c0)\uff09 as 'Average Score' # AVG\u53ea\u80fd\u7528\u4e8e\u5355\u4e2a\u5217\uff0c\u4e3a\u83b7\u5f97\u591a\u4e2a\u5217\uff0c\u5fc5\u987b\u4f7f\u7528\u591a\u4e2aAVG\u51fd\u6570 SELECT AVG(prod_price) AS avg_price WHERE vend_id=100; # COUNT(*) \u7edf\u8ba1\u8868\u4e2d\u884c\u7684\u6570\u76ee\uff0c\u5373\u4f7f\u5217\u503c\u4e3aNULL\uff0c\u800cCOUNT(column)\u5bf9\u7279\u5b9a\u5217\u4e2d\u5177\u6709\u503c\u5f97\u884c\u8fdb\u884c\u7edf\u8ba1\uff0c\u5ffd\u7565NULL # \u5229\u7528\u6807\u51c6\u7b97\u672f\u64cd\u4f5c\u7b26\uff0c\u53ef\u4ee5\u5728\u591a\u4e2a\u5217\u4e0a\u8fdb\u884c\u8ba1\u7b97; SUM\u4f1a\u5ffd\u7565\u5217\u503c\u4e3aNULL\u7684\u884c SELECT SUM(item_price*quantity) AS total_price FROM orderitems WHERE order_num=200; \u805a\u96c6\u4e0d\u540c\u503c: \u4e0a\u8ff0\u4e94\u4e2a\u805a\u96c6\u51fd\u6570\u53ef\u4ee5\u5bf9\u76f8\u5e94\u7684\u5217\u6307\u5b9aALL\u6216DISTINCT\u5173\u952e\u5b57\uff0c\u524d\u8005\u8868\u793a\u5bf9\u6240\u6709\u7684\u884c\u6267\u884c\u7b5b\u9009\uff1b\u540e\u8005\u53ea\u5bf9\u503c\u4e0d\u540c\u7684\u884c\u8fdb\u884c\u7b5b\u9009\u3002ALL\u53ef\u4ee5\u4e0d\u7528\u6307\u5b9a\uff0c\u662f\u9ed8\u8ba4\u884c\u4e3a\u3002 SELECT\u8bed\u53e5\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u805a\u96c6\u51fd\u6570\u3002 SELECT COUNT(*) AS num_items, MIN(prod_price) AS price_min, AVG(prod_price) AS avg_price FROM products; \u81ea\u5b9a\u4e49\u51fd\u6570 delimiter \u81ea\u5b9a\u4e49\u7b26\u53f7\u3000\u3000-- \u5982\u679c\u51fd\u6570\u4f53\u53ea\u6709\u4e00\u6761\u8bed\u53e5, begin\u548cend\u53ef\u4ee5\u7701\u7565, \u540c\u65f6delimiter\u4e5f\u53ef\u4ee5\u7701\u7565 create function \u51fd\u6570\u540d(\u5f62\u53c2\u5217\u8868) returns \u8fd4\u56de\u7c7b\u578b\u3000\u3000 -- \u6ce8\u610f\u662fretruns\uff1b \u5f62\u53c2\u5217\u8868\u5f62\u5f0f\uff1a\u5f62\u53c2\u540d\uff0c\u5f62\u53c2\u7c7b\u578b\uff0c \u4f8b\u5982 a INT \u3000\u3000begin \u3000\u3000\u3000\u3000\u51fd\u6570\u4f53 -- \u51fd\u6570\u5185\u5b9a\u4e49\u7684\u53d8\u91cf\u5982\uff1aset @x = 1; \u53d8\u91cfx\u4e3a\u5168\u5c40\u53d8\u91cf\uff0c\u5728\u51fd\u6570\u5916\u9762\u4e5f\u53ef\u4ee5\u4f7f\u7528\uff1b -- \u4f7f\u7528declare\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\uff0c \u4f8b\u5982 declare i int default 1; -- \u4fee\u6539\u53d8\u91cf\u503c: set i = i+1; return (-- \u8fd9\u91cc\u53ef\u4ee5\u5199SQL\u8bed\u53e5); \u3000\u3000end \u3000\u3000\u81ea\u5b9a\u4e49\u7b26\u53f7 delimiter ; \u5206\u7ec4\u6570\u636e \u521b\u5efa\u5206\u7ec4: GROUP BY \u8fc7\u6ee4\u5206\u7ec4: HAVING HAVING\u5b50\u53e5\u7c7b\u4f3cWHERE\uff0cWHERE\u5b50\u53e5\u53ef\u4ee5\u7528HAVING\u4ee3\u66ff\uff0c\u4e24\u8005\u533a\u522b\u5728\u4e8e: \u2003WHERE\u53ea\u80fd\u8fc7\u6ee4\u884c\uff0c\u4e14\u5176\u5728\u5206\u7ec4\u524d\u8fdb\u884c\u8fc7\u6ee4\uff0c\u800cHAVING\u57fa\u4e8e\u5206\u7ec4\u7684\u805a\u5408\u503c\u800c\u4e0d\u662f\u7279\u5b9a\u884c\u7684\u503c\u6765\u8fc7\u6ee4\u6570\u636e\uff0c\u4e3b\u8981\u7528\u6765\u8fc7\u6ee4\u5206\u7ec4\u3002 \u2003WHERE\u5b50\u53e5\u4e0d\u53ef\u4ee5\u5305\u542b\u805a\u5408\u51fd\u6570\uff0cHAVING \u5b50\u53e5\u4e2d\u7684\u6761\u4ef6\u53ef\u4ee5\u5305\u542b\u805a\u5408\u51fd\u6570\u3002 \u2003HAVING \u5b50\u53e5\u662f\u5728\u6570\u636e\u5206\u7ec4\u540e\u8fdb\u884c\u8fc7\u6ee4\uff0cWHERE \u5b50\u53e5\u4f1a\u5728\u6570\u636e\u5206\u7ec4\u524d\u8fdb\u884c\u8fc7\u6ee4\u3002WHERE \u5b50\u53e5\u6392\u9664\u7684\u884c\u4e0d\u5305\u542b\u5728\u5206\u7ec4\u4e2d\uff0c\u53ef\u80fd\u4f1a\u5f71\u54cd HAVING \u5b50\u53e5\u57fa\u4e8e\u8fd9\u4e9b\u503c\u8fc7\u6ee4\u6389\u7684\u5206\u7ec4\u3002 \u2003\u4f7f\u7528GROUP BY\u65f6\uff0cselect \u540e\u9762\u7684\u6240\u6709\u5217\u4e2d,\u6ca1\u6709\u4f7f\u7528\u805a\u5408\u51fd\u6570\u7684\u5217,\u5fc5\u987b\u51fa\u73b0\u5728 group by \u540e\u9762 SELECT vend_id, COUNT(*) AS num_prods FROM products GROUP BY vend_id; SELECT cust_id, COUNT(*) AS orders FROM orders GROUP BY cust_id HAVING COUNT(*)>=2; SELECT vend_id, COUNT(*) AS num_prods FROM products WHERE prod_price>=10 GROUP BY vend_id HAVING COUNT(*)>=2; SELECT order_num, SUM(quantity*item_price) AS ordertotal FROM orderitems GROUP BY order_num HAVING SUM(quantity*item_price) ORDER BY ordertotal; \u5b50\u67e5\u8be2 \u2003\u5d4c\u5957\u5728\u5176\u4ed6\u67e5\u8be2\u4e2d\u7684\u67e5\u8be2\u3002 SELECT cust_name,cust_contact FROM customers WHERE cust_id IN ( SELECT cust_id FROM orders WHERE order_num IN ( SELECT order_num FROM orderitems WHERE prod_id='TNT2' ) ); SELECT cust_name, (SELECT COUNT(*) FROM orders WHERE orders.cust_id=customere.cust_id) AS num_orders FROM customers ORDER BY cust_name; \u8054\u7ed3 \u2003\u662f\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u5728SELECT\u4e2d\u5173\u8054\u8868\uff0c\u53ef\u4ee5\u8054\u7ed3\u591a\u4e2a\u8868\u8fd4\u56de\u4e00\u7ec4\u8f93\u51fa\uff0c\u8054\u7ed3\u5728\u8fd0\u884c\u65f6\u5173\u8054\u8868\u4e2d\u7684\u884c\u3002 # \u901a\u8fc7where\u5b50\u53e5\u5b9e\u73b0\u8054\u7ed3 SELECT vend_name, prod_name, prod_price FROM vendors, products WHERE vendors.vend_id=products.vend_id ORDER BY vend_nam, prod_name; # \u53c9\u8054\u7ed3/\u7b1b\u5361\u5c14\u79ef\uff0c\u7531\u6ca1\u6709\u8054\u7ed3\u5173\u7cfb\u7684\u8868\u8fd4\u56de\u7684\u7ed3\u679c\u4e3a\u7b1b\u5361\u5c14\u79ef # \u68c0\u7d22\u7684\u884c\u7684\u6570\u76ee\u5c06\u662f\u7b2c\u4e00\u4e2a\u8868\u7684\u884c\u6570\u4e58\u4ee5\u7b2c\u4e8c\u4e2a\u8868\u7684\u884c\u6570 SELECT vend_name, prod_name, prod_price FROM vendors, products ORDER BY vend_nam, prod_name; # \u7b49\u503c\u8054\u7ed3/\u5185\u90e8\u8054\u7ed3\uff0c\u57fa\u4e8e\u4e24\u4e2a\u8868\u4e4b\u95f4\u7684\u76f8\u7b49\u6d4b\u8bd5\uff0c\u901a\u8fc7where\u5b50\u53e5\u5b9e\u73b0\u7684\u5c31\u662f\u8fd9\u79cd\u8054\u7ed3 # \u4e0d\u8fc7\u4e5f\u53ef\u7528\u5176\u4ed6\u8bed\u6cd5(INNER JOIN)\u6765\u6307\u660e\u8054\u7ed3\u5173\u7cfb, \u6b64\u65f6\u53ea\u80fd\u7528ON\u4f20\u9012\u8054\u7ed3\u6761\u4ef6 SELECT vend_name, prod_name, prod_price FROM vendors INNER JOIN products ON vendors.vend_id=products.vend_id # \u8054\u7ed3\u591a\u4e2a\u8868\uff0cSQL\u5bf9\u4e8e\u8054\u7ed3\u7684\u8868\u6570\u91cf\u6ca1\u6709\u9650\u5236 # \u4e0b\u9762\u7528\u8054\u7ed3\u5b9e\u73b0\u4e4b\u524d\u7684\u5b50\u67e5\u8be2 SELECT cust_name, cust_contact FROM customers, orders, orderitems WHERE customers.cust_id=orders.cust_id AND orders.order_num=orderitems.order_num AND prod_id='TNT2'; # \u4f7f\u7528\u8868\u522b\u540d\uff0c\u7b80\u5316\u8bed\u53e5\uff0c\u8868\u522b\u540d\u53ea\u5728\u67e5\u8be2\u4e2d\u4f7f\u7528\uff0c\u4e0d\u8fd4\u56de\u5ba2\u6237\u673a # \u8868\u522b\u540d\u5728 FROM \u5b50\u53e5\u4e2d\u5b9a\u4e49\uff0c\u53ef\u7528\u5728 SELECT\u3001WHERE\u3001ORDER BY \u7b49\u5b50\u53e5\u4e2d SELECT cust_name, cust_contact FROM customers AS c, orders AS o, orderitems AS oi WHERE c.cust_id=o.cust_id AND o.order_num=oi.order_num AND prod_id='TNT2'; # \u81ea\u8054\u7ed3\uff0c\u5728\u5355\u6761\u8bed\u53e5\u503c\u591a\u6b21\u5f15\u7528\u76f8\u540c\u7684\u8868 # \u901a\u8fc7\u8868\u522b\u540d\u6765\u907f\u514d\u4e8c\u4e49\u6027\uff0c\u4ece\u800c\u5c06\u540c\u4e00\u4e2a\u8868\u770b\u6210\u65b0\u8868\uff0c\u548c\u81ea\u8eab\u8054\u7ed3 # \u4e0b\u9762\u662f\u67e5\u8be2\u63d0\u4f9bDTNTR\u7684\u4f9b\u8d27\u5546\u63d0\u4f9b\u7684\u6240\u6709\u4ea7\u54c1 SELECT p1.prod_id, p1.prod_num FROM products AS p1, products AS p2 WHERE p1.vend_id=p2.vend_id AND p2.prod_id='DTNTR'; # \u5916\u90e8\u8054\u7ed3\uff0c\u8054\u7ed3\u5305\u542b\u4e86\u90a3\u4e9b\u5728\u76f8\u5173\u8868\u4e2d\u6ca1\u6709\u5173\u8054\u884c\u7684\u884c # \u4f8b\u5982\u7edf\u8ba1\u6bcf\u4e2a\u7528\u6237\u7684\u8ba2\u5355\uff0c\u5305\u62ec\u90a3\u4e9b\u6ca1\u6709\u8ba2\u5355\u7684\u7528\u6237(\u5176\u5728\u8ba2\u5355\u8868\u4e2d\u4e0d\u5b58\u5728\u5173\u8054\u7684\u884c) # OUTER JOIN\u6307\u660e\u5c5e\u4e8e\u5916\u90e8\u8054\u7ed3\uff0cLEFT\u6307\u660e\u662f\u5de6\u4fa7\u7684customers\u5305\u542b\u6240\u6709\u7684\u884c\uff1b # \u82e5\u662f\u4f7f\u7528 RIGHT\uff0c\u5219\u662f\u53f3\u4fa7\u7684order\u8868\u6240\u6709\u7684\u884c\uff0c\u8fd4\u56de\u7ed3\u679c\u662f\u90a3\u4e9b\u4e0b\u4e86\u8ba2\u5355\u7684\u7528\u6237\u7684\u884c\u3002 # order_num\u4ee3\u8868\u7684\u662f\u8ba2\u5355 id, \u800c\u975e\u6570\u91cf SELECT customers.cust_id, order_num FROM customers LEFT OUTER JOIN orders ON customers.cust_id=orders.cust_id; # \u4e0b\u9762\u5219\u662f\u7edf\u8ba1\u6bcf\u4e2a\u7528\u6237\u7684\u8ba2\u5355\u6570\u91cf\uff0c\u91c7\u7528\u805a\u96c6\u51fd\u6570\u7684\u5916\u90e8\u8054\u7ed3 SELECT customers.cust_id, COUNT(order_num) AS num_ord FROM customers LEFT OUTER JOIN orders ON customers.cust_id=orders.cust_id GROUP BY customers.cust_id; \u7ec4\u5408\u67e5\u8be2 \u2003\u5728\u5355\u4e2a\u67e5\u8be2\u4e2d\u4ece\u4e0d\u540c\u7684\u8868\u8fd4\u56de\u7c7b\u4f3c\u7ed3\u6784\u7684\u6570\u636e \u2003\u5bf9\u5355\u4e2a\u8868\u6267\u884c\u591a\u4e2a\u67e5\u8be2\uff0c\u6309\u5355\u4e2a\u67e5\u8be2\u8fd4\u56de\u6570\u636e \u53ef\u4f7f\u7528 UNION \u64cd\u4f5c\u7b26\u7ec4\u5408\u6570\u6761SQL\u67e5\u8be2\uff0c\u5176\u6548\u679c\u4e0e\u5177\u6709\u591a\u4e2aWHERE\u5b50\u53e5\u6761\u4ef6\u7684\u67e5\u8be2\u5b8c\u6210\u7684\u5de5\u4f5c\u76f8\u540c\uff0c\u5177\u4f53\u4f7f\u7528\u54ea\u79cd\u65b9\u5f0f\u7b80\u4fbf\u3001\u9ad8\u6548\u9700\u8981\u7ecf\u8fc7\u6d4b\u8bd5\u3002 UNION\u5fc5\u987b\u7531\u4e24\u6761\u6216\u591a\u6761SELECT\u8bed\u53e5\u7ec4\u6210\uff0c\u8bed\u53e5\u4e4b\u95f4\u901a\u8fc7UNION\u5206\u9694\uff1b UNION\u7684\u6bcf\u4e2a\u67e5\u8be2 \u5fc5\u987b\u5305\u542b\u76f8\u540c\u7684\u5217\u3001\u8868\u8fbe\u5f0f\u3001\u805a\u96c6\u51fd\u6570 \uff1b \u5217\u7c7b\u578b\u5fc5\u987b\u517c\u5bb9\uff0c\u5373DBMS\u53ef\u4ee5\u9690\u5f0f\u8f6c\u6362\u7684\u7c7b\u578b \u2003 UNION\u9ed8\u8ba4\u4f1a\u53bb\u9664\u591a\u6761\u67e5\u8be2\u8bed\u53e5\u8fd4\u56de\u4e2d\u91cd\u590d\u7684\u884c\uff0c\u4f7f\u7528UNION ALL\u53ef\u4ee5\u8fd4\u56de\u6240\u6709\u5339\u914d\u884c\uff0c\u5305\u62ec\u91cd\u590d\u884c\u3002 \u5bf9\u7ec4\u5408\u7ed3\u679c\u6392\u5e8f\uff0c\u53ea\u80fd\u5728\u6700\u540e\u4e00\u6761SELECT\u8bed\u53e5\u4e4b\u540e\u4f7f\u7528 ORDER BY\u3002 SELECT vend_id, prod_id, prod_price FROM proucts WHERE prod_price <=5 UNION SELECT vend_id, prod_id, prod_price FROM proucts WHERE vend_id in (1000, 1005); \u5168\u6587\u672c\u641c\u7d22 MyISAM\u5f15\u64ce\u652f\u6301\uff0c\u800cInnoDB\u4e0d\u652f\u6301(5.7\u7248\u672c\u5f00\u59cb\u652f\u6301)\u3002 \u76f8\u8f83\u4e8e\u901a\u914d\u7b26\u548c\u6b63\u5219\u8868\u8fbe\u5f0f\u5c1d\u8bd5\u5339\u914d\u8868\u4e2d\u6240\u6709\u884c\uff0c\u65e0\u6cd5\u660e\u786e\u63a7\u5236\u5339\u914d\u6761\u4ef6\uff0c\u4ee5\u53ca\u4e0d\u80fd\u63d0\u4f9b\u667a\u80fd\u5316\u7684\u641c\u7d22\u7ed3\u679c\uff0c \u5168\u6587\u672c\u641c\u7d22\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002 \u542f\u7528\u5168\u6587\u672c\u641c\u7d22\uff0cMySQL\u4f1a\u521b\u5efa\u6307\u5b9a\u5217\u4e2d\u5404\u8bcd\u7684\u4e00\u4e2a\u7d22\u5f15\uff0c\u641c\u7d22\u65f6\u4f1a\u9488\u5bf9\u8fd9\u4e9b\u8bcd\u8fdb\u884c\u3002 \u2003 \u4e00\u822c\u5728\u521b\u5efa\u8868\u65f6\u542f\u7528\u5168\u6587\u672c\u641c\u7d22\uff0c CREATE TABLE productnotes( note_text text NULL, FULLTEXT(note_text) )ENGINE=MyISAM; FULLTEXT\u53ef\u4ee5\u7d22\u5f15\u591a\u4e2a\u5217\uff0c\u5b9a\u4e49\u4e4b\u540e\uff0cMySQL\u4f1a\u81ea\u52a8\u7ef4\u62a4\u7d22\u5f15\u3002\u4f7f\u7528Match()\u548cAgainst()\u6267\u884c\u5168\u6587\u672c\u641c\u7d22\u3002 \u5168\u6587\u672c\u641c\u7d22\u7684\u4e00\u4e2a\u91cd\u8981\u90e8\u5206\u5c31\u662f\u5bf9\u7ed3\u679c\u6392\u5e8f\uff0c\u5177\u6709\u8f83\u9ad8\u7b49\u7ea7\u7684\u884c\u5148\u8fd4\u56de # \u4f20\u9012\u7ed9Match()\u7684\u503c\u5fc5\u987b\u4e0eFULLTEXT\u4e2d\u7684\u5b9a\u4e49\u76f8\u540c\uff0c\u4e14\u6b21\u5e8f\u76f8\u540c\uff0c\u5373\u4f7f\u4e0d\u641c\u7d22\u67d0\u4e2a\u5217\uff0c\u4e5f\u8981\u5217\u51fa\u6765 # \u641c\u7d22\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u9664\u975e\u4f7f\u7528BINARY\u3002 SELECT note_text FROM productnotes WHERE Match(note_text) Against('rabbit'); \u67e5\u8be2\u6269\u5c55 SELECT note_text FROM productnotes WHERE Match(note_text) Against('anvils' WITH QUERY EXPANSION); \u5e03\u5c14\u6587\u672c\u641c\u7d22 # \u5339\u914d\u5305\u542banvils\u4f46\u4e0d\u5305\u542b\u4efb\u610f\u4ee5rope\u5f00\u5934\u7684\u8bcd\u7684\u884c SELECT note_text FROM productnotes WHERE Match(note_text) Against('anvils -rope*' IN BOOLEAN MODE); # \u5339\u914d\u77ed\u8bedrabbit bait\u800c\u975e\u4e24\u4e2a\u5355\u72ec\u7684\u5355\u8bcd SELECT note_text FROM productnotes WHERE Match(note_text) Against('\"rabbit bait\"' IN BOOLEAN MODE); # \u5339\u914dsafe\u548ccombination\uff0c\u4f46\u964d\u4f4e\u540e\u8005\u7684\u7b49\u7ea7 SELECT note_text FROM productnotes WHERE Match(note_text) Against('+safe +(<combination)' IN BOOLEAN MODE); \u6570\u636e\u63d2\u5165 # \u6309\u521b\u5efa\u8868\u65f6\u5217\u7684\u987a\u5e8f\uff0c\u63d2\u5165\u5217\u503c INSERT INTO tbl_name VALUES(..); # \u6839\u636e\u7b2c\u4e00\u4e2a()\u5185\u63d0\u4f9b\u7684\u5217\u540d\u6765\u9009\u62e9\u63d2\u5165\uff0c\u987a\u5e8f\u4e0d\u9700\u6309\u7167\u521b\u5efa\u987a\u5e8f\uff0c\u4e14\u53ef\u4ee5\u7701\u7565\u67d0\u4e9b\u5217(\u8981\u6c42\u8be5\u5217\u5141\u8bb8NULL\u6216\u8005\u6709\u9ed8\u8ba4\u503c) INSERT INTO tbl_name(col_name1, ..) VALUES(col_value1,..) # \u63d2\u5165\u591a\u884c, \u53ef\u4ee5\u4f7f\u7528\u591a\u6761INSERT\u8bed\u53e5\uff0c\u4e00\u6b21\u63d0\u4ea4\uff0c\u4e2d\u95f4\u7528\u2018;\u2019\u9694\u5f00, # \u6216\u8005\u5982\u4e0b, \u8981\u6c42INSERT\u8bed\u53e5\u4e2d\u5217\u540d\u548c\u6b21\u5e8f\u76f8\u540c\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6027\u80fd\u4e5f\u8981\u66f4\u597d INSERT INTO tbl_name(col_name1, ..) VALUES(col1_value,..), (col1_value2, ..); # \u63d2\u5165\u68c0\u7d22\u51fa\u7684\u6570\u636e, \u5c06\u4ece\u5176\u4ed6\u8868\u4e2d\u68c0\u7d22\u5230\u7684\u6570\u636e\u63d2\u5165\u8868\u4e2d # \u68c0\u7d22\u7684\u5217\u5bf9\u5e94\u88ab\u63d2\u5165\u8868\u7684\u6bcf\u4e00\u5217 INSERT INTO tbl_name(col_name, ..) SELECT tbl_nameX, .. FROM tbl_name_new WHERE ..; \u66f4\u65b0\u6570\u636e # IGNORE, \u5728\u66f4\u65b0\u591a\u884c\u65f6\uff0c\u5982\u679c\u67d0\u4e00\u884c\u66f4\u65b0\u9519\u8bef\uff0c\u4f7f\u7528IGNORE\u5173\u952e\u5b57\u53ef\u4ee5\u907f\u514d\u4e4b\u524d\u53d1\u751f\u66f4\u65b0\u7684\u884c\u6062\u590d\u5230\u539f\u503c UPDATE IGNORE tbl_name SET col_name='xx' col_name2='xx' WHERE ..; # \u82e5\u7f3a\u5c11WHERE\u5b50\u53e5\u5219\u4f1a\u66f4\u65b0\u6240\u6709\u884c # \u5220\u9664\u67d0\u4e9b\u884c\u7684\u4e00\u5217\u7684\u503c UPDATE tbl_name SET col_name=NULL WHERE ..; \u5220\u9664\u6570\u636e # \u5220\u9664\u7279\u5b9a\u7684\u884c, \u82e5\u60f3\u5220\u9664\u5217\uff0c\u9700\u8981\u901a\u8fc7UPDATE\u6765\u66f4\u65b0\u8be5\u5217\u503c\u4e3aNULL\u3002 DELETE FROM tbl_name; WHERE ..; # \u4ece\u8868\u4e2d\u5220\u9664\u6240\u6709\u884c\uff0c\u5b9e\u9645\u4e0a\u662f\u5220\u9664\u539f\u8868\uff0c\u5e76\u91cd\u65b0\u521b\u5efa\uff1b # DELETE FROM tbl_name;\u5219\u662f\u9010\u884c\u5220\u9664 TRUNCATE tbl_name; MySQL\u6ca1\u6709\u64a4\u9500\u64cd\u4f5c\uff0c\u5e94\u5341\u5206\u5c0f\u5fc3\u4f7f\u7528UPDATE\u548cDELETE \u521b\u5efa\u548c\u64cd\u4f5c\u8868 # cust_id \u548ccust_name\u4e24\u5217\u4e0d\u5141\u8bb8\u4e3a\u7a7a\uff1b # \u5176\u4e2dcust_id\u8bbe\u7f6e\u4e3a\u81ea\u589e\uff0c\u53ef\u4ee5\u5728\u63d2\u5165\u65f6\u4e0d\u63d0\u4f9b\u503c\uff0c\u7531MySQL\u81ea\u52a8\u63d0\u4f9b # \u6bcf\u4e2a\u8868\u53ea\u80fd\u6709\u4e00\u4e2a\u5217\u8bbe\u7f6eAUTO_INCREMENT # \u63d2\u5165\u65f6\u4e5f\u53ef\u4ee5\u4e3a\u8fd9\u6837\u7684\u5217\u8bbe\u7f6e\u4e00\u4e2a\u4ece\u672a\u7528\u8fc7\u7684\u503c\uff0c\u540e\u7eed\u5c06\u4ece\u65b0\u503c\u5f00\u59cb\u9012\u589e # \u4f7f\u7528last_insert_id()\u53ef\u4ee5\u83b7\u5f97\u6700\u540e\u4e00\u6b21\u9012\u589e\u5f97\u5230\u7684AUTO_INCREMENT\u503c\uff1b # \u53ef\u4ee5\u4f7f\u7528' DEFAULT xx '\u5728'NULL, '\u540e\uff0c\u4e3a\u8be5\u5217\u63d0\u4f9b\u4e00\u4e2a\u9ed8\u8ba4\u503c\uff1b CREATE TABLE customers IF NOT EXISTS # IF NOT EXISTS \u8868\u793a\u4ec5\u5728customers\u8868\u4e0d\u5b58\u5728\u65f6\u521b\u5efa\uff0c\u5426\u5219\u8df3\u8fc7 ( cust_id int NOT NULL AUTO_INCREMENT, cust_name char(50) NOT NULL , cust_address char(50) NULL , cust_city char(50) NULL , cust_state char(5) NULL , cust_zip char(10) NULL , cust_country char(50) NULL , cust_contact char(50) NULL , cust_email char(255) NULL , PRIMARY KEY (cust_id) # \u6307\u5b9a\u4e3b\u952e, \u62ec\u53f7\u5185\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u5217 ) ENGINE=InnoDB; # \u901a\u8fc7 ALTER TABLE \u66f4\u65b0\u8868\uff0c\u53ef\u4ee5\u65b0\u589e\u5217\uff0c\u5220\u9664\u65e7\u5217(DROP COLUMN col_name)\uff0c\u4ee5\u53ca\u5b9a\u4e49\u5916\u952e ALTER TABLE tbl_name ADD col_name, col_type; # \u4e3atbl_name.col_name1\u65bd\u52a0\u5916\u952etbl_name2.col_name2\u7ea6\u675f ALTER TABLE tbl_name ADD CONSTRAINT fk_name FOREIGN KEY (col_name1) REFERENCES tbl_name2(col_name2); # \u5220\u9664\u5916\u952e ALTER TABLE tbl_name DROP FOREIGN KEY fk_name; # \u5220\u9664\u8868 DROP TABLE tbl_name; # \u91cd\u547d\u540d\u8868 RENAME TABLE old_tbl TO new_tbl, old_tbl2 TO new_tbl2; \u2003ENGINE:MySQL\u5e38\u7528\u7684\u5f15\u64ce\u5305\u62ecInnoDB(\u4e00\u79cd\u4e8b\u52a1\u5904\u7406\u5f15\u64ce\uff0c\u4e0d\u652f\u6301\u5168\u6587\u672c\u641c\u7d22)\u3001MyISAM(\u6027\u80fd\u6781\u9ad8\uff0c\u652f\u6301\u5168\u6587\u672c\u5904\u7406\uff0c\u4e0d\u652f\u6301\u4e8b\u52a1\u5904\u7406)\u3001MEMORY(\u529f\u80fd\u7b49\u540cMyISAM\uff0c\u4f46\u7531\u4e8e\u6570\u636e\u5b58\u50a8\u5728\u5185\u5b58\u800c\u975e\u78c1\u76d8\u4e2d\uff0c\u901f\u5ea6\u5f88\u5feb\uff0c\u9002\u7528\u4e8e\u4e34\u65f6\u8868)\uff0c\u5728\u4e00\u4e2a\u6570\u636e\u5e93\u4e2d\uff0c\u4e0d\u540c\u8868\u53ef\u4ee5\u91c7\u7528\u4e0d\u540c\u7684\u5f15\u64ce\u3002 \u8865\u5145 # SELECT \u53ef\u4ee5\u7701\u7565 FROM \u5b50\u53e5\u4ee5\u4fbf\u7b80\u5355\u8bbf\u95ee\u548c\u5904\u7406\u8868\u8fbe\u5f0f\uff0c\u4ece\u800c\u8fdb\u884c\u6d4b\u8bd5\u548c\u5b9e\u9a8c SELECT 2*3; # \u8fd4\u56de6 SELECT Trim(' abc '); # \u8fd4\u56de'abc' set names gbk; # \u8bbe\u7f6eMYSQL\u663e\u793a\u5b57\u7b26\u96c6\uff0cCMD\u9ed8\u8ba4\u7f16\u7801\u4e3aGBK\uff0c\u901a\u8fc7\u6b64\u8bbe\u7f6e\uff0c\u53ef\u4ee5\u663e\u793a\u4e2d\u6587","title":"\u5e38\u7528\u547d\u4ee4"},{"location":"MySQL/0_start/#_4","text":"\u89c6\u56fe\u662f\u865a\u62df\u7684\u8868\uff0c\u4e0e\u5305\u542b\u6570\u636e\u7684\u8868\u4e0d\u540c\uff0c\u89c6\u56fe\u53ea\u5305\u542b\u4f7f\u7528\u65f6\u52a8\u6001\u68c0\u7d22\u6570\u636e\u7684\u67e5\u8be2\uff0c\u63d0\u4f9b\u4e86\u4e00\u79cdSELECT\u8bed\u53e5\u5c42\u6b21\u7684\u5c01\u88c5\uff0c\u7528\u4ee5\u7b80\u5316\u6570\u636e\u5904\u7406\u4ee5\u53ca\u91cd\u65b0\u683c\u5f0f\u5316\u57fa\u7840\u6570\u636e\u6216\u5305\u542b\u57fa\u7840\u6570\u636e\u3002 \u89c6\u56fe\u7684\u89c4\u5219\u548c\u9650\u5236 # \u521b\u5efa\u89c6\u56fe\uff0cproductcustomers\u8054\u7ed3\u4e09\u4e2a\u8868 CREATE VIEW productcustomers AS SELECT cust_name, cust_contact, prod_id FROM customers, orders, orderitems WHERE customers.cust_id=orders.cust_id AND orders.order_num=orderitems.order_num; # \u5220\u9664\u89c6\u56fe DROP VIEW viewname; # \u67e5\u770b\u521b\u5efa\u89c6\u56fe\u8bed\u53e5 SHOW CREEATE VIEW viewname; \u66f4\u65b0\u89c6\u56fe\uff1a\u53ef\u4ee5\u5bf9\u89c6\u56fe\u4f7f\u7528INSERT\u3001UPDATE \u3001DELETE\u6765\u8fdb\u884c\u66f4\u65b0(\u5b9e\u9645\u4e0a\u662f\u5728\u66f4\u65b0\u57fa\u8868)\uff0c\u4e0d\u8fc7\u5f53\u89c6\u56fe\u5b9a\u4e49\u4e2d\u5305\u542b\u4ee5\u4e0b\u64cd\u4f5c\u65f6\uff0c\u5219\u4e0d\u80fd\u8fdb\u884c\u66f4\u65b0: \u5206\u7ec4(GROUP BY\u548cHAVING)\u3001\u8054\u7ed3\u3001\u5b50\u67e5\u8be2\u3001\u5e76(UNION)\u3001\u805a\u96c6\u51fd\u6570\u3001DISTINCT\u3001\u5bfc\u51fa(\u8ba1\u7b97)\u5217","title":"\u89c6\u56fe"},{"location":"MySQL/0_start/#_5","text":"\u4fdd\u5b58\u7684\u4e00\u6761\u6216\u591a\u6761MySQL\u8bed\u53e5\u7684\u96c6\u5408\u3002 \u4f18\u70b9: CREATE PROCEDURE productpricing() # ()\u5185\u662f\u5b58\u50a8\u8fc7\u7a0b\u63a5\u6536\u7684\u53c2\u6570 BEGIN SELECT Avg(pord_price) AS priceaverage FROM products; END; # \u6ce8\u610f\u521b\u5efa\u5b58\u50a8\u8fc7\u7a0b\u7ed3\u675f\u65f6\u7684';'\u5c5e\u4e8e\u5b58\u50a8\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\uff0c\u4ee3\u8868MySQL\u8bed\u6cd5\u4e2d\u7684\u5206\u9694\u7b26\uff1b # \u4e00\u822c\u5728\u547d\u4ee4\u884c\u8fd0\u884cSQL\u8bed\u53e5\u65f6\u7ed3\u5c3e\u7684';'\u662f\u5219\u662f\u547d\u4ee4\u884c\u8bed\u53e5\u5206\u9694\u7b26\uff1b # \u5728\u547d\u4ee4\u884c\u4e2d\u521b\u5efa\u8fc7\u7a0b\u65f6\u5185\u90e8\u7684';'\u4e0d\u4f1a\u88ab\u89e3\u91ca\u4e3a\u5b58\u50a8\u8fc7\u7a0b\u7684\u6210\u5206\uff1b # \u53ef\u4ee5\u5728\u521b\u5efa\u524d\u91c7\u7528 DELIMETER \\\\ \u4e34\u65f6\u66f4\u6539\u547d\u4ee4\u884c\u8bed\u53e5\u5206\u9694\u7b26\u4e3a'\\\\' DELIMETER \\\\ CREATE PROCEDURE productpricing() # ()\u5185\u662f\u5b58\u50a8\u8fc7\u7a0b\u63a5\u6536\u7684\u53c2\u6570 BEGIN SELECT Avg(pord_price) AS priceaverage FROM products; END \\\\ DELIMETER ; # \u6062\u590d\u539f\u6765\u7684\u5206\u9694\u7b26 CALL productpricing(); # \u8c03\u7528\u5b58\u50a8\u8fc7\u7a0b DROP PROCEDURE pro_name IF EXISTS; # \u5220\u9664\u5b58\u50a8\u8fc7\u7a0b\uff0c \u540e\u9762\u7684IF EXISTS\u4fdd\u8bc1\u5220\u9664\u65f6\u5373\u4f7f\u4e0d\u5b58\u5728\u4e5f\u4e0d\u4f1a\u62a5\u9519 SHOW CREATE PROCEDURE pro_name; #\u663e\u793a\u5b58\u50a8\u8fc7\u7a0b\u521b\u5efa\u8bed\u53e5 SHOW PROCEDURE STATUS like 'pro_name'; # \u663e\u793a\u5b58\u50a8\u8fc7\u7a0b\u4fe1\u606f\u5217\u8868 \u4f7f\u7528\u53c2\u6570 \u2003\u53c2\u6570\u4f20\u9012\u7c7b\u578b: OUT(\u4ece\u5b58\u50a8\u8fc7\u7a0b\u4f20\u51fa\uff0c\u76f8\u5f53\u4e8e\u8fd4\u56de\u53d8\u91cf)\u3001IN(\u4f20\u9012\u7ed9\u5b58\u50a8\u8fc7\u7a0b\uff0c\u76f8\u5f53\u4e8e\u4f20\u5165\u53c2\u6570)\u3001INOUT(\u5bf9\u5b58\u50a8\u8fc7\u7a0b\u4f20\u5165\u3001\u4f20\u51fa\uff0c\u76f8\u5f53\u4e8e\u5f15\u7528\u53c2\u6570). (\u56e0\u6b64\u5b58\u50a8\u8fc7\u7a0b\u5176\u5b9e\u7c7b\u4f3c\u81ea\u5b9a\u4e49\u7684\u67e5\u8be2\u51fd\u6570) \u2003INTO\u628a\u68c0\u7d22\u7ed3\u679c\u4fdd\u5b58\u5230\u6307\u5b9a\u53d8\u91cf\u3002 \u2003\u56e0\u4e3a\u4e0d\u5141\u8bb8\u901a\u8fc7\u4e00\u4e2a\u53c2\u6570\u8fd4\u56de\u591a\u4e2a\u884c\u548c\u5217\uff0c\u56e0\u6b64\u524d\u9762\u8981\u91c7\u75283\u4e2a\u53c2\u6570\u3002 CALL productpricing( @pricelow, @pricehigh, @priceaverage ); # \u8c03\u7528\u540e\uff0c\u5e76\u4e0d\u663e\u793a\u7ed3\u679c\uff0c\u7ed3\u679c\u5b58\u50a8\u5728\u76f8\u5e94\u7684\u53d8\u91cf\u4e2d SELECT @pricelow; # \u663e\u793a\u7ed3\u679c CREATE PROCEDURE ordertotal( IN onumber INT, OUT total DECIMAL (8, 2) ) BEGIN SELECT Sum(quantity*item_price) FROM orderitems WHERE order_num=onumber INTO total; END; CALL ordertotal(20005, @total); SELECT @total; \u2003 --\u4ee3\u8868\u6ce8\u91ca\uff1bDECLARE\u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf\uff0c\u6307\u5b9a\u53d8\u91cf\u540d\u548c\u6570\u636e\u7c7b\u578b\uff1b","title":"\u5b58\u50a8\u8fc7\u7a0b"},{"location":"MySQL/0_start/#_6","text":"\u3002\u3002\u3002","title":"\u6e38\u6807"},{"location":"MySQL/0_start/#_7","text":"\u5728\u8868\u53d1\u751f\u6539\u52a8\u4e14\u6ee1\u8db3\u54cd\u5e94\u6761\u4ef6\u65f6\u81ea\u52a8\u6267\u884c\uff0c\u53ea\u80fd\u4e3a\u54cd\u5e94DELETE\u3001INSERT\u3001UPDATE\u7684SQL\u8bed\u53e5\u6216\u8005\u4f4d\u4e8eBEGIN\u548cEND\u4e4b\u5185\u7684\u4e00\u7ec4\u8bed\u53e5\u3002 \u2003\u53ea\u6709\u8868\u624d\u652f\u6301TRIGGER\uff0cVIEW\u548c\u4e34\u65f6\u8868\u90fd\u4e0d\u652f\u6301\u3002 # \u89e6\u53d1\u5668\u540d\u6700\u597d\u5728\u6570\u636e\u5e93\u4e2d\u552f\u4e00(MySQL5\u5141\u8bb8\u4e0d\u540c\u7684\u8868\u6709\u76f8\u540c\u7684trigger name) # BEFORE \u548c AFTER\uff0c\u89e6\u53d1\u5668\u88ab\u89e6\u53d1\u7684\u65f6\u523b\u3002\u82e5\u5e0c\u671b\u9a8c\u8bc1\u65b0\u6570\u636e\u662f\u5426\u6ee1\u8db3\u6761\u4ef6\uff0c\u5219\u4f7f\u7528 BEFORE \u9009\u9879\uff1b # \u82e5\u5e0c\u671b\u5728\u6fc0\u6d3b\u89e6\u53d1\u5668\u7684\u8bed\u53e5\u6267\u884c\u4e4b\u540e\u5b8c\u6210\u51e0\u4e2a\u6216\u66f4\u591a\u7684\u6539\u53d8\uff0c\u5219\u901a\u5e38\u4f7f\u7528 AFTER \u9009\u9879 # FOR EACH ROW \u4e00\u822c\u662f\u6307\u884c\u7ea7\u89e6\u53d1\uff0c\u5bf9\u4e8e\u53d7\u89e6\u53d1\u4e8b\u4ef6\u5f71\u54cd\u7684\u6bcf\u4e00\u884c\u90fd\u8981\u6fc0\u6d3b\u89e6\u53d1\u5668\u7684\u52a8\u4f5c # \u89e6\u53d1\u5668\u52a8\u4f5c\u4e3b\u4f53\uff0c\u5305\u542b\u89e6\u53d1\u5668\u6fc0\u6d3b\u65f6\u5c06\u8981\u6267\u884c\u7684 MySQL \u8bed\u53e5\u3002\u5982\u679c\u8981\u6267\u884c\u591a\u4e2a\u8bed\u53e5\uff0c\u53ef\u4f7f\u7528 BEGIN\u2026END \u590d\u5408\u8bed\u53e5\u7ed3\u6784 # \u6bcf\u4e2a\u8868\u6700\u591a\u652f\u63016\u4e2aTRIGGER(insert\\update\\delete\u7684before\u548cafter) CREATE <\u89e6\u53d1\u5668\u540d> < BEFORE | AFTER > <INSERT | UPDATE | DELETE > ON <\u8868\u540d> FOR EACH Row<\u89e6\u53d1\u5668\u4e3b\u4f53> # MySQL5\u4ee5\u540e\u4e0d\u5141\u8bb8TRIGGER\u8fd4\u56de\u7ed3\u679c\u96c6\uff0c\u8fd9\u91cc\u53ea\u80fd\u5c06\u7ed3\u679c\u8d4b\u7ed9\u53d8\u91cf CREATE TRIGGER newproduct AFTER INSERT ON products FOR EACH ROW SELECT 'Product added' INTO @result; SELECT @result; # \u5220\u9664\u89e6\u53d1\u5668 DROP TRIGGER tri_name; # \u5728INSERT TRIGGER\u4ee3\u7801\u5185\uff0c\u53ef\u5f15\u7528\u4e00\u4e2a\u540d\u4e3aNEW\u7684\u865a\u62df\u8868 # \u800c\u5728DELETE TRIGGER\u4ee3\u7801\u5185\uff0c\u53ef\u5f15\u7528\u4e00\u4e2a\u540d\u4e3aOLD\u7684\u865a\u62df\u8868\uff0c\u8bbf\u95ee\u88ab\u5220\u9664\u7684\u884c CREATE TRIGGER neworder AFTER INSERT ON orders FOR EACH ROW SELECT NEW.order_num INTO @result;","title":"\u89e6\u53d1\u5668"},{"location":"MySQL/0_start/#_8","text":"\u7528\u4ee5\u7ef4\u62a4\u6570\u636e\u5e93\u7684\u5b8c\u6574\u6027\uff0c\u5b83\u4fdd\u8bc1\u6210\u6279\u7684MySQL\u64cd\u4f5c\u8981\u4e48\u5b8c\u5168\u6267\u884c\uff0c\u8981\u4e48\u5b8c\u5168\u4e0d\u6267\u884c\u3002 SELECT * FROM tbl; START TRANSACTION; # \u5f00\u59cb\u4e00\u4e2a\u4e8b\u7269\u5904\u7406 DELETE TABLE tbl; DELETE TABLE tbl2; ROLLBACK; # \u56de\u9000\u5230\u4e8b\u7269\u5f00\u59cb\u4e4b\u524d\uff0cSELECT\\CREATE\\DROP\u8fd9\u4e09\u79cd\u8bed\u53e5\u65e0\u6cd5\u56de\u9000 COMMIT; # \u624b\u52a8\u63d0\u4ea4\uff0c\u5982\u679c DELETE \u51fa\u9519,\u5219\u81ea\u52a8\u64a4\u9500\u63d0\u4ea4 # \u4f7f\u7528\u4fdd\u7559\u70b9\uff0c\u5b9e\u73b0\u90e8\u5206\u56de\u9000\uff0c \u4fdd\u7559\u70b9\u5728\u4e8b\u7269\u5904\u7406\u5b8c\u6210(ROLLBACK \u6216 commit)\u540e\u81ea\u52a8\u91ca\u653e SAVEPOINT pos1; ROLLBACK pos1; # pos1\u4e4b\u540e\u7684\u8bed\u53e5\u4e0d\u4f1a\u88ab\u6267\u884c # \u5173\u95ed\u9ed8\u8ba4\u63d0\u4ea4 SET autocommit=0;","title":"\u4e8b\u7269\u5904\u7406"},{"location":"MySQL/0_start/#_9","text":"\u5b57\u7b26\u96c6\u4e3a\u5b57\u6bcd\u548c\u7b26\u53f7\u7684\u96c6\u5408 \u2003\u7f16\u7801\u4e3a\u67d0\u4e2a\u5b57\u7b26\u96c6\u7684\u5185\u90e8\u8868\u793a \u2003\u6821\u5bf9\u4e3a\u89c4\u5b9a\u5b57\u7b26\u5982\u4f55\u6bd4\u8f83\u7684\u6307\u4ee4, \u5728ORDER BY\\GROUP BY\u7b49\u68c0\u7d22\u6392\u5e8f\u65f6\u6709\u7528\u3002 SHOW CHARACTER SET; SHOW COLLATION; # \u663e\u793a\u6821\u5bf9\u5217\u8868 # \u786e\u5b9a\u6570\u636e\u5e93\u4f7f\u7528\u7684\u5b57\u7b26\u96c6\u548c\u6821\u5bf9 SHOW VARIABLES LIKE 'character%'; SHOW VARIABLES LIKE 'collation%'; #\u5728\u521b\u5efa\u8868\u65f6\u6307\u5b9a\u5b57\u7b26\u96c6\u6216\u8005\u6821\u5bf9\uff0c\u751a\u81f3\u5141\u8bb8\u5bf9\u5217\u8fdb\u884c\u8bbe\u7f6e CREATE TABLE tbl{ xx, column VARCHAR(10) CHARACTER SET BIG5 COLLATE big5_chinese_ci }DEFAULT CHARACTER SET latine COLLATE xx; # \u53ef\u4ee5\u5728SELECT\u65f6\u6307\u5b9a\u4e0e\u521b\u5efa\u65f6\u4e0d\u540c\u7684\u6821\u5bf9 SELECT * FROM tbl ORDER BY x COLLATE XX;","title":"\u5b57\u7b26\u96c6\u548c\u6821\u5bf9\u987a\u5e8f"},{"location":"MySQL/0_start/#_10","text":"# IDENTIFIED BY 'p@$$w0rd' \u6307\u5b9a\u7528\u6237\u767b\u5f55\u5bc6\u7801(\u6216\u79f0\u53e3\u4ee4) CREATE USER name IDENTIFIED BY 'p@$$w0rd'; RENAME USER old_name TO new_name; DROP USER name; # \u67e5\u770b\u7528\u6237\u8d26\u53f7\u6743\u9650, host\u8868\u793a\u4e3b\u673a\u540d\uff0c\u53ea\u63d0\u4f9busername\u65f6\uff0c\u5219\u9ed8\u8ba4\u4e3b\u673a\u540d\u4e3a%\uff0c\u8868\u793a\u4e0d\u7ba1\u4e3b\u673a\u540d SHOW GRANTS FOR username@host; SHOW GRANTS FOR root@localhost; # \u6388\u4e88\u7528\u6237\u6743\u9650; \u6388\u4e88\u7528\u6237\u5728db_name\u7684\u6240\u6709\u8868\u4e0a\u67e5\u8be2\u7684\u6743\u9650 GRANT SELECT ON db_name.* TO username; # \u64a4\u9500\u6743\u9650 REVOKE SELECT ON db_name.* FROM username; # \u66f4\u6539\u5bc6\u7801 SET PASSWORD FOR username = Password('new password');","title":"\u7ba1\u7406\u7528\u6237"},{"location":"MySQL/1_more/","text":"\u6df1\u5165\u7406\u89e3MySQL \u805a\u96c6\u7d22\u5f15\u548c\u975e\u805a\u96c6\u7d22\u5f15 MySQL\u4e2d\uff0cB+\u6811\u7d22\u5f15\u6309\u7167\u5b58\u50a8\u65b9\u5f0f\u7684\u4e0d\u540c\u5206\u4e3a\u805a\u96c6\u7d22\u5f15\u548c\u975e\u805a\u96c6\u7d22\u5f15\u3002 \u4ee5InnoDB\u5f15\u64ce\u4e2d\u7684\u805a\u96c6\u7d22\u5f15\u548c\u975e\u805a\u96c6\u7d22\u5f15\u4e3a\u4f8b\uff1a \u2460\u805a\u96c6\u7d22\u5f15\uff08\u805a\u7c07\u7d22\u5f15\uff09\uff1a\u4ee5InnoDB\u4f5c\u4e3a\u5b58\u50a8\u5f15\u64ce\u7684\u8868\uff0c\u8868\u4e2d\u7684\u6570\u636e\u90fd\u4f1a\u6709\u4e00\u4e2a\u4e3b\u952e\uff0c\u5373\u4f7f\u4f60\u4e0d\u521b\u5efa\u4e3b\u952e\uff0c \u7cfb\u7edf\u4e5f\u4f1a\u5e2e\u4f60\u521b\u5efa\u4e00\u4e2a\u9690\u5f0f\u7684\u4e3b\u952e\u3002 \u8fd9\u662f\u56e0\u4e3aInnoDB\u662f\u628a\u6570\u636e\u5b58\u653e\u5728B+\u6811\u4e2d\u7684\uff0c\u800cB+\u6811\u7684\u952e\u503c\u5c31\u662f\u4e3b\u952e\uff0c\u5728B+\u6811\u7684\u53f6\u5b50\u8282\u70b9\u4e2d\u5b58\u50a8\u4e86\u8868\u4e2d\u6240\u6709\u7684\u6570\u636e\u3002 \u8fd9\u79cd\u4ee5\u4e3b\u952e\u4f5c\u4e3aB+\u6811\u7d22\u5f15\u7684\u952e\u503c\u800c\u6784\u5efa\u7684 B+\u6811\u7d22\u5f15\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u805a\u96c6\u7d22\u5f15\u3002 \u2461\u975e\u805a\u96c6\u7d22\u5f15\uff08\u975e\u805a\u7c07\u7d22\u5f15\uff09\uff1a\u4ee5\u4e3b\u952e\u4ee5\u5916\u7684\u5217\u503c\u4f5c\u4e3a\u952e\u503c\u6784\u5efa\u7684 B+ \u6811\u7d22\u5f15\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u975e\u805a\u96c6\u7d22\u5f15\u3002 \u975e\u805a\u96c6\u7d22\u5f15\u4e0e\u805a\u96c6\u7d22\u5f15\u7684\u533a\u522b\u5728\u4e8e\u975e\u805a\u96c6\u7d22\u5f15\u7684\u53f6\u5b50\u8282\u70b9\u4e0d\u5b58\u50a8\u8868\u4e2d\u7684\u6570\u636e\uff0c\u800c\u662f\u5b58\u50a8\u8be5\u5217\u5bf9\u5e94\u7684\u4e3b\u952e\uff0c \u60f3\u8981\u67e5\u627e\u6570\u636e\u6211\u4eec\u8fd8\u9700\u8981\u6839\u636e\u4e3b\u952e\u518d\u53bb\u805a\u96c6\u7d22\u5f15\u4e2d\u8fdb\u884c\u67e5\u627e\uff0c\u8fd9\u4e2a\u518d\u6839\u636e\u805a\u96c6\u7d22\u5f15\u67e5\u627e\u6570\u636e\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u79f0\u4e3a\u56de\u8868\u3002","title":"\u6df1\u5165\u7406\u89e3MySQL"},{"location":"MySQL/1_more/#mysql","text":"\u805a\u96c6\u7d22\u5f15\u548c\u975e\u805a\u96c6\u7d22\u5f15 MySQL\u4e2d\uff0cB+\u6811\u7d22\u5f15\u6309\u7167\u5b58\u50a8\u65b9\u5f0f\u7684\u4e0d\u540c\u5206\u4e3a\u805a\u96c6\u7d22\u5f15\u548c\u975e\u805a\u96c6\u7d22\u5f15\u3002 \u4ee5InnoDB\u5f15\u64ce\u4e2d\u7684\u805a\u96c6\u7d22\u5f15\u548c\u975e\u805a\u96c6\u7d22\u5f15\u4e3a\u4f8b\uff1a \u2460\u805a\u96c6\u7d22\u5f15\uff08\u805a\u7c07\u7d22\u5f15\uff09\uff1a\u4ee5InnoDB\u4f5c\u4e3a\u5b58\u50a8\u5f15\u64ce\u7684\u8868\uff0c\u8868\u4e2d\u7684\u6570\u636e\u90fd\u4f1a\u6709\u4e00\u4e2a\u4e3b\u952e\uff0c\u5373\u4f7f\u4f60\u4e0d\u521b\u5efa\u4e3b\u952e\uff0c \u7cfb\u7edf\u4e5f\u4f1a\u5e2e\u4f60\u521b\u5efa\u4e00\u4e2a\u9690\u5f0f\u7684\u4e3b\u952e\u3002 \u8fd9\u662f\u56e0\u4e3aInnoDB\u662f\u628a\u6570\u636e\u5b58\u653e\u5728B+\u6811\u4e2d\u7684\uff0c\u800cB+\u6811\u7684\u952e\u503c\u5c31\u662f\u4e3b\u952e\uff0c\u5728B+\u6811\u7684\u53f6\u5b50\u8282\u70b9\u4e2d\u5b58\u50a8\u4e86\u8868\u4e2d\u6240\u6709\u7684\u6570\u636e\u3002 \u8fd9\u79cd\u4ee5\u4e3b\u952e\u4f5c\u4e3aB+\u6811\u7d22\u5f15\u7684\u952e\u503c\u800c\u6784\u5efa\u7684 B+\u6811\u7d22\u5f15\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u805a\u96c6\u7d22\u5f15\u3002 \u2461\u975e\u805a\u96c6\u7d22\u5f15\uff08\u975e\u805a\u7c07\u7d22\u5f15\uff09\uff1a\u4ee5\u4e3b\u952e\u4ee5\u5916\u7684\u5217\u503c\u4f5c\u4e3a\u952e\u503c\u6784\u5efa\u7684 B+ \u6811\u7d22\u5f15\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u975e\u805a\u96c6\u7d22\u5f15\u3002 \u975e\u805a\u96c6\u7d22\u5f15\u4e0e\u805a\u96c6\u7d22\u5f15\u7684\u533a\u522b\u5728\u4e8e\u975e\u805a\u96c6\u7d22\u5f15\u7684\u53f6\u5b50\u8282\u70b9\u4e0d\u5b58\u50a8\u8868\u4e2d\u7684\u6570\u636e\uff0c\u800c\u662f\u5b58\u50a8\u8be5\u5217\u5bf9\u5e94\u7684\u4e3b\u952e\uff0c \u60f3\u8981\u67e5\u627e\u6570\u636e\u6211\u4eec\u8fd8\u9700\u8981\u6839\u636e\u4e3b\u952e\u518d\u53bb\u805a\u96c6\u7d22\u5f15\u4e2d\u8fdb\u884c\u67e5\u627e\uff0c\u8fd9\u4e2a\u518d\u6839\u636e\u805a\u96c6\u7d22\u5f15\u67e5\u627e\u6570\u636e\u7684\u8fc7\u7a0b\uff0c\u6211\u4eec\u79f0\u4e3a\u56de\u8868\u3002","title":"\u6df1\u5165\u7406\u89e3MySQL"},{"location":"Network/0_home/","text":"\u8ba1\u7b97\u673a\u7f51\u7edc base \u534f\u8bae: \u4e00\u4e2a\u534f\u8bae\u5b9a\u4e49\u4e86\u5728\u4e24\u4e2a\u6216\u591a\u4e2a\u901a\u4fe1\u5b9e\u4f53\u4e4b\u95f4\u4ea4\u6362\u7684\u62a5\u6587\u683c\u5f0f\u548c\u6b21\u5e8f\uff0c\u4ee5\u53ca\u62a5\u6587\u53d1\u9001\u548c/\u6216\u63a5\u6536\u4e00\u6761\u62a5\u6587\u6216\u5176\u4ed6\u4e8b\u4ef6\u6240\u91c7\u53d6\u7684\u52a8\u4f5c\u3002 \u5206\u7ec4\u4ea4\u6362: \u4e3a\u4e86\u4ece\u6e90\u7aef\u7cfb\u7edf\u5411\u76ee\u7684\u7aef\u7cfb\u7edf\u53d1\u9001\u4e00\u4e2a\u62a5\u6587\uff0c\u6e90\u5c06\u957f\u62a5\u6587\u5212\u5206\u6210\u8f83\u5c0f\u7684\u6570\u636e\u5757\uff0c\u79f0\u4e3a\u5206\u7ec4\uff1b\u5728\u6e90\u548c\u76ee\u7684\u4e4b\u95f4\uff0c\u5206\u7ec4\u901a\u8fc7\u901a\u4fe1\u94fe\u8def\u548c\u5206\u7ec4\u4ea4\u6362\u673a(\u8def\u7531\u5668\u548c\u94fe\u8def\u5c42\u4ea4\u6362\u673a)\u4f20\u9001\u3002 \u2003\u5b58\u50a8\u8f6c\u53d1\u4f20\u8f93: \u591a\u6570\u5206\u7ec4\u4ea4\u6362\u673a\u5728\u94fe\u8def\u8f93\u5165\u7aef\u4f7f\u7528\u5b58\u50a8\u8f6c\u53d1\u4f20\u8f93\u673a\u5236\uff0c \u6307\u5728\u4ea4\u6362\u673a\u80fd\u591f\u5f00\u59cb\u5411\u8f93\u51fa\u94fe\u8def\u4f20\u8f93\u5206\u7ec4\u7684\u7b2c\u4e00\u4e2abit\u4e4b\u524d\uff0c\u5fc5\u987b\u63a5\u6536\u6574\u4e2a\u5206\u7ec4 \u3002 \u2003\u5206\u7ec4\u4ea4\u6362\u76f8\u6bd4\u62a5\u6587\u4ea4\u6362\u6709\u66f4\u77ed\u7684\u4f20\u8f93\u65f6\u5ef6\uff0c\u5bf9\u4e8e\u4ea4\u6362\u673a\u7684\u7f13\u5b58\u5927\u5c0f\u8981\u6c42\u4e5f\u66f4\u5c0f(\u7406\u8bba\u4e0a\u4ec5\u4e3a\u4e00\u4e2a\u5206\u7ec4\u5927\u5c0f)\uff1b\u76f8\u6bd4\u7535\u8def\u4ea4\u6362\uff0c\u5219\u5141\u8bb8\u66f4\u591a\u7528\u6237\u540c\u65f6\u4f7f\u7528\u7f51\u7edc\uff0c\u7f51\u7edc\u8d44\u6e90\u5145\u5206\u5171\u4eab\uff0c \u9002\u5408\u7a81\u53d1\u6570\u636e\u4f20\u8f93\u7f51\u7edc \uff0c \u4e14\u65e0\u9700\u547c\u53eb\u5efa\u7acb\u8fde\u63a5\u3002 \u2003\u7f3a\u70b9: \u53ef\u80fd\u4ea7\u751f\u62e5\u585e: \u5206\u7ec4\u5ef6\u8fdf\u548c\u4e22\u5305\uff1b \u4e14\u7531\u4e8e\u6e90\u548c\u76ee\u4e4b\u95f4\u4e0d\u50cf\u7535\u8def\u4ea4\u6362\u6709\u4e00\u6761\u72ec\u5360\u7684\u8fde\u63a5\uff0c\u5b58\u5728\u4e0d\u53ef\u9884\u6d4b\u7684\u6392\u961f\u5ef6\u8fdf\uff0c\u56e0\u6b64\u5728\u5b9e\u65f6\u6027\u4efb\u52a1\u4e0a\u6027\u80fd\u6b20\u7f3a\u3002 \u541e\u5410\u91cf: \u7aef\u5230\u7aef\u4f20\u8f93\u6570\u636e\u7684\u5e73\u5747\u901f\u7387\uff0c\u901a\u5e38\u53d6\u51b3\u4e8e\u6cbf\u7740\u6e90\u5230\u76ee\u7684\u5730\u4e4b\u95f4\u8def\u5f84\u7684\u6700\u5c0f\u4f20\u8f93\u901f\u7387(\u5373\u74f6\u9888\u94fe\u8def\u7684\u4f20\u8f93\u901f\u7387)\u3002 \u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784 \u5206\u5c42\u7ed3\u6784 \u62a5\u6587:\u4f4d\u4e8e\u5e94\u7528\u5c42\u7684\u4fe1\u606f\u5206\u7ec4 \u62a5\u6587\u6bb5: \u8fd0\u8f93\u5c42\u5206\u7ec4 \u6570\u636e\u62a5: \u7f51\u7edc\u5c42\u5206\u7ec4 \u5e27: \u94fe\u8def\u5c42\u5206\u7ec4 OSI\u6a21\u578b \u2003\u5404\u5c42\u7684\u6240\u6709\u534f\u8bae\u88ab\u79f0\u4e3a\u534f\u8bae\u6808\uff0cOSI(Open System Interconnection,\u5f00\u653e\u7cfb\u7edf\u4e92\u8fde)\u6a21\u578b\u7684\u534f\u8bae\u6808\u5206\u4e3a7\u4e2a\u5c42\u6b21 \u56e0\u7279\u7f51\u534f\u8bae\u6808(\u4e94\u5c42\u53c2\u8003\u6a21\u578b) \u5728\u6d4f\u89c8\u5668\u8f93\u5165URL\u6309\u4e0b\u56de\u8f66\u540e \u6d4f\u89c8\u5668\u5148\u8981\u89e3\u6790URL \u2003\u6839\u636eURL\u683c\u5f0f\u89e3\u6790\u5f97\u5230\u6240\u91c7\u7528\u7684\u534f\u8bae(\u5982HTTP)\u3001\u670d\u52a1\u5668\u57df\u540d\u3001\u6587\u4ef6\u8def\u5f84\u540d\uff0c\u6587\u4ef6\u8def\u5f84\u540d\u53ef\u7701\u7565\uff0c\u8fd9\u6837\u8bbf\u95ee\u7684\u5c06\u662f\u670d\u52a1\u5668\u6839\u76ee\u5f55\u4e0b\u8bbe\u7f6e\u7684\u9ed8\u8ba4\u9875\u9762(\u4e3b\u9875) \u2003 URL(\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u7b26) and URI(\u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26): URI\u8868\u793a\u7684\u662fweb\u4e0a\u6bcf\u4e00\u79cd\u53ef\u7528\u7684\u8d44\u6e90\uff0c\u5982 HTML\u6587\u6863\u3001\u56fe\u50cf\u3001\u89c6\u9891\u7247\u6bb5\u3001\u7a0b\u5e8f\u7b49\u90fd\u7531\u4e00\u4e2aURI\u8fdb\u884c\u6807\u8bc6\uff0c \u5176\u4e0d\u4e00\u5b9a\u5305\u542b\u7edd\u5bf9\u7684\u8bbf\u95ee\u8def\u5f84\uff1b URL\u7528\u4e00\u79cd\u7edf\u4e00\u7684\u683c\u5f0f\u6765\u63cf\u8ff0\u5404\u79cd\u4fe1\u606f\u8d44\u6e90\uff0c\u5305\u62ec\u6587\u4ef6\u3001\u670d\u52a1\u5668\u7684\u5730\u5740\u548c\u76ee\u5f55\u7b49\u3002 URL\u662fURI\u6982\u5ff5\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5176\u5305\u542b\u7684\u662f\u8d44\u6e90\u7684\u7edd\u5bf9\u8bbf\u95ee\u8def\u5f84\u3002 \u6d4f\u89c8\u5668\u751f\u6210HTTP\u8bf7\u6c42\u6d88\u606f \u20031\u6761\u8bf7\u6c42\u6d88\u606f\u4e2d\u53ea\u80fd\u5305\u542b1\u4e2aURI\u3002\u5982\u679c\u9700\u8981\u83b7\u53d6\u591a\u4e2a\u6587\u4ef6\uff0c\u5fc5\u987b\u5bf9\u6bcf\u4e2a\u6587\u4ef6\u5355\u72ec\u53d1\u90011\u6761\u8bf7\u6c42\u3002\u91c7\u7528\u6301\u4e45\u6027\u8fde\u63a5\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2aTCP\u8fde\u63a5\u4f20\u8f93\uff1b\u800c\u975e\u6301\u4e45\u6027\u8fde\u63a5\uff0c\u5219\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u8981\u91cd\u65b0\u5efa\u7acb\u4e00\u4e2aTCP\u8fde\u63a5\u3002 \u5411DNS\u670d\u52a1\u5668\u67e5\u8be2Web\u670d\u52a1\u5668\u7684IP\u5730\u5740 \u2003\u6d4f\u89c8\u5668\u4f1a\u8c03\u7528Socket\u5e93\u4e2d\u7684gethostbyname\u51fd\u6570\uff0c\u63d0\u4f9b\u57df\u540d\u4f5c\u4e3a\u53c2\u6570\uff0c\u5411DNS\u670d\u52a1\u5668\u53d1\u9001\u67e5\u8be2\u6d88\u606f(\u4e00\u4e2aUDP\u62a5\u6587)\uff0c\u7136\u540e\u4eceDNS\u670d\u52a1\u5668\u8fd4\u56de\u7684\u54cd\u5e94\u6d88\u606f\u4e2d\u53d6\u51faIP\u5730\u5740\u3002\u672c\u5730DNS\u670d\u52a1\u5668\u7684IP\u662f\u9884\u5148\u914d\u7f6e\u597d\u7684\u3002 \u2003\u67e5\u8be2\u7684\u8fc7\u7a0b\u4ece\u672c\u5730DNS\u670d\u52a1\u5668\u5f00\u59cb\uff0c\u82e5\u5176\u6ca1\u6709\u76f8\u5e94\u7684\u7f13\u5b58\u8bb0\u5f55\uff0c\u5219\u5176\u4f1a\u5411\u9876\u7ea7DNS\u670d\u52a1\u5668\u8f6c\u53d1\u8bf7\u6c42\u6d88\u606f(\u9012\u5f52\u67e5\u8be2)\uff1b\u6216\u8005\u9876\u7ea7DNS\u670d\u52a1\u5668\u4f1a\u5411\u672c\u5730DNS\u670d\u52a1\u5668\u8fd4\u56de\u9876\u7ea7\u57df\u540d\u670d\u52a1\u5668\u7684IP\u5730\u5740(\u8fed\u4ee3\u67e5\u8be2)\uff0c\u672c\u5730DNS\u670d\u52a1\u5668\u518d\u5411\u9876\u7ea7DNS\u670d\u52a1\u5668\u53d1\u9001\u67e5\u8be2\u8bf7\u6c42\uff0c\u540e\u8005\u5982\u679c\u4f9d\u65e7\u67e5\u8be2\u4e0d\u5230\uff0c\u4f1a\u8fd4\u56de\u76f8\u5e94\u7684\u6743\u5a01\u57df\u540d\u670d\u52a1\u5668IP\u5730\u5740\u3002 \u2003\u901a\u8fc7DNS\u83b7\u53d6\u5230IP\u540e\uff0cHTTP\u7684\u4f20\u8f93\u5de5\u4f5c\u5219\u4ea4\u7531\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u534f\u8bae\u6808\u6765\u5b8c\u6210\u3002 \u5efa\u7acbTCP\u8fde\u63a5 \u2003\u91c7\u7528Socket\u5957\u63a5\u5b57\u6765\u5efa\u7acb\u8fde\u63a5\uff0c\u5177\u4f53\u8fc7\u7a0b\u89c1\u4e09\u6b21\u63e1\u624b \u65ad\u5f00\u8fde\u63a5 \u2003 \u56db\u6b21\u6325\u624b","title":"\u8ba1\u7b97\u673a\u7f51\u7edc"},{"location":"Network/0_home/#_1","text":"","title":"\u8ba1\u7b97\u673a\u7f51\u7edc"},{"location":"Network/0_home/#base","text":"\u534f\u8bae: \u4e00\u4e2a\u534f\u8bae\u5b9a\u4e49\u4e86\u5728\u4e24\u4e2a\u6216\u591a\u4e2a\u901a\u4fe1\u5b9e\u4f53\u4e4b\u95f4\u4ea4\u6362\u7684\u62a5\u6587\u683c\u5f0f\u548c\u6b21\u5e8f\uff0c\u4ee5\u53ca\u62a5\u6587\u53d1\u9001\u548c/\u6216\u63a5\u6536\u4e00\u6761\u62a5\u6587\u6216\u5176\u4ed6\u4e8b\u4ef6\u6240\u91c7\u53d6\u7684\u52a8\u4f5c\u3002 \u5206\u7ec4\u4ea4\u6362: \u4e3a\u4e86\u4ece\u6e90\u7aef\u7cfb\u7edf\u5411\u76ee\u7684\u7aef\u7cfb\u7edf\u53d1\u9001\u4e00\u4e2a\u62a5\u6587\uff0c\u6e90\u5c06\u957f\u62a5\u6587\u5212\u5206\u6210\u8f83\u5c0f\u7684\u6570\u636e\u5757\uff0c\u79f0\u4e3a\u5206\u7ec4\uff1b\u5728\u6e90\u548c\u76ee\u7684\u4e4b\u95f4\uff0c\u5206\u7ec4\u901a\u8fc7\u901a\u4fe1\u94fe\u8def\u548c\u5206\u7ec4\u4ea4\u6362\u673a(\u8def\u7531\u5668\u548c\u94fe\u8def\u5c42\u4ea4\u6362\u673a)\u4f20\u9001\u3002 \u2003\u5b58\u50a8\u8f6c\u53d1\u4f20\u8f93: \u591a\u6570\u5206\u7ec4\u4ea4\u6362\u673a\u5728\u94fe\u8def\u8f93\u5165\u7aef\u4f7f\u7528\u5b58\u50a8\u8f6c\u53d1\u4f20\u8f93\u673a\u5236\uff0c \u6307\u5728\u4ea4\u6362\u673a\u80fd\u591f\u5f00\u59cb\u5411\u8f93\u51fa\u94fe\u8def\u4f20\u8f93\u5206\u7ec4\u7684\u7b2c\u4e00\u4e2abit\u4e4b\u524d\uff0c\u5fc5\u987b\u63a5\u6536\u6574\u4e2a\u5206\u7ec4 \u3002 \u2003\u5206\u7ec4\u4ea4\u6362\u76f8\u6bd4\u62a5\u6587\u4ea4\u6362\u6709\u66f4\u77ed\u7684\u4f20\u8f93\u65f6\u5ef6\uff0c\u5bf9\u4e8e\u4ea4\u6362\u673a\u7684\u7f13\u5b58\u5927\u5c0f\u8981\u6c42\u4e5f\u66f4\u5c0f(\u7406\u8bba\u4e0a\u4ec5\u4e3a\u4e00\u4e2a\u5206\u7ec4\u5927\u5c0f)\uff1b\u76f8\u6bd4\u7535\u8def\u4ea4\u6362\uff0c\u5219\u5141\u8bb8\u66f4\u591a\u7528\u6237\u540c\u65f6\u4f7f\u7528\u7f51\u7edc\uff0c\u7f51\u7edc\u8d44\u6e90\u5145\u5206\u5171\u4eab\uff0c \u9002\u5408\u7a81\u53d1\u6570\u636e\u4f20\u8f93\u7f51\u7edc \uff0c \u4e14\u65e0\u9700\u547c\u53eb\u5efa\u7acb\u8fde\u63a5\u3002 \u2003\u7f3a\u70b9: \u53ef\u80fd\u4ea7\u751f\u62e5\u585e: \u5206\u7ec4\u5ef6\u8fdf\u548c\u4e22\u5305\uff1b \u4e14\u7531\u4e8e\u6e90\u548c\u76ee\u4e4b\u95f4\u4e0d\u50cf\u7535\u8def\u4ea4\u6362\u6709\u4e00\u6761\u72ec\u5360\u7684\u8fde\u63a5\uff0c\u5b58\u5728\u4e0d\u53ef\u9884\u6d4b\u7684\u6392\u961f\u5ef6\u8fdf\uff0c\u56e0\u6b64\u5728\u5b9e\u65f6\u6027\u4efb\u52a1\u4e0a\u6027\u80fd\u6b20\u7f3a\u3002 \u541e\u5410\u91cf: \u7aef\u5230\u7aef\u4f20\u8f93\u6570\u636e\u7684\u5e73\u5747\u901f\u7387\uff0c\u901a\u5e38\u53d6\u51b3\u4e8e\u6cbf\u7740\u6e90\u5230\u76ee\u7684\u5730\u4e4b\u95f4\u8def\u5f84\u7684\u6700\u5c0f\u4f20\u8f93\u901f\u7387(\u5373\u74f6\u9888\u94fe\u8def\u7684\u4f20\u8f93\u901f\u7387)\u3002","title":"base"},{"location":"Network/0_home/#_2","text":"\u5206\u5c42\u7ed3\u6784 \u62a5\u6587:\u4f4d\u4e8e\u5e94\u7528\u5c42\u7684\u4fe1\u606f\u5206\u7ec4 \u62a5\u6587\u6bb5: \u8fd0\u8f93\u5c42\u5206\u7ec4 \u6570\u636e\u62a5: \u7f51\u7edc\u5c42\u5206\u7ec4 \u5e27: \u94fe\u8def\u5c42\u5206\u7ec4 OSI\u6a21\u578b \u2003\u5404\u5c42\u7684\u6240\u6709\u534f\u8bae\u88ab\u79f0\u4e3a\u534f\u8bae\u6808\uff0cOSI(Open System Interconnection,\u5f00\u653e\u7cfb\u7edf\u4e92\u8fde)\u6a21\u578b\u7684\u534f\u8bae\u6808\u5206\u4e3a7\u4e2a\u5c42\u6b21 \u56e0\u7279\u7f51\u534f\u8bae\u6808(\u4e94\u5c42\u53c2\u8003\u6a21\u578b)","title":"\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784"},{"location":"Network/0_home/#url","text":"\u6d4f\u89c8\u5668\u5148\u8981\u89e3\u6790URL \u2003\u6839\u636eURL\u683c\u5f0f\u89e3\u6790\u5f97\u5230\u6240\u91c7\u7528\u7684\u534f\u8bae(\u5982HTTP)\u3001\u670d\u52a1\u5668\u57df\u540d\u3001\u6587\u4ef6\u8def\u5f84\u540d\uff0c\u6587\u4ef6\u8def\u5f84\u540d\u53ef\u7701\u7565\uff0c\u8fd9\u6837\u8bbf\u95ee\u7684\u5c06\u662f\u670d\u52a1\u5668\u6839\u76ee\u5f55\u4e0b\u8bbe\u7f6e\u7684\u9ed8\u8ba4\u9875\u9762(\u4e3b\u9875) \u2003 URL(\u7edf\u4e00\u8d44\u6e90\u5b9a\u4f4d\u7b26) and URI(\u7edf\u4e00\u8d44\u6e90\u6807\u8bc6\u7b26): URI\u8868\u793a\u7684\u662fweb\u4e0a\u6bcf\u4e00\u79cd\u53ef\u7528\u7684\u8d44\u6e90\uff0c\u5982 HTML\u6587\u6863\u3001\u56fe\u50cf\u3001\u89c6\u9891\u7247\u6bb5\u3001\u7a0b\u5e8f\u7b49\u90fd\u7531\u4e00\u4e2aURI\u8fdb\u884c\u6807\u8bc6\uff0c \u5176\u4e0d\u4e00\u5b9a\u5305\u542b\u7edd\u5bf9\u7684\u8bbf\u95ee\u8def\u5f84\uff1b URL\u7528\u4e00\u79cd\u7edf\u4e00\u7684\u683c\u5f0f\u6765\u63cf\u8ff0\u5404\u79cd\u4fe1\u606f\u8d44\u6e90\uff0c\u5305\u62ec\u6587\u4ef6\u3001\u670d\u52a1\u5668\u7684\u5730\u5740\u548c\u76ee\u5f55\u7b49\u3002 URL\u662fURI\u6982\u5ff5\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u5176\u5305\u542b\u7684\u662f\u8d44\u6e90\u7684\u7edd\u5bf9\u8bbf\u95ee\u8def\u5f84\u3002 \u6d4f\u89c8\u5668\u751f\u6210HTTP\u8bf7\u6c42\u6d88\u606f \u20031\u6761\u8bf7\u6c42\u6d88\u606f\u4e2d\u53ea\u80fd\u5305\u542b1\u4e2aURI\u3002\u5982\u679c\u9700\u8981\u83b7\u53d6\u591a\u4e2a\u6587\u4ef6\uff0c\u5fc5\u987b\u5bf9\u6bcf\u4e2a\u6587\u4ef6\u5355\u72ec\u53d1\u90011\u6761\u8bf7\u6c42\u3002\u91c7\u7528\u6301\u4e45\u6027\u8fde\u63a5\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2aTCP\u8fde\u63a5\u4f20\u8f93\uff1b\u800c\u975e\u6301\u4e45\u6027\u8fde\u63a5\uff0c\u5219\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u8981\u91cd\u65b0\u5efa\u7acb\u4e00\u4e2aTCP\u8fde\u63a5\u3002 \u5411DNS\u670d\u52a1\u5668\u67e5\u8be2Web\u670d\u52a1\u5668\u7684IP\u5730\u5740 \u2003\u6d4f\u89c8\u5668\u4f1a\u8c03\u7528Socket\u5e93\u4e2d\u7684gethostbyname\u51fd\u6570\uff0c\u63d0\u4f9b\u57df\u540d\u4f5c\u4e3a\u53c2\u6570\uff0c\u5411DNS\u670d\u52a1\u5668\u53d1\u9001\u67e5\u8be2\u6d88\u606f(\u4e00\u4e2aUDP\u62a5\u6587)\uff0c\u7136\u540e\u4eceDNS\u670d\u52a1\u5668\u8fd4\u56de\u7684\u54cd\u5e94\u6d88\u606f\u4e2d\u53d6\u51faIP\u5730\u5740\u3002\u672c\u5730DNS\u670d\u52a1\u5668\u7684IP\u662f\u9884\u5148\u914d\u7f6e\u597d\u7684\u3002 \u2003\u67e5\u8be2\u7684\u8fc7\u7a0b\u4ece\u672c\u5730DNS\u670d\u52a1\u5668\u5f00\u59cb\uff0c\u82e5\u5176\u6ca1\u6709\u76f8\u5e94\u7684\u7f13\u5b58\u8bb0\u5f55\uff0c\u5219\u5176\u4f1a\u5411\u9876\u7ea7DNS\u670d\u52a1\u5668\u8f6c\u53d1\u8bf7\u6c42\u6d88\u606f(\u9012\u5f52\u67e5\u8be2)\uff1b\u6216\u8005\u9876\u7ea7DNS\u670d\u52a1\u5668\u4f1a\u5411\u672c\u5730DNS\u670d\u52a1\u5668\u8fd4\u56de\u9876\u7ea7\u57df\u540d\u670d\u52a1\u5668\u7684IP\u5730\u5740(\u8fed\u4ee3\u67e5\u8be2)\uff0c\u672c\u5730DNS\u670d\u52a1\u5668\u518d\u5411\u9876\u7ea7DNS\u670d\u52a1\u5668\u53d1\u9001\u67e5\u8be2\u8bf7\u6c42\uff0c\u540e\u8005\u5982\u679c\u4f9d\u65e7\u67e5\u8be2\u4e0d\u5230\uff0c\u4f1a\u8fd4\u56de\u76f8\u5e94\u7684\u6743\u5a01\u57df\u540d\u670d\u52a1\u5668IP\u5730\u5740\u3002 \u2003\u901a\u8fc7DNS\u83b7\u53d6\u5230IP\u540e\uff0cHTTP\u7684\u4f20\u8f93\u5de5\u4f5c\u5219\u4ea4\u7531\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u534f\u8bae\u6808\u6765\u5b8c\u6210\u3002 \u5efa\u7acbTCP\u8fde\u63a5 \u2003\u91c7\u7528Socket\u5957\u63a5\u5b57\u6765\u5efa\u7acb\u8fde\u63a5\uff0c\u5177\u4f53\u8fc7\u7a0b\u89c1\u4e09\u6b21\u63e1\u624b \u65ad\u5f00\u8fde\u63a5 \u2003 \u56db\u6b21\u6325\u624b","title":"\u5728\u6d4f\u89c8\u5668\u8f93\u5165URL\u6309\u4e0b\u56de\u8f66\u540e"},{"location":"Network/1_application/","text":"\u7f51\u7edc\u5e94\u7528\u5c42 \u5e94\u7528\u7a0b\u5e8f\u4f53\u7cfb\u7ed3\u6784 \u5ba2\u6237-\u670d\u52a1\u5668\u4f53\u7cfb\u7ed3\u6784(client-server, CS) p2p\u7ed3\u6784: \u5bf9\u4f4d\u4e8e\u6570\u636e\u4e2d\u5fc3\u7684\u4e13\u7528\u670d\u52a1\u5668\u6709\u5f88\u5c0f\u6216\u4e0d\u9700\u4f9d\u8d56\uff0c\u5e94\u7528\u7a0b\u5e8f\u5728\u95f4\u65ad\u8fde\u63a5\u7684\u4e3b\u673a\u5bf9\u4e4b\u95f4\u4f7f\u7528\u76f4\u63a5\u901a\u4fe1\uff0c\u8fd9\u4e9b\u4e3b\u673a\u79f0\u4e3a\u5bf9\u7b49\u65b9\u3002 \u76ee\u524d\u8bb8\u591a\u6d41\u91cf\u5bc6\u96c6\u578b\u7684\u5e94\u7528\u90fd\u662fP2P\u4f53\u7cfb\u7ed3\u6784\uff0c\u4f8b\u5982\u6587\u4ef6\u5171\u4eab\u3001\u5bf9\u7b49\u65b9\u534f\u52a9\u4e0b\u8f7d\u52a0\u901f\u5668(\u8fc5\u96f7\u7b49)\u3002 \u2003 \u4e5f\u6709\u5e94\u7528\u662f\u5177\u6709\u6df7\u5408\u7684\u4f53\u7cfb\u7ed3\u6784\u3002\u4f8b\u5982\u5373\u65f6\u8baf\u606f\u5e94\u7528\uff0c\u670d\u52a1\u5668\u88ab\u7528\u4e8e\u8ddf\u8e2a\u7528\u6237\u7684IP\u5730\u5740\uff0c\u4f46\u7528\u6237\u548c\u7528\u6237\u4e4b\u95f4\u7684\u62a5\u6587\u5728\u7528\u6237\u4e3b\u673a\u4e4b\u95f4(\u65e0\u9700\u901a\u8fc7\u4e2d\u95f4\u670d\u52a1\u5668)\u76f4\u63a5\u53d1\u9001\u3002 \u7f51\u7edc\u5e94\u7528\u8fdb\u7a0b\u901a\u4fe1 \u2003\u5ba2\u6237\u8fdb\u7a0b: \u53d1\u8d77\u901a\u4fe1\u7684\u8fdb\u7a0b\uff1b \u670d\u52a1\u5668\u8fdb\u7a0b\uff1a\u7b49\u5f85\u901a\u4fe1\u8bf7\u6c42\u7684\u8fdb\u7a0b\u3002 socket\u5957\u63a5\u5b57: \u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7edc\u4e4b\u95f4\u7684\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3; \u56e0\u6b64\u8fdb\u7a0b\u901a\u8fc7socket\u5411\u7f51\u7edc\u53d1\u9001\u62a5\u6587\u548c\u63a5\u6536\u62a5\u6587\u3002 \u8fdb\u7a0b\u5bfb\u5740: \u4f20\u8f93\u5c42\u534f\u8bae\u63d0\u4f9b\u670d\u52a1: \u53ef\u9760\u6570\u636e\u4f20\u8f93\u3001\u541e\u5410\u91cf\u3001\u5b9a\u65f6(\u65f6\u5ef6)\u3001\u5b89\u5168\u6027(\u4f20\u8f93\u5c42\u534f\u8bae\u80fd\u591f\u52a0\u5bc6\u53d1\u9001\u8fdb\u7a0b\u4f20\u8f93\u7684\u6240\u6709\u6570\u636e\uff1b\u4e5f\u80fd\u5728\u5c06\u6570\u636e\u4ea4\u4ed8\u7ed9\u63a5\u6536\u8fdb\u7a0b\u524d\u89e3\u5bc6\u6570\u636e\uff0c\u4f20\u8f93\u5c42\u8fd8\u63d0\u4f9b\u6570\u636e\u5b8c\u6574\u6027\u548c\u7aef\u70b9\u9274\u522b\u7684\u5b89\u5168\u6027\u670d\u52a1)\u3002 Internet\u4e3a\u4f20\u8f93\u5c42\u63d0\u4f9b\u4e24\u4e2a\u534f\u8bae\uff0c\u5176\u4e2dTCP\u534f\u8bae\u53ef\u4ee5\u63d0\u4f9b \u53ef\u9760\u6570\u636e\u4f20\u8f93\u548c\u5b89\u5168\u6027(\u901a\u8fc7Secure Socket Layer\u5b9e\u73b0) \uff0c\u4f46TCP\u548cUDP\u5747\u4e0d\u63d0\u4f9b\u541e\u5410\u91cf\u548c\u65f6\u5ef6\u7684\u4fdd\u8bc1\u3002 \u4f55\u8c13\u201c\u8fde\u63a5\u201d TCP\u901a\u8baf\uff0c\u901a\u8fc7\u4e09\u6b21\u63e1\u624b\uff0c\u5728\u5ba2\u6237\u7aef\u8fdb\u7a0b\u548c\u670d\u52a1\u5668\u8fdb\u7a0b\u95f4\u5efa\u7acb\u4e00\u4e2a\u957f\u671f\u8fde\u63a5\uff0c \u4fdd\u8bc1\u4e24\u8005\u4e4b\u95f4\u7684\u6570\u636e\u53ef\u4ee5\u6b63\u786e\u53d1\u9001\u548c\u63a5\u6536\uff0c\u901a\u8fc7\u552f\u4e00\u7684\u7aef\u53e3\u53f7\uff0c\u786e\u4fdd\u6bcf\u6b21\u63a5\u6536\u5230\u6765\u81ea\u540c\u4e00\u4e2a\u670d\u52a1\u5668\u7684\u6570\u636e\u3002 \u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u95f4\u4f20\u8f93\u6570\u636e\u65f6\uff0c\u4e24\u65b9\u9700\u8981\u7ef4\u62a4\u8fde\u63a5\u7684\u72b6\u6001\u3002 UDP\u901a\u8baf\uff0c\u5e76\u6ca1\u6709\u63e1\u624b\u8fc7\u7a0b\uff0c\u6bcf\u4e2a\u5ba2\u6237\u7aef\u7aef\u53e3\u548c\u670d\u52a1\u5668\u7aef\u53e3\u4e4b\u95f4\u7684\u8fde\u63a5\u662f\u77ed\u671f\u7684\uff0c \u5e76\u4e0d\u4fdd\u8bc1\u53d1\u9001\u7684\u6570\u636e\u4e00\u5b9a\u88ab\u63a5\u53d7\u5230\uff1b \u4e14\u6bcf\u6b21\u5411\u4e00\u4e2a\u670d\u52a1\u5668\u7aef\u53e3\u53d1\u8d77\u7533\u8bf7\uff0c\u7136\u540e\u4e0b\u4e00\u6b21\u53ef\u4ee5\u5411\u53e6\u5916\u4e00\u4e2a\u670d\u52a1\u5668\u7aef\u53e3\u7533\u8bf7\u63a5\u6536\u6570\u636e\uff1b \u56e0\u6b64\u4e00\u4e2audp\u670d\u52a1\u5668\u7aef\u53e3\u53ef\u4ee5\u4e00\u6bb5\u65f6\u95f4\u5185\u63a5\u53d7\u591a\u4e2a\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u8bf7\u6c42\uff0c \u4e00\u4e2a\u5ba2\u6237\u7aef\u63a5\u53e3\u4e5f\u53ef\u4ee5\u77ed\u65f6\u95f4\u5185\u63a5\u6536\u591a\u4e2a\u670d\u52a1\u7aef\u53d1\u6765\u7684\u6570\u636e\u3002 \u5e94\u7528\u5c42\u534f\u8bae\u5b9a\u4e49: WEB\u5e94\u7528 http: \u2003web\u7684\u5e94\u7528\u5c42\u534f\u8bae\u662fHTTP(HyperText Transfer Protocol)\u534f\u8bae\uff1b\u5ba2\u6237\u673a\u548c\u670d\u52a1\u5668\u8fd0\u884c\u5728\u4e0d\u540c\u7684\u7aef\u7cfb\u7edf\u4e2d\uff0c\u901a\u8fc7\u4ea4\u6362HTTP\u62a5\u6587\u8fdb\u884c\u4f1a\u8bdd\u3002HTTP\u5b9a\u4e49\u4e86web\u5ba2\u6237\u5411web\u670d\u52a1\u5668\u8bf7\u6c42web\u9875\u9762\u7684\u683c\u5f0f\uff0c\u4ee5\u53caweb\u670d\u52a1\u5668\u5411\u5ba2\u6237\u53d1\u9001web\u9875\u9762\u7684\u65b9\u5f0f\u3002 HTTP\u4f7f\u7528TCP\u4f5c\u4e3a\u4f20\u8f93\u5c42\u534f\u8bae: \u6301\u4e45\u6027\u8fde\u63a5\u548c\u975e\u6301\u4e45\u6027\u8fde\u63a5 \u975e\u6301\u4e45\u6027\u8fde\u63a5: \u6bcf\u4e2a\u4e2aTCP\u8fde\u63a5\u53ea\u5141\u8bb8\u4f20\u8f93\u4e00\u4e2a\u5bf9\u8c61\uff1b \u6301\u4e45\u6027\u8fde\u63a5: \u6bcf\u4e2aTCP\u8fde\u63a5\u5141\u8bb8\u4f20\u8f93\u591a\u4e2a\u5bf9\u8c61\u3002 http\u6d88\u606f\u683c\u5f0f: HTTP\u6709\u4e24\u79cd\u62a5\u6587: \u8bf7\u6c42\u62a5\u6587\u548c\u54cd\u5e94\u62a5\u6587 \u8bf7\u6c42\u62a5\u6587 : \u8bf7\u6c42\u62a5\u6587\u7531ASCII\u6587\u672c\u5199\u6210; Host: xx, \u6307\u660e\u4e86\u5bf9\u8c61\u6240\u5728\u4e3b\u673a\uff0c\u8be5\u9996\u90e8\u884c\u4fe1\u606f\u662fWeb\u4ee3\u7406\u9ad8\u901f\u7f13\u5b58\u6240\u8981\u6c42\u7684; Connection:close, \u544a\u8bc9\u670d\u52a1\u5668\u4e0d\u5e0c\u671b\u4f7f\u7528\u6301\u7eed\u6027\u8fde\u63a5\uff0c\u8981\u6c42\u670d\u52a1\u5668\u5728\u53d1\u9001\u5b8c\u88ab\u8bf7\u6c42\u7684\u5bf9\u8c61\u540e\u5c31\u5173\u95ed\u8fd9\u6761\u8fde\u63a5; keep-alive\uff1a\u8868\u793a\u4f7f\u7528\u6301\u4e45\u6027\u8fde\u63a5 User-agent, \u6307\u660e\u7528\u6237\u4ee3\u7406\uff0c\u5373\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u7684\u6d4f\u89c8\u5668\u7c7b\u578b\uff0c \u56e0\u6b64\u670d\u52a1\u5668\u53ef\u4ee5\u6709\u6548\u5730\u4e3a\u4e0d\u540c\u7c7b\u578b\u7684\u7528\u6237\u4ee3\u7406\u5b9e\u9645\u53d1\u9001\u76f8\u540c\u5bf9\u8c61\u7684\u4e0d\u540c\u7248\u672c(\u6bcf\u4e2a\u7248\u672c\u90fd\u7531\u76f8\u540c\u7684URL\u5bfb\u5740); Accept-lanuage, \u7528\u6237\u671f\u671b\u5f97\u5230\u7684\u5bf9\u8c61\u7684\u8bed\u8a00\u7248\u672c\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u670d\u52a1\u5668\u4f1a\u53d1\u9001\u9ed8\u8ba4\u7248\u672c\u3002 \u9996\u90e8\u4e0eEntity Body\u4e2d\u95f4\u901a\u8fc7\u56de\u8f66(cr)\u3001\u6362\u884c(lf)\u6765\u5206\u9694 method get: \u4ece\u670d\u52a1\u5668\u83b7\u53d6\u8d44\u6e90\uff0c\u5982\u9759\u6001\u6587\u672c\u3001\u56fe\u7247\u3001\u89c6\u9891\u7b49\uff0c\u6d4f\u89c8\u5668\u53ef\u4ee5\u5bf9get\u8bf7\u6c42\u7684\u6570\u636e\u8fdb\u884c\u7f13\u5b58\uff1b get\u8bf7\u6c42\u53ef\u4ee5\u5c06\u53c2\u6570(querystring)\u901a\u8fc7URL\u4f20\u9012\uff0c\u4e14\u8bf7\u6c42\u53c2\u6570\u662f\u53ef\u89c1\u7684\uff1b post: \u63d0\u4ea4\u8868\u5355, \u5411\u670d\u52a1\u5668\u4f20\u8f93\u8d44\u6e90\uff0c\u8868\u5355\u6570\u636e\u88ab\u7f16\u7801\u5728\u62a5\u6587\u7684body\u4e2d\uff1b post\u4e00\u4e2a\u8868\u5355\u65f6\uff0curl\u4e5f\u53ef\u4ee5\u5e26\u4e0a\u53c2\u6570\uff0c\u4f46\u9700\u8981\u63d0\u4f9bquerystring post\u8bf7\u6c42\u8fd4\u56de\u7684\u8d44\u6e90\u4e0d\u53ef\u4ee5\u88ab\u7f13\u5b58\uff0cpost\u8bf7\u6c42\u4e5f\u4e0d\u80fd\u4f5c\u4e3a\u4e66\u7b7e\u4fdd\u5b58 \u54cd\u5e94\u62a5\u6587 : \u2003\u72b6\u6001\u884c\u548c\u6bcf\u4e2a\u5934\u90e8\u5b57\u6bb5\u90fd\u5fc5\u987b\u90fd\u5fc5\u987b\u4ee5\u56de\u8f66\u6362\u884c\u7ed3\u675f\uff1b\u5728\u6240\u6709\u5934\u90e8\u5b57\u6bb5\u4e4b\u540e\uff0cHTTP\u5e94\u7b54\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u7a7a\u884c\uff0c \u8be5\u7a7a\u884c\u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u56de\u8f66\u6362\u884c\uff0c\u4e0d\u80fd\u6709\u5176\u4ed6\u5b57\u7b26\u3002 \u72b6\u6001\u7801 : 200 OK\u662f\u6700\u5e38\u2ec5\u7684\u6210\u529f\u72b6\u6001\u7801\uff0c\u8868\u793a\u2f00\u5207\u6b63\u5e38\u3002\u5982\u679c\u662f\u2faeHEAD\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u8fd4\u56de\u7684\u54cd\u5e94\u5934\u90fd\u4f1a\u6709body\u6570\u636e. 204 No Content\u4e5f\u662f\u5e38\u2ec5\u7684\u6210\u529f\u72b6\u6001\u7801\uff0c\u4e0e 200 OK \u57fa\u672c\u76f8\u540c\uff0c\u4f46\u54cd\u5e94\u5934\u6ca1\u6709 body \u6570\u636e. 206 Partial Content\u662f\u5e94\u2f64\u4e8e HTTP \u5206\u5757\u4e0b\u8f7d\u6216\u65ad\u70b9\u7eed\u4f20\uff0c\u8868\u793a\u54cd\u5e94\u8fd4\u56de\u7684 body \u6570\u636e\u5e76\u4e0d\u662f\u5168\u90e8\u8d44\u6e90\uff0c \u2f7d\u662f\u5176\u4e2d\u7684\u2f00\u90e8\u5206\uff0c\u4e5f\u662f\u670d\u52a1\u5668\u5904\u7406\u6210\u529f\u7684\u72b6\u6001\u3002 301 Moved Permanently,\u6c38\u4e45\u79fb\u52a8\u3002\u8bf7\u6c42\u7684\u8d44\u6e90\u5df2\u88ab\u6c38\u4e45\u7684\u79fb\u52a8\u5230\u65b0URI\uff0c\u8fd4\u56de\u4fe1\u606f\u4f1a\u5305\u62ec\u65b0\u7684URI\uff0c \u6d4f\u89c8\u5668\u4f1a\u81ea\u52a8\u5b9a\u5411\u5230\u65b0URI\u3002\u4eca\u540e\u4efb\u4f55\u65b0\u7684\u8bf7\u6c42\u90fd\u5e94\u4f7f\u7528\u65b0\u7684URI\u4ee3\u66ff. 302 Found,\u4e34\u65f6\u79fb\u52a8\u3002\u4e0e301\u7c7b\u4f3c\u3002\u4f46\u8d44\u6e90\u53ea\u662f\u4e34\u65f6\u88ab\u79fb\u52a8\u3002\u5ba2\u6237\u7aef\u5e94\u7ee7\u7eed\u4f7f\u7528\u539f\u6709URI. 304 Not Modified,\u672a\u4fee\u6539\u3002\u6240\u8bf7\u6c42\u7684\u8d44\u6e90\u672a\u4fee\u6539\uff0c\u670d\u52a1\u5668\u8fd4\u56de\u6b64\u72b6\u6001\u7801\u65f6\uff0c\u4e0d\u4f1a\u8fd4\u56de\u4efb\u4f55\u8d44\u6e90\u3002 \u5ba2\u6237\u7aef\u901a\u5e38\u4f1a\u7f13\u5b58\u8bbf\u95ee\u8fc7\u7684\u8d44\u6e90\uff0c\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e2a\u5934\u4fe1\u606f\u6307\u51fa\u5ba2\u6237\u7aef\u5e0c\u671b\u53ea\u8fd4\u56de\u5728\u6307\u5b9a\u65e5\u671f\u4e4b\u540e\u4fee\u6539\u7684\u8d44\u6e90. 305 Use Proxy,\u4f7f\u7528\u4ee3\u7406\u3002\u6240\u8bf7\u6c42\u7684\u8d44\u6e90\u5fc5\u987b\u901a\u8fc7\u4ee3\u7406\u8bbf\u95ee. 400 Bad Request \u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u8bed\u6cd5\u9519\u8bef\uff0c\u670d\u52a1\u5668\u65e0\u6cd5\u7406\u89e3. 401 Unauthorized,\u8bf7\u6c42\u8981\u6c42\u7528\u6237\u7684\u8eab\u4efd\u8ba4\u8bc1. 403 Forbidden, \u670d\u52a1\u5668\u7406\u89e3\u8bf7\u6c42\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u4f46\u662f\u62d2\u7edd\u6267\u884c\u6b64\u8bf7\u6c42. 404 Not Found, \u8868\u793a\u8bf7\u6c42\u7684\u8d44\u6e90\u5728\u670d\u52a1\u5668\u4e0a\u4e0d\u5b58\u5728\u6216\u672a\u627e\u5230\uff0c\u6240\u4ee5\u2f46\u6cd5\u63d0\u4f9b\u7ed9\u5ba2\u6237\u7aef. 405 Method Not Allowed \u5ba2\u6237\u7aef\u8bf7\u6c42\u4e2d\u7684\u65b9\u6cd5\u88ab\u7981\u6b62. 501 Not Implemented \u670d\u52a1\u5668\u4e0d\u652f\u6301\u8bf7\u6c42\u7684\u529f\u80fd\uff0c\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42 502 Bad Gateway \u4f5c\u4e3a\u7f51\u5173\u6216\u8005\u4ee3\u7406\u5de5\u4f5c\u7684\u670d\u52a1\u5668\u5c1d\u8bd5\u6267\u884c\u8bf7\u6c42\u65f6\uff0c\u4ece\u8fdc\u7a0b\u670d\u52a1\u5668\u63a5\u6536\u5230\u4e86\u4e00\u4e2a\u65e0\u6548\u7684\u54cd\u5e94 503 Service Unavailable \u7531\u4e8e\u8d85\u8f7d\u6216\u7cfb\u7edf\u7ef4\u62a4\uff0c\u670d\u52a1\u5668\u6682\u65f6\u7684\u65e0\u6cd5\u5904\u7406\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u3002 504 Gateway Time-out\uff0c\u5145\u5f53\u7f51\u5173\u6216\u4ee3\u7406\u7684\u670d\u52a1\u5668\uff0c\u672a\u53ca\u65f6\u4ece\u8fdc\u7aef\u670d\u52a1\u5668\u83b7\u53d6\u8bf7\u6c42 505 HTTP Version not supported \u670d\u52a1\u5668\u4e0d\u652f\u6301\u8bf7\u6c42\u7684HTTP\u534f\u8bae\u7684\u7248\u672c\uff0c\u65e0\u6cd5\u5b8c\u6210\u5904\u7406 entity body\u5305\u542b\u4e86\u6240\u8bf7\u6c42\u5bf9\u8c61\u672c\u8eab; content-type \u6307\u793a\u4e86entity\u4e2d\u5bf9\u8c61\u7684\u7c7b\u578b\u3002 http\u53d1\u5c55 http1.0\u91c7\u7528\u7684\u662f\u975e\u6301\u7eed\u6027\u8fde\u63a5\uff0c\u6bcf\u4e2aTCP\u8fde\u63a5\u53ea\u5141\u8bb8\u4f20\u8f93\u4e00\u4e2a\u5bf9\u8c61\uff1b http1.1\u9ed8\u8ba4\u91c7\u7528\u7684\u662f\u6301\u7eed\u6027\u8fde\u63a5(\u4e5f\u79f0\u957f\u8fde\u63a5\uff0c\u8bf7\u6c42\u62a5\u6587\u4e2d\u7684\u9996\u90e8\u4fe1\u606fconnection\u9ed8\u8ba4\u4e3akeep-alive)\uff0c \u6bcf\u4e2aTCP\u8fde\u63a5\u5141\u8bb8\u4f20\u8f93\u591a\u4e2a\u5bf9\u8c61\uff0c\u540c\u65f6\u4f7f\u7528\u7ba1\u9053\u6280\u672f(\u79f0\u4e3aPipelining\uff0c\u4e5f\u79f0\u4f5c\u6d41\u6c34\u7ebf)\uff0c \u5728\u7b49\u5f85\u4e0a\u4e00\u4e2a\u8bf7\u6c42\u54cd\u5e94\u7684\u540c\u65f6\uff0c\u53d1\u9001\u4e0b\u4e00\u4e2a\u8bf7\u6c42\uff0c\u800c\u5728\u53d1\u9001\u8fc7\u7a0b\u4e2d\u4e0d\u9700\u8981\u7b49\u5f85\u670d\u52a1\u5668\u5bf9\u524d\u4e00\u4e2a\u8bf7\u6c42\u7684\u54cd\u5e94\u3002 http1.1\u7f3a\u70b9: http1.1\u89c4\u5219\u89c4\u5b9a\uff0c\u670d\u52a1\u5668\u7aef\u5728\u54cd\u5e94\u65f6\uff0c\u8981\u4e25\u683c\u6309\u7167\u63a5\u6536\u8bf7\u6c42\u7684\u987a\u5e8f\u53d1\u9001\u54cd\u5e94\uff0c\u5373\u5148\u63a5\u6536\u5230\u7684\u8bf7\u6c42\uff0c \u9700\u8981\u5148\u53d1\u9001\u5176\u54cd\u5e94\uff0c\u5ba2\u6237\u7aef\u4e5f\u662f\u5982\u6b64\uff0c\u63a5\u6536\u54cd\u5e94\u7684\u987a\u5e8f\u8981\u6309\u7167\u81ea\u5df1\u53d1\u9001\u8bf7\u6c42\u7684\u987a\u5e8f\u3002 \u56e0\u6b64 \u5982\u679c\u670d\u52a1\u5668\u6536\u5230\u7684\u7b2c\u4e00\u4e2a\u8bf7\u6c42\uff0c\u9700\u8981\u5f88\u957f\u7684\u5904\u7406\u65f6\u95f4\uff0c\u5219\u5bf9\u4e8e\u540e\u9762\u5df2\u7ecf\u5904\u7406\u5b8c\u54cd\u5e94\u7684\u8bf7\u6c42\u6765\u8bf4\uff0c \u5b83\u4eec\u53ea\u80fd\u963b\u585e\u7b49\u5f85\uff0c\u7b49\u5f85\u524d\u9762\u7684\u54cd\u5e94\u53d1\u9001\u5b8c\u540e\uff0c\u624d\u80fd\u88ab\u53d1\u9001\u51fa\u53bb\uff0c\u9020\u6210\u4e86\u201c\u961f\u9996\u963b\u585e\u201d\u95ee\u9898 \u3002 \u53ef\u89c1\u961f\u9996\u963b\u585e\u53d1\u751f\u5728\u670d\u52a1\u5668\u7aef\u3002\u56e0\u6b64\u5ba2\u6237\u7aef\u5728\u9700\u8981\u53d1\u8d77\u591a\u6b21\u8bf7\u6c42\u65f6\uff0c\u901a\u5e38\u4f1a\u91c7\u7528\u591a\u4e2aTCP\u8fde\u63a5\u6765\u51cf\u5c11\u5ef6\u8fdf\u3002 (\u4e0d\u540c\u6d4f\u89c8\u5668\u5141\u8bb8\u7684\u6700\u5927\u5e76\u53d1\u8fde\u63a5\u6570\u662f\u4e0d\u540c\u7684) \u6b64\u5916\u8fd8\u6709\u53ea\u80fd\u5ba2\u6237\u7aef\u5355\u5411 \u5411\u670d\u52a1\u5668\u53d1\u8d77\u8bf7\u6c42\u83b7\u5f97\u54cd\u5e94\u3001\u8bf7\u6c42\u62a5\u6587\u4e0e\u54cd\u5e94\u62a5\u6587\u9996\u90e8\u4fe1\u606f\u5197\u4f59\u91cf\u5927\uff0c \u5e76\u4e14\u672a\u91c7\u7528\u6570\u636e\u538b\u7f29\uff0c\u5bfc\u81f4\u4f20\u8f93\u91cf\u5927\u3002 http2.0\u6539\u8fdb: \u2003\u4e8c\u8fdb\u5236\u5206\u5e27: \u4e0d\u540c\u4e8ehttp1.x\u4e2d\u901a\u8fc7\u6587\u672c\u7684\u5f62\u5f0f\u4f20\u8f93\u6570\u636e\uff0chttp2.0\u5f15\u5165\u65b0\u7684\u7f16\u7801\u673a\u5236\uff0c \u5c06\u6240\u6709\u4f20\u8f93\u7684\u4fe1\u606f\u5206\u4e3a\u66f4\u5c0f\u7684\u6d88\u606f\u548c\u5e27\uff0c\u91c7\u7528\u4e8c\u8fdb\u5236\u683c\u5f0f\u7f16\u7801\uff0c\u7ec4\u6210\u4e8c\u8fdb\u5236\u5e27\u5c42 \u5176\u4e2dHTTP1.x\u7684\u9996\u90e8\u4fe1\u606f\u4f1a\u88ab\u5c01\u88c5\u5230Headers\u5e27\uff0c\u800cRequest Body\u5219\u5c01\u88c5\u5230Data\u5e27\u3002 \u56e0\u4e3a\u6bcf\u4e2a\u5e27\u90fd\u6709\u7f16\u53f7\uff0c\u4e8c\u8fdb\u5236\u5e27\u6570\u636e\u6d41\u53ef\u4ee5\u5230\u8fbe\u53e6\u4e00\u7aef\u540e\u518d\u6839\u636e\u5e27\u7684\u7f16\u53f7\u8fdb\u884c\u7ec4\u88c5\u3002 \u2003\u591a\u8def\u590d\u7528: \u5141\u8bb8\u540c\u65f6\u901a\u8fc7\u5355\u4e00\u7684TCP\u8fde\u63a5\u53d1\u8d77\u591a\u91cd\u7684\u8bf7\u6c42-\u54cd\u5e94\u6d88\u606f\uff0c \u539f\u56e0:\u4e8c\u8fdb\u5236\u5e27\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u7684TCP\u8fde\u63a5\u4e0a\u662f\u4ee5\u5b57\u8282\u6d41\u7684\u65b9\u5f0f\u53cc\u5411\u4f20\u8f93\u7684\uff0c\u7531\u4e8e\u7f16\u7801\u548c\u5c01\u88c5\u65b9\u5f0f\uff0c\u4e0d\u540c\u7684\u5e27\u4e92\u4e0d\u5e72\u6270\uff0c \u56e0\u6b64\u53ef\u4ee5\u5e76\u884c\u53d1\u9001\u591a\u4e2a\u4ea4\u9519\u8bf7\u6c42\u548c\u54cd\u5e94\uff0c\u5b9e\u73b0\u4e86 \u7ba1\u9053\u591a\u8def\u590d\u7528 \uff1b\u53ea\u8981\u5f53\u524dTCP\u8fde\u63a5\u53ef\u7528\uff0c\u5c31\u53ef\u4ee5\u53d1\u9001\u8bf7\u6c42\u548c\u54cd\u5e94\uff0c \u6d88\u9664\u4e86HTTP/1.1\u4e2d\u8bf7\u6c42\u548c\u54cd\u5e94\u987a\u5e8f\u5bf9\u5e94\u7684\u5173\u7cfb\u3002 \u2003\u5934\u90e8\u538b\u7f29: \u91c7\u7528HPACK\u7b97\u6cd5\u5bf9header\u4fe1\u606f\u8fdb\u884c\u538b\u7f29\u7f16\u7801\uff0c\u63d0\u9ad8\u5e26\u5bbd\u5229\u7528\u7387\u3002 \u5177\u4f53\u4e3a: \u5982\u679c\u540c\u65f6\u53d1\u51fa\u591a\u4e2a\u8bf7\u6c42\uff0c\u5b83\u4eec\u7684\u5934\u662f\u2f00\u6837\u7684\u6216\u662f\u76f8\u4f3c\u7684\uff0c\u90a3\u4e48\u534f\u8bae\u4f1a\u6d88\u9664\u91cd\u590d\u7684\u90e8\u5206\u3002 HPACK\u4f7f\u75282\u4e2a\u7d22\u5f15\u8868(\u9759\u6001\u3001\u52a8\u6001\u7d22\u5f15\u8868)\u6765\u628a\u5934\u90e8(\u5305\u542bheader name\u548cheader value)\u6620\u5c04\u5230\u7d22\u5f15\u503c\uff0c \u5e76\u5bf9\u4e0d\u5b58\u5728\u7684\u5934\u90e8\u4f7f\u7528 huffman \u7f16\u7801\uff0c\u5e76\u52a8\u6001\u7f13\u5b58\u5230\u7d22\u5f15\uff0c\u4ece\u800c\u8fbe\u5230\u538b\u7f29\u5934\u90e8\u7684\u6548\u679c\u3002 \u9759\u6001\u7d22\u5f15\u8868: \u9884\u5148\u5b9a\u4e49\u597d\u7684\u5185\u5bb9\uff0c\u53ea\u6709\u56fa\u5b9a\u7684\u51e0\u5341\u4e2a\u503c\uff0c\u5982\u679c\u8981\u53d1\u9001\u7684\u503c\u7b26\u5408\u9759\u6001\u8868\u65f6\uff0c\u7528\u5bf9\u5e94\u7684 Index \u66ff\u6362\u5373\u53ef. \u52a8\u6001\u7d22\u5f15\u8868:\u662f\u4e00\u4e2a\u7531FIFO\u961f\u5217\u7ef4\u62a4\u7684\u6709\u7a7a\u95f4\u9650\u5236\u7684\u8868\uff0c\u540c\u6837\u7ef4\u62a4\u7684\u662f\u5934\u90e8\u4e0e\u5bf9\u5e94\u7684\u7d22\u5f15\u3002 \u6bcf\u4e2a\u52a8\u6001\u8868\u53ea\u9488\u5bf9\u4e00\u4e2a\u8fde\u63a5\uff0c\u6bcf\u4e2a\u8fde\u63a5\u7684\u538b\u7f29\u89e3\u538b\u7f29\u7684\u4e0a\u4e0b\u6587\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u52a8\u6001\u8868\u3002 \u5f53\u4e00\u4e2a\u5934\u90e8\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u65f6\u5019\uff0c\u4f1a\u628a\u5b83\u63d2\u5165\u52a8\u6001\u8868\u4e2d\uff0c\u4e0b\u6b21\u540c\u540d\u7684\u503c\u5c31\u53ef\u80fd\u4f1a\u5728\u8868\u4e2d\u67e5\u627e\u5230\u7d22\u5f15\u5e76\u66ff\u6362\u6389\u5934\u90e8\u3002 \u2003\u670d\u52a1\u5668\u63a8\u9001: \u4e3a\u4e86\u6539\u5584\u5ef6\u8fdf\uff0cHTTP2.0\u5f15\u5165\u4e86server push\uff0c\u5b83\u5141\u8bb8\u670d\u52a1\u7aef\u4e3b\u52a8\u63a8\u9001\u8d44\u6e90\u7ed9\u6d4f\u89c8\u5668\uff0c \u4f8b\u5982\u5728\u6d4f\u89c8\u5668\u521a\u8bf7\u6c42 HTML \u7684\u65f6\u5019\uff0c\u670d\u52a1\u5668\u5c31\u63d0\u524d\u628a\u53ef\u80fd\u4f1a\u2f64\u5230\u7684 JS\u3001CSS \u2f42\u4ef6\u7b49\u9759\u6001\u8d44\u6e90\u4e3b\u52a8\u53d1\u7ed9 \u5ba2\u6237\u7aef\uff0c\u51cf\u5c11\u7b49\u5f85\u65f6\u95f4\u3002 http2.0\u7f3a\u70b9: \u591a\u4e2aHTTP\u8bf7\u6c42\u5728\u590d\u2f64\u2f00\u4e2aTCP\u8fde\u63a5\uff0c\u4e0b\u5c42\u7684TCP\u534f\u8bae\u662f\u4e0d\u77e5\u9053\u6709\u591a\u5c11\u4e2aHTTP\u8bf7\u6c42\u7684\u3002 \u6240\u4ee5\u2f00\u65e6\u53d1\u2f63\u4e86\u4e22\u5305\u73b0\u8c61\uff0c\u5c31\u4f1a\u89e6\u53d1TCP\u7684\u91cd\u4f20\u673a\u5236\uff0c\u8fd9\u6837\u5728\u2f00\u4e2aTCP\u8fde\u63a5\u4e2d\u7684\u6240\u6709\u7684HTTP\u8bf7\u6c42 \u90fd\u5fc5\u987b\u7b49\u5f85\u8fd9\u4e2a\u4e22\u4e86\u7684\u5305\u88ab\u91cd\u4f20\u56de\u6765\u3002 http3.0: \u53c8\u79f0\u4e3aHTTP Over QUIC\uff0c\u5176\u5f03\u7528TCP\u534f\u8bae\uff0c\u6539\u4e3a\u4f7f\u7528\u57fa\u4e8eUDP\u534f\u8bae\u7684 QUIC(Quick UDP Internet Protocol)\u534f\u8bae\u6765\u5b9e\u73b0. \u5982\u4f55\u5904\u7406\u4e22\u5305: \u2003\u524d\u5411\u7ea0\u9519: QUIC\u534f\u8bae\u7684\u6bcf\u4e2a\u6570\u636e\u5305\u9664\u4e86\u672c\u8eab\u7684\u6570\u636e\u4ee5\u5916\uff0c\u4f1a\u5e26\u6709\u5176\u4ed6\u6570\u636e\u5305\u7684\u90e8\u5206\u6570\u636e\uff0c\u5728\u5c11\u91cf\u4e22\u5305\u7684\u60c5\u51b5\u4e0b\uff0c \u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6570\u636e\u5305\u7684\u5197\u4f59\u6570\u636e\u5b8c\u6210\u6570\u636e\u7ec4\u88c5\u800c\u65e0\u9700\u91cd\u4f20\uff0c\u4ece\u800c\u63d0\u9ad8\u6570\u636e\u7684\u4f20\u8f93\u901f\u5ea6\u3002 \u2003\u5feb\u901f\u91cd\u542f\u4f1a\u8bdd: \u666e\u901a\u57fa\u4e8etcp\u7684\u8fde\u63a5\uff0c\u662f\u57fa\u4e8e\u4e24\u7aef\u7684ip\u548c\u7aef\u53e3\u548c\u534f\u8bae\u6765\u5efa\u7acb\u7684\u3002\u5728\u7f51\u7edc\u5207\u6362\u573a\u666f\uff0c\u4f8b\u5982\u624b\u673a\u7aef\u5207\u6362\u4e86\u65e0\u7ebf\u7f51\uff0c \u4f7f\u75284G\u7f51\u7edc\uff0c\u4f1a\u6539\u53d8\u672c\u8eab\u7684ip\uff0c\u8fd9\u5c31\u5bfc\u81f4tcp\u8fde\u63a5\u5fc5\u987b\u91cd\u65b0\u521b\u5efa\u3002\u800cQUIC\u534f\u8bae\u4f7f\u7528\u7279\u6709\u7684UUID\u6765\u6807\u8bb0\u6bcf\u4e00\u6b21\u8fde\u63a5\uff0c \u5728\u7f51\u7edc\u73af\u5883\u53d1\u751f\u53d8\u5316\u7684\u65f6\u5019\uff0c\u53ea\u8981UUID\u4e0d\u53d8\uff0c\u5c31\u80fd\u4e0d\u9700\u8981\u63e1\u624b\uff0c\u7ee7\u7eed\u4f20\u8f93\u6570\u636e\u3002 cookie \u2003cookie\u53ef\u4ee5\u7528\u4e8e\u6807\u8bb0\u4e00\u4e2a\u7528\u6237\uff0c\u7528\u6237\u9996\u6b21\u8bbf\u95ee\u4e00\u4e2a\u7ad9\u70b9\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u7528\u6237\u6807\u8bc6\uff0c\u5728\u540e\u7ee7\u4f1a\u8bdd\u4e2d\uff0c \u6d4f\u89c8\u5668\u5411\u670d\u52a1\u5668\u4f20\u9012\u4e00\u4e2acookie\u9996\u90e8\uff0c\u4ece\u800c\u5411\u8be5\u670d\u52a1\u5668\u6807\u8bc6\u4e86\u7528\u6237\u3002\u56e0\u6b64cookie\u53ef\u4ee5\u5728\u65e0\u72b6\u6001\u7684http\u4e4b\u4e0a\u5efa\u7acb\u4e00\u4e2a\u7528\u6237\u4f1a\u8bdd\u5c42 \u3002 Web\u7f13\u5b58/\u4ee3\u7406\u670d\u52a1\u5668\u6280\u672f \u2003\u5728\u4e0d\u8bbf\u95ee\u670d\u52a1\u5668\u7684\u524d\u63d0\u4e0b\u6ee1\u8db3\u5ba2\u6237\u7aef\u7684HTTP\u8bf7\u6c42\uff0cweb\u7f13\u5b58\u5668\u6709\u81ea\u5df1\u7684\u78c1\u76d8\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u5728\u5b58\u50a8\u7a7a\u95f4\u4e2d\u4fdd\u5b58\u6700\u8fd1\u8bf7\u6c42\u8fc7\u7684\u5bf9\u8c61\u7684\u526f\u672c\u3002 \u2003\u4e3a\u4e86\u786e\u4fdd\u7f13\u5b58\u670d\u52a1\u5668\u4e2d\u7684\u5bf9\u8c61\u662f\u6700\u65b0\u7684\uff0cHTTP\u63d0\u4f9b\u4e86\u6761\u4ef6GET\u65b9\u6cd5\u3002 \u7f13\u5b58\u670d\u52a1\u5668\u5728\u5c06\u5bf9\u8c61\u8f6c\u53d1\u5230\u8bf7\u6c42\u7684\u6d4f\u89c8\u5668\u7684\u540c\u65f6\uff0c\u4e5f\u5728\u672c\u5730\u7f13\u5b58\u4e86\u5bf9\u8c61\uff0c\u5e76\u4e14\u5b58\u50a8\u4e86\u8be5\u5bf9\u8c61\u7684\u6700\u540e\u4fee\u6539\u65f6\u671f\u3002 \u6587\u4ef6\u4f20\u8f93\u534f\u8bae(FTP) \u8fde\u63a5\u8fc7\u7a0b \u4e0eHTTP\u533a\u522b Email\u5e94\u7528 Email\u5e94\u7528\u7ec4\u6210\u4e0eSMTP \u2003 SMTP: Simple Mail Transport Protocol(\u7b80\u5355\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae) SMTP\u4e0eHTTP\u4e0d\u540c \u2003HTTP is a pull protocol, \u5373\u7528\u6237\u4f7f\u7528HTTP\u4ece\u670d\u52a1\u5668\u4e0a\u62c9\u53d6\u4fe1\u606f\uff0cTCP\u8fde\u63a5\u662f\u7531\u63a5\u6536\u65b9\u53d1\u8d77\u7684\uff1b SMTP is a push protocol, \u5373\u53d1\u9001\u90ae\u4ef6\u670d\u52a1\u5668\u628a\u6587\u4ef6\u63a8\u5411\u63a5\u6536\u90ae\u4ef6\u670d\u52a1\u5668\uff0c TCP\u8fde\u63a5\u662f\u7531\u53d1\u9001\u65b9\u53d1\u8d77\u7684\u3002 \u2003SMTP\u62a5\u6587\u4f7f\u75287bit ASCII\u683c\u5f0f\uff0cHTTP\u4e0d\u53d7\u6b64\u9650\u5236\u3002 \u2003 \u5728\u5904\u7406\u5305\u542b\u591a\u4e2a\u5bf9\u8c61\u65f6(\u5982\u5305\u542b\u6587\u672c\u548c\u56fe\u7247\u7684\u6587\u6863)\uff0cHTTP\u4f1a\u628a\u6bcf\u4e2a\u5bf9\u8c61\u5c01\u88c5\u5230\u5404\u81ea\u7684HTTP\u54cd\u5e94\u62a5\u6587\u4e2d\uff0c\u800cSMTP\u5219\u628a\u6240\u6709\u62a5\u6587\u5bf9\u8c61\u653e\u5728\u4e00\u4e2a\u62a5\u6587\u4e2d \u3002 \u90ae\u4ef6\u8bbf\u95ee\u534f\u8bae \u2003\u90ae\u4ef6\u4f20\u8f93\u8fc7\u7a0b: \u53d1\u9001\u65b9\u7528\u6237\u4ee3\u7406->\u53d1\u9001\u65b9\u90ae\u4ef6\u670d\u52a1\u5668->\u63a5\u6536\u65b9\u90ae\u4ef6\u670d\u52a1\u5668->\u63a5\u6536\u65b9\u7528\u6237\u4ee3\u7406 \u2003\u91c7\u7528\u53d1\u9001\u65b9\u90ae\u4ef6\u670d\u52a1\u5668\u4f5c\u4e3a\u4e2d\u7ee7\uff0c\u901a\u8fc7\u6d88\u606f\u961f\u5217\uff0c\u5b58\u50a8\u53d1\u9001\u65b9\u53d1\u51fa\u7684\u90ae\u4ef6\uff0c\u53ef\u4ee5\u907f\u514d\u63a5\u6536\u65b9\u90ae\u4ef6\u670d\u52a1\u5668\u4e0d\u5728\u7ebf\u65f6\uff0c\u76f4\u63a5\u901a\u8fc7\u7528\u6237\u4ee3\u7406\uff0c\u65e0\u6cd5\u5230\u8fbe\u63a5\u6536\u65b9\uff1b\u53d1\u9001\u65b9\u90ae\u4ef6\u670d\u52a1\u5668\u4f1a\u5b9a\u65f6\u67e5\u8be2\u8fde\u63a5\uff0c\u4e00\u65e6\u8fde\u63a5\uff0c\u5c31\u5c06\u90ae\u4ef6\u4f20\u8f93\u5230\u63a5\u6536\u65b9\u670d\u52a1\u5668\u3002 \u2003\u4f20\u8f93\u8fc7\u7a0b\u7684\u524d\u4e24\u90e8\u5206\u91c7\u7528SMTP\u534f\u8bae\uff0c\u800c\u6700\u540e\u4e00\u90e8\u5206\u4e0d\u80fd\u91c7\u7528SMTP\u534f\u8bae\uff0c\u56e0\u4e3a\u53ea\u80fd\u7531\u7528\u6237\u4ee3\u7406\u4e3b\u52a8\u63a5\u6536\u90ae\u4ef6\uff0c\u800c\u8fd9\u662f\u4e00\u4e2apull\u52a8\u4f5c\uff0c\u9700\u8981\u901a\u8fc7\u90ae\u4ef6\u8bbf\u95ee\u534f\u8bae\u6765\u4ece\u63a5\u6536\u65b9\u670d\u52a1\u5668\u63a5\u6536\u90ae\u4ef6\u3002 \u2003POP3(Post Office Protocol v3)\u534f\u8bae: authorization(\u9a8c\u8bc1\u7528\u6237\u540d\u548c\u53e3\u4ee4)\u3001\u4e8b\u7269\u5904\u7406(\u53d6\u56de\u62a5\u6587\u5373\u90ae\u4ef6\uff0c\u5bf9\u62a5\u6587\u6dfb\u52a0\u5220\u9664\u6807\u8bb0)\u3001\u66f4\u65b0(\u4f1a\u8bdd\u7ed3\u675f\uff0c\u90ae\u4ef6\u670d\u52a1\u5668\u5220\u9664\u88ab\u6807\u8bb0\u4e3a\u5220\u9664\u7684\u62a5\u6587)\u3002 \u2003IMAP(Internet Mail Access Protocol)\u534f\u8bae \u4ee5\u53ca HTTP\u534f\u8bae(\u5982web mail, \u6d4f\u89c8\u5668\u5145\u5f53\u7528\u6237\u4ee3\u7406\uff0c\u901a\u8fc7HTTP\u4e0e\u670d\u52a1\u5668\u901a\u4fe1\uff0c\u4e0d\u8fc7\u90ae\u4ef6\u670d\u52a1\u4e4b\u95f4\u4ecd\u662f\u901a\u8fc7SMTP\u534f\u8bae)\u3002 MMIE DNS(Domain Name System) \u2003\u6307\u4e00\u4e2a\u7531\u591a\u5c42\u57df\u540d\u670d\u52a1\u5668\u6784\u6210\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u91c7\u7528\u96c6\u4e2d\u5f0fDNS\u7f3a\u70b9: \u5355\u70b9\u5931\u8d25(\u5373\u82e5\u552f\u4e00\u7684DNS\u670d\u52a1\u5668\u6545\u969c\uff0c\u5219\u6574\u4e2aINTERNET\u5c06\u5d29\u6e83)\u3001\u6d41\u91cf\u95ee\u9898(\u9ad8\u5e76\u53d1\u67e5\u8be2)\u3001\u8ddd\u79bb\u95ee\u9898(\u5355\u4e2aDNS server\u4e0d\u53ef\u80fd\u90bb\u8fd1\u6240\u6709\u67e5\u8be2\u5ba2\u6237)\u3001\u7ef4\u62a4\u6027\u95ee\u9898(\u5355\u4e00\u6570\u636e\u5e93\u7ef4\u62a4\u548c\u66f4\u65b0\u5de8\u5927\u7684\u67e5\u8be2\u8bb0\u5f55)\u3002 \u2003\u4e5f\u6307\u4e00\u4e2a\u4f7f\u5f97\u4e3b\u673a\u80fd\u591f\u67e5\u8be2\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u7684\u5e94\u7528\u5c42\u534f\u8bae(DNS\u534f\u8bae)\u3002 \u2003DNS\u534f\u8bae\u5b8c\u6210Internet\u6838\u5fc3\u4efb\u52a1\uff0c\u5c06\u57df\u540d\u6620\u5c04\u4e3aIP\u5730\u5740\u3002 \u8fd0\u884c\u5728UDP\u4e0a\uff0c\u4f7f\u752853\u53f7\u7aef\u53e3 \u3002 DNS\u670d\u52a1 \u57df\u540d\u89e3\u6790\u3001\u4e3b\u673a\u522b\u540d\u3001\u90ae\u4ef6\u670d\u52a1\u5668\u522b\u540d\u3001\u8d1f\u8f7d\u5747\u8861\u3002 \u67e5\u8be2 \u8fed\u4ee3\u67e5\u8be2\u548c\u9012\u5f52\u67e5\u8be2 DNS\u7f13\u5b58 \u2003\u53ea\u8981DNS\u670d\u52a1\u5668\u63a5\u6536\u4e00\u4e2aDNS\u56de\u7b54(\u57df\u540d-IP\u7684\u6620\u5c04)\uff0c\u5373\u7f13\u5b58\u8be5\u56de\u7b54\uff1b\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u7f13\u5b58\u6761\u76ee\u4f1a\u5931\u6548(\u88ab\u5220\u9664)\uff1b\u672c\u5730DNS\u670d\u52a1\u5668\u4e00\u822c\u4f1a\u7f13\u5b58\u9876\u7ea7\u57df\u540d\u670d\u52a1\u5668\u7684\u6620\u5c04\uff0c\u56e0\u6b64DNS \u6839\u670d\u52a1\u5668\u5f88\u5c11\u88ab\u8bbf\u95ee\u3002 DNS\u8bb0\u5f55\u548c\u62a5\u6587 \u2003TTL\u4ee3\u8868\u8be5\u8bb0\u5f55\u7684\u751f\u5b58\u65f6\u95f4\uff0c\u5b83\u51b3\u5b9a\u4e86\u8d44\u6e90\u8bb0\u5f55(Resource Record)\u5e94\u5f53\u88ab\u5220\u9664\u7684\u65f6\u95f4 P2P\u5e94\u7528 \u7ed3\u6784\u7279\u70b9 P2P\u7d22\u5f15 \u7d22\u5f15\u7ed3\u6784 socket\u7f16\u7a0b\u57fa\u7840 socket socket API\u51fd\u6570 \u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u7aef","title":"application"},{"location":"Network/1_application/#_1","text":"","title":"\u7f51\u7edc\u5e94\u7528\u5c42"},{"location":"Network/1_application/#_2","text":"\u5ba2\u6237-\u670d\u52a1\u5668\u4f53\u7cfb\u7ed3\u6784(client-server, CS) p2p\u7ed3\u6784: \u5bf9\u4f4d\u4e8e\u6570\u636e\u4e2d\u5fc3\u7684\u4e13\u7528\u670d\u52a1\u5668\u6709\u5f88\u5c0f\u6216\u4e0d\u9700\u4f9d\u8d56\uff0c\u5e94\u7528\u7a0b\u5e8f\u5728\u95f4\u65ad\u8fde\u63a5\u7684\u4e3b\u673a\u5bf9\u4e4b\u95f4\u4f7f\u7528\u76f4\u63a5\u901a\u4fe1\uff0c\u8fd9\u4e9b\u4e3b\u673a\u79f0\u4e3a\u5bf9\u7b49\u65b9\u3002 \u76ee\u524d\u8bb8\u591a\u6d41\u91cf\u5bc6\u96c6\u578b\u7684\u5e94\u7528\u90fd\u662fP2P\u4f53\u7cfb\u7ed3\u6784\uff0c\u4f8b\u5982\u6587\u4ef6\u5171\u4eab\u3001\u5bf9\u7b49\u65b9\u534f\u52a9\u4e0b\u8f7d\u52a0\u901f\u5668(\u8fc5\u96f7\u7b49)\u3002 \u2003 \u4e5f\u6709\u5e94\u7528\u662f\u5177\u6709\u6df7\u5408\u7684\u4f53\u7cfb\u7ed3\u6784\u3002\u4f8b\u5982\u5373\u65f6\u8baf\u606f\u5e94\u7528\uff0c\u670d\u52a1\u5668\u88ab\u7528\u4e8e\u8ddf\u8e2a\u7528\u6237\u7684IP\u5730\u5740\uff0c\u4f46\u7528\u6237\u548c\u7528\u6237\u4e4b\u95f4\u7684\u62a5\u6587\u5728\u7528\u6237\u4e3b\u673a\u4e4b\u95f4(\u65e0\u9700\u901a\u8fc7\u4e2d\u95f4\u670d\u52a1\u5668)\u76f4\u63a5\u53d1\u9001\u3002","title":"\u5e94\u7528\u7a0b\u5e8f\u4f53\u7cfb\u7ed3\u6784"},{"location":"Network/1_application/#_3","text":"\u5ba2\u6237\u8fdb\u7a0b: \u53d1\u8d77\u901a\u4fe1\u7684\u8fdb\u7a0b\uff1b \u670d\u52a1\u5668\u8fdb\u7a0b\uff1a\u7b49\u5f85\u901a\u4fe1\u8bf7\u6c42\u7684\u8fdb\u7a0b\u3002 socket\u5957\u63a5\u5b57: \u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7edc\u4e4b\u95f4\u7684\u5e94\u7528\u7a0b\u5e8f\u7f16\u7a0b\u63a5\u53e3; \u56e0\u6b64\u8fdb\u7a0b\u901a\u8fc7socket\u5411\u7f51\u7edc\u53d1\u9001\u62a5\u6587\u548c\u63a5\u6536\u62a5\u6587\u3002 \u8fdb\u7a0b\u5bfb\u5740: \u4f20\u8f93\u5c42\u534f\u8bae\u63d0\u4f9b\u670d\u52a1: \u53ef\u9760\u6570\u636e\u4f20\u8f93\u3001\u541e\u5410\u91cf\u3001\u5b9a\u65f6(\u65f6\u5ef6)\u3001\u5b89\u5168\u6027(\u4f20\u8f93\u5c42\u534f\u8bae\u80fd\u591f\u52a0\u5bc6\u53d1\u9001\u8fdb\u7a0b\u4f20\u8f93\u7684\u6240\u6709\u6570\u636e\uff1b\u4e5f\u80fd\u5728\u5c06\u6570\u636e\u4ea4\u4ed8\u7ed9\u63a5\u6536\u8fdb\u7a0b\u524d\u89e3\u5bc6\u6570\u636e\uff0c\u4f20\u8f93\u5c42\u8fd8\u63d0\u4f9b\u6570\u636e\u5b8c\u6574\u6027\u548c\u7aef\u70b9\u9274\u522b\u7684\u5b89\u5168\u6027\u670d\u52a1)\u3002 Internet\u4e3a\u4f20\u8f93\u5c42\u63d0\u4f9b\u4e24\u4e2a\u534f\u8bae\uff0c\u5176\u4e2dTCP\u534f\u8bae\u53ef\u4ee5\u63d0\u4f9b \u53ef\u9760\u6570\u636e\u4f20\u8f93\u548c\u5b89\u5168\u6027(\u901a\u8fc7Secure Socket Layer\u5b9e\u73b0) \uff0c\u4f46TCP\u548cUDP\u5747\u4e0d\u63d0\u4f9b\u541e\u5410\u91cf\u548c\u65f6\u5ef6\u7684\u4fdd\u8bc1\u3002 \u4f55\u8c13\u201c\u8fde\u63a5\u201d TCP\u901a\u8baf\uff0c\u901a\u8fc7\u4e09\u6b21\u63e1\u624b\uff0c\u5728\u5ba2\u6237\u7aef\u8fdb\u7a0b\u548c\u670d\u52a1\u5668\u8fdb\u7a0b\u95f4\u5efa\u7acb\u4e00\u4e2a\u957f\u671f\u8fde\u63a5\uff0c \u4fdd\u8bc1\u4e24\u8005\u4e4b\u95f4\u7684\u6570\u636e\u53ef\u4ee5\u6b63\u786e\u53d1\u9001\u548c\u63a5\u6536\uff0c\u901a\u8fc7\u552f\u4e00\u7684\u7aef\u53e3\u53f7\uff0c\u786e\u4fdd\u6bcf\u6b21\u63a5\u6536\u5230\u6765\u81ea\u540c\u4e00\u4e2a\u670d\u52a1\u5668\u7684\u6570\u636e\u3002 \u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u95f4\u4f20\u8f93\u6570\u636e\u65f6\uff0c\u4e24\u65b9\u9700\u8981\u7ef4\u62a4\u8fde\u63a5\u7684\u72b6\u6001\u3002 UDP\u901a\u8baf\uff0c\u5e76\u6ca1\u6709\u63e1\u624b\u8fc7\u7a0b\uff0c\u6bcf\u4e2a\u5ba2\u6237\u7aef\u7aef\u53e3\u548c\u670d\u52a1\u5668\u7aef\u53e3\u4e4b\u95f4\u7684\u8fde\u63a5\u662f\u77ed\u671f\u7684\uff0c \u5e76\u4e0d\u4fdd\u8bc1\u53d1\u9001\u7684\u6570\u636e\u4e00\u5b9a\u88ab\u63a5\u53d7\u5230\uff1b \u4e14\u6bcf\u6b21\u5411\u4e00\u4e2a\u670d\u52a1\u5668\u7aef\u53e3\u53d1\u8d77\u7533\u8bf7\uff0c\u7136\u540e\u4e0b\u4e00\u6b21\u53ef\u4ee5\u5411\u53e6\u5916\u4e00\u4e2a\u670d\u52a1\u5668\u7aef\u53e3\u7533\u8bf7\u63a5\u6536\u6570\u636e\uff1b \u56e0\u6b64\u4e00\u4e2audp\u670d\u52a1\u5668\u7aef\u53e3\u53ef\u4ee5\u4e00\u6bb5\u65f6\u95f4\u5185\u63a5\u53d7\u591a\u4e2a\u5ba2\u6237\u7aef\u53d1\u9001\u7684\u8bf7\u6c42\uff0c \u4e00\u4e2a\u5ba2\u6237\u7aef\u63a5\u53e3\u4e5f\u53ef\u4ee5\u77ed\u65f6\u95f4\u5185\u63a5\u6536\u591a\u4e2a\u670d\u52a1\u7aef\u53d1\u6765\u7684\u6570\u636e\u3002 \u5e94\u7528\u5c42\u534f\u8bae\u5b9a\u4e49:","title":"\u7f51\u7edc\u5e94\u7528\u8fdb\u7a0b\u901a\u4fe1"},{"location":"Network/1_application/#web","text":"http: \u2003web\u7684\u5e94\u7528\u5c42\u534f\u8bae\u662fHTTP(HyperText Transfer Protocol)\u534f\u8bae\uff1b\u5ba2\u6237\u673a\u548c\u670d\u52a1\u5668\u8fd0\u884c\u5728\u4e0d\u540c\u7684\u7aef\u7cfb\u7edf\u4e2d\uff0c\u901a\u8fc7\u4ea4\u6362HTTP\u62a5\u6587\u8fdb\u884c\u4f1a\u8bdd\u3002HTTP\u5b9a\u4e49\u4e86web\u5ba2\u6237\u5411web\u670d\u52a1\u5668\u8bf7\u6c42web\u9875\u9762\u7684\u683c\u5f0f\uff0c\u4ee5\u53caweb\u670d\u52a1\u5668\u5411\u5ba2\u6237\u53d1\u9001web\u9875\u9762\u7684\u65b9\u5f0f\u3002 HTTP\u4f7f\u7528TCP\u4f5c\u4e3a\u4f20\u8f93\u5c42\u534f\u8bae: \u6301\u4e45\u6027\u8fde\u63a5\u548c\u975e\u6301\u4e45\u6027\u8fde\u63a5 \u975e\u6301\u4e45\u6027\u8fde\u63a5: \u6bcf\u4e2a\u4e2aTCP\u8fde\u63a5\u53ea\u5141\u8bb8\u4f20\u8f93\u4e00\u4e2a\u5bf9\u8c61\uff1b \u6301\u4e45\u6027\u8fde\u63a5: \u6bcf\u4e2aTCP\u8fde\u63a5\u5141\u8bb8\u4f20\u8f93\u591a\u4e2a\u5bf9\u8c61\u3002 http\u6d88\u606f\u683c\u5f0f: HTTP\u6709\u4e24\u79cd\u62a5\u6587: \u8bf7\u6c42\u62a5\u6587\u548c\u54cd\u5e94\u62a5\u6587 \u8bf7\u6c42\u62a5\u6587 : \u8bf7\u6c42\u62a5\u6587\u7531ASCII\u6587\u672c\u5199\u6210; Host: xx, \u6307\u660e\u4e86\u5bf9\u8c61\u6240\u5728\u4e3b\u673a\uff0c\u8be5\u9996\u90e8\u884c\u4fe1\u606f\u662fWeb\u4ee3\u7406\u9ad8\u901f\u7f13\u5b58\u6240\u8981\u6c42\u7684; Connection:close, \u544a\u8bc9\u670d\u52a1\u5668\u4e0d\u5e0c\u671b\u4f7f\u7528\u6301\u7eed\u6027\u8fde\u63a5\uff0c\u8981\u6c42\u670d\u52a1\u5668\u5728\u53d1\u9001\u5b8c\u88ab\u8bf7\u6c42\u7684\u5bf9\u8c61\u540e\u5c31\u5173\u95ed\u8fd9\u6761\u8fde\u63a5; keep-alive\uff1a\u8868\u793a\u4f7f\u7528\u6301\u4e45\u6027\u8fde\u63a5 User-agent, \u6307\u660e\u7528\u6237\u4ee3\u7406\uff0c\u5373\u5411\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\u7684\u6d4f\u89c8\u5668\u7c7b\u578b\uff0c \u56e0\u6b64\u670d\u52a1\u5668\u53ef\u4ee5\u6709\u6548\u5730\u4e3a\u4e0d\u540c\u7c7b\u578b\u7684\u7528\u6237\u4ee3\u7406\u5b9e\u9645\u53d1\u9001\u76f8\u540c\u5bf9\u8c61\u7684\u4e0d\u540c\u7248\u672c(\u6bcf\u4e2a\u7248\u672c\u90fd\u7531\u76f8\u540c\u7684URL\u5bfb\u5740); Accept-lanuage, \u7528\u6237\u671f\u671b\u5f97\u5230\u7684\u5bf9\u8c61\u7684\u8bed\u8a00\u7248\u672c\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u670d\u52a1\u5668\u4f1a\u53d1\u9001\u9ed8\u8ba4\u7248\u672c\u3002 \u9996\u90e8\u4e0eEntity Body\u4e2d\u95f4\u901a\u8fc7\u56de\u8f66(cr)\u3001\u6362\u884c(lf)\u6765\u5206\u9694 method get: \u4ece\u670d\u52a1\u5668\u83b7\u53d6\u8d44\u6e90\uff0c\u5982\u9759\u6001\u6587\u672c\u3001\u56fe\u7247\u3001\u89c6\u9891\u7b49\uff0c\u6d4f\u89c8\u5668\u53ef\u4ee5\u5bf9get\u8bf7\u6c42\u7684\u6570\u636e\u8fdb\u884c\u7f13\u5b58\uff1b get\u8bf7\u6c42\u53ef\u4ee5\u5c06\u53c2\u6570(querystring)\u901a\u8fc7URL\u4f20\u9012\uff0c\u4e14\u8bf7\u6c42\u53c2\u6570\u662f\u53ef\u89c1\u7684\uff1b post: \u63d0\u4ea4\u8868\u5355, \u5411\u670d\u52a1\u5668\u4f20\u8f93\u8d44\u6e90\uff0c\u8868\u5355\u6570\u636e\u88ab\u7f16\u7801\u5728\u62a5\u6587\u7684body\u4e2d\uff1b post\u4e00\u4e2a\u8868\u5355\u65f6\uff0curl\u4e5f\u53ef\u4ee5\u5e26\u4e0a\u53c2\u6570\uff0c\u4f46\u9700\u8981\u63d0\u4f9bquerystring post\u8bf7\u6c42\u8fd4\u56de\u7684\u8d44\u6e90\u4e0d\u53ef\u4ee5\u88ab\u7f13\u5b58\uff0cpost\u8bf7\u6c42\u4e5f\u4e0d\u80fd\u4f5c\u4e3a\u4e66\u7b7e\u4fdd\u5b58 \u54cd\u5e94\u62a5\u6587 : \u2003\u72b6\u6001\u884c\u548c\u6bcf\u4e2a\u5934\u90e8\u5b57\u6bb5\u90fd\u5fc5\u987b\u90fd\u5fc5\u987b\u4ee5\u56de\u8f66\u6362\u884c\u7ed3\u675f\uff1b\u5728\u6240\u6709\u5934\u90e8\u5b57\u6bb5\u4e4b\u540e\uff0cHTTP\u5e94\u7b54\u5fc5\u987b\u5305\u542b\u4e00\u4e2a\u7a7a\u884c\uff0c \u8be5\u7a7a\u884c\u53ea\u80fd\u5305\u542b\u4e00\u4e2a\u56de\u8f66\u6362\u884c\uff0c\u4e0d\u80fd\u6709\u5176\u4ed6\u5b57\u7b26\u3002 \u72b6\u6001\u7801 : 200 OK\u662f\u6700\u5e38\u2ec5\u7684\u6210\u529f\u72b6\u6001\u7801\uff0c\u8868\u793a\u2f00\u5207\u6b63\u5e38\u3002\u5982\u679c\u662f\u2faeHEAD\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u8fd4\u56de\u7684\u54cd\u5e94\u5934\u90fd\u4f1a\u6709body\u6570\u636e. 204 No Content\u4e5f\u662f\u5e38\u2ec5\u7684\u6210\u529f\u72b6\u6001\u7801\uff0c\u4e0e 200 OK \u57fa\u672c\u76f8\u540c\uff0c\u4f46\u54cd\u5e94\u5934\u6ca1\u6709 body \u6570\u636e. 206 Partial Content\u662f\u5e94\u2f64\u4e8e HTTP \u5206\u5757\u4e0b\u8f7d\u6216\u65ad\u70b9\u7eed\u4f20\uff0c\u8868\u793a\u54cd\u5e94\u8fd4\u56de\u7684 body \u6570\u636e\u5e76\u4e0d\u662f\u5168\u90e8\u8d44\u6e90\uff0c \u2f7d\u662f\u5176\u4e2d\u7684\u2f00\u90e8\u5206\uff0c\u4e5f\u662f\u670d\u52a1\u5668\u5904\u7406\u6210\u529f\u7684\u72b6\u6001\u3002 301 Moved Permanently,\u6c38\u4e45\u79fb\u52a8\u3002\u8bf7\u6c42\u7684\u8d44\u6e90\u5df2\u88ab\u6c38\u4e45\u7684\u79fb\u52a8\u5230\u65b0URI\uff0c\u8fd4\u56de\u4fe1\u606f\u4f1a\u5305\u62ec\u65b0\u7684URI\uff0c \u6d4f\u89c8\u5668\u4f1a\u81ea\u52a8\u5b9a\u5411\u5230\u65b0URI\u3002\u4eca\u540e\u4efb\u4f55\u65b0\u7684\u8bf7\u6c42\u90fd\u5e94\u4f7f\u7528\u65b0\u7684URI\u4ee3\u66ff. 302 Found,\u4e34\u65f6\u79fb\u52a8\u3002\u4e0e301\u7c7b\u4f3c\u3002\u4f46\u8d44\u6e90\u53ea\u662f\u4e34\u65f6\u88ab\u79fb\u52a8\u3002\u5ba2\u6237\u7aef\u5e94\u7ee7\u7eed\u4f7f\u7528\u539f\u6709URI. 304 Not Modified,\u672a\u4fee\u6539\u3002\u6240\u8bf7\u6c42\u7684\u8d44\u6e90\u672a\u4fee\u6539\uff0c\u670d\u52a1\u5668\u8fd4\u56de\u6b64\u72b6\u6001\u7801\u65f6\uff0c\u4e0d\u4f1a\u8fd4\u56de\u4efb\u4f55\u8d44\u6e90\u3002 \u5ba2\u6237\u7aef\u901a\u5e38\u4f1a\u7f13\u5b58\u8bbf\u95ee\u8fc7\u7684\u8d44\u6e90\uff0c\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e2a\u5934\u4fe1\u606f\u6307\u51fa\u5ba2\u6237\u7aef\u5e0c\u671b\u53ea\u8fd4\u56de\u5728\u6307\u5b9a\u65e5\u671f\u4e4b\u540e\u4fee\u6539\u7684\u8d44\u6e90. 305 Use Proxy,\u4f7f\u7528\u4ee3\u7406\u3002\u6240\u8bf7\u6c42\u7684\u8d44\u6e90\u5fc5\u987b\u901a\u8fc7\u4ee3\u7406\u8bbf\u95ee. 400 Bad Request \u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u8bed\u6cd5\u9519\u8bef\uff0c\u670d\u52a1\u5668\u65e0\u6cd5\u7406\u89e3. 401 Unauthorized,\u8bf7\u6c42\u8981\u6c42\u7528\u6237\u7684\u8eab\u4efd\u8ba4\u8bc1. 403 Forbidden, \u670d\u52a1\u5668\u7406\u89e3\u8bf7\u6c42\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\uff0c\u4f46\u662f\u62d2\u7edd\u6267\u884c\u6b64\u8bf7\u6c42. 404 Not Found, \u8868\u793a\u8bf7\u6c42\u7684\u8d44\u6e90\u5728\u670d\u52a1\u5668\u4e0a\u4e0d\u5b58\u5728\u6216\u672a\u627e\u5230\uff0c\u6240\u4ee5\u2f46\u6cd5\u63d0\u4f9b\u7ed9\u5ba2\u6237\u7aef. 405 Method Not Allowed \u5ba2\u6237\u7aef\u8bf7\u6c42\u4e2d\u7684\u65b9\u6cd5\u88ab\u7981\u6b62. 501 Not Implemented \u670d\u52a1\u5668\u4e0d\u652f\u6301\u8bf7\u6c42\u7684\u529f\u80fd\uff0c\u65e0\u6cd5\u5b8c\u6210\u8bf7\u6c42 502 Bad Gateway \u4f5c\u4e3a\u7f51\u5173\u6216\u8005\u4ee3\u7406\u5de5\u4f5c\u7684\u670d\u52a1\u5668\u5c1d\u8bd5\u6267\u884c\u8bf7\u6c42\u65f6\uff0c\u4ece\u8fdc\u7a0b\u670d\u52a1\u5668\u63a5\u6536\u5230\u4e86\u4e00\u4e2a\u65e0\u6548\u7684\u54cd\u5e94 503 Service Unavailable \u7531\u4e8e\u8d85\u8f7d\u6216\u7cfb\u7edf\u7ef4\u62a4\uff0c\u670d\u52a1\u5668\u6682\u65f6\u7684\u65e0\u6cd5\u5904\u7406\u5ba2\u6237\u7aef\u7684\u8bf7\u6c42\u3002 504 Gateway Time-out\uff0c\u5145\u5f53\u7f51\u5173\u6216\u4ee3\u7406\u7684\u670d\u52a1\u5668\uff0c\u672a\u53ca\u65f6\u4ece\u8fdc\u7aef\u670d\u52a1\u5668\u83b7\u53d6\u8bf7\u6c42 505 HTTP Version not supported \u670d\u52a1\u5668\u4e0d\u652f\u6301\u8bf7\u6c42\u7684HTTP\u534f\u8bae\u7684\u7248\u672c\uff0c\u65e0\u6cd5\u5b8c\u6210\u5904\u7406 entity body\u5305\u542b\u4e86\u6240\u8bf7\u6c42\u5bf9\u8c61\u672c\u8eab; content-type \u6307\u793a\u4e86entity\u4e2d\u5bf9\u8c61\u7684\u7c7b\u578b\u3002 http\u53d1\u5c55 http1.0\u91c7\u7528\u7684\u662f\u975e\u6301\u7eed\u6027\u8fde\u63a5\uff0c\u6bcf\u4e2aTCP\u8fde\u63a5\u53ea\u5141\u8bb8\u4f20\u8f93\u4e00\u4e2a\u5bf9\u8c61\uff1b http1.1\u9ed8\u8ba4\u91c7\u7528\u7684\u662f\u6301\u7eed\u6027\u8fde\u63a5(\u4e5f\u79f0\u957f\u8fde\u63a5\uff0c\u8bf7\u6c42\u62a5\u6587\u4e2d\u7684\u9996\u90e8\u4fe1\u606fconnection\u9ed8\u8ba4\u4e3akeep-alive)\uff0c \u6bcf\u4e2aTCP\u8fde\u63a5\u5141\u8bb8\u4f20\u8f93\u591a\u4e2a\u5bf9\u8c61\uff0c\u540c\u65f6\u4f7f\u7528\u7ba1\u9053\u6280\u672f(\u79f0\u4e3aPipelining\uff0c\u4e5f\u79f0\u4f5c\u6d41\u6c34\u7ebf)\uff0c \u5728\u7b49\u5f85\u4e0a\u4e00\u4e2a\u8bf7\u6c42\u54cd\u5e94\u7684\u540c\u65f6\uff0c\u53d1\u9001\u4e0b\u4e00\u4e2a\u8bf7\u6c42\uff0c\u800c\u5728\u53d1\u9001\u8fc7\u7a0b\u4e2d\u4e0d\u9700\u8981\u7b49\u5f85\u670d\u52a1\u5668\u5bf9\u524d\u4e00\u4e2a\u8bf7\u6c42\u7684\u54cd\u5e94\u3002 http1.1\u7f3a\u70b9: http1.1\u89c4\u5219\u89c4\u5b9a\uff0c\u670d\u52a1\u5668\u7aef\u5728\u54cd\u5e94\u65f6\uff0c\u8981\u4e25\u683c\u6309\u7167\u63a5\u6536\u8bf7\u6c42\u7684\u987a\u5e8f\u53d1\u9001\u54cd\u5e94\uff0c\u5373\u5148\u63a5\u6536\u5230\u7684\u8bf7\u6c42\uff0c \u9700\u8981\u5148\u53d1\u9001\u5176\u54cd\u5e94\uff0c\u5ba2\u6237\u7aef\u4e5f\u662f\u5982\u6b64\uff0c\u63a5\u6536\u54cd\u5e94\u7684\u987a\u5e8f\u8981\u6309\u7167\u81ea\u5df1\u53d1\u9001\u8bf7\u6c42\u7684\u987a\u5e8f\u3002 \u56e0\u6b64 \u5982\u679c\u670d\u52a1\u5668\u6536\u5230\u7684\u7b2c\u4e00\u4e2a\u8bf7\u6c42\uff0c\u9700\u8981\u5f88\u957f\u7684\u5904\u7406\u65f6\u95f4\uff0c\u5219\u5bf9\u4e8e\u540e\u9762\u5df2\u7ecf\u5904\u7406\u5b8c\u54cd\u5e94\u7684\u8bf7\u6c42\u6765\u8bf4\uff0c \u5b83\u4eec\u53ea\u80fd\u963b\u585e\u7b49\u5f85\uff0c\u7b49\u5f85\u524d\u9762\u7684\u54cd\u5e94\u53d1\u9001\u5b8c\u540e\uff0c\u624d\u80fd\u88ab\u53d1\u9001\u51fa\u53bb\uff0c\u9020\u6210\u4e86\u201c\u961f\u9996\u963b\u585e\u201d\u95ee\u9898 \u3002 \u53ef\u89c1\u961f\u9996\u963b\u585e\u53d1\u751f\u5728\u670d\u52a1\u5668\u7aef\u3002\u56e0\u6b64\u5ba2\u6237\u7aef\u5728\u9700\u8981\u53d1\u8d77\u591a\u6b21\u8bf7\u6c42\u65f6\uff0c\u901a\u5e38\u4f1a\u91c7\u7528\u591a\u4e2aTCP\u8fde\u63a5\u6765\u51cf\u5c11\u5ef6\u8fdf\u3002 (\u4e0d\u540c\u6d4f\u89c8\u5668\u5141\u8bb8\u7684\u6700\u5927\u5e76\u53d1\u8fde\u63a5\u6570\u662f\u4e0d\u540c\u7684) \u6b64\u5916\u8fd8\u6709\u53ea\u80fd\u5ba2\u6237\u7aef\u5355\u5411 \u5411\u670d\u52a1\u5668\u53d1\u8d77\u8bf7\u6c42\u83b7\u5f97\u54cd\u5e94\u3001\u8bf7\u6c42\u62a5\u6587\u4e0e\u54cd\u5e94\u62a5\u6587\u9996\u90e8\u4fe1\u606f\u5197\u4f59\u91cf\u5927\uff0c \u5e76\u4e14\u672a\u91c7\u7528\u6570\u636e\u538b\u7f29\uff0c\u5bfc\u81f4\u4f20\u8f93\u91cf\u5927\u3002 http2.0\u6539\u8fdb: \u2003\u4e8c\u8fdb\u5236\u5206\u5e27: \u4e0d\u540c\u4e8ehttp1.x\u4e2d\u901a\u8fc7\u6587\u672c\u7684\u5f62\u5f0f\u4f20\u8f93\u6570\u636e\uff0chttp2.0\u5f15\u5165\u65b0\u7684\u7f16\u7801\u673a\u5236\uff0c \u5c06\u6240\u6709\u4f20\u8f93\u7684\u4fe1\u606f\u5206\u4e3a\u66f4\u5c0f\u7684\u6d88\u606f\u548c\u5e27\uff0c\u91c7\u7528\u4e8c\u8fdb\u5236\u683c\u5f0f\u7f16\u7801\uff0c\u7ec4\u6210\u4e8c\u8fdb\u5236\u5e27\u5c42 \u5176\u4e2dHTTP1.x\u7684\u9996\u90e8\u4fe1\u606f\u4f1a\u88ab\u5c01\u88c5\u5230Headers\u5e27\uff0c\u800cRequest Body\u5219\u5c01\u88c5\u5230Data\u5e27\u3002 \u56e0\u4e3a\u6bcf\u4e2a\u5e27\u90fd\u6709\u7f16\u53f7\uff0c\u4e8c\u8fdb\u5236\u5e27\u6570\u636e\u6d41\u53ef\u4ee5\u5230\u8fbe\u53e6\u4e00\u7aef\u540e\u518d\u6839\u636e\u5e27\u7684\u7f16\u53f7\u8fdb\u884c\u7ec4\u88c5\u3002 \u2003\u591a\u8def\u590d\u7528: \u5141\u8bb8\u540c\u65f6\u901a\u8fc7\u5355\u4e00\u7684TCP\u8fde\u63a5\u53d1\u8d77\u591a\u91cd\u7684\u8bf7\u6c42-\u54cd\u5e94\u6d88\u606f\uff0c \u539f\u56e0:\u4e8c\u8fdb\u5236\u5e27\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u7684TCP\u8fde\u63a5\u4e0a\u662f\u4ee5\u5b57\u8282\u6d41\u7684\u65b9\u5f0f\u53cc\u5411\u4f20\u8f93\u7684\uff0c\u7531\u4e8e\u7f16\u7801\u548c\u5c01\u88c5\u65b9\u5f0f\uff0c\u4e0d\u540c\u7684\u5e27\u4e92\u4e0d\u5e72\u6270\uff0c \u56e0\u6b64\u53ef\u4ee5\u5e76\u884c\u53d1\u9001\u591a\u4e2a\u4ea4\u9519\u8bf7\u6c42\u548c\u54cd\u5e94\uff0c\u5b9e\u73b0\u4e86 \u7ba1\u9053\u591a\u8def\u590d\u7528 \uff1b\u53ea\u8981\u5f53\u524dTCP\u8fde\u63a5\u53ef\u7528\uff0c\u5c31\u53ef\u4ee5\u53d1\u9001\u8bf7\u6c42\u548c\u54cd\u5e94\uff0c \u6d88\u9664\u4e86HTTP/1.1\u4e2d\u8bf7\u6c42\u548c\u54cd\u5e94\u987a\u5e8f\u5bf9\u5e94\u7684\u5173\u7cfb\u3002 \u2003\u5934\u90e8\u538b\u7f29: \u91c7\u7528HPACK\u7b97\u6cd5\u5bf9header\u4fe1\u606f\u8fdb\u884c\u538b\u7f29\u7f16\u7801\uff0c\u63d0\u9ad8\u5e26\u5bbd\u5229\u7528\u7387\u3002 \u5177\u4f53\u4e3a: \u5982\u679c\u540c\u65f6\u53d1\u51fa\u591a\u4e2a\u8bf7\u6c42\uff0c\u5b83\u4eec\u7684\u5934\u662f\u2f00\u6837\u7684\u6216\u662f\u76f8\u4f3c\u7684\uff0c\u90a3\u4e48\u534f\u8bae\u4f1a\u6d88\u9664\u91cd\u590d\u7684\u90e8\u5206\u3002 HPACK\u4f7f\u75282\u4e2a\u7d22\u5f15\u8868(\u9759\u6001\u3001\u52a8\u6001\u7d22\u5f15\u8868)\u6765\u628a\u5934\u90e8(\u5305\u542bheader name\u548cheader value)\u6620\u5c04\u5230\u7d22\u5f15\u503c\uff0c \u5e76\u5bf9\u4e0d\u5b58\u5728\u7684\u5934\u90e8\u4f7f\u7528 huffman \u7f16\u7801\uff0c\u5e76\u52a8\u6001\u7f13\u5b58\u5230\u7d22\u5f15\uff0c\u4ece\u800c\u8fbe\u5230\u538b\u7f29\u5934\u90e8\u7684\u6548\u679c\u3002 \u9759\u6001\u7d22\u5f15\u8868: \u9884\u5148\u5b9a\u4e49\u597d\u7684\u5185\u5bb9\uff0c\u53ea\u6709\u56fa\u5b9a\u7684\u51e0\u5341\u4e2a\u503c\uff0c\u5982\u679c\u8981\u53d1\u9001\u7684\u503c\u7b26\u5408\u9759\u6001\u8868\u65f6\uff0c\u7528\u5bf9\u5e94\u7684 Index \u66ff\u6362\u5373\u53ef. \u52a8\u6001\u7d22\u5f15\u8868:\u662f\u4e00\u4e2a\u7531FIFO\u961f\u5217\u7ef4\u62a4\u7684\u6709\u7a7a\u95f4\u9650\u5236\u7684\u8868\uff0c\u540c\u6837\u7ef4\u62a4\u7684\u662f\u5934\u90e8\u4e0e\u5bf9\u5e94\u7684\u7d22\u5f15\u3002 \u6bcf\u4e2a\u52a8\u6001\u8868\u53ea\u9488\u5bf9\u4e00\u4e2a\u8fde\u63a5\uff0c\u6bcf\u4e2a\u8fde\u63a5\u7684\u538b\u7f29\u89e3\u538b\u7f29\u7684\u4e0a\u4e0b\u6587\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u52a8\u6001\u8868\u3002 \u5f53\u4e00\u4e2a\u5934\u90e8\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u65f6\u5019\uff0c\u4f1a\u628a\u5b83\u63d2\u5165\u52a8\u6001\u8868\u4e2d\uff0c\u4e0b\u6b21\u540c\u540d\u7684\u503c\u5c31\u53ef\u80fd\u4f1a\u5728\u8868\u4e2d\u67e5\u627e\u5230\u7d22\u5f15\u5e76\u66ff\u6362\u6389\u5934\u90e8\u3002 \u2003\u670d\u52a1\u5668\u63a8\u9001: \u4e3a\u4e86\u6539\u5584\u5ef6\u8fdf\uff0cHTTP2.0\u5f15\u5165\u4e86server push\uff0c\u5b83\u5141\u8bb8\u670d\u52a1\u7aef\u4e3b\u52a8\u63a8\u9001\u8d44\u6e90\u7ed9\u6d4f\u89c8\u5668\uff0c \u4f8b\u5982\u5728\u6d4f\u89c8\u5668\u521a\u8bf7\u6c42 HTML \u7684\u65f6\u5019\uff0c\u670d\u52a1\u5668\u5c31\u63d0\u524d\u628a\u53ef\u80fd\u4f1a\u2f64\u5230\u7684 JS\u3001CSS \u2f42\u4ef6\u7b49\u9759\u6001\u8d44\u6e90\u4e3b\u52a8\u53d1\u7ed9 \u5ba2\u6237\u7aef\uff0c\u51cf\u5c11\u7b49\u5f85\u65f6\u95f4\u3002 http2.0\u7f3a\u70b9: \u591a\u4e2aHTTP\u8bf7\u6c42\u5728\u590d\u2f64\u2f00\u4e2aTCP\u8fde\u63a5\uff0c\u4e0b\u5c42\u7684TCP\u534f\u8bae\u662f\u4e0d\u77e5\u9053\u6709\u591a\u5c11\u4e2aHTTP\u8bf7\u6c42\u7684\u3002 \u6240\u4ee5\u2f00\u65e6\u53d1\u2f63\u4e86\u4e22\u5305\u73b0\u8c61\uff0c\u5c31\u4f1a\u89e6\u53d1TCP\u7684\u91cd\u4f20\u673a\u5236\uff0c\u8fd9\u6837\u5728\u2f00\u4e2aTCP\u8fde\u63a5\u4e2d\u7684\u6240\u6709\u7684HTTP\u8bf7\u6c42 \u90fd\u5fc5\u987b\u7b49\u5f85\u8fd9\u4e2a\u4e22\u4e86\u7684\u5305\u88ab\u91cd\u4f20\u56de\u6765\u3002 http3.0: \u53c8\u79f0\u4e3aHTTP Over QUIC\uff0c\u5176\u5f03\u7528TCP\u534f\u8bae\uff0c\u6539\u4e3a\u4f7f\u7528\u57fa\u4e8eUDP\u534f\u8bae\u7684 QUIC(Quick UDP Internet Protocol)\u534f\u8bae\u6765\u5b9e\u73b0. \u5982\u4f55\u5904\u7406\u4e22\u5305: \u2003\u524d\u5411\u7ea0\u9519: QUIC\u534f\u8bae\u7684\u6bcf\u4e2a\u6570\u636e\u5305\u9664\u4e86\u672c\u8eab\u7684\u6570\u636e\u4ee5\u5916\uff0c\u4f1a\u5e26\u6709\u5176\u4ed6\u6570\u636e\u5305\u7684\u90e8\u5206\u6570\u636e\uff0c\u5728\u5c11\u91cf\u4e22\u5305\u7684\u60c5\u51b5\u4e0b\uff0c \u53ef\u4ee5\u4f7f\u7528\u5176\u4ed6\u6570\u636e\u5305\u7684\u5197\u4f59\u6570\u636e\u5b8c\u6210\u6570\u636e\u7ec4\u88c5\u800c\u65e0\u9700\u91cd\u4f20\uff0c\u4ece\u800c\u63d0\u9ad8\u6570\u636e\u7684\u4f20\u8f93\u901f\u5ea6\u3002 \u2003\u5feb\u901f\u91cd\u542f\u4f1a\u8bdd: \u666e\u901a\u57fa\u4e8etcp\u7684\u8fde\u63a5\uff0c\u662f\u57fa\u4e8e\u4e24\u7aef\u7684ip\u548c\u7aef\u53e3\u548c\u534f\u8bae\u6765\u5efa\u7acb\u7684\u3002\u5728\u7f51\u7edc\u5207\u6362\u573a\u666f\uff0c\u4f8b\u5982\u624b\u673a\u7aef\u5207\u6362\u4e86\u65e0\u7ebf\u7f51\uff0c \u4f7f\u75284G\u7f51\u7edc\uff0c\u4f1a\u6539\u53d8\u672c\u8eab\u7684ip\uff0c\u8fd9\u5c31\u5bfc\u81f4tcp\u8fde\u63a5\u5fc5\u987b\u91cd\u65b0\u521b\u5efa\u3002\u800cQUIC\u534f\u8bae\u4f7f\u7528\u7279\u6709\u7684UUID\u6765\u6807\u8bb0\u6bcf\u4e00\u6b21\u8fde\u63a5\uff0c \u5728\u7f51\u7edc\u73af\u5883\u53d1\u751f\u53d8\u5316\u7684\u65f6\u5019\uff0c\u53ea\u8981UUID\u4e0d\u53d8\uff0c\u5c31\u80fd\u4e0d\u9700\u8981\u63e1\u624b\uff0c\u7ee7\u7eed\u4f20\u8f93\u6570\u636e\u3002 cookie \u2003cookie\u53ef\u4ee5\u7528\u4e8e\u6807\u8bb0\u4e00\u4e2a\u7528\u6237\uff0c\u7528\u6237\u9996\u6b21\u8bbf\u95ee\u4e00\u4e2a\u7ad9\u70b9\u65f6\uff0c\u53ef\u80fd\u9700\u8981\u63d0\u4f9b\u4e00\u4e2a\u7528\u6237\u6807\u8bc6\uff0c\u5728\u540e\u7ee7\u4f1a\u8bdd\u4e2d\uff0c \u6d4f\u89c8\u5668\u5411\u670d\u52a1\u5668\u4f20\u9012\u4e00\u4e2acookie\u9996\u90e8\uff0c\u4ece\u800c\u5411\u8be5\u670d\u52a1\u5668\u6807\u8bc6\u4e86\u7528\u6237\u3002\u56e0\u6b64cookie\u53ef\u4ee5\u5728\u65e0\u72b6\u6001\u7684http\u4e4b\u4e0a\u5efa\u7acb\u4e00\u4e2a\u7528\u6237\u4f1a\u8bdd\u5c42 \u3002 Web\u7f13\u5b58/\u4ee3\u7406\u670d\u52a1\u5668\u6280\u672f \u2003\u5728\u4e0d\u8bbf\u95ee\u670d\u52a1\u5668\u7684\u524d\u63d0\u4e0b\u6ee1\u8db3\u5ba2\u6237\u7aef\u7684HTTP\u8bf7\u6c42\uff0cweb\u7f13\u5b58\u5668\u6709\u81ea\u5df1\u7684\u78c1\u76d8\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u5728\u5b58\u50a8\u7a7a\u95f4\u4e2d\u4fdd\u5b58\u6700\u8fd1\u8bf7\u6c42\u8fc7\u7684\u5bf9\u8c61\u7684\u526f\u672c\u3002 \u2003\u4e3a\u4e86\u786e\u4fdd\u7f13\u5b58\u670d\u52a1\u5668\u4e2d\u7684\u5bf9\u8c61\u662f\u6700\u65b0\u7684\uff0cHTTP\u63d0\u4f9b\u4e86\u6761\u4ef6GET\u65b9\u6cd5\u3002 \u7f13\u5b58\u670d\u52a1\u5668\u5728\u5c06\u5bf9\u8c61\u8f6c\u53d1\u5230\u8bf7\u6c42\u7684\u6d4f\u89c8\u5668\u7684\u540c\u65f6\uff0c\u4e5f\u5728\u672c\u5730\u7f13\u5b58\u4e86\u5bf9\u8c61\uff0c\u5e76\u4e14\u5b58\u50a8\u4e86\u8be5\u5bf9\u8c61\u7684\u6700\u540e\u4fee\u6539\u65f6\u671f\u3002","title":"WEB\u5e94\u7528"},{"location":"Network/1_application/#ftp","text":"\u8fde\u63a5\u8fc7\u7a0b \u4e0eHTTP\u533a\u522b","title":"\u6587\u4ef6\u4f20\u8f93\u534f\u8bae(FTP)"},{"location":"Network/1_application/#email","text":"Email\u5e94\u7528\u7ec4\u6210\u4e0eSMTP \u2003 SMTP: Simple Mail Transport Protocol(\u7b80\u5355\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae) SMTP\u4e0eHTTP\u4e0d\u540c \u2003HTTP is a pull protocol, \u5373\u7528\u6237\u4f7f\u7528HTTP\u4ece\u670d\u52a1\u5668\u4e0a\u62c9\u53d6\u4fe1\u606f\uff0cTCP\u8fde\u63a5\u662f\u7531\u63a5\u6536\u65b9\u53d1\u8d77\u7684\uff1b SMTP is a push protocol, \u5373\u53d1\u9001\u90ae\u4ef6\u670d\u52a1\u5668\u628a\u6587\u4ef6\u63a8\u5411\u63a5\u6536\u90ae\u4ef6\u670d\u52a1\u5668\uff0c TCP\u8fde\u63a5\u662f\u7531\u53d1\u9001\u65b9\u53d1\u8d77\u7684\u3002 \u2003SMTP\u62a5\u6587\u4f7f\u75287bit ASCII\u683c\u5f0f\uff0cHTTP\u4e0d\u53d7\u6b64\u9650\u5236\u3002 \u2003 \u5728\u5904\u7406\u5305\u542b\u591a\u4e2a\u5bf9\u8c61\u65f6(\u5982\u5305\u542b\u6587\u672c\u548c\u56fe\u7247\u7684\u6587\u6863)\uff0cHTTP\u4f1a\u628a\u6bcf\u4e2a\u5bf9\u8c61\u5c01\u88c5\u5230\u5404\u81ea\u7684HTTP\u54cd\u5e94\u62a5\u6587\u4e2d\uff0c\u800cSMTP\u5219\u628a\u6240\u6709\u62a5\u6587\u5bf9\u8c61\u653e\u5728\u4e00\u4e2a\u62a5\u6587\u4e2d \u3002 \u90ae\u4ef6\u8bbf\u95ee\u534f\u8bae \u2003\u90ae\u4ef6\u4f20\u8f93\u8fc7\u7a0b: \u53d1\u9001\u65b9\u7528\u6237\u4ee3\u7406->\u53d1\u9001\u65b9\u90ae\u4ef6\u670d\u52a1\u5668->\u63a5\u6536\u65b9\u90ae\u4ef6\u670d\u52a1\u5668->\u63a5\u6536\u65b9\u7528\u6237\u4ee3\u7406 \u2003\u91c7\u7528\u53d1\u9001\u65b9\u90ae\u4ef6\u670d\u52a1\u5668\u4f5c\u4e3a\u4e2d\u7ee7\uff0c\u901a\u8fc7\u6d88\u606f\u961f\u5217\uff0c\u5b58\u50a8\u53d1\u9001\u65b9\u53d1\u51fa\u7684\u90ae\u4ef6\uff0c\u53ef\u4ee5\u907f\u514d\u63a5\u6536\u65b9\u90ae\u4ef6\u670d\u52a1\u5668\u4e0d\u5728\u7ebf\u65f6\uff0c\u76f4\u63a5\u901a\u8fc7\u7528\u6237\u4ee3\u7406\uff0c\u65e0\u6cd5\u5230\u8fbe\u63a5\u6536\u65b9\uff1b\u53d1\u9001\u65b9\u90ae\u4ef6\u670d\u52a1\u5668\u4f1a\u5b9a\u65f6\u67e5\u8be2\u8fde\u63a5\uff0c\u4e00\u65e6\u8fde\u63a5\uff0c\u5c31\u5c06\u90ae\u4ef6\u4f20\u8f93\u5230\u63a5\u6536\u65b9\u670d\u52a1\u5668\u3002 \u2003\u4f20\u8f93\u8fc7\u7a0b\u7684\u524d\u4e24\u90e8\u5206\u91c7\u7528SMTP\u534f\u8bae\uff0c\u800c\u6700\u540e\u4e00\u90e8\u5206\u4e0d\u80fd\u91c7\u7528SMTP\u534f\u8bae\uff0c\u56e0\u4e3a\u53ea\u80fd\u7531\u7528\u6237\u4ee3\u7406\u4e3b\u52a8\u63a5\u6536\u90ae\u4ef6\uff0c\u800c\u8fd9\u662f\u4e00\u4e2apull\u52a8\u4f5c\uff0c\u9700\u8981\u901a\u8fc7\u90ae\u4ef6\u8bbf\u95ee\u534f\u8bae\u6765\u4ece\u63a5\u6536\u65b9\u670d\u52a1\u5668\u63a5\u6536\u90ae\u4ef6\u3002 \u2003POP3(Post Office Protocol v3)\u534f\u8bae: authorization(\u9a8c\u8bc1\u7528\u6237\u540d\u548c\u53e3\u4ee4)\u3001\u4e8b\u7269\u5904\u7406(\u53d6\u56de\u62a5\u6587\u5373\u90ae\u4ef6\uff0c\u5bf9\u62a5\u6587\u6dfb\u52a0\u5220\u9664\u6807\u8bb0)\u3001\u66f4\u65b0(\u4f1a\u8bdd\u7ed3\u675f\uff0c\u90ae\u4ef6\u670d\u52a1\u5668\u5220\u9664\u88ab\u6807\u8bb0\u4e3a\u5220\u9664\u7684\u62a5\u6587)\u3002 \u2003IMAP(Internet Mail Access Protocol)\u534f\u8bae \u4ee5\u53ca HTTP\u534f\u8bae(\u5982web mail, \u6d4f\u89c8\u5668\u5145\u5f53\u7528\u6237\u4ee3\u7406\uff0c\u901a\u8fc7HTTP\u4e0e\u670d\u52a1\u5668\u901a\u4fe1\uff0c\u4e0d\u8fc7\u90ae\u4ef6\u670d\u52a1\u4e4b\u95f4\u4ecd\u662f\u901a\u8fc7SMTP\u534f\u8bae)\u3002 MMIE","title":"Email\u5e94\u7528"},{"location":"Network/1_application/#dnsdomain-name-system","text":"\u6307\u4e00\u4e2a\u7531\u591a\u5c42\u57df\u540d\u670d\u52a1\u5668\u6784\u6210\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u91c7\u7528\u96c6\u4e2d\u5f0fDNS\u7f3a\u70b9: \u5355\u70b9\u5931\u8d25(\u5373\u82e5\u552f\u4e00\u7684DNS\u670d\u52a1\u5668\u6545\u969c\uff0c\u5219\u6574\u4e2aINTERNET\u5c06\u5d29\u6e83)\u3001\u6d41\u91cf\u95ee\u9898(\u9ad8\u5e76\u53d1\u67e5\u8be2)\u3001\u8ddd\u79bb\u95ee\u9898(\u5355\u4e2aDNS server\u4e0d\u53ef\u80fd\u90bb\u8fd1\u6240\u6709\u67e5\u8be2\u5ba2\u6237)\u3001\u7ef4\u62a4\u6027\u95ee\u9898(\u5355\u4e00\u6570\u636e\u5e93\u7ef4\u62a4\u548c\u66f4\u65b0\u5de8\u5927\u7684\u67e5\u8be2\u8bb0\u5f55)\u3002 \u2003\u4e5f\u6307\u4e00\u4e2a\u4f7f\u5f97\u4e3b\u673a\u80fd\u591f\u67e5\u8be2\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u7684\u5e94\u7528\u5c42\u534f\u8bae(DNS\u534f\u8bae)\u3002 \u2003DNS\u534f\u8bae\u5b8c\u6210Internet\u6838\u5fc3\u4efb\u52a1\uff0c\u5c06\u57df\u540d\u6620\u5c04\u4e3aIP\u5730\u5740\u3002 \u8fd0\u884c\u5728UDP\u4e0a\uff0c\u4f7f\u752853\u53f7\u7aef\u53e3 \u3002 DNS\u670d\u52a1 \u57df\u540d\u89e3\u6790\u3001\u4e3b\u673a\u522b\u540d\u3001\u90ae\u4ef6\u670d\u52a1\u5668\u522b\u540d\u3001\u8d1f\u8f7d\u5747\u8861\u3002 \u67e5\u8be2 \u8fed\u4ee3\u67e5\u8be2\u548c\u9012\u5f52\u67e5\u8be2 DNS\u7f13\u5b58 \u2003\u53ea\u8981DNS\u670d\u52a1\u5668\u63a5\u6536\u4e00\u4e2aDNS\u56de\u7b54(\u57df\u540d-IP\u7684\u6620\u5c04)\uff0c\u5373\u7f13\u5b58\u8be5\u56de\u7b54\uff1b\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u7f13\u5b58\u6761\u76ee\u4f1a\u5931\u6548(\u88ab\u5220\u9664)\uff1b\u672c\u5730DNS\u670d\u52a1\u5668\u4e00\u822c\u4f1a\u7f13\u5b58\u9876\u7ea7\u57df\u540d\u670d\u52a1\u5668\u7684\u6620\u5c04\uff0c\u56e0\u6b64DNS \u6839\u670d\u52a1\u5668\u5f88\u5c11\u88ab\u8bbf\u95ee\u3002 DNS\u8bb0\u5f55\u548c\u62a5\u6587 \u2003TTL\u4ee3\u8868\u8be5\u8bb0\u5f55\u7684\u751f\u5b58\u65f6\u95f4\uff0c\u5b83\u51b3\u5b9a\u4e86\u8d44\u6e90\u8bb0\u5f55(Resource Record)\u5e94\u5f53\u88ab\u5220\u9664\u7684\u65f6\u95f4","title":"DNS(Domain Name System)"},{"location":"Network/1_application/#p2p","text":"\u7ed3\u6784\u7279\u70b9 P2P\u7d22\u5f15 \u7d22\u5f15\u7ed3\u6784","title":"P2P\u5e94\u7528"},{"location":"Network/1_application/#socket","text":"socket socket API\u51fd\u6570 \u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u7aef","title":"socket\u7f16\u7a0b\u57fa\u7840"},{"location":"Network/2_transport/","text":"\u4f20\u8f93\u5c42 \u4f20\u8f93\u5c42 v.s \u5e94\u7528\u5c42 \u2003 \u4f20\u8f93\u5c42\u534f\u8bae\u53ea\u5de5\u4f5c\u5728\u7aef\u7cfb\u7edf\uff0c\u5728\u7aef\u7cfb\u7edf\u4e2d\uff0c\u4f20\u8f93\u5c42\u534f\u8bae\u5c06\u6765\u81ea\u5e94\u7528\u8fdb\u7a0b\u7684\u62a5\u6587\u79fb\u52a8\u5230\u7f51\u7edc\u8fb9\u7f18(\u7f51\u7edc\u5c42)\uff1b\u7f51\u7edc\u8def\u7531\u5668\u4ec5\u4f5c\u7528\u5230\u6570\u636e\u6bb5\u7684\u7f51\u7edc\u5c42\u5b57\u6bb5\uff0c\u4e0d\u4f1a\u68c0\u67e5\u5c01\u88c5\u5728\u6570\u636e\u6bb5\u4e2d\u7684\u4f20\u8f93\u5c42\u5b57\u6bb5\u3002 \u591a\u8def\u590d\u7528/\u5206\u7528 \u2003 \u5c06\u4e3b\u673a\u95f4\u4ea4\u4ed8\u6269\u5c55\u5230\u8fdb\u7a0b\u95f4\u4ea4\u4ed8\u3002 \u5c06\u4f20\u8f93\u5c42\u62a5\u6587\u6bb5\u4e2d\u7684\u6570\u636e\u4ea4\u4ed8\u5230\u6b63\u786e\u7684socket\u7684\u5de5\u4f5c\u79f0\u4e3a\u591a\u8def\u5206\u7528 \uff1b \u5728\u6e90\u4e3b\u673a\u4e2d \u4ece\u4e0d\u540csocket\u6536\u96c6\u6570\u636e\u5757\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u6570\u636e\u5757\u5c01\u88c5\u9996\u90e8\u4fe1\u606f\u4ece\u800c\u751f\u6210\u62a5\u6587\u6bb5\uff0c\u7136\u540e\u4f20\u9012\u5230\u7f51\u7edc\u5c42 \u3002 \u5206\u7528 \u65e0\u8fde\u63a5\u5206\u7528 \u9762\u5411\u8fde\u63a5\u7684\u5206\u7528 UDP UDP\u534f\u8bae UDP\u62a5\u6587\u683c\u5f0f \u53ef\u9760\u6570\u636e\u4f20\u8f93(RDT) TCP MSS(Maximum Segment Size): TCP\u53ef\u4ece\u53d1\u9001\u7f13\u5b58\u4e2d\u53d6\u51fa\u5e76\u653e\u5165\u62a5\u6587\u6bb5\u4e2d\u7684\u6700\u5927\u6570\u636e\u91cf; MTU(Maximum Transmission Unit): \u6700\u5927\u94fe\u8def\u5e27\u957f\u5ea6 \u8003\u8651\u5230\u4ee5\u592a\u7f51\u548cPPP\u94fe\u8def\u5c42\u534f\u8bae\u90fd\u5177\u67091500\u5b57\u8282\u7684MTU\uff0c\u800cTCP\u6570\u636e\u6bb5header\u4e00\u822c\u4e3a20\u5b57\u8282\uff0c\u518d\u6709IP\u6570\u636e\u62a5\u7684header\u4e5f\u4e3a20\u5b57\u8282\uff0c \u56e0\u6b64MSS\u7684\u5178\u578b\u503c\u4e3a1460\u5b57\u8282\u3002 TCP\u6570\u636e\u6bb5 \u2003\u5e8f\u5217\u53f7\u548c\u786e\u8ba4\u53f7\u7528\u6765\u5b9e\u73b0\u53ef\u9760\u6570\u636e\u4f20\u8f93\u670d\u52a1\uff1b\u5176\u4e2d\u5e8f\u5217\u53f7\u662f\u62a5\u6587\u6bb5\u9996\u5b57\u8282\u7684\u5b57\u8282\u6d41\u7f16\u53f7\uff0c \u63a5\u6536\u65b9\u6839\u636e\u5e8f\u5217\u53f7\u53ef\u4ee5\u53bb\u9664\u91cd\u590d\u6570\u636e\uff0c\u4fdd\u8bc1\u6309\u5e8f\u63a5\u6536\u6570\u636e\u5305\uff1b\u53d1\u9001\u65b9\u5219\u53ef\u4ee5\u7528\u6765\u6807\u8bc6\u53d1\u9001\u51fa\u53bb\u7684\u6570\u636e\u5305\u54ea\u4e9b\u662f\u88ab\u6b63\u786e\u63a5\u6536\u4e86 \uff1b\u786e\u8ba4\u53f7\u662f\u63a5\u6536\u65b9\u671f\u671b\u63a5\u6536\u7684\u4e0b\u4e00\u5b57\u8282\u7684\u5e8f\u53f7\uff0c \u7528\u6765\u89e3\u51b3\u4e22\u5305\u7684\u95ee\u9898 \u3002 \u20036 bit\u7684\u6807\u5fd7\u4f4d: ACK\u4f4d\u7528\u6765\u6307\u793a\u786e\u8ba4\u53f7\u662f\u6709\u6548\u7684\uff0c\u5373\u5bf9\u4e00\u4e2a\u5df2\u88ab\u6210\u529f\u63a5\u6536\u62a5\u6587\u6bb5\u7684\u786e\u8ba4( TCP\u89c4\u5b9a\u9664\u4e86\u6700\u521d\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5\u65f6\u7684SYN\u62a5\u6587\u6bb5\u4e4b\u5916\u8be5\u4f4d\u5fc5\u987b\u8bbe\u7f6e\u4e3a1 )\uff1bRST( \u8868\u793aTCP\u8fde\u63a5\u4e2d\u51fa\u73b0\u5f02\u5e38\u5fc5\u987b\u5f3a\u5236\u65ad\u5f00\u8fde\u63a5 )\u3001FIN( \u8868\u793a\u4e0d\u4f1a\u518d\u6709\u6570\u636e\u53d1\u9001\uff0c\u5e0c\u671b\u65ad\u5f00\u8fde\u63a5 )\u3001SYN( \u5e0c\u671b\u5efa\u7acb\u8fde\u63a5 )\u7528\u4e8e\u8fde\u63a5\u5efa\u7acb\u548c\u5220\u9664\uff1b PSH\u6307\u793a\u63a5\u6536\u65b9\u5e94\u7acb\u523b\u5c06\u6570\u636e\u4ea4\u7ed9\u4e0a\u5c42\uff1bURG\u6307\u793a\u62a5\u6587\u6bb5\u5b58\u5728\u88ab\u53d1\u9001\u7aef\u4e0a\u5c42\u5e94\u7528\u6807\u8bb0\u4e3a\u7d27\u6025\u7684\u6570\u636e\u3002(\u5b9e\u8df5\u4e2d\uff0cPSH\u3001URG\u4ee5\u53ca\u7d27\u6025\u6570\u636e\u6307\u9488\u5e76\u6ca1\u6709\u4f7f\u7528) \u4ea7\u751fRST\u62a5\u6587\u7684\u4e09\u79cd\u60c5\u51b5: 1\u3001\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u7aef\u53e3\uff0cclient\u8bbf\u95ee\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u7aef\u53e3\u65f6\uff0c\u76ee\u6807\u4e3b\u673a\u4f1a\u8fd4\u56de\u4e00\u4e2aRST\u62a5\u6587\uff0c \u6536\u5230RST\u62a5\u6587\u7684client\u5e94\u8be5\u5173\u95ed\u8fde\u63a5\u6216\u8005\u91cd\u65b0\u8fde\u63a5\u3002 2\u3001\u5f02\u5e38\u7ec8\u6b62\u8fde\u63a5\uff0c\u6570\u636e\u4ea4\u6362\u5b8c\u6210\u4e4b\u540e\uff0cTCP\u63d0\u4f9b\u4e86\u5f02\u5e38\u7ec8\u6b62\u4e00\u4e2a\u8fde\u63a5\uff0c\u5373\u7ed9\u5bf9\u65b9\u53d1\u9001\u4e00\u4e2aRST\u62a5\u6587\uff0c \u4e00\u65e6\u53d1\u9001\u4e86RST\u62a5\u6587\uff0c\u53d1\u9001\u7aef\u6240\u6709\u6392\u961f\u7b49\u5f85\u53d1\u9001\u7684\u6570\u636e\u90fd\u5c06\u88ab\u4e22\u5f03\u3002 3\u3001\u5904\u7406\u534a\u6253\u5f00\u8fde\u63a5\uff0c\u4ee5\u63a5\u6536\u65b9\u5173\u95ed\u6216\u8005\u5f02\u5e38\u7ec8\u6b62\u8fde\u63a5\u4e3a\u4f8b\uff0c\u4f46\u53d1\u9001\u65b9\u6ca1\u6709\u63a5\u6536\u5230\u7ed3\u675f\u62a5\u6587\u6bb5\uff0c \u6b64\u65f6\u53d1\u9001\u65b9\u8fd8\u7ef4\u6301\u539f\u6765\u7684\u8fde\u63a5\uff0c\u800c\u63a5\u6536\u65b9\u5373\u4f7f\u91cd\u542f\u3002\u4e5f\u6ca1\u6709\u8be5\u8fde\u63a5\u7684\u4efb\u4f55\u4fe1\u606f\u3002\u8fd9\u79cd\u72b6\u6001\u79f0\u4e3a\u534a\u6253\u5f00\u72b6\u6001\uff0c \u5904\u4e8e\u8fd9\u79cd\u72b6\u6001\u7684\u8fde\u63a5\u79f0\u4e3a\u534a\u6253\u5f00\u8fde\u63a5\u3002\u5982\u679c\u53d1\u9001\u65b9\u5f80\u5904\u4e8e\u534a\u6253\u5f00\u72b6\u6001\u7684\u8fde\u63a5\u5199\u5165\u6570\u636e\uff0c\u5219 \u5bf9\u65b9\u5c06\u56de\u5e94\u4e00\u4e2aRST\u62a5\u6587\u3002 TCP\u53ef\u9760\u6570\u636e\u4f20\u8f93 \u2003 \u6d41\u6c34\u7ebf\u673a\u5236 : \u51c6\u786e\u6765\u8bf4\u662f\u6ed1\u52a8\u7a97\u53e3\u673a\u5236\uff0c\u53d1\u9001\u65b9\u5728\u53d1\u9001\u4e00\u4e2a\u7f51\u7edc\u5305\u540e\uff0c\u4e0d\u7b49\u5f85ACK\u53f7\u8fd4\u56de\uff0c\u800c\u662f\u76f4\u63a5\u53d1\u9001\u540e\u7eed\u4e00\u7cfb\u5217\u7684\u5305\uff1b\u5f53\u63a5\u6536\u65b9\u6536\u5230\u7f51\u7edc\u5305\u540e\uff0c\u4f1a\u5148\u5c06\u6570\u636e\u5b58\u653e\u5230\u63a5\u6536\u7f13\u51b2\u533a\u4e2d\u3002\u7136\u540e\uff0c\u63a5\u6536\u65b9\u8ba1\u7b97ACK\u53f7\u548c\u5269\u4f59\u63a5\u6536\u7f13\u5b58\u533a\u5927\u5c0fRecvWindow\uff0c\u8fd4\u56de\u7ed9\u53d1\u9001\u65b9\uff0c\u53d1\u9001\u65b9\u6839\u636eRecvWindow\u5927\u5c0f\u5bf9\u6570\u636e\u53d1\u9001\u64cd\u4f5c\u8fdb\u884c\u63a7\u5236\uff0c\u8fd9\u5c31\u662f\u6ed1\u52a8\u7a97\u53e3\u65b9\u5f0f\u7684\u57fa\u672c\u601d\u8def\u3002 \u2003RecvWindow\u66f4\u65b0\u65f6\u673a\u53d1\u751f\u5728\u63a5\u6536\u65b9\u4e0a\u5c42\u5e94\u7528\u5c42\u4ece\u63a5\u6536\u7f13\u5b58\u533a\u4e2d\u53d6\u51fa\u6570\u636e\u540e\uff0c\u5bfc\u81f4\u7f13\u5b58\u533a\u5269\u4f59\u5bb9\u91cf\u589e\u52a0\u65f6\uff0c\u63a5\u6536\u65b9\u4f1a\u66f4\u65b0\u7a97\u53e3\u5927\u5c0f\u3002 \u2003\u63a5\u6536\u65b9\u5728\u53d1\u9001ACK\u53f7\u548c\u7a97\u53e3\u66f4\u65b0\u65f6\uff0c\u5e76\u4e0d\u4f1a\u9a6c\u4e0a\u628a\u5305\u53d1\u9001\u51fa\u53bb\uff0c\u800c\u662f\u4f1a\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5f88\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u5176\u4ed6\u7684\u901a\u77e5\u64cd\u4f5c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u4e24\u79cd\u901a\u77e5\u5408\u5e76\u5728\u4e00\u4e2a\u5305\u91cc\u9762\u53d1\u9001\u4e86\u3002\u4f8b\u5982\uff0c\u5728\u7b49\u5f85\u53d1\u9001ACK\u53f7\u7684\u65f6\u5019\u6b63\u597d\u9700\u8981\u66f4\u65b0\u7a97\u53e3\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u628aACK\u53f7\u548c\u7a97\u53e3\u66f4\u65b0\u653e\u5728\u4e00\u4e2a\u5305\u91cc\u53d1\u9001\uff0c\u4ece\u800c\u51cf\u5c11\u5305\u7684\u6570\u91cf\u3002\u5f53\u9700\u8981\u8fde\u7eed\u53d1\u9001\u591a\u4e2aACK\u53f7\u65f6\uff0c\u4e5f\u53ef\u4ee5\u51cf\u5c11\u5305\u7684\u6570\u91cf\uff0c\u8fd9\u662f\u56e0\u4e3aACK\u53f7\u8868\u793a\u7684\u662f\u5df2\u6536\u5230\u7684\u6570\u636e\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u662f\u544a\u8bc9\u53d1\u9001\u65b9\u76ee\u524d\u5df2\u63a5\u6536\u7684\u6570\u636e\u7684\u6700\u540e\u4f4d\u7f6e\u5728\u54ea\u91cc\uff0c\u56e0\u6b64 \u5f53\u9700\u8981\u8fde\u7eed\u53d1\u9001ACK\u53f7\u65f6\uff0c\u53ea\u8981\u53d1\u9001\u6700\u540e\u4e00\u4e2aACK\u53f7\u5c31\u53ef\u4ee5\u4e86 \uff0c\u4e2d\u95f4\u7684\u53ef\u4ee5\u5168\u90e8\u7701\u7565\u3002\u5f53\u9700\u8981\u8fde\u7eed\u53d1\u9001\u591a\u4e2a\u7a97\u53e3\u66f4\u65b0\u65f6\u4e5f\u53ef\u4ee5\u51cf\u5c11\u5305\u7684\u6570\u91cf\uff0c\u56e0\u4e3a\u8fde\u7eed\u53d1\u751f\u7a97\u53e3\u66f4\u65b0\u8bf4\u660e\u5e94\u7528\u7a0b\u5e8f\u8fde\u7eed\u8bf7\u6c42\u4e86\u6570\u636e\uff0c\u63a5\u6536\u7f13\u51b2\u533a\u7684\u5269\u4f59\u7a7a\u95f4\u8fde\u7eed\u589e\u52a0\u3002\u8fd9\u79cd\u60c5\u51b5\u548cACK\u53f7\u4e00\u6837\uff0c\u53ef\u4ee5\u7701\u7565\u4e2d\u95f4\u8fc7\u7a0b\uff0c\u53ea\u8981\u53d1\u9001\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u53ef\u4ee5\u4e86\u3002 \u2003 \u8d85\u65f6\u91cd\u4f20 : TCP\u534f\u8bae\u8981\u6c42\u5728\u53d1\u9001\u7aef\u6bcf\u53d1\u9001\u4e00\u4e2a\u62a5\u6587\u6bb5\uff0c\u5c31\u542f\u52a8\u4e00\u4e2a\u5b9a\u65f6\u5668\u5e76\u7b49\u5f85\u786e\u8ba4\u4fe1\u606f\uff1b\u63a5\u6536\u7aef\u6210\u529f\u63a5\u6536\u65b0\u6570\u636e\u540e\u8fd4\u56de\u786e\u8ba4\u4fe1\u606f\u3002\u82e5\u5728\u5b9a\u65f6\u5668\u8d85\u65f6\u524d\u6570\u636e\u672a\u80fd\u88ab\u786e\u8ba4\uff0cTCP\u5c31\u8ba4\u4e3a\u62a5\u6587\u6bb5\u4e2d\u7684\u6570\u636e\u5df2\u4e22\u5931\u6216\u635f\u574f\uff0c\u9700\u8981\u5bf9\u62a5\u6587\u6bb5\u4e2d\u7684\u6570\u636e\u91cd\u65b0\u7ec4\u7ec7\u548c\u91cd\u4f20\u3002 \u2003TCP\u91c7\u7528\u7684\u662f\u7d2f\u8ba1\u786e\u8ba4\u673a\u5236\uff0c\u5f53\u53d1\u9001\u65b9\u63a5\u6536\u52303\u4e2a\u5197\u4f59ACK(\u5047\u8bbeACK\u53f7\u4e3aK)\u65f6\uff0c\u610f\u5473\u7740\u5e8f\u5217\u53f7\u4e3aK\u7684\u6570\u636e\u5305\u53ef\u80fd\u5df2\u7ecf\u4e22\u5931\uff0cTCP\u5c31\u4f1a\u6267\u884c\u5feb\u901f\u91cd\u4f20\u4ece\u5e8f\u5217\u53f7K\u5f00\u59cb\u7684\u6570\u636e\u5305\u3002 TCP\u6d41\u91cf\u63a7\u5236 1.1 \u4ec0\u4e48\u662f\u6d41\u91cf\u63a7\u5236\uff1f\u6d41\u91cf\u63a7\u5236\u7684\u76ee\u7684\uff1f \u5982\u679c\u53d1\u9001\u8005\u53d1\u9001\u6570\u636e\u8fc7\u5feb\uff0c\u63a5\u6536\u8005\u6765\u4e0d\u53ca\u63a5\u6536\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u5206\u7ec4\u4e22\u5931\u3002\u4e3a\u4e86\u907f\u514d\u5206\u7ec4\u4e22\u5931\uff0c \u63a7\u5236\u53d1\u9001\u8005\u7684\u53d1\u9001\u901f\u5ea6\uff0c\u4f7f\u5f97\u63a5\u6536\u8005\u6765\u5f97\u53ca\u63a5\u6536\uff0c\u8fd9\u5c31\u662f\u6d41\u91cf\u63a7\u5236\u3002 \u6d41\u91cf\u63a7\u5236\u6839\u672c\u76ee\u7684\u662f\u9632\u6b62\u5206\u7ec4\u4e22\u5931\uff0c\u5b83\u662f\u6784\u6210TCP\u53ef\u9760\u6027\u7684\u4e00\u65b9\u9762\u3002 1.2 \u5982\u4f55\u5b9e\u73b0\u6d41\u91cf\u63a7\u5236\uff1f \u4e3b\u8981\u7684\u65b9\u5f0f\u5c31\u662f\u63a5\u6536\u65b9\u8fd4\u56de\u7684\u6570\u636e\u6bb5\u4e2d\u4f1a\u5305\u542b\u81ea\u5df1\u7684\u63a5\u6536\u7a97\u53e3\u7684\u5927\u5c0f\uff0c \u5e76\u4e14\u5229\u7528\u5927\u5c0f\u6765\u63a7\u5236\u53d1\u9001\u65b9\u7684\u6570\u636e\u53d1\u9001\u3002 1.3 \u6d41\u91cf\u63a7\u5236\u5f15\u53d1\u7684\u6b7b\u9501\uff1f\u600e\u4e48\u907f\u514d\u6b7b\u9501\u7684\u53d1\u751f\uff1f \u5f53\u53d1\u9001\u8005\u6536\u5230\u4e86\u4e00\u4e2a\u7a97\u53e3\u4e3a0\u7684\u5e94\u7b54\uff0c\u53d1\u9001\u8005\u4fbf\u505c\u6b62\u53d1\u9001\uff0c\u7b49\u5f85\u63a5\u6536\u8005\u7684\u4e0b\u4e00\u4e2a\u5e94\u7b54\u3002 \u4f46\u662f\u5982\u679c\u8fd9\u4e2a\u7a97\u53e3\u4e0d\u4e3a0\u7684\u5e94\u7b54\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e22\u5931\uff0c\u53d1\u9001\u8005\u4e00\u76f4\u7b49\u5f85\u4e0b\u53bb\uff0c\u800c\u63a5\u6536\u8005\u4ee5\u4e3a\u53d1\u9001\u8005\u5df2\u7ecf\u6536\u5230\u8be5\u5e94\u7b54\uff0c \u7b49\u5f85\u63a5\u6536\u65b0\u6570\u636e\uff0c\u8fd9\u6837\u53cc\u65b9\u5c31\u76f8\u4e92\u7b49\u5f85\uff0c\u4ece\u800c\u4ea7\u751f\u6b7b\u9501\u3002 \u4e3a\u4e86\u907f\u514d\u6d41\u91cf\u63a7\u5236\u5f15\u53d1\u7684\u6b7b\u9501\uff0cTCP\u4f7f\u7528\u4e86\u6301\u7eed\u8ba1\u65f6\u5668\u3002\u6bcf\u5f53\u53d1\u9001\u8005\u6536\u5230\u4e00\u4e2a\u96f6\u7a97\u53e3\u7684\u5e94\u7b54\u540e\u5c31\u542f\u52a8\u8be5\u8ba1\u65f6\u5668\u3002 \u65f6\u95f4\u4e00\u5230\u4fbf\u4e3b\u52a8\u53d1\u9001\u62a5\u6587\u8be2\u95ee\u63a5\u6536\u8005\u7684\u7a97\u53e3\u5927\u5c0f\u3002\u82e5\u63a5\u6536\u8005\u4ecd\u7136\u8fd4\u56de\u96f6\u7a97\u53e3\uff0c\u5219\u91cd\u7f6e\u8be5\u8ba1\u65f6\u5668\u7ee7\u7eed\u7b49\u5f85\uff1b \u82e5\u7a97\u53e3\u4e0d\u4e3a0\uff0c\u6b64\u65f6\u91cd\u7f6e\u53d1\u9001\u7a97\u53e3\u540e\u5f00\u59cb\u53d1\u9001\uff0c\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u6b7b\u9501\u7684\u4ea7\u751f\u3002 \u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b \u4e09\u6b21\u63e1\u624b : \u7b2c\u4e00\u6b65\uff1a\u5ba2\u6237\u7aefTCP\u5411\u670d\u52a1\u7aefTCP\u53d1\u9001\u4e00\u4e2a\u7279\u6b8a\u62a5\u6587\u6bb5\uff0c\u8868\u793a\u5e0c\u671b\u5efa\u7acb\u8fde\u63a5\uff0c\u8be5\u62a5\u6587\u6bb5\u4e0d\u5305\u542b\u5e94\u7528\u5c42\u6570\u636e\uff0c\u968f\u673a\u521d\u59cb\u5316\u5e8f\u53f7\u5b57\u6bb5 \u6807\u5fd7\u4f4d\u4e2d\u7684SYN\u88ab\u7f6e\u4e3a1\uff0c\u88ab\u79f0\u4e3aSYN\u62a5\u6587\u6bb5\u3002 \u7b2c\u4e8c\u6b65\uff1a\u670d\u52a1\u7aef\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u53d1\u9001\u7684SYN\u62a5\u6587\uff0c\u4e3a\u8be5TCP\u8fde\u63a5\u5206\u914dTCP\u7f13\u5b58\u548c\u53d8\u91cf\uff0c \u5e76\u5411\u5ba2\u6237\u7aefTCP\u53d1\u9001\u5141\u8bb8\u8fde\u63a5\u7684TCP\u62a5\u6587\u6bb5\uff0c\u8be5\u62a5\u6587\u6bb5\u968f\u673a\u521d\u59cb\u5316\u5e8f\u53f7\u5b57\u6bb5\uff0c\u786e\u8ba4\u53f7\u5b57\u6bb5\u4e3a\u6536\u5230\u7684\u5ba2\u6237\u7aef\u5e8f\u53f7\u503c+1\uff0c SYN\u6807\u5fd7\u4f4d\u548cACK\u6807\u5fd7\u4f4d\u88ab\u7f6e1\uff0c\u8be5\u62a5\u6587\u6bb5\u88ab\u79f0\u4e3aSYNACK\u62a5\u6587\u6bb5\u3002 \u7b2c\u4e09\u6b65\uff1a\u5728\u6536\u5230SYNACK\u62a5\u6587\u6bb5\u540e\uff0c\u5ba2\u6237\u7aef\u4e5f\u8981\u7ed9\u8fde\u63a5\u5206\u914d\u7f13\u5b58\u548c\u53d8\u91cf\uff0c\u7136\u540e\u5411\u670d\u52a1\u5668\u53d1\u9001\u5e94\u7b54\u62a5\u6587\uff0c \u8be5\u62a5\u6587ACK\u6807\u5fd7\u4f4d\u7f6e1\uff0cSYN\u6807\u5fd7\u4f4d\u7f6e0\uff0c\u786e\u8ba4\u53f7\u5b57\u6bb5\u4e3a\u6536\u5230\u7684\u670d\u52a1\u7aef\u5e8f\u53f7\u503c+1\uff0c\u7136\u540e\u5c06\u62a5\u6587\u53d1\u9001\u7ed9\u670d\u52a1\u7aef\u3002 \u6b64\u6b21\u62a5\u6587\u53ef\u4ee5\u643a\u5e26\u5ba2\u6237\u5230\u670d\u52a1\u5668\u7684\u6570\u636e\u3002 \u4e3a\u4ec0\u4e48\u8981\u4e09\u6b21\u63e1\u624b : \u9996\u8981\u539f\u56e0\uff0c\u4e3a\u4e86\u9632\u6b62\u5df2\u5931\u6548\u7684\u8fde\u63a5\u8bf7\u6c42\u62a5\u6587\u6bb5\u5728\u7f51\u7edc\u5ef6\u8fdf\u540e\u53c8\u5230\u8fbe\u4e86\u670d\u52a1\u7aef\uff0c\u4ea7\u751f\u9519\u8bef\u8fde\u63a5\u3002 client\u53d1\u51fa\u8fde\u63a5\u8bf7\u6c42\uff0c\u4f46\u56e0\u8fde\u63a5\u8bf7\u6c42\u62a5\u6587\u672a\u88abserver\u63a5\u6536(\u53ef\u80fd\u4e22\u5931\u6216\u8005\u5ef6\u8fdf)\uff0c\u56e0\u6b64\u6ca1\u6709\u6536\u5230\u786e\u8ba4\u3002 \u4e8e\u662fA\u518d\u91cd\u4f20\u4e00\u6b21\u8bf7\u6c42\u8fde\u63a5\u3002\u540e\u6765\u6536\u5230\u4e86\u786e\u8ba4\uff0c\u5efa\u7acb\u4e86\u8fde\u63a5\u3002\u6570\u636e\u4f20\u8f93\u5b8c\u6bd5\u540e\uff0c\u5c31\u91ca\u653e\u4e86\u8fde\u63a5\u3002 \u4f46\u7b2c\u4e00\u6b21\u53d1\u9001\u7684\u8bf7\u6c42\u8fde\u63a5\u62a5\u6587\u5728\u8fde\u63a5\u91ca\u653e\u540e\u4e5f\u5230\u8fbeserver\uff0c\u867d\u7136\u8fd9\u662f\u4e00\u4e2a\u65e9\u5df2\u5931\u6548\u7684\u62a5\u6587\u6bb5\u3002 \u4f46server\u6536\u5230\u6b64\u5931\u6548\u7684\u8fde\u63a5\u8bf7\u6c42\u62a5\u6587\u6bb5\u540e\uff0c\u8bef\u8ba4\u4e3a\u662fclient\u518d\u6b21\u53d1\u51fa\u7684\u4e00\u4e2a\u65b0\u7684\u8fde\u63a5\u8bf7\u6c42\u3002 \u4e8e\u662f\u5c31\u5411client\u53d1\u51fa\u786e\u8ba4\u62a5\u6587\u6bb5\uff0c\u540c\u610f\u5efa\u7acb\u8fde\u63a5\u3002\u5047\u8bbe\u4e0d\u91c7\u7528\u201c\u4e09\u6b21\u63e1\u624b\u201d\uff0c\u90a3\u4e48\u53ea\u8981server\u53d1\u51fa\u786e\u8ba4\uff0c \u65b0\u7684\u8fde\u63a5\u5c31\u5efa\u7acb\u4e86\u3002\u7531\u4e8e\u73b0\u5728client\u5e76\u6ca1\u6709\u53d1\u51fa\u5efa\u7acb\u8fde\u63a5\u7684\u8bf7\u6c42\uff0c\u4e0d\u4f1a\u5411server\u53d1\u9001\u6570\u636e\u3002 \u4f46server\u4e00\u76f4\u7b49\u5f85client\u53d1\u6765\u6570\u636e\u3002\u8fd9\u6837\uff0cserver\u5c06\u6d6a\u8d39\u8bb8\u591a\u8d44\u6e90\u5728\u7b49\u5f85\u3002 \u5982\u679c\u662f\u4e09\u6b21\u63e1\u624b\uff0c\u5ba2\u6237\u7aef\u5219\u53ef\u4ee5\u53d1\u9001RST\u62a5\u6587\u7ed9\u670d\u52a1\u7aef\uff0c\u4e2d\u6b62\u6b64\u6b21\u8fde\u63a5\u3002 \u7b2c\u4e8c\u4e2a\u539f\u56e0\uff0c\u662f\u4e3a\u4e86\u540c\u6b65\u53cc\u65b9\u521d\u59cb\u5e8f\u5217\u53f7\uff0c\u4e24\u6b21\u63e1\u624b\u867d\u7136\u8ba9\u53cc\u65b9\u5c31\u53d1\u9001\u7aef\u7684\u5e8f\u5217\u53f7\u8fbe\u6210\u540c\u6b65\uff0c \u4f46TCP\u8fde\u63a5\u662f\u53cc\u5411\u7684\uff0c\u56e0\u6b64\u4e5f\u9700\u8981\u5c31\u670d\u52a1\u7aef\u7684\u5e8f\u5217\u53f7\u8fbe\u6210\u540c\u6b65\uff1b \u4f46\u6b64\u65f6\u65e0\u6cd5\u786e\u4fddclient\u6536\u5230server\u8fd4\u56de\u7684\u786e\u8ba4\u62a5\u6587\uff0c\u56e0\u6b64\u53cc\u65b9\u65e0\u6cd5\u5c31\u670d\u52a1\u7aef\u5e8f\u5217\u53f7\u8fbe\u6210\u540c\u6b65\u3002 \u56db\u6b21\u63e1\u624b\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76ee\u7684\uff0c\u4f46\u7531\u4e8e\u4e09\u6b21\u63e1\u624b\u5373\u53ef\u5b9e\u73b0\u9700\u6c42\uff0c\u6240\u4ee5\u65e0\u9700\u989d\u5916\u7684\u786e\u8ba4\u3002 \u56db\u6b21\u6325\u624b : 1\u3001\u5ba2\u6237\u7aef\u6253\u7b97\u5173\u95ed\u8fde\u63a5\uff0c\u4f1a\u53d1\u9001\u4e00\u4e2a\u7279\u6b8a\u62a5\u6587\uff0c\u8be5TCP\u62a5\u6587\u6bb5\u7684FIN\u6807\u5fd7\u4f4d\u7f6e1\uff1b 2\u3001\u670d\u52a1\u7aef\u63a5\u6536\u5230FIN\u62a5\u6587\uff0c\u4f1a\u5411\u5ba2\u6237\u7aef\u53d1\u9001ACK\u5e94\u7b54\u62a5\u6587\uff1b\u5ba2\u6237\u7aef\u63a5\u6536\u5230ACK\u62a5\u6587\uff0c\u4fbf\u4e0d\u4f1a\u518d\u91cd\u53d1FIN\u62a5\u6587 3\u3001\u670d\u52a1\u7aef\u5904\u7406\u5b8c\u6570\u636e\u540e\uff0c\u5411\u5ba2\u6237\u7aef\u53d1\u9001FIN\u62a5\u6587\uff1b(\u57282\u30013\u671f\u95f4\uff0cclient\u53ef\u4ee5\u6b63\u5e38\u63a5\u6536\u6570\u636e\u548c\u8fd4\u56deACK\u62a5\u6587) 4\u3001\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u670d\u52a1\u7aef\u7684FIN\u62a5\u6587\u540e\uff0c\u4e5f\u4f1a\u56de\u590d\u4e00\u4e2aACK\u62a5\u6587\uff0c\u7136\u540e\u8fdb\u5165TIME_WAIT\u72b6\u6001\u3002 5\u3001\u670d\u52a1\u5668\u6536\u5230ACK\u62a5\u6587\u540e\uff0c\u5c31\u8fdb\u5165close\u72b6\u6001\uff0c\u5b8c\u6210\u8fde\u63a5\u7684\u5173\u95ed\u3002 \u5ba2\u6237\u7aef\u5728\u7b49\u5f852MSL\u540e\uff0c\u81ea\u52a8\u8fdb\u5165close\u72b6\u6001\uff0c\u5ba2\u6237\u7aef\u4e5f\u5b8c\u6210\u8fde\u63a5\u7684\u5173\u95ed\u3002 \u4e3a\u4ec0\u4e48\u9700\u8981\u56db\u6b21\u6325\u624b \u670d\u52a1\u7aef\u901a\u5e38\u9700\u8981\u7b49\u5f85\u5b8c\u6210\u6570\u636e\u7684\u53d1\u9001\u548c\u5904\u7406\uff0c\u56e0\u6b64\u670d\u52a1\u7aef\u7684ACK\u548cFIN\u62a5\u6587\u662f\u5206\u5f00\u53d1\u9001\u7684\uff0c \u4ece\u800c\u6bd4\u4e09\u6b21\u63e1\u624b\u591a\u4e00\u6b21\u3002 MSL\uff1amaximum segment lifetime, \u62a5\u6587\u6700\u5927\u751f\u5b58\u65f6\u95f4 \u4e3a\u4ec0\u4e48\u9700\u8981TIME_WAIT\u72b6\u6001 \uff1a 1\u3001\u786e\u4fdd\u4e3b\u52a8\u5173\u95ed\u65b9\u53d1\u9001\u7684ACK\u5e94\u7b54\u62a5\u6587\u88ab\u6b63\u786e\u63a5\u6536:\u901a\u5e38\u53ea\u6709\u4e3b\u52a8\u5173\u95ed\u65b9\u624d\u4f1a\u8fdb\u5165TIME_WAIT\u72b6\u6001\uff0c \u5047\u5982\u5ba2\u6237\u7aef\u662f\u4e3b\u52a8\u5173\u95ed\u65b9\uff0c\u800c\u5ba2\u6237\u7aef\u5728\u63a5\u53d7\u5230\u670d\u52a1\u7aef\u7684FIN\u62a5\u6587\u540e\uff0c\u5411\u670d\u52a1\u7aef\u53d1\u9001ACK\u62a5\u6587\u540e\uff0c\u76f4\u63a5\u8fdb\u5165close\u72b6\u6001\uff0c \u5220\u9664\u5957\u63a5\u5b57\uff1b\u800c\u8be5ACK\u62a5\u6587\u4e22\u5931\uff0c\u670d\u52a1\u7aef\u5728\u7b49\u5f85\u8d85\u65f6\u540e\uff0c\u5c31\u4f1a\u91cd\u53d1FIN\u62a5\u6587\uff1b \u5f53\u670d\u52a1\u7aef\u91cd\u53d1\u7684FIN\u62a5\u6587\u5230\u8fbe\u5ba2\u6237\u7aef\u65f6\uff0c\u5ba2\u6237\u7aef\u4f1a\u8ba4\u4e3a\u5176\u662f\u4e00\u4e2a\u975e\u6cd5\u62a5\u6587\u6bb5\uff0c\u4e8e\u662f\u8fd4\u56de\u4e00\u4e2aRST\u62a5\u6587\uff0c \u8868\u793a\u8fde\u63a5\u5f02\u5e38\u8981\u6c42\u5f3a\u5236\u5173\u95ed\u8fde\u63a5\uff0c\u5219\u670d\u52a1\u5668\u7aef\u5957\u63a5\u5b57\u4e0d\u80fd\u8fdb\u5165\u6b63\u5e38\u7684\u5173\u95ed\u72b6\u6001\u3002 2\u3001\u786e\u4fdd\u5386\u53f2\u8fde\u63a5\u8fc7\u7a0b\u7684\u6570\u636e\u5305\u5728\u7f51\u7edc\u4e2d\u8fc7\u671f\u800c\u6d88\u5931: \u5728\u7b2c\u56db\u6b21\u6325\u624b\u540e\uff0c\u7ecf\u8fc72msl\u7684\u65f6\u95f4\u8db3\u4ee5\u8ba9\u672c\u6b21\u8fde\u63a5\u4ea7\u751f\u7684\u6240\u6709\u62a5\u6587\u6bb5\u90fd\u4ece\u7f51\u7edc\u4e2d\u6d88\u5931\uff0c \u8fd9\u6837\u4e0b\u4e00\u6b21\u65b0\u7684\u8fde\u63a5\u4e2d\u5c31\u80af\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u65e7\u8fde\u63a5\u7684\u62a5\u6587\u6bb5\u4e86; \u6ca1\u6709time-wait, \u5982\u679c\u6b64\u65f6\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u53c8\u5efa\u7acb\u4e86\u65b0\u7684TCP\u8fde\u63a5\uff0c\u4e14\u548c\u5386\u53f2\u8fde\u63a5\u91c7\u7528\u4e86\u76f8\u540c\u7684\u7aef\u53e3\uff0c \u800c\u5386\u53f2\u8fde\u63a5\u7684\u6570\u636e\u5305\u53ef\u80fd\u5728\u5ef6\u8fdf\u540e\u5230\u8fbe\u63a5\u6536\u7aef\uff0c\u4f1a\u88ab\u5f53\u6210\u6b64\u6b21\u8fde\u63a5\u4e2d\u7684\u6570\u636e\u5305\u800c\u6b63\u5e38\u63a5\u6536\uff0c\u4ece\u800c\u9020\u6210\u6570\u636e\u9519\u4e71\u3002 SYN cookie \u2003SYN Cookie\u662f\u5bf9TCP\u670d\u52a1\u5668\u7aef\u7684\u4e09\u6b21\u63e1\u624b\u534f\u8bae\u4f5c\u4e00\u4e9b\u4fee\u6539\uff0c\u4e13\u95e8\u7528\u6765\u9632\u8303SYN Flood\u653b\u51fb\u7684\u4e00\u79cd\u624b\u6bb5\u3002\u5b83\u7684\u539f\u7406\u662f\uff0c\u5728TCP\u670d\u52a1\u5668\u6536\u5230\u53d1\u9001\u65b9SYN\u6570\u636e\u5305\u5e76\u8fd4\u56deSYNACK\u6570\u636e\u5305\u65f6\uff0c\u4e0d\u4f1a\u5148\u4e3a\u8be5TCP\u8fde\u63a5\u5206\u914d\u7f13\u5b58\uff0c\u800c\u662f\u6839\u636e\u8fd9\u4e2aSYN\u6570\u636e\u5305\u8ba1\u7b97\u51fa\u4e00\u4e2acookie\u503c\u3002\u5728\u6536\u5230\u53d1\u9001\u65b9\u8fd4\u56de\u7684ACK\u6570\u636e\u5305\u65f6\uff0c\u670d\u52a1\u5668\u6839\u636ecookie\u503c\u68c0\u67e5\u8fd9\u4e2aACK\u6570\u636e\u5305\u7684\u5408\u6cd5\u6027\u3002\u5982\u679c\u5408\u6cd5\uff0c\u518d\u5206\u914d\u4e13\u95e8\u7684\u6570\u636e\u533a\u8fdb\u884c\u5904\u7406\u672a\u6765\u7684TCP\u8fde\u63a5\u3002 TCP\u62e5\u585e\u63a7\u5236 \u6d41\u91cf\u63a7\u5236\u4e0e\u62e5\u585e\u63a7\u5236 \u62e5\u585e\u63a7\u5236\uff1a\u62e5\u585e\u63a7\u5236\u662f\u4f5c\u7528\u4e8e\u7f51\u7edc\u7684\uff0c\u5b83\u662f\u9632\u6b62\u8fc7\u591a\u7684\u6570\u636e\u6ce8\u5165\u5230\u7f51\u7edc\u4e2d\uff0c\u907f\u514d\u51fa\u73b0\u7f51\u7edc\u8d1f\u8f7d\u8fc7\u5927\u7684\u60c5\u51b5\uff1b \u5e38\u7528\u7684\u65b9\u6cd5\u5c31\u662f\uff1a\uff08 1 \uff09\u6162\u5f00\u59cb\u3001\u62e5\u585e\u907f\u514d\uff08 2 \uff09\u5feb\u91cd\u4f20\u3001\u5feb\u6062\u590d\u3002 \u6d41\u91cf\u63a7\u5236\uff1a\u6d41\u91cf\u63a7\u5236\u662f\u4f5c\u7528\u4e8e\u63a5\u6536\u8005\u7684\uff0c\u5b83\u662f\u63a7\u5236\u53d1\u9001\u8005\u7684\u53d1\u9001\u901f\u5ea6\u4ece\u800c\u4f7f\u63a5\u6536\u8005\u6765\u5f97\u53ca\u63a5\u6536\uff0c\u9632\u6b62\u5206\u7ec4\u4e22\u5931\u3002 TCP\u4e0eUDP\u4e0d\u540c \u8fde\u63a5 TCP \u662f\u9762\u5411\u8fde\u63a5\u7684\u4f20\u8f93\u5c42\u534f\u8bae\uff0c\u4f20\u8f93\u6570\u636e\u524d\u5148\u8981\u5efa\u7acb\u8fde\u63a5\u3002 UDP \u662f\u4e0d\u9700\u8981\u8fde\u63a5\uff0c\u5373\u523b\u4f20\u8f93\u6570\u636e\u3002 \u670d\u52a1\u5bf9\u8c61 TCP \u662f\u4e00\u5bf9\u4e00\u7684\u4e24\u70b9\u670d\u52a1\uff0c\u5373\u4e00\u6761\u8fde\u63a5\u53ea\u6709\u4e24\u4e2a\u7aef\u70b9\u3002 UDP \u652f\u6301\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u3001\u591a\u5bf9\u591a\u7684\u4ea4\u4e92\u901a\u4fe1\u3002 \u6240\u4ee5\u57fa\u4e8e\u5e7f\u64ad\u548c\u591a\u64ad(\u76ee\u6807\u662f\u591a\u4e2a\u4e3b\u673a\u5730\u5740)\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u80fd\u4f7f\u7528TCP\u670d\u52a1\uff0c\u800cUDP\u5219\u975e\u5e38\u9002\u5408\u5e7f\u64ad\u548c\u591a\u64ad\u3002 \u53ef\u9760\u6027 TCP \u662f\u53ef\u9760\u4ea4\u4ed8\u6570\u636e\u7684\uff0c\u6570\u636e\u53ef\u4ee5\u65e0\u5dee\u9519\u3001\u4e0d\u4e22\u5931\u3001\u4e0d\u91cd\u590d\u3001\u6309\u9700\u5230\u8fbe\u3002 UDP \u662f\u5c3d\u6700\u5927\u52aa\u529b\u4ea4\u4ed8\uff0c\u4e0d\u4fdd\u8bc1\u53ef\u9760\u4ea4\u4ed8\u6570\u636e\u3002 \u62e5\u585e\u63a7\u5236\u3001\u6d41\u91cf\u63a7\u5236 TCP \u6709\u62e5\u585e\u63a7\u5236\u548c\u6d41\u91cf\u63a7\u5236\u673a\u5236\uff0c\u4fdd\u8bc1\u6570\u636e\u4f20\u8f93\u7684\u5b89\u5168\u6027\u3002 UDP \u5219\u6ca1\u6709\uff0c\u5373\u4f7f\u7f51\u7edc\u975e\u5e38\u62e5\u5835\u4e86\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd UDP \u7684\u53d1\u9001\u901f\u7387\u3002 \u9996\u90e8\u5f00\u9500 TCP \u9996\u90e8\u957f\u5ea6\u8f83\u957f\uff0c\u4f1a\u6709\u4e00\u5b9a\u7684\u5f00\u9500\uff0c\u9996\u90e8\u5728\u6ca1\u6709\u4f7f\u7528\u300c\u9009\u9879\u300d\u5b57\u6bb5\u65f6\u662f 20 \u4e2a\u5b57\u8282\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u300c\u9009\u9879\u300d\u5b57\u6bb5\u5219\u4f1a\u53d8\u957f\u7684\u3002 UDP \u9996\u90e8\u53ea\u6709 8 \u4e2a\u5b57\u8282\uff0c\u5e76\u4e14\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\uff0c\u5f00\u9500\u8f83\u5c0f\u3002 TCP\u662f\u9762\u5411\u5b57\u8282\u6d41\u7684 \uff0c\u5176\u5c06\u5e94\u7528\u5c42\u4f20\u9012\u7684\u6570\u636e\u770b\u6210\u65e0\u7ed3\u6784\u7684\u5b57\u8282\u6d41\uff0cTCP\u6709\u4e00\u4e2a\u7f13\u51b2\uff0c\u5f53\u5e94\u7528\u7a0b\u5e8f\u4f20\u9001\u7684\u6570\u636e\u5757\u592a\u957f\uff0cTCP\u5c31\u53ef\u4ee5\u628a\u5b83\u5212\u5206\u77ed\u4e00\u4e9b\u518d\u4f20\u9001\u3002\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u4e00\u6b21\u53ea\u53d1\u9001\u4e00\u4e2a\u5b57\u8282\uff0cTCP\u4e5f\u53ef\u4ee5\u7b49\u5f85\u79ef\u7d2f\u6709\u8db3\u591f\u591a\u7684\u5b57\u8282\u540e\u518d\u6784\u6210\u62a5\u6587\u6bb5\u53d1\u9001\u51fa\u53bb\u3002\u5e76\u4e14\u6839\u636e\u5f53\u524d\u7f51\u7edc\u7684\u62e5\u585e\u7a0b\u5ea6\u6765\u51b3\u5b9a\u6bcf\u4e2a\u62a5\u6587\u6bb5\u5927\u5c0f\uff1b UDP\u662f\u9762\u5411\u6570\u636e\u5305\u7684 \uff1a\u53d1\u9001\u65b9\u7684UDP\u5bf9\u5e94\u7528\u5c42\u4ea4\u4e0b\u6765\u7684\u62a5\u6587\uff0c\u4e0d\u5408\u5e76\uff0c\u4e0d\u62c6\u5206\uff0c\u53ea\u662f\u5728\u5176\u4e0a\u9762\u52a0\u4e0a\u9996\u90e8\u540e\u5c31\u4ea4\u7ed9\u4e86\u4e0b\u9762\u7684\u7f51\u7edc\u5c42\uff1b\u5bf9\u4e8e\u8fc7\u957f\u7684\u62a5\u6587\u6bb5\uff0c\u5728\u7f51\u7edc\u5c42\uff0c\u4f1a\u9488\u5bf9IP\u6570\u636e\u62a5\u8fdb\u884c\u5206\u7247\u3002","title":"transport"},{"location":"Network/2_transport/#_1","text":"","title":"\u4f20\u8f93\u5c42"},{"location":"Network/2_transport/#vs","text":"\u4f20\u8f93\u5c42\u534f\u8bae\u53ea\u5de5\u4f5c\u5728\u7aef\u7cfb\u7edf\uff0c\u5728\u7aef\u7cfb\u7edf\u4e2d\uff0c\u4f20\u8f93\u5c42\u534f\u8bae\u5c06\u6765\u81ea\u5e94\u7528\u8fdb\u7a0b\u7684\u62a5\u6587\u79fb\u52a8\u5230\u7f51\u7edc\u8fb9\u7f18(\u7f51\u7edc\u5c42)\uff1b\u7f51\u7edc\u8def\u7531\u5668\u4ec5\u4f5c\u7528\u5230\u6570\u636e\u6bb5\u7684\u7f51\u7edc\u5c42\u5b57\u6bb5\uff0c\u4e0d\u4f1a\u68c0\u67e5\u5c01\u88c5\u5728\u6570\u636e\u6bb5\u4e2d\u7684\u4f20\u8f93\u5c42\u5b57\u6bb5\u3002","title":"\u4f20\u8f93\u5c42 v.s \u5e94\u7528\u5c42"},{"location":"Network/2_transport/#_2","text":"\u5c06\u4e3b\u673a\u95f4\u4ea4\u4ed8\u6269\u5c55\u5230\u8fdb\u7a0b\u95f4\u4ea4\u4ed8\u3002 \u5c06\u4f20\u8f93\u5c42\u62a5\u6587\u6bb5\u4e2d\u7684\u6570\u636e\u4ea4\u4ed8\u5230\u6b63\u786e\u7684socket\u7684\u5de5\u4f5c\u79f0\u4e3a\u591a\u8def\u5206\u7528 \uff1b \u5728\u6e90\u4e3b\u673a\u4e2d \u4ece\u4e0d\u540csocket\u6536\u96c6\u6570\u636e\u5757\uff0c\u5e76\u4e3a\u6bcf\u4e2a\u6570\u636e\u5757\u5c01\u88c5\u9996\u90e8\u4fe1\u606f\u4ece\u800c\u751f\u6210\u62a5\u6587\u6bb5\uff0c\u7136\u540e\u4f20\u9012\u5230\u7f51\u7edc\u5c42 \u3002 \u5206\u7528 \u65e0\u8fde\u63a5\u5206\u7528 \u9762\u5411\u8fde\u63a5\u7684\u5206\u7528","title":"\u591a\u8def\u590d\u7528/\u5206\u7528"},{"location":"Network/2_transport/#udp","text":"UDP\u534f\u8bae UDP\u62a5\u6587\u683c\u5f0f","title":"UDP"},{"location":"Network/2_transport/#rdt","text":"","title":"\u53ef\u9760\u6570\u636e\u4f20\u8f93(RDT)"},{"location":"Network/2_transport/#tcp","text":"MSS(Maximum Segment Size): TCP\u53ef\u4ece\u53d1\u9001\u7f13\u5b58\u4e2d\u53d6\u51fa\u5e76\u653e\u5165\u62a5\u6587\u6bb5\u4e2d\u7684\u6700\u5927\u6570\u636e\u91cf; MTU(Maximum Transmission Unit): \u6700\u5927\u94fe\u8def\u5e27\u957f\u5ea6 \u8003\u8651\u5230\u4ee5\u592a\u7f51\u548cPPP\u94fe\u8def\u5c42\u534f\u8bae\u90fd\u5177\u67091500\u5b57\u8282\u7684MTU\uff0c\u800cTCP\u6570\u636e\u6bb5header\u4e00\u822c\u4e3a20\u5b57\u8282\uff0c\u518d\u6709IP\u6570\u636e\u62a5\u7684header\u4e5f\u4e3a20\u5b57\u8282\uff0c \u56e0\u6b64MSS\u7684\u5178\u578b\u503c\u4e3a1460\u5b57\u8282\u3002 TCP\u6570\u636e\u6bb5 \u2003\u5e8f\u5217\u53f7\u548c\u786e\u8ba4\u53f7\u7528\u6765\u5b9e\u73b0\u53ef\u9760\u6570\u636e\u4f20\u8f93\u670d\u52a1\uff1b\u5176\u4e2d\u5e8f\u5217\u53f7\u662f\u62a5\u6587\u6bb5\u9996\u5b57\u8282\u7684\u5b57\u8282\u6d41\u7f16\u53f7\uff0c \u63a5\u6536\u65b9\u6839\u636e\u5e8f\u5217\u53f7\u53ef\u4ee5\u53bb\u9664\u91cd\u590d\u6570\u636e\uff0c\u4fdd\u8bc1\u6309\u5e8f\u63a5\u6536\u6570\u636e\u5305\uff1b\u53d1\u9001\u65b9\u5219\u53ef\u4ee5\u7528\u6765\u6807\u8bc6\u53d1\u9001\u51fa\u53bb\u7684\u6570\u636e\u5305\u54ea\u4e9b\u662f\u88ab\u6b63\u786e\u63a5\u6536\u4e86 \uff1b\u786e\u8ba4\u53f7\u662f\u63a5\u6536\u65b9\u671f\u671b\u63a5\u6536\u7684\u4e0b\u4e00\u5b57\u8282\u7684\u5e8f\u53f7\uff0c \u7528\u6765\u89e3\u51b3\u4e22\u5305\u7684\u95ee\u9898 \u3002 \u20036 bit\u7684\u6807\u5fd7\u4f4d: ACK\u4f4d\u7528\u6765\u6307\u793a\u786e\u8ba4\u53f7\u662f\u6709\u6548\u7684\uff0c\u5373\u5bf9\u4e00\u4e2a\u5df2\u88ab\u6210\u529f\u63a5\u6536\u62a5\u6587\u6bb5\u7684\u786e\u8ba4( TCP\u89c4\u5b9a\u9664\u4e86\u6700\u521d\u8bf7\u6c42\u5efa\u7acb\u8fde\u63a5\u65f6\u7684SYN\u62a5\u6587\u6bb5\u4e4b\u5916\u8be5\u4f4d\u5fc5\u987b\u8bbe\u7f6e\u4e3a1 )\uff1bRST( \u8868\u793aTCP\u8fde\u63a5\u4e2d\u51fa\u73b0\u5f02\u5e38\u5fc5\u987b\u5f3a\u5236\u65ad\u5f00\u8fde\u63a5 )\u3001FIN( \u8868\u793a\u4e0d\u4f1a\u518d\u6709\u6570\u636e\u53d1\u9001\uff0c\u5e0c\u671b\u65ad\u5f00\u8fde\u63a5 )\u3001SYN( \u5e0c\u671b\u5efa\u7acb\u8fde\u63a5 )\u7528\u4e8e\u8fde\u63a5\u5efa\u7acb\u548c\u5220\u9664\uff1b PSH\u6307\u793a\u63a5\u6536\u65b9\u5e94\u7acb\u523b\u5c06\u6570\u636e\u4ea4\u7ed9\u4e0a\u5c42\uff1bURG\u6307\u793a\u62a5\u6587\u6bb5\u5b58\u5728\u88ab\u53d1\u9001\u7aef\u4e0a\u5c42\u5e94\u7528\u6807\u8bb0\u4e3a\u7d27\u6025\u7684\u6570\u636e\u3002(\u5b9e\u8df5\u4e2d\uff0cPSH\u3001URG\u4ee5\u53ca\u7d27\u6025\u6570\u636e\u6307\u9488\u5e76\u6ca1\u6709\u4f7f\u7528) \u4ea7\u751fRST\u62a5\u6587\u7684\u4e09\u79cd\u60c5\u51b5: 1\u3001\u8bbf\u95ee\u4e0d\u5b58\u5728\u7684\u7aef\u53e3\uff0cclient\u8bbf\u95ee\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u7aef\u53e3\u65f6\uff0c\u76ee\u6807\u4e3b\u673a\u4f1a\u8fd4\u56de\u4e00\u4e2aRST\u62a5\u6587\uff0c \u6536\u5230RST\u62a5\u6587\u7684client\u5e94\u8be5\u5173\u95ed\u8fde\u63a5\u6216\u8005\u91cd\u65b0\u8fde\u63a5\u3002 2\u3001\u5f02\u5e38\u7ec8\u6b62\u8fde\u63a5\uff0c\u6570\u636e\u4ea4\u6362\u5b8c\u6210\u4e4b\u540e\uff0cTCP\u63d0\u4f9b\u4e86\u5f02\u5e38\u7ec8\u6b62\u4e00\u4e2a\u8fde\u63a5\uff0c\u5373\u7ed9\u5bf9\u65b9\u53d1\u9001\u4e00\u4e2aRST\u62a5\u6587\uff0c \u4e00\u65e6\u53d1\u9001\u4e86RST\u62a5\u6587\uff0c\u53d1\u9001\u7aef\u6240\u6709\u6392\u961f\u7b49\u5f85\u53d1\u9001\u7684\u6570\u636e\u90fd\u5c06\u88ab\u4e22\u5f03\u3002 3\u3001\u5904\u7406\u534a\u6253\u5f00\u8fde\u63a5\uff0c\u4ee5\u63a5\u6536\u65b9\u5173\u95ed\u6216\u8005\u5f02\u5e38\u7ec8\u6b62\u8fde\u63a5\u4e3a\u4f8b\uff0c\u4f46\u53d1\u9001\u65b9\u6ca1\u6709\u63a5\u6536\u5230\u7ed3\u675f\u62a5\u6587\u6bb5\uff0c \u6b64\u65f6\u53d1\u9001\u65b9\u8fd8\u7ef4\u6301\u539f\u6765\u7684\u8fde\u63a5\uff0c\u800c\u63a5\u6536\u65b9\u5373\u4f7f\u91cd\u542f\u3002\u4e5f\u6ca1\u6709\u8be5\u8fde\u63a5\u7684\u4efb\u4f55\u4fe1\u606f\u3002\u8fd9\u79cd\u72b6\u6001\u79f0\u4e3a\u534a\u6253\u5f00\u72b6\u6001\uff0c \u5904\u4e8e\u8fd9\u79cd\u72b6\u6001\u7684\u8fde\u63a5\u79f0\u4e3a\u534a\u6253\u5f00\u8fde\u63a5\u3002\u5982\u679c\u53d1\u9001\u65b9\u5f80\u5904\u4e8e\u534a\u6253\u5f00\u72b6\u6001\u7684\u8fde\u63a5\u5199\u5165\u6570\u636e\uff0c\u5219 \u5bf9\u65b9\u5c06\u56de\u5e94\u4e00\u4e2aRST\u62a5\u6587\u3002 TCP\u53ef\u9760\u6570\u636e\u4f20\u8f93 \u2003 \u6d41\u6c34\u7ebf\u673a\u5236 : \u51c6\u786e\u6765\u8bf4\u662f\u6ed1\u52a8\u7a97\u53e3\u673a\u5236\uff0c\u53d1\u9001\u65b9\u5728\u53d1\u9001\u4e00\u4e2a\u7f51\u7edc\u5305\u540e\uff0c\u4e0d\u7b49\u5f85ACK\u53f7\u8fd4\u56de\uff0c\u800c\u662f\u76f4\u63a5\u53d1\u9001\u540e\u7eed\u4e00\u7cfb\u5217\u7684\u5305\uff1b\u5f53\u63a5\u6536\u65b9\u6536\u5230\u7f51\u7edc\u5305\u540e\uff0c\u4f1a\u5148\u5c06\u6570\u636e\u5b58\u653e\u5230\u63a5\u6536\u7f13\u51b2\u533a\u4e2d\u3002\u7136\u540e\uff0c\u63a5\u6536\u65b9\u8ba1\u7b97ACK\u53f7\u548c\u5269\u4f59\u63a5\u6536\u7f13\u5b58\u533a\u5927\u5c0fRecvWindow\uff0c\u8fd4\u56de\u7ed9\u53d1\u9001\u65b9\uff0c\u53d1\u9001\u65b9\u6839\u636eRecvWindow\u5927\u5c0f\u5bf9\u6570\u636e\u53d1\u9001\u64cd\u4f5c\u8fdb\u884c\u63a7\u5236\uff0c\u8fd9\u5c31\u662f\u6ed1\u52a8\u7a97\u53e3\u65b9\u5f0f\u7684\u57fa\u672c\u601d\u8def\u3002 \u2003RecvWindow\u66f4\u65b0\u65f6\u673a\u53d1\u751f\u5728\u63a5\u6536\u65b9\u4e0a\u5c42\u5e94\u7528\u5c42\u4ece\u63a5\u6536\u7f13\u5b58\u533a\u4e2d\u53d6\u51fa\u6570\u636e\u540e\uff0c\u5bfc\u81f4\u7f13\u5b58\u533a\u5269\u4f59\u5bb9\u91cf\u589e\u52a0\u65f6\uff0c\u63a5\u6536\u65b9\u4f1a\u66f4\u65b0\u7a97\u53e3\u5927\u5c0f\u3002 \u2003\u63a5\u6536\u65b9\u5728\u53d1\u9001ACK\u53f7\u548c\u7a97\u53e3\u66f4\u65b0\u65f6\uff0c\u5e76\u4e0d\u4f1a\u9a6c\u4e0a\u628a\u5305\u53d1\u9001\u51fa\u53bb\uff0c\u800c\u662f\u4f1a\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5f88\u6709\u53ef\u80fd\u4f1a\u51fa\u73b0\u5176\u4ed6\u7684\u901a\u77e5\u64cd\u4f5c\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u628a\u4e24\u79cd\u901a\u77e5\u5408\u5e76\u5728\u4e00\u4e2a\u5305\u91cc\u9762\u53d1\u9001\u4e86\u3002\u4f8b\u5982\uff0c\u5728\u7b49\u5f85\u53d1\u9001ACK\u53f7\u7684\u65f6\u5019\u6b63\u597d\u9700\u8981\u66f4\u65b0\u7a97\u53e3\uff0c\u8fd9\u65f6\u5c31\u53ef\u4ee5\u628aACK\u53f7\u548c\u7a97\u53e3\u66f4\u65b0\u653e\u5728\u4e00\u4e2a\u5305\u91cc\u53d1\u9001\uff0c\u4ece\u800c\u51cf\u5c11\u5305\u7684\u6570\u91cf\u3002\u5f53\u9700\u8981\u8fde\u7eed\u53d1\u9001\u591a\u4e2aACK\u53f7\u65f6\uff0c\u4e5f\u53ef\u4ee5\u51cf\u5c11\u5305\u7684\u6570\u91cf\uff0c\u8fd9\u662f\u56e0\u4e3aACK\u53f7\u8868\u793a\u7684\u662f\u5df2\u6536\u5230\u7684\u6570\u636e\u91cf\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u662f\u544a\u8bc9\u53d1\u9001\u65b9\u76ee\u524d\u5df2\u63a5\u6536\u7684\u6570\u636e\u7684\u6700\u540e\u4f4d\u7f6e\u5728\u54ea\u91cc\uff0c\u56e0\u6b64 \u5f53\u9700\u8981\u8fde\u7eed\u53d1\u9001ACK\u53f7\u65f6\uff0c\u53ea\u8981\u53d1\u9001\u6700\u540e\u4e00\u4e2aACK\u53f7\u5c31\u53ef\u4ee5\u4e86 \uff0c\u4e2d\u95f4\u7684\u53ef\u4ee5\u5168\u90e8\u7701\u7565\u3002\u5f53\u9700\u8981\u8fde\u7eed\u53d1\u9001\u591a\u4e2a\u7a97\u53e3\u66f4\u65b0\u65f6\u4e5f\u53ef\u4ee5\u51cf\u5c11\u5305\u7684\u6570\u91cf\uff0c\u56e0\u4e3a\u8fde\u7eed\u53d1\u751f\u7a97\u53e3\u66f4\u65b0\u8bf4\u660e\u5e94\u7528\u7a0b\u5e8f\u8fde\u7eed\u8bf7\u6c42\u4e86\u6570\u636e\uff0c\u63a5\u6536\u7f13\u51b2\u533a\u7684\u5269\u4f59\u7a7a\u95f4\u8fde\u7eed\u589e\u52a0\u3002\u8fd9\u79cd\u60c5\u51b5\u548cACK\u53f7\u4e00\u6837\uff0c\u53ef\u4ee5\u7701\u7565\u4e2d\u95f4\u8fc7\u7a0b\uff0c\u53ea\u8981\u53d1\u9001\u6700\u7ec8\u7684\u7ed3\u679c\u5c31\u53ef\u4ee5\u4e86\u3002 \u2003 \u8d85\u65f6\u91cd\u4f20 : TCP\u534f\u8bae\u8981\u6c42\u5728\u53d1\u9001\u7aef\u6bcf\u53d1\u9001\u4e00\u4e2a\u62a5\u6587\u6bb5\uff0c\u5c31\u542f\u52a8\u4e00\u4e2a\u5b9a\u65f6\u5668\u5e76\u7b49\u5f85\u786e\u8ba4\u4fe1\u606f\uff1b\u63a5\u6536\u7aef\u6210\u529f\u63a5\u6536\u65b0\u6570\u636e\u540e\u8fd4\u56de\u786e\u8ba4\u4fe1\u606f\u3002\u82e5\u5728\u5b9a\u65f6\u5668\u8d85\u65f6\u524d\u6570\u636e\u672a\u80fd\u88ab\u786e\u8ba4\uff0cTCP\u5c31\u8ba4\u4e3a\u62a5\u6587\u6bb5\u4e2d\u7684\u6570\u636e\u5df2\u4e22\u5931\u6216\u635f\u574f\uff0c\u9700\u8981\u5bf9\u62a5\u6587\u6bb5\u4e2d\u7684\u6570\u636e\u91cd\u65b0\u7ec4\u7ec7\u548c\u91cd\u4f20\u3002 \u2003TCP\u91c7\u7528\u7684\u662f\u7d2f\u8ba1\u786e\u8ba4\u673a\u5236\uff0c\u5f53\u53d1\u9001\u65b9\u63a5\u6536\u52303\u4e2a\u5197\u4f59ACK(\u5047\u8bbeACK\u53f7\u4e3aK)\u65f6\uff0c\u610f\u5473\u7740\u5e8f\u5217\u53f7\u4e3aK\u7684\u6570\u636e\u5305\u53ef\u80fd\u5df2\u7ecf\u4e22\u5931\uff0cTCP\u5c31\u4f1a\u6267\u884c\u5feb\u901f\u91cd\u4f20\u4ece\u5e8f\u5217\u53f7K\u5f00\u59cb\u7684\u6570\u636e\u5305\u3002 TCP\u6d41\u91cf\u63a7\u5236 1.1 \u4ec0\u4e48\u662f\u6d41\u91cf\u63a7\u5236\uff1f\u6d41\u91cf\u63a7\u5236\u7684\u76ee\u7684\uff1f \u5982\u679c\u53d1\u9001\u8005\u53d1\u9001\u6570\u636e\u8fc7\u5feb\uff0c\u63a5\u6536\u8005\u6765\u4e0d\u53ca\u63a5\u6536\uff0c\u90a3\u4e48\u5c31\u4f1a\u6709\u5206\u7ec4\u4e22\u5931\u3002\u4e3a\u4e86\u907f\u514d\u5206\u7ec4\u4e22\u5931\uff0c \u63a7\u5236\u53d1\u9001\u8005\u7684\u53d1\u9001\u901f\u5ea6\uff0c\u4f7f\u5f97\u63a5\u6536\u8005\u6765\u5f97\u53ca\u63a5\u6536\uff0c\u8fd9\u5c31\u662f\u6d41\u91cf\u63a7\u5236\u3002 \u6d41\u91cf\u63a7\u5236\u6839\u672c\u76ee\u7684\u662f\u9632\u6b62\u5206\u7ec4\u4e22\u5931\uff0c\u5b83\u662f\u6784\u6210TCP\u53ef\u9760\u6027\u7684\u4e00\u65b9\u9762\u3002 1.2 \u5982\u4f55\u5b9e\u73b0\u6d41\u91cf\u63a7\u5236\uff1f \u4e3b\u8981\u7684\u65b9\u5f0f\u5c31\u662f\u63a5\u6536\u65b9\u8fd4\u56de\u7684\u6570\u636e\u6bb5\u4e2d\u4f1a\u5305\u542b\u81ea\u5df1\u7684\u63a5\u6536\u7a97\u53e3\u7684\u5927\u5c0f\uff0c \u5e76\u4e14\u5229\u7528\u5927\u5c0f\u6765\u63a7\u5236\u53d1\u9001\u65b9\u7684\u6570\u636e\u53d1\u9001\u3002 1.3 \u6d41\u91cf\u63a7\u5236\u5f15\u53d1\u7684\u6b7b\u9501\uff1f\u600e\u4e48\u907f\u514d\u6b7b\u9501\u7684\u53d1\u751f\uff1f \u5f53\u53d1\u9001\u8005\u6536\u5230\u4e86\u4e00\u4e2a\u7a97\u53e3\u4e3a0\u7684\u5e94\u7b54\uff0c\u53d1\u9001\u8005\u4fbf\u505c\u6b62\u53d1\u9001\uff0c\u7b49\u5f85\u63a5\u6536\u8005\u7684\u4e0b\u4e00\u4e2a\u5e94\u7b54\u3002 \u4f46\u662f\u5982\u679c\u8fd9\u4e2a\u7a97\u53e3\u4e0d\u4e3a0\u7684\u5e94\u7b54\u5728\u4f20\u8f93\u8fc7\u7a0b\u4e22\u5931\uff0c\u53d1\u9001\u8005\u4e00\u76f4\u7b49\u5f85\u4e0b\u53bb\uff0c\u800c\u63a5\u6536\u8005\u4ee5\u4e3a\u53d1\u9001\u8005\u5df2\u7ecf\u6536\u5230\u8be5\u5e94\u7b54\uff0c \u7b49\u5f85\u63a5\u6536\u65b0\u6570\u636e\uff0c\u8fd9\u6837\u53cc\u65b9\u5c31\u76f8\u4e92\u7b49\u5f85\uff0c\u4ece\u800c\u4ea7\u751f\u6b7b\u9501\u3002 \u4e3a\u4e86\u907f\u514d\u6d41\u91cf\u63a7\u5236\u5f15\u53d1\u7684\u6b7b\u9501\uff0cTCP\u4f7f\u7528\u4e86\u6301\u7eed\u8ba1\u65f6\u5668\u3002\u6bcf\u5f53\u53d1\u9001\u8005\u6536\u5230\u4e00\u4e2a\u96f6\u7a97\u53e3\u7684\u5e94\u7b54\u540e\u5c31\u542f\u52a8\u8be5\u8ba1\u65f6\u5668\u3002 \u65f6\u95f4\u4e00\u5230\u4fbf\u4e3b\u52a8\u53d1\u9001\u62a5\u6587\u8be2\u95ee\u63a5\u6536\u8005\u7684\u7a97\u53e3\u5927\u5c0f\u3002\u82e5\u63a5\u6536\u8005\u4ecd\u7136\u8fd4\u56de\u96f6\u7a97\u53e3\uff0c\u5219\u91cd\u7f6e\u8be5\u8ba1\u65f6\u5668\u7ee7\u7eed\u7b49\u5f85\uff1b \u82e5\u7a97\u53e3\u4e0d\u4e3a0\uff0c\u6b64\u65f6\u91cd\u7f6e\u53d1\u9001\u7a97\u53e3\u540e\u5f00\u59cb\u53d1\u9001\uff0c\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u6b7b\u9501\u7684\u4ea7\u751f\u3002 \u4e09\u6b21\u63e1\u624b\u548c\u56db\u6b21\u6325\u624b \u4e09\u6b21\u63e1\u624b : \u7b2c\u4e00\u6b65\uff1a\u5ba2\u6237\u7aefTCP\u5411\u670d\u52a1\u7aefTCP\u53d1\u9001\u4e00\u4e2a\u7279\u6b8a\u62a5\u6587\u6bb5\uff0c\u8868\u793a\u5e0c\u671b\u5efa\u7acb\u8fde\u63a5\uff0c\u8be5\u62a5\u6587\u6bb5\u4e0d\u5305\u542b\u5e94\u7528\u5c42\u6570\u636e\uff0c\u968f\u673a\u521d\u59cb\u5316\u5e8f\u53f7\u5b57\u6bb5 \u6807\u5fd7\u4f4d\u4e2d\u7684SYN\u88ab\u7f6e\u4e3a1\uff0c\u88ab\u79f0\u4e3aSYN\u62a5\u6587\u6bb5\u3002 \u7b2c\u4e8c\u6b65\uff1a\u670d\u52a1\u7aef\u63a5\u6536\u5230\u5ba2\u6237\u7aef\u53d1\u9001\u7684SYN\u62a5\u6587\uff0c\u4e3a\u8be5TCP\u8fde\u63a5\u5206\u914dTCP\u7f13\u5b58\u548c\u53d8\u91cf\uff0c \u5e76\u5411\u5ba2\u6237\u7aefTCP\u53d1\u9001\u5141\u8bb8\u8fde\u63a5\u7684TCP\u62a5\u6587\u6bb5\uff0c\u8be5\u62a5\u6587\u6bb5\u968f\u673a\u521d\u59cb\u5316\u5e8f\u53f7\u5b57\u6bb5\uff0c\u786e\u8ba4\u53f7\u5b57\u6bb5\u4e3a\u6536\u5230\u7684\u5ba2\u6237\u7aef\u5e8f\u53f7\u503c+1\uff0c SYN\u6807\u5fd7\u4f4d\u548cACK\u6807\u5fd7\u4f4d\u88ab\u7f6e1\uff0c\u8be5\u62a5\u6587\u6bb5\u88ab\u79f0\u4e3aSYNACK\u62a5\u6587\u6bb5\u3002 \u7b2c\u4e09\u6b65\uff1a\u5728\u6536\u5230SYNACK\u62a5\u6587\u6bb5\u540e\uff0c\u5ba2\u6237\u7aef\u4e5f\u8981\u7ed9\u8fde\u63a5\u5206\u914d\u7f13\u5b58\u548c\u53d8\u91cf\uff0c\u7136\u540e\u5411\u670d\u52a1\u5668\u53d1\u9001\u5e94\u7b54\u62a5\u6587\uff0c \u8be5\u62a5\u6587ACK\u6807\u5fd7\u4f4d\u7f6e1\uff0cSYN\u6807\u5fd7\u4f4d\u7f6e0\uff0c\u786e\u8ba4\u53f7\u5b57\u6bb5\u4e3a\u6536\u5230\u7684\u670d\u52a1\u7aef\u5e8f\u53f7\u503c+1\uff0c\u7136\u540e\u5c06\u62a5\u6587\u53d1\u9001\u7ed9\u670d\u52a1\u7aef\u3002 \u6b64\u6b21\u62a5\u6587\u53ef\u4ee5\u643a\u5e26\u5ba2\u6237\u5230\u670d\u52a1\u5668\u7684\u6570\u636e\u3002 \u4e3a\u4ec0\u4e48\u8981\u4e09\u6b21\u63e1\u624b : \u9996\u8981\u539f\u56e0\uff0c\u4e3a\u4e86\u9632\u6b62\u5df2\u5931\u6548\u7684\u8fde\u63a5\u8bf7\u6c42\u62a5\u6587\u6bb5\u5728\u7f51\u7edc\u5ef6\u8fdf\u540e\u53c8\u5230\u8fbe\u4e86\u670d\u52a1\u7aef\uff0c\u4ea7\u751f\u9519\u8bef\u8fde\u63a5\u3002 client\u53d1\u51fa\u8fde\u63a5\u8bf7\u6c42\uff0c\u4f46\u56e0\u8fde\u63a5\u8bf7\u6c42\u62a5\u6587\u672a\u88abserver\u63a5\u6536(\u53ef\u80fd\u4e22\u5931\u6216\u8005\u5ef6\u8fdf)\uff0c\u56e0\u6b64\u6ca1\u6709\u6536\u5230\u786e\u8ba4\u3002 \u4e8e\u662fA\u518d\u91cd\u4f20\u4e00\u6b21\u8bf7\u6c42\u8fde\u63a5\u3002\u540e\u6765\u6536\u5230\u4e86\u786e\u8ba4\uff0c\u5efa\u7acb\u4e86\u8fde\u63a5\u3002\u6570\u636e\u4f20\u8f93\u5b8c\u6bd5\u540e\uff0c\u5c31\u91ca\u653e\u4e86\u8fde\u63a5\u3002 \u4f46\u7b2c\u4e00\u6b21\u53d1\u9001\u7684\u8bf7\u6c42\u8fde\u63a5\u62a5\u6587\u5728\u8fde\u63a5\u91ca\u653e\u540e\u4e5f\u5230\u8fbeserver\uff0c\u867d\u7136\u8fd9\u662f\u4e00\u4e2a\u65e9\u5df2\u5931\u6548\u7684\u62a5\u6587\u6bb5\u3002 \u4f46server\u6536\u5230\u6b64\u5931\u6548\u7684\u8fde\u63a5\u8bf7\u6c42\u62a5\u6587\u6bb5\u540e\uff0c\u8bef\u8ba4\u4e3a\u662fclient\u518d\u6b21\u53d1\u51fa\u7684\u4e00\u4e2a\u65b0\u7684\u8fde\u63a5\u8bf7\u6c42\u3002 \u4e8e\u662f\u5c31\u5411client\u53d1\u51fa\u786e\u8ba4\u62a5\u6587\u6bb5\uff0c\u540c\u610f\u5efa\u7acb\u8fde\u63a5\u3002\u5047\u8bbe\u4e0d\u91c7\u7528\u201c\u4e09\u6b21\u63e1\u624b\u201d\uff0c\u90a3\u4e48\u53ea\u8981server\u53d1\u51fa\u786e\u8ba4\uff0c \u65b0\u7684\u8fde\u63a5\u5c31\u5efa\u7acb\u4e86\u3002\u7531\u4e8e\u73b0\u5728client\u5e76\u6ca1\u6709\u53d1\u51fa\u5efa\u7acb\u8fde\u63a5\u7684\u8bf7\u6c42\uff0c\u4e0d\u4f1a\u5411server\u53d1\u9001\u6570\u636e\u3002 \u4f46server\u4e00\u76f4\u7b49\u5f85client\u53d1\u6765\u6570\u636e\u3002\u8fd9\u6837\uff0cserver\u5c06\u6d6a\u8d39\u8bb8\u591a\u8d44\u6e90\u5728\u7b49\u5f85\u3002 \u5982\u679c\u662f\u4e09\u6b21\u63e1\u624b\uff0c\u5ba2\u6237\u7aef\u5219\u53ef\u4ee5\u53d1\u9001RST\u62a5\u6587\u7ed9\u670d\u52a1\u7aef\uff0c\u4e2d\u6b62\u6b64\u6b21\u8fde\u63a5\u3002 \u7b2c\u4e8c\u4e2a\u539f\u56e0\uff0c\u662f\u4e3a\u4e86\u540c\u6b65\u53cc\u65b9\u521d\u59cb\u5e8f\u5217\u53f7\uff0c\u4e24\u6b21\u63e1\u624b\u867d\u7136\u8ba9\u53cc\u65b9\u5c31\u53d1\u9001\u7aef\u7684\u5e8f\u5217\u53f7\u8fbe\u6210\u540c\u6b65\uff0c \u4f46TCP\u8fde\u63a5\u662f\u53cc\u5411\u7684\uff0c\u56e0\u6b64\u4e5f\u9700\u8981\u5c31\u670d\u52a1\u7aef\u7684\u5e8f\u5217\u53f7\u8fbe\u6210\u540c\u6b65\uff1b \u4f46\u6b64\u65f6\u65e0\u6cd5\u786e\u4fddclient\u6536\u5230server\u8fd4\u56de\u7684\u786e\u8ba4\u62a5\u6587\uff0c\u56e0\u6b64\u53cc\u65b9\u65e0\u6cd5\u5c31\u670d\u52a1\u7aef\u5e8f\u5217\u53f7\u8fbe\u6210\u540c\u6b65\u3002 \u56db\u6b21\u63e1\u624b\u4e5f\u53ef\u4ee5\u5b9e\u73b0\u76ee\u7684\uff0c\u4f46\u7531\u4e8e\u4e09\u6b21\u63e1\u624b\u5373\u53ef\u5b9e\u73b0\u9700\u6c42\uff0c\u6240\u4ee5\u65e0\u9700\u989d\u5916\u7684\u786e\u8ba4\u3002 \u56db\u6b21\u6325\u624b : 1\u3001\u5ba2\u6237\u7aef\u6253\u7b97\u5173\u95ed\u8fde\u63a5\uff0c\u4f1a\u53d1\u9001\u4e00\u4e2a\u7279\u6b8a\u62a5\u6587\uff0c\u8be5TCP\u62a5\u6587\u6bb5\u7684FIN\u6807\u5fd7\u4f4d\u7f6e1\uff1b 2\u3001\u670d\u52a1\u7aef\u63a5\u6536\u5230FIN\u62a5\u6587\uff0c\u4f1a\u5411\u5ba2\u6237\u7aef\u53d1\u9001ACK\u5e94\u7b54\u62a5\u6587\uff1b\u5ba2\u6237\u7aef\u63a5\u6536\u5230ACK\u62a5\u6587\uff0c\u4fbf\u4e0d\u4f1a\u518d\u91cd\u53d1FIN\u62a5\u6587 3\u3001\u670d\u52a1\u7aef\u5904\u7406\u5b8c\u6570\u636e\u540e\uff0c\u5411\u5ba2\u6237\u7aef\u53d1\u9001FIN\u62a5\u6587\uff1b(\u57282\u30013\u671f\u95f4\uff0cclient\u53ef\u4ee5\u6b63\u5e38\u63a5\u6536\u6570\u636e\u548c\u8fd4\u56deACK\u62a5\u6587) 4\u3001\u5ba2\u6237\u7aef\u63a5\u6536\u5230\u670d\u52a1\u7aef\u7684FIN\u62a5\u6587\u540e\uff0c\u4e5f\u4f1a\u56de\u590d\u4e00\u4e2aACK\u62a5\u6587\uff0c\u7136\u540e\u8fdb\u5165TIME_WAIT\u72b6\u6001\u3002 5\u3001\u670d\u52a1\u5668\u6536\u5230ACK\u62a5\u6587\u540e\uff0c\u5c31\u8fdb\u5165close\u72b6\u6001\uff0c\u5b8c\u6210\u8fde\u63a5\u7684\u5173\u95ed\u3002 \u5ba2\u6237\u7aef\u5728\u7b49\u5f852MSL\u540e\uff0c\u81ea\u52a8\u8fdb\u5165close\u72b6\u6001\uff0c\u5ba2\u6237\u7aef\u4e5f\u5b8c\u6210\u8fde\u63a5\u7684\u5173\u95ed\u3002 \u4e3a\u4ec0\u4e48\u9700\u8981\u56db\u6b21\u6325\u624b \u670d\u52a1\u7aef\u901a\u5e38\u9700\u8981\u7b49\u5f85\u5b8c\u6210\u6570\u636e\u7684\u53d1\u9001\u548c\u5904\u7406\uff0c\u56e0\u6b64\u670d\u52a1\u7aef\u7684ACK\u548cFIN\u62a5\u6587\u662f\u5206\u5f00\u53d1\u9001\u7684\uff0c \u4ece\u800c\u6bd4\u4e09\u6b21\u63e1\u624b\u591a\u4e00\u6b21\u3002 MSL\uff1amaximum segment lifetime, \u62a5\u6587\u6700\u5927\u751f\u5b58\u65f6\u95f4 \u4e3a\u4ec0\u4e48\u9700\u8981TIME_WAIT\u72b6\u6001 \uff1a 1\u3001\u786e\u4fdd\u4e3b\u52a8\u5173\u95ed\u65b9\u53d1\u9001\u7684ACK\u5e94\u7b54\u62a5\u6587\u88ab\u6b63\u786e\u63a5\u6536:\u901a\u5e38\u53ea\u6709\u4e3b\u52a8\u5173\u95ed\u65b9\u624d\u4f1a\u8fdb\u5165TIME_WAIT\u72b6\u6001\uff0c \u5047\u5982\u5ba2\u6237\u7aef\u662f\u4e3b\u52a8\u5173\u95ed\u65b9\uff0c\u800c\u5ba2\u6237\u7aef\u5728\u63a5\u53d7\u5230\u670d\u52a1\u7aef\u7684FIN\u62a5\u6587\u540e\uff0c\u5411\u670d\u52a1\u7aef\u53d1\u9001ACK\u62a5\u6587\u540e\uff0c\u76f4\u63a5\u8fdb\u5165close\u72b6\u6001\uff0c \u5220\u9664\u5957\u63a5\u5b57\uff1b\u800c\u8be5ACK\u62a5\u6587\u4e22\u5931\uff0c\u670d\u52a1\u7aef\u5728\u7b49\u5f85\u8d85\u65f6\u540e\uff0c\u5c31\u4f1a\u91cd\u53d1FIN\u62a5\u6587\uff1b \u5f53\u670d\u52a1\u7aef\u91cd\u53d1\u7684FIN\u62a5\u6587\u5230\u8fbe\u5ba2\u6237\u7aef\u65f6\uff0c\u5ba2\u6237\u7aef\u4f1a\u8ba4\u4e3a\u5176\u662f\u4e00\u4e2a\u975e\u6cd5\u62a5\u6587\u6bb5\uff0c\u4e8e\u662f\u8fd4\u56de\u4e00\u4e2aRST\u62a5\u6587\uff0c \u8868\u793a\u8fde\u63a5\u5f02\u5e38\u8981\u6c42\u5f3a\u5236\u5173\u95ed\u8fde\u63a5\uff0c\u5219\u670d\u52a1\u5668\u7aef\u5957\u63a5\u5b57\u4e0d\u80fd\u8fdb\u5165\u6b63\u5e38\u7684\u5173\u95ed\u72b6\u6001\u3002 2\u3001\u786e\u4fdd\u5386\u53f2\u8fde\u63a5\u8fc7\u7a0b\u7684\u6570\u636e\u5305\u5728\u7f51\u7edc\u4e2d\u8fc7\u671f\u800c\u6d88\u5931: \u5728\u7b2c\u56db\u6b21\u6325\u624b\u540e\uff0c\u7ecf\u8fc72msl\u7684\u65f6\u95f4\u8db3\u4ee5\u8ba9\u672c\u6b21\u8fde\u63a5\u4ea7\u751f\u7684\u6240\u6709\u62a5\u6587\u6bb5\u90fd\u4ece\u7f51\u7edc\u4e2d\u6d88\u5931\uff0c \u8fd9\u6837\u4e0b\u4e00\u6b21\u65b0\u7684\u8fde\u63a5\u4e2d\u5c31\u80af\u5b9a\u4e0d\u4f1a\u51fa\u73b0\u65e7\u8fde\u63a5\u7684\u62a5\u6587\u6bb5\u4e86; \u6ca1\u6709time-wait, \u5982\u679c\u6b64\u65f6\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u53c8\u5efa\u7acb\u4e86\u65b0\u7684TCP\u8fde\u63a5\uff0c\u4e14\u548c\u5386\u53f2\u8fde\u63a5\u91c7\u7528\u4e86\u76f8\u540c\u7684\u7aef\u53e3\uff0c \u800c\u5386\u53f2\u8fde\u63a5\u7684\u6570\u636e\u5305\u53ef\u80fd\u5728\u5ef6\u8fdf\u540e\u5230\u8fbe\u63a5\u6536\u7aef\uff0c\u4f1a\u88ab\u5f53\u6210\u6b64\u6b21\u8fde\u63a5\u4e2d\u7684\u6570\u636e\u5305\u800c\u6b63\u5e38\u63a5\u6536\uff0c\u4ece\u800c\u9020\u6210\u6570\u636e\u9519\u4e71\u3002 SYN cookie \u2003SYN Cookie\u662f\u5bf9TCP\u670d\u52a1\u5668\u7aef\u7684\u4e09\u6b21\u63e1\u624b\u534f\u8bae\u4f5c\u4e00\u4e9b\u4fee\u6539\uff0c\u4e13\u95e8\u7528\u6765\u9632\u8303SYN Flood\u653b\u51fb\u7684\u4e00\u79cd\u624b\u6bb5\u3002\u5b83\u7684\u539f\u7406\u662f\uff0c\u5728TCP\u670d\u52a1\u5668\u6536\u5230\u53d1\u9001\u65b9SYN\u6570\u636e\u5305\u5e76\u8fd4\u56deSYNACK\u6570\u636e\u5305\u65f6\uff0c\u4e0d\u4f1a\u5148\u4e3a\u8be5TCP\u8fde\u63a5\u5206\u914d\u7f13\u5b58\uff0c\u800c\u662f\u6839\u636e\u8fd9\u4e2aSYN\u6570\u636e\u5305\u8ba1\u7b97\u51fa\u4e00\u4e2acookie\u503c\u3002\u5728\u6536\u5230\u53d1\u9001\u65b9\u8fd4\u56de\u7684ACK\u6570\u636e\u5305\u65f6\uff0c\u670d\u52a1\u5668\u6839\u636ecookie\u503c\u68c0\u67e5\u8fd9\u4e2aACK\u6570\u636e\u5305\u7684\u5408\u6cd5\u6027\u3002\u5982\u679c\u5408\u6cd5\uff0c\u518d\u5206\u914d\u4e13\u95e8\u7684\u6570\u636e\u533a\u8fdb\u884c\u5904\u7406\u672a\u6765\u7684TCP\u8fde\u63a5\u3002 TCP\u62e5\u585e\u63a7\u5236 \u6d41\u91cf\u63a7\u5236\u4e0e\u62e5\u585e\u63a7\u5236 \u62e5\u585e\u63a7\u5236\uff1a\u62e5\u585e\u63a7\u5236\u662f\u4f5c\u7528\u4e8e\u7f51\u7edc\u7684\uff0c\u5b83\u662f\u9632\u6b62\u8fc7\u591a\u7684\u6570\u636e\u6ce8\u5165\u5230\u7f51\u7edc\u4e2d\uff0c\u907f\u514d\u51fa\u73b0\u7f51\u7edc\u8d1f\u8f7d\u8fc7\u5927\u7684\u60c5\u51b5\uff1b \u5e38\u7528\u7684\u65b9\u6cd5\u5c31\u662f\uff1a\uff08 1 \uff09\u6162\u5f00\u59cb\u3001\u62e5\u585e\u907f\u514d\uff08 2 \uff09\u5feb\u91cd\u4f20\u3001\u5feb\u6062\u590d\u3002 \u6d41\u91cf\u63a7\u5236\uff1a\u6d41\u91cf\u63a7\u5236\u662f\u4f5c\u7528\u4e8e\u63a5\u6536\u8005\u7684\uff0c\u5b83\u662f\u63a7\u5236\u53d1\u9001\u8005\u7684\u53d1\u9001\u901f\u5ea6\u4ece\u800c\u4f7f\u63a5\u6536\u8005\u6765\u5f97\u53ca\u63a5\u6536\uff0c\u9632\u6b62\u5206\u7ec4\u4e22\u5931\u3002","title":"TCP"},{"location":"Network/2_transport/#tcpudp","text":"\u8fde\u63a5 TCP \u662f\u9762\u5411\u8fde\u63a5\u7684\u4f20\u8f93\u5c42\u534f\u8bae\uff0c\u4f20\u8f93\u6570\u636e\u524d\u5148\u8981\u5efa\u7acb\u8fde\u63a5\u3002 UDP \u662f\u4e0d\u9700\u8981\u8fde\u63a5\uff0c\u5373\u523b\u4f20\u8f93\u6570\u636e\u3002 \u670d\u52a1\u5bf9\u8c61 TCP \u662f\u4e00\u5bf9\u4e00\u7684\u4e24\u70b9\u670d\u52a1\uff0c\u5373\u4e00\u6761\u8fde\u63a5\u53ea\u6709\u4e24\u4e2a\u7aef\u70b9\u3002 UDP \u652f\u6301\u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a\u3001\u591a\u5bf9\u591a\u7684\u4ea4\u4e92\u901a\u4fe1\u3002 \u6240\u4ee5\u57fa\u4e8e\u5e7f\u64ad\u548c\u591a\u64ad(\u76ee\u6807\u662f\u591a\u4e2a\u4e3b\u673a\u5730\u5740)\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u80fd\u4f7f\u7528TCP\u670d\u52a1\uff0c\u800cUDP\u5219\u975e\u5e38\u9002\u5408\u5e7f\u64ad\u548c\u591a\u64ad\u3002 \u53ef\u9760\u6027 TCP \u662f\u53ef\u9760\u4ea4\u4ed8\u6570\u636e\u7684\uff0c\u6570\u636e\u53ef\u4ee5\u65e0\u5dee\u9519\u3001\u4e0d\u4e22\u5931\u3001\u4e0d\u91cd\u590d\u3001\u6309\u9700\u5230\u8fbe\u3002 UDP \u662f\u5c3d\u6700\u5927\u52aa\u529b\u4ea4\u4ed8\uff0c\u4e0d\u4fdd\u8bc1\u53ef\u9760\u4ea4\u4ed8\u6570\u636e\u3002 \u62e5\u585e\u63a7\u5236\u3001\u6d41\u91cf\u63a7\u5236 TCP \u6709\u62e5\u585e\u63a7\u5236\u548c\u6d41\u91cf\u63a7\u5236\u673a\u5236\uff0c\u4fdd\u8bc1\u6570\u636e\u4f20\u8f93\u7684\u5b89\u5168\u6027\u3002 UDP \u5219\u6ca1\u6709\uff0c\u5373\u4f7f\u7f51\u7edc\u975e\u5e38\u62e5\u5835\u4e86\uff0c\u4e5f\u4e0d\u4f1a\u5f71\u54cd UDP \u7684\u53d1\u9001\u901f\u7387\u3002 \u9996\u90e8\u5f00\u9500 TCP \u9996\u90e8\u957f\u5ea6\u8f83\u957f\uff0c\u4f1a\u6709\u4e00\u5b9a\u7684\u5f00\u9500\uff0c\u9996\u90e8\u5728\u6ca1\u6709\u4f7f\u7528\u300c\u9009\u9879\u300d\u5b57\u6bb5\u65f6\u662f 20 \u4e2a\u5b57\u8282\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u300c\u9009\u9879\u300d\u5b57\u6bb5\u5219\u4f1a\u53d8\u957f\u7684\u3002 UDP \u9996\u90e8\u53ea\u6709 8 \u4e2a\u5b57\u8282\uff0c\u5e76\u4e14\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\uff0c\u5f00\u9500\u8f83\u5c0f\u3002 TCP\u662f\u9762\u5411\u5b57\u8282\u6d41\u7684 \uff0c\u5176\u5c06\u5e94\u7528\u5c42\u4f20\u9012\u7684\u6570\u636e\u770b\u6210\u65e0\u7ed3\u6784\u7684\u5b57\u8282\u6d41\uff0cTCP\u6709\u4e00\u4e2a\u7f13\u51b2\uff0c\u5f53\u5e94\u7528\u7a0b\u5e8f\u4f20\u9001\u7684\u6570\u636e\u5757\u592a\u957f\uff0cTCP\u5c31\u53ef\u4ee5\u628a\u5b83\u5212\u5206\u77ed\u4e00\u4e9b\u518d\u4f20\u9001\u3002\u5982\u679c\u5e94\u7528\u7a0b\u5e8f\u4e00\u6b21\u53ea\u53d1\u9001\u4e00\u4e2a\u5b57\u8282\uff0cTCP\u4e5f\u53ef\u4ee5\u7b49\u5f85\u79ef\u7d2f\u6709\u8db3\u591f\u591a\u7684\u5b57\u8282\u540e\u518d\u6784\u6210\u62a5\u6587\u6bb5\u53d1\u9001\u51fa\u53bb\u3002\u5e76\u4e14\u6839\u636e\u5f53\u524d\u7f51\u7edc\u7684\u62e5\u585e\u7a0b\u5ea6\u6765\u51b3\u5b9a\u6bcf\u4e2a\u62a5\u6587\u6bb5\u5927\u5c0f\uff1b UDP\u662f\u9762\u5411\u6570\u636e\u5305\u7684 \uff1a\u53d1\u9001\u65b9\u7684UDP\u5bf9\u5e94\u7528\u5c42\u4ea4\u4e0b\u6765\u7684\u62a5\u6587\uff0c\u4e0d\u5408\u5e76\uff0c\u4e0d\u62c6\u5206\uff0c\u53ea\u662f\u5728\u5176\u4e0a\u9762\u52a0\u4e0a\u9996\u90e8\u540e\u5c31\u4ea4\u7ed9\u4e86\u4e0b\u9762\u7684\u7f51\u7edc\u5c42\uff1b\u5bf9\u4e8e\u8fc7\u957f\u7684\u62a5\u6587\u6bb5\uff0c\u5728\u7f51\u7edc\u5c42\uff0c\u4f1a\u9488\u5bf9IP\u6570\u636e\u62a5\u8fdb\u884c\u5206\u7247\u3002","title":"TCP\u4e0eUDP\u4e0d\u540c"},{"location":"Network/3_network/","text":"\u7f51\u7edc\u5c42 \u7f51\u7edc\u5c42 \u7f51\u7edc\u5c42\u670d\u52a1\u6a21\u578b Internet\u7f51\u7edc\u5c42 \u2003 IP\u6570\u636e\u62a5\u9996\u90e8\u957f\u5ea6\u8303\u56f4\u4e3a20~60\u5b57\u8282\u3002\u53d1\u9001IP\u5206\u7247\u65f6\uff0c\u6bcf\u4e2a\u7247\u6bb5\u7684\u6700\u5927\u957f\u5ea6\u7b49\u4e8eMTU\u51cf\u53bbIP\u6570\u636e\u62a5\u9996\u90e8\u957f\u5ea6\uff0c \u4e14\u5e94\u8be5\u662f8\u7684\u500d\u6570( \u8ba1\u7b97\u8fc7\u7a0b\u5982\u56fe )\u3002 \u2003 IPV4\u901a\u8fc7\u6807\u8bc6\u3001\u6807\u5fd7\u548c\u7247\u504f\u79fb\u5b57\u6bb5\u6765\u786e\u5b9a\u5206\u7247\u7684\u76f8\u5bf9\u987a\u5e8f\uff1b IP\u5730\u5740 \u79c1\u6709\u5730\u5740 : \u8fd9\u4e9b\u5730\u5740\u662f\u4e0d\u4f1a\u88abInternet\u5206\u914d\u7684\uff0c\u5b83\u4eec\u5728Internet\u4e0a\u4e5f\u4e0d\u4f1a\u88ab\u8def\u7531\uff0c\u867d\u7136\u5b83\u4eec\u4e0d\u80fd\u76f4\u63a5\u548cInternet\u7f51\u8fde\u63a5\uff0c \u4f46\u901a\u8fc7\u6280\u672f\u624b\u6bb5\u4ecd\u65e7\u53ef\u4ee5\u548c Internet\u901a\u8baf\uff08NAT\u6280\u672f\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6765\u9009\u62e9\u9002\u5f53\u7684\u5730\u5740\u7c7b\uff0c\u5728\u5185\u90e8\u5c40\u57df\u7f51\u4e2d\u5c06\u8fd9\u4e9b\u5730\u5740\u50cf\u516c\u7528IP\u5730\u5740\u4e00\u6837\u5730\u4f7f\u7528\u3002 A: 10.0.0.0~10.255.255.255 \u537310.0.0.0/8 B: 172.16.0.0~172.31.255.255\u5373172.16.0.0/12 C: 192.168.0.0~192.168.255.255 \u5373192.168.0.0/16 \u5e7f\u64ad : \u5728\u540c\u2f00\u4e2a\u94fe\u8def\u4e2d\u76f8\u4e92\u8fde\u63a5\u7684\u4e3b\u673a\u4e4b\u95f4\u53d1\u9001\u6570\u636e\u5305(\u5373\u672c\u5730\u5e7f\u64ad), \u4e14\u8def\u7531\u5668\u4e0d\u4f1a\u8f6c\u53d1\u5e7f\u64ad(\u5373\u4f1a\u5c4f\u853d\u6240\u6709IP\u5730\u5740\u5168\u4e3a1\u7684\u6570\u636e\u5305) \u76f4\u63a5\u5e7f\u64ad : \u5728\u4e0d\u540c\u2f79\u7edc\u4e4b\u95f4\u7684\u2f34\u64ad\u53eb\u505a\u76f4\u63a5\u2f34\u64ad, \u5bf9\u7279\u5b9a\u7f51\u7edc\u4e0a\u7684\u6240\u6709\u4e3b\u673a\u8fdb\u884c\u5e7f\u64ad \u7ec4\u64ad \u591a\u64ad\u2f64\u4e8e\u5c06\u5305\u53d1\u9001\u7ed9\u7279\u5b9a\u7ec4\u5185\u7684\u6240\u6709\u4e3b\u673a\u3002\u8fd9\u4e2a\u7279\u5b9a\u7ec4\u53ef\u4ee5\u5728\u672c\u7f51\u5185\uff0c\u4e5f\u53ef\u4ee5\u8de8\u8def\u7531\u5668\u3002 1\u3001\u5ba2\u6237\u673a\u901a\u8fc7UDP\u5206\u7ec4\u53d1\u9001DHCP\u53d1\u73b0\u62a5\u6587\uff0c\u5176\u4e2d\u6e90\u5730\u5740\u4e3a0.0.0.0\uff0c\u8868\u793a\u672c\u673a\uff0c \u76ee\u7684\u5730\u5740\u4e3a255.255.255.255\uff0c\u8868\u793a\u672c\u7f51\u5e7f\u64ad\u5730\u5740\uff0c\u56e0\u6b64\u4f1a\u5411\u672c\u7f51\u5185\u7684\u6240\u6709\u4e3b\u673a\u53d1\u9001\u62a5\u6587\u3002 2\u3001DHCP\u670d\u52a1\u5668\u63a5\u6536\u5230\u53d1\u73b0\u62a5\u6587\u540e\uff0c\u901a\u8fc7DHCP\u63d0\u4f9b\u62a5\u6587\u5411\u5ba2\u6237\u4f5c\u51fa\u54cd\u5e94\uff0c\u5176\u76ee\u7684\u5730\u5740\u4e3a255.255.255.255( \u56e0\u4e3a\u6b64\u65f6\u5ba2\u6237\u673a\u5c1a\u672a\u6709\u81ea\u5df1\u7684IP\u5730\u5740\uff0c\u6240\u4ee5\u901a\u8fc7\u5e7f\u64ad\u5f62\u5f0f)\u3002 \u65e0\u7c7b\u522b\u57df\u95f4\u8def\u7531\u9009\u62e9(Classes Interdomain Routing, CIDR) \u2003\u5f62\u5f0f\u4e3aa.b.c.d/x\uff0c\u5176\u4e2dx\u6307\u793a\u4e86NetId\u7684\u957f\u5ea6\uff0c\u5269\u4f59\u768432-x\u4f4d\u7528\u6765\u533a\u5206\u7ec4\u7ec7\u5185\u90e8\u8bbe\u5907\uff1b \u4e00\u4e2a\u7ec4\u7ec7\u901a\u5e38\u88ab\u5206\u914d\u4e00\u5757\u8fde\u7eed\u7684\u5730\u5740\uff0c\u5373\u5177\u6709\u76f8\u540c\u524d\u7f00\u7684\u7684\u4e00\u6bb5\u5730\u5740\uff1b \u8fd9\u6837\u8be5\u7ec4\u7ec7\u5185\u90e8\u7684\u8bbe\u5907\u7684IP\u5730\u5740\u5c06\u5171\u4eab\u5171\u540c\u7684\u524d\u7f00\u3002\u8fd9\u79cd\u4f7f\u7528\u5355\u4e2a\u7f51\u7edc\u524d\u7f00\u901a\u544a\u591a\u4e2a\u7f51\u7edc\u7684\u80fd\u529b\u79f0\u4e3a\u5730\u5740\u805a\u5408\u6216\u8005\u8def\u7531\u805a\u5408\u3002 \u7f51\u7edc\u5730\u5740\u8f6c\u6362 ICMP \u5e38\u89c1ICMP\u6d88\u606f\u7c7b\u578b traceroute: \u662f\u6545\u610f\u8bbe\u7f6e\u7279\u6b8a\u7684TTL\uff0c\u6765\u8ffd\u8e2a\u53bb\u5f80\u2f6c\u7684\u5730\u65f6\u6cbf\u9014\u7ecf\u8fc7\u7684\u8def\u7531\u5668\uff0c \u5229\u2f64IP\u5305\u7684\u2f63\u5b58\u671f\u9650\u4ece1\u5f00\u59cb\u6309\u7167\u987a\u5e8f\u9012\u589e\u7684\u540c\u65f6\u53d1\u9001UDP\u5305\uff0c\u5f3a\u5236\u63a5\u6536ICMP\u8d85\u65f6\u6d88\u606f\uff0c \u4f8b\u5982\u8bbe\u7f6eTTL\u4e3a5\uff0c\u5219\u5230\u8fbe\u7b2c\u4e94\u4e2a\u8def\u7531\u5668\u65f6\uff0c\u8be5\u62a5\u6587\u8d85\u65f6\u88ab\u4e22\u5f03\uff0c\u8be5\u8def\u7531\u5668\u4f1a\u5411\u53d1\u9001\u7aef\u8fd4\u56de\u4e00\u4e2aICMP\u8d85\u65f6\u62a5\u6587\uff0c \u53d1\u9001\u7aef\u6839\u636e\u63a5\u6536\u5230\u8be5\u62a5\u6587\u4e0e\u53d1\u9001\u8be5\u62a5\u6587\u7684\u65f6\u95f4\u5dee\uff0c\u53ef\u4ee5\u5f97\u5230\u5176\u4e0e\u7b2c\u4e94\u4e2a\u8def\u7531\u5668\u4e4b\u95f4\u7684RTT\u3002 traceroute \u5728\u53d1\u9001 UDP \u5305\u65f6\uff0c\u4f1a\u586b\u2f0a\u2f00\u4e2a\u4e0d\u53ef\u80fd\u7684\u7aef\u2f1d\u53f7\u503c\u4f5c\u4e3a UDP \u2f6c\u6807\u7aef\u2f1d\u53f7\uff08\u2f24\u4e8e 3000 \uff09\u3002 \u5f53\u2f6c\u7684\u4e3b\u673a\u6536\u5230 UDP \u5305\u540e\uff0c\u4f1a\u8fd4\u56de ICMP \u5dee\u9519\u62a5\u2f42\u6d88\u606f\uff0c\u4f46\u8fd9\u4e2a\u5dee\u9519\u62a5\u2f42\u6d88\u606f\u7684\u7c7b\u578b\u662f\u300c\u7aef\u2f1d\u4e0d\u53ef \u8fbe\u300d\u3002\u6240\u4ee5\uff0c\u5f53\u5dee\u9519\u62a5\u2f42\u7c7b\u578b\u662f\u7aef\u2f1d\u4e0d\u53ef\u8fbe\u65f6\uff0c\u8bf4\u660e\u53d1\u9001\u2f45\u53d1\u51fa\u7684 UDP \u5305\u5230\u8fbe\u4e86\u2f6c\u7684\u4e3b\u673a\u3002 IPV6 \u5c42\u6b21\u8def\u7531","title":"network"},{"location":"Network/3_network/#_1","text":"","title":"\u7f51\u7edc\u5c42"},{"location":"Network/3_network/#_2","text":"","title":"\u7f51\u7edc\u5c42"},{"location":"Network/3_network/#_3","text":"","title":"\u7f51\u7edc\u5c42\u670d\u52a1\u6a21\u578b"},{"location":"Network/3_network/#internet","text":"IP\u6570\u636e\u62a5\u9996\u90e8\u957f\u5ea6\u8303\u56f4\u4e3a20~60\u5b57\u8282\u3002\u53d1\u9001IP\u5206\u7247\u65f6\uff0c\u6bcf\u4e2a\u7247\u6bb5\u7684\u6700\u5927\u957f\u5ea6\u7b49\u4e8eMTU\u51cf\u53bbIP\u6570\u636e\u62a5\u9996\u90e8\u957f\u5ea6\uff0c \u4e14\u5e94\u8be5\u662f8\u7684\u500d\u6570( \u8ba1\u7b97\u8fc7\u7a0b\u5982\u56fe )\u3002 \u2003 IPV4\u901a\u8fc7\u6807\u8bc6\u3001\u6807\u5fd7\u548c\u7247\u504f\u79fb\u5b57\u6bb5\u6765\u786e\u5b9a\u5206\u7247\u7684\u76f8\u5bf9\u987a\u5e8f\uff1b IP\u5730\u5740 \u79c1\u6709\u5730\u5740 : \u8fd9\u4e9b\u5730\u5740\u662f\u4e0d\u4f1a\u88abInternet\u5206\u914d\u7684\uff0c\u5b83\u4eec\u5728Internet\u4e0a\u4e5f\u4e0d\u4f1a\u88ab\u8def\u7531\uff0c\u867d\u7136\u5b83\u4eec\u4e0d\u80fd\u76f4\u63a5\u548cInternet\u7f51\u8fde\u63a5\uff0c \u4f46\u901a\u8fc7\u6280\u672f\u624b\u6bb5\u4ecd\u65e7\u53ef\u4ee5\u548c Internet\u901a\u8baf\uff08NAT\u6280\u672f\uff09\u3002 \u6211\u4eec\u53ef\u4ee5\u6839\u636e\u9700\u8981\u6765\u9009\u62e9\u9002\u5f53\u7684\u5730\u5740\u7c7b\uff0c\u5728\u5185\u90e8\u5c40\u57df\u7f51\u4e2d\u5c06\u8fd9\u4e9b\u5730\u5740\u50cf\u516c\u7528IP\u5730\u5740\u4e00\u6837\u5730\u4f7f\u7528\u3002 A: 10.0.0.0~10.255.255.255 \u537310.0.0.0/8 B: 172.16.0.0~172.31.255.255\u5373172.16.0.0/12 C: 192.168.0.0~192.168.255.255 \u5373192.168.0.0/16 \u5e7f\u64ad : \u5728\u540c\u2f00\u4e2a\u94fe\u8def\u4e2d\u76f8\u4e92\u8fde\u63a5\u7684\u4e3b\u673a\u4e4b\u95f4\u53d1\u9001\u6570\u636e\u5305(\u5373\u672c\u5730\u5e7f\u64ad), \u4e14\u8def\u7531\u5668\u4e0d\u4f1a\u8f6c\u53d1\u5e7f\u64ad(\u5373\u4f1a\u5c4f\u853d\u6240\u6709IP\u5730\u5740\u5168\u4e3a1\u7684\u6570\u636e\u5305) \u76f4\u63a5\u5e7f\u64ad : \u5728\u4e0d\u540c\u2f79\u7edc\u4e4b\u95f4\u7684\u2f34\u64ad\u53eb\u505a\u76f4\u63a5\u2f34\u64ad, \u5bf9\u7279\u5b9a\u7f51\u7edc\u4e0a\u7684\u6240\u6709\u4e3b\u673a\u8fdb\u884c\u5e7f\u64ad \u7ec4\u64ad \u591a\u64ad\u2f64\u4e8e\u5c06\u5305\u53d1\u9001\u7ed9\u7279\u5b9a\u7ec4\u5185\u7684\u6240\u6709\u4e3b\u673a\u3002\u8fd9\u4e2a\u7279\u5b9a\u7ec4\u53ef\u4ee5\u5728\u672c\u7f51\u5185\uff0c\u4e5f\u53ef\u4ee5\u8de8\u8def\u7531\u5668\u3002 1\u3001\u5ba2\u6237\u673a\u901a\u8fc7UDP\u5206\u7ec4\u53d1\u9001DHCP\u53d1\u73b0\u62a5\u6587\uff0c\u5176\u4e2d\u6e90\u5730\u5740\u4e3a0.0.0.0\uff0c\u8868\u793a\u672c\u673a\uff0c \u76ee\u7684\u5730\u5740\u4e3a255.255.255.255\uff0c\u8868\u793a\u672c\u7f51\u5e7f\u64ad\u5730\u5740\uff0c\u56e0\u6b64\u4f1a\u5411\u672c\u7f51\u5185\u7684\u6240\u6709\u4e3b\u673a\u53d1\u9001\u62a5\u6587\u3002 2\u3001DHCP\u670d\u52a1\u5668\u63a5\u6536\u5230\u53d1\u73b0\u62a5\u6587\u540e\uff0c\u901a\u8fc7DHCP\u63d0\u4f9b\u62a5\u6587\u5411\u5ba2\u6237\u4f5c\u51fa\u54cd\u5e94\uff0c\u5176\u76ee\u7684\u5730\u5740\u4e3a255.255.255.255( \u56e0\u4e3a\u6b64\u65f6\u5ba2\u6237\u673a\u5c1a\u672a\u6709\u81ea\u5df1\u7684IP\u5730\u5740\uff0c\u6240\u4ee5\u901a\u8fc7\u5e7f\u64ad\u5f62\u5f0f)\u3002 \u65e0\u7c7b\u522b\u57df\u95f4\u8def\u7531\u9009\u62e9(Classes Interdomain Routing, CIDR) \u2003\u5f62\u5f0f\u4e3aa.b.c.d/x\uff0c\u5176\u4e2dx\u6307\u793a\u4e86NetId\u7684\u957f\u5ea6\uff0c\u5269\u4f59\u768432-x\u4f4d\u7528\u6765\u533a\u5206\u7ec4\u7ec7\u5185\u90e8\u8bbe\u5907\uff1b \u4e00\u4e2a\u7ec4\u7ec7\u901a\u5e38\u88ab\u5206\u914d\u4e00\u5757\u8fde\u7eed\u7684\u5730\u5740\uff0c\u5373\u5177\u6709\u76f8\u540c\u524d\u7f00\u7684\u7684\u4e00\u6bb5\u5730\u5740\uff1b \u8fd9\u6837\u8be5\u7ec4\u7ec7\u5185\u90e8\u7684\u8bbe\u5907\u7684IP\u5730\u5740\u5c06\u5171\u4eab\u5171\u540c\u7684\u524d\u7f00\u3002\u8fd9\u79cd\u4f7f\u7528\u5355\u4e2a\u7f51\u7edc\u524d\u7f00\u901a\u544a\u591a\u4e2a\u7f51\u7edc\u7684\u80fd\u529b\u79f0\u4e3a\u5730\u5740\u805a\u5408\u6216\u8005\u8def\u7531\u805a\u5408\u3002","title":"Internet\u7f51\u7edc\u5c42"},{"location":"Network/3_network/#_4","text":"","title":"\u7f51\u7edc\u5730\u5740\u8f6c\u6362"},{"location":"Network/3_network/#icmp","text":"\u5e38\u89c1ICMP\u6d88\u606f\u7c7b\u578b traceroute: \u662f\u6545\u610f\u8bbe\u7f6e\u7279\u6b8a\u7684TTL\uff0c\u6765\u8ffd\u8e2a\u53bb\u5f80\u2f6c\u7684\u5730\u65f6\u6cbf\u9014\u7ecf\u8fc7\u7684\u8def\u7531\u5668\uff0c \u5229\u2f64IP\u5305\u7684\u2f63\u5b58\u671f\u9650\u4ece1\u5f00\u59cb\u6309\u7167\u987a\u5e8f\u9012\u589e\u7684\u540c\u65f6\u53d1\u9001UDP\u5305\uff0c\u5f3a\u5236\u63a5\u6536ICMP\u8d85\u65f6\u6d88\u606f\uff0c \u4f8b\u5982\u8bbe\u7f6eTTL\u4e3a5\uff0c\u5219\u5230\u8fbe\u7b2c\u4e94\u4e2a\u8def\u7531\u5668\u65f6\uff0c\u8be5\u62a5\u6587\u8d85\u65f6\u88ab\u4e22\u5f03\uff0c\u8be5\u8def\u7531\u5668\u4f1a\u5411\u53d1\u9001\u7aef\u8fd4\u56de\u4e00\u4e2aICMP\u8d85\u65f6\u62a5\u6587\uff0c \u53d1\u9001\u7aef\u6839\u636e\u63a5\u6536\u5230\u8be5\u62a5\u6587\u4e0e\u53d1\u9001\u8be5\u62a5\u6587\u7684\u65f6\u95f4\u5dee\uff0c\u53ef\u4ee5\u5f97\u5230\u5176\u4e0e\u7b2c\u4e94\u4e2a\u8def\u7531\u5668\u4e4b\u95f4\u7684RTT\u3002 traceroute \u5728\u53d1\u9001 UDP \u5305\u65f6\uff0c\u4f1a\u586b\u2f0a\u2f00\u4e2a\u4e0d\u53ef\u80fd\u7684\u7aef\u2f1d\u53f7\u503c\u4f5c\u4e3a UDP \u2f6c\u6807\u7aef\u2f1d\u53f7\uff08\u2f24\u4e8e 3000 \uff09\u3002 \u5f53\u2f6c\u7684\u4e3b\u673a\u6536\u5230 UDP \u5305\u540e\uff0c\u4f1a\u8fd4\u56de ICMP \u5dee\u9519\u62a5\u2f42\u6d88\u606f\uff0c\u4f46\u8fd9\u4e2a\u5dee\u9519\u62a5\u2f42\u6d88\u606f\u7684\u7c7b\u578b\u662f\u300c\u7aef\u2f1d\u4e0d\u53ef \u8fbe\u300d\u3002\u6240\u4ee5\uff0c\u5f53\u5dee\u9519\u62a5\u2f42\u7c7b\u578b\u662f\u7aef\u2f1d\u4e0d\u53ef\u8fbe\u65f6\uff0c\u8bf4\u660e\u53d1\u9001\u2f45\u53d1\u51fa\u7684 UDP \u5305\u5230\u8fbe\u4e86\u2f6c\u7684\u4e3b\u673a\u3002","title":"ICMP"},{"location":"Network/3_network/#ipv6","text":"","title":"IPV6"},{"location":"Network/3_network/#_5","text":"","title":"\u5c42\u6b21\u8def\u7531"},{"location":"Network/4_link/","text":"\u94fe\u8def\u5c42 \u94fe\u8def\u5c42\u670d\u52a1 MAC\u5730\u5740\u4e0eARP\u534f\u8bae \u2003ARP\u534f\u8bae\u867d\u7136\u5de5\u4f5c\u5728\u94fe\u8def\u5c42\uff0c\u4f46\u5728TCP/IP\u534f\u8bae\u65cf\u4e2d\u5c5e\u4e8e\u7f51\u7edc\u5c42\u534f\u8bae \u4ee5\u592a\u7f51\u4e0eVLAN","title":"link"},{"location":"Network/4_link/#_1","text":"","title":"\u94fe\u8def\u5c42"},{"location":"Network/4_link/#_2","text":"","title":"\u94fe\u8def\u5c42\u670d\u52a1"},{"location":"Network/4_link/#macarp","text":"ARP\u534f\u8bae\u867d\u7136\u5de5\u4f5c\u5728\u94fe\u8def\u5c42\uff0c\u4f46\u5728TCP/IP\u534f\u8bae\u65cf\u4e2d\u5c5e\u4e8e\u7f51\u7edc\u5c42\u534f\u8bae","title":"MAC\u5730\u5740\u4e0eARP\u534f\u8bae"},{"location":"Network/4_link/#vlan","text":"","title":"\u4ee5\u592a\u7f51\u4e0eVLAN"},{"location":"Network/5_netsafe/","text":"\u7f51\u7edc\u5b89\u5168 Internet \u5b89\u5168\u5a01\u80c1 DDoS \u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1\uff0c\u5e38\u89c1\u653b\u51fb\u65b9\u5f0f\u6709: \u8d44\u6e90\u6d88\u8017\u7c7b: \u5982Syn Flood\u3001Ack Flood\u3001UDP Flood,\u901a\u8fc7\u5927\u91cf\u8bf7\u6c42\u6d88\u8017\u6b63\u5e38\u7684\u5e26\u5bbd\u548c\u534f\u8bae\u6808\u5904\u7406\u8d44\u6e90\u7684\u80fd\u529b\uff0c \u4ece\u800c\u8fbe\u5230\u670d\u52a1\u7aef\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u7684\u76ee\u7684\u3002 Syn Flood: \u653b\u51fb\u8005\u5229\u7528\u53d7\u63a7\u4e3b\u673a\u53d1\u9001\u5927\u91cf\u7684TCP SYN\u62a5\u6587\uff0c\u4f7f\u670d\u52a1\u5668\u6253\u5f00\u5927\u91cf\u7684\u534a\u5f00\u8fde\u63a5\uff0c\u5360\u6ee1\u670d\u52a1\u5668\u7684\u8fde\u63a5\u8868\uff0c \u4ece\u800c\u5f71\u54cd\u6b63\u5e38\u7528\u6237\u4e0e\u670d\u52a1\u5668\u5efa\u7acb\u4f1a\u8bdd\uff0c\u9020\u6210\u62d2\u7edd\u670d\u52a1\u3002 ACK Flood\u53cd\u5c04\u653b\u51fb:\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u53d7\u63a7\u4e3b\u673a\u5411\u5927\u91cf\u4e0d\u540c\u7684\u670d\u52a1\u5668\u53d1\u9001\u4f2a\u9020\u6e90IP\u5730\u5740\u7684SYN\u8bf7\u6c42\uff0c \u4ece\u800c\u4f7f\u670d\u52a1\u5668\u54cd\u5e94\u7684\u5927\u91cfACK\u5e94\u7b54\u6570\u636e\u6d8c\u5411\u88ab\u653b\u51fb\u76ee\u6807\uff0c\u5360\u7528\u76ee\u6807\u7684\u7f51\u7edc\u5bbd\u5e26\u8d44\u6e90\u5e76\u62d2\u7edd\u670d\u52a1\u3002 UDP Flood\u4f7f\u7528\u5c0f\u5305\u548c\u5927\u5305\u4e24\u79cd\u65b9\u5f0f\u8fdb\u884c\u653b\u51fb\u3002 \u5c0f\u5305\u662f\u630764\u5b57\u8282\u5927\u5c0f\u7684\u6570\u636e\u5305\uff0c\u8fd9\u662f\u4ee5\u592a\u7f51\u4e0a\u4f20\u8f93\u6570\u636e\u5e27\u7684\u6700\u5c0f\u503c\uff0c\u5728\u76f8\u540c\u6d41\u91cf\u4e0b\uff0c\u5355\u5305\u4f53\u79ef\u8d8a\u5c0f\uff0c\u6570\u636e\u5305\u7684\u6570\u91cf\u5c31\u8d8a\u591a\u3002 \u7531\u4e8e\u4ea4\u6362\u673a\u3001\u8def\u7531\u5668\u7b49\u7f51\u7edc\u8bbe\u5907\u9700\u8981\u5bf9\u6bcf\u4e00\u4e2a\u6570\u636e\u5305\u8fdb\u884c\u68c0\u67e5\u548c\u6821\u9a8c\uff0c \u56e0\u6b64\u4f7f\u7528UDP\u5c0f\u5305\u653b\u51fb\u80fd\u591f\u6700\u6709\u6548\u7684\u589e\u5927\u7f51\u7edc\u8bbe\u5907\u5904\u7406\u6570\u636e\u5305\u7684\u538b\u529b\uff0c\u9020\u6210\u5904\u7406\u901f\u5ea6\u7684\u7f13\u6162\u548c\u4f20\u8f93\u5ef6\u8fdf\u7b49\u62d2\u7edd\u670d\u52a1\u653b\u51fb\u7684\u6548\u679c\u3002 \u5927\u5305\u662f\u63071500\u5b57\u8282\u4ee5\u4e0a\u7684\u6570\u636e\u5305\uff0c\u5176\u5927\u5c0f\u8d85\u8fc7\u4e86\u4ee5\u592a\u7f51\u7684\u6700\u5927\u4f20\u8f93\u5355\u5143(MTU)\uff0c\u4f7f\u7528UDP\u5927\u5305\u653b\u51fb\uff0c \u80fd\u591f\u6709\u6548\u7684\u5360\u7528\u7f51\u7edc\u63a5\u53e3\u7684\u4f20\u8f93\u5bbd\u5e26\uff0c\u5e76\u8feb\u4f7f\u88ab\u653b\u51fb\u76ee\u6807\u5728\u63a5\u53d7\u5230UDP\u6570\u636e\u65f6\u8fdb\u884c\u5206\u7247\u91cd\u7ec4\uff0c\u9020\u6210\u7f51\u7edc\u62e5\u5835\uff0c \u670d\u52a1\u5668\u54cd\u5e94\u901f\u5ea6\u53d8\u6162\u3002 \u670d\u52a1\u6d88\u8017\u7c7b: \u5982Connection Flood\u548cHTTP GET\u653b\u51fb\uff0c\u524d\u8005\u5229\u7528\u771f\u5b9e\u7684IP\u5730\u5740\u5411\u670d\u52a1\u5668\u53d1\u8d77\u5927\u91cf\u7684\u8fde\u63a5\u3002 \u5e76\u4e14\u5efa\u7acb\u8fde\u63a5\u4e4b\u540e\u5f88\u957f\u65f6\u95f4\u4e0d\u91ca\u653e\uff0c\u5360\u7528\u670d\u52a1\u5668\u7684\u8d44\u6e90\uff0c\u9020\u6210\u670d\u52a1\u5668\u4e0a\u6b8b\u4f59\u8fde\u63a5(WAIT\u72b6\u6001)\u8fc7\u591a\uff0c\u6548\u7387\u964d\u4f4e\uff0c\u751a\u81f3\u8d44\u6e90\u8017\u5c3d\uff0c \u65e0\u6cd5\u54cd\u5e94\u5176\u4ed6\u5ba2\u6237\u6240\u53d1\u8d77\u7684\u94fe\u63a5\uff1b\u540e\u8005\u662f\u548c\u670d\u52a1\u5668\u5efa\u7acb\u6b63\u5e38\u7684TCP\u8fde\u63a5\uff0c \u5e76\u4e0d\u65ad\u5229\u7528\u811a\u672c\u7a0b\u5e8f\u63d0\u4ea4\u67e5\u8be2\u3001\u5217\u8868\u7b49\u5927\u91cf\u8017\u8d39\u670d\u52a1\u5668\u6570\u636e\u5e93\u8d44\u6e90\u7684\u8bf7\u6c42\u3002 \u53cd\u5c04\u653b\u51fb: \u653b\u51fb\u8005\u901a\u8fc7IP\u6b3a\u9a97\uff0c\u5c06\u5927\u91cf\u50f5\u5c38\u4e3b\u673a\u7684\u6e90IP\u5730\u5740\u4f2a\u88c5\u6210\u88ab\u653b\u51fb\u670d\u52a1\u5668\u7684IP\uff0c\u7136\u540e\u5411\u5f00\u653e\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\uff0c \u8fd9\u4e9b\u670d\u52a1\u5668\u5219\u4f1a\u5411\u88ab\u653b\u51fb\u670d\u52a1\u5668\u8fd4\u56de\u5e94\u7b54\u62a5\u6587\uff0c\u4ece\u800c\u95f4\u63a5\u9020\u6210DDoS\u653b\u51fb\u3002 \u9632\u5fa1\u63aa\u65bd\u6709: \u6269\u5bb9\uff0c\u63d0\u9ad8\u5e26\u5bbd\uff1b \u5f02\u5e38\u6d41\u91cf\u7684\u6e05\u6d17: \u901a\u8fc7DDoS\u786c\u4ef6\u9632\u706b\u5899\u5bf9\u5f02\u5e38\u6d41\u91cf\u7684\u6e05\u6d17\u8fc7\u6ee4\u3002 \u5206\u5e03\u5f0f\u96c6\u7fa4\u9632\u5fa1: \u5728\u6bcf\u4e2a\u8282\u70b9\u670d\u52a1\u5668\u914d\u7f6e\u591a\u4e2aIP\u5730\u5740\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8282\u70b9\u80fd\u627f\u53d7\u4e0d\u4f4e\u4e8e10G\u7684DDoS\u653b\u51fb\uff0c \u5982\u4e00\u4e2a\u8282\u70b9\u53d7\u653b\u51fb\u65e0\u6cd5\u63d0\u4f9b\u670d\u52a1\uff0c\u7cfb\u7edf\u5c06\u4f1a\u6839\u636e\u4f18\u5148\u7ea7\u8bbe\u7f6e\u81ea\u52a8\u5207\u6362\u53e6\u4e00\u4e2a\u8282\u70b9\uff0c \u5e76\u5c06\u653b\u51fb\u8005\u7684\u6570\u636e\u5305\u5168\u90e8\u8fd4\u56de\u53d1\u9001\u70b9\uff0c\u4f7f\u653b\u51fb\u6e90\u6210\u4e3a\u762b\u75ea\u72b6\u6001 \u52a0\u5bc6\u7b97\u6cd5 \u975e\u5bf9\u79f0\u52a0\u5bc6: \u52a0\u5bc6\u548c\u89e3\u5bc6\u4f7f\u7528\u76f8\u540c\u5bc6\u94a5\u7684\u52a0\u5bc6\u7b97\u6cd5 \u5bf9\u79f0\u52a0\u5bc6: \u52a0\u5bc6\u548c\u89e3\u5bc6\u4f7f\u7528\u4e0d\u540c\u5bc6\u94a5\u7684\u52a0\u5bc6\u7b97\u6cd5\uff0c\u4e5f\u79f0\u4e3a\u516c\u79c1\u94a5\u52a0\u5bc6 1.\u7531\u4e8e\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u7684\u8fd0\u884c\u901f\u5ea6\u6bd4\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u7684\u901f\u5ea6\u6162\u5f88\u591a\uff0c\u5f53\u6211\u4eec\u9700\u8981\u52a0\u5bc6\u5927\u91cf\u7684\u6570\u636e\u65f6\uff0c \u5efa\u8bae\u91c7\u7528\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff0c\u63d0\u9ad8\u52a0\u89e3\u5bc6\u901f\u5ea6\u3002 2.\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u4e0d\u80fd\u5b9e\u73b0\u7b7e\u540d\uff0c\u56e0\u6b64\u7b7e\u540d\u53ea\u80fd\u975e\u5bf9\u79f0\u7b97\u6cd5\u3002 3.\u7531\u4e8e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u7684\u5bc6\u94a5\u7ba1\u7406\u662f\u4e00\u4e2a\u590d\u6742\u7684\u8fc7\u7a0b\uff0c\u5bc6\u94a5\u7684\u7ba1\u7406\u76f4\u63a5\u51b3\u5b9a\u7740\u4ed6\u7684\u5b89\u5168\u6027\uff0c \u56e0\u6b64\u5f53\u6570\u636e\u91cf\u5f88\u5c0f\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u91c7\u7528\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u3002 4.\u5728\u5b9e\u9645\u7684\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u91c7\u7528\u7684\u65b9\u5f0f\u662f\uff1a\u91c7\u7528\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u7ba1\u7406\u5bf9\u79f0\u7b97\u6cd5\u7684\u5bc6\u94a5\uff0c \u7136\u540e\u7528\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u52a0\u5bc6\u6570\u636e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u96c6\u6210\u4e86\u4e24\u7c7b\u52a0\u5bc6\u7b97\u6cd5\u7684\u4f18\u70b9\uff0c\u65e2\u5b9e\u73b0\u4e86\u52a0\u5bc6\u901f\u5ea6\u5feb\u7684\u4f18\u70b9\uff0c \u53c8\u5b9e\u73b0\u4e86\u5b89\u5168\u65b9\u4fbf\u7ba1\u7406\u5bc6\u94a5\u7684\u4f18\u70b9\u3002 Web\u5b89\u5168 SSL VPN\u4e0e\u9632\u706b\u5899","title":"safe"},{"location":"Network/5_netsafe/#_1","text":"","title":"\u7f51\u7edc\u5b89\u5168"},{"location":"Network/5_netsafe/#internet","text":"DDoS \u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1\uff0c\u5e38\u89c1\u653b\u51fb\u65b9\u5f0f\u6709: \u8d44\u6e90\u6d88\u8017\u7c7b: \u5982Syn Flood\u3001Ack Flood\u3001UDP Flood,\u901a\u8fc7\u5927\u91cf\u8bf7\u6c42\u6d88\u8017\u6b63\u5e38\u7684\u5e26\u5bbd\u548c\u534f\u8bae\u6808\u5904\u7406\u8d44\u6e90\u7684\u80fd\u529b\uff0c \u4ece\u800c\u8fbe\u5230\u670d\u52a1\u7aef\u65e0\u6cd5\u6b63\u5e38\u5de5\u4f5c\u7684\u76ee\u7684\u3002 Syn Flood: \u653b\u51fb\u8005\u5229\u7528\u53d7\u63a7\u4e3b\u673a\u53d1\u9001\u5927\u91cf\u7684TCP SYN\u62a5\u6587\uff0c\u4f7f\u670d\u52a1\u5668\u6253\u5f00\u5927\u91cf\u7684\u534a\u5f00\u8fde\u63a5\uff0c\u5360\u6ee1\u670d\u52a1\u5668\u7684\u8fde\u63a5\u8868\uff0c \u4ece\u800c\u5f71\u54cd\u6b63\u5e38\u7528\u6237\u4e0e\u670d\u52a1\u5668\u5efa\u7acb\u4f1a\u8bdd\uff0c\u9020\u6210\u62d2\u7edd\u670d\u52a1\u3002 ACK Flood\u53cd\u5c04\u653b\u51fb:\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u53d7\u63a7\u4e3b\u673a\u5411\u5927\u91cf\u4e0d\u540c\u7684\u670d\u52a1\u5668\u53d1\u9001\u4f2a\u9020\u6e90IP\u5730\u5740\u7684SYN\u8bf7\u6c42\uff0c \u4ece\u800c\u4f7f\u670d\u52a1\u5668\u54cd\u5e94\u7684\u5927\u91cfACK\u5e94\u7b54\u6570\u636e\u6d8c\u5411\u88ab\u653b\u51fb\u76ee\u6807\uff0c\u5360\u7528\u76ee\u6807\u7684\u7f51\u7edc\u5bbd\u5e26\u8d44\u6e90\u5e76\u62d2\u7edd\u670d\u52a1\u3002 UDP Flood\u4f7f\u7528\u5c0f\u5305\u548c\u5927\u5305\u4e24\u79cd\u65b9\u5f0f\u8fdb\u884c\u653b\u51fb\u3002 \u5c0f\u5305\u662f\u630764\u5b57\u8282\u5927\u5c0f\u7684\u6570\u636e\u5305\uff0c\u8fd9\u662f\u4ee5\u592a\u7f51\u4e0a\u4f20\u8f93\u6570\u636e\u5e27\u7684\u6700\u5c0f\u503c\uff0c\u5728\u76f8\u540c\u6d41\u91cf\u4e0b\uff0c\u5355\u5305\u4f53\u79ef\u8d8a\u5c0f\uff0c\u6570\u636e\u5305\u7684\u6570\u91cf\u5c31\u8d8a\u591a\u3002 \u7531\u4e8e\u4ea4\u6362\u673a\u3001\u8def\u7531\u5668\u7b49\u7f51\u7edc\u8bbe\u5907\u9700\u8981\u5bf9\u6bcf\u4e00\u4e2a\u6570\u636e\u5305\u8fdb\u884c\u68c0\u67e5\u548c\u6821\u9a8c\uff0c \u56e0\u6b64\u4f7f\u7528UDP\u5c0f\u5305\u653b\u51fb\u80fd\u591f\u6700\u6709\u6548\u7684\u589e\u5927\u7f51\u7edc\u8bbe\u5907\u5904\u7406\u6570\u636e\u5305\u7684\u538b\u529b\uff0c\u9020\u6210\u5904\u7406\u901f\u5ea6\u7684\u7f13\u6162\u548c\u4f20\u8f93\u5ef6\u8fdf\u7b49\u62d2\u7edd\u670d\u52a1\u653b\u51fb\u7684\u6548\u679c\u3002 \u5927\u5305\u662f\u63071500\u5b57\u8282\u4ee5\u4e0a\u7684\u6570\u636e\u5305\uff0c\u5176\u5927\u5c0f\u8d85\u8fc7\u4e86\u4ee5\u592a\u7f51\u7684\u6700\u5927\u4f20\u8f93\u5355\u5143(MTU)\uff0c\u4f7f\u7528UDP\u5927\u5305\u653b\u51fb\uff0c \u80fd\u591f\u6709\u6548\u7684\u5360\u7528\u7f51\u7edc\u63a5\u53e3\u7684\u4f20\u8f93\u5bbd\u5e26\uff0c\u5e76\u8feb\u4f7f\u88ab\u653b\u51fb\u76ee\u6807\u5728\u63a5\u53d7\u5230UDP\u6570\u636e\u65f6\u8fdb\u884c\u5206\u7247\u91cd\u7ec4\uff0c\u9020\u6210\u7f51\u7edc\u62e5\u5835\uff0c \u670d\u52a1\u5668\u54cd\u5e94\u901f\u5ea6\u53d8\u6162\u3002 \u670d\u52a1\u6d88\u8017\u7c7b: \u5982Connection Flood\u548cHTTP GET\u653b\u51fb\uff0c\u524d\u8005\u5229\u7528\u771f\u5b9e\u7684IP\u5730\u5740\u5411\u670d\u52a1\u5668\u53d1\u8d77\u5927\u91cf\u7684\u8fde\u63a5\u3002 \u5e76\u4e14\u5efa\u7acb\u8fde\u63a5\u4e4b\u540e\u5f88\u957f\u65f6\u95f4\u4e0d\u91ca\u653e\uff0c\u5360\u7528\u670d\u52a1\u5668\u7684\u8d44\u6e90\uff0c\u9020\u6210\u670d\u52a1\u5668\u4e0a\u6b8b\u4f59\u8fde\u63a5(WAIT\u72b6\u6001)\u8fc7\u591a\uff0c\u6548\u7387\u964d\u4f4e\uff0c\u751a\u81f3\u8d44\u6e90\u8017\u5c3d\uff0c \u65e0\u6cd5\u54cd\u5e94\u5176\u4ed6\u5ba2\u6237\u6240\u53d1\u8d77\u7684\u94fe\u63a5\uff1b\u540e\u8005\u662f\u548c\u670d\u52a1\u5668\u5efa\u7acb\u6b63\u5e38\u7684TCP\u8fde\u63a5\uff0c \u5e76\u4e0d\u65ad\u5229\u7528\u811a\u672c\u7a0b\u5e8f\u63d0\u4ea4\u67e5\u8be2\u3001\u5217\u8868\u7b49\u5927\u91cf\u8017\u8d39\u670d\u52a1\u5668\u6570\u636e\u5e93\u8d44\u6e90\u7684\u8bf7\u6c42\u3002 \u53cd\u5c04\u653b\u51fb: \u653b\u51fb\u8005\u901a\u8fc7IP\u6b3a\u9a97\uff0c\u5c06\u5927\u91cf\u50f5\u5c38\u4e3b\u673a\u7684\u6e90IP\u5730\u5740\u4f2a\u88c5\u6210\u88ab\u653b\u51fb\u670d\u52a1\u5668\u7684IP\uff0c\u7136\u540e\u5411\u5f00\u653e\u670d\u52a1\u5668\u53d1\u9001\u8bf7\u6c42\uff0c \u8fd9\u4e9b\u670d\u52a1\u5668\u5219\u4f1a\u5411\u88ab\u653b\u51fb\u670d\u52a1\u5668\u8fd4\u56de\u5e94\u7b54\u62a5\u6587\uff0c\u4ece\u800c\u95f4\u63a5\u9020\u6210DDoS\u653b\u51fb\u3002 \u9632\u5fa1\u63aa\u65bd\u6709: \u6269\u5bb9\uff0c\u63d0\u9ad8\u5e26\u5bbd\uff1b \u5f02\u5e38\u6d41\u91cf\u7684\u6e05\u6d17: \u901a\u8fc7DDoS\u786c\u4ef6\u9632\u706b\u5899\u5bf9\u5f02\u5e38\u6d41\u91cf\u7684\u6e05\u6d17\u8fc7\u6ee4\u3002 \u5206\u5e03\u5f0f\u96c6\u7fa4\u9632\u5fa1: \u5728\u6bcf\u4e2a\u8282\u70b9\u670d\u52a1\u5668\u914d\u7f6e\u591a\u4e2aIP\u5730\u5740\uff0c\u5e76\u4e14\u6bcf\u4e2a\u8282\u70b9\u80fd\u627f\u53d7\u4e0d\u4f4e\u4e8e10G\u7684DDoS\u653b\u51fb\uff0c \u5982\u4e00\u4e2a\u8282\u70b9\u53d7\u653b\u51fb\u65e0\u6cd5\u63d0\u4f9b\u670d\u52a1\uff0c\u7cfb\u7edf\u5c06\u4f1a\u6839\u636e\u4f18\u5148\u7ea7\u8bbe\u7f6e\u81ea\u52a8\u5207\u6362\u53e6\u4e00\u4e2a\u8282\u70b9\uff0c \u5e76\u5c06\u653b\u51fb\u8005\u7684\u6570\u636e\u5305\u5168\u90e8\u8fd4\u56de\u53d1\u9001\u70b9\uff0c\u4f7f\u653b\u51fb\u6e90\u6210\u4e3a\u762b\u75ea\u72b6\u6001","title":"Internet \u5b89\u5168\u5a01\u80c1"},{"location":"Network/5_netsafe/#_2","text":"\u975e\u5bf9\u79f0\u52a0\u5bc6: \u52a0\u5bc6\u548c\u89e3\u5bc6\u4f7f\u7528\u76f8\u540c\u5bc6\u94a5\u7684\u52a0\u5bc6\u7b97\u6cd5 \u5bf9\u79f0\u52a0\u5bc6: \u52a0\u5bc6\u548c\u89e3\u5bc6\u4f7f\u7528\u4e0d\u540c\u5bc6\u94a5\u7684\u52a0\u5bc6\u7b97\u6cd5\uff0c\u4e5f\u79f0\u4e3a\u516c\u79c1\u94a5\u52a0\u5bc6 1.\u7531\u4e8e\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u7684\u8fd0\u884c\u901f\u5ea6\u6bd4\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u7684\u901f\u5ea6\u6162\u5f88\u591a\uff0c\u5f53\u6211\u4eec\u9700\u8981\u52a0\u5bc6\u5927\u91cf\u7684\u6570\u636e\u65f6\uff0c \u5efa\u8bae\u91c7\u7528\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\uff0c\u63d0\u9ad8\u52a0\u89e3\u5bc6\u901f\u5ea6\u3002 2.\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u4e0d\u80fd\u5b9e\u73b0\u7b7e\u540d\uff0c\u56e0\u6b64\u7b7e\u540d\u53ea\u80fd\u975e\u5bf9\u79f0\u7b97\u6cd5\u3002 3.\u7531\u4e8e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u7684\u5bc6\u94a5\u7ba1\u7406\u662f\u4e00\u4e2a\u590d\u6742\u7684\u8fc7\u7a0b\uff0c\u5bc6\u94a5\u7684\u7ba1\u7406\u76f4\u63a5\u51b3\u5b9a\u7740\u4ed6\u7684\u5b89\u5168\u6027\uff0c \u56e0\u6b64\u5f53\u6570\u636e\u91cf\u5f88\u5c0f\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u91c7\u7528\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u3002 4.\u5728\u5b9e\u9645\u7684\u64cd\u4f5c\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u91c7\u7528\u7684\u65b9\u5f0f\u662f\uff1a\u91c7\u7528\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u7ba1\u7406\u5bf9\u79f0\u7b97\u6cd5\u7684\u5bc6\u94a5\uff0c \u7136\u540e\u7528\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5\u52a0\u5bc6\u6570\u636e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u96c6\u6210\u4e86\u4e24\u7c7b\u52a0\u5bc6\u7b97\u6cd5\u7684\u4f18\u70b9\uff0c\u65e2\u5b9e\u73b0\u4e86\u52a0\u5bc6\u901f\u5ea6\u5feb\u7684\u4f18\u70b9\uff0c \u53c8\u5b9e\u73b0\u4e86\u5b89\u5168\u65b9\u4fbf\u7ba1\u7406\u5bc6\u94a5\u7684\u4f18\u70b9\u3002","title":"\u52a0\u5bc6\u7b97\u6cd5"},{"location":"Network/5_netsafe/#web","text":"SSL","title":"Web\u5b89\u5168"},{"location":"Network/5_netsafe/#vpn","text":"","title":"VPN\u4e0e\u9632\u706b\u5899"},{"location":"os/0_index/","text":"\u8bf4\u660e \u2003linux os\u524d\u56db\u9879\u4e3b\u8981\u662f\u57fa\u4e8elinux 0.1x\u7248\u672c\u603b\u7ed3\u7684\u90e8\u5206\u57fa\u7840\uff0c\u5173\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\u7684\u77e5\u8bc6\u70b9 \u4ece\u7b2c5\u9879\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5f00\u59cb\u3002","title":"home"},{"location":"os/0_index/#_1","text":"linux os\u524d\u56db\u9879\u4e3b\u8981\u662f\u57fa\u4e8elinux 0.1x\u7248\u672c\u603b\u7ed3\u7684\u90e8\u5206\u57fa\u7840\uff0c\u5173\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6838\u5fc3\u7684\u77e5\u8bc6\u70b9 \u4ece\u7b2c5\u9879\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u5f00\u59cb\u3002","title":"\u8bf4\u660e"},{"location":"os/1_introduction/","text":"\u7b80\u4ecb 16\u4f4dCPU\u5bc4\u5b58\u5668\u7ed3\u6784 1. I/O \u7aef\u53e3\u5bfb\u5740\u548c\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f \u2003 \u5728 CPU \u548c I/O \u9002\u914d\u5668\u4e4b\u95f4\u5f00\u59cb\u4f20\u8f93\u6570\u636e\u65f6\uff0c\u9996\u5148\u9700\u8981\u786e\u5b9a\u9002\u914d\u5668\u7684I/O\u4f4d\u7f6e\uff0c\u5373\u7aef\u53e3\u5730\u5740\u3002 \u7aef\u53e3\u5730\u5740\u7684\u8bbe\u7f6e\u65b9\u6cd5\u4e00\u822c\u6709\u4e24\u79cd \u7edf\u4e00\u7f16\u5740\u548c\u72ec\u7acb\u7f16\u5740 \u3002 \u2003 \u7aef\u53e3\u7edf\u4e00\u7f16\u5740\u7684\u539f\u7406\u662f\u628a I/O \u63a7\u5236\u5668\u4e2d\u7684\u7aef\u53e3\u5730\u5740\u5f52\u5165\u5b58\u50a8\u5668\u5bfb\u5740\u5730\u5740\u7a7a\u95f4\u8303\u56f4\u5185\u3002\u56e0\u6b64\u8fd9\u79cd\u7f16\u5740\u65b9\u5f0f\u4e5f\u6210\u4e3a\u5b58\u50a8\u5668\u6620\u50cf\u7f16\u5740\u3002CPU \u8bbf\u95ee\u4e00\u4e2a\u7aef\u53e3\u7684\u64cd\u4f5c\u4e0e\u8bbf\u95ee\u5185\u5b58\u7684\u64cd\u4f5c\u4e00\u6837\uff0c\u4e5f\u4f7f\u7528\u8bbf\u95ee\u5185\u5b58\u7684\u6307\u4ee4\u3002 \u2003 \u7aef\u53e3\u72ec\u7acb\u7f16\u5740\u7684\u65b9\u6cd5\u662f\u628a I/O \u63a7\u5236\u5668\u548c\u63a7\u5236\u5361\u7684\u5bfb\u5740\u7a7a\u95f4\u5355\u72ec\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\u5bf9\u5f85\uff0c\u79f0\u4e3a I/O \u5730\u5740\u7a7a\u95f4\u3002\u6bcf\u4e2a\u7aef\u53e3\u6709\u4e00\u4e2a I/O \u5730\u5740\u4e0e\u4e4b\u5bf9\u5e94\uff0c\u5e76\u4e14\u4f7f\u7528\u4e13\u95e8\u7684 I/O \u6307\u4ee4\u6765\u8bbf\u95ee\u7aef\u53e3\u3002 2. \u4e3b\u5b58\u50a8\u5668\u3001BIOS \u548c CMOS \u5b58\u50a8\u5668 \u2003 \u5178\u578b PC \u673a\u4e0a\u901a\u5e38\u542b\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u5b58\u50a8\u5668\uff0c\u4e00\u79cd\u662f\u7528\u6765\u8fd0\u884c\u7a0b\u5e8f\u548c\u4e34\u65f6\u4fdd\u5b58\u6570\u636e\u7684\u5185\u5b58\u5b58\u50a8\u5668\uff0c\u4e00\u79cd\u662f\u5b58\u653e\u7740\u7cfb\u7edf\u5f00\u673a\u8bca\u65ad\u548c\u521d\u59cb\u5316\u786c\u4ef6\u7a0b\u5e8f\u7684 ROM\uff08BIOS\uff09\uff0c\u53e6\u4e00\u79cd\u662f\u7528\u6765\u5b58\u653e\u5b58\u8ba1\u7b97\u673a\u5b9e\u65f6\u65f6\u949f\u4fe1\u606f\u548c\u7cfb\u7edf\u786c\u4ef6\u914d\u7f6e\u4fe1\u606f\u7684\u5c11\u91cf CMOS \u5b58\u50a8\u5668\u3002 \u542f\u52a8: \u2003 \u5f53\u8ba1\u7b97\u673a\u542f\u52a8\u65f6\uff0cCPU\u4f1a\u81ea\u52a8\u8bbe\u7f6e\u4ee3\u7801\u6bb5\u5bc4\u5b58\u5668CS=0xF000, IP=0xFFF0, \u6b64\u65f6CPU\u4ee3\u7801\u6307\u5411\u5185\u5b58\u4e2d\u6700\u540e\u4e00\u4e2a64KB\u7684\u6700\u540e16\u5b57\u8282\u5904\uff0c\u8fd9\u91cc\u6b63\u662f\u7cfb\u7edf ROM BIOS\u5b58\u653e\u7684\u4f4d\u7f6e\u3002\u5e76\u4e14 BIOS \u4f1a\u5728\u8fd9\u91cc\u5b58\u653e\u4e00\u6761\u8df3\u8f6c\u6307\u4ee4 JMP \u8df3\u8f6c\u5230 BIOS \u4ee3\u7801\u4e2d 64KB \u8303\u56f4\u5185\u7684\u67d0\u4e00\u6761\u6307\u4ee4\u5f00\u59cb\u6267\u884c\u3002 \u2003 \u56e0\u6b64\u4e3a\u4e86\u80fd\u591f\u6267\u884c\u6216\u8bbf\u95ee BIOS \u4e2d\u8d85\u8fc7 64KB \u8303\u56f4\u800c\u53c8\u8fdc\u8fdc\u4e0d\u5728 0--1M \u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u5176\u4ed6 BIOS \u4ee3\u7801 \u6216\u6570\u636e\uff0cBIOS \u7a0b\u5e8f\u4f1a\u9996\u5148\u4f7f\u7528 32 \u4f4d\u8bbf\u95ee\u65b9\u5f0f\u628a\u6570\u636e\u6bb5\u5bc4\u5b58\u5668\u7684\u8bbf\u95ee\u8303\u56f4\u8bbe\u7f6e\u6210 4G\uff08\u800c\u975e\u539f\u6765\u7684 64K\uff09\uff0c \u8fd9\u6837 CPU \u5c31\u53ef\u4ee5\u5728 0 \u5230 4G \u8303\u56f4\u5185\u6267\u884c\u548c\u64cd\u4f5c\u6570\u636e\u3002\u6b64\u540e\uff0cBIOS \u5728\u6267\u884c\u4e86\u4e00\u4e9b\u5217\u786c\u4ef6\u68c0\u6d4b\u548c\u521d\u59cb\u5316\u64cd\u4f5c \u4e4b\u540e\uff0c\u5c31\u4f1a\u628a\u4e0e\u539f\u6765 PC \u673a\u517c\u5bb9\u7684 64KB BIOS \u4ee3\u7801\u548c\u6570\u636e\u590d\u5236\u5230\u5185\u5b58\u4f4e\u7aef 1M \u672b\u7aef\u7684 64K \u5904\uff0c\u7136\u540e\u8df3\u8f6c\u5230 \u8fd9\u4e2a\u5730\u65b9\u5e76\u8ba9 CPU \u771f\u6b63\u8fd0\u884c\u5728\u5b9e\u5730\u5740\u6a21\u5f0f\u4e0b\uff0c\u6700\u540e BIOS \u5c31\u4f1a\u4ece\u786c\u76d8\u6216\u5176\u4ed6\u5757\u8bbe\u5907\u628a\u64cd\u4f5c\u7cfb\u7edf\u5f15\u5bfc\u7a0b\u5e8f\u52a0\u8f7d\u5230\u5185\u5b58 0x7c00 \u5904\uff0c\u5e76\u8df3\u8f6c\u5230\u8fd9\u4e2a\u5730\u65b9\u7ee7\u7eed\u6267\u884c\u5f15\u5bfc\u7a0b\u5e8f\u3002","title":"1_\u5f00\u59cb"},{"location":"os/1_introduction/#_1","text":"16\u4f4dCPU\u5bc4\u5b58\u5668\u7ed3\u6784","title":"\u7b80\u4ecb"},{"location":"os/1_introduction/#1-io","text":"\u5728 CPU \u548c I/O \u9002\u914d\u5668\u4e4b\u95f4\u5f00\u59cb\u4f20\u8f93\u6570\u636e\u65f6\uff0c\u9996\u5148\u9700\u8981\u786e\u5b9a\u9002\u914d\u5668\u7684I/O\u4f4d\u7f6e\uff0c\u5373\u7aef\u53e3\u5730\u5740\u3002 \u7aef\u53e3\u5730\u5740\u7684\u8bbe\u7f6e\u65b9\u6cd5\u4e00\u822c\u6709\u4e24\u79cd \u7edf\u4e00\u7f16\u5740\u548c\u72ec\u7acb\u7f16\u5740 \u3002 \u2003 \u7aef\u53e3\u7edf\u4e00\u7f16\u5740\u7684\u539f\u7406\u662f\u628a I/O \u63a7\u5236\u5668\u4e2d\u7684\u7aef\u53e3\u5730\u5740\u5f52\u5165\u5b58\u50a8\u5668\u5bfb\u5740\u5730\u5740\u7a7a\u95f4\u8303\u56f4\u5185\u3002\u56e0\u6b64\u8fd9\u79cd\u7f16\u5740\u65b9\u5f0f\u4e5f\u6210\u4e3a\u5b58\u50a8\u5668\u6620\u50cf\u7f16\u5740\u3002CPU \u8bbf\u95ee\u4e00\u4e2a\u7aef\u53e3\u7684\u64cd\u4f5c\u4e0e\u8bbf\u95ee\u5185\u5b58\u7684\u64cd\u4f5c\u4e00\u6837\uff0c\u4e5f\u4f7f\u7528\u8bbf\u95ee\u5185\u5b58\u7684\u6307\u4ee4\u3002 \u2003 \u7aef\u53e3\u72ec\u7acb\u7f16\u5740\u7684\u65b9\u6cd5\u662f\u628a I/O \u63a7\u5236\u5668\u548c\u63a7\u5236\u5361\u7684\u5bfb\u5740\u7a7a\u95f4\u5355\u72ec\u4f5c\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\u5bf9\u5f85\uff0c\u79f0\u4e3a I/O \u5730\u5740\u7a7a\u95f4\u3002\u6bcf\u4e2a\u7aef\u53e3\u6709\u4e00\u4e2a I/O \u5730\u5740\u4e0e\u4e4b\u5bf9\u5e94\uff0c\u5e76\u4e14\u4f7f\u7528\u4e13\u95e8\u7684 I/O \u6307\u4ee4\u6765\u8bbf\u95ee\u7aef\u53e3\u3002","title":"1. I/O \u7aef\u53e3\u5bfb\u5740\u548c\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f"},{"location":"os/1_introduction/#2-bios-cmos","text":"\u5178\u578b PC \u673a\u4e0a\u901a\u5e38\u542b\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u5b58\u50a8\u5668\uff0c\u4e00\u79cd\u662f\u7528\u6765\u8fd0\u884c\u7a0b\u5e8f\u548c\u4e34\u65f6\u4fdd\u5b58\u6570\u636e\u7684\u5185\u5b58\u5b58\u50a8\u5668\uff0c\u4e00\u79cd\u662f\u5b58\u653e\u7740\u7cfb\u7edf\u5f00\u673a\u8bca\u65ad\u548c\u521d\u59cb\u5316\u786c\u4ef6\u7a0b\u5e8f\u7684 ROM\uff08BIOS\uff09\uff0c\u53e6\u4e00\u79cd\u662f\u7528\u6765\u5b58\u653e\u5b58\u8ba1\u7b97\u673a\u5b9e\u65f6\u65f6\u949f\u4fe1\u606f\u548c\u7cfb\u7edf\u786c\u4ef6\u914d\u7f6e\u4fe1\u606f\u7684\u5c11\u91cf CMOS \u5b58\u50a8\u5668\u3002 \u542f\u52a8: \u2003 \u5f53\u8ba1\u7b97\u673a\u542f\u52a8\u65f6\uff0cCPU\u4f1a\u81ea\u52a8\u8bbe\u7f6e\u4ee3\u7801\u6bb5\u5bc4\u5b58\u5668CS=0xF000, IP=0xFFF0, \u6b64\u65f6CPU\u4ee3\u7801\u6307\u5411\u5185\u5b58\u4e2d\u6700\u540e\u4e00\u4e2a64KB\u7684\u6700\u540e16\u5b57\u8282\u5904\uff0c\u8fd9\u91cc\u6b63\u662f\u7cfb\u7edf ROM BIOS\u5b58\u653e\u7684\u4f4d\u7f6e\u3002\u5e76\u4e14 BIOS \u4f1a\u5728\u8fd9\u91cc\u5b58\u653e\u4e00\u6761\u8df3\u8f6c\u6307\u4ee4 JMP \u8df3\u8f6c\u5230 BIOS \u4ee3\u7801\u4e2d 64KB \u8303\u56f4\u5185\u7684\u67d0\u4e00\u6761\u6307\u4ee4\u5f00\u59cb\u6267\u884c\u3002 \u2003 \u56e0\u6b64\u4e3a\u4e86\u80fd\u591f\u6267\u884c\u6216\u8bbf\u95ee BIOS \u4e2d\u8d85\u8fc7 64KB \u8303\u56f4\u800c\u53c8\u8fdc\u8fdc\u4e0d\u5728 0--1M \u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u5176\u4ed6 BIOS \u4ee3\u7801 \u6216\u6570\u636e\uff0cBIOS \u7a0b\u5e8f\u4f1a\u9996\u5148\u4f7f\u7528 32 \u4f4d\u8bbf\u95ee\u65b9\u5f0f\u628a\u6570\u636e\u6bb5\u5bc4\u5b58\u5668\u7684\u8bbf\u95ee\u8303\u56f4\u8bbe\u7f6e\u6210 4G\uff08\u800c\u975e\u539f\u6765\u7684 64K\uff09\uff0c \u8fd9\u6837 CPU \u5c31\u53ef\u4ee5\u5728 0 \u5230 4G \u8303\u56f4\u5185\u6267\u884c\u548c\u64cd\u4f5c\u6570\u636e\u3002\u6b64\u540e\uff0cBIOS \u5728\u6267\u884c\u4e86\u4e00\u4e9b\u5217\u786c\u4ef6\u68c0\u6d4b\u548c\u521d\u59cb\u5316\u64cd\u4f5c \u4e4b\u540e\uff0c\u5c31\u4f1a\u628a\u4e0e\u539f\u6765 PC \u673a\u517c\u5bb9\u7684 64KB BIOS \u4ee3\u7801\u548c\u6570\u636e\u590d\u5236\u5230\u5185\u5b58\u4f4e\u7aef 1M \u672b\u7aef\u7684 64K \u5904\uff0c\u7136\u540e\u8df3\u8f6c\u5230 \u8fd9\u4e2a\u5730\u65b9\u5e76\u8ba9 CPU \u771f\u6b63\u8fd0\u884c\u5728\u5b9e\u5730\u5740\u6a21\u5f0f\u4e0b\uff0c\u6700\u540e BIOS \u5c31\u4f1a\u4ece\u786c\u76d8\u6216\u5176\u4ed6\u5757\u8bbe\u5907\u628a\u64cd\u4f5c\u7cfb\u7edf\u5f15\u5bfc\u7a0b\u5e8f\u52a0\u8f7d\u5230\u5185\u5b58 0x7c00 \u5904\uff0c\u5e76\u8df3\u8f6c\u5230\u8fd9\u4e2a\u5730\u65b9\u7ee7\u7eed\u6267\u884c\u5f15\u5bfc\u7a0b\u5e8f\u3002","title":"2. \u4e3b\u5b58\u50a8\u5668\u3001BIOS \u548c CMOS \u5b58\u50a8\u5668"},{"location":"os/2_as86/","text":"\u6c47\u7f16\u8bed\u6cd5 1. as86 \u2003\u6c47\u7f16\u5668\u7f16\u8bd1\u4ea7\u751f\u7684\u76ee\u6807\u6587\u4ef6 objfile \u901a\u5e38\u8d77\u7801\u5305\u542b\u4e09\u4e2a\u6bb5\u6216\u533a3\uff08section\uff09\uff0c\u5373\u6b63\u6587\u6bb5\uff08.text\uff09\u3001\u6570\u636e\u6bb5\uff08.data\uff09\u548c\u672a\u521d\u59cb\u5316\u6570\u636e\u6bb5\uff08.bss\uff09 \u2003as86 \u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u4e2d\uff0c\u51e1\u662f\u4ee5\u611f\u53f9\u53f7'!'\u6216\u5206\u53f7';'\u5f00\u59cb\u7684\u8bed\u53e5\u5176\u540e\u9762\u5747\u4e3a\u6ce8\u91ca\u6587\u5b57\u3002\u6ce8\u91ca\u8bed\u53e5\u53ef\u4ee5\u653e\u5728\u4efb\u4f55\u8bed\u53e5\u7684\u540e\u9762\uff0c\u4e5f\u53ef\u4ee5\u4ece\u4e00\u4e2a\u65b0\u884c\u5f00\u59cb\u3002 \u2003\u6c47\u7f16\u6307\u793a\u7b26(\u6c47\u7f16\u4f2a\u6307\u4ee4 or \u4f2a\u64cd\u4f5c\u7b26):\u4ee5\u5b57\u7b26\u2018.\u2019\u5f00\u59cb\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5728\u7f16\u8bd1\u65f6\u4ea7\u751f\u4efb\u4f55\u4ee3\u7801\u3002\u6c47\u7f16\u6307\u793a\u7b26\u7531\u4e00\u4e2a\u4f2a\u64cd\u4f5c\u7801\uff0c\u540e\u8ddf 0 \u4e2a\u6216\u591a\u4e2a\u64cd\u4f5c\u6570\u7ec4\u6210\u3002 \u4ee5\u4e0b\u9762\u4e3a\u4f8b\uff0cglobl\u5373\u662f\u4f2a\u64cd\u4f5c\u7801\uff0c\u540e\u9762\u7684\u6807\u53f7begtext\u5373\u662f\u64cd\u4f5c\u6570\u3002\uff08\u6807\u53f7\u5373\u540e\u9762\u5e26\u2018:\u2019\u7684\u6807\u8bc6\u7b26\uff09\u3002 eg. .globl begtext, begdata, begbss, endtext, enddata, endbss .text begtext: .data begdata: .bss begbss: .text \u2018globl'\u2019\u4f2a\u64cd\u4f5c\u7b26\u7528\u4e8e\u5b9a\u4e49\u968f\u540e\u7684\u6807\u53f7\u6807\u8bc6\u7b26\u662f\u5916\u90e8\u7684\u6216\u5168\u5c40\u7684\uff0c\u5e76\u4e14\u5373\u4f7f\u4e0d\u4f7f\u7528\u4e5f\u5f3a\u5236\u5f15\u5165; \u2018.text\u2019\u7528\u4e8e\u6807\u8bc6\u6b63\u6587\u6bb5\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u5e76\u628a\u5f53\u524d\u6bb5\u5207\u6362\u5230text\u6bb5; '.data'\u7528\u4e8e\u6807\u8bc6\u6570\u636e\u6bb5\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u5e76\u628a\u5f53\u524d\u6bb5\u5207\u6362\u5230 data\u6bb5\uff1b\u800c'.bbs'\u5219\u7528\u4e8e\u6807\u8bc6\u4e00\u4e2a\u672a\u521d\u59cb\u5316\u6570\u636e\u6bb5\u7684\u5f00\u59cb\uff0c\u5e76\u628a\u5f53\u524d\u6bb5\u6539\u53d8\u6210 bbs \u6bb5\u3002 \u2003\u7acb\u5373\u6570\u524d\u4e00\u5b9a\u8981\u52a0 '#' \uff0c\u5426\u5219\u5c06\u4f5c\u4e3a\u5185\u5b58\u5730\u5740\u4f7f\u7528\u800c\u4f7f\u8bed\u53e5\u53d8\u6210\u7edd\u5bf9\u5bfb\u5740\u8bed\u53e5\uff1a mov ax, #123; \uff01\u8fd9\u91cc\u5b58\u5165ax\u7684\u662f\u5341\u8fdb\u5236123\uff0c\u82e5\u5b58\u5165\u5341\u516d\u8fdb\u5236\uff0c\u5219\u4e3a0x123\u3002 \u628a\u4e00\u4e2a\u6807\u53f7\uff08\u4f8b\u5982 msg1\uff09\u7684\u5730\u5740\u503c\u653e\u5165\u5bc4\u5b58\u5668\u4e2d\u65f6\u4e5f\u4e00\u5b9a\u8981\u5728\u524d\u9762\u52a0'#'\uff0c\u5426\u5219\u4f1a\u53d8\u6210\u628a msg1 \u5730\u5740\u5904\u7684\u5185\u5bb9\u653e\u5230\u4e86\u5bc4\u5b58\u5668\u4e2d\u3002 mov ax, #msg1 \u2003\u5b9a\u4e49\u5b57\u7b26\u4e32\u9700\u8981\u4f2a\u64cd\u4f5c\u7b26\u2018.ascii\u2019,\u5e76\u4e14\u9700\u8981\u4f7f\u7528\u53cc\u5f15\u53f7\u62ec\u4f4f\u5b57\u7b26\u4e32\uff1b\u800c\u4f2a\u64cd\u4f5c\u7b26\u2019.asciiz\u2019\u8fd8\u4f1a\u5728\u5b57\u7b26\u4e32\u540e\u6dfb\u52a0\u4e00\u4e2aNULL(0)\u5b57\u7b26\uff1b \u5b9a\u4e49\u5b57\u7b26\u9700\u8981\u4f2a\u64cd\u4f5c\u7b26\u2019.byte\u2019\uff0c\u4f7f\u7528\u5355\u5f15\u53f7\u628a\u5b57\u7b26\u62ec\u4f4f\uff1b .ascii \u201chello world\u201d .byte 12 ! \u76f4\u63a5\u4f7f\u7528ascii\u7801 .byte \u2018D\u2019 \u2003'.org' \u5b9a\u4e49\u4e86\u5f53\u524d\u6c47\u7f16\u7684\u4f4d\u7f6e\u3002\u8fd9\u6761\u8bed\u53e5\u4f1a\u628a\u6c47\u7f16\u5668\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u5f53\u524d\u6bb5\u7684\u4f4d\u7f6e\u8ba1\u6570\u5668\u503c\u8c03\u6574\u4e3a\u8be5\u4f2a\u64cd\u4f5c\u7b26\u8bed\u53e5\u4e0a\u7ed9\u51fa\u503c\u3002 \u2003\u4f2a\u64cd\u4f5c\u7b26 '.word' \u7528\u4e8e\u5728\u5f53\u524d\u4f4d\u7f6e\u5b9a\u4e49\u4e00\u4e2a\u53cc\u5b57\u8282\u5185\u5b58\u5bf9\u8c61\uff08\u53d8\u91cf\uff09\uff0c\u5176\u540e\u53ef\u4ee5\u662f\u4e00\u4e2a\u6570\u6216\u8005\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002 2. build and link for as86 as86 -0 -a -o boot.o boot.s ld86 -0 -s -o boot boot.o \u2003\u5176\u4e2d\u9009\u9879'-0'\u7528\u4e8e\u751f\u6210 8086 \u7684 16\u4f4d\u76ee\u6807\u7a0b\u5e8f\uff1b'-a'\u7528\u4e8e\u6307\u5b9a\u751f\u6210\u4e0e GNU as \u548c ld \u90e8\u5206\u517c\u5bb9\u7684\u4ee3\u7801\u3002'-s'\u9009\u9879\u7528\u4e8e\u544a\u8bc9\u94fe\u63a5\u5668\u8981\u53bb\u9664\u6700\u540e\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u7684\u7b26\u53f7\u4fe1\u606f\u3002'-o' \u6307\u5b9a\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u540d\u79f0\u3002 \u2003as86 \u6c47\u7f16\u5668\u4ec5\u7528\u4e8e\u7f16\u8bd1\u5185\u6838\u4e2d\u7684 boot/bootsect.s\u4ee5\u53ca\u5f15\u5bfc\u6247\u533a\u7a0b\u5e8f\u548c\u5b9e\u6a21\u5f0f\u4e0b\u7684\u8bbe\u7f6e\u7a0b\u5e8fboot/setup.s\u3002 \u5185\u6838\u4e2d\u5176\u4f59\u6240\u6709\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\uff08\u5305\u62ec C \u8bed\u8a00\u4ea7\u751f\u7684\u6c47\u7f16\u7a0b\u5e8f\uff09\u5747\u4f7f\u7528 gas \uff08\u7b80\u79f0as\uff09\u6765\u7f16\u8bd1\uff0c\u5e76\u4e0e C\u8bed\u8a00\u7a0b\u5e8f\u7f16\u8bd1\u4ea7\u751f\u7684\u6a21\u5757\u94fe\u63a5. 3. AT&T\u2014\u2014as\u8bed\u6cd5 3.1 \u6c47\u7f16\u5668\u4f7f\u7528 AT&T \u7cfb\u7edf V \u7684\u6c47\u7f16\u8bed\u6cd5\uff08\u4e0b\u9762\u7b80\u79f0\u4e3a AT&T \u8bed\u6cd5\uff09\u3002\u8fd9\u79cd\u8bed\u6cd5\u4e0e Intel \u6c47\u7f16\u7a0b\u5e8f\u4f7f\u7528\u7684\u8bed\u6cd5\uff08\u7b80\u79f0 Intel \u8bed\u6cd5\uff09\u5f88\u4e0d\u4e00\u6837\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u4e3b\u8981\u533a\u522b\u6709\u4ee5\u4e0b\u51e0\u70b9\uff1a AT&T \u8bed\u6cd5\u4e2d\u7acb\u5373\u64cd\u4f5c\u6570\u524d\u9762\u8981\u52a0\u4e00\u4e2a\u5b57\u7b26 '$' \uff1b\u5bc4\u5b58\u5668\u64cd\u4f5c\u6570\u540d\u524d\u8981\u52a0\u5b57\u7b26\u767e\u5206\u53f7 '%' ; \u7edd\u5bf9\u8df3\u8f6c/\u8c03\u7528\uff08\u76f8\u5bf9\u4e8e\u4e0e\u7a0b\u5e8f\u8ba1\u6570\u5668\u6709\u5173\u7684\u8df3\u8f6c/\u8c03\u7528\uff09\u64cd\u4f5c\u6570\u524d\u9762\u8981\u52a0\u661f\u53f7'*'\u3002\u800c Intel \u6c47\u7f16\u8bed\u6cd5\u5747\u6ca1\u6709\u8fd9\u4e9b\u9650\u5236\u3002 AT&T \u8bed\u6cd5\u4e0e Intel \u8bed\u6cd5\u4f7f\u7528\u7684\u6e90\u548c\u76ee\u7684\u64cd\u4f5c\u6570\u6b21\u5e8f\u6b63\u597d\u76f8\u53cd\u3002AT&T \u7684\u6e90\u548c\u76ee\u7684\u64cd\u4f5c\u6570\u662f\u4ece\u5de6\u5230\u53f3 '\u6e90, \u76ee\u7684'\u3002\u4f8b\u5982 Intel \u7684\u8bed\u53e5 'add eax, 4' \u5bf9\u5e94 AT&T \u7684 'addl $4, %eax'\u3002 AT&T \u8bed\u6cd5\u4e2d\u5185\u5b58\u64cd\u4f5c\u6570\u7684\u957f\u5ea6\uff08\u5bbd\u5ea6\uff09\u7531\u64cd\u4f5c\u7801\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u6765\u786e\u5b9a\u3002\u64cd\u4f5c\u7801\u540e\u7f00'b'\u3001'w'\u548c'l'\u5206\u522b\u6307\u793a\u5185\u5b58\u5f15\u7528\u5bbd\u5ea6\u4e3a 8 \u4f4d\u5b57\u8282\uff08byte\uff09\u300116 \u4f4d\u5b57\uff08word\uff09\u548c 32 \u4f4d\u957f\u5b57\uff08long\uff09\u3002sIntel \u8bed\u6cd5\u5219\u901a\u8fc7\u5728\u5185\u5b58\u64cd\u4f5c\u6570\u524d\u4f7f\u7528\u524d\u7f00'byte prt'\u3001'word ptr'\u548c'dword ptr'\u6765\u8fbe\u5230\u540c\u6837\u76ee\u7684\u3002\u56e0\u6b64\uff0cIntel \u7684\u8bed\u53e5'mov al, byte ptr foo'\u5bf9\u5e94\u4e8e AT&T \u7684\u8bed\u53e5'movb $foo, %al'\u3002 AT&T \u8bed\u6cd5\u4e2d\u7acb\u5373\u5f62\u5f0f\u7684\u8fdc\u8df3\u8f6c\u548c\u8fdc\u8c03\u7528\u4e3a'ljmp/lcall $section, $offset'\uff0c\u800c Intel \u7684\u662f 'jmp/call far section:offset'\u3002\u540c\u6837\uff0cAT&T \u8bed\u6cd5\u4e2d\u8fdc\u8fd4\u56de\u6307\u4ee4'lret $stack-adjust'\u5bf9\u5e94 Intel\u7684'ret far stack-adjust'\u3002 \u7b26\u53f7 :(Label)\u662f\u540e\u9762\u7d27\u968f\u4e00\u4e2a\u5192\u53f7\u7684\u7b26\u53f7\u3002\u6b64\u65f6\u8be5\u7b26\u53f7\u4ee3\u8868\u6d3b\u52a8\u4f4d\u7f6e\u8ba1\u6570\u5668\u7684\u5f53\u524d\u503c\uff1b\u7b26\u53f7\u540d\u4ee5\u4e00\u4e2a\u5b57\u6bcd\u6216'._'\u5b57\u7b26\u4e4b\u4e00\u5f00\u59cb\u3002\u5c40\u90e8\u7b26\u53f7\u7528\u4e8e\u534f\u52a9\u7f16\u8bd1\u5668\u548c\u7a0b\u5e8f\u5458\u4e34\u65f6\u4f7f\u7528\u540d\u79f0\u3002\u5728\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u5171\u6709 10 \u4e2a\u5c40\u90e8\u7b26\u53f7\u540d\uff08'0'...'9'\uff09\u53ef\u4f9b\u91cd\u590d\u4f7f\u7528\u3002\u4e3a\u4e86\u5b9a\u4e49\u4e00\u4e2a\u5c40\u90e8\u7b26\u53f7\uff0c\u53ea\u8981\u5199\u51fa\u5f62\u5982'N:'\u7684\u6807\u53f7\uff08\u5176\u4e2d N \u4ee3\u8868\u4efb\u4f55\u6570\u5b57\uff09\u3002\u82e5\u662f\u5f15\u7528\u524d\u9762\u6700\u8fd1\u5b9a\u4e49\u7684\u8fd9\u4e2a\u7b26\u53f7\uff0c\u9700\u8981\u5199\u6210'Nb'\uff1b\u82e5\u9700\u5f15\u7528\u4e0b\u4e00\u4e2a\u5b9a\u4e49\u7684\u5c40\u90e8\u6807\u53f7\uff0c\u5219\u9700\u8981\u5199\u6210'Nf'\u3002jmp 1b \u8df3\u8f6c\u5230\u4e4b\u524d\u7684\u6807\u53f71\u5904\uff1bjmp 1f \u8df3\u8f6c\u5230\u4e4b\u540e\u7684\u6807\u53f71\u5904 \u7279\u6b8a\u7b26\u53f7'.'\u8868\u793a as \u6c47\u7f16\u7684\u5f53\u524d\u5730\u5740\u3002 \u6bcf\u4e2a\u533a\u90fd\u6709\u4e00\u4e2a\u4f4d\u7f6e\u8ba1\u6570\u5668\uff08Location Counter\uff09\uff0c\u5b83\u4f1a\u5bf9\u6bcf\u4e2a\u6c47\u7f16\u8fdb\u8be5\u533a\u7684\u5b57\u8282\u8fdb\u884c\u8ba1\u6570\u3002 \u5185\u5b58\u5f15\u7528 section:disp(base, index, scale) 3.2 \u6240\u6709\u6c47\u7f16\u547d\u4ee4\u7684\u540d\u79f0\u90fd\u4ee5'.'\u5f00\u59cb\uff0c\u5176\u4f59\u662f\u5b57\u7b26\uff0c\u5e76\u4e14\u5927\u5c0f\u5199\u65e0\u5173\u3002\u4f46\u662f\u901a\u5e38\u90fd\u4f7f\u7528\u5c0f\u5199\u5b57\u7b26\u3002 .align abs-expr1, abs-expr2, abs-expr3 .align\u7684\u4f5c\u7528\u5728\u4e8e\u5bf9\u6307\u4ee4\u6216\u8005\u6570\u636e\u7684\u5b58\u653e\u5730\u5740\u8fdb\u884c\u5bf9\u9f50\uff0c\u6709\u4e9bCPU\u67b6\u6784\u8981\u6c42\u56fa\u5b9a\u7684\u6307\u4ee4\u957f\u5ea6\u5e76\u4e14\u5b58\u653e\u5730\u5740\u76f8\u5bf9\u4e8e2\u7684\u5e42\u6307\u6570\u5706\u6574\uff0c\u5426\u5219\u7a0b\u5e8f\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\uff0c\u6bd4\u5982ARM\uff1b\u6709\u4e9b\u7cfb\u7edf\u5374\u4e0d\u9700\u8981\uff0c\u5982\u679c\u4e0d\u9075\u5faa\u5730\u5740\u7684\u5706\u6574\u89c4\u5219\uff0c\u7a0b\u5e8f\u4f9d\u7136\u53ef\u4ee5\u6b63\u786e\u6267\u884c\uff0c\u53ea\u662f\u964d\u4f4e\u4e86\u4e00\u4e9b\u6267\u884c\u6548\u7387\uff0c\u6bd4\u5982i386\u3002.align\u7684\u4f5c\u7528\u8303\u56f4\u53ea\u9650\u4e8e\u7d27\u8ddf\u5b83\u7684\u90a3\u6761\u6307\u4ee4\u6216\u8005\u6570\u636e\uff0c\u800c\u63a5\u4e0b\u6765\u7684\u6307\u4ee4\u6216\u8005\u6570\u636e\u7684\u5730\u5740\u7531\u4e0a\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\u548c\u5176\u957f\u5ea6\u51b3\u5b9a\u3002 abs-expr1\u5728\u4e0d\u540c\u683c\u5f0f\u7684\u76ee\u6807\u6587\u4ef6\u4e0a\u542b\u4e49\u4e0d\u540c\uff0c\u5728a.out\uff08assembler and link editor output \uff09\u8be5\u8868\u8fbe\u5f0f\u503c\u662f\u4f4d\u7f6e\u8ba1\u6570\u5668\u503c\u589e\u52a0\u540e\u5176\u4e8c\u8fdb\u5236\u503c\u6700\u53f3\u9762 0 \u503c\u4f4d\u7684\u4e2a\u6570\uff0c\u5373\u662f 2 \u7684 \u6b21\u65b9\u503c\u3002\u4f8b\u5982\uff0c'.align 3'\u8868\u793a\u628a\u4f4d\u7f6e\u8ba1\u6570\u5668\u503c\u589e\u52a0\u5230 8 \u7684\u500d\u6570\u4e0a\u3002\u5982\u679c\u4f4d\u7f6e\u8ba1\u6570\u5668\u503c\u672c\u8eab\u5c31\u662f 8 \u7684\u500d\u6570\uff0c\u90a3\u4e48\u5c31\u65e0\u9700\u6539\u53d8\u3002\u4f46\u662f\u5bf9\u4e8e\u4f7f\u7528 ELF\uff08Executable and Linking Format \uff09\u683c\u5f0f\u7684 80X86 \u7cfb\u7edf\uff0c\u8be5\u8868\u8fbe\u5f0f\u503c\u76f4\u63a5\u5c31\u662f\u8981\u6c42\u5bf9\u5176\u7684\u5b57\u8282\u6570\u3002\u4f8b\u5982'.align 8'\u5c31\u662f\u628a\u4f4d\u7f6e\u8ba1\u6570\u5668\u503c\u589e\u52a0\u5230 8 \u7684\u500d\u6570\u4e0a\u3002 abs-expr2 \u7ed9\u51fa\u7528\u4e8e\u5bf9\u9f50\u800c\u586b\u5145\u7684\u5b57\u8282\u503c abs-expr3 \u7528\u4e8e\u6307\u793a\u5bf9\u9f50\u64cd\u4f5c\u5141\u8bb8\u586b\u5145\u8df3\u8fc7\u7684\u6700\u5927\u5b57\u8282\u6570\u3002\u5982\u679c\u5bf9\u9f50\u64cd\u4f5c\u8981\u6c42\u8df3\u8fc7\u7684\u5b57\u8282\u6570\u5927\u4e8e\u8fd9\u4e2a\u6700\u5927\u503c\uff0c\u90a3\u4e48\u8be5\u5bf9\u9f50\u64cd\u4f5c\u5c31\u88ab\u53d6\u6d88\u3002 .global symbol(\u6216\u8005.globl symbol) \u8be5\u6c47\u7f16\u547d\u4ee4\u4f1a\u4f7f\u5f97\u94fe\u63a5\u5668 ld \u80fd\u770b\u89c1\u7b26\u53f7 symbol\u3002\u5982\u679c\u5728\u6211\u4eec\u7684\u76ee\u6807\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u7b26\u53f7 symbol\uff0c\u90a3\u4e48\u5b83\u7684\u503c\u5c06\u80fd\u88ab\u94fe\u63a5\u8fc7\u7a0b\u4e2d\u7684\u5176\u4ed6\u76ee\u6807\u6587\u4ef6\u4f7f\u7528\u3002\u82e5\u76ee\u6807\u6587\u4ef6\u4e2d\u6ca1\u6709\u5b9a\u4e49\u8be5\u7b26\u53f7\uff0c\u90a3\u4e48\u5b83\u7684\u5c5e\u6027\u5c06\u4ece\u94fe\u63a5\u8fc7\u7a0b\u4e2d\u5176\u4ed6\u76ee\u6807\u6587\u4ef6\u7684\u540c\u540d\u7b26\u53f7\u4e2d\u83b7\u5f97\u3002 .string \"string\" \u5b9a\u4e49\u4e00\u4e2a\u6216\u591a\u4e2a\u7528\u9017\u53f7\u5206\u5f00\u7684\u5b57\u7b26\u4e32\u3002\u5728\u5b57\u7b26\u4e32\u4e2d\u53ef\u4ee5\u4f7f\u7528\u8f6c\u4e49\u5b57\u7b26\u3002\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u81ea\u52a8\u9644\u52a0\u4e00\u4e2aNULL \u5b57\u7b26\u7ed3\u5c3e\u3002 .ascii \"string\"... \u4ece\u4f4d\u7f6e\u8ba1\u6570\u5668\u6240\u503c\u5f53\u524d\u4f4d\u7f6e\u4e3a\u5b57\u7b26\u4e32\u5206\u914d\u7a7a\u95f4\u5e76\u5b58\u50a8\u5b57\u7b26\u4e32\u3002\u53ef\u4f7f\u7528\u9017\u53f7\u5206\u5f00\u5199\u51fa\u591a\u4e2a\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c'.ascii \"Hellow world!\", \"My assembler\"'\u3002\u8be5\u6c47\u7f16\u547d\u4ee4\u4f1a\u8ba9 as \u628a\u8fd9\u4e9b\u5b57\u7b26\u4e32\u6c47\u7f16\u5728\u8fde\u7eed\u7684\u5730\u5740\u4f4d\u7f6e\u5904\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u540e\u9762\u4e0d\u4f1a\u81ea\u52a8\u6dfb\u52a0 0\uff08NULL\uff09\u5b57\u8282\u3002 .asciz \"string\"... \u8be5\u6c47\u7f16\u547d\u4ee4\u4e0e'.ascii'\u7c7b\u4f3c\uff0c\u4f46\u662f\u6bcf\u4e2a\u5b57\u7b26\u4e32\u540e\u9762\u4f1a\u81ea\u52a8\u6dfb\u52a0 NULL \u5b57\u7b26\u3002 .byte expressions \u8be5\u6c47\u7f16\u547d\u4ee4\u5b9a\u4e49 0 \u4e2a\u6216\u591a\u4e2a\u7528\u9017\u53f7\u5206\u5f00\u7684\u5b57\u8282\u503c\u3002\u6bcf\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u662f\u4e00\u4e2a\u5b57\u8282\u3002 .quad bignums \u6307\u5b9a 0 \u4e2a\u6216\u591a\u4e2a\u7528\u9017\u53f7\u5206\u5f00\u7684 8 \u5b57\u8282\u5927\u6570 bignum\u3002\u5982\u679c\u5927\u6570\u653e\u4e0d\u8fdb 8 \u4e2a\u5b57\u8282\u4e2d\uff0c\u5219\u53d6\u4f4e8\u4e2a\u5b57\u8282\u3002 3.3 \u2003\u867d\u7136 as \u901a\u5e38\u7528\u6765\u7f16\u5199\u7eaf 32 \u4f4d\u7684 80X86 \u4ee3\u7801\uff0c\u4f46\u662f 1995 \u5e74\u540e\u5b83\u5bf9\u7f16\u5199\u8fd0\u884c\u4e8e\u5b9e\u6a21\u5f0f\u6216 16 \u4f4d\u4fdd\u62a4\u6a21\u5f0f\u7684\u4ee3\u7801\u4e5f\u63d0\u4f9b\u6709\u9650\u7684\u652f\u6301\u3002\u4e3a\u4e86\u8ba9 as \u6c47\u7f16\u65f6\u4ea7\u751f 16 \u4f4d\u4ee3\u7801\uff0c\u9700\u8981\u5728\u8fd0\u884c\u4e8e 16 \u4f4d\u6a21\u5f0f\u7684\u6307\u4ee4\u8bed\u53e5\u4e4b\u524d\u6dfb\u52a0\u6c47\u7f16\u547d\u4ee4'.code16'\uff0c\u5e76\u4e14\u4f7f\u7528\u6c47\u7f16\u547d\u4ee4'.code32'\u8ba9 as \u6c47\u7f16\u5668\u5207\u6362\u56de 32 \u4f4d\u4ee3\u7801\u6c47\u7f16\u65b9\u5f0f\u3002as \u4e0d\u533a\u5206 16 \u4f4d\u548c 32 \u4f4d\u6c47\u7f16\u8bed\u53e5\uff0c\u5728 16 \u4f4d\u548c 32 \u4f4d\u6a21\u5f0f\u4e0b\u6bcf\u6761\u6307\u4ee4\u7684\u529f\u80fd\u5b8c\u5168\u4e00\u6837\u800c\u4e0e\u6a21\u5f0f\u65e0\u5173\u3002as\u603b\u662f\u4e3a\u6c47\u7f16\u8bed\u53e5\u4ea7\u751f 32 \u4f4d\u7684\u6307\u4ee4\u4ee3\u7801\u800c\u4e0d\u7ba1\u6307\u4ee4\u5c06\u8fd0\u884c\u5728 16 \u4f4d\u8fd8\u662f 32 \u4f4d\u6a21\u5f0f\u4e0b\u3002\u5982\u679c\u4f7f\u7528\u6c47\u7f16\u547d\u4ee4'.code16'\u8ba9 as \u5904\u4e8e 16 \u4f4d\u6a21\u5f0f\u4e0b\uff0c\u90a3\u4e48 as \u4f1a\u81ea\u52a8\u4e3a\u6240\u6709\u6307\u4ee4\u52a0\u4e0a\u4e00\u4e2a\u5fc5\u8981\u7684\u64cd\u4f5c\u6570\u5bbd\u5ea6\u524d\u7f00\u800c\u8ba9\u6307\u4ee4\u8fd0\u884c\u5728 16 \u4f4d\u6a21\u5f0f. \u2003\u7531\u4e8e\u5728 1991 \u5e74\u5f00\u53d1 Linux \u5185\u6838 0.12 \u65f6 as \u6c47\u7f16\u5668\u8fd8\u4e0d\u652f\u6301 16 \u4f4d\u4ee3\u7801\uff0c\u56e0\u6b64\u5728\u7f16\u5199\u548c\u6c47\u7f16 0.12 \u5185\u6838\u5b9e\u6a21\u5f0f\u4e0b\u7684\u5f15\u5bfc\u542f\u52a8\u4ee3\u7801\u548c\u521d\u59cb\u5316\u6c47\u7f16\u7a0b\u5e8f\u65f6\u4f7f\u7528\u4e86\u524d\u9762\u4ecb\u7ecd\u7684 as86 \u6c47\u7f16\u5668. 4 \u5d4c\u5165\u5f0f\u6c47\u7f16 \u2003\u57fa\u672c\u683c\u5f0f: __asm__ __volatile__(\u201c\u6c47\u7f16\u8bed\u53e5\u201d : \u8f93\u51fa\u5bc4\u5b58\u5668 : \u8f93\u5165\u5bc4\u5b58\u5668 : \u4f1a\u88ab\u4fee\u6539\u7684\u5bc4\u5b58\u5668); \u9664\u7b2c 1 \u884c\u4ee5\u5916\uff0c\u540e\u9762\u5e26\u5192\u53f7\u7684\u884c\u82e5\u4e0d\u4f7f\u7528\u5c31\u90fd\u53ef\u4ee5\u7701\u7565\u3002\u5176\u4e2d\uff0c\u201c__asm__\u201d\u662f\u5185\u8054\u6c47\u7f16\u8bed\u53e5\u5173\u952e\u8bcd; __volatile__\"\u8868\u793a\u7f16\u8bd1\u5668\u4e0d\u8981\u4f18\u5316\u4ee3\u7801;\u201c\u6c47\u7f16\u8bed\u53e5\u201d\u662f\u4f60\u5199\u6c47\u7f16\u6307\u4ee4\u7684\u5730\u65b9; \u201c\u4f1a\u88ab\u4fee\u6539\u7684\u5bc4\u5b58\u5668\u201d\u8868\u793a\u4f60\u5df2\u5bf9\u5176\u4e2d\u5217\u51fa\u7684\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u8fdb\u884c\u4e86\u6539\u52a8\uff0cgcc \u7f16\u8bd1\u5668\u4e0d\u80fd\u518d\u4f9d\u8d56\u4e8e\u5b83\u539f\u5148\u5bf9\u8fd9\u4e9b\u5bc4\u5b58\u5668\u52a0\u8f7d\u7684\u503c\u3002\u5982\u679c\u5fc5\u8981\u7684\u8bdd\uff0cgcc \u9700\u8981\u91cd\u65b0\u52a0\u8f7d\u8fd9\u4e9b\u5bc4\u5b58\u5668\u3002 __asm__ __violate__ (\"movl %1,%0\" : \"=r\" (result) : \"m\" (input)); \u2003\"movl %1,%0\"\u662f\u6307\u4ee4\u6a21\u677f\uff1b\"%0\"\u548c\"%1\"\u4ee3\u8868\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\uff0c\u79f0\u4e3a\u5360\u4f4d\u7b26\uff0c\u5185\u5d4c\u6c47\u7f16\u9760\u5b83\u4eec\u5c06C \u8bed\u8a00\u8868\u8fbe\u5f0f\u4e0e\u6307\u4ee4\u64cd\u4f5c\u6570\u76f8\u5bf9\u5e94\u3002\u6307\u4ee4\u6a21\u677f\u540e\u9762\u7528\u5c0f\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u662fC\u8bed\u8a00\u8868\u8fbe\u5f0f\uff0c\u672c\u4f8b\u4e2d\u53ea\u6709\u4e24\u4e2a\uff1a\"result\"\u548c\"input\"\uff0c\u4ed6\u4eec\u6309\u7167\u51fa\u73b0\u7684\u987a\u5e8f\u5206 \u522b\u4e0e\u6307\u4ee4\u64cd\u4f5c\u6570\"%0\"\uff0c\"%1\"\u5bf9\u5e94\uff1b\u6ce8\u610f\u5bf9\u5e94\u987a\u5e8f\uff1a\u7b2c\u4e00\u4e2aC \u8868\u8fbe\u5f0f\u5bf9\u5e94\"%0\"\uff1b\u7b2c\u4e8c\u4e2a\u8868\u8fbe\u5f0f\u5bf9\u5e94\"%1\"\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u64cd\u4f5c\u6570\u81f3\u591a\u670910 \u4e2a\uff0c\u5206\u522b\u7528\"%0\",\"%1\"....\"%9\"\u8868\u793a\u3002 \u2003\"result\"\u524d\u9762\u7684\u9650\u5236\u5b57\u7b26\u4e32\u662f\"=r\"\uff0c\u5176\u4e2d\"=\"\u8868\u793a\"result\"\u662f\u8f93\u51fa\u64cd\u4f5c\u6570\uff0c\"r\" \u8868\u793a\u9700\u8981\u5c06\"result\"\u4e0e\u67d0\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\u76f8\u5173\u8054\uff0c\u5148\u5c06\u64cd\u4f5c\u6570\u7684\u503c\u8bfb\u5165\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u5728\u6307\u4ee4\u4e2d\u4f7f\u7528\u76f8\u5e94\u5bc4\u5b58\u5668\uff0c\u800c\u4e0d\u662f\"result\"\u672c\u8eab\u3002 \u2003\"input\"\u524d\u7684\"m\"\u8868\u793a\u64cd\u4f5c\u6570\u653e\u5728\u5185\u5b58\uff0c\u800c\u4e0d\u662f\u5bc4\u5b58\u5668\u4e2d\u3002 \u2003\"r\"\u548c\"m\"\u90fd\u662f\u9650\u5236\u7b26;C\u8868\u8fbe\u5f0f\u6216\u8005\u53d8\u91cf\u4e0e\u5bc4\u5b58\u5668\u7684\u5173\u7cfb\u7531GCC\u81ea\u52a8\u5904\u7406\uff0c\u6211\u4eec\u53ea\u9700\u4f7f\u7528\u9650\u5236\u5b57\u7b26\u4e32\u6307\u5bfcGCC\u5982\u4f55\u5904\u7406\u5373\u53ef\u3002 \u5206\u7c7b \u9650\u5b9a\u7b26 \u63cf\u8ff0 \u901a\u7528\u5bc4\u5b58\u5668 \"a\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165eax \u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u5047\u8bbeeax\u5df2\u7ecf\u88ab\u4f7f\u7528\uff0c\u90a3\u600e\u4e48\u529e\uff1f \u5176\u5b9e\u5f88\u7b80\u5355\uff1a\u56e0\u4e3aGCC \u77e5\u9053eax \u5df2\u7ecf\u88ab\u4f7f\u7528\uff0c\u5b83\u5728\u8fd9\u6bb5\u6c47\u7f16\u4ee3\u7801 \u7684\u8d77\u59cb\u5904\u63d2\u5165\u4e00\u6761\u8bed\u53e5pushl %eax\uff0c\u5c06eax \u5185\u5bb9\u4fdd\u5b58\u5230\u5806\u6808\uff0c\u7136 \u540e\u5728\u8fd9\u6bb5\u4ee3\u7801\u7ed3\u675f\u5904\u518d\u589e\u52a0\u4e00\u6761\u8bed\u53e5popl %eax\uff0c\u6062\u590deax\u7684\u5185\u5bb9. \"b\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165ebx \"c\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165ecx \"d\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165edx \"s\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165esi \"d\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165edi \"q\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165eax\uff0cebx\uff0cecx\uff0cedx\u4e2d\u7684\u4e00\u4e2a \"r\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u4e5f\u5c31\u662feax\uff0cebx\uff0cecx\uff0c edx\uff0cesi\uff0cedi\u4e2d\u7684\u4e00\u4e2a \"A\" \u628aeax\u548cedx\u5408\u6210\u4e00\u4e2a64 \u4f4d\u7684\u5bc4\u5b58\u5668(use long longs) \u5185\u5b58 \"m\" \u5185\u5b58\u53d8\u91cf \"o\" \u64cd\u4f5c\u6570\u4e3a\u5185\u5b58\u53d8\u91cf\uff0c\u4f46\u662f\u5176\u5bfb\u5740\u65b9\u5f0f\u662f\u504f\u79fb\u91cf\u7c7b\u578b\uff0c \u4e5f\u5373\u662f\u57fa\u5740\u5bfb\u5740\uff0c\u6216\u8005\u662f\u57fa\u5740\u52a0\u53d8\u5740\u5bfb\u5740 \"V\" \u64cd\u4f5c\u6570\u4e3a\u5185\u5b58\u53d8\u91cf\uff0c\u4f46\u5bfb\u5740\u65b9\u5f0f\u4e0d\u662f\u504f\u79fb\u91cf\u7c7b\u578b \" \" \u64cd\u4f5c\u6570\u4e3a\u5185\u5b58\u53d8\u91cf\uff0c\u4f46\u5bfb\u5740\u65b9\u5f0f\u4e3a\u81ea\u52a8\u589e\u91cf \"p\" \u64cd\u4f5c\u6570\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u5185\u5b58\u5730\u5740\uff08\u6307\u9488\uff09 \u5bc4\u5b58\u5668\u6216\u5185\u5b58 \"g\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165eax\uff0cebx\uff0cecx\uff0cedx\u4e2d\u7684\u4e00\u4e2a\u6216\u8005\u4f5c\u4e3a\u5185\u5b58\u53d8\u91cf \"X\" \u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b \u7acb\u5373\u6570 \"I\" 0-31\u4e4b\u95f4\u7684\u7acb\u5373\u6570\uff08\u7528\u4e8e32\u4f4d\u79fb\u4f4d\u6307\u4ee4\uff09 \"J\" 0-63\u4e4b\u95f4\u7684\u7acb\u5373\u6570\uff08\u7528\u4e8e64\u4f4d\u79fb\u4f4d\u6307\u4ee4\uff09 \"N\" 0-255\u4e4b\u95f4\u7684\u7acb\u5373\u6570\uff08\u7528\u4e8eout\u6307\u4ee4\uff09 \"i\" \u7acb\u5373\u6570 \"n\" \u7acb\u5373\u6570\uff0c\u6709\u4e9b\u7cfb\u7edf\u4e0d\u652f\u6301\u9664\u5b57\u4ee5\u5916\u7684\u7acb\u5373\u6570\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u5e94\u8be5\u4f7f\u7528\"n\"\u800c\u4e0d\u662f\"i\" \u5339\u914d \"0\"\uff0c \u8868\u793a\u7528\u5b83\u9650\u5236\u7684\u64cd\u4f5c\u6570\u4e0e\u67d0\u4e2a\u6307\u5b9a\u7684\u64cd\u4f5c\u6570\u5339\u914d\uff0c \"1\" ... \"9\" \u4e5f\u5373\u8be5\u64cd\u4f5c\u6570\u5c31\u662f\u6307\u5b9a\u7684\u90a3\u4e2a\u64cd\u4f5c\u6570\uff0c\u4f8b\u5982\"0\" \u53bb\u63cf\u8ff0\"\uff051\"\u64cd\u4f5c\u6570\uff0c\u90a3\u4e48\"%1\"\u5f15\u7528\u7684\u5176\u5b9e\u5c31 \u662f\"%0\"\u64cd\u4f5c\u6570\uff0c\u6ce8\u610f\u4f5c\u4e3a\u9650\u5b9a\u7b26\u5b57\u6bcd\u76840\uff0d9 \u4e0e \u6307\u4ee4\u4e2d\u7684\"\uff050\"\uff0d\"\uff059\"\u7684\u533a\u522b\uff0c\u524d\u8005\u63cf\u8ff0\u64cd\u4f5c\u6570\uff0c \u540e\u8005\u4ee3\u8868\u64cd\u4f5c\u6570\u3002 : \"=D\" (addr), \"=c\" (cnt) : \"d\" (port), \"0\" (addr), \"1\" (cnt) \u8fd9\u91cc\u76840 \u8868\u793a\u8f93\u5165\u90e8\u5206\u7684addr\u4e0e\u8f93\u51fa\u90e8\u5206\u7684addr\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\uff0c \u5373\u5b83\u4eec\u4f7f\u7528\u76f8\u540c\u5bc4\u5b58\u5668\uff0c\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u4f7f\u7528\u8be5\u5bc4\u5b58\u5668\u539f\u6709\u7684\u503c\u3002 : \"=a\" (__res) : \"0\" (__NR_read), \"b\" ((long)(fd)), \"c\" ((long)(buf)), \"d\" ((long)(n))); \u8fd9\u91cc__res\u662f%0\u64cd\u4f5c\u6570, __NR_read\u662f%1\u64cd\u4f5c\u6570, \u7528\"0\"\u63cf\u8ff0%1\u64cd\u4f5c\u6570, \u5219%1\u5f15\u7528\u7684\u5373\u662f%0, \u5373eax\u5bc4\u5b58\u5668\u3002 & \u8be5\u8f93\u51fa\u64cd\u4f5c\u6570\u4e0d\u80fd\u4f7f\u7528\u8fc7\u548c\u8f93\u5165\u64cd\u4f5c\u6570\u76f8\u540c\u7684\u5bc4\u5b58\u5668 \u64cd\u4f5c\u6570\u7c7b\u578b \"=\" \u64cd\u4f5c\u6570\u5728\u6307\u4ee4\u4e2d\u662f\u53ea\u5199\u7684\uff08\u8f93\u51fa\u64cd\u4f5c\u6570\uff09 \"+\" \u64cd\u4f5c\u6570\u5728\u6307\u4ee4\u4e2d\u662f\u8bfb\u5199\u7c7b\u578b\u7684\uff08\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c\u6570\uff09 \u6d6e\u70b9\u6570 \"f\" \u6d6e\u70b9\u5bc4\u5b58\u5668 \"t\" \u7b2c\u4e00\u4e2a\u6d6e\u70b9\u5bc4\u5b58\u5668 \"u\" \u7b2c\u4e8c\u4e2a\u6d6e\u70b9\u5bc4\u5b58\u5668 \"G\" \u6807\u51c6\u768480387\u6d6e\u70b9\u5e38\u6570 % \u8be5\u64cd\u4f5c\u6570\u53ef\u4ee5\u548c\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u6570\u4ea4\u6362\u4f4d\u7f6e \u4f8b\u5982addl\u7684\u4e24\u4e2a\u64cd\u4f5c\u6570\u53ef\u4ee5\u4ea4\u6362\u987a\u5e8f \uff08\u5f53\u7136\u4e24\u4e2a\u64cd\u4f5c\u6570\u90fd\u4e0d\u80fd\u662f\u7acb\u5373\u6570\uff09 # \u90e8\u5206\u6ce8\u91ca\uff0c\u4ece\u8be5\u5b57\u7b26\u5230\u5176\u540e\u7684\u9017\u53f7\u4e4b\u95f4\u6240\u6709\u5b57\u6bcd\u88ab\u5ffd\u7565 * \u8868\u793a\u5982\u679c\u9009\u7528\u5bc4\u5b58\u5668\uff0c\u5219\u5176\u540e\u7684\u5b57\u6bcd\u88ab\u5ffd\u7565 \u2003 C\u51fd\u6570\u8c03\u7528\u673a\u5236 \uff1a\u8981\u5728\u8fdb\u5165\u51fd\u6570\u65f6\u4e3a\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u4e14\u5728\u9000\u51fa\u51fd\u6570\u65f6\u6536\u56de\u8fd9\u90e8\u5206\u7a7a\u95f4\uff0c\u6570\u636e\u7684\u4f20\u9012\u548c\u5c40\u90e8\u53d8\u91cf\u5b58\u50a8\u7a7a\u95f4\u7684\u5206\u914d\u4e0e\u56de\u6536\u5219\u901a\u8fc7\u6808\u64cd\u4f5c\u6765\u5b9e\u73b0\u3002 \u5355\u4e2a\u51fd\u6570\u8c03\u7528\u64cd\u4f5c\u6240\u4f7f\u7528\u7684\u6808\u90e8\u5206\u88ab\u79f0\u4e3a\u6808\u5e27\uff08Stack frame\uff09\u7ed3\u6784 \uff0c\u6808\u5e27\u7ed3\u6784\u7684\u4e24\u7aef\u7531\u4e24\u4e2a\u6307\u9488\u6765\u6307\u5b9a\u3002\u5bc4\u5b58\u5668 ebp \u901a\u5e38\u7528\u4f5c\u5e27\u6307\u9488\uff08frame pointer\uff09\uff0c\u800c esp \u5219\u7528\u4f5c\u6808\u6307\u9488\uff08stack pointer\uff09\u3002\u5728\u51fd\u6570\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6808\u6307\u9488 esp \u4f1a\u968f\u7740\u6570\u636e\u7684\u5165\u6808\u548c\u51fa\u6808\u800c\u79fb\u52a8\uff0c\u56e0\u6b64\u51fd\u6570\u4e2d\u5bf9\u5927\u90e8\u5206\u6570\u636e\u7684\u8bbf\u95ee\u90fd\u57fa\u4e8e\u5e27\u6307\u9488 ebp \u8fdb\u884c\u3002","title":"2_\u6c47\u7f16\u8bed\u6cd5"},{"location":"os/2_as86/#_1","text":"","title":"\u6c47\u7f16\u8bed\u6cd5"},{"location":"os/2_as86/#1-as86","text":"\u6c47\u7f16\u5668\u7f16\u8bd1\u4ea7\u751f\u7684\u76ee\u6807\u6587\u4ef6 objfile \u901a\u5e38\u8d77\u7801\u5305\u542b\u4e09\u4e2a\u6bb5\u6216\u533a3\uff08section\uff09\uff0c\u5373\u6b63\u6587\u6bb5\uff08.text\uff09\u3001\u6570\u636e\u6bb5\uff08.data\uff09\u548c\u672a\u521d\u59cb\u5316\u6570\u636e\u6bb5\uff08.bss\uff09 \u2003as86 \u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u4e2d\uff0c\u51e1\u662f\u4ee5\u611f\u53f9\u53f7'!'\u6216\u5206\u53f7';'\u5f00\u59cb\u7684\u8bed\u53e5\u5176\u540e\u9762\u5747\u4e3a\u6ce8\u91ca\u6587\u5b57\u3002\u6ce8\u91ca\u8bed\u53e5\u53ef\u4ee5\u653e\u5728\u4efb\u4f55\u8bed\u53e5\u7684\u540e\u9762\uff0c\u4e5f\u53ef\u4ee5\u4ece\u4e00\u4e2a\u65b0\u884c\u5f00\u59cb\u3002 \u2003\u6c47\u7f16\u6307\u793a\u7b26(\u6c47\u7f16\u4f2a\u6307\u4ee4 or \u4f2a\u64cd\u4f5c\u7b26):\u4ee5\u5b57\u7b26\u2018.\u2019\u5f00\u59cb\uff0c\u5e76\u4e14\u4e0d\u4f1a\u5728\u7f16\u8bd1\u65f6\u4ea7\u751f\u4efb\u4f55\u4ee3\u7801\u3002\u6c47\u7f16\u6307\u793a\u7b26\u7531\u4e00\u4e2a\u4f2a\u64cd\u4f5c\u7801\uff0c\u540e\u8ddf 0 \u4e2a\u6216\u591a\u4e2a\u64cd\u4f5c\u6570\u7ec4\u6210\u3002 \u4ee5\u4e0b\u9762\u4e3a\u4f8b\uff0cglobl\u5373\u662f\u4f2a\u64cd\u4f5c\u7801\uff0c\u540e\u9762\u7684\u6807\u53f7begtext\u5373\u662f\u64cd\u4f5c\u6570\u3002\uff08\u6807\u53f7\u5373\u540e\u9762\u5e26\u2018:\u2019\u7684\u6807\u8bc6\u7b26\uff09\u3002 eg. .globl begtext, begdata, begbss, endtext, enddata, endbss .text begtext: .data begdata: .bss begbss: .text \u2018globl'\u2019\u4f2a\u64cd\u4f5c\u7b26\u7528\u4e8e\u5b9a\u4e49\u968f\u540e\u7684\u6807\u53f7\u6807\u8bc6\u7b26\u662f\u5916\u90e8\u7684\u6216\u5168\u5c40\u7684\uff0c\u5e76\u4e14\u5373\u4f7f\u4e0d\u4f7f\u7528\u4e5f\u5f3a\u5236\u5f15\u5165; \u2018.text\u2019\u7528\u4e8e\u6807\u8bc6\u6b63\u6587\u6bb5\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u5e76\u628a\u5f53\u524d\u6bb5\u5207\u6362\u5230text\u6bb5; '.data'\u7528\u4e8e\u6807\u8bc6\u6570\u636e\u6bb5\u7684\u5f00\u59cb\u4f4d\u7f6e\uff0c\u5e76\u628a\u5f53\u524d\u6bb5\u5207\u6362\u5230 data\u6bb5\uff1b\u800c'.bbs'\u5219\u7528\u4e8e\u6807\u8bc6\u4e00\u4e2a\u672a\u521d\u59cb\u5316\u6570\u636e\u6bb5\u7684\u5f00\u59cb\uff0c\u5e76\u628a\u5f53\u524d\u6bb5\u6539\u53d8\u6210 bbs \u6bb5\u3002 \u2003\u7acb\u5373\u6570\u524d\u4e00\u5b9a\u8981\u52a0 '#' \uff0c\u5426\u5219\u5c06\u4f5c\u4e3a\u5185\u5b58\u5730\u5740\u4f7f\u7528\u800c\u4f7f\u8bed\u53e5\u53d8\u6210\u7edd\u5bf9\u5bfb\u5740\u8bed\u53e5\uff1a mov ax, #123; \uff01\u8fd9\u91cc\u5b58\u5165ax\u7684\u662f\u5341\u8fdb\u5236123\uff0c\u82e5\u5b58\u5165\u5341\u516d\u8fdb\u5236\uff0c\u5219\u4e3a0x123\u3002 \u628a\u4e00\u4e2a\u6807\u53f7\uff08\u4f8b\u5982 msg1\uff09\u7684\u5730\u5740\u503c\u653e\u5165\u5bc4\u5b58\u5668\u4e2d\u65f6\u4e5f\u4e00\u5b9a\u8981\u5728\u524d\u9762\u52a0'#'\uff0c\u5426\u5219\u4f1a\u53d8\u6210\u628a msg1 \u5730\u5740\u5904\u7684\u5185\u5bb9\u653e\u5230\u4e86\u5bc4\u5b58\u5668\u4e2d\u3002 mov ax, #msg1 \u2003\u5b9a\u4e49\u5b57\u7b26\u4e32\u9700\u8981\u4f2a\u64cd\u4f5c\u7b26\u2018.ascii\u2019,\u5e76\u4e14\u9700\u8981\u4f7f\u7528\u53cc\u5f15\u53f7\u62ec\u4f4f\u5b57\u7b26\u4e32\uff1b\u800c\u4f2a\u64cd\u4f5c\u7b26\u2019.asciiz\u2019\u8fd8\u4f1a\u5728\u5b57\u7b26\u4e32\u540e\u6dfb\u52a0\u4e00\u4e2aNULL(0)\u5b57\u7b26\uff1b \u5b9a\u4e49\u5b57\u7b26\u9700\u8981\u4f2a\u64cd\u4f5c\u7b26\u2019.byte\u2019\uff0c\u4f7f\u7528\u5355\u5f15\u53f7\u628a\u5b57\u7b26\u62ec\u4f4f\uff1b .ascii \u201chello world\u201d .byte 12 ! \u76f4\u63a5\u4f7f\u7528ascii\u7801 .byte \u2018D\u2019 \u2003'.org' \u5b9a\u4e49\u4e86\u5f53\u524d\u6c47\u7f16\u7684\u4f4d\u7f6e\u3002\u8fd9\u6761\u8bed\u53e5\u4f1a\u628a\u6c47\u7f16\u5668\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u5f53\u524d\u6bb5\u7684\u4f4d\u7f6e\u8ba1\u6570\u5668\u503c\u8c03\u6574\u4e3a\u8be5\u4f2a\u64cd\u4f5c\u7b26\u8bed\u53e5\u4e0a\u7ed9\u51fa\u503c\u3002 \u2003\u4f2a\u64cd\u4f5c\u7b26 '.word' \u7528\u4e8e\u5728\u5f53\u524d\u4f4d\u7f6e\u5b9a\u4e49\u4e00\u4e2a\u53cc\u5b57\u8282\u5185\u5b58\u5bf9\u8c61\uff08\u53d8\u91cf\uff09\uff0c\u5176\u540e\u53ef\u4ee5\u662f\u4e00\u4e2a\u6570\u6216\u8005\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\u3002","title":"1. as86"},{"location":"os/2_as86/#2-build-and-link-for-as86","text":"as86 -0 -a -o boot.o boot.s ld86 -0 -s -o boot boot.o \u2003\u5176\u4e2d\u9009\u9879'-0'\u7528\u4e8e\u751f\u6210 8086 \u7684 16\u4f4d\u76ee\u6807\u7a0b\u5e8f\uff1b'-a'\u7528\u4e8e\u6307\u5b9a\u751f\u6210\u4e0e GNU as \u548c ld \u90e8\u5206\u517c\u5bb9\u7684\u4ee3\u7801\u3002'-s'\u9009\u9879\u7528\u4e8e\u544a\u8bc9\u94fe\u63a5\u5668\u8981\u53bb\u9664\u6700\u540e\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u7684\u7b26\u53f7\u4fe1\u606f\u3002'-o' \u6307\u5b9a\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u540d\u79f0\u3002 \u2003as86 \u6c47\u7f16\u5668\u4ec5\u7528\u4e8e\u7f16\u8bd1\u5185\u6838\u4e2d\u7684 boot/bootsect.s\u4ee5\u53ca\u5f15\u5bfc\u6247\u533a\u7a0b\u5e8f\u548c\u5b9e\u6a21\u5f0f\u4e0b\u7684\u8bbe\u7f6e\u7a0b\u5e8fboot/setup.s\u3002 \u5185\u6838\u4e2d\u5176\u4f59\u6240\u6709\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\uff08\u5305\u62ec C \u8bed\u8a00\u4ea7\u751f\u7684\u6c47\u7f16\u7a0b\u5e8f\uff09\u5747\u4f7f\u7528 gas \uff08\u7b80\u79f0as\uff09\u6765\u7f16\u8bd1\uff0c\u5e76\u4e0e C\u8bed\u8a00\u7a0b\u5e8f\u7f16\u8bd1\u4ea7\u751f\u7684\u6a21\u5757\u94fe\u63a5.","title":"2. build and link for as86"},{"location":"os/2_as86/#3-attas","text":"","title":"3. AT&amp;T\u2014\u2014as\u8bed\u6cd5"},{"location":"os/2_as86/#31","text":"\u6c47\u7f16\u5668\u4f7f\u7528 AT&T \u7cfb\u7edf V \u7684\u6c47\u7f16\u8bed\u6cd5\uff08\u4e0b\u9762\u7b80\u79f0\u4e3a AT&T \u8bed\u6cd5\uff09\u3002\u8fd9\u79cd\u8bed\u6cd5\u4e0e Intel \u6c47\u7f16\u7a0b\u5e8f\u4f7f\u7528\u7684\u8bed\u6cd5\uff08\u7b80\u79f0 Intel \u8bed\u6cd5\uff09\u5f88\u4e0d\u4e00\u6837\uff0c\u5b83\u4eec\u4e4b\u95f4\u7684\u4e3b\u8981\u533a\u522b\u6709\u4ee5\u4e0b\u51e0\u70b9\uff1a AT&T \u8bed\u6cd5\u4e2d\u7acb\u5373\u64cd\u4f5c\u6570\u524d\u9762\u8981\u52a0\u4e00\u4e2a\u5b57\u7b26 '$' \uff1b\u5bc4\u5b58\u5668\u64cd\u4f5c\u6570\u540d\u524d\u8981\u52a0\u5b57\u7b26\u767e\u5206\u53f7 '%' ; \u7edd\u5bf9\u8df3\u8f6c/\u8c03\u7528\uff08\u76f8\u5bf9\u4e8e\u4e0e\u7a0b\u5e8f\u8ba1\u6570\u5668\u6709\u5173\u7684\u8df3\u8f6c/\u8c03\u7528\uff09\u64cd\u4f5c\u6570\u524d\u9762\u8981\u52a0\u661f\u53f7'*'\u3002\u800c Intel \u6c47\u7f16\u8bed\u6cd5\u5747\u6ca1\u6709\u8fd9\u4e9b\u9650\u5236\u3002 AT&T \u8bed\u6cd5\u4e0e Intel \u8bed\u6cd5\u4f7f\u7528\u7684\u6e90\u548c\u76ee\u7684\u64cd\u4f5c\u6570\u6b21\u5e8f\u6b63\u597d\u76f8\u53cd\u3002AT&T \u7684\u6e90\u548c\u76ee\u7684\u64cd\u4f5c\u6570\u662f\u4ece\u5de6\u5230\u53f3 '\u6e90, \u76ee\u7684'\u3002\u4f8b\u5982 Intel \u7684\u8bed\u53e5 'add eax, 4' \u5bf9\u5e94 AT&T \u7684 'addl $4, %eax'\u3002 AT&T \u8bed\u6cd5\u4e2d\u5185\u5b58\u64cd\u4f5c\u6570\u7684\u957f\u5ea6\uff08\u5bbd\u5ea6\uff09\u7531\u64cd\u4f5c\u7801\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u6765\u786e\u5b9a\u3002\u64cd\u4f5c\u7801\u540e\u7f00'b'\u3001'w'\u548c'l'\u5206\u522b\u6307\u793a\u5185\u5b58\u5f15\u7528\u5bbd\u5ea6\u4e3a 8 \u4f4d\u5b57\u8282\uff08byte\uff09\u300116 \u4f4d\u5b57\uff08word\uff09\u548c 32 \u4f4d\u957f\u5b57\uff08long\uff09\u3002sIntel \u8bed\u6cd5\u5219\u901a\u8fc7\u5728\u5185\u5b58\u64cd\u4f5c\u6570\u524d\u4f7f\u7528\u524d\u7f00'byte prt'\u3001'word ptr'\u548c'dword ptr'\u6765\u8fbe\u5230\u540c\u6837\u76ee\u7684\u3002\u56e0\u6b64\uff0cIntel \u7684\u8bed\u53e5'mov al, byte ptr foo'\u5bf9\u5e94\u4e8e AT&T \u7684\u8bed\u53e5'movb $foo, %al'\u3002 AT&T \u8bed\u6cd5\u4e2d\u7acb\u5373\u5f62\u5f0f\u7684\u8fdc\u8df3\u8f6c\u548c\u8fdc\u8c03\u7528\u4e3a'ljmp/lcall $section, $offset'\uff0c\u800c Intel \u7684\u662f 'jmp/call far section:offset'\u3002\u540c\u6837\uff0cAT&T \u8bed\u6cd5\u4e2d\u8fdc\u8fd4\u56de\u6307\u4ee4'lret $stack-adjust'\u5bf9\u5e94 Intel\u7684'ret far stack-adjust'\u3002 \u7b26\u53f7 :(Label)\u662f\u540e\u9762\u7d27\u968f\u4e00\u4e2a\u5192\u53f7\u7684\u7b26\u53f7\u3002\u6b64\u65f6\u8be5\u7b26\u53f7\u4ee3\u8868\u6d3b\u52a8\u4f4d\u7f6e\u8ba1\u6570\u5668\u7684\u5f53\u524d\u503c\uff1b\u7b26\u53f7\u540d\u4ee5\u4e00\u4e2a\u5b57\u6bcd\u6216'._'\u5b57\u7b26\u4e4b\u4e00\u5f00\u59cb\u3002\u5c40\u90e8\u7b26\u53f7\u7528\u4e8e\u534f\u52a9\u7f16\u8bd1\u5668\u548c\u7a0b\u5e8f\u5458\u4e34\u65f6\u4f7f\u7528\u540d\u79f0\u3002\u5728\u4e00\u4e2a\u7a0b\u5e8f\u4e2d\u5171\u6709 10 \u4e2a\u5c40\u90e8\u7b26\u53f7\u540d\uff08'0'...'9'\uff09\u53ef\u4f9b\u91cd\u590d\u4f7f\u7528\u3002\u4e3a\u4e86\u5b9a\u4e49\u4e00\u4e2a\u5c40\u90e8\u7b26\u53f7\uff0c\u53ea\u8981\u5199\u51fa\u5f62\u5982'N:'\u7684\u6807\u53f7\uff08\u5176\u4e2d N \u4ee3\u8868\u4efb\u4f55\u6570\u5b57\uff09\u3002\u82e5\u662f\u5f15\u7528\u524d\u9762\u6700\u8fd1\u5b9a\u4e49\u7684\u8fd9\u4e2a\u7b26\u53f7\uff0c\u9700\u8981\u5199\u6210'Nb'\uff1b\u82e5\u9700\u5f15\u7528\u4e0b\u4e00\u4e2a\u5b9a\u4e49\u7684\u5c40\u90e8\u6807\u53f7\uff0c\u5219\u9700\u8981\u5199\u6210'Nf'\u3002jmp 1b \u8df3\u8f6c\u5230\u4e4b\u524d\u7684\u6807\u53f71\u5904\uff1bjmp 1f \u8df3\u8f6c\u5230\u4e4b\u540e\u7684\u6807\u53f71\u5904 \u7279\u6b8a\u7b26\u53f7'.'\u8868\u793a as \u6c47\u7f16\u7684\u5f53\u524d\u5730\u5740\u3002 \u6bcf\u4e2a\u533a\u90fd\u6709\u4e00\u4e2a\u4f4d\u7f6e\u8ba1\u6570\u5668\uff08Location Counter\uff09\uff0c\u5b83\u4f1a\u5bf9\u6bcf\u4e2a\u6c47\u7f16\u8fdb\u8be5\u533a\u7684\u5b57\u8282\u8fdb\u884c\u8ba1\u6570\u3002 \u5185\u5b58\u5f15\u7528 section:disp(base, index, scale)","title":"3.1"},{"location":"os/2_as86/#32","text":"\u6240\u6709\u6c47\u7f16\u547d\u4ee4\u7684\u540d\u79f0\u90fd\u4ee5'.'\u5f00\u59cb\uff0c\u5176\u4f59\u662f\u5b57\u7b26\uff0c\u5e76\u4e14\u5927\u5c0f\u5199\u65e0\u5173\u3002\u4f46\u662f\u901a\u5e38\u90fd\u4f7f\u7528\u5c0f\u5199\u5b57\u7b26\u3002 .align abs-expr1, abs-expr2, abs-expr3 .align\u7684\u4f5c\u7528\u5728\u4e8e\u5bf9\u6307\u4ee4\u6216\u8005\u6570\u636e\u7684\u5b58\u653e\u5730\u5740\u8fdb\u884c\u5bf9\u9f50\uff0c\u6709\u4e9bCPU\u67b6\u6784\u8981\u6c42\u56fa\u5b9a\u7684\u6307\u4ee4\u957f\u5ea6\u5e76\u4e14\u5b58\u653e\u5730\u5740\u76f8\u5bf9\u4e8e2\u7684\u5e42\u6307\u6570\u5706\u6574\uff0c\u5426\u5219\u7a0b\u5e8f\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\uff0c\u6bd4\u5982ARM\uff1b\u6709\u4e9b\u7cfb\u7edf\u5374\u4e0d\u9700\u8981\uff0c\u5982\u679c\u4e0d\u9075\u5faa\u5730\u5740\u7684\u5706\u6574\u89c4\u5219\uff0c\u7a0b\u5e8f\u4f9d\u7136\u53ef\u4ee5\u6b63\u786e\u6267\u884c\uff0c\u53ea\u662f\u964d\u4f4e\u4e86\u4e00\u4e9b\u6267\u884c\u6548\u7387\uff0c\u6bd4\u5982i386\u3002.align\u7684\u4f5c\u7528\u8303\u56f4\u53ea\u9650\u4e8e\u7d27\u8ddf\u5b83\u7684\u90a3\u6761\u6307\u4ee4\u6216\u8005\u6570\u636e\uff0c\u800c\u63a5\u4e0b\u6765\u7684\u6307\u4ee4\u6216\u8005\u6570\u636e\u7684\u5730\u5740\u7531\u4e0a\u4e00\u6761\u6307\u4ee4\u7684\u5730\u5740\u548c\u5176\u957f\u5ea6\u51b3\u5b9a\u3002 abs-expr1\u5728\u4e0d\u540c\u683c\u5f0f\u7684\u76ee\u6807\u6587\u4ef6\u4e0a\u542b\u4e49\u4e0d\u540c\uff0c\u5728a.out\uff08assembler and link editor output \uff09\u8be5\u8868\u8fbe\u5f0f\u503c\u662f\u4f4d\u7f6e\u8ba1\u6570\u5668\u503c\u589e\u52a0\u540e\u5176\u4e8c\u8fdb\u5236\u503c\u6700\u53f3\u9762 0 \u503c\u4f4d\u7684\u4e2a\u6570\uff0c\u5373\u662f 2 \u7684 \u6b21\u65b9\u503c\u3002\u4f8b\u5982\uff0c'.align 3'\u8868\u793a\u628a\u4f4d\u7f6e\u8ba1\u6570\u5668\u503c\u589e\u52a0\u5230 8 \u7684\u500d\u6570\u4e0a\u3002\u5982\u679c\u4f4d\u7f6e\u8ba1\u6570\u5668\u503c\u672c\u8eab\u5c31\u662f 8 \u7684\u500d\u6570\uff0c\u90a3\u4e48\u5c31\u65e0\u9700\u6539\u53d8\u3002\u4f46\u662f\u5bf9\u4e8e\u4f7f\u7528 ELF\uff08Executable and Linking Format \uff09\u683c\u5f0f\u7684 80X86 \u7cfb\u7edf\uff0c\u8be5\u8868\u8fbe\u5f0f\u503c\u76f4\u63a5\u5c31\u662f\u8981\u6c42\u5bf9\u5176\u7684\u5b57\u8282\u6570\u3002\u4f8b\u5982'.align 8'\u5c31\u662f\u628a\u4f4d\u7f6e\u8ba1\u6570\u5668\u503c\u589e\u52a0\u5230 8 \u7684\u500d\u6570\u4e0a\u3002 abs-expr2 \u7ed9\u51fa\u7528\u4e8e\u5bf9\u9f50\u800c\u586b\u5145\u7684\u5b57\u8282\u503c abs-expr3 \u7528\u4e8e\u6307\u793a\u5bf9\u9f50\u64cd\u4f5c\u5141\u8bb8\u586b\u5145\u8df3\u8fc7\u7684\u6700\u5927\u5b57\u8282\u6570\u3002\u5982\u679c\u5bf9\u9f50\u64cd\u4f5c\u8981\u6c42\u8df3\u8fc7\u7684\u5b57\u8282\u6570\u5927\u4e8e\u8fd9\u4e2a\u6700\u5927\u503c\uff0c\u90a3\u4e48\u8be5\u5bf9\u9f50\u64cd\u4f5c\u5c31\u88ab\u53d6\u6d88\u3002 .global symbol(\u6216\u8005.globl symbol) \u8be5\u6c47\u7f16\u547d\u4ee4\u4f1a\u4f7f\u5f97\u94fe\u63a5\u5668 ld \u80fd\u770b\u89c1\u7b26\u53f7 symbol\u3002\u5982\u679c\u5728\u6211\u4eec\u7684\u76ee\u6807\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86\u7b26\u53f7 symbol\uff0c\u90a3\u4e48\u5b83\u7684\u503c\u5c06\u80fd\u88ab\u94fe\u63a5\u8fc7\u7a0b\u4e2d\u7684\u5176\u4ed6\u76ee\u6807\u6587\u4ef6\u4f7f\u7528\u3002\u82e5\u76ee\u6807\u6587\u4ef6\u4e2d\u6ca1\u6709\u5b9a\u4e49\u8be5\u7b26\u53f7\uff0c\u90a3\u4e48\u5b83\u7684\u5c5e\u6027\u5c06\u4ece\u94fe\u63a5\u8fc7\u7a0b\u4e2d\u5176\u4ed6\u76ee\u6807\u6587\u4ef6\u7684\u540c\u540d\u7b26\u53f7\u4e2d\u83b7\u5f97\u3002 .string \"string\" \u5b9a\u4e49\u4e00\u4e2a\u6216\u591a\u4e2a\u7528\u9017\u53f7\u5206\u5f00\u7684\u5b57\u7b26\u4e32\u3002\u5728\u5b57\u7b26\u4e32\u4e2d\u53ef\u4ee5\u4f7f\u7528\u8f6c\u4e49\u5b57\u7b26\u3002\u6bcf\u4e2a\u5b57\u7b26\u4e32\u90fd\u81ea\u52a8\u9644\u52a0\u4e00\u4e2aNULL \u5b57\u7b26\u7ed3\u5c3e\u3002 .ascii \"string\"... \u4ece\u4f4d\u7f6e\u8ba1\u6570\u5668\u6240\u503c\u5f53\u524d\u4f4d\u7f6e\u4e3a\u5b57\u7b26\u4e32\u5206\u914d\u7a7a\u95f4\u5e76\u5b58\u50a8\u5b57\u7b26\u4e32\u3002\u53ef\u4f7f\u7528\u9017\u53f7\u5206\u5f00\u5199\u51fa\u591a\u4e2a\u5b57\u7b26\u4e32\u3002\u4f8b\u5982\uff0c'.ascii \"Hellow world!\", \"My assembler\"'\u3002\u8be5\u6c47\u7f16\u547d\u4ee4\u4f1a\u8ba9 as \u628a\u8fd9\u4e9b\u5b57\u7b26\u4e32\u6c47\u7f16\u5728\u8fde\u7eed\u7684\u5730\u5740\u4f4d\u7f6e\u5904\uff0c\u6bcf\u4e2a\u5b57\u7b26\u4e32\u540e\u9762\u4e0d\u4f1a\u81ea\u52a8\u6dfb\u52a0 0\uff08NULL\uff09\u5b57\u8282\u3002 .asciz \"string\"... \u8be5\u6c47\u7f16\u547d\u4ee4\u4e0e'.ascii'\u7c7b\u4f3c\uff0c\u4f46\u662f\u6bcf\u4e2a\u5b57\u7b26\u4e32\u540e\u9762\u4f1a\u81ea\u52a8\u6dfb\u52a0 NULL \u5b57\u7b26\u3002 .byte expressions \u8be5\u6c47\u7f16\u547d\u4ee4\u5b9a\u4e49 0 \u4e2a\u6216\u591a\u4e2a\u7528\u9017\u53f7\u5206\u5f00\u7684\u5b57\u8282\u503c\u3002\u6bcf\u4e2a\u8868\u8fbe\u5f0f\u7684\u503c\u662f\u4e00\u4e2a\u5b57\u8282\u3002 .quad bignums \u6307\u5b9a 0 \u4e2a\u6216\u591a\u4e2a\u7528\u9017\u53f7\u5206\u5f00\u7684 8 \u5b57\u8282\u5927\u6570 bignum\u3002\u5982\u679c\u5927\u6570\u653e\u4e0d\u8fdb 8 \u4e2a\u5b57\u8282\u4e2d\uff0c\u5219\u53d6\u4f4e8\u4e2a\u5b57\u8282\u3002","title":"3.2"},{"location":"os/2_as86/#33","text":"\u867d\u7136 as \u901a\u5e38\u7528\u6765\u7f16\u5199\u7eaf 32 \u4f4d\u7684 80X86 \u4ee3\u7801\uff0c\u4f46\u662f 1995 \u5e74\u540e\u5b83\u5bf9\u7f16\u5199\u8fd0\u884c\u4e8e\u5b9e\u6a21\u5f0f\u6216 16 \u4f4d\u4fdd\u62a4\u6a21\u5f0f\u7684\u4ee3\u7801\u4e5f\u63d0\u4f9b\u6709\u9650\u7684\u652f\u6301\u3002\u4e3a\u4e86\u8ba9 as \u6c47\u7f16\u65f6\u4ea7\u751f 16 \u4f4d\u4ee3\u7801\uff0c\u9700\u8981\u5728\u8fd0\u884c\u4e8e 16 \u4f4d\u6a21\u5f0f\u7684\u6307\u4ee4\u8bed\u53e5\u4e4b\u524d\u6dfb\u52a0\u6c47\u7f16\u547d\u4ee4'.code16'\uff0c\u5e76\u4e14\u4f7f\u7528\u6c47\u7f16\u547d\u4ee4'.code32'\u8ba9 as \u6c47\u7f16\u5668\u5207\u6362\u56de 32 \u4f4d\u4ee3\u7801\u6c47\u7f16\u65b9\u5f0f\u3002as \u4e0d\u533a\u5206 16 \u4f4d\u548c 32 \u4f4d\u6c47\u7f16\u8bed\u53e5\uff0c\u5728 16 \u4f4d\u548c 32 \u4f4d\u6a21\u5f0f\u4e0b\u6bcf\u6761\u6307\u4ee4\u7684\u529f\u80fd\u5b8c\u5168\u4e00\u6837\u800c\u4e0e\u6a21\u5f0f\u65e0\u5173\u3002as\u603b\u662f\u4e3a\u6c47\u7f16\u8bed\u53e5\u4ea7\u751f 32 \u4f4d\u7684\u6307\u4ee4\u4ee3\u7801\u800c\u4e0d\u7ba1\u6307\u4ee4\u5c06\u8fd0\u884c\u5728 16 \u4f4d\u8fd8\u662f 32 \u4f4d\u6a21\u5f0f\u4e0b\u3002\u5982\u679c\u4f7f\u7528\u6c47\u7f16\u547d\u4ee4'.code16'\u8ba9 as \u5904\u4e8e 16 \u4f4d\u6a21\u5f0f\u4e0b\uff0c\u90a3\u4e48 as \u4f1a\u81ea\u52a8\u4e3a\u6240\u6709\u6307\u4ee4\u52a0\u4e0a\u4e00\u4e2a\u5fc5\u8981\u7684\u64cd\u4f5c\u6570\u5bbd\u5ea6\u524d\u7f00\u800c\u8ba9\u6307\u4ee4\u8fd0\u884c\u5728 16 \u4f4d\u6a21\u5f0f. \u2003\u7531\u4e8e\u5728 1991 \u5e74\u5f00\u53d1 Linux \u5185\u6838 0.12 \u65f6 as \u6c47\u7f16\u5668\u8fd8\u4e0d\u652f\u6301 16 \u4f4d\u4ee3\u7801\uff0c\u56e0\u6b64\u5728\u7f16\u5199\u548c\u6c47\u7f16 0.12 \u5185\u6838\u5b9e\u6a21\u5f0f\u4e0b\u7684\u5f15\u5bfc\u542f\u52a8\u4ee3\u7801\u548c\u521d\u59cb\u5316\u6c47\u7f16\u7a0b\u5e8f\u65f6\u4f7f\u7528\u4e86\u524d\u9762\u4ecb\u7ecd\u7684 as86 \u6c47\u7f16\u5668.","title":"3.3"},{"location":"os/2_as86/#4","text":"\u57fa\u672c\u683c\u5f0f: __asm__ __volatile__(\u201c\u6c47\u7f16\u8bed\u53e5\u201d : \u8f93\u51fa\u5bc4\u5b58\u5668 : \u8f93\u5165\u5bc4\u5b58\u5668 : \u4f1a\u88ab\u4fee\u6539\u7684\u5bc4\u5b58\u5668); \u9664\u7b2c 1 \u884c\u4ee5\u5916\uff0c\u540e\u9762\u5e26\u5192\u53f7\u7684\u884c\u82e5\u4e0d\u4f7f\u7528\u5c31\u90fd\u53ef\u4ee5\u7701\u7565\u3002\u5176\u4e2d\uff0c\u201c__asm__\u201d\u662f\u5185\u8054\u6c47\u7f16\u8bed\u53e5\u5173\u952e\u8bcd; __volatile__\"\u8868\u793a\u7f16\u8bd1\u5668\u4e0d\u8981\u4f18\u5316\u4ee3\u7801;\u201c\u6c47\u7f16\u8bed\u53e5\u201d\u662f\u4f60\u5199\u6c47\u7f16\u6307\u4ee4\u7684\u5730\u65b9; \u201c\u4f1a\u88ab\u4fee\u6539\u7684\u5bc4\u5b58\u5668\u201d\u8868\u793a\u4f60\u5df2\u5bf9\u5176\u4e2d\u5217\u51fa\u7684\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u8fdb\u884c\u4e86\u6539\u52a8\uff0cgcc \u7f16\u8bd1\u5668\u4e0d\u80fd\u518d\u4f9d\u8d56\u4e8e\u5b83\u539f\u5148\u5bf9\u8fd9\u4e9b\u5bc4\u5b58\u5668\u52a0\u8f7d\u7684\u503c\u3002\u5982\u679c\u5fc5\u8981\u7684\u8bdd\uff0cgcc \u9700\u8981\u91cd\u65b0\u52a0\u8f7d\u8fd9\u4e9b\u5bc4\u5b58\u5668\u3002 __asm__ __violate__ (\"movl %1,%0\" : \"=r\" (result) : \"m\" (input)); \u2003\"movl %1,%0\"\u662f\u6307\u4ee4\u6a21\u677f\uff1b\"%0\"\u548c\"%1\"\u4ee3\u8868\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\uff0c\u79f0\u4e3a\u5360\u4f4d\u7b26\uff0c\u5185\u5d4c\u6c47\u7f16\u9760\u5b83\u4eec\u5c06C \u8bed\u8a00\u8868\u8fbe\u5f0f\u4e0e\u6307\u4ee4\u64cd\u4f5c\u6570\u76f8\u5bf9\u5e94\u3002\u6307\u4ee4\u6a21\u677f\u540e\u9762\u7528\u5c0f\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u662fC\u8bed\u8a00\u8868\u8fbe\u5f0f\uff0c\u672c\u4f8b\u4e2d\u53ea\u6709\u4e24\u4e2a\uff1a\"result\"\u548c\"input\"\uff0c\u4ed6\u4eec\u6309\u7167\u51fa\u73b0\u7684\u987a\u5e8f\u5206 \u522b\u4e0e\u6307\u4ee4\u64cd\u4f5c\u6570\"%0\"\uff0c\"%1\"\u5bf9\u5e94\uff1b\u6ce8\u610f\u5bf9\u5e94\u987a\u5e8f\uff1a\u7b2c\u4e00\u4e2aC \u8868\u8fbe\u5f0f\u5bf9\u5e94\"%0\"\uff1b\u7b2c\u4e8c\u4e2a\u8868\u8fbe\u5f0f\u5bf9\u5e94\"%1\"\uff0c\u4f9d\u6b21\u7c7b\u63a8\uff0c\u64cd\u4f5c\u6570\u81f3\u591a\u670910 \u4e2a\uff0c\u5206\u522b\u7528\"%0\",\"%1\"....\"%9\"\u8868\u793a\u3002 \u2003\"result\"\u524d\u9762\u7684\u9650\u5236\u5b57\u7b26\u4e32\u662f\"=r\"\uff0c\u5176\u4e2d\"=\"\u8868\u793a\"result\"\u662f\u8f93\u51fa\u64cd\u4f5c\u6570\uff0c\"r\" \u8868\u793a\u9700\u8981\u5c06\"result\"\u4e0e\u67d0\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\u76f8\u5173\u8054\uff0c\u5148\u5c06\u64cd\u4f5c\u6570\u7684\u503c\u8bfb\u5165\u5bc4\u5b58\u5668\uff0c\u7136\u540e\u5728\u6307\u4ee4\u4e2d\u4f7f\u7528\u76f8\u5e94\u5bc4\u5b58\u5668\uff0c\u800c\u4e0d\u662f\"result\"\u672c\u8eab\u3002 \u2003\"input\"\u524d\u7684\"m\"\u8868\u793a\u64cd\u4f5c\u6570\u653e\u5728\u5185\u5b58\uff0c\u800c\u4e0d\u662f\u5bc4\u5b58\u5668\u4e2d\u3002 \u2003\"r\"\u548c\"m\"\u90fd\u662f\u9650\u5236\u7b26;C\u8868\u8fbe\u5f0f\u6216\u8005\u53d8\u91cf\u4e0e\u5bc4\u5b58\u5668\u7684\u5173\u7cfb\u7531GCC\u81ea\u52a8\u5904\u7406\uff0c\u6211\u4eec\u53ea\u9700\u4f7f\u7528\u9650\u5236\u5b57\u7b26\u4e32\u6307\u5bfcGCC\u5982\u4f55\u5904\u7406\u5373\u53ef\u3002 \u5206\u7c7b \u9650\u5b9a\u7b26 \u63cf\u8ff0 \u901a\u7528\u5bc4\u5b58\u5668 \"a\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165eax \u8fd9\u91cc\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u5047\u8bbeeax\u5df2\u7ecf\u88ab\u4f7f\u7528\uff0c\u90a3\u600e\u4e48\u529e\uff1f \u5176\u5b9e\u5f88\u7b80\u5355\uff1a\u56e0\u4e3aGCC \u77e5\u9053eax \u5df2\u7ecf\u88ab\u4f7f\u7528\uff0c\u5b83\u5728\u8fd9\u6bb5\u6c47\u7f16\u4ee3\u7801 \u7684\u8d77\u59cb\u5904\u63d2\u5165\u4e00\u6761\u8bed\u53e5pushl %eax\uff0c\u5c06eax \u5185\u5bb9\u4fdd\u5b58\u5230\u5806\u6808\uff0c\u7136 \u540e\u5728\u8fd9\u6bb5\u4ee3\u7801\u7ed3\u675f\u5904\u518d\u589e\u52a0\u4e00\u6761\u8bed\u53e5popl %eax\uff0c\u6062\u590deax\u7684\u5185\u5bb9. \"b\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165ebx \"c\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165ecx \"d\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165edx \"s\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165esi \"d\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165edi \"q\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165eax\uff0cebx\uff0cecx\uff0cedx\u4e2d\u7684\u4e00\u4e2a \"r\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u4e5f\u5c31\u662feax\uff0cebx\uff0cecx\uff0c edx\uff0cesi\uff0cedi\u4e2d\u7684\u4e00\u4e2a \"A\" \u628aeax\u548cedx\u5408\u6210\u4e00\u4e2a64 \u4f4d\u7684\u5bc4\u5b58\u5668(use long longs) \u5185\u5b58 \"m\" \u5185\u5b58\u53d8\u91cf \"o\" \u64cd\u4f5c\u6570\u4e3a\u5185\u5b58\u53d8\u91cf\uff0c\u4f46\u662f\u5176\u5bfb\u5740\u65b9\u5f0f\u662f\u504f\u79fb\u91cf\u7c7b\u578b\uff0c \u4e5f\u5373\u662f\u57fa\u5740\u5bfb\u5740\uff0c\u6216\u8005\u662f\u57fa\u5740\u52a0\u53d8\u5740\u5bfb\u5740 \"V\" \u64cd\u4f5c\u6570\u4e3a\u5185\u5b58\u53d8\u91cf\uff0c\u4f46\u5bfb\u5740\u65b9\u5f0f\u4e0d\u662f\u504f\u79fb\u91cf\u7c7b\u578b \" \" \u64cd\u4f5c\u6570\u4e3a\u5185\u5b58\u53d8\u91cf\uff0c\u4f46\u5bfb\u5740\u65b9\u5f0f\u4e3a\u81ea\u52a8\u589e\u91cf \"p\" \u64cd\u4f5c\u6570\u662f\u4e00\u4e2a\u5408\u6cd5\u7684\u5185\u5b58\u5730\u5740\uff08\u6307\u9488\uff09 \u5bc4\u5b58\u5668\u6216\u5185\u5b58 \"g\" \u5c06\u8f93\u5165\u53d8\u91cf\u653e\u5165eax\uff0cebx\uff0cecx\uff0cedx\u4e2d\u7684\u4e00\u4e2a\u6216\u8005\u4f5c\u4e3a\u5185\u5b58\u53d8\u91cf \"X\" \u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b \u7acb\u5373\u6570 \"I\" 0-31\u4e4b\u95f4\u7684\u7acb\u5373\u6570\uff08\u7528\u4e8e32\u4f4d\u79fb\u4f4d\u6307\u4ee4\uff09 \"J\" 0-63\u4e4b\u95f4\u7684\u7acb\u5373\u6570\uff08\u7528\u4e8e64\u4f4d\u79fb\u4f4d\u6307\u4ee4\uff09 \"N\" 0-255\u4e4b\u95f4\u7684\u7acb\u5373\u6570\uff08\u7528\u4e8eout\u6307\u4ee4\uff09 \"i\" \u7acb\u5373\u6570 \"n\" \u7acb\u5373\u6570\uff0c\u6709\u4e9b\u7cfb\u7edf\u4e0d\u652f\u6301\u9664\u5b57\u4ee5\u5916\u7684\u7acb\u5373\u6570\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u5e94\u8be5\u4f7f\u7528\"n\"\u800c\u4e0d\u662f\"i\" \u5339\u914d \"0\"\uff0c \u8868\u793a\u7528\u5b83\u9650\u5236\u7684\u64cd\u4f5c\u6570\u4e0e\u67d0\u4e2a\u6307\u5b9a\u7684\u64cd\u4f5c\u6570\u5339\u914d\uff0c \"1\" ... \"9\" \u4e5f\u5373\u8be5\u64cd\u4f5c\u6570\u5c31\u662f\u6307\u5b9a\u7684\u90a3\u4e2a\u64cd\u4f5c\u6570\uff0c\u4f8b\u5982\"0\" \u53bb\u63cf\u8ff0\"\uff051\"\u64cd\u4f5c\u6570\uff0c\u90a3\u4e48\"%1\"\u5f15\u7528\u7684\u5176\u5b9e\u5c31 \u662f\"%0\"\u64cd\u4f5c\u6570\uff0c\u6ce8\u610f\u4f5c\u4e3a\u9650\u5b9a\u7b26\u5b57\u6bcd\u76840\uff0d9 \u4e0e \u6307\u4ee4\u4e2d\u7684\"\uff050\"\uff0d\"\uff059\"\u7684\u533a\u522b\uff0c\u524d\u8005\u63cf\u8ff0\u64cd\u4f5c\u6570\uff0c \u540e\u8005\u4ee3\u8868\u64cd\u4f5c\u6570\u3002 : \"=D\" (addr), \"=c\" (cnt) : \"d\" (port), \"0\" (addr), \"1\" (cnt) \u8fd9\u91cc\u76840 \u8868\u793a\u8f93\u5165\u90e8\u5206\u7684addr\u4e0e\u8f93\u51fa\u90e8\u5206\u7684addr\u662f\u540c\u4e00\u4e2a\u53d8\u91cf\uff0c \u5373\u5b83\u4eec\u4f7f\u7528\u76f8\u540c\u5bc4\u5b58\u5668\uff0c\u8fd9\u6837\u505a\u662f\u4e3a\u4e86\u4f7f\u7528\u8be5\u5bc4\u5b58\u5668\u539f\u6709\u7684\u503c\u3002 : \"=a\" (__res) : \"0\" (__NR_read), \"b\" ((long)(fd)), \"c\" ((long)(buf)), \"d\" ((long)(n))); \u8fd9\u91cc__res\u662f%0\u64cd\u4f5c\u6570, __NR_read\u662f%1\u64cd\u4f5c\u6570, \u7528\"0\"\u63cf\u8ff0%1\u64cd\u4f5c\u6570, \u5219%1\u5f15\u7528\u7684\u5373\u662f%0, \u5373eax\u5bc4\u5b58\u5668\u3002 & \u8be5\u8f93\u51fa\u64cd\u4f5c\u6570\u4e0d\u80fd\u4f7f\u7528\u8fc7\u548c\u8f93\u5165\u64cd\u4f5c\u6570\u76f8\u540c\u7684\u5bc4\u5b58\u5668 \u64cd\u4f5c\u6570\u7c7b\u578b \"=\" \u64cd\u4f5c\u6570\u5728\u6307\u4ee4\u4e2d\u662f\u53ea\u5199\u7684\uff08\u8f93\u51fa\u64cd\u4f5c\u6570\uff09 \"+\" \u64cd\u4f5c\u6570\u5728\u6307\u4ee4\u4e2d\u662f\u8bfb\u5199\u7c7b\u578b\u7684\uff08\u8f93\u5165\u8f93\u51fa\u64cd\u4f5c\u6570\uff09 \u6d6e\u70b9\u6570 \"f\" \u6d6e\u70b9\u5bc4\u5b58\u5668 \"t\" \u7b2c\u4e00\u4e2a\u6d6e\u70b9\u5bc4\u5b58\u5668 \"u\" \u7b2c\u4e8c\u4e2a\u6d6e\u70b9\u5bc4\u5b58\u5668 \"G\" \u6807\u51c6\u768480387\u6d6e\u70b9\u5e38\u6570 % \u8be5\u64cd\u4f5c\u6570\u53ef\u4ee5\u548c\u4e0b\u4e00\u4e2a\u64cd\u4f5c\u6570\u4ea4\u6362\u4f4d\u7f6e \u4f8b\u5982addl\u7684\u4e24\u4e2a\u64cd\u4f5c\u6570\u53ef\u4ee5\u4ea4\u6362\u987a\u5e8f \uff08\u5f53\u7136\u4e24\u4e2a\u64cd\u4f5c\u6570\u90fd\u4e0d\u80fd\u662f\u7acb\u5373\u6570\uff09 # \u90e8\u5206\u6ce8\u91ca\uff0c\u4ece\u8be5\u5b57\u7b26\u5230\u5176\u540e\u7684\u9017\u53f7\u4e4b\u95f4\u6240\u6709\u5b57\u6bcd\u88ab\u5ffd\u7565 * \u8868\u793a\u5982\u679c\u9009\u7528\u5bc4\u5b58\u5668\uff0c\u5219\u5176\u540e\u7684\u5b57\u6bcd\u88ab\u5ffd\u7565 \u2003 C\u51fd\u6570\u8c03\u7528\u673a\u5236 \uff1a\u8981\u5728\u8fdb\u5165\u51fd\u6570\u65f6\u4e3a\u51fd\u6570\u7684\u5c40\u90e8\u53d8\u91cf\u5206\u914d\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u4e14\u5728\u9000\u51fa\u51fd\u6570\u65f6\u6536\u56de\u8fd9\u90e8\u5206\u7a7a\u95f4\uff0c\u6570\u636e\u7684\u4f20\u9012\u548c\u5c40\u90e8\u53d8\u91cf\u5b58\u50a8\u7a7a\u95f4\u7684\u5206\u914d\u4e0e\u56de\u6536\u5219\u901a\u8fc7\u6808\u64cd\u4f5c\u6765\u5b9e\u73b0\u3002 \u5355\u4e2a\u51fd\u6570\u8c03\u7528\u64cd\u4f5c\u6240\u4f7f\u7528\u7684\u6808\u90e8\u5206\u88ab\u79f0\u4e3a\u6808\u5e27\uff08Stack frame\uff09\u7ed3\u6784 \uff0c\u6808\u5e27\u7ed3\u6784\u7684\u4e24\u7aef\u7531\u4e24\u4e2a\u6307\u9488\u6765\u6307\u5b9a\u3002\u5bc4\u5b58\u5668 ebp \u901a\u5e38\u7528\u4f5c\u5e27\u6307\u9488\uff08frame pointer\uff09\uff0c\u800c esp \u5219\u7528\u4f5c\u6808\u6307\u9488\uff08stack pointer\uff09\u3002\u5728\u51fd\u6570\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u6808\u6307\u9488 esp \u4f1a\u968f\u7740\u6570\u636e\u7684\u5165\u6808\u548c\u51fa\u6808\u800c\u79fb\u52a8\uff0c\u56e0\u6b64\u51fd\u6570\u4e2d\u5bf9\u5927\u90e8\u5206\u6570\u636e\u7684\u8bbf\u95ee\u90fd\u57fa\u4e8e\u5e27\u6307\u9488 ebp \u8fdb\u884c\u3002","title":"4 \u5d4c\u5165\u5f0f\u6c47\u7f16"},{"location":"os/3_80x86_protect_mode/","text":"\u4fdd\u62a4\u6a21\u5f0f 20\u4f4d\u5b9e\u6a21\u5f0f\u4e0b\uff0c\u5bfb\u5740\u4e00\u4e2a\u5185\u5b58\u5730\u5740\u4e3b\u8981\u4f7f\u7528\u6bb5\u57fa\u5730\u5740\u548c\u6bb5\u5185\u504f\u79fb\u503c\uff0c\u524d\u8005\u5b58\u653e\u5728\u6bb5\u5bc4\u5b58\u5668\u4e2d\uff0c\u540e\u8005\u5b58\u653e\u5728\u4efb\u4f55\u4e00\u4e2a\u53ef\u7528\u4e8e\u5bfb\u5740\u7684\u5bc4\u5b58\u5668\u4e2d\uff0c\u4e14\u7531\u4e8e\u5bc4\u5b58\u5668\u5927\u5c0f\u4e3a16\u4f4d\uff0c\u5373\u6bb5\u5185\u504f\u79fb\u503c\u6700\u5927\u4e3a2^16B=64KB\uff0c\u8bf4\u660e\u6bb5\u7684\u5927\u5c0f\u56fa\u5b9a\u4e3a64KB. 32\u4f4d\u4fdd\u62a4\u6a21\u5f0f\u5185\u5b58\u5bfb\u5740\u673a\u5236\u89c13.2.1\u5206\u6bb5\u673a\u5236 1. \u5185\u5b58\u7ba1\u7406\u5bc4\u5b58\u5668 GDTR\u3001LDTR\u3001IDTR \u548c TR \u90fd\u662f\u6bb5\u57fa\u5740\u5bc4\u5b58\u5668: GDTR : \u5168\u5c40\u63cf\u8ff0\u7b26\u5bc4\u5b58\u5668\uff0c\u57fa\u5730\u5740\u6307\u5b9aGDT \u8868\u5728\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u8d77\u59cb\u5730\u5740\uff0c\u8868\u957f\u5ea6\u6307\u660e GDT \u8868\u7684\u5b57\u8282\u957f\u5ea6\u503c\u3002\u6307\u4ee4 LGDT \u548c SGDT \u5206\u522b\u7528\u4e8e\u52a0\u8f7d\u548c\u4fdd\u5b58 GDTR \u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u3002 IDTR : \u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868\u5bc4\u5b58\u5668\uff0c\u5b58\u653e\u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868 IDT \u7684 32 \u4f4d\u7ebf\u6027\u57fa\u5730\u5740\u548c 16 \u4f4d\u8868\u957f\u5ea6\u503c\u3002\u6307\u4ee4 LIDT \u548c SIDT \u5206\u522b\u7528\u4e8e\u52a0\u8f7d\u548c\u4fdd\u5b58 IDTR \u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u3002 LDTR : \u5b58\u653e\u5c40\u90e8\u63cf\u8ff0\u7b26\u8868 LDT \u7684 32 \u4f4d\u7ebf\u6027\u57fa\u5730\u5740\u300116 \u4f4d\u6bb5\u9650\u957f\u548c\u63cf\u8ff0\u7b26\u5c5e\u6027\u503c\uff1b\u6307\u4ee4LLDT \u548c SLDT \u5206\u522b\u7528\u4e8e\u52a0\u8f7d\u548c\u4fdd\u5b58 LDTR \u5bc4\u5b58\u5668\u7684\u6bb5\u63cf\u8ff0\u7b26\u90e8\u5206\u3002 \u5305\u542b LDT \u8868\u7684\u6bb5\u5fc5\u987b\u5728 GDT \u8868\u4e2d\u6709\u4e00\u4e2a\u6bb5\u63cf\u8ff0\u7b26\u9879 \u3002\u5f53\u4f7f\u7528 LLDT \u6307\u4ee4\u628a\u542b\u6709 LDT \u8868\u6bb5\u7684\u9009\u62e9\u7b26\u52a0\u8f7d\u8fdb LDTR \u65f6\uff0cLDT \u6bb5\u63cf\u8ff0\u7b26\u7684\u6bb5\u57fa\u5730\u5740\u3001\u6bb5\u9650\u957f\u5ea6\u4ee5\u53ca\u63cf\u8ff0\u7b26\u5c5e\u6027\u4f1a\u88ab\u81ea\u52a8\u5730\u52a0\u8f7d\u5230 LDTR \u4e2d\u3002 \u5f53\u8fdb\u884c\u4efb\u52a1\u5207\u6362\u65f6\uff0c\u5904\u7406\u5668\u4f1a\u628a\u65b0\u4efb\u52a1 LDT\u7684\u6bb5\u9009\u62e9\u7b26\u548c\u6bb5\u63cf\u8ff0\u7b26\u81ea\u52a8\u5730\u52a0\u8f7d\u8fdb LDTR \u4e2d\u3002 TR : \u4efb\u52a1\u5bc4\u5b58\u5668\uff0c\u5b83\u5f15\u7528 GDT \u8868\u4e2d\u7684\u4e00\u4e2a TSS \u7c7b\u578b\u7684\u63cf\u8ff0\u7b26\u3002\u6307\u4ee4 LTR \u548c STR \u5206\u522b\u7528\u4e8e\u52a0\u8f7d\u548c\u4fdd\u5b58 TR \u5bc4\u5b58\u5668\u7684\u6bb5\u9009\u62e9\u7b26\u90e8\u5206\u3002\u5f53\u4f7f\u7528 LTR \u6307\u4ee4\u628a\u9009\u62e9\u7b26\u52a0\u8f7d\u8fdb\u4efb\u52a1\u5bc4\u5b58\u5668\u65f6\uff0cTSS \u63cf\u8ff0\u7b26\u4e2d\u7684\u6bb5\u57fa\u5730\u5740\u3001\u6bb5\u9650\u957f\u5ea6\u4ee5\u53ca\u63cf\u8ff0\u7b26\u5c5e\u6027\u4f1a\u88ab\u81ea\u52a8\u5730\u52a0\u8f7d\u5230\u4efb\u52a1\u5bc4\u5b58\u5668\u4e2d\u3002 \u5f53\u6267\u884c\u4efb\u52a1\u5207\u6362\u65f6\uff0c\u5904\u7406\u5668\u4f1a\u628a\u65b0\u4efb\u52a1\u7684 TSS \u7684\u6bb5\u9009\u62e9\u7b26\u548c\u6bb5\u63cf\u8ff0\u7b26\u81ea\u52a8\u5730\u52a0\u8f7d\u8fdb\u4efb\u52a1\u5bc4\u5b58\u5668 TR \u4e2d\u3002 \u2003 \u4e8b\u5b9e\u4e0a\uff0c\u7531\u4e8e\u5207\u6362TSS\uff0c\u9700\u8981\u8017\u8d39\u8bb8\u591a\u65f6\u95f4\u5728\u4fdd\u5b58\u4e8e\u8d4b\u503c\u4e0a\uff0c\u540e\u6765\u7684linux\u7cfb\u7edf\u91c7\u7528\u5207\u6362\u5185\u6838\u6808\u6765\u6062\u590d\u548c\u4fdd\u5b58\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u3002 2.\u63a7\u5236\u5bc4\u5b58\u5668 CR0 \u4e2d\u542b\u6709\u63a7\u5236\u5904\u7406\u5668\u64cd\u4f5c\u6a21\u5f0f\u548c\u72b6\u6001\u7684\u7cfb\u7edf\u63a7\u5236\u6807\u5fd7\uff0c \u5176\u4e2dCR0\u4e2d\u7684\u4fdd\u62a4\u63a7\u5236\u4f4d\uff1a PE \uff1aCR0 \u7684\u4f4d 0 \u662f\u542f\u7528\u4fdd\u62a4\uff08Protection Enable\uff09\u6807\u5fd7\u3002\u5f53\u8bbe\u7f6e\u8be5\u4f4d\u65f6\u5373\u5f00\u542f\u4e86\u4fdd\u62a4\u6a21\u5f0f\uff1b\u5f53\u590d\u4f4d\u65f6\u5373\u8fdb\u5165\u5b9e\u5730\u5740\u6a21\u5f0f\u3002 PG \uff1aCR0 \u7684\u4f4d 31 \u662f\u5206\u9875\uff08Paging\uff09\u6807\u5fd7\u3002\u5f53\u8bbe\u7f6e\u8be5\u4f4d\u65f6\u5373\u5f00\u542f\u4e86\u5206\u9875\u673a\u5236\uff1b\u5f53\u590d\u4f4d\u65f6\u5219\u7981\u6b62\u5206\u9875\u673a\u5236\uff0c\u6b64\u65f6\u6240\u6709\u7ebf\u6027\u5730\u5740\u7b49\u540c\u4e8e\u7269\u7406\u5730\u5740\u3002\u5728\u5f00\u542f\u8fd9\u4e2a\u6807\u5fd7\u4e4b\u524d\u5fc5\u987b\u5df2\u7ecf\u6216\u8005\u540c\u65f6\u5f00\u542f PE \u6807\u5fd7\u3002\u5373\u82e5\u8981\u542f\u7528\u5206\u9875\u673a\u5236\uff0c\u90a3\u4e48 PE \u548c PG \u6807\u5fd7\u90fd\u8981\u7f6e\u4f4d\u3002\u5728\u4fee\u6539\u4e86 PE \u4f4d\u4e4b\u540e\u7a0b\u5e8f\u5fc5\u987b\u7acb\u523b\u4f7f\u7528\u4e00\u6761\u8df3\u8f6c\u6307\u4ee4\uff0c\u4ee5\u5237\u65b0\u5904\u7406\u5668\u6267\u884c\u7ba1\u9053\u4e2d\u5df2\u7ecf\u83b7\u53d6\u7684\u4e0d\u540c\u6a21\u5f0f\u4e0b\u7684\u4efb\u4f55\u6307\u4ee4\u3002\u5728\u8bbe\u7f6e PE \u4f4d\u4e4b\u524d\uff0c\u7a0b\u5e8f\u5fc5\u987b\u521d\u59cb\u5316\u51e0\u4e2a\u7cfb\u7edf\u6bb5\u548c\u63a7\u5236\u5bc4\u5b58\u5668\u3002 CR2 \u548c CR3 \u7528\u4e8e\u5206\u9875\u673a\u5236: CR3 \u542b\u6709\u5b58\u653e\u9875\u76ee\u5f55\u8868\u9875\u9762\u7684\u7269\u7406\u5730\u5740\uff0c\u56e0\u6b64 CR3 \u4e5f\u88ab\u79f0\u4e3a PDBR\u3002\u56e0\u4e3a\u9875\u76ee\u5f55\u8868\u9875\u9762\u662f\u9875\u5bf9\u9f50\u7684\uff0c\u6240\u4ee5\u8be5\u5bc4\u5b58\u5668\u53ea\u6709\u9ad8 20 \u4f4d\u662f\u6709\u6548\u7684\uff0c\u4e14CR3 \u4e2d\u52a0\u8f7d\u4e00\u4e2a\u65b0\u503c\u65f6\u4f4e12\u4f4d\u5fc5\u987b\u7f6e0\u3002 CR2 \u7528\u4e8e\u51fa\u73b0\u9875\u5f02\u5e38\u65f6\u62a5\u544a\u51fa\u9519\u4fe1\u606f\u3002\u5728\u62a5\u544a\u9875\u5f02\u5e38\u65f6\uff0c\u5904\u7406\u5668\u4f1a\u628a\u5f15\u8d77\u5f02\u5e38\u7684\u7ebf\u6027\u5730\u5740\u5b58\u653e\u5728 CR2\u4e2d\u3002\u56e0\u6b64\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u9875\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5 CR2 \u7684\u5185\u5bb9\u6765\u786e\u5b9a\u7ebf\u6027\u5730\u5b58\u4e2d\u8bfb\u53d6\u9875\u8868\u9879\u65f6\uff0c\u5730\u5740\u7a7a\u95f4\u4e2d\u54ea\u4e00\u4e2a\u9875\u9762\u5f15\u53d1\u4e86\u5f02\u5e38\u3002 \u4f7f\u7528 MOV \u6307\u4ee4\u52a0\u8f7d CR3 \u65f6\u5177\u6709\u8ba9\u9875\u9ad8\u901f\u7f13\u51b2\u65e0\u6548\u7684\u526f\u4f5c\u7528\u3002\u4e3a\u4e86\u51cf\u5c11\u5730\u5740\u8f6c\u6362\u6240\u8981\u6c42\u7684\u603b\u7ebf\u5468\u671f\u6570\u91cf\uff0c\u6700\u8fd1\u8bbf\u95ee\u7684\u9875\u76ee\u5f55\u548c\u9875\u8868\u4f1a\u88ab\u5b58\u653e\u5728\u5904\u7406\u5668\u7684\u9875\u9ad8\u901f\u7f13\u51b2\u5668\u4ef6\u4e2d(\u4f4d\u4e8eCache\u4e2d\uff0c\u67e5\u627e\u901f\u5ea6\u9ad8\u4e8e\u5185\u5b58)\uff0c\u8be5\u7f13\u51b2\u5668\u4ef6\u88ab\u79f0\u4e3a\u8f6c\u6362\u67e5\u627e\u7f13\u51b2\u533a TLB \uff08Translation Lookaside Buffer\uff09\u3002\u53ea\u6709\u5f53 TLB \u4e2d\u4e0d\u5305\u542b\u8981\u6c42\u7684\u9875\u8868\u9879\u65f6\u624d\u4f1a\u4f7f\u7528\u989d\u5916\u7684\u603b\u7ebf\u5468\u671f\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u9875\u8868\u9879\u3002 3.\u4fdd\u62a4\u6a21\u5f0f\u5185\u5b58\u7ba1\u7406 \u2003\u4efb\u4f55\u5b8c\u6574\u7684\u5185\u5b58\u7ba1\u7406\u7cfb\u7edf\u90fd\u5305\u542b\u4e24\u4e2a\u5173\u952e\u90e8\u5206\uff1a\u4fdd\u62a4\u548c\u5730\u5740\u53d8\u6362\u3002\u63d0\u4f9b\u4fdd\u62a4\u63aa\u65bd\u53ef\u4ee5\u9632\u6b62\u4e00\u4e2a\u4efb\u52a1\u8bbf \u95ee\u53e6\u4e00\u4e2a\u4efb\u52a1\u6216\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u5b58\u533a\u57df\u3002\u5730\u5740\u53d8\u6362\u80fd\u591f\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u5728\u7ed9\u4efb\u52a1\u5206\u914d\u5185\u5b58\u65f6\u5177\u6709\u7075\u6d3b\u6027\uff0c\u5e76\u4e14\u56e0 \u4e3a\u6211\u4eec\u53ef\u4ee5\u8ba9\u67d0\u4e9b\u7269\u7406\u5730\u5740\u4e0d\u88ab\u4efb\u4f55\u903b\u8f91\u5730\u5740\u6240\u6620\u5c04\uff0c\u6240\u4ee5\u5728\u5730\u5740\u53d8\u6362\u8fc7\u7a0b\u4e2d\u540c\u65f6\u4e5f\u63d0\u4f9b\u4e86\u5185\u5b58\u4fdd\u62a4\u529f\u80fd\u3002 \u200380x86CPU \u91c7\u7528\u7684\u662f\u5c0f\u7aef\u5bf9\u9f50(\u503c\u7684\u4f4e\u4f4d\u5b58\u653e\u5728\u5730\u5740\u4f4e\u4f4d) 3.1 \u5185\u5b58\u5bfb\u5740 \u2003\u6bb5\u5730\u5740\u90e8\u5206\u4f7f\u7528 16 \u4f4d\u7684\u6bb5\u9009\u62e9\u7b26\u6307\u5b9a\uff0c\u5176\u4e2d 14 \u4f4d\u53ef\u4ee5\u9009\u62e9 2^14 \u6b21\u65b9\u5373 16384(\u537316K) \u4e2a\u6bb5\u3002\u6bb5\u5185\u504f\u79fb\u5730\u5740\u90e8\u5206\u4f7f\u7528 32 \u4f4d\u7684\u503c\u6765\u6307\u5b9a\uff0c\u56e0\u6b64\u6bb5\u5185\u5730\u5740\u53ef\u4ee5\u662f 0 \u5230 4G\u3002\u5373\u4e00\u4e2a\u6bb5\u7684\u6700\u5927\u957f\u5ea6\u53ef\u8fbe 4G\u3002\u7a0b\u5e8f\u4e2d\u7531 16 \u4f4d\u7684\u6bb5\u548c 32 \u4f4d\u7684\u504f\u79fb\u6784\u6210\u7684 48 \u4f4d\u5730\u5740\u6216\u957f\u6307\u9488\u79f0\u4e3a\u4e00\u4e2a\u903b\u8f91\u5730\u5740\uff08\u865a\u62df\u5730\u5740\uff09\u3002\u5b83\u552f\u4e00\u786e\u5b9a\u4e86\u4e00\u4e2a\u6570\u636e\u5bf9\u8c61\u7684\u6bb5\u5730\u5740\u548c\u6bb5\u5185\u504f\u79fb\u5730\u5740\u3002 \u2003\u3002\u5728\u4efb\u4f55\u6307\u5b9a\u65f6\u523b\u7531 CS \u5bfb\u5740\u7684\u6bb5\u79f0\u4e3a\u5f53\u524d\u4ee3\u7801\u6bb5\u3002\u6b64\u65f6EIP \u5bc4\u5b58\u5668\u4e2d\u5305\u542b\u4e86\u5f53\u524d\u4ee3\u7801\u6bb5\u5185\u4e0b\u4e00\u6761\u8981\u6267\u884c\u6307\u4ee4\u7684\u6bb5\u5185\u504f\u79fb\u5730\u5740\u3002\u56e0\u6b64\u8981\u6267\u884c\u6307\u4ee4\u7684\u5730\u5740\u53ef\u8868\u793a\u6210CS:[EIP]\u3002\u53ef\u4ee5\u901a\u8fc7\u6bb5\u95f4\u63a7\u5236\u8f6c\u79fb\u547d\u4ee4\u4e3aCS\u548cEIP\u8d4b\u65b0\u503c\uff0c\u4ece\u800c\u53ef\u4ee5\u628a\u6267\u884c\u4f4d\u7f6e\u6539\u53d8\u5230 \u5176\u4ed6\u7684\u4ee3\u7801\u6bb5\u4e2d\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5728\u4e0d\u540c\u6bb5\u4e2d\u7a0b\u5e8f\u7684\u63a7\u5236\u4f20\u9012\u3002 \u2003eg\uff1acs\u4e2d\u5b58\u653e8\uff0c\u537300000000000000000000000000000100b\uff0c\u5219\u5bf9\u5e94GDT\u8868\u5f00\u59cb\u7684\u5730\u5740\u4e3a8\u7684\u4ee3\u7801\uff0c\u56e0\u4e3a\u6b64\u65f6\u7d22\u5f15\u4e3a1( \u5728 80X86 CPU\u4e2d\uff0c\u6bb5\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u53f3\u79fb 3 \u4f4d\u5373\u662f\u63cf\u8ff0\u7b26\u8868\u4e2d\u4e00\u4e2a\u63cf\u8ff0\u7b26\u7684\u7d22\u5f15\u503c\u3002 )\uff0c\u800c\u4e00\u4e2a\u6bb5\u63cf\u8ff0\u7b26\u5927\u5c0f\u4e3a8B\uff0c\u5219\u7d22\u5f151\u7684\u6bb5\u8d77\u59cb\u5730\u5740\u5373\u4e3a8\u3002 3.2 \u5730\u5740\u53d8\u6362 \u2003\u8ba1\u7b97\u673a\u4e2d\u7684\u7269\u7406\u5185\u5b58\u662f\u5b57\u8282\u7684\u7ebf\u6027\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5b57\u8282\u5177\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u7269\u7406\u5730\u5740\uff1b\u7a0b\u5e8f\u4e2d\u7684\u5730\u5740\u662f\u7531\u6bb5\u9009\u62e9\u7b26\u548c\u6bb5\u504f\u79fb\u91cf\u4e24\u90e8\u5206\u6784\u6210\u7684\u865a\u62df\u5730\u5740; \u903b\u8f91\u5730\u5740\u662f\u6307\u7531\u7a0b\u5e8f\u4ea7\u751f\u7684\u4e0e\u6bb5\u76f8\u5173\u7684\u504f\u79fb\u5730\u5740\u90e8\u5206\uff08\u901a\u5e38\u4e0d\u533a\u5206\u865a\u62df\u5730\u5740\u548c\u903b\u8f91\u5730\u5740\uff0c\u7edf\u79f0\u4e3a\u903b\u8f91\u5730\u5740\uff09; \u7269\u7406\u5730\u5740\u662fCPU \u5916\u90e8\u5730\u5740\u603b\u7ebf\u4e0a\u7684\u5bfb\u5740\u7269\u7406\u5185\u5b58\u7684\u5730\u5740\u4fe1\u53f7\u3002 \u2003\u903b\u8f91\u5730\u5740\u5e76\u4e0d\u80fd\u76f4\u63a5\u7528\u4e8e\u8bbf\u95ee\u7269\u7406\u5185\u5b58\uff0c\u800c\u9700\u8981\u4f7f\u7528\u5730\u5740\u53d8\u6362\u673a\u5236\u5c06\u5b83\u53d8\u6362\u6216\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\u5730\u5740\u4e0a\u3002\u5185\u5b58\u7ba1\u7406\u673a\u5236\u5373\u7528\u4e8e\u5c06\u8fd9\u79cd\u903b\u8f91\u5730\u5740\u8f6c\u6362\u6210\u7269\u7406\u5185\u5b58\u5730\u5740\u3002\u4e3a\u4e86\u51cf\u5c11\u786e\u5b9a\u5730\u5740\u53d8\u6362\u6240\u9700\u8981\u7684\u4fe1\u606f\uff0c\u53d8\u6362\u6216\u6620\u5c04\u901a\u5e38\u4ee5\u5185\u5b58\u5757\u4f5c\u4e3a\u64cd\u4f5c\u5355\u4f4d\u3002 \u5206\u6bb5\u673a\u5236\u548c\u5206\u9875\u673a\u5236 \u662f\u4e24\u79cd\u5e7f\u6cdb\u4f7f\u7528\u7684\u5730\u5740\u53d8\u6362\u6280\u672f\u3002\u5206\u6bb5\u548c\u5206\u9875\u64cd\u4f5c\u90fd\u4f7f\u7528\u9a7b\u7559\u5728\u5185\u5b58\u4e2d\u7684\u8868(GDT/LDT\u4e0e\u9875\u8868)\u6765\u6307\u5b9a\u5b83\u4eec\u5404\u81ea\u7684\u53d8\u6362\u4fe1 \u606f\u3002\u8fd9\u4e9b\u8868\u53ea\u80fd\u7531\u64cd\u4f5c\u7cfb\u7edf\u8bbf\u95ee\uff0c\u4ee5\u9632\u6b62\u5e94\u7528\u7a0b\u5e8f\u64c5\u81ea\u4fee\u6539\u3002 3.2.1 \u5206\u6bb5\u673a\u5236 \u2003\u5206\u6bb5\u673a\u5236\u53ef\u4ee5\u628a\u5904\u7406\u5668\u53ef\u5bfb\u5740\u7684\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u5212\u5206\u6210\u4e00\u4e9b\u8f83\u5c0f\u7684\u79f0\u4e3a\u6bb5\u7684\u53d7\u4fdd\u62a4\u5730\u5740\u7a7a\u95f4\u533a\u57df\u3002\u6bb5\u53ef\u4ee5\u7528\u6765\u5b58\u653e\u7a0b\u5e8f\u7684\u4ee3\u7801\u3001\u6570\u636e\u548c\u5806\u6808\uff0c\u6216\u8005\u7528\u6765\u5b58\u653e\u7cfb\u7edf\u6570\u636e\u7ed3\u6784\uff08\u4f8b\u5982 TSS\u6216 LDT\uff09\u3002\u5982\u679c\u5904\u7406\u5668\u4e2d\u6709\u591a\u4e2a\u7a0b\u5e8f\u6216\u4efb\u52a1\u5728\u8fd0\u884c\uff0c\u90a3\u4e48\u6bcf\u4e2a\u7a0b\u5e8f\u53ef\u5206\u914d\u5404\u81ea\u7684\u4e00\u5957\u6bb5\u3002\u56e0\u6b64\u591a\u4e2a\u7a0b\u5e8f\uff08\u6216\u4efb\u52a1\uff09\u53ef\u4ee5\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u5904\u7406\u5668\u4e0a\u800c\u4e0d\u4f1a\u4e92\u76f8\u5e72\u6270\u3002 \u2003\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u6240\u6709\u4f7f\u7528\u7684\u6bb5\u90fd\u5305\u542b\u5728\u5904\u7406\u5668\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u4e2d\u3002\u4e3a\u4e86\u5b9a\u4f4d\u6307\u5b9a\u6bb5\u4e2d\u7684\u4e00\u4e2a\u5b57\u8282\uff0c\u7a0b\u5e8f\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a\u903b\u8f91\u5730\u5740\u3002\u903b\u8f91\u5730\u5740\u5305\u62ec\u4e00\u4e2a\u6bb5\u9009\u62e9\u7b26\u548c\u4e00\u4e2a\u504f\u79fb\u91cf\u3002\u6bb5\u9009\u62e9\u7b26\u662f\u4e00\u4e2a\u6bb5\u7684\u552f\u4e00\u6807\u8bc6\u3002\u6bb5\u9009\u62e9\u7b26\u662f\u63d0\u6bb5\u63cf\u8ff0\u7b26\u8868\uff08\u4f8b\u5982\u5168\u5c40\u63cf\u8ff0\u7b26\u8868 GDT\u4e2d\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u79f0\u4e3a\u6bb5\u63cf\u8ff0\u7b26\uff09\u4e2d\u67d0\u4e00\u63cf\u8ff0\u7b26\u9879\u5728\u8868\u4e2d\u7684\u7d22\u5f15\u503c\u3002\u7d22\u5f15\u503c\u6307\u5b9a\u7684\u6bb5\u63cf\u8ff0\u7b26\u9879\u4e2d\u542b\u6709\u9700\u8981\u5bfb\u5740\u7684\u5185\u5b58\u6bb5\u7684\u6bb5\u57fa\u5730\u5740\u3001\u6bb5\u7684\u957f\u5ea6\u503c\u3001\u6bb5\u7684\u8bbf\u95ee\u7279\u6743\u7ea7\u3001\u6bb5\u7c7b\u578b\u3002\u903b\u8f91\u5730\u5740\u7684\u504f\u79fb\u91cf\u90e8\u5206\u52a0\u5230\u6bb5\u7684\u57fa\u5730\u5740\u4e0a\u5c31\u53ef\u4ee5\u5b9a\u4f4d\u5185\u5b58\u4e2d\u6bb5\u4e2d\u67d0\u4e2a\u5b57\u8282\u7684\u4f4d\u7f6e\u3002\u56e0\u6b64 \u57fa\u5730\u5740\u52a0\u4e0a\u504f\u79fb\u91cf\u5c31\u5f62\u6210\u4e86\u5904\u7406\u5668\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u5730\u5740\u3002 3.2.2 \u5206\u9875\u673a\u5236 \u2003\u5206\u9875\u673a\u5236\u4e3a\u4f20\u7edf\u9700\u6c42\u9875\u3001\u865a\u62df\u5185\u5b58\u7cfb\u7edf\u63d0\u4f9b\u4e86\u5b9e\u73b0\u673a\u5236\u3002\u5176\u4e2d\u865a\u62df\u5185\u5b58\u7cfb\u7edf\u7528\u4e8e\u5b9e\u73b0\u7a0b\u5e8f\u4ee3\u7801\u6309\u8981\u6c42\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\u4e2d\u3002 \u2003\u4f7f\u7528 \u865a\u62df\u5b58\u50a8 \u6280\u672f\u3002\u865a\u62df\u5b58\u50a8\u662f\u4e00\u79cd\u5185\u5b58\u7ba1\u7406\u6280\u672f\uff0c\u4f7f\u7528\u8fd9\u79cd\u6280\u672f\u53ef\u8ba9\u7f16\u7a0b\u4eba\u5458\u4ea7\u751f\u5185\u5b58\u7a7a\u95f4\u8981\u6bd4\u8ba1\u7b97\u673a\u4e2d\u5b9e\u9645\u7269\u7406\u5185\u5b58\u5bb9\u91cf\u5927\u5f88\u591a\u7684\u9519\u89c9\u3002\u5728\u4f7f\u7528\u865a\u62df\u5b58\u50a8\u7684\u73af\u5883\u4e2d\uff0c\u5927\u5bb9\u91cf\u7684\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u9700\u8981\u4f7f\u7528\u5c0f\u5757\u7684\u7269\u7406\u5185\u5b58\uff08RAM \u6216 ROM\uff09\u4ee5\u53ca\u67d0\u4e9b\u5916\u90e8\u5b58\u50a8\u7a7a\u95f4\uff08\u4f8b\u5982\u5927\u5bb9\u91cf\u786c\u76d8\uff09\u6765\u6a21\u62df\u3002\u5f53\u4f7f\u7528\u5206\u9875\u65f6\uff0c\u6bcf\u4e2a\u6bb5\u88ab\u5212\u5206\u6210\u9875\u9762\uff08\u901a\u5e38\u6bcf\u9875\u4e3a 4KB \u5927\u5c0f\uff09\uff0c\u9875\u9762\u4f1a\u88ab\u5b58\u50a8\u4e8e\u7269\u7406\u5185\u5b58\u4e2d\u6216\u786c\u76d8\u4e0a\u3002\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u7ef4\u62a4\u4e00\u4e2a\u9875\u76ee\u5f55\u548c\u4e00\u4e9b\u9875\u8868\u6765\u7559\u610f\u8fd9\u4e9b\u9875\u9762\u3002\u5f53\u7a0b\u5e8f\uff08\u6216\u4efb\u52a1\uff09\u8bd5\u56fe\u8bbf\u95ee\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u5730\u5740\u4f4d\u7f6e\u65f6\uff0c\u5904\u7406\u5668\u5c31\u4f1a\u4f7f\u7528\u9875\u76ee\u5f55\u548c\u9875\u8868\u628a\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u6210\u4e00\u4e2a\u7269\u7406\u5730\u5740\uff0c\u7136\u540e\u5728\u8be5\u5185\u5b58\u4f4d\u7f6e\u4e0a\u6267\u884c\u6240\u8981\u6c42\u7684\u64cd\u4f5c\uff08\u8bfb\u6216\u5199\uff09\u3002 \u5982\u679c\u5f53\u524d\u88ab\u8bbf\u95ee\u7684\u9875\u9762\u4e0d\u5728\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u5904\u7406\u5668\u5c31\u4f1a\u4e2d\u65ad\u7a0b\u5e8f\u7684\u6267\u884c\uff08\u901a\u8fc7\u4ea7\u751f\u4e00\u4e2a\u9875\u9519\u8bef\u5f02\u5e38\uff09\u3002\u7136\u540e\u64cd\u4f5c\u7cfb\u7edf\u5c31\u53ef\u4ee5\u4ece\u786c\u76d8\u4e0a\u628a\u8be5\u9875\u9762\u8bfb\u5165\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u5e76\u7ee7\u7eed\u6267\u884c\u521a\u624d\u88ab\u4e2d\u65ad\u7684\u7a0b\u5e8f\u3002 \u2003 \u865a\u62df\u5185\u5b58\u597d\u5904 : \u865a\u62df\u5185\u5b58\u7ba1\u7406\u53ef\u4ee5\u63a7\u5236\u7269\u7406\u5185\u5b58\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u8bbf\u95ee\u7684\u865a\u62df\u9875\u82e5\u6ca1\u6709\u6743\u9650\uff0c\u5219\u89e6\u53d1\u4e00\u4e2a\u4fdd\u62a4\u5f02\u5e38\uff0c\u7ec8\u6b62\u8fdb\u7a0b\uff1b\u865a\u62df\u5185\u5b58\u8ba9\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff1b\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u4f1a\u7ed9\u5206\u914d\u548c\u91ca\u653e\u5185\u5b58\u5e26\u6765\u65b9\u4fbf\uff0c\u7269\u7406\u5185\u5b58\u4e0d\u8fde\u7eed\u7684\u5730\u5740\u53ef\u4ee5\u7531\u8fde\u7eed\u7684\u865a\u62df\u5730\u5740\u6620\u5c04\u5f97\u5230\uff1b\u5185\u5b58\u6548\u7387\u9ad8\uff0c\u4f7f\u7528\u9875\u9762\u8c03\u5ea6\uff0c\u4e0d\u4f1a\u9020\u6210\u5927\u91cf\u5f97\u6570\u636e\u88c5\u5165\u5185\u5b58\u3002 3.2.2 \u4e24\u79cd\u673a\u5236\u533a\u522b \u5206\u9875\u4f7f\u7528\u4e86\u56fa\u5b9a\u957f\u5ea6\u7684\u9875\u9762\u3002 \u6bb5\u7684\u957f\u5ea6\u901a\u5e38\u4e0e\u5b58\u653e\u5728\u5176\u4e2d\u7684\u4ee3\u7801\u6216\u6570\u636e\u7ed3\u6784\u5177\u6709\u76f8\u540c\u7684\u957f\u5ea6\u3002\u4e0e\u6bb5\u4e0d\u540c\uff0c\u9875\u9762\u6709\u56fa\u5b9a\u7684\u957f\u5ea6\u3002\u5982\u679c\u4ec5\u4f7f\u7528\u5206\u6bb5\u5730\u5740\u8f6c\u6362\uff0c\u90a3\u4e48\u5b58\u50a8\u5728\u7269\u7406\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u5c06\u5305\u542b\u5176\u6240\u6709\u7684\u90e8\u5206\u3002\u4f46\u5982\u679c\u4f7f\u7528\u4e86\u5206\u9875\uff0c\u90a3\u4e48\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u5c31\u53ef\u4ee5\u4e00\u90e8\u5206\u5b58\u50a8\u4e8e\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u800c\u53e6\u4e00\u90e8\u5206\u4fdd\u5b58\u5728\u78c1\u76d8\u4e2d\u3002 \u6bb5\u8868\u5b58\u50a8\u5728\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\uff0c\u800c\u9875\u8868\u5219\u4fdd\u5b58\u5728\u7269\u7406\u5730\u5740\u7a7a\u95f4\u3002 \u6bb5\u53d8\u6362\u8868\u53ef\u7531\u5206\u9875\u673a\u5236\u91cd\u65b0\u5b9a\u4f4d\u800c\u65e0\u9700\u6bb5\u673a\u5236\u7684\u4fe1\u606f\u6216\u5408\u4f5c\u3002\u6bb5\u53d8\u6362\u673a\u5236\u628a\u865a\u62df\u5730\u5740\uff08\u903b\u8f91\u5730\u5740\uff09\u53d8\u6362\u6210\u7ebf\u6027\u5730\u5740\uff0c\u5e76\u4e14\u5728\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u4e2d\u8bbf\u95ee\u81ea\u5df1\u7684\u8868\uff0c\u4f46\u662f\u5e76\u4e0d\u77e5\u6653\u5206\u9875\u673a\u5236\u628a\u8fd9\u4e9b\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u5230\u7269\u7406\u5730\u5740\u7684\u8fc7\u7a0b\u3002\u7c7b\u4f3c\u5730\uff0c\u5206\u9875\u673a\u5236\u4e5f\u4e0d\u77e5\u9053\u7a0b\u5e8f\u4ea7\u751f\u5730\u5740\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u3002\u5206\u9875\u673a\u5236\u53ea\u662f\u7b80\u5355\u5730\u628a\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u6210\u7269\u7406\u5730\u5740\uff0c\u5e76\u4e14\u5728\u7269\u7406\u5185\u5b58\u4e2d\u8bbf\u95ee\u81ea\u5df1\u7684\u8f6c\u6362\u8868\u3002 3.3 \u4fdd\u62a4 3.3.1 \u4efb\u52a1\u95f4\u4fdd\u62a4 \u2003\u901a\u8fc7\u7ed9\u6bcf\u4e2a\u4efb\u52a1\u4e0d\u540c\u7684\u865a\u62df\u5730\u5740\uff08\u903b\u8f91\u5730\u5740\uff09\u7a7a\u95f4\u6765\u5b8c\u5168\u9694\u79bb\u5404\u4e2a\u4efb\u52a1\u3002\u5176\u5b9e\u73b0\u539f\u7406\u662f \u5411\u6bcf\u4e2a\u4efb\u52a1\u63d0\u4f9b\u4e0d\u540c\u7684\u903b\u8f91\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u53d8\u6362\u6620\u5c04 \u3002\u53ea\u9700\u7ed9\u6bcf\u4e2a\u4efb\u52a1\u5404\u81ea\u72ec\u7acb\u7684\u6620\u5c04\u8868\uff0c\u6bcf\u4e2a\u4efb\u52a1\u5c31\u4f1a\u6709\u4e0d\u540c\u7684\u5730\u5740\u53d8\u6362\u51fd\u6570\u3002\u5728 80X86 \u4e2d\uff0c\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u81ea\u5df1\u7684\u6bb5\u8868\u548c\u9875\u8868\u3002\u5f53\u5904\u7406\u5668\u5207\u6362\u53bb\u6267\u884c\u4e00\u4e2a\u65b0\u4efb\u52a1\u65f6\uff0c\u4efb\u52a1\u5207\u6362\u7684\u5173\u952e\u90e8\u5206\u5c31\u662f\u5207\u6362\u5230\u65b0\u4efb\u52a1\u7684\u53d8\u6362\u8868\u3002 \u2003\u901a\u8fc7\u5728\u6240\u6709\u4efb\u52a1\u4e2d\u5b89\u6392\u5177\u6709\u76f8\u540c\u7684\u865a\u62df\u5230\u7269\u7406\u5730\u5740\u6620\u5c04\u90e8\u5206\uff0c\u5e76\u4e14\u628a\u64cd\u4f5c\u7cfb\u7edf\u5b58\u50a8\u5728\u8fd9\u4e2a\u516c\u5171\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u90e8\u5206\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u88ab\u6240\u6709\u4efb\u52a1\u5171\u4eab\u3002\u8fd9\u4e2a\u6240\u6709\u4efb\u52a1\u90fd\u5177\u6709\u7684\u76f8\u540c\u865a\u62df\u5730\u5740\u7a7a\u95f4\u90e8\u5206\u88ab\u79f0\u4e3a\u5168\u5c40\u5730\u5740\u7a7a\u95f4\uff08Global address space\uff09\u3002\u6bcf\u4e2a\u4efb\u52a1\u552f\u4e00\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u90e8\u5206\u88ab\u79f0\u4e3a\u5c40\u90e8\u5730\u5740\u7a7a\u95f4\uff08Local address space\uff09\u3002\u5c40\u90e8\u5730\u5740\u7a7a\u95f4\u542b\u6709\u9700\u8981\u4e0e\u7cfb\u7edf\u4e2d\u5176\u4ed6\u4efb\u52a1\u533a\u522b\u5f00\u7684\u79c1\u6709\u7684\u4ee3\u7801\u548c\u6570\u636e\u3002\u7531\u4e8e\u6bcf\u4e2a\u4efb\u52a1\u4e2d\u5177\u6709\u4e0d\u540c\u7684\u5c40\u90e8\u5730\u5740\u7a7a\u95f4\uff0c\u56e0\u6b64 \u4e24\u4e2a\u4e0d\u540c\u4efb\u52a1\u4e2d\u5bf9\u76f8\u540c\u865a\u62df\u5730\u5740\u5904\u7684\u5f15\u7528\u5c06\u8f6c\u6362\u5230\u4e0d\u540c\u7684\u7269\u7406\u5730\u5740\u5904\u3002\u6240\u6709\u4efb\u52a1\u5728\u5168\u5c40\u5730\u5740\u7a7a\u95f4\u4e2d\u5bf9\u76f8\u540c\u865a\u62df\u5730\u5740\u7684\u5f15\u7528\u5c06\u88ab\u8f6c\u6362\u5230\u540c\u4e00\u4e2a\u7269\u7406\u5730\u5740\u5904 \u3002\u8fd9\u7ed9\u516c\u5171\u4ee3\u7801\u548c\u6570\u636e\uff08\u4f8b\u5982\u64cd\u4f5c\u7cfb\u7edf\uff09\u7684\u5171\u4eab\u63d0\u4f9b\u4e86\u652f\u6301\u3002 \u2003\u865a\u62df\u5730\u5740\uff08\u903b\u8f91\u5730\u5740\uff09\u7a7a\u95f4\u53ef\u5305\u542b\u6700\u591a 16K \u7684\u6bb5(2^14,\uff0c16\u4f4d\u7684\u6bb5\u9009\u62e9\u7b26\u4e2d\u53ea\u6709\u9ad814\u4f4d\u53ef\u4ee5\u7528\u6765\u9009\u62e9)\uff0c\u800c\u6bcf\u4e2a\u6bb5\u6700\u957f\u53ef\u8fbe 4GB\uff0832\u4f4d\u504f\u79fb\u5730\u5740\uff09\uff0c\u4f7f\u5f97\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5bb9\u91cf\u8fbe\u5230 64TB\uff082 46 KB\uff09\u3002\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u548c\u7269\u7406\u5730\u5740\u7a7a\u95f4\u90fd\u662f 4GB\uff082^32KB\uff0c32\u4f4d\u5730\u5740\u603b\u7ebf\uff09\u3002\u5b9e\u9645\u4e0a\uff0c \u5982\u679c\u7981\u7528\u5206\u9875\u673a\u5236\uff0c\u90a3\u4e48\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u5c31\u662f\u7269\u7406\u5730\u5740\u7a7a\u95f4\u3002 \u2003\u865a\u62df\u5730\u5740\u7a7a\u95f4\u88ab\u5206\u5272\u6210\u5927\u5c0f\u76f8\u7b49\u7684\u4e24\u534a\uff08\u5404\u81ea2^13\u4e2a\u6bb5\uff09\u3002\u4e00\u534a\u7531 GDT \u6765\u6620\u5c04\u53d8\u6362\u5230\u7ebf\u6027\u5730\u5740\uff0c\u53e6\u4e00\u534a\u5219\u7531 LDT \u6765\u6620\u5c04\u3002 \u2003 \u5f53\u53d1\u751f\u4efb\u52a1\u5207\u6362\u65f6\uff0cLDT \u4f1a\u66f4\u6362\u6210\u65b0\u4efb\u52a1\u7684 LDT\uff0c\u4f46\u662f GDT \u5e76\u4e0d\u4f1a\u6539\u53d8\u3002\u56e0\u6b64\uff0cGDT \u6240\u6620\u5c04\u7684\u4e00\u534a\u865a\u62df\u5730\u5740\u7a7a\u95f4\u662f\u7cfb\u7edf\u4e2d\u6240\u6709\u4efb\u52a1\u5171\u6709\u7684\uff0c\u4f46\u662f LDT \u6240\u6620\u5c04\u7684\u53e6\u4e00\u534a\u5219\u5728\u4efb\u52a1\u5207\u6362\u65f6\u88ab\u6539\u53d8\u3002\u7cfb\u7edf\u4e2d\u6240\u6709\u4efb\u52a1\u5171\u4eab\u7684\u6bb5\u7531 GDT \u6765\u6620\u5c04\u3002 3.3.2 \u7279\u6743\u7ea7\u4fdd\u62a4 \u4fdd\u62a4\u673a\u5236\u5bf9\u4efb\u52a1\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee5\u4fdd\u62a4\u64cd\u4f5c\u7cfb\u7edf\u5185\u5b58\u6bb5\u548c\u5904\u7406\u5668\u7279\u6b8a\u7cfb\u7edf\u5bc4\u5b58\u5668\u4e0d\u88ab\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u3002 \u2003\u5728\u4e00\u4e2a\u4efb\u52a1\u4e2d\uff0c\u5b9a\u4e49\u4e86 4 \u4e2a\u6267\u884c\u7279\u6743\u7ea7\uff08Privilege Levels\uff09\uff0c\u7528\u4e8e\u4f9d\u636e\u6bb5\u4e2d\u542b\u6709\u6570\u636e\u7684\u654f\u611f\u5ea6\u4ee5\u53ca\u4efb\u52a1\u4e2d\u4e0d\u540c\u7a0b\u5e8f\u90e8\u5206\u7684\u53d7\u4fe1\u7a0b\u5ea6\uff0c\u6765\u9650\u5236\u5bf9\u4efb\u52a1\u4e2d\u5404\u6bb5\u7684\u8bbf\u95ee\u3002\u6700\u654f\u611f\u7684\u6570\u636e\u88ab\u8d4b\u4e88\u4e86\u6700\u9ad8\u7279\u6743\u7ea7\uff0c\u5b83\u4eec\u53ea\u80fd\u88ab\u4efb\u52a1\u4e2d\u6700\u53d7\u4fe1\u4efb\u7684\u90e8\u5206\u8bbf\u95ee\u3002\u4e0d\u592a\u654f\u611f\u7684\u6570\u636e\u88ab\u8d4b\u4e88\u8f83\u4f4e\u7684\u7279\u6743\u7ea7\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u4efb\u52a1\u4e2d\u8f83\u4f4e\u7279\u6743\u7ea7\u7684\u4ee3\u7801\u8bbf\u95ee\u3002 \u7279\u6743\u7ea7\u7528\u6570\u5b57 0 \u5230 3 \u8868\u793a\uff0c0 \u5177\u6709\u6700\u9ad8\u7279\u6743\u7ea7\uff0c3\u662f\u6700\u4f4e\u7279\u6743\u7ea7\u3002 4. \u5206\u6bb5\u673a\u5236 4.1 \u6bb5\u9009\u62e9\u7b26 \u2003TI=0 \u8868\u793a\u63cf\u8ff0\u7b26\u5728 GDT \u4e2d\uff1bTI=1 \u8868\u793a\u63cf\u8ff0\u7b26\u5728 LDT \u4e2d\u3002\u7d22\u5f15\u5b57\u6bb5\u7ed9\u51fa\u4e86\u63cf\u8ff0\u7b26\u5728 GDT \u6216 LDT \u8868\u4e2d\u7684\u7d22\u5f15\u9879\u53f7\u3002 RPL (Request Privilege Level)\uff0c\u8bf7\u6c42\u7279\u6743\u7ea7\u3002 4.2 \u6bb5\u63cf\u8ff0\u7b26 \u9897\u7c92\u5ea6G \uff1aG=0\uff0c\u6bb5\u9650\u957f\u5355\u4f4d\u662f1B\uff0cG=1\u5355\u4f4d\u662f4KB. \u6bb5\u7c7b\u578bTYPE : S=1\uff0c\u4ee3\u7801\u6216\u6570\u636e S=0\uff0c\u7cfb\u7edf \u63cf\u8ff0\u7b26\u7b2c10\u4f4dC\u4ee3\u8868\u4e00\u81f4\u6027\u6807\u5fd7: C=1\uff0c\u4e00\u81f4\u6027\u6bb5\uff1a\u64cd\u4f5c\u7cfb\u7edf\u62ff\u51fa\u6765\u88ab\u5171\u4eab\u7684\u4ee3\u7801\u6bb5,\u53ef\u4ee5\u88ab\u4f4e\u7279\u6743\u7ea7\u7684\u7528\u6237\u76f4\u63a5\u8c03\u7528\u8bbf\u95ee\u7684\u4ee3\u7801.\u8981\u6c42CPL >= DPL\u3002\u6545\u7279\u6743\u7ea7\u9ad8\u7684\u7a0b\u5e8f\u4e0d\u80fd\u8bbf\u95ee\u7279\u6743\u7ea7\u4f4e\u7684\u7a0b\u5e8f\u3002\u5f53CPL<DPL\u65f6\uff0c\u4f1a\u4ea7\u751f\u4e00\u822c\u4fdd\u62a4\u5f02\u5e38\u3002 C=0\uff0c\u975e\u4e00\u81f4\u6027\u6bb5\uff1a\u4e3a\u4e86\u907f\u514d\u4f4e\u7279\u6743\u7ea7\u7684\u8bbf\u95ee\u800c\u88ab\u64cd\u4f5c\u7cfb\u7edf\u4fdd\u62a4\u8d77\u6765\u7684\u7cfb\u7edf\u4ee3\u7801\uff08DPL=0\uff09\uff0c\u53ea\u5141\u8bb8\u540c\u7ea7\u8bbf\u95ee\uff0c\u5373CPL=DPL\uff0c\u4e14RPL<=CPL\u3002 4.3 \u7279\u6743\u7ea7 \u5f53\u524d\u7279\u6743\u7ea7CPL \uff08Current Privilege Level\uff09: CPL \u662f\u5f53\u524d\u6b63\u5728\u6267\u884c\u7a0b\u5e8f\u6216\u4efb\u52a1\u7684\u7279\u6743\u7ea7\u3002\u5b83 \u5b58\u653e\u5728CS \u548c SS \u6bb5\u5bc4\u5b58\u5668\u7684\u4f4d 0 \u548c\u4f4d 1 \u4e2d \u3002\u901a\u5e38\uff0cCPL \u7b49\u4e8e\u5f53\u524d\u4ee3\u7801\u6bb5\u7684\u7279\u6743\u7ea7\u3002\u5f53\u7a0b\u5e8f\u628a\u63a7\u5236\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5177\u6709\u4e0d\u540c\u7279\u6743\u7ea7\u7684\u4ee3\u7801\u6bb5\u4e2d\u65f6\uff0c\u5904\u7406\u5668\u5c31\u4f1a\u6539\u53d8 CPL\u3002\u5f53\u8bbf\u95ee\u4e00\u4e2a\u4e00\u81f4\u6027\uff08conforming\uff09\u4ee3\u7801\u6bb5\u65f6\uff0c\u5219\u5904\u7406\u5668\u5bf9 CPL \u7684\u8bbe\u7f6e\u6709\u4e9b\u4e0d\u540c\u3002\u7279\u6743\u7ea7\u503c\u9ad8\u4e8e\uff08\u5373\u4f4e\u7279\u6743\u7ea7\uff09\u6216\u7b49\u4e8e\u4e00\u81f4\u4ee3\u7801\u6bb5DPL \u7684\u4efb\u4f55\u6bb5\u90fd\u53ef\u4ee5\u8bbf\u95ee\u4e00\u81f4\u4ee3\u7801\u6bb5\u3002\u5e76\u4e14\u5f53\u5904\u7406\u5668\u8bbf\u95ee\u4e00\u4e2a\u7279\u6743\u7ea7\u4e0d\u540c\u4e8e CPL \u7684\u4e00\u81f4\u4ee3\u7801\u6bb5\u65f6\uff0cCPL \u5e76\u4e0d\u4f1a\u88ab\u4fee\u6539\u6210\u4e00\u81f4\u4ee3\u7801\u6bb5\u7684 DPL\u3002 \u63cf\u8ff0\u7b26\u7279\u6743\u7ea7DPL \uff08Descriptor Privilege Level\uff09: DPL \u662f\u4e00\u4e2a\u6bb5\u6216\u95e8\u7684\u7279\u6743\u7ea7\u3002\u5b83 \u5b58\u653e\u5728\u6bb5\u6216\u95e8\u63cf \u8ff0\u7b26\u7684 DPL \u5b57\u6bb5\u4e2d \u3002\u5728\u5f53\u524d\u6267\u884c\u4ee3\u7801\u6bb5\u8bd5\u56fe\u8bbf\u95ee\u4e00\u4e2a\u6bb5\u6216\u95e8\u65f6\uff0c\u6bb5\u6216\u95e8\u7684 DPL \u4f1a\u7528\u6765\u4e0e CPL \u4ee5\u53ca\u6bb5\u6216\u95e8\u9009\u62e9\u7b26\u4e2d\u7684 RPL\uff08\u89c1\u4e0b\u9762\u8bf4\u660e\uff09\u4f5c\u6bd4\u8f83\u3002 \u8bf7\u6c42\u7279\u6743\u7ea7RPL \uff08Request Privilege Level\uff09\uff1aRPL \u662f\u4e00\u79cd\u8d4b\u4e88\u6bb5\u9009\u62e9\u7b26\u7684\u8d85\u8d8a\u7279\u6743\u7ea7\uff0c\u5b83 \u5b58\u653e\u5728\u6bb5\u9009\u62e9\u7b26\u7684\u4f4d 0 \u548c\u4f4d 1 \u4e2d \u3002\u5904\u7406\u5668\u4f1a\u540c\u65f6\u68c0\u67e5 RPL \u548c CPL\uff0c\u4ee5\u786e\u5b9a\u662f\u5426\u5141\u8bb8\u8bbf\u95ee\u4e00\u4e2a\u6bb5\u3002\u5373\u4f7f\u7a0b\u5e8f\u6216\u4efb\u52a1\u5177\u6709\u8db3\u591f\u7684\u7279\u6743\u7ea7\uff08CPL\uff09\u6765\u8bbf\u95ee\u4e00\u4e2a\u6bb5\uff0c\u4f46\u662f\u5982\u679c\u63d0\u4f9b\u7684 RPL \u7279\u6743\u7ea7\u4e0d\u8db3\u7684\u8bdd\u8bbf\u95ee\u4e5f\u5c06\u88ab\u62d2\u7edd\u3002RPL \u53ef\u7528\u6765\u786e\u4fdd\u9ad8\u7279\u6743\u7ea7\u7684\u4ee3\u7801\u4e0d\u4f1a\u4ee3\u8868\u5e94\u7528\u7a0b\u5e8f\u53bb\u8bbf\u95ee\u4e00\u4e2a\u6bb5\uff0c\u9664\u975e\u5e94\u7528\u7a0b\u5e8f\u81ea\u5df1\u5177\u6709\u8bbf\u95ee\u8fd9\u4e2a\u6bb5\u7684\u6743\u9650\u3002 \u5f53\u4ee3\u7801\u8bd5\u56fe\u8bbf\u95ee\u4e00\u4e2a\u6bb5\u6216\u95e8\uff08\u8c03\u7528\u95e8\uff09\u65f6\uff0c\u8981\u6c42 DPL >= max{CPL, RPL}\u3002 5. \u5206\u9875\u673a\u5236 80X86 \u4f7f\u7528 4K\uff082^12\uff09\u5b57\u8282\u56fa\u5b9a\u5927\u5c0f\u7684\u9875\u9762\u3002\u6bcf\u4e2a\u9875\u9762\u5747\u662f 4KB\uff0c\u5e76\u4e14\u5bf9\u9f50\u4e8e 4K \u5730\u5740\u8fb9\u754c\u5904\u3002\u8fd9\u8868 \u793a\u5206\u9875\u673a\u5236\u628a 2^32\u5b57\u8282\uff084GB\uff09\u7684\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u5212\u5206\u6210 2^20\uff081M = 1048576\uff09\u4e2a\u9875\u9762\u3002\u5206\u9875\u673a\u5236\u901a\u8fc7\u628a\u7ebf\u6027 \u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u9875\u9762\u91cd\u65b0\u5b9a\u4f4d\u5230\u7269\u7406\u5730\u5740\u7a7a\u95f4\u4e2d\u8fdb\u884c\u64cd\u4f5c\u3002\u7531\u4e8e 4K \u5927\u5c0f\u7684\u9875\u9762\u4f5c\u4e3a\u4e00\u4e2a\u5355\u5143\u8fdb\u884c\u6620\u5c04\uff0c\u5e76 \u4e14\u5bf9\u9f50\u4e8e 4K \u8fb9\u754c\uff0c\u56e0\u6b64 \u7ebf\u6027\u5730\u5740\u7684\u4f4e 12 \u6bd4\u7279\u4f4d\u53ef\u4f5c\u4e3a\u9875\u5185\u504f\u79fb\u91cf\u76f4\u63a5\u4f5c\u4e3a\u7269\u7406\u5730\u5740\u7684\u4f4e 12 \u4f4d\u3002\u5206\u9875\u673a\u5236\u6267\u884c\u7684\u91cd\u5b9a\u4f4d\u529f\u80fd\u53ef\u4ee5\u770b\u4f5c\u662f\u628a\u7ebf\u6027\u5730\u5740\u7684\u9ad8 20 \u4f4d\u8f6c\u6362\u5230\u5bf9\u5e94\u7269\u7406\u5730\u5740\u7684\u9ad8 20 \u4f4d\u3002 5.1 \u4e24\u7ea7\u9875\u8868\u7ed3\u6784 \u2003\u9875\u8868\u542b\u6709 2^20\uff081M\uff09\u4e2a\u8868\u9879\uff0c\u800c\u6bcf\u9879\u5360\u7528 4 \u5b57\u8282\u3002\u5982\u679c\u4f5c\u4e3a\u4e00\u4e2a\u8868\u6765\u5b58\u653e\u7684\u8bdd\uff0c\u5b83\u4eec\u6700\u591a\u5c06\u5360\u7528 \u8fde\u7eed4MB \u7684\u5185\u5b58(\u903b\u8f91\u5730\u5740\u4e2d\u63d0\u4f9b\u7684\u9875\u8868\u7684\u7d22\u5f15\u503c\uff0c\u53ea\u6709\u662f\u8fde\u7eed\u5185\u5b58\uff0c\u4e14\u6bcf\u4e2a\u8868\u9879\u5927\u5c0f\u56fa\u5b9a\uff0c\u624d\u53ef\u4ee5\u6839\u636e\u9996\u5730\u5740\u548c\u7d22\u5f15\u8ba1\u7b97\u4efb\u610f\u8868\u9879\u7684\u5730\u5740)\u3002\u56e0\u6b64\u4e3a\u4e86\u51cf\u5c11\u8fde\u7eed\u5185\u5b58\u5360\u7528\u91cf\uff0c80X86 \u4f7f\u7528\u4e86\u4e24\u7ea7\u8868\u3002 \u2003\u7b2c\u4e00\u7ea7\u8868\u79f0\u4e3a\u9875\u76ee\u5f55\uff0c\u7ebf\u6027\u5730\u5740\u7684\u6700\u9ad8 10 \u4f4d\uff08\u4f4d 31--22\uff09\u7528\u4f5c\u4e00\u7ea7\u8868\uff08\u9875\u76ee\u5f55\uff09\u4e2d\u7684\u7d22\u5f15\u503c\uff0c\u6765\u9009\u62e92 ^10\u4e2a\u4e8c\u7ea7\u8868\u4e4b\u4e00\u3002 \u56e0\u6b64\u4e00\u4e2a\u9875\u76ee\u5f55\u9879\u6240\u80fd\u5bfb\u627e\u7684\u5730\u5740\u7a7a\u95f4\u5927\u5c0f\u4e3a4MB\uff08=2^10\u9875 * 4KB\uff09. \u2003\u7b2c\u4e8c\u7ea7\u8868\u79f0\u4e3a\u9875\u8868(page table)\uff0c\u4e8c\u7ea7\u9875\u8868\u4f7f\u7528\u7ebf\u6027\u5730\u5740\u4e2d\u95f4 10 \u4f4d\uff08\u4f4d 21--12\uff09\u4f5c\u4e3a\u8868\u9879\u7d22\u5f15\u503c\uff0c\u4ee5\u83b7\u53d6\u542b\u6709\u9875\u9762 20 \u4f4d\u7269\u7406\u57fa\u5730\u5740\u7684\u8868\u9879\u3002 \u2003\u4e00\u4e2a\u9875\u9762\u5927\u5c0f\u4e3a4KB\uff0c\u6b63\u597d\u53ef\u4ee5\u88c5\u4e0b\u9875\u76ee\u5f55(2^10 4B=4KB)\uff0c\u800c\u4e00\u4e2a\u4e8c\u7ea7\u9875\u8868\u5305\u542b2^10\u4e2a\u9875\u8868\u9879\uff0c\u603b\u7684\u5927\u5c0f\u4e5f\u4e3a4KB\uff0c\u4e5f\u53ef\u4ee5\u653e\u5728\u4e00\u4e2a\u9875\u9762\u4e2d\u3002\u8fd9\u6837\u4ec5\u9700\u4e24\u4e2a\u9875\u9762(8KB)\u5927\u5c0f\u5373\u53ef\u5bfb\u5740 \u2003\u901a\u8fc7\u4e8c\u7ea7\u8868\u7ed3\u6784\u4e8b\u5b9e\u4e0a\u5e76\u6ca1\u6709\u89e3\u51b3\u9700\u8981\u4f7f\u75284MB\u5185\u5b58\u6765\u5b58\u653e\u9875\u8868\u7684\u95ee\u9898\uff0c\u4f46\u662f\u5176 \u5141\u8bb8\u9875\u8868\u88ab\u5206\u6563\u5728\u5185\u5b58\u4e2d\u5404\u4e2a\u9875\u9762\u4e2d\uff0c\u800c\u975e\u4fdd\u5b58\u5728\u8fde\u7eed\u76844MB\u5185\u5b58\u5757\u4e2d\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u4e3a\u4e0d\u5b58\u5728\u7684\u6216\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u672a\u4f7f\u7528\u7684\u90e8\u5206\u5206\u914d\u4e8c\u7ea7\u9875\u8868 *\u3002\u867d\u7136\u76ee\u5f55\u8868\u9875\u9762\u5fc5\u987b\u603b\u662f\u5b58\u5728\u4e8e\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u4f46\u662f\u4e8c\u7ea7\u9875\u8868\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u518d\u5206\u914d\u3002\u8fd9\u4f7f\u5f97\u9875\u8868\u7ed3\u6784\u7684\u5927\u5c0f\u5bf9\u5e94\u4e8e\u5b9e\u9645\u4f7f\u7528\u7684\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u5927\u5c0f\u3002 \u2003\u9875\u76ee\u5f55\u8868\u548c\u9875\u8868\u90fd\u5305\u542b\u4e00\u4e2a\u5b58\u5728\u5c5e\u6027P\uff0c\u524d\u8005\u6307\u660e\u5bf9\u5e94\u7684\u4e8c\u7ea7\u9875\u8868\u662f\u5426\u5b58\u5728\uff0c\u540e\u8005\u6307\u660e\u9875\u9762\u662f\u5426\u5b58\u5728\uff1b\u9875\u76ee\u5f55/\u9875\u8868\u4e2d\u6bcf\u4e2a\u8868\u9879\u5927\u5c0f\u4e3a 32 \u4f4d\uff0c\u53ea\u9700\u8981\u5176\u4e2d\u7684 20 \u4f4d\u6765\u5b58\u653e \u9875\u8868\u7684\u7d22\u5f15/\u9875\u9762\u7684\u7269\u7406\u57fa\u5730\u5740\uff0c\u5269\u4e0b\u7684 12\u4f4d\u53ef\u7528\u4e8e\u5b58\u653e\u4e00\u4e9b\u5c5e\u6027\u4fe1\u606f\u3002\u5982\u679c\u7a0b\u5e8f\u8bbf\u95ee\u7269\u7406\u5185\u5b58\u4e2d\u4e0d\u5b58\u5728\u7684\u9875\u9762\uff0c\u5904\u7406\u5668\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u7f3a\u9875\u5f02\u5e38\u3002\u6b64\u65f6\u64cd\u4f5c\u7cfb\u7edf\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u5f02\u5e38\u5904\u7406\u8fc7\u7a0b\u628a\u7f3a\u5c11\u7684\u9875\u9762\u4ece\u78c1\u76d8\u4e0a\u8c03\u5165\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u5e76\u628a\u76f8\u5e94\u7269\u7406\u5730\u5740\u5b58\u653e\u5728\u8868\u9879\u4e2d\u3002 6 \u4fdd\u62a4 6.1 \u4ee3\u7801\u6bb5\u4e4b\u95f4\u8f6c\u79fb\u63a7\u5236\u65f6\u7684\u7279\u6743\u7ea7\u68c0\u67e5 \u7a0b\u5e8f\u63a7\u5236\u8f6c\u79fb\u6307\u4ee4 \u2003\u7a0b\u5e8f\u7684\u63a7\u5236\u8f6c\u79fb\u4f7f\u7528\u6307\u4ee4 JMP\u3001RET\u3001INT \u548c IRET \u4ee5\u53ca\u5f02\u5e38\u548c\u4e2d\u65ad\u673a\u5236\u6765\u5b9e\u73b0\u3002JMP \u6216 CALL \u6307\u4ee4\u53ef\u4ee5\u5229\u7528\u4ee5\u4e0b\u56db\u79cd\u65b9\u6cd5\u4e4b\u4e00\u6765\u5f15\u7528\u53e6\u5916\u4e00\u4e2a\u4ee3\u7801\u6bb5\uff1a \u76ee\u6807\u64cd\u4f5c\u6570\u542b\u6709\u76ee\u6807\u4ee3\u7801\u6bb5\u7684\u6bb5\u9009\u62e9\u7b26\uff1b \u76ee\u6807\u64cd\u4f5c\u6570\u6307\u5411\u4e00\u4e2a\u8c03\u7528\u95e8\u63cf\u8ff0\u7b26\uff0c\u800c\u8be5\u63cf\u8ff0\u7b26\u4e2d\u542b\u6709\u76ee\u6807\u4ee3\u7801\u6bb5\u7684\u9009\u62e9\u7b26\uff1b \u76ee\u6807\u64cd\u4f5c\u6570\u6307\u5411\u4e00\u4e2a TSS\uff0c\u800c\u8be5 TSS \u4e2d\u542b\u6709\u76ee\u6807\u4ee3\u7801\u6bb5\u7684\u9009\u62e9\u7b26\uff1b \u76ee\u6807\u64cd\u4f5c\u6570\u6307\u5411\u4e00\u4e2a\u4efb\u52a1\u95e8\uff0c\u8be5\u4efb\u52a1\u95e8\u6307\u5411\u4e00\u4e2a TSS\uff0c\u800c\u8be5 TSS \u4e2d\u542b\u6709\u76ee\u6807\u4ee3\u7801\u6bb5\u7684\u9009\u62e9\u7b26\uff1b \u95e8\u63cf\u8ff0\u7b26 \u8c03\u7528\u95e8 \uff08Call Gate\uff09\u7c7b\u578b TYPE=12 \u2003\u8c03\u7528\u95e8\u7528\u4e8e\u5728\u4e0d\u540c\u7279\u6743\u7ea7\u4e4b\u95f4\u5b9e\u73b0\u53d7\u63a7\u7684\u7a0b\u5e8f\u63a7\u5236\u8f6c\u79fb\u3002\u5b83\u4eec\u901a\u5e38\u4ec5\u7528\u4e8e\u4f7f\u7528\u7279\u6743\u7ea7\u4fdd\u62a4\u673a\u5236\u7684\u64cd\u4f5c; \u7cfb\u7edf\u4e2d\u8c03\u7528\u95e8\u63cf\u8ff0\u7b26\u4e00\u822c\u5b58\u653e\u5728GDT\u6216LDT\u4e2d\uff0c\u4e0d\u80fd\u5b58\u653e\u5728IDT\u4e2d\u3002 \u2003\u4e3a\u4e86\u8bbf\u95ee\u8c03\u7528\u95e8\uff0c\u6211\u4eec\u9700\u8981\u4e3a CALL \u6216 JMP \u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u63d0\u4f9b\u4e00\u4e2a\u8fdc\u6307\u9488\u3002\u8be5\u6307\u9488\u4e2d\u7684\u6bb5\u9009\u62e9\u7b26\u7528\u4e8e\u6307\u5b9a\u8c03\u7528\u95e8\uff0c\u800c\u6307\u9488\u7684\u504f\u79fb\u503c\u867d\u7136\u9700\u8981\u4f46 CPU \u5e76\u4e0d\u4f1a\u7528\u5b83\u3002\u8be5\u504f\u79fb\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4efb\u610f\u503c\u3002 P=1\u4ee3\u8868\u6bb5\u5b58\u5728 \u9677\u9631\u95e8 \uff08Trap Gate\uff09\u7c7b\u578b TYPE=15, \u5b58\u50a8\u5728IDT\u4e2d\u3002 \u4e2d\u65ad\u95e8 \uff08Interrupt Gate\uff09\uff0c\u7c7b\u578b TYPE=14, \u5b58\u50a8\u5728IDT\u4e2d\u3002 \u4efb\u52a1\u95e8 \uff08Task Gate\uff09\uff0c\u7c7b\u578b TYPE=5, \u53ef\u5b58\u50a8\u5728GDT\\LDT\\IDT\u4e2d\u3002 \u2003\u4e2d\u65ad\u95e8\u4e0e\u9677\u9631\u95e8\u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\u5904\u7406\u5668\u64cd\u4f5c EFLAGS \u5bc4\u5b58\u5668 IF \u6807\u5fd7\u7684\u65b9\u6cd5\u3002\u5f53\u901a\u8fc7\u4e2d\u65ad\u95e8\u8bbf\u95ee\u4e00\u4e2a \u5f02\u5e38\u6216\u4e2d\u65ad\u5904\u7406\u8fc7\u7a0b\u65f6\uff0c\u5904\u7406\u5668\u4f1a\u590d\u4f4d IF \u6807\u5fd7\u4ee5\u9632\u6b62\u5176\u4ed6\u4e2d\u65ad\u5e72\u6270\u5f53\u524d\u4e2d\u65ad\u5904\u7406\u8fc7\u7a0b\u3002\u968f\u540e\u7684 IRET \u6307\u4ee4 \u5219\u4f1a\u7528\u4fdd\u5b58\u5728\u5806\u6808\u4e0a\u7684\u5185\u5bb9\u6062\u590d EFLAGS \u5bc4\u5b58\u5668\u7684 IF \u6807\u5fd7\u3002\u800c\u901a\u8fc7\u9677\u9631\u95e8\u8bbf\u95ee\u5904\u7406\u8fc7\u7a0b\u5e76\u4e0d\u4f1a\u5f71\u54cd IF \u6807 \u5fd7\u3002 \u5806\u6808\u5207\u6362(\u7528\u6237\u6808\u5207\u6362) \u2003\u6bcf\u5f53\u8c03\u7528\u95e8\u7528\u4e8e\u628a\u7a0b\u5e8f\u63a7\u5236\u8f6c\u79fb\u5230\u4e00\u4e2a\u66f4\u9ad8\u7ea7\u522b\u7684\u975e\u4e00\u81f4\u6027\u4ee3\u7801\u6bb5\u65f6\uff0cCPU \u4f1a\u81ea\u52a8\u5207\u6362\u5230\u76ee\u7684\u4ee3\u7801\u6bb5 \u7279\u6743\u7ea7\u7684\u5806\u6808\u53bb\u3002\u6267\u884c\u6808\u5207\u6362\u64cd\u4f5c\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u9632\u6b62\u9ad8\u7279\u6743\u7ea7\u7a0b\u5e8f\u7531\u4e8e\u6808\u7a7a\u95f4\u4e0d\u8db3\u800c\u5f15\u8d77\u5d29\u6e83\uff0c\u540c\u65f6\u4e5f\u4e3a \u4e86\u9632\u6b62\u4f4e\u7279\u6743\u7ea7\u7a0b\u5e8f\u901a\u8fc7\u5171\u4eab\u7684\u5806\u6808\u6709\u610f\u6216\u65e0\u610f\u5730\u5e72\u6270\u9ad8\u7279\u6743\u7ea7\u7684\u7a0b\u5e8f\u3002 \u4efb\u52a1\u5207\u6362 TSS\\TR\u5bc4\u5b58\u5668\\TSS\u63cf\u8ff0\u7b26(\u4efb\u52a1\u95e8\u63cf\u8ff0\u7b26) : TSS(Task State Segment)\u662f\u4e00\u5757\u5927\u5c0f\u4e3a104\u5b57\u8282\u7684\u5185\u5b58\uff0c\u5b58\u50a8\u4e86\u5927\u90e8\u5206\u5bc4\u5b58\u5668\u7684\u503c TR\u5bc4\u5b58\u5668\u5b58\u50a8\u4e86TSS\u7684\u5730\u5740\uff0c\u5927\u5c0f\uff0c\u548cTSS\u9009\u62e9\u7b26(\u7528\u4ee5\u4eceGDT\u4e2d\u5b9a\u4f4dTSS\u63cf\u8ff0\u7b26) TSS\u63cf\u8ff0\u7b26\u662fGDT\u8868\u4e2d\u7684\u4e00\u9879\uff0c\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c\u4eceTSS\u63cf\u8ff0\u7b26\u4e2d\u53d6\u503c\u521d\u59cb\u5316TR\u5bc4\u5b58\u5668 \u2003\u5904\u7406\u5668\u53ef\u4f7f\u7528\u4e00\u4e0b 4 \u79cd\u65b9\u5f0f\u4e4b\u4e00\u6267\u884c\u4efb\u52a1\u5207\u6362\u64cd\u4f5c: \u5f53\u524d\u4efb\u52a1\u5bf9 GDT \u4e2d\u7684 TSS \u63cf\u8ff0\u7b26\u6267\u884c JMP \u6216 CALL \u6307\u4ee4 \u5f53\u524d\u4efb\u52a1\u5bf9 GDT \u6216 LDT \u4e2d\u7684\u4efb\u52a1\u95e8\u63cf\u8ff0\u7b26\u6267\u884c JMP \u6216 CALL \u6307\u4ee4 \u4e2d\u65ad\u6216\u5f02\u5e38\u5411\u91cf\u6307\u5411 IDT \u8868\u4e2d\u7684\u4efb\u52a1\u95e8\u63cf\u8ff0\u7b26 \u5f53 EFLAGS \u4e2d\u7684 NT \u6807\u5fd7\u7f6e\u4f4d\u65f6\u5f53\u524d\u4efb\u52a1\u6267\u884c IRET \u6307\u4ee4\u3002 6.4 \u4e2d\u65ad\u548c\u5f02\u5e38\u5411\u91cf \u2003\u4e3a\u4e86\u6709\u52a9\u4e8e\u5904\u7406\u5f02\u5e38\u548c\u4e2d\u65ad\uff0c\u6bcf\u4e2a\u9700\u8981\u88ab\u5904\u7406\u5668\u8fdb\u884c\u7279\u6b8a\u5904\u7406\u7684\u5904\u7406\u5668\u5b9a\u4e49\u7684\u5f02\u5e38\u548c\u4e2d\u65ad\u6761\u4ef6\u90fd\u88ab\u8d4b\u4e88\u4e86\u4e00\u4e2a\u6807\u8bc6\u53f7\uff0c\u79f0\u4e3a\u5411\u91cf\uff08vector\uff09\u3002\u5904\u7406\u5668\u628a\u8d4b\u4e88\u5f02\u5e38\u6216\u4e2d\u65ad\u7684\u5411\u91cf\u7528\u4f5c\u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868 IDT\uff08Interrupt Descriptor Table\uff09\u4e2d\u7684\u4e00\u4e2a\u7d22\u5f15\u53f7\uff0c\u6765\u5b9a\u4f4d\u4e00\u4e2a\u5f02\u5e38\u6216\u4e2d\u65ad\u7684\u5904\u7406\u7a0b\u5e8f\u5165\u53e3\u70b9\u4f4d\u7f6e\u3002 \u4e2d\u65ad\u6e90 \uff1a\u5916\u90e8\u786c\u4ef6\u4e2d\u65ad\u548c\u8f6f\u4ef6\u4ea7\u751f\u7684\u4e2d\u65ad \u5f02\u5e38\u6e90 \uff1a\u8f6f\u4ef6\u68c0\u6d4b\u5230\u7684\u7a0b\u5e8f\u9519\u8bef\u5f02\u5e38\u548c\u8f6f\u4ef6\u4ea7\u751f\u7684\u5f02\u5e38 \u2003\u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868 IDT\uff08Interrupt Descriptor Table\uff09\u5c06\u6bcf\u4e2a\u5f02\u5e38\u6216\u4e2d\u65ad\u5411\u91cf\u5206\u522b\u4e0e\u5b83\u4eec\u7684\u5904\u7406\u8fc7\u7a0b\u8054\u7cfb\u8d77\u6765\u3002 \u4e0e GDT \u548c LDT \u8868\u7c7b\u4f3c\uff0cIDT \u4e5f\u662f\u7531 8 \u5b57\u8282\u957f\u63cf\u8ff0\u7b26\u7ec4\u6210\u7684\u4e00\u4e2a\u6570\u7ec4\u3002\u4e0e GDT \u4e0d\u540c\u7684\u662f\uff0c\u8868\u4e2d\u7b2c 1 \u9879\u53ef\u4ee5\u5305\u542b\u63cf\u8ff0\u7b26\u3002 7. \u8865\u5145 7.1 GDT \u2003GDT\u7684\u7b2c\u4e00\u9879\u89c4\u5b9a\u603b\u662f\u7a7a\u63cf\u8ff0\u7b26\uff1a\u56e0\u4e3a\u5f53LDTR\u5bc4\u5b58\u5668\u4e3a0\u65f6\uff0c\u6307\u5411\u7684\u6b63\u662fGDT\u4e2d\u7b2c\u4e00\u9879\uff0c\u7a7a\u63cf\u8ff0\u7b26\u8868\u660e\u5f53\u524d\u4efb\u52a1\u6ca1\u6709LDT\u3002 7.2 IRET and RET \u2003IRET \u6307\u4ee4\u4e0e RET \u6307\u4ee4\u7c7b\u4f3c\uff0c\u4f46 IRET \u8fd8\u4f1a\u628a\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\u5185\u5bb9\u6062\u590d\u5230 EFLAGS \u4e2d\u3002\u4e0d\u8fc7\u53ea\u6709\u5f53 CPL \u662f 0 \u65f6\u624d\u4f1a\u6062\u590d EFLAGS \u4e2d\u7684 IOPL \u5b57\u6bb5\uff0c\u5e76\u4e14\u53ea\u6709\u5f53 CPL<=IOPL \u65f6\uff0cIF \u6807\u5fd7\u624d\u4f1a\u88ab\u6539\u53d8\u3002 \u5982\u679c\u5f53\u8c03\u7528\u4e2d\u65ad\u5904\u7406\u8fc7\u7a0b\u65f6\u53d1\u751f\u4e86\u5806\u6808\u5207\u6362\uff0c\u90a3\u4e48\u5728\u8fd4\u56de\u65f6 IRET \u6307\u4ee4\u4f1a\u5207\u6362\u56de\u5230\u539f\u6765\u7684\u5806\u6808\u3002 7.3 EFLAGS IOPL \u7279\u6743\u7ea7\u5b57\u6bb5\uff1a\u4e24\u4e2a\u4f4d\u5bbd\uff0c\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u3002\u6307\u5b9a\u4e86\u8981\u6c42\u6267\u884cI/O\u6307\u4ee4\u7684\u7279\u6743\u7ea7\uff0c\u5982\u679cCPL<=IOPL\uff0cI/O\u6307\u4ee4\u53ef\u4ee5\u6267\u884c\uff0c\u5426\u5219\u53d1\u751f\u4e00\u4e2a\u4fdd\u62a4\u5f02\u5e38\u3002 NT \u5d4c\u5957\u4efb\u52a1\u4f4d\uff1a\u63a7\u5236IRET\u6307\u4ee4\u7684\u8fd0\u884c\u3002\u5982\u679cNT=0\uff0c\u7528\u6808\u4e2d\u4fdd\u5b58\u7684\u503c\u6062\u590dEFLAGS\u3001CS\u548cEIP\u6267\u884c\u5e38\u89c4\u7684\u4e2d\u65ad\u8fd4\u56de\u3002 \u5982\u679cNT=1\uff0c\u4e2d\u65ad\u8fd4\u56de\u7528\u4e00\u4efb\u52a1\u8f6c\u6362\u4ee3\u66ff\u4e0a\u8ff0\u8fc7\u7a0b\u3002 \u53ea\u6709\u5728\u7279\u6743\u7ea70\u4e0b\u6267\u884c\u7684\u7a0b\u5e8f\u624d\u80fd\u6539\u53d8VM\u53caIOPL\u5b57\u6bb5\u3002IF\u4f4d\u53ea\u80fd\u7531\u5177\u6709I/O\u7279\u6743\u7684\u7a0b\u5e8f\u6240\u6539\u53d8\u3002","title":"3_\u4fdd\u62a4\u6a21\u5f0f"},{"location":"os/3_80x86_protect_mode/#_1","text":"20\u4f4d\u5b9e\u6a21\u5f0f\u4e0b\uff0c\u5bfb\u5740\u4e00\u4e2a\u5185\u5b58\u5730\u5740\u4e3b\u8981\u4f7f\u7528\u6bb5\u57fa\u5730\u5740\u548c\u6bb5\u5185\u504f\u79fb\u503c\uff0c\u524d\u8005\u5b58\u653e\u5728\u6bb5\u5bc4\u5b58\u5668\u4e2d\uff0c\u540e\u8005\u5b58\u653e\u5728\u4efb\u4f55\u4e00\u4e2a\u53ef\u7528\u4e8e\u5bfb\u5740\u7684\u5bc4\u5b58\u5668\u4e2d\uff0c\u4e14\u7531\u4e8e\u5bc4\u5b58\u5668\u5927\u5c0f\u4e3a16\u4f4d\uff0c\u5373\u6bb5\u5185\u504f\u79fb\u503c\u6700\u5927\u4e3a2^16B=64KB\uff0c\u8bf4\u660e\u6bb5\u7684\u5927\u5c0f\u56fa\u5b9a\u4e3a64KB. 32\u4f4d\u4fdd\u62a4\u6a21\u5f0f\u5185\u5b58\u5bfb\u5740\u673a\u5236\u89c13.2.1\u5206\u6bb5\u673a\u5236","title":"\u4fdd\u62a4\u6a21\u5f0f"},{"location":"os/3_80x86_protect_mode/#1","text":"GDTR\u3001LDTR\u3001IDTR \u548c TR \u90fd\u662f\u6bb5\u57fa\u5740\u5bc4\u5b58\u5668: GDTR : \u5168\u5c40\u63cf\u8ff0\u7b26\u5bc4\u5b58\u5668\uff0c\u57fa\u5730\u5740\u6307\u5b9aGDT \u8868\u5728\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u8d77\u59cb\u5730\u5740\uff0c\u8868\u957f\u5ea6\u6307\u660e GDT \u8868\u7684\u5b57\u8282\u957f\u5ea6\u503c\u3002\u6307\u4ee4 LGDT \u548c SGDT \u5206\u522b\u7528\u4e8e\u52a0\u8f7d\u548c\u4fdd\u5b58 GDTR \u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u3002 IDTR : \u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868\u5bc4\u5b58\u5668\uff0c\u5b58\u653e\u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868 IDT \u7684 32 \u4f4d\u7ebf\u6027\u57fa\u5730\u5740\u548c 16 \u4f4d\u8868\u957f\u5ea6\u503c\u3002\u6307\u4ee4 LIDT \u548c SIDT \u5206\u522b\u7528\u4e8e\u52a0\u8f7d\u548c\u4fdd\u5b58 IDTR \u5bc4\u5b58\u5668\u7684\u5185\u5bb9\u3002 LDTR : \u5b58\u653e\u5c40\u90e8\u63cf\u8ff0\u7b26\u8868 LDT \u7684 32 \u4f4d\u7ebf\u6027\u57fa\u5730\u5740\u300116 \u4f4d\u6bb5\u9650\u957f\u548c\u63cf\u8ff0\u7b26\u5c5e\u6027\u503c\uff1b\u6307\u4ee4LLDT \u548c SLDT \u5206\u522b\u7528\u4e8e\u52a0\u8f7d\u548c\u4fdd\u5b58 LDTR \u5bc4\u5b58\u5668\u7684\u6bb5\u63cf\u8ff0\u7b26\u90e8\u5206\u3002 \u5305\u542b LDT \u8868\u7684\u6bb5\u5fc5\u987b\u5728 GDT \u8868\u4e2d\u6709\u4e00\u4e2a\u6bb5\u63cf\u8ff0\u7b26\u9879 \u3002\u5f53\u4f7f\u7528 LLDT \u6307\u4ee4\u628a\u542b\u6709 LDT \u8868\u6bb5\u7684\u9009\u62e9\u7b26\u52a0\u8f7d\u8fdb LDTR \u65f6\uff0cLDT \u6bb5\u63cf\u8ff0\u7b26\u7684\u6bb5\u57fa\u5730\u5740\u3001\u6bb5\u9650\u957f\u5ea6\u4ee5\u53ca\u63cf\u8ff0\u7b26\u5c5e\u6027\u4f1a\u88ab\u81ea\u52a8\u5730\u52a0\u8f7d\u5230 LDTR \u4e2d\u3002 \u5f53\u8fdb\u884c\u4efb\u52a1\u5207\u6362\u65f6\uff0c\u5904\u7406\u5668\u4f1a\u628a\u65b0\u4efb\u52a1 LDT\u7684\u6bb5\u9009\u62e9\u7b26\u548c\u6bb5\u63cf\u8ff0\u7b26\u81ea\u52a8\u5730\u52a0\u8f7d\u8fdb LDTR \u4e2d\u3002 TR : \u4efb\u52a1\u5bc4\u5b58\u5668\uff0c\u5b83\u5f15\u7528 GDT \u8868\u4e2d\u7684\u4e00\u4e2a TSS \u7c7b\u578b\u7684\u63cf\u8ff0\u7b26\u3002\u6307\u4ee4 LTR \u548c STR \u5206\u522b\u7528\u4e8e\u52a0\u8f7d\u548c\u4fdd\u5b58 TR \u5bc4\u5b58\u5668\u7684\u6bb5\u9009\u62e9\u7b26\u90e8\u5206\u3002\u5f53\u4f7f\u7528 LTR \u6307\u4ee4\u628a\u9009\u62e9\u7b26\u52a0\u8f7d\u8fdb\u4efb\u52a1\u5bc4\u5b58\u5668\u65f6\uff0cTSS \u63cf\u8ff0\u7b26\u4e2d\u7684\u6bb5\u57fa\u5730\u5740\u3001\u6bb5\u9650\u957f\u5ea6\u4ee5\u53ca\u63cf\u8ff0\u7b26\u5c5e\u6027\u4f1a\u88ab\u81ea\u52a8\u5730\u52a0\u8f7d\u5230\u4efb\u52a1\u5bc4\u5b58\u5668\u4e2d\u3002 \u5f53\u6267\u884c\u4efb\u52a1\u5207\u6362\u65f6\uff0c\u5904\u7406\u5668\u4f1a\u628a\u65b0\u4efb\u52a1\u7684 TSS \u7684\u6bb5\u9009\u62e9\u7b26\u548c\u6bb5\u63cf\u8ff0\u7b26\u81ea\u52a8\u5730\u52a0\u8f7d\u8fdb\u4efb\u52a1\u5bc4\u5b58\u5668 TR \u4e2d\u3002 \u2003 \u4e8b\u5b9e\u4e0a\uff0c\u7531\u4e8e\u5207\u6362TSS\uff0c\u9700\u8981\u8017\u8d39\u8bb8\u591a\u65f6\u95f4\u5728\u4fdd\u5b58\u4e8e\u8d4b\u503c\u4e0a\uff0c\u540e\u6765\u7684linux\u7cfb\u7edf\u91c7\u7528\u5207\u6362\u5185\u6838\u6808\u6765\u6062\u590d\u548c\u4fdd\u5b58\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u3002","title":"1. \u5185\u5b58\u7ba1\u7406\u5bc4\u5b58\u5668"},{"location":"os/3_80x86_protect_mode/#2","text":"CR0 \u4e2d\u542b\u6709\u63a7\u5236\u5904\u7406\u5668\u64cd\u4f5c\u6a21\u5f0f\u548c\u72b6\u6001\u7684\u7cfb\u7edf\u63a7\u5236\u6807\u5fd7\uff0c \u5176\u4e2dCR0\u4e2d\u7684\u4fdd\u62a4\u63a7\u5236\u4f4d\uff1a PE \uff1aCR0 \u7684\u4f4d 0 \u662f\u542f\u7528\u4fdd\u62a4\uff08Protection Enable\uff09\u6807\u5fd7\u3002\u5f53\u8bbe\u7f6e\u8be5\u4f4d\u65f6\u5373\u5f00\u542f\u4e86\u4fdd\u62a4\u6a21\u5f0f\uff1b\u5f53\u590d\u4f4d\u65f6\u5373\u8fdb\u5165\u5b9e\u5730\u5740\u6a21\u5f0f\u3002 PG \uff1aCR0 \u7684\u4f4d 31 \u662f\u5206\u9875\uff08Paging\uff09\u6807\u5fd7\u3002\u5f53\u8bbe\u7f6e\u8be5\u4f4d\u65f6\u5373\u5f00\u542f\u4e86\u5206\u9875\u673a\u5236\uff1b\u5f53\u590d\u4f4d\u65f6\u5219\u7981\u6b62\u5206\u9875\u673a\u5236\uff0c\u6b64\u65f6\u6240\u6709\u7ebf\u6027\u5730\u5740\u7b49\u540c\u4e8e\u7269\u7406\u5730\u5740\u3002\u5728\u5f00\u542f\u8fd9\u4e2a\u6807\u5fd7\u4e4b\u524d\u5fc5\u987b\u5df2\u7ecf\u6216\u8005\u540c\u65f6\u5f00\u542f PE \u6807\u5fd7\u3002\u5373\u82e5\u8981\u542f\u7528\u5206\u9875\u673a\u5236\uff0c\u90a3\u4e48 PE \u548c PG \u6807\u5fd7\u90fd\u8981\u7f6e\u4f4d\u3002\u5728\u4fee\u6539\u4e86 PE \u4f4d\u4e4b\u540e\u7a0b\u5e8f\u5fc5\u987b\u7acb\u523b\u4f7f\u7528\u4e00\u6761\u8df3\u8f6c\u6307\u4ee4\uff0c\u4ee5\u5237\u65b0\u5904\u7406\u5668\u6267\u884c\u7ba1\u9053\u4e2d\u5df2\u7ecf\u83b7\u53d6\u7684\u4e0d\u540c\u6a21\u5f0f\u4e0b\u7684\u4efb\u4f55\u6307\u4ee4\u3002\u5728\u8bbe\u7f6e PE \u4f4d\u4e4b\u524d\uff0c\u7a0b\u5e8f\u5fc5\u987b\u521d\u59cb\u5316\u51e0\u4e2a\u7cfb\u7edf\u6bb5\u548c\u63a7\u5236\u5bc4\u5b58\u5668\u3002 CR2 \u548c CR3 \u7528\u4e8e\u5206\u9875\u673a\u5236: CR3 \u542b\u6709\u5b58\u653e\u9875\u76ee\u5f55\u8868\u9875\u9762\u7684\u7269\u7406\u5730\u5740\uff0c\u56e0\u6b64 CR3 \u4e5f\u88ab\u79f0\u4e3a PDBR\u3002\u56e0\u4e3a\u9875\u76ee\u5f55\u8868\u9875\u9762\u662f\u9875\u5bf9\u9f50\u7684\uff0c\u6240\u4ee5\u8be5\u5bc4\u5b58\u5668\u53ea\u6709\u9ad8 20 \u4f4d\u662f\u6709\u6548\u7684\uff0c\u4e14CR3 \u4e2d\u52a0\u8f7d\u4e00\u4e2a\u65b0\u503c\u65f6\u4f4e12\u4f4d\u5fc5\u987b\u7f6e0\u3002 CR2 \u7528\u4e8e\u51fa\u73b0\u9875\u5f02\u5e38\u65f6\u62a5\u544a\u51fa\u9519\u4fe1\u606f\u3002\u5728\u62a5\u544a\u9875\u5f02\u5e38\u65f6\uff0c\u5904\u7406\u5668\u4f1a\u628a\u5f15\u8d77\u5f02\u5e38\u7684\u7ebf\u6027\u5730\u5740\u5b58\u653e\u5728 CR2\u4e2d\u3002\u56e0\u6b64\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u9875\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5 CR2 \u7684\u5185\u5bb9\u6765\u786e\u5b9a\u7ebf\u6027\u5730\u5b58\u4e2d\u8bfb\u53d6\u9875\u8868\u9879\u65f6\uff0c\u5730\u5740\u7a7a\u95f4\u4e2d\u54ea\u4e00\u4e2a\u9875\u9762\u5f15\u53d1\u4e86\u5f02\u5e38\u3002 \u4f7f\u7528 MOV \u6307\u4ee4\u52a0\u8f7d CR3 \u65f6\u5177\u6709\u8ba9\u9875\u9ad8\u901f\u7f13\u51b2\u65e0\u6548\u7684\u526f\u4f5c\u7528\u3002\u4e3a\u4e86\u51cf\u5c11\u5730\u5740\u8f6c\u6362\u6240\u8981\u6c42\u7684\u603b\u7ebf\u5468\u671f\u6570\u91cf\uff0c\u6700\u8fd1\u8bbf\u95ee\u7684\u9875\u76ee\u5f55\u548c\u9875\u8868\u4f1a\u88ab\u5b58\u653e\u5728\u5904\u7406\u5668\u7684\u9875\u9ad8\u901f\u7f13\u51b2\u5668\u4ef6\u4e2d(\u4f4d\u4e8eCache\u4e2d\uff0c\u67e5\u627e\u901f\u5ea6\u9ad8\u4e8e\u5185\u5b58)\uff0c\u8be5\u7f13\u51b2\u5668\u4ef6\u88ab\u79f0\u4e3a\u8f6c\u6362\u67e5\u627e\u7f13\u51b2\u533a TLB \uff08Translation Lookaside Buffer\uff09\u3002\u53ea\u6709\u5f53 TLB \u4e2d\u4e0d\u5305\u542b\u8981\u6c42\u7684\u9875\u8868\u9879\u65f6\u624d\u4f1a\u4f7f\u7528\u989d\u5916\u7684\u603b\u7ebf\u5468\u671f\u4ece\u5185\u5b58\u4e2d\u8bfb\u53d6\u9875\u8868\u9879\u3002","title":"2.\u63a7\u5236\u5bc4\u5b58\u5668"},{"location":"os/3_80x86_protect_mode/#3","text":"\u4efb\u4f55\u5b8c\u6574\u7684\u5185\u5b58\u7ba1\u7406\u7cfb\u7edf\u90fd\u5305\u542b\u4e24\u4e2a\u5173\u952e\u90e8\u5206\uff1a\u4fdd\u62a4\u548c\u5730\u5740\u53d8\u6362\u3002\u63d0\u4f9b\u4fdd\u62a4\u63aa\u65bd\u53ef\u4ee5\u9632\u6b62\u4e00\u4e2a\u4efb\u52a1\u8bbf \u95ee\u53e6\u4e00\u4e2a\u4efb\u52a1\u6216\u64cd\u4f5c\u7cfb\u7edf\u7684\u5185\u5b58\u533a\u57df\u3002\u5730\u5740\u53d8\u6362\u80fd\u591f\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u5728\u7ed9\u4efb\u52a1\u5206\u914d\u5185\u5b58\u65f6\u5177\u6709\u7075\u6d3b\u6027\uff0c\u5e76\u4e14\u56e0 \u4e3a\u6211\u4eec\u53ef\u4ee5\u8ba9\u67d0\u4e9b\u7269\u7406\u5730\u5740\u4e0d\u88ab\u4efb\u4f55\u903b\u8f91\u5730\u5740\u6240\u6620\u5c04\uff0c\u6240\u4ee5\u5728\u5730\u5740\u53d8\u6362\u8fc7\u7a0b\u4e2d\u540c\u65f6\u4e5f\u63d0\u4f9b\u4e86\u5185\u5b58\u4fdd\u62a4\u529f\u80fd\u3002 \u200380x86CPU \u91c7\u7528\u7684\u662f\u5c0f\u7aef\u5bf9\u9f50(\u503c\u7684\u4f4e\u4f4d\u5b58\u653e\u5728\u5730\u5740\u4f4e\u4f4d)","title":"3.\u4fdd\u62a4\u6a21\u5f0f\u5185\u5b58\u7ba1\u7406"},{"location":"os/3_80x86_protect_mode/#31","text":"\u6bb5\u5730\u5740\u90e8\u5206\u4f7f\u7528 16 \u4f4d\u7684\u6bb5\u9009\u62e9\u7b26\u6307\u5b9a\uff0c\u5176\u4e2d 14 \u4f4d\u53ef\u4ee5\u9009\u62e9 2^14 \u6b21\u65b9\u5373 16384(\u537316K) \u4e2a\u6bb5\u3002\u6bb5\u5185\u504f\u79fb\u5730\u5740\u90e8\u5206\u4f7f\u7528 32 \u4f4d\u7684\u503c\u6765\u6307\u5b9a\uff0c\u56e0\u6b64\u6bb5\u5185\u5730\u5740\u53ef\u4ee5\u662f 0 \u5230 4G\u3002\u5373\u4e00\u4e2a\u6bb5\u7684\u6700\u5927\u957f\u5ea6\u53ef\u8fbe 4G\u3002\u7a0b\u5e8f\u4e2d\u7531 16 \u4f4d\u7684\u6bb5\u548c 32 \u4f4d\u7684\u504f\u79fb\u6784\u6210\u7684 48 \u4f4d\u5730\u5740\u6216\u957f\u6307\u9488\u79f0\u4e3a\u4e00\u4e2a\u903b\u8f91\u5730\u5740\uff08\u865a\u62df\u5730\u5740\uff09\u3002\u5b83\u552f\u4e00\u786e\u5b9a\u4e86\u4e00\u4e2a\u6570\u636e\u5bf9\u8c61\u7684\u6bb5\u5730\u5740\u548c\u6bb5\u5185\u504f\u79fb\u5730\u5740\u3002 \u2003\u3002\u5728\u4efb\u4f55\u6307\u5b9a\u65f6\u523b\u7531 CS \u5bfb\u5740\u7684\u6bb5\u79f0\u4e3a\u5f53\u524d\u4ee3\u7801\u6bb5\u3002\u6b64\u65f6EIP \u5bc4\u5b58\u5668\u4e2d\u5305\u542b\u4e86\u5f53\u524d\u4ee3\u7801\u6bb5\u5185\u4e0b\u4e00\u6761\u8981\u6267\u884c\u6307\u4ee4\u7684\u6bb5\u5185\u504f\u79fb\u5730\u5740\u3002\u56e0\u6b64\u8981\u6267\u884c\u6307\u4ee4\u7684\u5730\u5740\u53ef\u8868\u793a\u6210CS:[EIP]\u3002\u53ef\u4ee5\u901a\u8fc7\u6bb5\u95f4\u63a7\u5236\u8f6c\u79fb\u547d\u4ee4\u4e3aCS\u548cEIP\u8d4b\u65b0\u503c\uff0c\u4ece\u800c\u53ef\u4ee5\u628a\u6267\u884c\u4f4d\u7f6e\u6539\u53d8\u5230 \u5176\u4ed6\u7684\u4ee3\u7801\u6bb5\u4e2d\uff0c\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5728\u4e0d\u540c\u6bb5\u4e2d\u7a0b\u5e8f\u7684\u63a7\u5236\u4f20\u9012\u3002 \u2003eg\uff1acs\u4e2d\u5b58\u653e8\uff0c\u537300000000000000000000000000000100b\uff0c\u5219\u5bf9\u5e94GDT\u8868\u5f00\u59cb\u7684\u5730\u5740\u4e3a8\u7684\u4ee3\u7801\uff0c\u56e0\u4e3a\u6b64\u65f6\u7d22\u5f15\u4e3a1( \u5728 80X86 CPU\u4e2d\uff0c\u6bb5\u5bc4\u5b58\u5668\u4e2d\u7684\u503c\u53f3\u79fb 3 \u4f4d\u5373\u662f\u63cf\u8ff0\u7b26\u8868\u4e2d\u4e00\u4e2a\u63cf\u8ff0\u7b26\u7684\u7d22\u5f15\u503c\u3002 )\uff0c\u800c\u4e00\u4e2a\u6bb5\u63cf\u8ff0\u7b26\u5927\u5c0f\u4e3a8B\uff0c\u5219\u7d22\u5f151\u7684\u6bb5\u8d77\u59cb\u5730\u5740\u5373\u4e3a8\u3002","title":"3.1 \u5185\u5b58\u5bfb\u5740"},{"location":"os/3_80x86_protect_mode/#32","text":"\u8ba1\u7b97\u673a\u4e2d\u7684\u7269\u7406\u5185\u5b58\u662f\u5b57\u8282\u7684\u7ebf\u6027\u6570\u7ec4\uff0c\u6bcf\u4e2a\u5b57\u8282\u5177\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u7269\u7406\u5730\u5740\uff1b\u7a0b\u5e8f\u4e2d\u7684\u5730\u5740\u662f\u7531\u6bb5\u9009\u62e9\u7b26\u548c\u6bb5\u504f\u79fb\u91cf\u4e24\u90e8\u5206\u6784\u6210\u7684\u865a\u62df\u5730\u5740; \u903b\u8f91\u5730\u5740\u662f\u6307\u7531\u7a0b\u5e8f\u4ea7\u751f\u7684\u4e0e\u6bb5\u76f8\u5173\u7684\u504f\u79fb\u5730\u5740\u90e8\u5206\uff08\u901a\u5e38\u4e0d\u533a\u5206\u865a\u62df\u5730\u5740\u548c\u903b\u8f91\u5730\u5740\uff0c\u7edf\u79f0\u4e3a\u903b\u8f91\u5730\u5740\uff09; \u7269\u7406\u5730\u5740\u662fCPU \u5916\u90e8\u5730\u5740\u603b\u7ebf\u4e0a\u7684\u5bfb\u5740\u7269\u7406\u5185\u5b58\u7684\u5730\u5740\u4fe1\u53f7\u3002 \u2003\u903b\u8f91\u5730\u5740\u5e76\u4e0d\u80fd\u76f4\u63a5\u7528\u4e8e\u8bbf\u95ee\u7269\u7406\u5185\u5b58\uff0c\u800c\u9700\u8981\u4f7f\u7528\u5730\u5740\u53d8\u6362\u673a\u5236\u5c06\u5b83\u53d8\u6362\u6216\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\u5730\u5740\u4e0a\u3002\u5185\u5b58\u7ba1\u7406\u673a\u5236\u5373\u7528\u4e8e\u5c06\u8fd9\u79cd\u903b\u8f91\u5730\u5740\u8f6c\u6362\u6210\u7269\u7406\u5185\u5b58\u5730\u5740\u3002\u4e3a\u4e86\u51cf\u5c11\u786e\u5b9a\u5730\u5740\u53d8\u6362\u6240\u9700\u8981\u7684\u4fe1\u606f\uff0c\u53d8\u6362\u6216\u6620\u5c04\u901a\u5e38\u4ee5\u5185\u5b58\u5757\u4f5c\u4e3a\u64cd\u4f5c\u5355\u4f4d\u3002 \u5206\u6bb5\u673a\u5236\u548c\u5206\u9875\u673a\u5236 \u662f\u4e24\u79cd\u5e7f\u6cdb\u4f7f\u7528\u7684\u5730\u5740\u53d8\u6362\u6280\u672f\u3002\u5206\u6bb5\u548c\u5206\u9875\u64cd\u4f5c\u90fd\u4f7f\u7528\u9a7b\u7559\u5728\u5185\u5b58\u4e2d\u7684\u8868(GDT/LDT\u4e0e\u9875\u8868)\u6765\u6307\u5b9a\u5b83\u4eec\u5404\u81ea\u7684\u53d8\u6362\u4fe1 \u606f\u3002\u8fd9\u4e9b\u8868\u53ea\u80fd\u7531\u64cd\u4f5c\u7cfb\u7edf\u8bbf\u95ee\uff0c\u4ee5\u9632\u6b62\u5e94\u7528\u7a0b\u5e8f\u64c5\u81ea\u4fee\u6539\u3002","title":"3.2 \u5730\u5740\u53d8\u6362"},{"location":"os/3_80x86_protect_mode/#321","text":"\u5206\u6bb5\u673a\u5236\u53ef\u4ee5\u628a\u5904\u7406\u5668\u53ef\u5bfb\u5740\u7684\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u5212\u5206\u6210\u4e00\u4e9b\u8f83\u5c0f\u7684\u79f0\u4e3a\u6bb5\u7684\u53d7\u4fdd\u62a4\u5730\u5740\u7a7a\u95f4\u533a\u57df\u3002\u6bb5\u53ef\u4ee5\u7528\u6765\u5b58\u653e\u7a0b\u5e8f\u7684\u4ee3\u7801\u3001\u6570\u636e\u548c\u5806\u6808\uff0c\u6216\u8005\u7528\u6765\u5b58\u653e\u7cfb\u7edf\u6570\u636e\u7ed3\u6784\uff08\u4f8b\u5982 TSS\u6216 LDT\uff09\u3002\u5982\u679c\u5904\u7406\u5668\u4e2d\u6709\u591a\u4e2a\u7a0b\u5e8f\u6216\u4efb\u52a1\u5728\u8fd0\u884c\uff0c\u90a3\u4e48\u6bcf\u4e2a\u7a0b\u5e8f\u53ef\u5206\u914d\u5404\u81ea\u7684\u4e00\u5957\u6bb5\u3002\u56e0\u6b64\u591a\u4e2a\u7a0b\u5e8f\uff08\u6216\u4efb\u52a1\uff09\u53ef\u4ee5\u8fd0\u884c\u5728\u540c\u4e00\u4e2a\u5904\u7406\u5668\u4e0a\u800c\u4e0d\u4f1a\u4e92\u76f8\u5e72\u6270\u3002 \u2003\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u6240\u6709\u4f7f\u7528\u7684\u6bb5\u90fd\u5305\u542b\u5728\u5904\u7406\u5668\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u4e2d\u3002\u4e3a\u4e86\u5b9a\u4f4d\u6307\u5b9a\u6bb5\u4e2d\u7684\u4e00\u4e2a\u5b57\u8282\uff0c\u7a0b\u5e8f\u5fc5\u987b\u63d0\u4f9b\u4e00\u4e2a\u903b\u8f91\u5730\u5740\u3002\u903b\u8f91\u5730\u5740\u5305\u62ec\u4e00\u4e2a\u6bb5\u9009\u62e9\u7b26\u548c\u4e00\u4e2a\u504f\u79fb\u91cf\u3002\u6bb5\u9009\u62e9\u7b26\u662f\u4e00\u4e2a\u6bb5\u7684\u552f\u4e00\u6807\u8bc6\u3002\u6bb5\u9009\u62e9\u7b26\u662f\u63d0\u6bb5\u63cf\u8ff0\u7b26\u8868\uff08\u4f8b\u5982\u5168\u5c40\u63cf\u8ff0\u7b26\u8868 GDT\u4e2d\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff0c\u79f0\u4e3a\u6bb5\u63cf\u8ff0\u7b26\uff09\u4e2d\u67d0\u4e00\u63cf\u8ff0\u7b26\u9879\u5728\u8868\u4e2d\u7684\u7d22\u5f15\u503c\u3002\u7d22\u5f15\u503c\u6307\u5b9a\u7684\u6bb5\u63cf\u8ff0\u7b26\u9879\u4e2d\u542b\u6709\u9700\u8981\u5bfb\u5740\u7684\u5185\u5b58\u6bb5\u7684\u6bb5\u57fa\u5730\u5740\u3001\u6bb5\u7684\u957f\u5ea6\u503c\u3001\u6bb5\u7684\u8bbf\u95ee\u7279\u6743\u7ea7\u3001\u6bb5\u7c7b\u578b\u3002\u903b\u8f91\u5730\u5740\u7684\u504f\u79fb\u91cf\u90e8\u5206\u52a0\u5230\u6bb5\u7684\u57fa\u5730\u5740\u4e0a\u5c31\u53ef\u4ee5\u5b9a\u4f4d\u5185\u5b58\u4e2d\u6bb5\u4e2d\u67d0\u4e2a\u5b57\u8282\u7684\u4f4d\u7f6e\u3002\u56e0\u6b64 \u57fa\u5730\u5740\u52a0\u4e0a\u504f\u79fb\u91cf\u5c31\u5f62\u6210\u4e86\u5904\u7406\u5668\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u5730\u5740\u3002","title":"3.2.1 \u5206\u6bb5\u673a\u5236"},{"location":"os/3_80x86_protect_mode/#322","text":"\u5206\u9875\u673a\u5236\u4e3a\u4f20\u7edf\u9700\u6c42\u9875\u3001\u865a\u62df\u5185\u5b58\u7cfb\u7edf\u63d0\u4f9b\u4e86\u5b9e\u73b0\u673a\u5236\u3002\u5176\u4e2d\u865a\u62df\u5185\u5b58\u7cfb\u7edf\u7528\u4e8e\u5b9e\u73b0\u7a0b\u5e8f\u4ee3\u7801\u6309\u8981\u6c42\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\u4e2d\u3002 \u2003\u4f7f\u7528 \u865a\u62df\u5b58\u50a8 \u6280\u672f\u3002\u865a\u62df\u5b58\u50a8\u662f\u4e00\u79cd\u5185\u5b58\u7ba1\u7406\u6280\u672f\uff0c\u4f7f\u7528\u8fd9\u79cd\u6280\u672f\u53ef\u8ba9\u7f16\u7a0b\u4eba\u5458\u4ea7\u751f\u5185\u5b58\u7a7a\u95f4\u8981\u6bd4\u8ba1\u7b97\u673a\u4e2d\u5b9e\u9645\u7269\u7406\u5185\u5b58\u5bb9\u91cf\u5927\u5f88\u591a\u7684\u9519\u89c9\u3002\u5728\u4f7f\u7528\u865a\u62df\u5b58\u50a8\u7684\u73af\u5883\u4e2d\uff0c\u5927\u5bb9\u91cf\u7684\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u9700\u8981\u4f7f\u7528\u5c0f\u5757\u7684\u7269\u7406\u5185\u5b58\uff08RAM \u6216 ROM\uff09\u4ee5\u53ca\u67d0\u4e9b\u5916\u90e8\u5b58\u50a8\u7a7a\u95f4\uff08\u4f8b\u5982\u5927\u5bb9\u91cf\u786c\u76d8\uff09\u6765\u6a21\u62df\u3002\u5f53\u4f7f\u7528\u5206\u9875\u65f6\uff0c\u6bcf\u4e2a\u6bb5\u88ab\u5212\u5206\u6210\u9875\u9762\uff08\u901a\u5e38\u6bcf\u9875\u4e3a 4KB \u5927\u5c0f\uff09\uff0c\u9875\u9762\u4f1a\u88ab\u5b58\u50a8\u4e8e\u7269\u7406\u5185\u5b58\u4e2d\u6216\u786c\u76d8\u4e0a\u3002\u64cd\u4f5c\u7cfb\u7edf\u901a\u8fc7\u7ef4\u62a4\u4e00\u4e2a\u9875\u76ee\u5f55\u548c\u4e00\u4e9b\u9875\u8868\u6765\u7559\u610f\u8fd9\u4e9b\u9875\u9762\u3002\u5f53\u7a0b\u5e8f\uff08\u6216\u4efb\u52a1\uff09\u8bd5\u56fe\u8bbf\u95ee\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u5730\u5740\u4f4d\u7f6e\u65f6\uff0c\u5904\u7406\u5668\u5c31\u4f1a\u4f7f\u7528\u9875\u76ee\u5f55\u548c\u9875\u8868\u628a\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u6210\u4e00\u4e2a\u7269\u7406\u5730\u5740\uff0c\u7136\u540e\u5728\u8be5\u5185\u5b58\u4f4d\u7f6e\u4e0a\u6267\u884c\u6240\u8981\u6c42\u7684\u64cd\u4f5c\uff08\u8bfb\u6216\u5199\uff09\u3002 \u5982\u679c\u5f53\u524d\u88ab\u8bbf\u95ee\u7684\u9875\u9762\u4e0d\u5728\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u5904\u7406\u5668\u5c31\u4f1a\u4e2d\u65ad\u7a0b\u5e8f\u7684\u6267\u884c\uff08\u901a\u8fc7\u4ea7\u751f\u4e00\u4e2a\u9875\u9519\u8bef\u5f02\u5e38\uff09\u3002\u7136\u540e\u64cd\u4f5c\u7cfb\u7edf\u5c31\u53ef\u4ee5\u4ece\u786c\u76d8\u4e0a\u628a\u8be5\u9875\u9762\u8bfb\u5165\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u5e76\u7ee7\u7eed\u6267\u884c\u521a\u624d\u88ab\u4e2d\u65ad\u7684\u7a0b\u5e8f\u3002 \u2003 \u865a\u62df\u5185\u5b58\u597d\u5904 : \u865a\u62df\u5185\u5b58\u7ba1\u7406\u53ef\u4ee5\u63a7\u5236\u7269\u7406\u5185\u5b58\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u8bbf\u95ee\u7684\u865a\u62df\u9875\u82e5\u6ca1\u6709\u6743\u9650\uff0c\u5219\u89e6\u53d1\u4e00\u4e2a\u4fdd\u62a4\u5f02\u5e38\uff0c\u7ec8\u6b62\u8fdb\u7a0b\uff1b\u865a\u62df\u5185\u5b58\u8ba9\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\uff1b\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u4f1a\u7ed9\u5206\u914d\u548c\u91ca\u653e\u5185\u5b58\u5e26\u6765\u65b9\u4fbf\uff0c\u7269\u7406\u5185\u5b58\u4e0d\u8fde\u7eed\u7684\u5730\u5740\u53ef\u4ee5\u7531\u8fde\u7eed\u7684\u865a\u62df\u5730\u5740\u6620\u5c04\u5f97\u5230\uff1b\u5185\u5b58\u6548\u7387\u9ad8\uff0c\u4f7f\u7528\u9875\u9762\u8c03\u5ea6\uff0c\u4e0d\u4f1a\u9020\u6210\u5927\u91cf\u5f97\u6570\u636e\u88c5\u5165\u5185\u5b58\u3002","title":"3.2.2 \u5206\u9875\u673a\u5236"},{"location":"os/3_80x86_protect_mode/#322_1","text":"\u5206\u9875\u4f7f\u7528\u4e86\u56fa\u5b9a\u957f\u5ea6\u7684\u9875\u9762\u3002 \u6bb5\u7684\u957f\u5ea6\u901a\u5e38\u4e0e\u5b58\u653e\u5728\u5176\u4e2d\u7684\u4ee3\u7801\u6216\u6570\u636e\u7ed3\u6784\u5177\u6709\u76f8\u540c\u7684\u957f\u5ea6\u3002\u4e0e\u6bb5\u4e0d\u540c\uff0c\u9875\u9762\u6709\u56fa\u5b9a\u7684\u957f\u5ea6\u3002\u5982\u679c\u4ec5\u4f7f\u7528\u5206\u6bb5\u5730\u5740\u8f6c\u6362\uff0c\u90a3\u4e48\u5b58\u50a8\u5728\u7269\u7406\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u5c06\u5305\u542b\u5176\u6240\u6709\u7684\u90e8\u5206\u3002\u4f46\u5982\u679c\u4f7f\u7528\u4e86\u5206\u9875\uff0c\u90a3\u4e48\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\u5c31\u53ef\u4ee5\u4e00\u90e8\u5206\u5b58\u50a8\u4e8e\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u800c\u53e6\u4e00\u90e8\u5206\u4fdd\u5b58\u5728\u78c1\u76d8\u4e2d\u3002 \u6bb5\u8868\u5b58\u50a8\u5728\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\uff0c\u800c\u9875\u8868\u5219\u4fdd\u5b58\u5728\u7269\u7406\u5730\u5740\u7a7a\u95f4\u3002 \u6bb5\u53d8\u6362\u8868\u53ef\u7531\u5206\u9875\u673a\u5236\u91cd\u65b0\u5b9a\u4f4d\u800c\u65e0\u9700\u6bb5\u673a\u5236\u7684\u4fe1\u606f\u6216\u5408\u4f5c\u3002\u6bb5\u53d8\u6362\u673a\u5236\u628a\u865a\u62df\u5730\u5740\uff08\u903b\u8f91\u5730\u5740\uff09\u53d8\u6362\u6210\u7ebf\u6027\u5730\u5740\uff0c\u5e76\u4e14\u5728\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u4e2d\u8bbf\u95ee\u81ea\u5df1\u7684\u8868\uff0c\u4f46\u662f\u5e76\u4e0d\u77e5\u6653\u5206\u9875\u673a\u5236\u628a\u8fd9\u4e9b\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u5230\u7269\u7406\u5730\u5740\u7684\u8fc7\u7a0b\u3002\u7c7b\u4f3c\u5730\uff0c\u5206\u9875\u673a\u5236\u4e5f\u4e0d\u77e5\u9053\u7a0b\u5e8f\u4ea7\u751f\u5730\u5740\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u3002\u5206\u9875\u673a\u5236\u53ea\u662f\u7b80\u5355\u5730\u628a\u7ebf\u6027\u5730\u5740\u8f6c\u6362\u6210\u7269\u7406\u5730\u5740\uff0c\u5e76\u4e14\u5728\u7269\u7406\u5185\u5b58\u4e2d\u8bbf\u95ee\u81ea\u5df1\u7684\u8f6c\u6362\u8868\u3002","title":"3.2.2 \u4e24\u79cd\u673a\u5236\u533a\u522b"},{"location":"os/3_80x86_protect_mode/#33","text":"","title":"3.3 \u4fdd\u62a4"},{"location":"os/3_80x86_protect_mode/#331","text":"\u901a\u8fc7\u7ed9\u6bcf\u4e2a\u4efb\u52a1\u4e0d\u540c\u7684\u865a\u62df\u5730\u5740\uff08\u903b\u8f91\u5730\u5740\uff09\u7a7a\u95f4\u6765\u5b8c\u5168\u9694\u79bb\u5404\u4e2a\u4efb\u52a1\u3002\u5176\u5b9e\u73b0\u539f\u7406\u662f \u5411\u6bcf\u4e2a\u4efb\u52a1\u63d0\u4f9b\u4e0d\u540c\u7684\u903b\u8f91\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u53d8\u6362\u6620\u5c04 \u3002\u53ea\u9700\u7ed9\u6bcf\u4e2a\u4efb\u52a1\u5404\u81ea\u72ec\u7acb\u7684\u6620\u5c04\u8868\uff0c\u6bcf\u4e2a\u4efb\u52a1\u5c31\u4f1a\u6709\u4e0d\u540c\u7684\u5730\u5740\u53d8\u6362\u51fd\u6570\u3002\u5728 80X86 \u4e2d\uff0c\u6bcf\u4e2a\u4efb\u52a1\u90fd\u6709\u81ea\u5df1\u7684\u6bb5\u8868\u548c\u9875\u8868\u3002\u5f53\u5904\u7406\u5668\u5207\u6362\u53bb\u6267\u884c\u4e00\u4e2a\u65b0\u4efb\u52a1\u65f6\uff0c\u4efb\u52a1\u5207\u6362\u7684\u5173\u952e\u90e8\u5206\u5c31\u662f\u5207\u6362\u5230\u65b0\u4efb\u52a1\u7684\u53d8\u6362\u8868\u3002 \u2003\u901a\u8fc7\u5728\u6240\u6709\u4efb\u52a1\u4e2d\u5b89\u6392\u5177\u6709\u76f8\u540c\u7684\u865a\u62df\u5230\u7269\u7406\u5730\u5740\u6620\u5c04\u90e8\u5206\uff0c\u5e76\u4e14\u628a\u64cd\u4f5c\u7cfb\u7edf\u5b58\u50a8\u5728\u8fd9\u4e2a\u516c\u5171\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u90e8\u5206\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53ef\u4ee5\u88ab\u6240\u6709\u4efb\u52a1\u5171\u4eab\u3002\u8fd9\u4e2a\u6240\u6709\u4efb\u52a1\u90fd\u5177\u6709\u7684\u76f8\u540c\u865a\u62df\u5730\u5740\u7a7a\u95f4\u90e8\u5206\u88ab\u79f0\u4e3a\u5168\u5c40\u5730\u5740\u7a7a\u95f4\uff08Global address space\uff09\u3002\u6bcf\u4e2a\u4efb\u52a1\u552f\u4e00\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u90e8\u5206\u88ab\u79f0\u4e3a\u5c40\u90e8\u5730\u5740\u7a7a\u95f4\uff08Local address space\uff09\u3002\u5c40\u90e8\u5730\u5740\u7a7a\u95f4\u542b\u6709\u9700\u8981\u4e0e\u7cfb\u7edf\u4e2d\u5176\u4ed6\u4efb\u52a1\u533a\u522b\u5f00\u7684\u79c1\u6709\u7684\u4ee3\u7801\u548c\u6570\u636e\u3002\u7531\u4e8e\u6bcf\u4e2a\u4efb\u52a1\u4e2d\u5177\u6709\u4e0d\u540c\u7684\u5c40\u90e8\u5730\u5740\u7a7a\u95f4\uff0c\u56e0\u6b64 \u4e24\u4e2a\u4e0d\u540c\u4efb\u52a1\u4e2d\u5bf9\u76f8\u540c\u865a\u62df\u5730\u5740\u5904\u7684\u5f15\u7528\u5c06\u8f6c\u6362\u5230\u4e0d\u540c\u7684\u7269\u7406\u5730\u5740\u5904\u3002\u6240\u6709\u4efb\u52a1\u5728\u5168\u5c40\u5730\u5740\u7a7a\u95f4\u4e2d\u5bf9\u76f8\u540c\u865a\u62df\u5730\u5740\u7684\u5f15\u7528\u5c06\u88ab\u8f6c\u6362\u5230\u540c\u4e00\u4e2a\u7269\u7406\u5730\u5740\u5904 \u3002\u8fd9\u7ed9\u516c\u5171\u4ee3\u7801\u548c\u6570\u636e\uff08\u4f8b\u5982\u64cd\u4f5c\u7cfb\u7edf\uff09\u7684\u5171\u4eab\u63d0\u4f9b\u4e86\u652f\u6301\u3002 \u2003\u865a\u62df\u5730\u5740\uff08\u903b\u8f91\u5730\u5740\uff09\u7a7a\u95f4\u53ef\u5305\u542b\u6700\u591a 16K \u7684\u6bb5(2^14,\uff0c16\u4f4d\u7684\u6bb5\u9009\u62e9\u7b26\u4e2d\u53ea\u6709\u9ad814\u4f4d\u53ef\u4ee5\u7528\u6765\u9009\u62e9)\uff0c\u800c\u6bcf\u4e2a\u6bb5\u6700\u957f\u53ef\u8fbe 4GB\uff0832\u4f4d\u504f\u79fb\u5730\u5740\uff09\uff0c\u4f7f\u5f97\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5bb9\u91cf\u8fbe\u5230 64TB\uff082 46 KB\uff09\u3002\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u548c\u7269\u7406\u5730\u5740\u7a7a\u95f4\u90fd\u662f 4GB\uff082^32KB\uff0c32\u4f4d\u5730\u5740\u603b\u7ebf\uff09\u3002\u5b9e\u9645\u4e0a\uff0c \u5982\u679c\u7981\u7528\u5206\u9875\u673a\u5236\uff0c\u90a3\u4e48\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u5c31\u662f\u7269\u7406\u5730\u5740\u7a7a\u95f4\u3002 \u2003\u865a\u62df\u5730\u5740\u7a7a\u95f4\u88ab\u5206\u5272\u6210\u5927\u5c0f\u76f8\u7b49\u7684\u4e24\u534a\uff08\u5404\u81ea2^13\u4e2a\u6bb5\uff09\u3002\u4e00\u534a\u7531 GDT \u6765\u6620\u5c04\u53d8\u6362\u5230\u7ebf\u6027\u5730\u5740\uff0c\u53e6\u4e00\u534a\u5219\u7531 LDT \u6765\u6620\u5c04\u3002 \u2003 \u5f53\u53d1\u751f\u4efb\u52a1\u5207\u6362\u65f6\uff0cLDT \u4f1a\u66f4\u6362\u6210\u65b0\u4efb\u52a1\u7684 LDT\uff0c\u4f46\u662f GDT \u5e76\u4e0d\u4f1a\u6539\u53d8\u3002\u56e0\u6b64\uff0cGDT \u6240\u6620\u5c04\u7684\u4e00\u534a\u865a\u62df\u5730\u5740\u7a7a\u95f4\u662f\u7cfb\u7edf\u4e2d\u6240\u6709\u4efb\u52a1\u5171\u6709\u7684\uff0c\u4f46\u662f LDT \u6240\u6620\u5c04\u7684\u53e6\u4e00\u534a\u5219\u5728\u4efb\u52a1\u5207\u6362\u65f6\u88ab\u6539\u53d8\u3002\u7cfb\u7edf\u4e2d\u6240\u6709\u4efb\u52a1\u5171\u4eab\u7684\u6bb5\u7531 GDT \u6765\u6620\u5c04\u3002","title":"3.3.1 \u4efb\u52a1\u95f4\u4fdd\u62a4"},{"location":"os/3_80x86_protect_mode/#332","text":"\u4fdd\u62a4\u673a\u5236\u5bf9\u4efb\u52a1\u8fdb\u884c\u64cd\u4f5c\uff0c\u4ee5\u4fdd\u62a4\u64cd\u4f5c\u7cfb\u7edf\u5185\u5b58\u6bb5\u548c\u5904\u7406\u5668\u7279\u6b8a\u7cfb\u7edf\u5bc4\u5b58\u5668\u4e0d\u88ab\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u3002 \u2003\u5728\u4e00\u4e2a\u4efb\u52a1\u4e2d\uff0c\u5b9a\u4e49\u4e86 4 \u4e2a\u6267\u884c\u7279\u6743\u7ea7\uff08Privilege Levels\uff09\uff0c\u7528\u4e8e\u4f9d\u636e\u6bb5\u4e2d\u542b\u6709\u6570\u636e\u7684\u654f\u611f\u5ea6\u4ee5\u53ca\u4efb\u52a1\u4e2d\u4e0d\u540c\u7a0b\u5e8f\u90e8\u5206\u7684\u53d7\u4fe1\u7a0b\u5ea6\uff0c\u6765\u9650\u5236\u5bf9\u4efb\u52a1\u4e2d\u5404\u6bb5\u7684\u8bbf\u95ee\u3002\u6700\u654f\u611f\u7684\u6570\u636e\u88ab\u8d4b\u4e88\u4e86\u6700\u9ad8\u7279\u6743\u7ea7\uff0c\u5b83\u4eec\u53ea\u80fd\u88ab\u4efb\u52a1\u4e2d\u6700\u53d7\u4fe1\u4efb\u7684\u90e8\u5206\u8bbf\u95ee\u3002\u4e0d\u592a\u654f\u611f\u7684\u6570\u636e\u88ab\u8d4b\u4e88\u8f83\u4f4e\u7684\u7279\u6743\u7ea7\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u4efb\u52a1\u4e2d\u8f83\u4f4e\u7279\u6743\u7ea7\u7684\u4ee3\u7801\u8bbf\u95ee\u3002 \u7279\u6743\u7ea7\u7528\u6570\u5b57 0 \u5230 3 \u8868\u793a\uff0c0 \u5177\u6709\u6700\u9ad8\u7279\u6743\u7ea7\uff0c3\u662f\u6700\u4f4e\u7279\u6743\u7ea7\u3002","title":"3.3.2 \u7279\u6743\u7ea7\u4fdd\u62a4"},{"location":"os/3_80x86_protect_mode/#4","text":"","title":"4. \u5206\u6bb5\u673a\u5236"},{"location":"os/3_80x86_protect_mode/#41","text":"TI=0 \u8868\u793a\u63cf\u8ff0\u7b26\u5728 GDT \u4e2d\uff1bTI=1 \u8868\u793a\u63cf\u8ff0\u7b26\u5728 LDT \u4e2d\u3002\u7d22\u5f15\u5b57\u6bb5\u7ed9\u51fa\u4e86\u63cf\u8ff0\u7b26\u5728 GDT \u6216 LDT \u8868\u4e2d\u7684\u7d22\u5f15\u9879\u53f7\u3002 RPL (Request Privilege Level)\uff0c\u8bf7\u6c42\u7279\u6743\u7ea7\u3002","title":"4.1 \u6bb5\u9009\u62e9\u7b26"},{"location":"os/3_80x86_protect_mode/#42","text":"\u9897\u7c92\u5ea6G \uff1aG=0\uff0c\u6bb5\u9650\u957f\u5355\u4f4d\u662f1B\uff0cG=1\u5355\u4f4d\u662f4KB. \u6bb5\u7c7b\u578bTYPE : S=1\uff0c\u4ee3\u7801\u6216\u6570\u636e S=0\uff0c\u7cfb\u7edf \u63cf\u8ff0\u7b26\u7b2c10\u4f4dC\u4ee3\u8868\u4e00\u81f4\u6027\u6807\u5fd7: C=1\uff0c\u4e00\u81f4\u6027\u6bb5\uff1a\u64cd\u4f5c\u7cfb\u7edf\u62ff\u51fa\u6765\u88ab\u5171\u4eab\u7684\u4ee3\u7801\u6bb5,\u53ef\u4ee5\u88ab\u4f4e\u7279\u6743\u7ea7\u7684\u7528\u6237\u76f4\u63a5\u8c03\u7528\u8bbf\u95ee\u7684\u4ee3\u7801.\u8981\u6c42CPL >= DPL\u3002\u6545\u7279\u6743\u7ea7\u9ad8\u7684\u7a0b\u5e8f\u4e0d\u80fd\u8bbf\u95ee\u7279\u6743\u7ea7\u4f4e\u7684\u7a0b\u5e8f\u3002\u5f53CPL<DPL\u65f6\uff0c\u4f1a\u4ea7\u751f\u4e00\u822c\u4fdd\u62a4\u5f02\u5e38\u3002 C=0\uff0c\u975e\u4e00\u81f4\u6027\u6bb5\uff1a\u4e3a\u4e86\u907f\u514d\u4f4e\u7279\u6743\u7ea7\u7684\u8bbf\u95ee\u800c\u88ab\u64cd\u4f5c\u7cfb\u7edf\u4fdd\u62a4\u8d77\u6765\u7684\u7cfb\u7edf\u4ee3\u7801\uff08DPL=0\uff09\uff0c\u53ea\u5141\u8bb8\u540c\u7ea7\u8bbf\u95ee\uff0c\u5373CPL=DPL\uff0c\u4e14RPL<=CPL\u3002","title":"4.2 \u6bb5\u63cf\u8ff0\u7b26"},{"location":"os/3_80x86_protect_mode/#43","text":"\u5f53\u524d\u7279\u6743\u7ea7CPL \uff08Current Privilege Level\uff09: CPL \u662f\u5f53\u524d\u6b63\u5728\u6267\u884c\u7a0b\u5e8f\u6216\u4efb\u52a1\u7684\u7279\u6743\u7ea7\u3002\u5b83 \u5b58\u653e\u5728CS \u548c SS \u6bb5\u5bc4\u5b58\u5668\u7684\u4f4d 0 \u548c\u4f4d 1 \u4e2d \u3002\u901a\u5e38\uff0cCPL \u7b49\u4e8e\u5f53\u524d\u4ee3\u7801\u6bb5\u7684\u7279\u6743\u7ea7\u3002\u5f53\u7a0b\u5e8f\u628a\u63a7\u5236\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5177\u6709\u4e0d\u540c\u7279\u6743\u7ea7\u7684\u4ee3\u7801\u6bb5\u4e2d\u65f6\uff0c\u5904\u7406\u5668\u5c31\u4f1a\u6539\u53d8 CPL\u3002\u5f53\u8bbf\u95ee\u4e00\u4e2a\u4e00\u81f4\u6027\uff08conforming\uff09\u4ee3\u7801\u6bb5\u65f6\uff0c\u5219\u5904\u7406\u5668\u5bf9 CPL \u7684\u8bbe\u7f6e\u6709\u4e9b\u4e0d\u540c\u3002\u7279\u6743\u7ea7\u503c\u9ad8\u4e8e\uff08\u5373\u4f4e\u7279\u6743\u7ea7\uff09\u6216\u7b49\u4e8e\u4e00\u81f4\u4ee3\u7801\u6bb5DPL \u7684\u4efb\u4f55\u6bb5\u90fd\u53ef\u4ee5\u8bbf\u95ee\u4e00\u81f4\u4ee3\u7801\u6bb5\u3002\u5e76\u4e14\u5f53\u5904\u7406\u5668\u8bbf\u95ee\u4e00\u4e2a\u7279\u6743\u7ea7\u4e0d\u540c\u4e8e CPL \u7684\u4e00\u81f4\u4ee3\u7801\u6bb5\u65f6\uff0cCPL \u5e76\u4e0d\u4f1a\u88ab\u4fee\u6539\u6210\u4e00\u81f4\u4ee3\u7801\u6bb5\u7684 DPL\u3002 \u63cf\u8ff0\u7b26\u7279\u6743\u7ea7DPL \uff08Descriptor Privilege Level\uff09: DPL \u662f\u4e00\u4e2a\u6bb5\u6216\u95e8\u7684\u7279\u6743\u7ea7\u3002\u5b83 \u5b58\u653e\u5728\u6bb5\u6216\u95e8\u63cf \u8ff0\u7b26\u7684 DPL \u5b57\u6bb5\u4e2d \u3002\u5728\u5f53\u524d\u6267\u884c\u4ee3\u7801\u6bb5\u8bd5\u56fe\u8bbf\u95ee\u4e00\u4e2a\u6bb5\u6216\u95e8\u65f6\uff0c\u6bb5\u6216\u95e8\u7684 DPL \u4f1a\u7528\u6765\u4e0e CPL \u4ee5\u53ca\u6bb5\u6216\u95e8\u9009\u62e9\u7b26\u4e2d\u7684 RPL\uff08\u89c1\u4e0b\u9762\u8bf4\u660e\uff09\u4f5c\u6bd4\u8f83\u3002 \u8bf7\u6c42\u7279\u6743\u7ea7RPL \uff08Request Privilege Level\uff09\uff1aRPL \u662f\u4e00\u79cd\u8d4b\u4e88\u6bb5\u9009\u62e9\u7b26\u7684\u8d85\u8d8a\u7279\u6743\u7ea7\uff0c\u5b83 \u5b58\u653e\u5728\u6bb5\u9009\u62e9\u7b26\u7684\u4f4d 0 \u548c\u4f4d 1 \u4e2d \u3002\u5904\u7406\u5668\u4f1a\u540c\u65f6\u68c0\u67e5 RPL \u548c CPL\uff0c\u4ee5\u786e\u5b9a\u662f\u5426\u5141\u8bb8\u8bbf\u95ee\u4e00\u4e2a\u6bb5\u3002\u5373\u4f7f\u7a0b\u5e8f\u6216\u4efb\u52a1\u5177\u6709\u8db3\u591f\u7684\u7279\u6743\u7ea7\uff08CPL\uff09\u6765\u8bbf\u95ee\u4e00\u4e2a\u6bb5\uff0c\u4f46\u662f\u5982\u679c\u63d0\u4f9b\u7684 RPL \u7279\u6743\u7ea7\u4e0d\u8db3\u7684\u8bdd\u8bbf\u95ee\u4e5f\u5c06\u88ab\u62d2\u7edd\u3002RPL \u53ef\u7528\u6765\u786e\u4fdd\u9ad8\u7279\u6743\u7ea7\u7684\u4ee3\u7801\u4e0d\u4f1a\u4ee3\u8868\u5e94\u7528\u7a0b\u5e8f\u53bb\u8bbf\u95ee\u4e00\u4e2a\u6bb5\uff0c\u9664\u975e\u5e94\u7528\u7a0b\u5e8f\u81ea\u5df1\u5177\u6709\u8bbf\u95ee\u8fd9\u4e2a\u6bb5\u7684\u6743\u9650\u3002 \u5f53\u4ee3\u7801\u8bd5\u56fe\u8bbf\u95ee\u4e00\u4e2a\u6bb5\u6216\u95e8\uff08\u8c03\u7528\u95e8\uff09\u65f6\uff0c\u8981\u6c42 DPL >= max{CPL, RPL}\u3002","title":"4.3 \u7279\u6743\u7ea7"},{"location":"os/3_80x86_protect_mode/#5","text":"80X86 \u4f7f\u7528 4K\uff082^12\uff09\u5b57\u8282\u56fa\u5b9a\u5927\u5c0f\u7684\u9875\u9762\u3002\u6bcf\u4e2a\u9875\u9762\u5747\u662f 4KB\uff0c\u5e76\u4e14\u5bf9\u9f50\u4e8e 4K \u5730\u5740\u8fb9\u754c\u5904\u3002\u8fd9\u8868 \u793a\u5206\u9875\u673a\u5236\u628a 2^32\u5b57\u8282\uff084GB\uff09\u7684\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u5212\u5206\u6210 2^20\uff081M = 1048576\uff09\u4e2a\u9875\u9762\u3002\u5206\u9875\u673a\u5236\u901a\u8fc7\u628a\u7ebf\u6027 \u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u9875\u9762\u91cd\u65b0\u5b9a\u4f4d\u5230\u7269\u7406\u5730\u5740\u7a7a\u95f4\u4e2d\u8fdb\u884c\u64cd\u4f5c\u3002\u7531\u4e8e 4K \u5927\u5c0f\u7684\u9875\u9762\u4f5c\u4e3a\u4e00\u4e2a\u5355\u5143\u8fdb\u884c\u6620\u5c04\uff0c\u5e76 \u4e14\u5bf9\u9f50\u4e8e 4K \u8fb9\u754c\uff0c\u56e0\u6b64 \u7ebf\u6027\u5730\u5740\u7684\u4f4e 12 \u6bd4\u7279\u4f4d\u53ef\u4f5c\u4e3a\u9875\u5185\u504f\u79fb\u91cf\u76f4\u63a5\u4f5c\u4e3a\u7269\u7406\u5730\u5740\u7684\u4f4e 12 \u4f4d\u3002\u5206\u9875\u673a\u5236\u6267\u884c\u7684\u91cd\u5b9a\u4f4d\u529f\u80fd\u53ef\u4ee5\u770b\u4f5c\u662f\u628a\u7ebf\u6027\u5730\u5740\u7684\u9ad8 20 \u4f4d\u8f6c\u6362\u5230\u5bf9\u5e94\u7269\u7406\u5730\u5740\u7684\u9ad8 20 \u4f4d\u3002","title":"5. \u5206\u9875\u673a\u5236"},{"location":"os/3_80x86_protect_mode/#51","text":"\u9875\u8868\u542b\u6709 2^20\uff081M\uff09\u4e2a\u8868\u9879\uff0c\u800c\u6bcf\u9879\u5360\u7528 4 \u5b57\u8282\u3002\u5982\u679c\u4f5c\u4e3a\u4e00\u4e2a\u8868\u6765\u5b58\u653e\u7684\u8bdd\uff0c\u5b83\u4eec\u6700\u591a\u5c06\u5360\u7528 \u8fde\u7eed4MB \u7684\u5185\u5b58(\u903b\u8f91\u5730\u5740\u4e2d\u63d0\u4f9b\u7684\u9875\u8868\u7684\u7d22\u5f15\u503c\uff0c\u53ea\u6709\u662f\u8fde\u7eed\u5185\u5b58\uff0c\u4e14\u6bcf\u4e2a\u8868\u9879\u5927\u5c0f\u56fa\u5b9a\uff0c\u624d\u53ef\u4ee5\u6839\u636e\u9996\u5730\u5740\u548c\u7d22\u5f15\u8ba1\u7b97\u4efb\u610f\u8868\u9879\u7684\u5730\u5740)\u3002\u56e0\u6b64\u4e3a\u4e86\u51cf\u5c11\u8fde\u7eed\u5185\u5b58\u5360\u7528\u91cf\uff0c80X86 \u4f7f\u7528\u4e86\u4e24\u7ea7\u8868\u3002 \u2003\u7b2c\u4e00\u7ea7\u8868\u79f0\u4e3a\u9875\u76ee\u5f55\uff0c\u7ebf\u6027\u5730\u5740\u7684\u6700\u9ad8 10 \u4f4d\uff08\u4f4d 31--22\uff09\u7528\u4f5c\u4e00\u7ea7\u8868\uff08\u9875\u76ee\u5f55\uff09\u4e2d\u7684\u7d22\u5f15\u503c\uff0c\u6765\u9009\u62e92 ^10\u4e2a\u4e8c\u7ea7\u8868\u4e4b\u4e00\u3002 \u56e0\u6b64\u4e00\u4e2a\u9875\u76ee\u5f55\u9879\u6240\u80fd\u5bfb\u627e\u7684\u5730\u5740\u7a7a\u95f4\u5927\u5c0f\u4e3a4MB\uff08=2^10\u9875 * 4KB\uff09. \u2003\u7b2c\u4e8c\u7ea7\u8868\u79f0\u4e3a\u9875\u8868(page table)\uff0c\u4e8c\u7ea7\u9875\u8868\u4f7f\u7528\u7ebf\u6027\u5730\u5740\u4e2d\u95f4 10 \u4f4d\uff08\u4f4d 21--12\uff09\u4f5c\u4e3a\u8868\u9879\u7d22\u5f15\u503c\uff0c\u4ee5\u83b7\u53d6\u542b\u6709\u9875\u9762 20 \u4f4d\u7269\u7406\u57fa\u5730\u5740\u7684\u8868\u9879\u3002 \u2003\u4e00\u4e2a\u9875\u9762\u5927\u5c0f\u4e3a4KB\uff0c\u6b63\u597d\u53ef\u4ee5\u88c5\u4e0b\u9875\u76ee\u5f55(2^10 4B=4KB)\uff0c\u800c\u4e00\u4e2a\u4e8c\u7ea7\u9875\u8868\u5305\u542b2^10\u4e2a\u9875\u8868\u9879\uff0c\u603b\u7684\u5927\u5c0f\u4e5f\u4e3a4KB\uff0c\u4e5f\u53ef\u4ee5\u653e\u5728\u4e00\u4e2a\u9875\u9762\u4e2d\u3002\u8fd9\u6837\u4ec5\u9700\u4e24\u4e2a\u9875\u9762(8KB)\u5927\u5c0f\u5373\u53ef\u5bfb\u5740 \u2003\u901a\u8fc7\u4e8c\u7ea7\u8868\u7ed3\u6784\u4e8b\u5b9e\u4e0a\u5e76\u6ca1\u6709\u89e3\u51b3\u9700\u8981\u4f7f\u75284MB\u5185\u5b58\u6765\u5b58\u653e\u9875\u8868\u7684\u95ee\u9898\uff0c\u4f46\u662f\u5176 \u5141\u8bb8\u9875\u8868\u88ab\u5206\u6563\u5728\u5185\u5b58\u4e2d\u5404\u4e2a\u9875\u9762\u4e2d\uff0c\u800c\u975e\u4fdd\u5b58\u5728\u8fde\u7eed\u76844MB\u5185\u5b58\u5757\u4e2d\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u4e3a\u4e0d\u5b58\u5728\u7684\u6216\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u672a\u4f7f\u7528\u7684\u90e8\u5206\u5206\u914d\u4e8c\u7ea7\u9875\u8868 *\u3002\u867d\u7136\u76ee\u5f55\u8868\u9875\u9762\u5fc5\u987b\u603b\u662f\u5b58\u5728\u4e8e\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u4f46\u662f\u4e8c\u7ea7\u9875\u8868\u53ef\u4ee5\u5728\u9700\u8981\u65f6\u518d\u5206\u914d\u3002\u8fd9\u4f7f\u5f97\u9875\u8868\u7ed3\u6784\u7684\u5927\u5c0f\u5bf9\u5e94\u4e8e\u5b9e\u9645\u4f7f\u7528\u7684\u7ebf\u6027\u5730\u5740\u7a7a\u95f4\u5927\u5c0f\u3002 \u2003\u9875\u76ee\u5f55\u8868\u548c\u9875\u8868\u90fd\u5305\u542b\u4e00\u4e2a\u5b58\u5728\u5c5e\u6027P\uff0c\u524d\u8005\u6307\u660e\u5bf9\u5e94\u7684\u4e8c\u7ea7\u9875\u8868\u662f\u5426\u5b58\u5728\uff0c\u540e\u8005\u6307\u660e\u9875\u9762\u662f\u5426\u5b58\u5728\uff1b\u9875\u76ee\u5f55/\u9875\u8868\u4e2d\u6bcf\u4e2a\u8868\u9879\u5927\u5c0f\u4e3a 32 \u4f4d\uff0c\u53ea\u9700\u8981\u5176\u4e2d\u7684 20 \u4f4d\u6765\u5b58\u653e \u9875\u8868\u7684\u7d22\u5f15/\u9875\u9762\u7684\u7269\u7406\u57fa\u5730\u5740\uff0c\u5269\u4e0b\u7684 12\u4f4d\u53ef\u7528\u4e8e\u5b58\u653e\u4e00\u4e9b\u5c5e\u6027\u4fe1\u606f\u3002\u5982\u679c\u7a0b\u5e8f\u8bbf\u95ee\u7269\u7406\u5185\u5b58\u4e2d\u4e0d\u5b58\u5728\u7684\u9875\u9762\uff0c\u5904\u7406\u5668\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u7f3a\u9875\u5f02\u5e38\u3002\u6b64\u65f6\u64cd\u4f5c\u7cfb\u7edf\u5c31\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u5f02\u5e38\u5904\u7406\u8fc7\u7a0b\u628a\u7f3a\u5c11\u7684\u9875\u9762\u4ece\u78c1\u76d8\u4e0a\u8c03\u5165\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u5e76\u628a\u76f8\u5e94\u7269\u7406\u5730\u5740\u5b58\u653e\u5728\u8868\u9879\u4e2d\u3002","title":"5.1 \u4e24\u7ea7\u9875\u8868\u7ed3\u6784"},{"location":"os/3_80x86_protect_mode/#6","text":"","title":"6 \u4fdd\u62a4"},{"location":"os/3_80x86_protect_mode/#61","text":"\u7a0b\u5e8f\u63a7\u5236\u8f6c\u79fb\u6307\u4ee4 \u2003\u7a0b\u5e8f\u7684\u63a7\u5236\u8f6c\u79fb\u4f7f\u7528\u6307\u4ee4 JMP\u3001RET\u3001INT \u548c IRET \u4ee5\u53ca\u5f02\u5e38\u548c\u4e2d\u65ad\u673a\u5236\u6765\u5b9e\u73b0\u3002JMP \u6216 CALL \u6307\u4ee4\u53ef\u4ee5\u5229\u7528\u4ee5\u4e0b\u56db\u79cd\u65b9\u6cd5\u4e4b\u4e00\u6765\u5f15\u7528\u53e6\u5916\u4e00\u4e2a\u4ee3\u7801\u6bb5\uff1a \u76ee\u6807\u64cd\u4f5c\u6570\u542b\u6709\u76ee\u6807\u4ee3\u7801\u6bb5\u7684\u6bb5\u9009\u62e9\u7b26\uff1b \u76ee\u6807\u64cd\u4f5c\u6570\u6307\u5411\u4e00\u4e2a\u8c03\u7528\u95e8\u63cf\u8ff0\u7b26\uff0c\u800c\u8be5\u63cf\u8ff0\u7b26\u4e2d\u542b\u6709\u76ee\u6807\u4ee3\u7801\u6bb5\u7684\u9009\u62e9\u7b26\uff1b \u76ee\u6807\u64cd\u4f5c\u6570\u6307\u5411\u4e00\u4e2a TSS\uff0c\u800c\u8be5 TSS \u4e2d\u542b\u6709\u76ee\u6807\u4ee3\u7801\u6bb5\u7684\u9009\u62e9\u7b26\uff1b \u76ee\u6807\u64cd\u4f5c\u6570\u6307\u5411\u4e00\u4e2a\u4efb\u52a1\u95e8\uff0c\u8be5\u4efb\u52a1\u95e8\u6307\u5411\u4e00\u4e2a TSS\uff0c\u800c\u8be5 TSS \u4e2d\u542b\u6709\u76ee\u6807\u4ee3\u7801\u6bb5\u7684\u9009\u62e9\u7b26\uff1b \u95e8\u63cf\u8ff0\u7b26 \u8c03\u7528\u95e8 \uff08Call Gate\uff09\u7c7b\u578b TYPE=12 \u2003\u8c03\u7528\u95e8\u7528\u4e8e\u5728\u4e0d\u540c\u7279\u6743\u7ea7\u4e4b\u95f4\u5b9e\u73b0\u53d7\u63a7\u7684\u7a0b\u5e8f\u63a7\u5236\u8f6c\u79fb\u3002\u5b83\u4eec\u901a\u5e38\u4ec5\u7528\u4e8e\u4f7f\u7528\u7279\u6743\u7ea7\u4fdd\u62a4\u673a\u5236\u7684\u64cd\u4f5c; \u7cfb\u7edf\u4e2d\u8c03\u7528\u95e8\u63cf\u8ff0\u7b26\u4e00\u822c\u5b58\u653e\u5728GDT\u6216LDT\u4e2d\uff0c\u4e0d\u80fd\u5b58\u653e\u5728IDT\u4e2d\u3002 \u2003\u4e3a\u4e86\u8bbf\u95ee\u8c03\u7528\u95e8\uff0c\u6211\u4eec\u9700\u8981\u4e3a CALL \u6216 JMP \u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u63d0\u4f9b\u4e00\u4e2a\u8fdc\u6307\u9488\u3002\u8be5\u6307\u9488\u4e2d\u7684\u6bb5\u9009\u62e9\u7b26\u7528\u4e8e\u6307\u5b9a\u8c03\u7528\u95e8\uff0c\u800c\u6307\u9488\u7684\u504f\u79fb\u503c\u867d\u7136\u9700\u8981\u4f46 CPU \u5e76\u4e0d\u4f1a\u7528\u5b83\u3002\u8be5\u504f\u79fb\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4efb\u610f\u503c\u3002 P=1\u4ee3\u8868\u6bb5\u5b58\u5728 \u9677\u9631\u95e8 \uff08Trap Gate\uff09\u7c7b\u578b TYPE=15, \u5b58\u50a8\u5728IDT\u4e2d\u3002 \u4e2d\u65ad\u95e8 \uff08Interrupt Gate\uff09\uff0c\u7c7b\u578b TYPE=14, \u5b58\u50a8\u5728IDT\u4e2d\u3002 \u4efb\u52a1\u95e8 \uff08Task Gate\uff09\uff0c\u7c7b\u578b TYPE=5, \u53ef\u5b58\u50a8\u5728GDT\\LDT\\IDT\u4e2d\u3002 \u2003\u4e2d\u65ad\u95e8\u4e0e\u9677\u9631\u95e8\u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\u5904\u7406\u5668\u64cd\u4f5c EFLAGS \u5bc4\u5b58\u5668 IF \u6807\u5fd7\u7684\u65b9\u6cd5\u3002\u5f53\u901a\u8fc7\u4e2d\u65ad\u95e8\u8bbf\u95ee\u4e00\u4e2a \u5f02\u5e38\u6216\u4e2d\u65ad\u5904\u7406\u8fc7\u7a0b\u65f6\uff0c\u5904\u7406\u5668\u4f1a\u590d\u4f4d IF \u6807\u5fd7\u4ee5\u9632\u6b62\u5176\u4ed6\u4e2d\u65ad\u5e72\u6270\u5f53\u524d\u4e2d\u65ad\u5904\u7406\u8fc7\u7a0b\u3002\u968f\u540e\u7684 IRET \u6307\u4ee4 \u5219\u4f1a\u7528\u4fdd\u5b58\u5728\u5806\u6808\u4e0a\u7684\u5185\u5bb9\u6062\u590d EFLAGS \u5bc4\u5b58\u5668\u7684 IF \u6807\u5fd7\u3002\u800c\u901a\u8fc7\u9677\u9631\u95e8\u8bbf\u95ee\u5904\u7406\u8fc7\u7a0b\u5e76\u4e0d\u4f1a\u5f71\u54cd IF \u6807 \u5fd7\u3002 \u5806\u6808\u5207\u6362(\u7528\u6237\u6808\u5207\u6362) \u2003\u6bcf\u5f53\u8c03\u7528\u95e8\u7528\u4e8e\u628a\u7a0b\u5e8f\u63a7\u5236\u8f6c\u79fb\u5230\u4e00\u4e2a\u66f4\u9ad8\u7ea7\u522b\u7684\u975e\u4e00\u81f4\u6027\u4ee3\u7801\u6bb5\u65f6\uff0cCPU \u4f1a\u81ea\u52a8\u5207\u6362\u5230\u76ee\u7684\u4ee3\u7801\u6bb5 \u7279\u6743\u7ea7\u7684\u5806\u6808\u53bb\u3002\u6267\u884c\u6808\u5207\u6362\u64cd\u4f5c\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u9632\u6b62\u9ad8\u7279\u6743\u7ea7\u7a0b\u5e8f\u7531\u4e8e\u6808\u7a7a\u95f4\u4e0d\u8db3\u800c\u5f15\u8d77\u5d29\u6e83\uff0c\u540c\u65f6\u4e5f\u4e3a \u4e86\u9632\u6b62\u4f4e\u7279\u6743\u7ea7\u7a0b\u5e8f\u901a\u8fc7\u5171\u4eab\u7684\u5806\u6808\u6709\u610f\u6216\u65e0\u610f\u5730\u5e72\u6270\u9ad8\u7279\u6743\u7ea7\u7684\u7a0b\u5e8f\u3002 \u4efb\u52a1\u5207\u6362 TSS\\TR\u5bc4\u5b58\u5668\\TSS\u63cf\u8ff0\u7b26(\u4efb\u52a1\u95e8\u63cf\u8ff0\u7b26) : TSS(Task State Segment)\u662f\u4e00\u5757\u5927\u5c0f\u4e3a104\u5b57\u8282\u7684\u5185\u5b58\uff0c\u5b58\u50a8\u4e86\u5927\u90e8\u5206\u5bc4\u5b58\u5668\u7684\u503c TR\u5bc4\u5b58\u5668\u5b58\u50a8\u4e86TSS\u7684\u5730\u5740\uff0c\u5927\u5c0f\uff0c\u548cTSS\u9009\u62e9\u7b26(\u7528\u4ee5\u4eceGDT\u4e2d\u5b9a\u4f4dTSS\u63cf\u8ff0\u7b26) TSS\u63cf\u8ff0\u7b26\u662fGDT\u8868\u4e2d\u7684\u4e00\u9879\uff0c\u64cd\u4f5c\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c\u4eceTSS\u63cf\u8ff0\u7b26\u4e2d\u53d6\u503c\u521d\u59cb\u5316TR\u5bc4\u5b58\u5668 \u2003\u5904\u7406\u5668\u53ef\u4f7f\u7528\u4e00\u4e0b 4 \u79cd\u65b9\u5f0f\u4e4b\u4e00\u6267\u884c\u4efb\u52a1\u5207\u6362\u64cd\u4f5c: \u5f53\u524d\u4efb\u52a1\u5bf9 GDT \u4e2d\u7684 TSS \u63cf\u8ff0\u7b26\u6267\u884c JMP \u6216 CALL \u6307\u4ee4 \u5f53\u524d\u4efb\u52a1\u5bf9 GDT \u6216 LDT \u4e2d\u7684\u4efb\u52a1\u95e8\u63cf\u8ff0\u7b26\u6267\u884c JMP \u6216 CALL \u6307\u4ee4 \u4e2d\u65ad\u6216\u5f02\u5e38\u5411\u91cf\u6307\u5411 IDT \u8868\u4e2d\u7684\u4efb\u52a1\u95e8\u63cf\u8ff0\u7b26 \u5f53 EFLAGS \u4e2d\u7684 NT \u6807\u5fd7\u7f6e\u4f4d\u65f6\u5f53\u524d\u4efb\u52a1\u6267\u884c IRET \u6307\u4ee4\u3002","title":"6.1 \u4ee3\u7801\u6bb5\u4e4b\u95f4\u8f6c\u79fb\u63a7\u5236\u65f6\u7684\u7279\u6743\u7ea7\u68c0\u67e5"},{"location":"os/3_80x86_protect_mode/#64","text":"\u4e3a\u4e86\u6709\u52a9\u4e8e\u5904\u7406\u5f02\u5e38\u548c\u4e2d\u65ad\uff0c\u6bcf\u4e2a\u9700\u8981\u88ab\u5904\u7406\u5668\u8fdb\u884c\u7279\u6b8a\u5904\u7406\u7684\u5904\u7406\u5668\u5b9a\u4e49\u7684\u5f02\u5e38\u548c\u4e2d\u65ad\u6761\u4ef6\u90fd\u88ab\u8d4b\u4e88\u4e86\u4e00\u4e2a\u6807\u8bc6\u53f7\uff0c\u79f0\u4e3a\u5411\u91cf\uff08vector\uff09\u3002\u5904\u7406\u5668\u628a\u8d4b\u4e88\u5f02\u5e38\u6216\u4e2d\u65ad\u7684\u5411\u91cf\u7528\u4f5c\u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868 IDT\uff08Interrupt Descriptor Table\uff09\u4e2d\u7684\u4e00\u4e2a\u7d22\u5f15\u53f7\uff0c\u6765\u5b9a\u4f4d\u4e00\u4e2a\u5f02\u5e38\u6216\u4e2d\u65ad\u7684\u5904\u7406\u7a0b\u5e8f\u5165\u53e3\u70b9\u4f4d\u7f6e\u3002 \u4e2d\u65ad\u6e90 \uff1a\u5916\u90e8\u786c\u4ef6\u4e2d\u65ad\u548c\u8f6f\u4ef6\u4ea7\u751f\u7684\u4e2d\u65ad \u5f02\u5e38\u6e90 \uff1a\u8f6f\u4ef6\u68c0\u6d4b\u5230\u7684\u7a0b\u5e8f\u9519\u8bef\u5f02\u5e38\u548c\u8f6f\u4ef6\u4ea7\u751f\u7684\u5f02\u5e38 \u2003\u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868 IDT\uff08Interrupt Descriptor Table\uff09\u5c06\u6bcf\u4e2a\u5f02\u5e38\u6216\u4e2d\u65ad\u5411\u91cf\u5206\u522b\u4e0e\u5b83\u4eec\u7684\u5904\u7406\u8fc7\u7a0b\u8054\u7cfb\u8d77\u6765\u3002 \u4e0e GDT \u548c LDT \u8868\u7c7b\u4f3c\uff0cIDT \u4e5f\u662f\u7531 8 \u5b57\u8282\u957f\u63cf\u8ff0\u7b26\u7ec4\u6210\u7684\u4e00\u4e2a\u6570\u7ec4\u3002\u4e0e GDT \u4e0d\u540c\u7684\u662f\uff0c\u8868\u4e2d\u7b2c 1 \u9879\u53ef\u4ee5\u5305\u542b\u63cf\u8ff0\u7b26\u3002","title":"6.4 \u4e2d\u65ad\u548c\u5f02\u5e38\u5411\u91cf"},{"location":"os/3_80x86_protect_mode/#7","text":"","title":"7. \u8865\u5145"},{"location":"os/3_80x86_protect_mode/#71-gdt","text":"GDT\u7684\u7b2c\u4e00\u9879\u89c4\u5b9a\u603b\u662f\u7a7a\u63cf\u8ff0\u7b26\uff1a\u56e0\u4e3a\u5f53LDTR\u5bc4\u5b58\u5668\u4e3a0\u65f6\uff0c\u6307\u5411\u7684\u6b63\u662fGDT\u4e2d\u7b2c\u4e00\u9879\uff0c\u7a7a\u63cf\u8ff0\u7b26\u8868\u660e\u5f53\u524d\u4efb\u52a1\u6ca1\u6709LDT\u3002","title":"7.1 GDT"},{"location":"os/3_80x86_protect_mode/#72-iret-and-ret","text":"IRET \u6307\u4ee4\u4e0e RET \u6307\u4ee4\u7c7b\u4f3c\uff0c\u4f46 IRET \u8fd8\u4f1a\u628a\u4fdd\u5b58\u7684\u5bc4\u5b58\u5668\u5185\u5bb9\u6062\u590d\u5230 EFLAGS \u4e2d\u3002\u4e0d\u8fc7\u53ea\u6709\u5f53 CPL \u662f 0 \u65f6\u624d\u4f1a\u6062\u590d EFLAGS \u4e2d\u7684 IOPL \u5b57\u6bb5\uff0c\u5e76\u4e14\u53ea\u6709\u5f53 CPL<=IOPL \u65f6\uff0cIF \u6807\u5fd7\u624d\u4f1a\u88ab\u6539\u53d8\u3002 \u5982\u679c\u5f53\u8c03\u7528\u4e2d\u65ad\u5904\u7406\u8fc7\u7a0b\u65f6\u53d1\u751f\u4e86\u5806\u6808\u5207\u6362\uff0c\u90a3\u4e48\u5728\u8fd4\u56de\u65f6 IRET \u6307\u4ee4\u4f1a\u5207\u6362\u56de\u5230\u539f\u6765\u7684\u5806\u6808\u3002","title":"7.2 IRET and RET"},{"location":"os/3_80x86_protect_mode/#73-eflags","text":"IOPL \u7279\u6743\u7ea7\u5b57\u6bb5\uff1a\u4e24\u4e2a\u4f4d\u5bbd\uff0c\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u3002\u6307\u5b9a\u4e86\u8981\u6c42\u6267\u884cI/O\u6307\u4ee4\u7684\u7279\u6743\u7ea7\uff0c\u5982\u679cCPL<=IOPL\uff0cI/O\u6307\u4ee4\u53ef\u4ee5\u6267\u884c\uff0c\u5426\u5219\u53d1\u751f\u4e00\u4e2a\u4fdd\u62a4\u5f02\u5e38\u3002 NT \u5d4c\u5957\u4efb\u52a1\u4f4d\uff1a\u63a7\u5236IRET\u6307\u4ee4\u7684\u8fd0\u884c\u3002\u5982\u679cNT=0\uff0c\u7528\u6808\u4e2d\u4fdd\u5b58\u7684\u503c\u6062\u590dEFLAGS\u3001CS\u548cEIP\u6267\u884c\u5e38\u89c4\u7684\u4e2d\u65ad\u8fd4\u56de\u3002 \u5982\u679cNT=1\uff0c\u4e2d\u65ad\u8fd4\u56de\u7528\u4e00\u4efb\u52a1\u8f6c\u6362\u4ee3\u66ff\u4e0a\u8ff0\u8fc7\u7a0b\u3002 \u53ea\u6709\u5728\u7279\u6743\u7ea70\u4e0b\u6267\u884c\u7684\u7a0b\u5e8f\u624d\u80fd\u6539\u53d8VM\u53caIOPL\u5b57\u6bb5\u3002IF\u4f4d\u53ea\u80fd\u7531\u5177\u6709I/O\u7279\u6743\u7684\u7a0b\u5e8f\u6240\u6539\u53d8\u3002","title":"7.3 EFLAGS"},{"location":"os/4_kernel_struct/","text":"Linux\u5185\u6838\u4f53\u7cfb\u7ed3\u6784 \u2003\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7684\u7ed3\u6784\u6a21\u5f0f\u4e3b\u8981\u53ef\u5206\u4e3a\u6574\u4f53\u5f0f\u7684\u5355\u5185\u6838\u6a21\u5f0f\u548c\u5c42\u6b21\u5f0f\u7684\u5fae\u5185\u6838\u6a21\u5f0f\uff0c\u4ee5\u53ca\u8fd9\u4e24 \u8005\u7684\u6df7\u5408\u6a21\u5f0f\u3002 Linux 0.12 \u5185\u6838\u91c7\u7528\u7684\u662f\u5355\u5185\u6838\u6a21\u5f0f\u3002 \u2003\u5728\u5355\u5185\u6838\u6a21\u5f0f\u7684\u7cfb\u7edf\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u6240\u63d0\u4f9b\u670d\u52a1\u7684\u6d41\u7a0b\u4e3a\uff1a\u5e94\u7528\u4e3b\u7a0b\u5e8f\u4f7f\u7528\u6307\u5b9a\u7684\u53c2\u6570\u503c\u6267\u884c\u7cfb\u7edf\u8c03 \u7528\u6307\u4ee4(int x80)\uff0c\u4f7f CPU \u4ece\u7528\u6237\u6001\uff08User Mode\uff09\u5207\u6362\u5230\u6838\u5fc3\u6001\uff08Kernel Model\uff09\uff0c\u7136\u540e\u64cd\u4f5c\u7cfb\u7edf\u6839\u636e\u5177\u4f53 \u7684\u53c2\u6570\u503c\u8c03\u7528\u7279\u5b9a\u7684\u7cfb\u7edf\u8c03\u7528\u670d\u52a1\u7a0b\u5e8f\uff0c\u800c\u8fd9\u4e9b\u670d\u52a1\u7a0b\u5e8f\u5219\u6839\u636e\u9700\u8981\u518d\u8c03\u7528\u5e95\u5c42\u7684\u4e00\u4e9b\u652f\u6301\u51fd\u6570\u4ee5\u5b8c\u6210 \u7279\u5b9a\u7684\u529f\u80fd\u3002\u5728\u5b8c\u6210\u4e86\u5e94\u7528\u7a0b\u5e8f\u6240\u8981\u6c42\u7684\u670d\u52a1\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53c8\u4f7f CPU \u4ece\u6838\u5fc3\u6001\u5207\u6362\u56de\u7528\u6237\u6001\uff0c\u4ece\u800c\u8fd4\u56de \u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7ee7\u7eed\u6267\u884c\u540e\u9762\u7684\u6307\u4ee4\u3002 \u2003\u57282.6\u7248\u672c\u524d, Linux\u7cfb\u7edf\u7684\u8fdb\u7a0b\u5728\u5185\u6838\u6001\u8fd0\u884c\u65f6\u4e0d\u4f1a\u88ab\u8c03\u5ea6\u7a0b\u5e8f\u5207\u6362\u3002\u5373\u8fdb\u7a0b\u5728\u5185\u6838\u6001\u7a0b\u5e8f\u4e2d\u8fd0\u884c\u65f6\u662f\u4e0d\u53ef\u62a2\u5360\u7684 \uff08nonpreemptive\uff09, \u4f46\u5f53\u5904\u4e8e\u7528\u6237\u6001\u7a0b\u5e8f\u4e2d\u8fd0\u884c\u65f6\u5219\u662f\u53ef\u4ee5\u88ab\u62a2\u5360\u7684\uff08preemptive\uff09\u3002 \u2003 Linux \u5185\u6838\u4e3b\u8981\u7531 5 \u4e2a\u6a21\u5757\u6784\u6210\uff0c\u5b83\u4eec\u5206\u522b\u662f\uff1a\u8fdb\u7a0b\u8c03\u5ea6\u6a21\u5757\u3001\u5185\u5b58\u7ba1\u7406\u6a21\u5757\u3001\u6587\u4ef6\u7cfb\u7edf\u6a21\u5757\u3001\u8fdb \u7a0b\u95f4\u901a\u4fe1\u6a21\u5757\u548c\u7f51\u7edc\u63a5\u53e3\u6a21\u5757\u3002 \u7cfb\u7edf\u8c03\u7528 \u2003linux os\u5728setup.s\u4e2d\u4f1a\u5c06\u7528\u6237\u7a0b\u5e8f\u53d1\u51fa\u7684\u8f6f\u4ef6\u4e2d\u65ad\u8bbe\u7f6e\u4e3a INT128\uff080x80\uff09\uff0c\u5e76\u79f0\u4e3a \u7cfb\u7edf\u8c03\u7528 \uff08System Call\uff09\u3002\u7cfb\u7edf\u8c03\u7528\u4e2d\u65ad\u662f\u7528\u6237\u7a0b\u5e8f\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u7684\u552f\u4e00\u754c\u9762\u63a5\u53e3\u3002 \u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b:\u5f53\u5e94\u7528\u7a0b\u5e8f\u7ecf\u8fc7\u5e93\u51fd\u6570\u5411\u5185\u6838\u53d1\u51fa\u4e00\u4e2a\u4e2d\u65ad\u8c03\u7528 int 0x80 \u65f6\uff0c\u5c31\u5f00\u59cb\u6267\u884c\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u3002\u5176\u4e2d\u5bc4\u5b58 \u5668 eax \u4e2d\u5b58\u653e\u7740\u7cfb\u7edf\u8c03\u7528\u53f7\uff0c\u800c\u643a\u5e26\u7684\u53c2\u6570\u53ef \u4f9d\u6b21\u5b58\u653e\u5728\u5bc4\u5b58\u5668 ebx\u3001ecx \u548c edx \u4e2d \u3002\u56e0\u6b64 Linux 0.12 \u5185 \u6838\u4e2d\u7528\u6237\u7a0b\u5e8f\u80fd\u591f\u5411\u5185\u6838\u6700\u591a\u76f4\u63a5\u4f20\u9012\u4e09\u4e2a\u53c2\u6570\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e0d\u5e26\u53c2\u6570\u3002 \u7cfb\u7edf\u542f\u52a8 \u2003PC \u7684\u7535\u6e90\u6253\u5f00\u540e\uff0c80x86 \u7ed3\u6784\u7684CPU \u5c06\u81ea\u52a8\u8fdb\u5165\u5b9e\u6a21\u5f0f\uff0c\u5e76\u4ece\u5730\u57400xFFFF0\u5f00\u59cb\u81ea\u52a8\u6267\u884c\u7a0b\u5e8f\u4ee3\u7801(cs:ip=0xFFFF:0), \u8fd9\u4e2a\u5730\u5740\u901a\u5e38\u662f ROM-BIOS \u4e2d\u7684\u5730\u5740\u3002PC \u673a\u7684 BIOS \u5c06\u6267\u884c\u7cfb\u7edf\u7684\u67d0\u4e9b\u786c\u4ef6\u68c0\u6d4b\u548c\u8bca\u65ad\u529f\u80fd\uff0c\u5e76\u5728\u7269\u7406\u5730\u5740 0 \u5904\u5f00\u59cb\u8bbe\u7f6e\u548c\u521d\u59cb\u5316\u4e2d\u65ad\u5411\u91cf\u3002\u6b64\u540e\uff0c\u5b83\u5c06\u78c1\u76d80\u78c1\u9053\u7b2c\u4e00\u4e2a\u6247\u533a\uff08\u78c1\u76d8\u5f15\u5bfc\u6247\u533a\uff0c512 \u5b57\u8282\uff09\u8bfb\u5165\u5185\u5b58\u7edd\u5bf9\u5730\u5740 0x7C00 \u5904(cs:ip=0x07c0:0)\u3002 \u5f53\u5b83\u88ab\u6267\u884c\u65f6\u5c31\u4f1a\u628a\u81ea\u5df1\u79fb\u52a8\u5230\u5185\u5b58\u7edd\u5bf9\u5730\u5740 0x90000\uff08576KB\uff09\u5904\uff0c\u5e76\u628a\u542f\u52a8\u8bbe\u5907\u76d8\u4e2d\u540e 2KB \u5b57\u8282\u4ee3\u7801\uff08boot/setup.S\uff09\u8bfb\u5165\u5230\u5185\u5b58 0x90200 \u5904\u3002\u800c\u5185\u6838\u7684\u5176\u4ed6\u90e8\u5206\uff08system \u6a21\u5757\uff09\u5219\u88ab\u8bfb\u5165\u5230\u4ece\u5185\u5b58\u5730\u5740 0x10000\uff0864KB\uff09\u5f00\u59cb\u5904, \u540e\u9762 setup \u7a0b\u5e8f\u5c06\u4f1a\u628a system \u6a21\u5757\u79fb\u52a8\u5230\u7269\u7406\u5185\u5b58\u8d77\u59cb\u4f4d\u7f6e\u5904\uff0c\u8fd9\u6837 system \u6a21\u5757\u4e2d\u4ee3\u7801\u7684\u5730\u5740\u4e5f\u5373\u7b49\u4e8e\u5b9e\u9645\u7684\u7269\u7406\u5730\u5740\uff0c\u4fbf\u4e8e\u5bf9\u5185\u6838\u4ee3\u7801\u548c\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\u3002 bootsect.S setup.S: setup \u7a0b\u5e8f\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5229\u7528 ROM BIOS \u7684\u4e2d\u65ad\u7a0b\u5e8f\u83b7\u53d6\u673a\u5668\u7684\u4e00\u4e9b\u57fa\u672c\u53c2\u6570\uff0c\u5e76\u4fdd\u5b58\u5728 0x90000 \u5f00\u59cb\u7684\u5185\u5b58\u5757\u4e2d\uff0c\u4f9b\u540e\u9762\u7a0b\u5e8f\u4f7f\u7528\u3002\u540c\u65f6\u628a system \u6a21\u5757\u5f80\u4e0b\u79fb\u52a8\u5230\u7269\u7406\u5730\u5740 0x00000 \u5f00\u59cb\u5904\uff0c\u8fd9\u6837\uff0csystem \u4e2d\u7684 head.s \u4ee3\u7801\u5c31\u5904\u5728 0x00000 \u5f00\u59cb\u5904\u4e86\u3002\u7136\u540e\u52a0\u8f7d\u63cf\u8ff0\u7b26\u8868\u57fa\u5730\u5740\u5230\u63cf\u8ff0\u7b26\u8868\u5bc4\u5b58\u5668\u4e2d\uff0c\u4e3a\u8fdb\u884c 32 \u4f4d\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u7684\u8fd0\u884c\u4f5c\u597d\u51c6\u5907\u3002\u63a5\u4e0b\u6765\u5bf9\u4e2d\u65ad\u63a7\u5236\u786c\u4ef6\u8fdb\u884c\u91cd\u65b0\u8bbe\u7f6e\uff0c\u6700\u540e\u901a\u8fc7\u8bbe\u7f6e\u673a\u5668\u63a7\u5236\u5bc4\u5b58\u5668CR0 \u5e76\u8df3\u8f6c\u5230 system \u6a21\u5757\u7684 head.s \u4ee3\u7801\u5f00\u59cb\u5904\uff0c\u4f7f CPU \u8fdb\u5165 32 \u4f4d\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u8fd0\u884c\u3002 head.s: head.s \u7a0b\u5e8f\u5728\u88ab\u7f16\u8bd1\u751f\u6210\u76ee\u6807\u6587\u4ef6\u540e\u4f1a\u4e0e\u5185\u6838\u5176\u4ed6\u7a0b\u5e8f\u7684\u76ee\u6807\u6587\u4ef6\u4e00\u8d77\u88ab\u94fe\u63a5\u6210 system \u6a21\u5757\u3002 \u2003\u8fd9\u6bb5\u7a0b\u5e8f\u9996\u5148\u52a0\u8f7d\u5404\u4e2a\u6570\u636e\u6bb5\u5bc4\u5b58\u5668\uff0c\u91cd\u65b0\u8bbe\u7f6e\u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868 IDT\uff0c\u5171 256 \u9879\uff0c\u5e76\u4f7f\u5404\u4e2a\u8868\u9879\u5747\u6307\u5411\u4e00\u4e2a\u53ea\u62a5\u9519\u8bef\u7684\u54d1\u4e2d\u65ad\u5b50\u7a0b \u5e8f ignore_int\u3002\u8fd9\u4e2a\u54d1\u4e2d\u65ad\u5411\u91cf\u6307\u5411\u4e00\u4e2a\u9ed8\u8ba4\u7684\u201cignore_int\u201d\u5904\u7406\u8fc7\u7a0b( \u5982\u679c\u8bbe\u7f6e\u7684 IDT \u5c11\u4e8e 256 \u9879\uff0c\u90a3\u4e48\u5728\u4e00\u4e2a\u8981\u6c42\u7684\u4e2d\u65ad\u6240\u6307\u5b9a\u7684\u63cf\u8ff0\u7b26\u9879\u5927\u4e8e\u8bbe\u7f6e\u7684\u6700\u5927\u63cf\u8ff0\u7b26\u9879\u65f6\uff0cCPU\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e00\u822c\u4fdd\u62a4\u51fa\u9519\uff08\u5f02\u5e38 13\uff09\u3002\u53e6\u5916\uff0c\u5982\u679c\u786c\u4ef6\u51fa\u73b0\u95ee\u9898\u800c\u6ca1\u6709\u628a\u8bbe\u5907\u7684\u5411\u91cf\u653e\u5230\u6570\u636e\u603b\u7ebf\u4e0a\uff0c\u6b64\u65f6 CPU \u901a\u5e38\u4f1a\u4ece\u6570\u636e\u603b\u7ebf\u4e0a\u8bfb\u5165\u5168 1\uff080xff\uff09\u4f5c\u4e3a\u5411\u91cf\uff0c\u56e0\u6b64\u4f1a\u53bb\u8bfb\u53d6 IDT \u8868\u4e2d\u7684\u7b2c 256 \u9879\uff0c\u56e0\u6b64\u4e5f\u4f1a\u9020\u6210\u4e00\u822c\u4fdd\u62a4\u51fa\u9519\u3002 ); \u2003\u68c0\u67e5 A20 \u5730\u5740\u7ebf\u662f\u5426\u5df2\u7ecf\u6253\u5f00\uff0c\u6d4b\u8bd5\u7cfb\u7edf\u662f\u5426\u542b\u6709\u6570\u5b66\u534f\u5904\u7406\u5668\u3002\u7136\u540e\u521d\u59cb\u5316\u5185\u5b58\u9875\u76ee\u5f55\u8868\uff0c\u4e3a\u5185\u5b58\u7684\u5206\u9875\u7ba1\u7406\u4f5c\u597d\u51c6\u5907\u5de5\u4f5c\u3002\u6700\u540e\u8df3\u8f6c\u5230 system \u6a21\u5757\u4e2d\u7684\u521d\u59cb\u5316\u7a0b\u5e8f init/main.c \u4e2d\u7ee7\u7eed\u6267\u884c\u3002","title":"4_\u5185\u6838\u4f53\u7cfb\u7ed3\u6784"},{"location":"os/4_kernel_struct/#linux","text":"\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u7684\u7ed3\u6784\u6a21\u5f0f\u4e3b\u8981\u53ef\u5206\u4e3a\u6574\u4f53\u5f0f\u7684\u5355\u5185\u6838\u6a21\u5f0f\u548c\u5c42\u6b21\u5f0f\u7684\u5fae\u5185\u6838\u6a21\u5f0f\uff0c\u4ee5\u53ca\u8fd9\u4e24 \u8005\u7684\u6df7\u5408\u6a21\u5f0f\u3002 Linux 0.12 \u5185\u6838\u91c7\u7528\u7684\u662f\u5355\u5185\u6838\u6a21\u5f0f\u3002 \u2003\u5728\u5355\u5185\u6838\u6a21\u5f0f\u7684\u7cfb\u7edf\u4e2d\uff0c\u64cd\u4f5c\u7cfb\u7edf\u6240\u63d0\u4f9b\u670d\u52a1\u7684\u6d41\u7a0b\u4e3a\uff1a\u5e94\u7528\u4e3b\u7a0b\u5e8f\u4f7f\u7528\u6307\u5b9a\u7684\u53c2\u6570\u503c\u6267\u884c\u7cfb\u7edf\u8c03 \u7528\u6307\u4ee4(int x80)\uff0c\u4f7f CPU \u4ece\u7528\u6237\u6001\uff08User Mode\uff09\u5207\u6362\u5230\u6838\u5fc3\u6001\uff08Kernel Model\uff09\uff0c\u7136\u540e\u64cd\u4f5c\u7cfb\u7edf\u6839\u636e\u5177\u4f53 \u7684\u53c2\u6570\u503c\u8c03\u7528\u7279\u5b9a\u7684\u7cfb\u7edf\u8c03\u7528\u670d\u52a1\u7a0b\u5e8f\uff0c\u800c\u8fd9\u4e9b\u670d\u52a1\u7a0b\u5e8f\u5219\u6839\u636e\u9700\u8981\u518d\u8c03\u7528\u5e95\u5c42\u7684\u4e00\u4e9b\u652f\u6301\u51fd\u6570\u4ee5\u5b8c\u6210 \u7279\u5b9a\u7684\u529f\u80fd\u3002\u5728\u5b8c\u6210\u4e86\u5e94\u7528\u7a0b\u5e8f\u6240\u8981\u6c42\u7684\u670d\u52a1\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u53c8\u4f7f CPU \u4ece\u6838\u5fc3\u6001\u5207\u6362\u56de\u7528\u6237\u6001\uff0c\u4ece\u800c\u8fd4\u56de \u5230\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7ee7\u7eed\u6267\u884c\u540e\u9762\u7684\u6307\u4ee4\u3002 \u2003\u57282.6\u7248\u672c\u524d, Linux\u7cfb\u7edf\u7684\u8fdb\u7a0b\u5728\u5185\u6838\u6001\u8fd0\u884c\u65f6\u4e0d\u4f1a\u88ab\u8c03\u5ea6\u7a0b\u5e8f\u5207\u6362\u3002\u5373\u8fdb\u7a0b\u5728\u5185\u6838\u6001\u7a0b\u5e8f\u4e2d\u8fd0\u884c\u65f6\u662f\u4e0d\u53ef\u62a2\u5360\u7684 \uff08nonpreemptive\uff09, \u4f46\u5f53\u5904\u4e8e\u7528\u6237\u6001\u7a0b\u5e8f\u4e2d\u8fd0\u884c\u65f6\u5219\u662f\u53ef\u4ee5\u88ab\u62a2\u5360\u7684\uff08preemptive\uff09\u3002 \u2003 Linux \u5185\u6838\u4e3b\u8981\u7531 5 \u4e2a\u6a21\u5757\u6784\u6210\uff0c\u5b83\u4eec\u5206\u522b\u662f\uff1a\u8fdb\u7a0b\u8c03\u5ea6\u6a21\u5757\u3001\u5185\u5b58\u7ba1\u7406\u6a21\u5757\u3001\u6587\u4ef6\u7cfb\u7edf\u6a21\u5757\u3001\u8fdb \u7a0b\u95f4\u901a\u4fe1\u6a21\u5757\u548c\u7f51\u7edc\u63a5\u53e3\u6a21\u5757\u3002","title":"Linux\u5185\u6838\u4f53\u7cfb\u7ed3\u6784"},{"location":"os/4_kernel_struct/#_1","text":"linux os\u5728setup.s\u4e2d\u4f1a\u5c06\u7528\u6237\u7a0b\u5e8f\u53d1\u51fa\u7684\u8f6f\u4ef6\u4e2d\u65ad\u8bbe\u7f6e\u4e3a INT128\uff080x80\uff09\uff0c\u5e76\u79f0\u4e3a \u7cfb\u7edf\u8c03\u7528 \uff08System Call\uff09\u3002\u7cfb\u7edf\u8c03\u7528\u4e2d\u65ad\u662f\u7528\u6237\u7a0b\u5e8f\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u7684\u552f\u4e00\u754c\u9762\u63a5\u53e3\u3002 \u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b:\u5f53\u5e94\u7528\u7a0b\u5e8f\u7ecf\u8fc7\u5e93\u51fd\u6570\u5411\u5185\u6838\u53d1\u51fa\u4e00\u4e2a\u4e2d\u65ad\u8c03\u7528 int 0x80 \u65f6\uff0c\u5c31\u5f00\u59cb\u6267\u884c\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u3002\u5176\u4e2d\u5bc4\u5b58 \u5668 eax \u4e2d\u5b58\u653e\u7740\u7cfb\u7edf\u8c03\u7528\u53f7\uff0c\u800c\u643a\u5e26\u7684\u53c2\u6570\u53ef \u4f9d\u6b21\u5b58\u653e\u5728\u5bc4\u5b58\u5668 ebx\u3001ecx \u548c edx \u4e2d \u3002\u56e0\u6b64 Linux 0.12 \u5185 \u6838\u4e2d\u7528\u6237\u7a0b\u5e8f\u80fd\u591f\u5411\u5185\u6838\u6700\u591a\u76f4\u63a5\u4f20\u9012\u4e09\u4e2a\u53c2\u6570\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u4e0d\u5e26\u53c2\u6570\u3002","title":"\u7cfb\u7edf\u8c03\u7528"},{"location":"os/4_kernel_struct/#_2","text":"PC \u7684\u7535\u6e90\u6253\u5f00\u540e\uff0c80x86 \u7ed3\u6784\u7684CPU \u5c06\u81ea\u52a8\u8fdb\u5165\u5b9e\u6a21\u5f0f\uff0c\u5e76\u4ece\u5730\u57400xFFFF0\u5f00\u59cb\u81ea\u52a8\u6267\u884c\u7a0b\u5e8f\u4ee3\u7801(cs:ip=0xFFFF:0), \u8fd9\u4e2a\u5730\u5740\u901a\u5e38\u662f ROM-BIOS \u4e2d\u7684\u5730\u5740\u3002PC \u673a\u7684 BIOS \u5c06\u6267\u884c\u7cfb\u7edf\u7684\u67d0\u4e9b\u786c\u4ef6\u68c0\u6d4b\u548c\u8bca\u65ad\u529f\u80fd\uff0c\u5e76\u5728\u7269\u7406\u5730\u5740 0 \u5904\u5f00\u59cb\u8bbe\u7f6e\u548c\u521d\u59cb\u5316\u4e2d\u65ad\u5411\u91cf\u3002\u6b64\u540e\uff0c\u5b83\u5c06\u78c1\u76d80\u78c1\u9053\u7b2c\u4e00\u4e2a\u6247\u533a\uff08\u78c1\u76d8\u5f15\u5bfc\u6247\u533a\uff0c512 \u5b57\u8282\uff09\u8bfb\u5165\u5185\u5b58\u7edd\u5bf9\u5730\u5740 0x7C00 \u5904(cs:ip=0x07c0:0)\u3002 \u5f53\u5b83\u88ab\u6267\u884c\u65f6\u5c31\u4f1a\u628a\u81ea\u5df1\u79fb\u52a8\u5230\u5185\u5b58\u7edd\u5bf9\u5730\u5740 0x90000\uff08576KB\uff09\u5904\uff0c\u5e76\u628a\u542f\u52a8\u8bbe\u5907\u76d8\u4e2d\u540e 2KB \u5b57\u8282\u4ee3\u7801\uff08boot/setup.S\uff09\u8bfb\u5165\u5230\u5185\u5b58 0x90200 \u5904\u3002\u800c\u5185\u6838\u7684\u5176\u4ed6\u90e8\u5206\uff08system \u6a21\u5757\uff09\u5219\u88ab\u8bfb\u5165\u5230\u4ece\u5185\u5b58\u5730\u5740 0x10000\uff0864KB\uff09\u5f00\u59cb\u5904, \u540e\u9762 setup \u7a0b\u5e8f\u5c06\u4f1a\u628a system \u6a21\u5757\u79fb\u52a8\u5230\u7269\u7406\u5185\u5b58\u8d77\u59cb\u4f4d\u7f6e\u5904\uff0c\u8fd9\u6837 system \u6a21\u5757\u4e2d\u4ee3\u7801\u7684\u5730\u5740\u4e5f\u5373\u7b49\u4e8e\u5b9e\u9645\u7684\u7269\u7406\u5730\u5740\uff0c\u4fbf\u4e8e\u5bf9\u5185\u6838\u4ee3\u7801\u548c\u6570\u636e\u8fdb\u884c\u64cd\u4f5c\u3002 bootsect.S setup.S: setup \u7a0b\u5e8f\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5229\u7528 ROM BIOS \u7684\u4e2d\u65ad\u7a0b\u5e8f\u83b7\u53d6\u673a\u5668\u7684\u4e00\u4e9b\u57fa\u672c\u53c2\u6570\uff0c\u5e76\u4fdd\u5b58\u5728 0x90000 \u5f00\u59cb\u7684\u5185\u5b58\u5757\u4e2d\uff0c\u4f9b\u540e\u9762\u7a0b\u5e8f\u4f7f\u7528\u3002\u540c\u65f6\u628a system \u6a21\u5757\u5f80\u4e0b\u79fb\u52a8\u5230\u7269\u7406\u5730\u5740 0x00000 \u5f00\u59cb\u5904\uff0c\u8fd9\u6837\uff0csystem \u4e2d\u7684 head.s \u4ee3\u7801\u5c31\u5904\u5728 0x00000 \u5f00\u59cb\u5904\u4e86\u3002\u7136\u540e\u52a0\u8f7d\u63cf\u8ff0\u7b26\u8868\u57fa\u5730\u5740\u5230\u63cf\u8ff0\u7b26\u8868\u5bc4\u5b58\u5668\u4e2d\uff0c\u4e3a\u8fdb\u884c 32 \u4f4d\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u7684\u8fd0\u884c\u4f5c\u597d\u51c6\u5907\u3002\u63a5\u4e0b\u6765\u5bf9\u4e2d\u65ad\u63a7\u5236\u786c\u4ef6\u8fdb\u884c\u91cd\u65b0\u8bbe\u7f6e\uff0c\u6700\u540e\u901a\u8fc7\u8bbe\u7f6e\u673a\u5668\u63a7\u5236\u5bc4\u5b58\u5668CR0 \u5e76\u8df3\u8f6c\u5230 system \u6a21\u5757\u7684 head.s \u4ee3\u7801\u5f00\u59cb\u5904\uff0c\u4f7f CPU \u8fdb\u5165 32 \u4f4d\u4fdd\u62a4\u6a21\u5f0f\u4e0b\u8fd0\u884c\u3002 head.s: head.s \u7a0b\u5e8f\u5728\u88ab\u7f16\u8bd1\u751f\u6210\u76ee\u6807\u6587\u4ef6\u540e\u4f1a\u4e0e\u5185\u6838\u5176\u4ed6\u7a0b\u5e8f\u7684\u76ee\u6807\u6587\u4ef6\u4e00\u8d77\u88ab\u94fe\u63a5\u6210 system \u6a21\u5757\u3002 \u2003\u8fd9\u6bb5\u7a0b\u5e8f\u9996\u5148\u52a0\u8f7d\u5404\u4e2a\u6570\u636e\u6bb5\u5bc4\u5b58\u5668\uff0c\u91cd\u65b0\u8bbe\u7f6e\u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868 IDT\uff0c\u5171 256 \u9879\uff0c\u5e76\u4f7f\u5404\u4e2a\u8868\u9879\u5747\u6307\u5411\u4e00\u4e2a\u53ea\u62a5\u9519\u8bef\u7684\u54d1\u4e2d\u65ad\u5b50\u7a0b \u5e8f ignore_int\u3002\u8fd9\u4e2a\u54d1\u4e2d\u65ad\u5411\u91cf\u6307\u5411\u4e00\u4e2a\u9ed8\u8ba4\u7684\u201cignore_int\u201d\u5904\u7406\u8fc7\u7a0b( \u5982\u679c\u8bbe\u7f6e\u7684 IDT \u5c11\u4e8e 256 \u9879\uff0c\u90a3\u4e48\u5728\u4e00\u4e2a\u8981\u6c42\u7684\u4e2d\u65ad\u6240\u6307\u5b9a\u7684\u63cf\u8ff0\u7b26\u9879\u5927\u4e8e\u8bbe\u7f6e\u7684\u6700\u5927\u63cf\u8ff0\u7b26\u9879\u65f6\uff0cCPU\u5c31\u4f1a\u4ea7\u751f\u4e00\u4e2a\u4e00\u822c\u4fdd\u62a4\u51fa\u9519\uff08\u5f02\u5e38 13\uff09\u3002\u53e6\u5916\uff0c\u5982\u679c\u786c\u4ef6\u51fa\u73b0\u95ee\u9898\u800c\u6ca1\u6709\u628a\u8bbe\u5907\u7684\u5411\u91cf\u653e\u5230\u6570\u636e\u603b\u7ebf\u4e0a\uff0c\u6b64\u65f6 CPU \u901a\u5e38\u4f1a\u4ece\u6570\u636e\u603b\u7ebf\u4e0a\u8bfb\u5165\u5168 1\uff080xff\uff09\u4f5c\u4e3a\u5411\u91cf\uff0c\u56e0\u6b64\u4f1a\u53bb\u8bfb\u53d6 IDT \u8868\u4e2d\u7684\u7b2c 256 \u9879\uff0c\u56e0\u6b64\u4e5f\u4f1a\u9020\u6210\u4e00\u822c\u4fdd\u62a4\u51fa\u9519\u3002 ); \u2003\u68c0\u67e5 A20 \u5730\u5740\u7ebf\u662f\u5426\u5df2\u7ecf\u6253\u5f00\uff0c\u6d4b\u8bd5\u7cfb\u7edf\u662f\u5426\u542b\u6709\u6570\u5b66\u534f\u5904\u7406\u5668\u3002\u7136\u540e\u521d\u59cb\u5316\u5185\u5b58\u9875\u76ee\u5f55\u8868\uff0c\u4e3a\u5185\u5b58\u7684\u5206\u9875\u7ba1\u7406\u4f5c\u597d\u51c6\u5907\u5de5\u4f5c\u3002\u6700\u540e\u8df3\u8f6c\u5230 system \u6a21\u5757\u4e2d\u7684\u521d\u59cb\u5316\u7a0b\u5e8f init/main.c \u4e2d\u7ee7\u7eed\u6267\u884c\u3002","title":"\u7cfb\u7edf\u542f\u52a8"},{"location":"os/5_os/","text":"\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf \u64cd\u4f5c\u7cfb\u7edf \u2003\u7ba1\u7406\u8ba1\u7b97\u673a\u786c\u4ef6\u4e0e\u8f6f\u4ef6\u8d44\u6e90\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\u3002\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u7ba1\u7406\u4e0e\u914d\u7f6e\u5185\u5b58\u3001\u51b3\u5b9a\u7cfb\u7edf\u8d44\u6e90\u4f9b\u9700\u7684\u4f18\u5148\u6b21\u5e8f\u3001\u63a7\u5236\u8f93\u5165\u8bbe\u5907\u4e0e\u8f93\u51fa\u8bbe\u5907\u3001\u64cd\u4f5c\u7f51\u7edc\u4e0e\u7ba1\u7406\u6587\u4ef6\u7cfb\u7edf\u7b49\u57fa\u672c\u4e8b\u52a1\u3002\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u63d0\u4f9b\u4e00\u4e2a\u8ba9\u7528\u6237\u4e0e\u7cfb\u7edf\u4ea4\u4e92\u7684\u64cd\u4f5c\u754c\u9762\u3002 \u7528\u6237\u6001\u548c\u5185\u6838\u6001 \u5927\u591a\u6570\u73b0\u4ee3CPU\u63d0\u4f9b\u4e24\u79cd\u6267\u884c\u6a21\u5f0f\uff0c\u5185\u6838\u6001\u548c\u7528\u6237\u6001\u3002CPU\u53ef\u4ee5\u5728\u5185\u6838\u6001\u6267\u884c\u6307\u4ee4\u96c6\u4e2d\u7684\u6240\u6709\u6307\u4ee4\uff0c\u4ee5\u53ca\u4f7f\u7528\u6240\u6709\u7684\u786c\u4ef6\u8d44\u6e90\uff0c\u7528\u6237\u7a0b\u5e8f\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u6216\u8005\u89e6\u53d1\u67d0\u4e2a\u5f02\u5e38\uff0c\u4f1a\u9677\u5165\u5230\u5185\u6838\u6001\uff1b\u4f46\u5728\u7528\u6237\u6001\u65f6\uff0c\u53ea\u80fd\u6267\u884c\u90e8\u5206\u6307\u4ee4\uff0c\u4f7f\u7528\u90e8\u5206\u786c\u4ef6\u7684\u8d44\u6e90\u3002\u4e24\u79cd\u6267\u884c\u6a21\u5f0f\u4f7f\u5f97\u8bbe\u8ba1\u4eba\u5458\u53ea\u80fd\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\u8fd0\u884c\u7528\u6237\u7a0b\u5e8f\uff0c\u4ece\u800c\u62d2\u7edd\u4ed6\u4eec\u8bbf\u95ee\u5173\u952e\u6307\u4ee4\u3002 \u7cfb\u7edf\u8c03\u7528 \u2003\u7cfb\u7edf\u8c03\u7528\u4e2d\u65ad\u662f\u7528\u6237\u7a0b\u5e8f\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u7684\u552f\u4e00\u754c\u9762\u63a5\u53e3\uff1b\u5bf9\u4e8eintel x86, \u901a\u8fc7\u4e2d\u65ad\u6307\u4ee4int\u8fdb\u5165\u5185\u6838\u3002\u4f8b\u5982linux\u5728boot/setup.s\u4e2d\u4f1a\u5c06\u7528\u6237\u7a0b\u5e8f\u53d1\u51fa\u7684\u8f6f\u4ef6\u4e2d\u65ad\u8bbe\u7f6e\u4e3a int 128\uff080x80\uff09\uff0c\u8fd9\u6761\u6307\u4ee4\u4f1a\u89e6\u53d1\u4e00\u4e2a\u5f02\u5e38\u5bfc\u81f4\u7cfb\u7edf\u5207\u6362\u5230\u5185\u6838\u6001\uff0c\u5e76\u6267\u884c128\u53f7\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\uff0c\u5373\u7cfb\u7edf\u8c03\u7528\u5904\u7406\u7a0b\u5e8fsystem_call()\u3002 \u2003\u5bc4\u5b58\u5668 eax \u4e2d\u5b58\u653e\u7740\u7cfb\u7edf\u8c03\u7528\u53f7\uff0c\u800c\u643a\u5e26\u7684\u53c2\u6570\u53ef \u4f9d\u6b21\u5b58\u653e\u5728\u5bc4\u5b58\u5668 ebx\u3001ecx\u3001edx\u3001esi\u548cedi\u4e2d \uff0c\u9700\u8981\u66f4\u591a\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u7528\u5176\u4e2d\u4e00\u4e2a\u5bc4\u5b58\u5668\u5b58\u653e\u6307\u5411\u6240\u6709\u8fd9\u4e9b\u53c2\u6570\u5728\u7528\u6237\u7a7a\u95f4\u5730\u5740\u7684\u6307\u9488\u3002 \u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b: a. \u7528\u6237\u7a0b\u5e8f\u4e2d\u5305\u542b\u4e00\u6bb5\u542bint 0x80\u6307\u4ee4\u7684\u4ee3\u7801(\u901a\u5e38\u5728\u5e93\u51fd\u6570\u4e2d)\u3002 b. \u64cd\u4f5c\u7cfb\u7edf\u5199\u4e2d\u65ad\u5904\u7406\uff0c\u5e76\u83b7\u53d6\u60f3\u8c03\u7528\u7684\u5185\u6838\u7a0b\u5e8f\u7684\u7f16\u53f7\u3002 c. \u64cd\u4f5c\u7cfb\u7edf\u6839\u636e\u7f16\u53f7\u8f6c\u5230\u76f8\u5e94\u7684\u6267\u884c\u4ee3\u7801\u3002 \u5185\u5b58\u5c42\u6b21\u6a21\u578b \u5bc4\u5b58\u5668 -> \u9ad8\u901f\u7f13\u5b58 -> \u4e3b\u5b58 -> \u78c1\u76d8\uff0c \u8bbf\u95ee\u901f\u5ea6\u7531\u5feb\u5230\u6162\uff0c\u5bb9\u91cf\u7531\u5c0f\u5230\u5927\u3002 I/O\u7684\u4e09\u79cd\u65b9\u5f0f\uff1a 1\u300b\u7528\u6237\u7a0b\u5e8f\u53d1\u8d77\u7cfb\u7edf\u8c03\u7528\uff0c\u5185\u6838\u4f1a\u5c06\u5176\u8f6c\u6362\u4e3a\u76f8\u5e94\u9a71\u52a8\u7a0b\u5e8f\u7684\u7a0b\u5e8f\u8c03\u7528\uff0c\u7136\u540e\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u542f\u52a8I/O \u5e76\u5faa\u73af\u68c0\u67e5\u8be5\u8bbe\u5907\u662f\u5426\u5b8c\u6210\u5de5\u4f5c\u3002\u5f53I/O\u8c03\u7528\u5b8c\u6210\u540e\uff0c\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u628a\u6570\u636e\u9001\u5230\u6307\u5b9a\u7684\u5730\u65b9\u5e76\u8fd4\u56de\u3002 \u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e3abusy waiting. \u8fd9\u79cd\u65b9\u5f0f\u7684\u7f3a\u70b9\u662f\u8981\u4e00\u76f4\u5360\u636eCPU\uff0cCPU\u4f1a\u4e00\u76f4\u8f6e\u8be2I/O\u8bbe\u5907\u76f4\u5230I/O\u64cd\u4f5c\u5b8c\u6210\u3002 2\u300b\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u542f\u52a8\u8bbe\u5907\u5e76\u4e14\u8ba9\u8be5\u8bbe\u5907\u5728\u64cd\u4f5c\u5b8c\u6210\u65f6\u53d1\u751f\u4e2d\u65ad\u3002\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u5728\u8be5\u65f6\u523b\u8fd4\u56de\uff0c \u64cd\u4f5c\u7cfb\u7edf\u63a5\u7740\u5728\u9700\u8981\u65f6\u963b\u585e\u8c03\u7528\u8005\u5e76\u5b89\u6392\u5176\u4ed6\u5de5\u4f5c\u8fdb\u884c\u3002\u5f53\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u68c0\u6d4b\u5230\u8be5\u8bbe\u5907\u64cd\u4f5c\u5b8c\u6210\u65f6\uff0c \u4f1a\u53d1\u51fa\u4e00\u4e2a\u4e2d\u65ad\u901a\u77e5\u64cd\u4f5c\u5b8c\u6210\u3002 3\u300b\u4f7f\u7528\u7279\u6b8a\u7684\u786c\u4ef6\uff1a\u76f4\u63a5\u5b58\u50a8\u5668\u8bbf\u95ee\uff08direct memory access\uff0c DMA\uff09\u82af\u7247\u3002 \u5b83\u53ef\u4ee5\u63a7\u5236\u5185\u5b58\u548c\u67d0\u4e9b\u63a7\u5236\u5668\u4e4b\u95f4\u7684\u4f4d\u6d41\uff0c\u800c\u65e0\u9700CPU\u7684\u5e72\u9884\u3002CPU\u4f1a\u5bf9DMA\u82af\u7247\u8fdb\u884c\u8bbe\u7f6e\uff0c\u8bf4\u660e\u9700\u8981\u4f20\u9001\u7684\u5b57\u8282\u6570\uff0c \u6709\u5173\u7684\u8bbe\u5907\u548c\u5185\u5b58\u5730\u5740\u4ee5\u53ca\u64cd\u4f5c\u65b9\u5411\u3002\u5f53DMA\u82af\u7247\u5b8c\u6210\u64cd\u4f5c\u65f6\uff0c\u4f1a\u9020\u6210\u4e2d\u65ad\u3002 \u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784\uff1a\u5355\u4f53\u7ed3\u6784\u3001\u5206\u5c42\u7cfb\u7edf\u3001\u5fae\u5185\u6838\u3001\u5ba2\u6237-\u670d\u52a1\u7aef\u7cfb\u7edf\u3001\u865a\u62df\u673a\u548c\u5916\u6838\u3002 big-endian: \u5c06\u9ad8\u5e8f\u5b57\u8282\u5b58\u50a8\u5728\u8d77\u59cb\u5730\u5740; little-endian: \u5c06\u4f4e\u5e8f\u5b57\u8282\u5b58\u50a8\u5728\u8d77\u59cb\u5730\u5740(\u5730\u5740\u4f4e\u4f4d\u5b58\u50a8\u503c\u7684\u4f4e\u4f4d, \u5730\u5740\u9ad8\u4f4d\u5b58\u50a8\u503c\u7684\u9ad8\u4f4d) \u8fdb\u7a0b \u4e00\u4e2a\u6b63\u5728\u6267\u884c\u7a0b\u5e8f\u7684\u5b9e\u4f8b\uff0c\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u4f4d\u3002(\u5728 Linux \u5185\u6838\u4e2d\uff0c\u8fdb\u7a0b\u901a\u5e38\u88ab\u79f0\u4f5c\u4efb\u52a1\uff08task\uff09\uff0c\u800c\u628a\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u7684\u7a0b\u5e8f\u79f0\u4f5c\u8fdb\u7a0b) \u8fdb\u7a0b\u7684\u6982\u5ff5\u4e3b\u8981\u6709\u4e24\u70b9\uff1a \u7b2c\u4e00\uff0c \u8fdb\u7a0b\u662f\u4e00\u4e2a\u5b9e\u4f53\u3002\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u6709\u5b83\u81ea\u5df1\u7684\u5730\u5740\u7a7a\u95f4 \uff0c\u865a\u62df\u5185\u5b58\u6280\u672f\u4f7f\u5f97\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u72ec\u5360\u6574\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0c\u5730\u5740\u4ece\u96f6\u5f00\u59cb\uff0c\u76f4\u5230\u5185\u5b58\u4e0a\u9650\u3002 \u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u5c06\u8fd9\u90e8\u5206\u7a7a\u95f4\uff08\u4ece\u4f4e\u5730\u5740\u5230\u9ad8\u5730\u5740\uff09\u5206\u4e3a\u516d\u4e2a\u90e8\u5206\uff1a TEXT\u6bb5\uff1a\u6574\u4e2a\u7a0b\u5e8f\u7684\u4ee3\u7801\uff0c\u4ee5\u53ca\u6240\u6709\u7684\u5e38\u91cf\u3002\u8fd9\u90e8\u5206\u5185\u5b58\u662f\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\uff0c\u53ea\u8bfb\u7684; DATA\u6bb5\uff1a\u53c8\u79f0GVAR\uff1a\u5b58\u50a8\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf; BSS(Block Started by Symbol)\u6bb5\uff1a\u5b58\u653e\u7a0b\u5e8f\u4e2d\u672a\u521d\u59cb\u5316\u7684\u6216\u8005\u521d\u59cb\u5316\u4e3a0\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u7684\u4e00\u5757\u5185\u5b58\u533a\u57df\u3002 \u7279\u70b9\u662f\u53ef\u8bfb\u5199\u7684\uff0c\u5728\u7a0b\u5e8f\u6267\u884c\u4e4b\u524dBSS\u6bb5\u4f1a\u81ea\u52a8\u6e050\u3002 HEAP\uff08\u5806\u7a7a\u95f4\uff09\uff1a\u52a8\u6001\u5185\u5b58\u533a\u57df\uff0c\u4f7f\u7528malloc\u6216new\u7533\u8bf7\u7684\u5185\u5b58; \u672a\u4f7f\u7528\u7684\u5185\u5b58; STACK\uff08\u6808\u7a7a\u95f4\uff09\uff1a\u5b58\u50a8\u5c40\u90e8\u53d8\u91cf\u3001\u53c2\u6570\u3001\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u8c03\u7528\u5f00\u59cb\u4f1a\u53c2\u6570\u5165\u6808\u3001\u5c40\u90e8\u53d8\u91cf\u5165\u6808\uff1b\u8c03\u7528\u7ed3\u675f\u4f9d\u6b21\u51fa\u6808\u3002 \u5176\u4e2d\u5806\u7a7a\u95f4\u548c\u6808\u7a7a\u95f4\u7684\u5927\u5c0f\u662f\u53ef\u53d8\u7684\uff0c\u5806\u7a7a\u95f4\u4ece\u4e0b\u5f80\u4e0a\u751f\u957f\uff0c\u6808\u7a7a\u95f4\u4ece\u4e0a\u5f80\u4e0b\u751f\u957f\u3002 \u7b2c\u4e8c\uff0c \u8fdb\u7a0b\u662f\u4e00\u4e2a\u201c\u6267\u884c\u4e2d\u7684\u7a0b\u5e8f\u201d\u3002 \u7a0b\u5e8f\u662f\u4e00\u4e2a\u6ca1\u6709\u751f\u547d\u7684\u5b9e\u4f53\uff0c\u53ea\u6709\u5904\u7406\u5668\u8d4b\u4e88\u7a0b\u5e8f\u751f\u547d\u65f6\uff08\u64cd\u4f5c\u7cfb\u7edf\u6267\u884c\u4e4b\uff09\uff0c\u5b83\u624d\u80fd\u6210\u4e3a\u4e00\u4e2a\u6d3b\u52a8\u7684\u5b9e\u4f53\uff0c\u6211\u4eec\u79f0\u5176\u4e3a\u8fdb\u7a0b\u3002 \u8fdb\u7a0b=\u8d44\u6e90+\u6307\u4ee4\u6267\u884c\u5e8f\u5217: \u5c06\u8d44\u6e90\u548c\u6307\u4ee4\u6267\u884c\u5206\u5f00, \u4e00\u4e2a\u8d44\u6e90+\u591a\u4e2a\u6307\u4ee4\u6267\u884c\u5e8f\u5217, \u6307\u4ee4\u6267\u884c\u5e8f\u5217\u5373\u7ebf\u7a0b: \u4fdd\u7559\u4e86\u5e76\u53d1\u7684\u7279\u70b9, \u907f\u514d\u4e86\u8fdb\u7a0b\u8d44\u6e90\u5207\u6362\uff08\u5982\u6620\u5c04\u8868\u7684\u5207\u6362\uff09\u7684\u4ee3\u4ef7\u3002 \u8fdb\u7a0b\u7684\u5c42\u6b21\u7ed3\u6784 \u5f53\u8fdb\u7a0b\u521b\u5efa\u4e86\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u540e\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u4ee5\u67d0\u79cd\u5f62\u5f0f\u7ee7\u7eed\u4fdd\u6301\u5173\u8054\u3002\u5b50\u8fdb\u7a0b\u81ea\u8eab\u53ef\u4ee5\u521b\u5efa\u66f4\u591a\u7684\u8fdb\u7a0b\uff0c\u7ec4\u6210\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5c42\u6b21\u7ed3\u6784\u3002\u5728UNIX\u4e2d\uff0c\u8fdb\u7a0b\u548c\u5b83\u7684\u6240\u6709\u5b50\u8fdb\u7a0b\u4ee5\u53ca\u540e\u88d4\u5171\u540c\u7ec4\u6210\u4e00\u4e2a\u8fdb\u7a0b\u7ec4\u3002\u800c\u5728windows\u4e2d\uff0c\u6240\u6709\u8fdb\u7a0b\u7684\u5730\u4f4d\u90fd\u662f\u76f8\u540c\u7684\uff0c\u4e0d\u8fc7\u5728\u521b\u5efa\u8fdb\u7a0b\u65f6\uff0c\u7236\u8fdb\u7a0b\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7279\u522b\u7684\u4ee4\u724c\uff08\u53e5\u67c4\uff09\uff0c\u7528\u4ee5\u63a7\u5236\u5b50\u8fdb\u7a0b\u3002 \u8fdb\u7a0b\u72b6\u6001 \u8fd0\u884c\u6001\uff1a\u8be5\u65f6\u523b\u8fdb\u7a0b\u5b9e\u9645\u5360\u7528CPU \u5c31\u7eea\u6001\uff1a\u53ef\u8fd0\u884c\uff0c\u62e5\u6709\u9664CPU\u4ee5\u5916\u7684\u6240\u6709\u6240\u9700\u8d44\u6e90\uff0c\u4f46\u56e0\u4e3a\u5176\u4ed6\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\u800c\u6682\u65f6\u505c\u6b62 \u963b\u585e\u6001\uff1a\u8fdb\u7a0b\u7b49\u5f85\u76f4\u81f3\u67d0\u4e2a\u5916\u754c\u4e8b\u4ef6\u53d1\u751f\u624d\u80fd\u8f6c\u4e3a\u5c31\u7eea\u6001\uff0c\u5426\u5219\u5c06\u4e00\u76f4\u65e0\u6cd5\u6267\u884c \u2003(\u4e94\u72b6\u6001\u6a21\u578b\u4e0b\u8fd8\u6709\u65b0\u5efa\u6001\u548c\u7ec8\u6b62\u6001\uff0c \u524d\u8005\uff1a\u65b0\u5efa\u6001\u5bf9\u5e94\u4e8e\u8fdb\u7a0b\u521a\u521a\u88ab\u521b\u5efa\u7684\u72b6\u6001\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u521b\u5efa\u7684\u65b0\u8fdb\u7a0b\u521b\u5efaPCB\uff0c\u5206\u914d\u8d44\u6e90\uff0c\u5f53\u8fdb\u7a0b\u62e5\u6709\u9664CPU\u4ee5\u5916\u7684\u6240\u6709\u8d44\u6e90\u65f6\uff0c\u5c06\u8fdb\u5165\u5c31\u7eea\u6001\uff0c\u7b49\u5f85\u8c03\u5ea6\u6267\u884c\uff1b \u540e\u8005\uff1a\u8fdb\u7a0b\u7684\u7ec8\u6b62\u8981\u901a\u8fc7\u4e24\u4e2a\u6b65\u9aa4\uff0c\u9996\u5148\uff0c\u662f\u7b49\u5f85\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u5584\u540e\uff0c\u56de\u6536\u8d44\u6e90\uff1b\u7136\u540e\u64a4\u9500PCB\uff0c\u9000\u51fa\u4e3b\u5b58\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u5230\u8fbe\u4e86\u81ea\u7136\u7ed3\u675f\u70b9\uff0c\u6216\u662f\u51fa\u73b0\u4e86\u65e0\u6cd5\u514b\u670d\u7684\u9519\u8bef\uff0c\u6216\u662f\u88ab\u64cd\u4f5c\u7cfb\u7edf\u6240\u7ec8\u7ed3\uff0c\u6216\u662f\u88ab\u5176\u4ed6\u6709\u7ec8\u6b62\u6743\u7684\u8fdb\u7a0b\u6240\u7ec8\u7ed3\uff0c\u5b83\u5c06\u8fdb\u5165\u7ec8\u6b62\u6001\u3002\u8fdb\u5165\u7ec8\u6b62\u6001\u7684\u8fdb\u7a0b\u4ee5\u540e\u4e0d\u518d\u6267\u884c\uff0c\u4f46\u4f9d\u7136\u4fdd\u7559\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7b49\u5f85\u5584\u540e\u3002 \u2003 linux\u4e0b\u8fdb\u7a0b\u72b6\u6001 \u2003\u50f5\u5c38\u8fdb\u7a0b \u2003\u907f\u514d\u50f5\u5c38\u8fdb\u7a0b \u2003\u5176\u4e2d\u7684handler\u4e3a\u7236\u8fdb\u7a0b\u6ce8\u518c\u7684\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u5f53\u5b50\u8fdb\u7a0b\u9000\u51fa\u65f6\uff0c\u7236\u8fdb\u7a0b\u6536\u5230SIGCHLD\u4fe1\u53f7\uff0c\u5982\u679c\u7236\u8fdb\u7a0b\u6b64\u65f6\u6b63\u5728\u5904\u7406\u5176\u4ed6\u4e8b\u60c5\uff0c\u5219\u53ef\u4ee5\u8c03\u7528\u63d0\u524d\u6ce8\u518c\u7684handler\uff0c\u5728\u5176\u4e2d\u8c03\u7528wait/waitpid\uff0c\u6765\u83b7\u53d6\u5b50\u8fdb\u7a0b\u9000\u51fa\u72b6\u6001\uff0c\u7136\u540e\u56de\u6536\u5b50\u8fdb\u7a0b\u5269\u4f59\u4fe1\u606f\u3002 \u5bf9\u4e8e\u4ea7\u751f\u4fe1\u53f7\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4ea7\u751f\u4fe1\u53f7\u524d\u5229\u7528\u65b9\u6cd5 signal(int signum, sighandler_t handler) \u8bbe\u7f6e\u4fe1\u53f7\u7684\u5904\u7406\u3002 \u5982\u679c\u6ca1\u6709\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u7cfb\u7edf\u5c31\u4f1a\u8c03\u7528\u9ed8\u8ba4\u5904\u7406\u65b9\u6cd5\uff1a\u4e2d\u6b62\u7a0b\u5e8f\uff0c\u663e\u793a\u63d0\u793a\u4fe1\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u7cfb\u7edf\u7684\u5904\u7406\u65b9\u6cd5\uff0c \u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5904\u7406\u65b9\u6cd5\u3002\u7cfb\u7edf\u91cc\u8fb9\u5b9a\u4e49\u4e86\u4e09\u79cd\u5904\u7406\u65b9\u6cd5\uff1a SIG_DFL: \u9ed8\u8ba4\u52a8\u4f5c\uff0c\u9ed8\u8ba4\u7684\u5904\u7406\u65b9\u5f0f\u662f\u4e0d\u7406\u4f1a\u8fd9\u4e2a\u4fe1\u53f7\uff0c\u4f46\u662f\u4e5f\u4e0d\u4f1a\u4e22\u5f03\u5b50\u8fdb\u884c\u72b6\u6001\uff0c\u6240\u4ee5\u5982\u679c\u4e0d\u7528wait/waitpid \u5bf9\u5176\u5b50\u8fdb\u884c\u8fdb\u884c\u72b6\u6001\u4fe1\u606f\u56de\u6536\uff0c\u4f1a\u4ea7\u751f\u50f5\u5c38\u8fdb\u7a0b\u3002 SIG_IGN: \u5ffd\u7565\u4fe1\u53f7\uff0c\u5b50\u8fdb\u7a0b\u72b6\u6001\u4fe1\u606f\u4f1a\u88ab\u4e22\u5f03\uff0c\u4e5f\u5c31\u662f\u81ea\u52a8\u56de\u6536\u4e86\uff0c\u6240\u4ee5\u4e0d\u4f1a\u4ea7\u751f\u50f5\u5c38\u8fdb\u7a0b\u3002 \u81ea\u5b9a\u4e49\u5904\u7406\u65b9\u5f0f\uff0c\u5982\u81ea\u5b9a\u4e49handler \u8fdb\u7a0b\u63cf\u8ff0\u7b26 \u5185\u6838\u628a\u8fdb\u7a0b\u7684\u5217\u8868\u5b58\u653e\u5728\u53eb\u505a\u4efb\u52a1\u961f\u5217\u7684\u53cc\u5411\u5faa\u73af\u94fe\u8868\u4e2d\uff0c\u94fe\u8868\u7684\u6bcf\u4e00\u9879\u7c7b\u578b\u90fd\u662ftask_struct,\u79f0\u4e3a\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u3001\u8fdb\u7a0b\u63a7\u5236\u5757(Process Control Block,PCB)\u3001\u8fdb\u7a0b\u8868\uff0c\u5305\u542b\u4e00\u4e2a\u5177\u4f53\u8fdb\u7a0b\u7684\u6240\u6709\u4fe1\u606f\u3002\u5982 (1)\u8fdb\u7a0b\u6807\u8bc6\u7b26(\u552f\u4e00)\uff0c PID (2)\u8fdb\u7a0b\u5f53\u524d\u72b6\u6001\uff0c\u901a\u5e38\u540c\u4e00\u72b6\u6001\u7684\u8fdb\u7a0b\u4f1a\u88ab\u653e\u5230\u540c\u4e00\u4e2a\u961f\u5217\uff1b (3)\u7a0b\u5e8f\u72b6\u6001\u5b57\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668 (4)\u6587\u4ef6\u63cf\u8ff0\u7b26 (5)\u8fdb\u7a0b\u4f18\u5148\u7ea7\uff1b\u8c03\u5ea6\u7b56\u7565 (6)\u6307\u5411\u7236\u8fdb\u7a0b\u3001\u5b50\u8fdb\u7a0b\u94fe\u8868\u3001\u5144\u5f1f\u8fdb\u7a0b\u7684\u6307\u9488 (7)flags, \u53cd\u5e94\u8fdb\u7a0b\u72b6\u6001\u7684\u4fe1\u606f\uff0c\u4f46\u4e0d\u662f\u8fd0\u884c\u72b6\u6001\uff0c\u7528\u4e8e\u5185\u6838\u8bc6\u522b\u8fdb\u7a0b\u5f53\u524d\u7684\u72b6\u6001\uff0c\u4ee5\u5907\u4e0b\u4e00\u6b65\u64cd\u4f5c; PF_FORKNOEXEC \u8fdb\u7a0b\u521a\u521b\u5efa\uff0c\u4f46\u8fd8\u6ca1\u6267\u884c\u3002 PF_SUPERPRIV \u8d85\u7ea7\u7528\u6237\u7279\u6743\u3002 (8)\u8fdb\u7a0b\u540c\u6b65\u4e0e\u901a\u4fe1\u673a\u5236\uff0c\u7528\u4e8e\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u4e92\u65a5\u3001\u540c\u6b65\u548c\u901a\u4fe1\u6240\u9700\u7684\u4fe1\u53f7\u91cf\u7b49\uff1b \u7528\u4e8e\u4fdd\u62a4\u8d44\u6e90\u5206\u914d\u6216\u91ca\u653e\u7684\u81ea\u65cb\u9501\uff1b (9)\u6307\u5411\u5185\u5b58\u63cf\u8ff0\u7b26(mm_struct)\u7684\u6307\u9488mm\u548cactive_mm\uff0cmm\u6307\u5411\u7684mm_struct\u7ed3\u6784\u63cf\u8ff0\u4e86\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6574\u4e2a\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff1b \u5bf9\u4e8e\u5185\u6838\u7ebf\u7a0b\u6765\u8bf4\uff0c\u6ca1\u6709\u5730\u5740\u7a7a\u95f4\uff0c\u56e0\u6b64\u5176mm\u57df\u4e3aNULL\uff0c\u800cactive_mm\u6307\u5411\u7684\u662f\u5207\u6362\u524d\u7684\u8fdb\u7a0b\u7684mm_struct. \u6307\u5411\u5185\u6838\u6808\u7684\u6307\u9488\uff0ctask_struct->stack. (9)\u8fdb\u7a0b\u76f8\u5173\u7684\u5176\u4ed6\u4fe1\u606f\u3002\u4f8b\u5982\u8fdb\u7a0b\u521b\u5efa\u65f6\u95f4\u3001\u5728\u5185\u6838\u6001/\u7528\u6237\u6001\u7d2f\u8ba1\u8fd0\u884c\u65f6\u95f4\u7b49\u3002 \u2003 ps1. \u4e00\u4e2a\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e3b\u8981\u7531\u4e24\u4e2a\u6570\u636e\u7ed3\u6765\u63cf\u8ff0\u3002\u4e00\u4e2a\u662f\u6700\u9ad8\u5c42\u6b21\u7684\uff1amm_struct\uff0c\u4e00\u4e2a\u662f\u8f83\u9ad8\u5c42\u6b21\u7684\uff1avm_area_structs\u3002\u6700\u9ad8\u5c42\u6b21\u7684mm_struct\u7ed3\u6784\u63cf\u8ff0\u4e86\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6574\u4e2a\u865a\u62df\u5730\u5740\u7a7a\u95f4\u3002\u8f83\u9ad8\u5c42\u6b21\u7684\u7ed3\u6784vm_area_truct\u63cf\u8ff0\u4e86\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u4e00\u4e2a\u533a\u95f4\uff08\u7b80\u79f0\u865a\u62df\u533a\uff09\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u53ea\u6709\u4e00\u4e2amm_struct\u7ed3\u6784\uff0c\u5728\u6bcf\u4e2a\u8fdb\u7a0b\u7684task_struct\u7ed3\u6784\u4e2d\uff0c\u6709\u4e00\u4e2a\u6307\u5411\u8be5\u8fdb\u7a0b\u7684\u7ed3\u6784\u3002\u53ef\u4ee5\u8bf4\uff0cmm_struct\u7ed3\u6784\u662f\u5bf9\u6574\u4e2a\u7528\u6237\u7a7a\u95f4\u7684\u63cf\u8ff0\u3002 \u2003 ps2. \u6bcf\u4e2a\u8fdb\u7a0b\u88ab\u521b\u5efa\u7684\u65f6\u5019\uff0c\u5728\u751f\u6210\u8fdb\u7a0b\u63cf\u8ff0\u7b26task_struct\u7684\u540c\u65f6\uff0c\u4f1a\u751f\u6210\u4e24\u4e2a\u6808\uff0c\u4e00\u4e2a\u662f\u7528\u6237\u6808\uff0c\u4f4d\u4e8e\u7528\u6237\u5730\u5740\u7a7a\u95f4\uff1b\u4e00\u4e2a\u662f\u5185\u6838\u6808\uff0c\u4f4d\u4e8e\u5185\u6838\u7a7a\u95f4\u3002\u5f53\u8fdb\u7a0b\u5728\u7528\u6237\u5730\u5740\u7a7a\u95f4\u4e2d\u6267\u884c\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u7684\u662f\u7528\u6237\u6808\uff0cCPU\u5806\u6808\u6307\u9488\u5bc4\u5b58\u5668\u4e2d\u5b58\u7684\u662f\u7528\u6237\u6808\u7684\u5730\u5740\uff1b\u540c\u7406\uff0c\u5f53\u8fdb\u7a0b\u5728\u5185\u6838\u7a7a\u95f4\u6267\u884c\u65f6\uff0cCPU\u5806\u6808\u6307\u9488\u5bc4\u5b58\u5668\u4e2d\u653e\u7684\u662f\u5185\u6838\u6808\u7684\u5730\u5740\u3002 \u2003\u4f4d\u4e8e\u7528\u6237\u7a7a\u95f4\u7684\u8fdb\u7a0b\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u5b83\u4f1a\u9677\u5165\u5185\u6838\uff0c\u8ba9\u5185\u6838\u4ee3\u5176\u6267\u884c\u3002\u6b64\u65f6\uff0c\u8fdb\u7a0b\u7528\u6237\u6808\u7684\u5730\u5740\u4f1a\u88ab\u5b58\u8fdb\u5185\u6838\u6808\u4e2d\uff0cCPU\u5806\u6808\u6307\u9488\u5bc4\u5b58\u5668\u4e2d\u7684\u5185\u5bb9\u4e5f\u4f1a\u53d8\u4e3a\u5185\u6838\u6808\u7684\u5730\u5740\u3002\u5f53\u7cfb\u7edf\u8c03\u7528\u6267\u884c\u5b8c\u6bd5\uff0c\u8fdb\u7a0b\u4ece\u5185\u6838\u6808\u627e\u5230\u7528\u6237\u6808\u7684\u5730\u5740\uff0c\u7ee7\u7eed\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\u6267\u884c\uff0c\u6b64\u65f6CPU\u5806\u6808\u6307\u9488\u5bc4\u5b58\u5668\u5c31\u53d8\u4e3a\u4e86\u7528\u6237\u6808\u7684\u5730\u5740\u3002 \u2003 ps3. thread_info : \u5bf9\u4e8e\u5bc4\u5b58\u5668\u8f83\u5c11\u7684\u786c\u4ef6\u4f53\u7cfb\u7ed3\u6784\u6765\u8bf4\uff0c\u4f7f\u7528\u8fdb\u7a0b\u7684task_struct\u662f\u901a\u8fc7\u5b58\u653e\u5728\u8fdb\u7a0b\u5185\u6838\u6808\u6808\u9876\u7684struct thread_info\u6765\u5b9e\u73b0\u7684\uff0c\u5176task\u57df\u4e2d\u5b58\u653e\u4e86\u6307\u5411\u8be5\u4efb\u52a1\u5b9e\u9645task_struct\u7684\u6307\u9488\u3002 \u8fdb\u7a0b\u521b\u5efa \u2003 UNIX\u7cfb\u7edf\u91c7\u7528fork()\u548cexec()\u4e24\u4e2a\u5355\u72ec\u7684\u51fd\u6570\u6765\u5b8c\u6210\u8fdb\u7a0b\u7684\u521b\u5efa: \u2003fork()\u901a\u8fc7\u62f7\u8d1d\u5f53\u524d\u8fdb\u7a0b\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u4e0e\u7236\u8fdb\u7a0b\u7684\u533a\u522b\u4ec5\u5728\u4e8ePID\u3001PPID(\u5b50\u8fdb\u7a0b\u7684PPID\u4e3a\u88ab\u62f7\u8d1d\u8fdb\u7a0b\u7684PID)\u548c\u67d0\u4e9b\u8d44\u6e90\u4e0e\u7edf\u8ba1\u91cf(\u4f8b\u5982\u6302\u8d77\u7684\u4fe1\u53f7\uff0c\u6ca1\u5fc5\u8981\u88ab\u62f7\u8d1d); \u2003exec()\u51fd\u6570\u8d1f\u8d23\u8bfb\u53d6\u53ef\u6267\u884c\u6587\u4ef6\u5e76\u5c06\u5176\u8f7d\u5165\u5730\u5740\u7a7a\u95f4\u5f00\u59cb\u8fd0\u884c\u3002 \u2003 copy-on-write (\u5199\u65f6\u590d\u5236): \u4f20\u7edffork()\u7cfb\u7edf\u8c03\u7528\u76f4\u63a5\u62f7\u8d1d\u7236\u8fdb\u7a0b\u6240\u6709\u8d44\u6e90\u7ed9\u5b50\u8fdb\u7a0b\uff0c\u4e0d\u4ec5\u6548\u7387\u4f4e\u4e0b\uff0c\u4e14\u5982\u679c\u65b0\u8fdb\u7a0b\u6253\u7b97\u7acb\u5373\u6267\u884c\u4e00\u4e2a\u65b0\u7684\u6620\u50cf\uff0c\u62f7\u8d1d\u5c06\u524d\u529f\u5c3d\u5f03\uff1b\u800clinux\u7684fork()\u7cfb\u7edf\u8c03\u7528\u91c7\u7528\u5199\u65f6\u62f7\u8d1d\u6280\u672f\u6765\u63a8\u8fdf\u751a\u81f3\u514d\u9664\u62f7\u8d1d\u6570\u636e\uff0c\u5177\u4f53\u5b9e\u73b0\u4e3a: \u5728\u521b\u5efa\u5b50\u8fdb\u7a0b\u65f6\uff0c\u5e76\u4e0d\u4f1a\u7acb\u523b\u62f7\u8d1d\u7236\u8fdb\u7a0b\u7684\u8d44\u6e90\u7ed9\u5b50\u8fdb\u7a0b\uff0c\u4e5f\u5373\u6b64\u65f6\u5185\u5b58\u4e0d\u4f1a\u4e3a\u5b50\u8fdb\u7a0b\u5206\u914d\u5b9e\u9645\u7684\u7269\u7406\u5185\u5b58\u9875\u9762\uff0c\u800c\u662f\u8ba9\u5b83\u5171\u4eab\u7236\u8fdb\u7a0b\u7684\u5185\u5b58\u9875\u9762\uff1b\u53ea\u6709\u5f53\u7236\u8fdb\u7a0b\u6216\u65b0\u8fdb\u7a0b\u4e2d\u4efb\u610f\u4e00\u4e2a\u6709\u5199\u5185\u5b58\u64cd\u4f5c\u65f6\uff0c\u7cfb\u7edf\u624d\u4f1a\u4e3a\u6267\u884c\u5199\u64cd\u4f5c\u7684\u8fdb\u7a0b\u5206\u914d\u76f8\u5173\u7684\u72ec\u81ea\u4f7f\u7528\u7684\u5185\u5b58\u9875\u9762\u3002 \u2003 fork() : linux\u901a\u8fc7clone()\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0fork()\uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u53c2\u6570\u6807\u5fd7\u6765\u6307\u660e\u7236\u3001\u5b50\u8fdb\u7a0b\u9700\u8981\u5171\u4eab\u7684\u8d44\u6e90; \u4e8b\u5b9e\u4e0a fork()\u3001vfork()\u3001_clone()\u5e93\u51fd\u6570\u90fd\u6839\u636e\u5404\u81ea\u9700\u8981\u7684\u53c2\u6570\u6807\u5fd7\u6765\u8c03\u7528clone() , \u7136\u540e\u7531clone()\u6765\u8c03\u7528do_fork()\u6765\u5b8c\u6210\u521b\u5efa\u4e2d\u7684\u5927\u90e8\u5206\u5de5\u4f5c\uff0c\u8be5\u51fd\u6570\u8c03\u7528copy_process()\uff0c\u7136\u540e\u8ba9\u8fdb\u7a0b\u5f00\u59cb\u8fd0\u884c\uff0c\u5177\u4f53\u5b8c\u6210\u5de5\u4f5c\u4e3a\uff1a fork()=>clone()=>do_fork()=>copy_process() \u2003 vfork() :\u9664\u4e86\u4e0d\u62f7\u8d1d\u7236\u8fdb\u7a0b\u7684\u9875\u8868\u9879\uff0cvfork()\u548cfork()\u529f\u80fd\u76f8\u540c\u3002\u5b50\u8fdb\u7a0b\u4f5c\u4e3a\u7236\u8fdb\u7a0b\u7684\u4e00\u4e2a\u5355\u72ec\u7684\u7ebf\u7a0b\u5728\u5b83\u7684\u5730\u5740\u7a7a\u95f4\u4e2d\u8fd0\u884c\uff0c\u7236\u8fdb\u7a0b\u88ab\u963b\u585e\uff0c\u76f4\u5230\u5b50\u8fdb\u7a0b\u9000\u51fa\u6216\u6267\u884cexec(), \u4e14\u5b50\u8fdb\u7a0b\u8fd0\u884c\u671f\u95f4\u4e0d\u80fd\u5411\u5730\u5740\u7a7a\u95f4\u4e2d\u5199\u5165\u3002 \u8fdb\u7a0b\u7ec8\u6b62 \u2003\u8c03\u7528exit()\u7cfb\u7edf\u8c03\u7528\uff0c\u6216\u8005\u63a5\u53d7\u65e0\u6cd5\u5904\u7406\u3001\u5ffd\u7565\u7684\u4fe1\u53f7\u6216\u5f02\u5e38\u65f6\u88ab\u52a8\u7ec8\u7ed3\u3002\u5927\u90e8\u5206\u5de5\u4f5c\u4f9d\u8d56do_exit()\u5b8c\u6210\uff0c\u6b64\u540e\u8fdb\u7a0b\u5904\u4e8eTASK_ZOMBIE\u72b6\u6001\uff0c\u5b58\u5728\u7684\u552f\u4e00\u76ee\u7684\u5c31\u662f\u5411\u7236\u8fdb\u7a0b\u63d0\u4f9b\u4fe1\u606f\uff0c \u7236\u8fdb\u7a0b\u68c0\u7d22\u5230\u4fe1\u606f\u540e(\u901a\u8fc7wait()\u7cfb\u7edf\u8c03\u7528\u65cf)\uff0c\u6216\u8005\u901a\u77e5\u5185\u6838\u90a3\u662f\u65e0\u5173\u4fe1\u606f\u540e\uff0c\u8be5\u8fdb\u7a0b\u6240\u6301\u6709\u7684\u5269\u4f59\u5185\u5b58\u4e5f\u88ab\u91ca\u653e \u3002 \u2003\u56e0\u6b64\u7236\u8fdb\u7a0b\u5728\u5b50\u8fdb\u7a0b\u524d\u9000\u51fa\uff0c\u5fc5\u987b\u4fdd\u8bc1\u5b50\u8fdb\u7a0b\u80fd\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u7236\u4eb2\uff0c\u5426\u5219\u4f1a \u6210\u4e3a\u5b64\u513f\u8fdb\u7a0b\uff0c\u5728\u9000\u51fa\u65f6\u4e00\u76f4\u5904\u4e8eZOMBIE\u72b6\u6001\uff0c\u65e0\u6cd5\u91ca\u653e\u5269\u4f59\u5185\u5b58 \u3002\u901a\u5e38\u662f\u5728\u5f53\u524d\u7ebf\u7a0b\u7ec4\u5185\u627e\u4e00\u4e2a\u7ebf\u7a0b\u6216\u8005\u8ba9init\u8fdb\u7a0b\u4f5c\u4e3a\u7236\u8fdb\u7a0b\u3002 \u4e09\u4e2a\u7279\u6b8a\u8fdb\u7a0b idle\u8fdb\u7a0b(PID = 0), init\u8fdb\u7a0b(PID = 1)\u548ckthreadd(PID = 2) Linux\u4e2dPID\u4e3a0\u7684\u8fdb\u7a0b\u662f\u6240\u6709\u5176\u4ed6\u8fdb\u7a0b\u7684\u7956\u5148, \u4e5f\u79f0\u4f5c idle\u8fdb\u7a0b \u6216swapper\u8fdb\u7a0b(\u4ea4\u6362\u8fdb\u7a0b\uff0c\u56e0\u4e3ainit_task\u4e2d comm\u5b57\u6bb5\u5373\u4e3aswapper)\uff0c\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c\u6839\u636e\u9884\u5b9a\u4e49\u7684INIT_TASK\u5b8f\u5b9a\u4e49\u5b8c\u6210\u521d\u59cb\u5316\uff0c\u751f\u6210\u8fdb\u7a0b\u63cf\u8ff0\u7b26init_task\uff0c 0\u53f7\u8fdb\u7a0b\u7684\u6210\u5458\u5927\u90e8\u5206\u662f\u9759\u6001\u5b9a\u4e49\u7684\uff0c\u5176\u6210\u5458\u521d\u59cb\u503c\u4e5f\u90fd\u901a\u8fc7\u5bf9\u5e94\u7684\u521d\u59cb\u5316\u5b8f\u6765\u521d\u59cb\u5316\uff0c\u5982INIT_MM\u3002 0\u53f7\u8fdb\u7a0b\u8c03\u7528start_kernel\u51fd\u6570\u6765\u5bf9\u5185\u6838\u5404\u4e2a\u91cd\u8981\u5b50\u7cfb\u7edf\u8fdb\u884c\u521d\u59cb\u5316(\u5982\u5185\u5b58\u3001CPU)\uff0c\u7136\u540e\u8c03\u7528rest_init() \u6765\u5b8c\u6210\u5269\u4f59\u7684\u90e8\u5206\u7684\u521d\u59cb\u5316\uff0c\u5728\u5176\u4e2d\u4f1a\u901a\u8fc7 pid = kernel_thread(kernel_init, NULL, CLONE_FS); pid = kernel_thread(kthreadd, NULL, CLONE_FS | CLONE_FILES); \u521b\u5efa\u4e24\u4e2a\u8fdb\u7a0b\uff1b \u524d\u8005\u5373\u4e3a1\u53f7\u8fdb\u7a0b(\u521a\u521b\u5efa\u65f6\u5c1a\u5c5e\u4e8e\u5185\u6838\u8fdb\u7a0b\uff0c\u5171\u4eab0\u53f7\u8fdb\u7a0b\u7684\u8d44\u6e90), \u5728kernel_init\u51fd\u6570\u4e2d\u6765\u5b8c\u6210\u5404\u79cd\u5916\u8bbe\u9a71\u52a8\u7684\u521d\u59cb\u5316\uff0c \u5e76\u5728\u6700\u540e\u8c03\u7528execve()\u6765\u52a0\u8f7dinit\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u4e3a1\u53f7\u8fdb\u7a0b\u52a0\u8f7d\u72ec\u7acb\u7684\u5730\u5740\u8d44\u6e90\uff0c\u6b64\u65f61\u53f7\u8fdb\u7a0b\u7531\u5185\u6838\u6001\u8f6c\u53d8\u4e3a\u7528\u6237\u6001\uff0c \u5373\u6210\u4e3a init\u8fdb\u7a0b \u3002 \u540e\u8005\u662f\u75311\u53f7\u8fdb\u7a0b\u521b\u5efa\u7684\uff0c\u79f0\u4e3a2\u53f7\u8fdb\u7a0b(\u8fdb\u7a0b\u540d\u5373kthreadd)\uff0c\u59cb\u7ec8\u8fd0\u884c\u5728\u5185\u6838\u7a7a\u95f4, \u8d1f\u8d23\u6240\u6709\u5185\u6838\u7ebf\u7a0b\u7684\u8c03\u5ea6\u548c\u7ba1\u7406, \u662f\u6240\u6709\u5185\u6838\u7ebf\u7a0b\u7684\u7236\u7ebf\u7a0b\u3002\uff0c \u7ebf\u7a0b \u7ebf\u7a0b \u7ebf\u7a0b\uff08thread\uff09\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u5b83\u88ab\u5305\u542b\u5728\u8fdb\u7a0b\u4e4b\u4e2d\uff0c\u662f\u8fdb\u7a0b\u4e2d\u7684\u5b9e\u9645\u8fd0\u4f5c\u5355\u4f4d\u3002 \u2003\u591a\u7ebf\u7a0b\uff1a1\u300b\u5e76\u884c\u5b9e\u4f53\u62e5\u6709\u5171\u4eab\u540c\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\u548c\u6240\u6709\u53ef\u7528\u6570\u636e\u7684\u80fd\u529b\u3002\uff08\u5373\u4e00\u4e2a\u8fdb\u7a0b\u5305\u542b\u591a\u4e2a\u7ebf\u7a0b\uff0c \u5b83\u4eec\u5171\u4eab\u8be5\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\uff0c \u800c\u591a\u8fdb\u7a0b\u6709\u4e0d\u540c\u7684\u5730\u5740\u7a7a\u95f4\uff09\u3002 2\u300b\u7ebf\u7a0b\u6bd4\u8fdb\u7a0b\u66f4\u8f7b\u91cf\u7ea7\uff0c\u6bd4\u8fdb\u7a0b\u66f4\u5bb9\u6613\u521b\u5efa\uff0c\u4e5f\u66f4\u5bb9\u6613\u64a4\u9500\u3002 3\u300b\u82e5\u5b58\u5728\u5927\u91cf\u7684\u8ba1\u7b97\u548cI/O\u5904\u7406\uff0c\u62e5\u6709\u591a\u7ebf\u7a0b\u5141\u8bb8\u8fd9\u4e9b\u6d3b\u52a8\u5f7c\u6b64\u91cd\u53e0\u8fdb\u884c\u30024\u300b\u5728\u591aCPU\u7cfb\u7edf\u4e2d\uff0c\u591a\u7ebf\u7a0b\u53ef\u4ee5\u5b9e\u73b0\u771f\u6b63\u7684\u5e76\u884c\u3002 \u5728\u7528\u6237\u7a7a\u95f4\u7ba1\u7406\u7ebf\u7a0b\u65f6\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u9700\u8981\u6709\u5176\u4e13\u7528\u7684 \u7ebf\u7a0b\u8868 , \u7ebf\u7a0b\u8868\uff08or thread control block, TCB\uff09\uff1a\u8ddf\u8e2a\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\uff0c\u8bb0\u5f55\u5404\u4e2a\u7ebf\u7a0b\u7684\u5c5e\u6027\uff0c \u5982\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u7a0b\u5e8f\u8ba1\u6570\u5668\uff0c\u5806\u6808\u6307\u9488\uff0c\u5bc4\u5b58\u5668\u548c\u72b6\u6001\u3002 \u7ebf\u7a0b\u5207\u6362\u4e0e\u8fdb\u7a0b\u5207\u6362 \u2003\u8fdb\u7a0b\u5207\u6362\u5206\u4e24\u6b65\uff1a1.\u5207\u6362\u9875\u76ee\u5f55\u4ee5\u4f7f\u7528\u65b0\u7684\u5730\u5740\u7a7a\u95f4\uff1b2.\u5207\u6362\u5185\u6838\u6808\u548c\u786c\u4ef6\u4e0a\u4e0b\u6587\u3002 \u2003\u5bf9\u4e8elinux\u6765\u8bf4\uff0c\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u7684\u6700\u5927\u533a\u522b\u5c31\u5728\u4e8e\u5730\u5740\u7a7a\u95f4\uff0c\u5bf9\u4e8e\u7ebf\u7a0b\u5207\u6362\uff0c\u7b2c1\u6b65\u662f\u4e0d\u9700\u8981\u505a\u7684\uff0c\u7b2c2\u6b65\u662f\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u5207\u6362\u90fd\u8981\u505a\u7684\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff0c\u800c\u7ebf\u7a0b\u662f\u5171\u4eab\u6240\u5728\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\uff0c\u56e0\u6b64\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u8fdb\u884c\u7ebf\u7a0b\u5207\u6362\u65f6\u4e0d\u6d89\u53ca\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u8f6c\u6362. \u7ebf\u7a0b\u5b9e\u73b0\u65b9\u5f0f : 1\u300b\u5728\u7528\u6237\u7a7a\u95f4\u5b9e\u73b0\u7ebf\u7a0b \uff1a\u7279\u70b9\uff1a \u6574\u4e2a\u7ebf\u7a0b\u5305\u653e\u5165\u7528\u6237\u7a7a\u95f4\u4e2d\uff0c\u5185\u6838\u5bf9\u7ebf\u7a0b\u5305\u4e00\u65e0\u6240\u77e5\u3002\u4ece\u5185\u6838\u89d2\u5ea6\u8003\u8651\uff0c\u5c31\u662f\u6309\u6b63\u5e38\u7684\u65b9\u5f0f\u7ba1\u7406\uff0c\u5373\u5355\u7ebf\u7a0b\u8fdb\u7a0b \u3002 \u7ebf\u7a0b\u5728\u4e00\u4e2a\u8fd0\u884c\u65f6\u7cfb\u7edf\u7684\u4e0a\u5c42\u8fd0\u884c\uff0c\u8be5\u8fd0\u884c\u65f6\u7cfb\u7edf\u662f\u4e00\u4e2a\u7ba1\u7406\u7ebf\u7a0b\u7684\u8fc7\u7a0b\u7684\u96c6\u5408\u3002 \u4f18\u70b9 \uff1a 1\u3001\u7528\u6237\u7ea7\u7ebf\u7a0b\u5305\u53ef\u4ee5\u5728\u4e0d\u652f\u6301\u7ebf\u7a0b\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u5b9e\u73b0\u3002 2\u3001\u7ebf\u7a0b\u5207\u6362\u6bd4\u5185\u6838\u5feb\u66f4\u591a\uff08\u56e0\u4e3a\u4fdd\u5b58\u8be5\u7ebf\u7a0b\u72b6\u6001\u7684\u8fc7\u7a0b\u548c\u8c03\u5ea6\u7a0b\u5e8f\u90fd\u662f\u672c\u5730\u8fc7\u7a0b\uff0c\u542f\u52a8\u5b83\u4eec\u6bd4\u8fdb\u884c\u5185\u6838\u8c03\u7528\u6548\u7387\u66f4\u9ad8\uff0c\u4e0d\u9700\u8981\u9677\u5165\u5185\u6838\uff0c\u4e0d\u9700\u8981\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u4e5f\u4e0d\u9700\u8981\u5bf9\u5185\u5b58\u9ad8\u901f\u7f13\u5b58\u8fdb\u884c\u5237\u65b0\uff0c\u4f7f\u5f97\u7ebf\u7a0b\u8c03\u5ea6\u5341\u5206\u5feb\u6377\u3002 3\u3001\u5141\u8bb8\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u81ea\u5df1\u5b9a\u5236\u7684\u8c03\u5ea6\u7b97\u6cd5\u3002 \u7f3a\u70b9 : 1\u3001\u7ebf\u7a0b\u53d1\u751fI/O\u6216\u9875\u9762\u6545\u969c\u5f15\u8d77\u7684\u963b\u585e\u65f6\uff0c\u5982\u679c\u8c03\u7528\u963b\u585e\u7cfb\u7edf\u8c03\u7528\u5219\u5185\u6838\u7531\u4e8e\u4e0d\u77e5\u9053\u6709\u591a\u7ebf\u7a0b\u7684\u5b58\u5728\uff0c\u800c\u4f1a\u963b\u585e\u6574\u4e2a\u8fdb\u7a0b\u4ece\u800c\u963b\u585e\u6240\u6709\u7ebf\u7a0b; 2\u3001\u7528\u6237\u7ea7\u7ebf\u7a0b\u53ea\u80fd\u5360\u7528\u4e00\u4e2a\u6838\uff0c\u65e0\u6cd5\u505a\u5230\u5e76\u884c\u5904\u7406\uff0c\u4e0d\u80fd\u5229\u7528\u591a\u6838\u7684\u4f18\u52bf\uff1b 3\u3001\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u5f00\u59cb\u8fd0\u884c\uff0c\u90a3\u4e48\u8be5\u8fdb\u7a0b\u4e2d\u7684\u5176\u4ed6\u7ebf\u7a0b\u5c31\u4e0d\u80fd\u8fd0\u884c\uff0c\u9664\u975e\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u81ea\u52a8\u653e\u5f03CPU\uff1b \u4e00\u4e2a\u5355\u72ec\u7684\u8fdb\u7a0b\u5185\u90e8\uff0c\u6ca1\u6709\u65f6\u949f\u4e2d\u65ad\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u7528\u8f6e\u8f6c\u8c03\u5ea6\u7684\u65b9\u5f0f\u8c03\u5ea6\u7ebf\u7a0b\u3002\u9664\u975e\u67d0\u4e2a\u7ebf\u7a0b\u6309\u7167\u81ea\u5df1\u7684\u610f\u5fd7\u8fdb\u5165\u8fd0\u884c\u65f6\u7cfb\u7edf\uff0c\u5426\u5219\u8c03\u5ea6\u7a0b\u5e8f\u5c31\u6ca1\u6709\u4efb\u4f55\u673a\u4f1a \u3002 2\u300b\u5728\u5185\u6838\u4e2d\u5b9e\u73b0\u7ebf\u7a0b \uff1a\u7279\u70b9\uff1a\u5185\u6838\u652f\u6301\u5e76\u7ba1\u7406\u7ebf\u7a0b\uff0c\u4e0d\u518d\u9700\u8981\u8fd0\u884c\u65f6\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u4e5f\u6ca1\u6709\u7ebf\u7a0b\u8868\u3002\u5728\u5185\u6838\u4e2d\u6709\u7528\u6765\u8bb0\u5f55\u7cfb\u7edf\u4e2d\u6240\u6709\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u8868\u3002\u5f53\u67d0\u4e2a\u7ebf\u7a0b\u5e0c\u671b\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\u6216\u64a4\u9500\u4e00\u4e2a\u5df2\u6709\u7ebf\u7a0b\u65f6\uff0c\u5b83\u8fdb\u884c\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u8fd9\u4e2a\u7cfb\u7edf\u8c03\u7528\u901a\u8fc7\u5bf9\u7ebf\u7a0b\u8868\u7684\u66f4\u65b0\u5b8c\u6210\u7ebf\u7a0b\u521b\u5efa\u6216\u64a4\u9500\u5de5\u4f5c\u3002 \u4f18\u70b9: 1\u3001\u6240\u6709\u80fd\u591f\u963b\u585e\u7ebf\u7a0b\u7684\u8c03\u7528\u90fd\u4ee5\u7cfb\u7edf\u8c03\u7528\u7684\u5f62\u5f0f\u5b9e\u73b0\u3002 2\u3001\u5982\u679c\u67d0\u4e2a\u7ebf\u7a0b\u5f15\u8d77\u4e86\u9875\u9762\u6545\u969c\uff0c\u5185\u6838\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u68c0\u67e5\u8be5\u8fdb\u7a0b\u662f\u5426\u6709\u4efb\u4f55\u5176\u4ed6\u53ef\u8fd0\u884c\u7684\u7ebf\u7a0b\u3002 \u7f3a\u70b9: 1.\u5185\u6838\u7ea7\u7ebf\u7a0b\u5207\u6362\u4ee3\u4ef7\u66f4\u5927\u30022\u3002\u5185\u6838\u7ea7\u7ebf\u7a0b\u6570\u91cf\u6709\u9650\uff0c\u6269\u5c55\u6027\u6bd4\u4e0d\u4e0a\u7528\u6237\u7ea7\u7ebf\u7a0b\u3002 \u20033\u300b \u6df7\u5408\u5b9e\u73b0\uff1a\u4f7f\u7528\u5185\u6838\u7ea7\u7ebf\u7a0b\uff0c\u7136\u540e\u5c06\u7528\u6237\u7ea7\u7ebf\u7a0b\u4e0e\u67d0\u4e9b\u6216\u5168\u90e8\u5185\u6838\u7ebf\u7a0b\u591a\u8def\u590d\u7528\u3002 linux \u7ebf\u7a0b\u5b9e\u73b0 \u2003\u5b9e\u73b0\u673a\u5236\u4e0ewindows\u6709\u5f88\u5927\u5dee\u5f02\uff0c\u540e\u8005\u5728\u5185\u6838\u4e2d\u63d0\u4f9b\u4e86\u4e13\u95e8\u652f\u6301\u7ebf\u7a0b\u7684\u673a\u5236\uff0c\u5e76\u79f0\u5176\u4e3a\u8f7b\u91cf\u7ea7\u7ebf\u7a0b\u3002 \u2003\u7ebf\u7a0b\u7684\u521b\u5efa\u548c\u8fdb\u7a0b\u521b\u5efa\u8fc7\u7a0b\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5728\u8c03\u7528clone()\u662f\u9700\u8981\u4f20\u9012\u4e00\u4e9b\u53c2\u6570\u6807\u5fd7\u6765\u6307\u660e\u9700\u8981\u5171\u4eab\u7684\u8d44\u6e90\u3002 pid = clone(function, stack_ptr, sharing_flags, arg) \u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u5728\u5f53\u524d\u8fdb\u7a0b\u6216\u65b0\u7684\u8fdb\u7a0b\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff0c\u5177\u4f53\u4f9d\u8d56\u4e8e\u53c2\u6570sharing_flags. sharing_flags\u662f\u4e00\u4e2a\u4f4d\u56fe\uff0c\u5e38\u89c1\u7684\u4f4d\u542b\u4e49\u6709: \u5185\u6838\u7ebf\u7a0b \u72ec\u7acb\u8fd0\u884c\u5728\u5185\u6838\u7a7a\u95f4\u7684\u6807\u51c6\u8fdb\u7a0b\uff0c\u548c\u666e\u901a\u8fdb\u7a0b\u7684\u533a\u522b\u5728\u4e8e\u5185\u6838\u7ebf\u7a0b\u6ca1\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\u3002\u5b83\u4eec\u53ea\u5728\u5185\u6838\u7a7a\u95f4\u8fd0\u884c\uff0c\u4ece\u4e0d\u5207\u6362\u5230\u7528\u6237\u7a7a\u95f4\uff0c\u548c\u666e\u901a\u8fdb\u7a0b\u4e00\u6837\uff0c\u53ef\u4ee5\u88ab\u8c03\u5ea6\u548c\u62a2\u5360\u3002 \u8fdb\u7a0b\u8c03\u5ea6 \u591a\u4efb\u52a1: \u591a\u4efb\u52a1\u64cd\u4f5c\u7cfb\u7edf\u5c31\u662f\u80fd \u540c\u65f6\u5e76\u53d1\u4f4e\u4ea4\u4e92\u6267\u884c\u591a\u4e2a\u8fdb\u7a0b \u7684\u64cd\u4f5c\u7cfb\u7edf \u8fdb\u7a0b\u8c03\u5ea6\u7b56\u7565 \u51b3\u5b9a\u8c03\u5ea6\u7a0b\u5e8f\u4f55\u65f6\u8ba9\u4ec0\u4e48\u8fdb\u7a0b\u8fd0\u884c\uff0c\u8d1f\u8d23\u4f18\u5316\u4f7f\u7528\u5904\u7406\u5668\u65f6\u95f4\u3002 \u2003I/O\u6d88\u8017\u578b\u8fdb\u7a0b\uff1a\u8fd9\u91cc\u7684I/O\u662f\u4efb\u4f55\u7c7b\u578b\u7684\u53ef\u963b\u585e\u8d44\u6e90\uff0c\u8fdb\u7a0b\u7684\u5927\u90e8\u5206\u65f6\u95f4\u7528\u6765\u63d0\u4ea4I/O\u8bf7\u6c42\u6216\u662f\u7b49\u5f85I/O\u8bf7\u6c42\u3002 \u2003\u5904\u7406\u5668\u6d88\u8017\u578b\u8fdb\u7a0b\uff1a\u65f6\u95f4\u5927\u591a\u7528\u5728\u6267\u884c\u4ee3\u7801\u4e0a\uff0c\u9664\u975e\u88ab\u62a2\u5360\uff0c\u5426\u5219\u901a\u5e38\u4e00\u76f4\u5728\u8fd0\u884c\u3002 \u2003\u51fa\u4e8e\u7cfb\u7edf\u54cd\u5e94\u901f\u5ea6\u8003\u8651\uff0c\u8c03\u5ea6\u5668\u4f1a\u964d\u4f4e\u5904\u7406\u5668\u6d88\u8017\u578b\u8fdb\u7a0b\u7684\u8c03\u5ea6\u9891\u7387\uff0c\u800c\u5ef6\u957f\u5176\u6267\u884c\u65f6\u95f4\u3002 \u2003 \u8c03\u5ea6\u7b56\u7565\u901a\u5e38\u8981\u5728\u8fdb\u7a0b\u54cd\u5e94\u65f6\u95f4\u548c\u6700\u5927\u7cfb\u7edf\u5229\u7528\u7387(\u9ad8\u541e\u5410\u91cf)\u8fd9\u4e24\u4e2a\u76ee\u6807\u95f4\u5bfb\u6c42\u5e73\u8861 \u8fdb\u7a0b\u4f18\u5148\u7ea7\uff1alinux\u91c7\u7528\u4e86\u4e24\u79cd\u4f18\u5148\u7ea7\u8303\u56f4 \u2003nice\u503c\uff0c\u8303\u56f4[-20,19], \u8d8a\u5927\uff0c\u4f18\u5148\u7ea7\u8d8a\u5c0f, \u5728linux\u4e2d\uff0cnice\u503c\u4ee3\u8868\u65f6\u95f4\u7247\u6bd4\u4f8b\u3002 \u2003\u5b9e\u65f6\u4f18\u5148\u7ea7\uff0c\u9ed8\u8ba4\u8303\u56f4[0,99], \u8d8a\u5927\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u4efb\u4f55\u5b9e\u65f6\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\u90fd\u9ad8\u4e8e\u666e\u901a\u8fdb\u7a0b\u3002 \u65f6\u95f4\u7247 \u2003\u8868\u660e\u8fdb\u7a0b\u5728\u88ab\u62a2\u5360\u524d\u6240\u80fd\u6301\u7eed\u8fd0\u884c\u7684\u65f6\u95f4 Linux\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5 \u5b8c\u5168\u516c\u5e73\u8c03\u5ea6(CFS): \u5176\u662f\u4e00\u4e2a\u9488\u5bf9\u666e\u901a\u8fdb\u7a0b\u7684\u8c03\u5ea6\u7c7b\u3002 \u2003 \u8bbe\u8ba1\u7406\u5ff5 :\u8fdb\u7a0b\u8c03\u5ea6\u7684\u6548\u679c\u5982\u540c\u7cfb\u7edf\u5177\u5907\u4e00\u4e2a\u7406\u60f3\u4e2d\u7684\u5b8c\u7f8e\u591a\u4efb\u52a1\u5904\u7406\u5668\uff0c\u5728\u8fd9\u79cd\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u5c06\u83b7\u5f971/n\u7684\u5904\u7406\u5668\u65f6\u95f4(n\u662f\u53ef\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u91cf)\u3002 \u2003 \u5185\u90e8\u903b\u8f91 :CFS\u5e76\u6ca1\u6709\u76f4\u63a5\u5206\u914d\u65f6\u95f4\u7247\u5230\u8fdb\u7a0b\uff0c\u800c\u662f\u5c06\u5904\u7406\u5668\u7684\u4f7f\u7528\u6bd4\u5212\u5206\u7ed9\u4e86\u8fdb\u7a0b\uff0c\u8fd9\u4e2a\u6bd4\u4f8b\u4f1a\u53d7\u5230nice\u503c\u7684\u5f71\u54cd\uff1b\u6bcf\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\uff0c\u5faa\u73af\u8f6e\u8f6c\uff0cCFS\u7136\u540e\u9009\u62e9\u8fd0\u884c\u6700\u5c11(vruntime\u6700\u5c0f)\u7684\u8fdb\u7a0b\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u8fd0\u884c\u8fdb\u7a0b\u3002 \u2003 \u5177\u4f53\u5b9e\u73b0 : CFS\u4f7f\u7528\u7ea2\u9ed1\u6811\u6765\u7ec4\u7ec7\u53ef\u8fd0\u884c\u8fdb\u7a0b\u961f\u5217\uff0c\u5e76\u7528\u5176\u8fc5\u901f\u627e\u5230\u6700\u5c0fvruntime\u503c\u7684\u8fdb\u7a0b\u3002 vruntime \uff0c\u865a\u8fd0\u884c\u65f6\uff0c \u5206\u914d\u7ed9\u8fdb\u7a0b\u7684\u8fd0\u884c\u65f6\u95f4=\u8c03\u5ea6\u5468\u671f*\u8fdb\u7a0b\u6743\u91cd / \u6240\u6709\u53ef\u8fd0\u884c\u8fdb\u7a0b\u6743\u91cd\u4e4b\u548c (\u5f0f1) vruntime = \u5b9e\u9645\u8fd0\u884c\u65f6\u95f4*1024/\u8fdb\u7a0b\u6743\u91cd = \u8c03\u5ea6\u5468\u671f*1024/\u6240\u6709\u53ef\u8fd0\u884c\u8fdb\u7a0b\u6743\u91cd\u4e4b\u548c (\u5f0f2\uff0c1024\u662fnice\u4e3a0\u7684\u8fdb\u7a0b\u7684\u6743\u91cd) \u2003\u867d\u7136\u8fdb\u7a0b\u7684\u6743\u91cd\u4e0d\u540c\uff0c\u4f46vruntime\u7684\u589e\u957f\u901f\u5ea6\u662f\u76f8\u540c\u7684\uff1b\u5bf9\u4e8evruntime\u8f83\u5c0f\u7684\u8fdb\u7a0b\uff0c\u8bf4\u660e\u5176\u4e4b\u524d\u8fd0\u884c\u65f6\u95f4\u77ed\uff0c\u4f1a\u88ab\u4f18\u5148\u8c03\u5ea6\uff0c \u8fd9\u5373CFS\u516c\u5e73\u8c03\u5ea6\u7684\u7531\u6765\u3002 \u4f11\u7720\u548c\u5524\u9192 \u2003\u7b49\u5f85\u961f\u5217\u662f\u7531\u7b49\u5f85\u67d0\u4e9b\u4e8b\u4ef6\u53d1\u751f\u7684\u8fdb\u7a0b\u7ec4\u6210\u7684\u7b80\u5355\u94fe\u8868\u3002 \u4e0a\u4e0b\u6587\u5207\u6362: \u4ece\u4e00\u4e2a\u53ef\u6267\u884c\u8fdb\u7a0b\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u53ef\u6267\u884c\u8fdb\u7a0b \u7531shcedule()\u8c03\u7528context_switch()\u5b8c\u6210\u4e24\u9879\u57fa\u672c\u5de5\u4f5c: \u628a\u865a\u62df\u5185\u5b58\u4ece\u4e0a\u4e00\u4e2a\u8fdb\u7a0b\u6620\u5c04\u5207\u6362\u5230\u65b0\u8fdb\u7a0b\uff1b\u4ece\u4e0a\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5904\u7406\u5668\u72b6\u6001\u5207\u6362\u5230\u65b0\u8fdb\u7a0b\u7684\u5904\u7406\u5668\u72b6\u6001\uff0c\u5305\u62ec\u4fdd\u5b58\u3001\u6062\u590d\u6808\u4fe1\u606f\u548c\u5bc4\u5b58\u5668\u4fe1\u606f\u3002 need_resched: \u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u5305\u542b\u4e00\u4e2aneed_resched\u6807\u5fd7\uff0c\u7528\u6765\u8868\u660e\u662f\u5426\u9700\u8981\u91cd\u65b0\u6267\u884c\u4e00\u6b21\u8c03\u5ea6\u3002 \u7528\u6237\u62a2\u5360\uff1a\u4ece\u7cfb\u7edf\u8c03\u7528\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u6216\u8005\u4ece\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u65f6\uff0c\u5982\u679cneed_resched\u88ab\u8bbe\u7f6e\uff0c\u4f1a\u5bfc\u81f4schedule()\u88ab\u8c03\u7528\uff0c\u5185\u6838\u4f1a\u9009\u62e9\u4e00\u4e2a\u5176\u4ed6\u66f4\u5408\u9002\u7684\u8fdb\u7a0b\u8fd0\u884c\u3002 \u5185\u6838\u62a2\u5360\uff1a\u6bcf\u4e2a\u8fdb\u7a0b\u7684thread_info\u4e2d\u5f15\u5165\u4e86preemept_count\u8ba1\u6570\u5668\uff0c\u521d\u59cb\u4e3a0\uff0c\u4f7f\u7528\u9501\u65f6\uff0c+1\uff0c\u91ca\u653e\u9501\u65f6\uff0c-1\uff1b\u5f53\u4e3a0\u65f6\uff0c\u5185\u6838\u5c31\u53ef\u6267\u884c\u62a2\u5360\u3002 \u5185\u6838\u62a2\u5360\u4f1a\u53d1\u751f\u5728: \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u6b63\u5728\u6267\u884c\uff0c\u4e14\u8fd4\u56de\u5185\u6838\u7a7a\u95f4\u4e4b\u524d\uff1b \u5185\u6838\u4ee3\u7801\u5177\u6709\u62a2\u5360\u6027\u7684\u65f6\u5019\uff1b \u5185\u6838\u4e2d\u7684\u4efb\u52a1\u663e\u793a\u8c03\u7528schedule\uff1b \u5982\u679c\u5185\u6838\u4e2d\u7684\u4efb\u52a1\u963b\u585e \u5b9e\u65f6\u8c03\u5ea6\u7b56\u7565 \u4e2d\u65ad \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7684\u5c40\u9650: \u4e2d\u65ad\u5904\u7406\u6d41\u7a0b\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e0a\u534a\u90e8\u662f\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u5b8c\u6210\u5bf9\u786c\u4ef6\u4e2d\u65ad\u7684\u5373\u65f6\u54cd\u5e94\uff1b\u4e0b\u534a\u90e8\u6267\u884c\u4e0e\u4e2d\u65ad\u5904\u7406\u5bc6\u5207\u76f8\u5173\u4f46\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u672c\u8eab\u4e0d\u6267\u884c\u7684\u5de5\u4f5c\u3002\u4e0b\u534a\u90e8\u4e00\u822c\u5728\u4e2d\u65ad\u5904\u7406\u8fd4\u56de\u540e\u5c31\u7acb\u5373\u6267\u884c\uff0c\u800c\u4e14\u6267\u884c\u671f\u95f4\u5141\u8bb8\u54cd\u5e94\u6240\u6709\u4e2d\u65ad\u3002 \u8fd9\u79cd\u8bbe\u8ba1\u53ef\u4f7f\u7cfb\u7edf\u5904\u4e8e\u4e2d\u65ad\u5c4f\u853d\u72b6\u6001\u7684\u65f6\u95f4\u5c3d\u53ef\u80fd\u77ed\uff0c\u4ee5\u6b64\u6765\u63d0\u9ad8\u7cfb\u7edf\u7684\u54cd\u5e94\u65f6\u95f4\u3002 \u4e0b\u534a\u90e8\u5b9e\u73b0\u673a\u5236\uff1a\u8f6f\u4e2d\u65ad\u3001tasklet\u3001\u5de5\u4f5c\u961f\u5217 \u5185\u6838\u540c\u6b65 \u5e76\u884c&\u5e76\u53d1 \u2003\u5982\u679c\u67d0\u4e2a\u7cfb\u7edf\u652f\u6301\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u52a8\u4f5c\uff08Action\uff09\u540c\u65f6\u5b58\u5728\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7cfb\u7edf\u5c31\u662f\u4e00\u4e2a\u5e76\u53d1(concurrent)\u7cfb\u7edf\u3002\u5982\u679c\u67d0\u4e2a\u7cfb\u7edf\u652f\u6301\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u52a8\u4f5c\u540c\u65f6\u6267\u884c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7cfb\u7edf\u5c31\u662f\u4e00\u4e2a\u5e76\u884c(parallel)\u7cfb\u7edf\u3002 \u2003\u5728\u5e76\u53d1\u7a0b\u5e8f\u4e2d\u53ef\u4ee5\u540c\u65f6\u62e5\u6709\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u7ebf\u7a0b\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u7a0b\u5e8f\u5728\u5355\u6838\u5904\u7406\u5668\u4e0a\u8fd0\u884c\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u7ebf\u7a0b\u5c06\u4ea4\u66ff\u5730\u6362\u5165\u6216\u8005\u6362\u51fa\u5185\u5b58\u3002\u8fd9\u4e9b\u7ebf\u7a0b\u662f\u540c\u65f6\u201c\u5b58\u5728\u201d\u7684\u2014\u2014\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u5904\u4e8e\u6267\u884c\u8fc7\u7a0b\u4e2d\u7684\u67d0\u4e2a\u72b6\u6001\u3002\u5982\u679c\u7a0b\u5e8f\u80fd\u591f\u5e76\u884c\u6267\u884c\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u662f\u8fd0\u884c\u5728\u591a\u6838\u5904\u7406\u5668\u4e0a\u3002\u6b64\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u5c06\u5206\u914d\u5230\u4e00\u4e2a\u72ec\u7acb\u7684\u5904\u7406\u5668\u6838\u4e0a\uff0c\u56e0\u6b64\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u3002 \u2003\u5e76\u884c\u201d\u6982\u5ff5\u662f\u201c\u5e76\u53d1\u201d\u6982\u5ff5\u7684\u4e00\u4e2a\u5b50\u96c6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u62e5\u6709\u591a\u4e2a\u7ebf\u7a0b\u6216\u8005\u8fdb\u7a0b\u7684\u5e76\u53d1\u7a0b\u5e8f\uff0c\u4f46\u5982\u679c\u6ca1\u6709\u591a\u6838\u5904\u7406\u5668\u6765\u6267\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u4ee5\u5e76\u884c\u65b9\u5f0f\u6765\u8fd0\u884c\u4ee3\u7801\u3002 \u540c\u6b65 \u4e34\u754c\u533a: \u5bf9\u5171\u4eab\u5185\u5b58\u8fdb\u884c\u8bbf\u95ee\u7684\u7a0b\u5e8f\u7247\u6bb5\u79f0\u4f5c\u4e34\u754c\u533a\u57df(critical region)\u6216\u4e34\u754c\u533a(critical section)\u3002 \u82e5\u4e24\u4e2a\u8fdb\u7a0b\u4e0d\u53ef\u80fd\u540c\u65f6\u5904\u4e8e\u4e34\u754c\u533a\u57df\uff0c\u5c31\u80fd\u907f\u514d\u7ade\u4e89\u6761\u4ef6\u3002 \u7ade\u6001\u6761\u4ef6\uff08race condition\uff09\uff1a\u5373\u591a\u4e2a\u8fdb\u7a0b\u8bfb\u5199\u67d0\u4e9b\u5171\u4eab\u6570\u636e\uff0c\u800c\u6700\u540e\u7684\u7ed3\u679c\u53d6\u51b3\u4e8e\u8fdb\u7a0b\u8fd0\u884c\u7684\u7cbe\u786e\u65f6\u5e8f\u3002 \u540c\u6b65: \u4e3a\u4e86\u5728\u907f\u514d\u7ade\u4e89\u6761\u4ef6\u7684\u540c\u65f6\uff0c\u4fdd\u8bc1\u4f7f\u7528\u5171\u4eab\u6570\u636e\u7684\u5e76\u53d1\u8fdb\u7a0b\u80fd\u6b63\u786e\u548c\u9ad8\u6548\u5730\u534f\u4f5c\uff0c\u9700\u8981\u6ee1\u8db34\u4e2a\u6761\u4ef6\uff1a 1\u3001\u4efb\u4f55\u4e24\u4e2a\u8fdb\u7a0b\u4e0d\u80fd\u540c\u65f6\u5904\u4e8e\u5176\u4e34\u754c\u533a\u3002 2\u3001\u4e0d\u8981\u5bf9CPU\u7684\u901f\u5ea6\u548c\u6570\u91cf\u505a\u4efb\u4f55\u5047\u8bbe\u3002 3\u3001\u4e34\u754c\u533a\u5916\u8fd0\u884c\u7684\u8fdb\u7a0b\u4e0d\u5f97\u963b\u585e\u5176\u4ed6\u8fdb\u7a0b\u3002 4\u3001\u4e0d\u5f97\u4f7f\u8fdb\u7a0b\u65e0\u9650\u671f\u7b49\u5f85\u8fdb\u5165\u4e34\u754c\u533a\u3002 \u9700\u8981\u8fdb\u7a0b\u540c\u6b65\u539f\u56e0 \u9501 \u52a0\u9501: \u8bbe\u7f6e\u4e00\u4e2a\u9501\u53d8\u91cf\uff0c\u53ef\u4ee5\u8bbe\u521d\u59cb\u4e3a0\uff0c\u6709\u8fdb\u7a0b\u60f3\u8fdb\u5165\u4e34\u754c\u533a\u65f6\uff0c\u5148\u5bf9\u9501\u53d8\u91cf\u6d4b\u8bd5\uff0c\u4e3a0\u5219\u8fdb\uff0c\u8fdb\u5165\u540e\u5c06\u5176\u8bbe\u4e3a1\u30020\u8868\u793a\u4e34\u754c\u533a\u6ca1\u8fdb\u7a0b\uff0c1\u4ee3\u8868\u5df2\u6709\u8fdb\u7a0b\u8fdb\u5165\u4e34\u754c\u533a\u3002\u4f46\u662f\u4ecd\u5b58\u5728\u95ee\u9898\uff0c\u5f53\u8fdb\u7a0ba\u628a\u9501\u53d8\u91cf\u8bbe\u4e3a1\u4e4b\u524d\u6070\u597d\u53c8\u6709\u8fdb\u7a0bb\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u4e34\u754c\u533a\u5c06\u67092\u4e2a\u8fdb\u7a0b\u3002\u5bf9\u4e8e\u6b64\u95ee\u9898\uff0c\u4e00\u822c\u5bf9\u83b7\u5f97\u9501\u548c\u6539\u53d8\u9501\u53d8\u91cf\u91c7\u7528\u539f\u5b50\u64cd\u4f5c\uff0c\u5982\u4e0b\u9762\u7684TSL\u6307\u4ee4\u3002 TSL RX, LOCK\uff1a\u6d4b\u8bd5\u5e76\u52a0\u9501\uff0c\u5c06\u4e00\u4e2a\u5185\u5b58\u5b57\u8bfb\u53d6\u5230\u5bc4\u5b58\u5668RX\u4e2d\uff0c\u7136\u540e\u5728\u8be5\u5185\u5b58\u5730\u5740\u8bbe\u7f6e\u4e00\u4e2a\u975e0\u503c\uff0c\u5e76\u4fdd\u8bc1\u8bfb\u5199\u64cd\u4f5c\u4e0d\u53ef\u5206\u5272\u3002\u5176\u5b83cpu\u4e0d\u80fd\u5728TSL\u6307\u4ee4\u7ed3\u675f\u4e4b\u524d\u8bbf\u95ee\u8be5\u5185\u5b58\u5b57\u3002 \u6267\u884cTSL\u6307\u4ee4\uff08test and set lock\uff09\u7684cpu\u5c06\u9501\u4f4f\u5185\u5b58\u603b\u7ebf\uff0c\u9632\u6b62\u5176\u5b83cpu\u5728\u6b64\u6307\u4ee4\u5b8c\u6210\u524d\u8bbf\u95ee\u5185\u5b58\u3002 \u5177\u4f53\u65b9\u6cd5\uff1a\u4f7f\u7528\u4e00\u4e2a\u5171\u4eab\u53d8\u91cflock\uff0clock\u4e3a0\u65f6\u4efb\u4f55\u8fdb\u7a0b\u90fd\u80fd\u4f7f\u7528TSL\u6307\u4ee4\uff0c\u5e76\u5c06lock\u8bbe\u4e3a1\uff0c\u8bfb\u5199\u5171\u4eab\u5185\u5b58\uff1b\u64cd\u4f5c\u7ed3\u675f\u540e\uff0c\u5229\u7528move\u6307\u4ee4\u5c06lock\u91cd\u65b0\u8bbe\u4e3a0. \uff08\u53ef\u4f7f\u7528XCHG\u6307\u4ee4\u66ff\u4ee3TSL\uff0c\u5b83\u539f\u5b50\u6027\u5730\u4ea4\u6362\u4e24\u4e2a\u4f4d\u7f6e\u7684\u5185\u5bb9\u3002\uff09 \u6b7b\u9501 \u9501\u7684\u4e89\u7528 \u2003\u6307\u5f53\u9501\u6b63\u5728\u88ab\u5360\u7528\u65f6\uff0c\u6709\u5176\u4ed6\u8fdb\u7a0b\u8bd5\u56fe\u83b7\u5f97\u8be5\u9501\uff1b\u5f53\u6709\u591a\u4e2a\u8fdb\u7a0b\u90fd\u5728\u7b49\u5f85\u83b7\u5f97\u8be5\u9501\u65f6\uff0c\u9501\u5c31\u5904\u4e8e\u9ad8\u5ea6\u4e89\u7528\u72b6\u6001\u3002 \u2003\u9501\u7684\u4f5c\u7528\u4f7f\u5f97\u7a0b\u5e8f\u4ee5\u4e32\u884c\u65b9\u5f0f\u8bbf\u95ee\u8d44\u6e90\uff0c\u4f1a\u964d\u4f4e\u7cfb\u7edf\u6027\u80fd\u3002\u88ab\u9ad8\u5ea6\u4e89\u7528\u7684\u9501(\u9891\u7e41\u88ab\u5360\u7528\u6216\u957f\u65f6\u95f4\u88ab\u5360\u7528)\u4f1a\u6210\u4e3a\u7cfb\u7edf\u7684\u74f6\u9888\u3002 \u2003\u5f53\u9501\u4e89\u7528\u4e25\u91cd\u65f6\uff0c\u52a0\u9501\u592a\u7c97(\u52a0\u9501\u7684\u7c97\u7c92\u5ea6\u6307\u88ab\u4fdd\u62a4\u7684\u6570\u636e\u89c4\u6a21\uff0c\u8fc7\u7c97\u7684\u9501\u7528\u6765\u4fdd\u62a4\u5927\u5757\u6570\u636e\uff0c\u7cbe\u7ec6\u7684\u9501\u5219\u4fdd\u62a4\u8f83\u5c0f\u7684\u5143\u7d20)\u4f1a\u964d\u4f4e\u6269\u5c55\u6027\uff1b\u9501\u4e89\u7528\u4e0d\u660e\u663e\u65f6\uff0c\u52a0\u9501\u592a\u7ec6\u4f1a\u52a0\u5927\u7cfb\u7edf\u5f00\u9500\uff0c\u5e26\u6765\u6d6a\u8d39\u3002 \u5185\u6838\u540c\u6b65\u65b9\u6cd5 \u539f\u5b50\u64cd\u4f5c: \u4fdd\u8bc1\u6307\u4ee4\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u88ab\u6253\u65ad\uff0c\u5185\u6838\u63d0\u4f9b\u4e86\u4e24\u79cd\u539f\u5b50\u64cd\u4f5c\u63a5\u53e3\uff0c\u5206\u522b\u9488\u5bf9\u6574\u6570\u548c\u5355\u72ec\u7684\u4f4d\u8fdb\u884c\u64cd\u4f5c\u3002 \u81ea\u65cb\u9501 \uff1a\u662f\u6307\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u8bd5\u56fe\u83b7\u53d6\u9501\u7684\u65f6\u5019\uff0c\u5982\u679c\u9501\u5df2\u7ecf\u88ab\u5176\u5b83\u7ebf\u7a0b\u83b7\u53d6\uff0c\u90a3\u4e48\u8be5\u7ebf\u7a0b\u5c06\u5faa\u73af\u7b49\u5f85\uff0c\u7136\u540e\u4e0d\u65ad\u7684\u5224\u65ad\u9501\u662f\u5426\u80fd\u591f\u88ab\u6210\u529f\u83b7\u53d6\uff0c\u76f4\u5230\u83b7\u53d6\u5230\u9501\u624d\u4f1a\u9000\u51fa\u5faa\u73af\u3002\u81ea\u65cb\u9501\u4f1a\u9020\u6210\u5fd9\u7b49\u5f85\u3002\u56e0\u6b64 \u81ea\u65cb\u9501 \u4e00\u822c\u9002\u7528\u4e8e\u52a0\u9501\u65f6\u95f4\u4e0d\u957f\uff0c\u4e14\u4ee3\u7801\u4e0d\u4f1a\u7761\u7720(\u4f8b\u5982\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f) \uff0c\u53cd\u4e4b\u4f7f\u7528 \u4fe1\u53f7\u91cf \u66f4\u5408\u9002 \u3002 \u2003\u8bfb/\u5199\u81ea\u65cb\u9501\uff1a\u4e00\u4e2a\u6216\u591a\u4e2a\u4efb\u52a1\u53ef\u4ee5\u5e76\u53d1\u5730\u6301\u6709\u8bfb\u8005\u9501\uff0c\u4f46\u540c\u65f6\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u4efb\u52a1\u6301\u6709\u5199\u9501\u3002\u56e0\u6b64 \u4e0d\u80fd\u5c06\u4e00\u4e2a\u9501\u7531\u8bfb\u9501\u5347\u7ea7\u4e3a\u5199\u9501\uff0c\u5426\u5219\u5982\u679c\u8bfb\u9501\u6ca1\u6709\u88ab\u91ca\u653e\uff0c\u5199\u9501\u5c06\u4f1a\u81ea\u65cb\uff0c\u7b49\u5f85\u6240\u6709\u8bfb\u8005\u91ca\u653e\u9501\uff0c\u5305\u62ec\u5176\u672c\u8eab\uff0c\u4ece\u800c\u9020\u6210\u6b7b\u9501 \u3002 \u4fe1\u53f7\u91cf \u2003\u4fe1\u53f7\u91cf\u4e0d\u4f1a\u7981\u6b62\u5185\u6838\u62a2\u5360\uff0c\u6301\u6709\u4fe1\u53f7\u91cf\u7684\u4ee3\u7801\u53ef\u4ee5\u88ab\u62a2\u5360; \u4e92\u65a5\u4f53(mutex) \u5b9e\u73b0\u4e92\u65a5\u7684\u7279\u5b9a\u7761\u7720\u9501\uff0c\u5176\u884c\u4e3a\u548c\u4f7f\u7528\u8ba1\u65701\u7684\u4e92\u65a5\u4fe1\u53f7\u91cf\u7c7b\u4f3c\uff0c\u4f46\u64cd\u4f5c\u63a5\u53e3\u66f4\u7b80\u5355\uff0c\u9650\u5236\u6027\u66f4\u5f3a\uff0c\u9002\u5e94\u4e8e\u5b9a\u5411\u6027\u5f3a\u7684\u573a\u666f\u3002 \u8fd9\u91cc\u7684\u4e92\u65a5\u4f53\u4e5f\u5305\u62ec\u4fe1\u53f7\u91cf\uff1b\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u4e0d\u80fd\u7761\u7720\uff0c\u56e0\u6b64\u53ea\u80fd\u4f7f\u7528\u81ea\u65cb\u9501 \u5b8c\u6210\u53d8\u91cf completion variable: \u5982\u679c\u5728\u5185\u6838\u4e2d \u4e00\u4e2a\u4efb\u52a1\u9700\u8981\u53d1\u51fa\u4fe1\u53f7\u901a\u77e5\u53e6\u4e00\u4efb\u52a1\u53d1\u751f\u4e86\u7279\u5b9a\u4e8b\u4ef6 \uff0c\u5229\u7528\u5b8c\u6210\u53d8\u91cf\u662f\u4f7f\u4e24\u4e2a\u4efb\u52a1\u5f97\u4ee5\u540c\u6b65\u7684\u7b80\u5355\u65b9\u6cd5\u3002\u5982\u679c\u4e00\u4e2a\u4efb\u52a1\u8981\u6267\u884c\u4e00\u4e9b\u5de5\u4f5c\u65f6\uff0c\u53e6\u4e00\u4e2a\u4efb\u52a1\u5c31\u4f1a\u5728\u5b8c\u6210\u53d8\u91cf\u4e0a\u7b49\u5f85\u3002\u5f53\u8fd9\u4e2a\u4efb\u52a1\u5b8c\u6210\u5de5\u4f5c\u65f6\uff0c\u5c31\u4f1a\u4f7f\u7528\u5b8c\u6210\u53d8\u91cf\u53bb\u5524\u9192\u5728\u7b49\u5f85\u7684\u4efb\u52a1\u3002 \u2003\u4f8b\u5982\u5f53\u5b50\u8fdb\u7a0b\u6267\u884c\u6216\u9000\u51fa\u65f6\uff0cvfork()\u7cfb\u7edf\u8c03\u7528\u4f7f\u7528\u8fd9\u4e9b\u5b8c\u6210\u53d8\u91cf\u6765\u5524\u9192\u7236\u8fdb\u7a0b\u3002 \u5185\u5b58\u7ba1\u7406 \u7406\u89e3\u5185\u5b58\u7a7a\u95f4 \u2003\u4ee532\u4f4dx86 CPU\u4e3a\u4f8b: 1\u3001x86 CPU\u91c7\u7528\u4e86\u6bb5\u9875\u5f0f\u5730\u5740\u6620\u5c04\u6a21\u578b\u3002\u8fdb\u7a0b\u4ee3\u7801\u4e2d\u7684\u5730\u5740\u4e3a\u903b\u8f91\u5730\u5740\uff0c \u7ecf\u8fc7\u6bb5\u9875\u5f0f\u5730\u5740\u6620\u5c04(\u5148\u6620\u5c04\u5230\u7ebf\u6027\u7a7a\u95f4\uff0c\u5f97\u5230\u7ebf\u6027\u5730\u5740\uff0c\u518d\u6839\u636e\u9875\u8868\u8fdb\u884c\u6620\u5c04)\u540e\uff0c\u624d\u771f\u6b63\u8bbf\u95ee\u7269\u7406\u5185\u5b58\u3002 2\u3001Linux\u7b80\u5316\u4e86\u5206\u6bb5\u673a\u5236,\u4f7f\u5f97\u865a\u62df\u5730\u5740\u4e0e\u7ebf\u6027\u5730\u5740\u603b\u662f\u4e00\u81f4,\u56e0\u6b64,Linux\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e5f\u4e3a0\uff5e4G,\u5e76\u88ab\u5206\u4e3a\u4e24\u90e8\u5206\u3002 \u6700\u9ad8\u76841GB(\u4ece\u865a\u62df\u5730\u57400xC0000000\u52300xFFFFFFFF)\u4f9b\u5185\u6838\u4f7f\u7528\uff0c\u79f0\u4e3a\u201c\u5185\u6838\u7a7a\u95f4\u201d; \u4f4e\u4f4d\u7f6e3GB(\u4ece\u865a\u62df\u5730\u57400x00000000\u52300xBFFFFFFF\uff09\uff0c\u4f9b\u5404\u4e2a\u8fdb\u7a0b\u4f7f\u7528\uff0c\u79f0\u4e3a\u201c\u7528\u6237\u7a7a\u95f4\u3002 \u56e0\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u8fdb\u5165\u5185\u6838\uff0c\u56e0\u6b64\uff0cLinux\u5185\u6838\u7531\u7cfb\u7edf\u5185\u7684\u6240\u6709\u8fdb\u7a0b\u5171\u4eab\u3002 \u4e8e\u662f\uff0c\u4ece\u5177\u4f53\u8fdb\u7a0b\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u62e5\u67094GB\u7684\u865a\u62df\u7a7a\u95f4, \u5176\u4e2d3GB\u7528\u6237\u7a7a\u95f4\u4e3a\u5404\u8fdb\u7a0b\u72ec\u4eab\uff0c 1GB\u5185\u6838\u7a7a\u95f4\u4e3a\u6240\u6709\u8fdb\u7a0b\u548c\u5185\u6838\u5171\u4eab\u3002 \u7528\u6237\u8fdb\u7a0b\u6700\u5927\u53ef\u4ee5\u8bbf\u95ee3GB\uff0c\u5185\u6838\u4ee3\u7801\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u7269\u7406\u5185\u5b58\u3002 3\u3001\u5185\u6838\u7a7a\u95f4\u4e2d\u5b58\u653e\u7684\u662f\u5185\u6838\u4ee3\u7801\u548c\u6570\u636e\uff0c\u800c\u8fdb\u7a0b\u7684\u7528\u6237\u7a7a\u95f4\u4e2d\u5b58\u653e\u7684\u662f\u7528\u6237\u7a0b\u5e8f\u7684\u4ee3\u7801\u548c\u6570\u636e\u3002 \u4e0d\u7ba1\u662f\u5185\u6838\u7a7a\u95f4\u8fd8\u662f\u7528\u6237\u7a7a\u95f4\uff0c\u5b83\u4eec\u90fd\u5904\u4e8e\u865a\u62df\u7a7a\u95f4\u4e2d\u3002 4\u3001\u867d\u7136\u5185\u6838\u7a7a\u95f4\u5360\u636e\u4e86\u6bcf\u4e2a\u865a\u62df\u7a7a\u95f4\u4e2d\u7684\u6700\u9ad81GB\uff0c\u4f46\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\u5374\u603b\u662f\u4ece\u6700\u4f4e\u5730\u5740(0x00000000)\u5f00\u59cb\u3002 \u5bf9\u5185\u6838\u7a7a\u95f4\u6765\u8bf4\uff0c\u5730\u5740\u6620\u5c04\u662f\u7ebf\u6027\u6620\u5c04\uff0c0xC0000000(\u53733GB)\u5c31\u662f\u7269\u7406\u5730\u5740\u4e0e\u7ebf\u6027\u5730\u5740\u4e4b\u95f4\u7684\u4f4d\u79fb\u91cf, \u5728Linux\u6e90\u7801\u4e2d\u53eb\u505aPAGE_OFFSET\u3002 5\u3001\u5b9e\u9645\u4e2d\uff0c\u5185\u6838\u5730\u5740\u7a7a\u95f40xc0000000 ~ 0xfffffff\u76841GB\u5730\u5740\u7a7a\u95f4\u5e76\u975e\u5168\u90e8\u7528\u6765\u8fdb\u884c\u7b80\u5355\u7684\u5730\u5740\u6620\u5c04\uff0c \u800c\u662f\u5212\u5206\u4e3a\u4e09\u90e8\u5206ZONE_DMA(<16MB), ZONE_NORMAL(16~896MB)\u548c ZONE_HIGHMEM(>=896MB), \u5176\u4e2dZONE_HIGHMEM\u79f0\u4f5c\u9ad8\u7aef\u5185\u5b58\uff0c\u5171128MB\u3002 6\u3001\u5f53\u5185\u6838\u60f3\u8bbf\u95ee\u9ad8\u4e8e896MB\u7684\u7269\u7406\u5185\u5b58\u65f6\uff0c\u4f1a\u4ece0xF8000000 ~ 0xFFFFFFFF\u5730\u5740\u7a7a\u95f4\u8303\u56f4\u5185 \u627e\u4e00\u6bb5\u76f8\u5e94\u5927\u5c0f\u7a7a\u95f2\u7684\u903b\u8f91\u5730\u5740\u7a7a\u95f4\uff0c\u501f\u7528\u8fd9\u6bb5\u903b\u8f91\u5730\u5740\u7a7a\u95f4\uff0c\u5efa\u7acb\u6620\u5c04\u5230\u60f3\u8bbf\u95ee\u7684\u5b9e\u9645\u7269\u7406\u5185\u5b58\u3002 7\u3001task_struct\u4e2d\u7684PGD\u6210\u5458\u5b58\u653e\u7740\u6307\u5411\u5f53\u524d\u8fdb\u7a0b\u9875\u76ee\u5f55\u7684\u6307\u9488\uff0c\u5f53\u8be5\u8fdb\u7a0b\u88ab\u8c03\u5ea6\u8fdb\u5165\u8fd0\u884c\u6001\u65f6\uff0c \u5185\u6838\u5c06\u8be5\u8fdb\u7a0b\u7684\u7684\u9875\u76ee\u5f55\u8868\u7684\u7269\u7406\u5730\u5740\u88c5\u5165CR3\u5bc4\u5b58\u5668\uff0c\u56e0\u6b64 \u4e0d\u540c\u8fdb\u7a0b\u8bbf\u95ee\u865a\u62df\u7a7a\u95f4\u4e2d\u7684\u76f8\u540c\u5730\u5740\uff0c \u7ecf\u7531\u4e0d\u540c\u7684\u9875\u76ee\u5f55\u8868\u6620\u5c04\u5230\u4e0d\u540c\u7684\u7269\u7406\u5730\u5740\uff0c\u800c\u4e0d\u4f1a\u6df7\u6dc6\u3002 \u5185\u5b58\u7a7a\u95f4\u7684\u4e09\u79cd\u63cf\u8ff0\u5355\u4f4d: \u9875\uff1a \u533a\uff1a \u5b57\u8282\uff1a\u5185\u6838\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u4e09\u79cd\u51fd\u6570\u6216\u8005\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684\u5185\u5b58\uff0c\u4e0d\u8fc7kmalloc\u548cvmalloc\u662f\u5206\u914d\u7684\u662f\u5185\u6838\u7684\u5185\u5b58,malloc\u5206\u914d\u7684\u662f\u7528\u6237\u7684\u5185\u5b58\u3002 malloc\\kmalloc\\vmalloc: 1\u3001 \u7531malloc()\u8fd4\u56de\u7684\u9875\u5728\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5185\u662f\u8fde\u7eed\u7684\uff0c\u4f46\u662f\u5e76\u4e0d\u4fdd\u8bc1\u5b83\u4eec\u5728\u7269\u7406RAM\u4e2d\u4e5f\u662f\u8fde\u7eed\u7684\uff1b kmalloc()\u51fd\u6570\u786e\u4fdd\u9875\u5728\u7269\u7406\u5730\u5740\u4e0a\u662f\u8fde\u7eed\u7684\uff0c\u865a\u62df\u5730\u5740\u81ea\u7136\u4e5f\u662f\u8fde\u7eed\u7684\uff1b vmalloc()\u51fd\u6570\u53ea\u786e\u4fdd\u9875\u5728\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5185\u662f\u8fde\u7eed\u7684\uff0c\u5b83\u901a\u8fc7\u5206\u914d\u975e\u8fde\u7eed\u7684\u7269\u7406\u5185\u5b58\u5757\uff0c \u518d\u4fee\u6b63\u9875\u8868\uff0c\u628a\u5185\u5b58\u6620\u5c04\u5230\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u7684\u8fde\u7eed\u533a\u57df\u4e2d\uff0c\u6765\u5b9e\u73b0\u76ee\u7684\u3002 2\u3001vmalloc\u6bd4kmalloc\u8981\u6162\u3002\u5c3d\u7ba1\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u624d\u9700\u8981\u7269\u7406\u4e0a\u8fde\u7eed\u7684\u5185\u5b58\u5757\uff0c\u4f46\u662f\u5f88\u591a\u5185\u6838\u4ee3\u7801\u90fd\u7528kmalloc\u6765\u83b7\u5f97\u5185\u5b58\uff0c \u800c\u4e0d\u662fvmalloc\u3002\u8fd9\u4e3b\u8981\u662f\u51fa\u4e8e\u6027\u80fd\u7684\u8003\u8651\u3002vmalloc\u51fd\u6570\u4e3a\u4e86\u628a\u7269\u7406\u5185\u5b58\u4e0a\u4e0d\u8fde\u7eed\u7684\u9875\u8f6c\u6362\u4e3a\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e0a\u8fde\u7eed\u7684\u9875\uff0c \u5fc5\u987b\u4e13\u95e8\u5efa\u7acb\u9875\u8868\u9879\u3002\u7cdf\u7cd5\u7684\u662f\uff0c\u901a\u8fc7vmalloc\u83b7\u5f97\u7684\u9875\u5fc5\u987b\u4e00\u4e2a\u4e2a\u5730\u8fdb\u884c\u6620\u5c04\uff0c\u56e0\u4e3a\u5b83\u4eec\u7269\u7406\u4e0a\u662f\u4e0d\u8fde\u7eed\u7684\uff0c \u8fd9\u5c31\u4f1a\u5bfc\u81f4\u6bd4\u76f4\u63a5\u5185\u5b58\u6620\u5c04\u5927\u5f97\u591a\u7684TLB(Traslation Lookaside Buffer, \u7528\u4ee5\u7f13\u5b58\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb)\u6296\u52a8\uff0c vmalloc\u4ec5\u5728\u4e0d\u5f97\u5df2\u65f6\u624d\u4f1a\u7528\uff0c\u4f8b\u5982\u4e3a\u4e86\u83b7\u5f97\u5927\u5757\u5185\u5b58\u65f6\uff0c\u800c\u7269\u7406\u7a7a\u95f4\u4e0d\u5b58\u5728\u5982\u6b64\u5927\u7684\u8fde\u7eed\u5185\u5b58\u3002 \u5185\u5b58\u788e\u7247 \u5185\u5b58\u788e\u7247\u901a\u5e38\u5206\u4e3a\u5185\u90e8\u788e\u7247\u548c\u5916\u90e8\u788e\u7247\uff1a 1\u3001\u5185\u90e8\u788e\u7247\u662f\u7531\u4e8e\u91c7\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\u5206\u533a\uff0c\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u4e0d\u80fd\u5b8c\u5168\u4f7f\u7528\u5206\u7ed9\u5b83\u7684\u56fa\u5b9a\u5185\u5b58\u533a\u57df\u65f6\u5c31\u4ea7\u751f\u4e86\u5185\u90e8\u788e\u7247\uff0c\u901a\u5e38\u5185\u90e8\u788e\u7247\u96be\u4ee5\u5b8c\u5168\u907f\u514d\uff1b 2\u3001\u5916\u90e8\u788e\u7247\u662f\u7531\u4e8e\u67d0\u4e9b\u672a\u5206\u914d\u7684\u8fde\u7eed\u5185\u5b58\u533a\u57df\u592a\u5c0f\uff0c\u4ee5\u81f3\u4e8e\u4e0d\u80fd\u6ee1\u8db3\u4efb\u610f\u8fdb\u7a0b\u7684\u5185\u5b58\u5206\u914d\u8bf7\u6c42\uff0c\u4ece\u800c\u4e0d\u80fd\u88ab\u8fdb\u7a0b\u5229\u7528\u7684\u5185\u5b58\u533a\u57df\u3002 \u2003\u907f\u514d\u5916\u90e8\u788e\u7247\u7684\u65b9\u6cd5\u6709\u4e24\u79cd: 1\u3001 \u5229\u7528\u5206\u9875\u5355\u5143\u628a\u4e00\u7ec4\u975e\u8fde\u7eed\u7684\u7a7a\u95f2\u9875\u6620\u5c04\u5230\u8fde\u7eed\u7684\u7ebf\u6027\u5730\u5740 (\u4f7f\u7528\u5730\u5740\u8f6c\u6362\u6280\u672f\uff0c\u628a\u975e\u8fde\u7eed\u7684\u7269\u7406\u5730\u5740\u8f6c\u6362\u6210\u8fde\u7eed\u7684\u7ebf\u6027\u5730\u5740); \u73b0\u5728\u666e\u904d\u91c7\u7528\u7684\u6bb5\u9875\u5f0f\u5185\u5b58\u5206\u914d\u65b9\u5f0f\u5c31\u662f\u5c06\u8fdb\u7a0b\u7684\u5185\u5b58\u533a\u57df\u5206\u4e3a\u4e0d\u540c\u7684\u6bb5\uff0c\u7136\u540e\u5c06\u6bcf\u4e00\u6bb5\u7531\u591a\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u9875\u7ec4\u6210\u3002 \u901a\u8fc7\u9875\u8868\u673a\u5236\uff0c\u4f7f\u6bb5\u5185\u7684\u9875\u53ef\u4ee5\u4e0d\u5fc5\u8fde\u7eed\u5904\u4e8e\u540c\u4e00\u5185\u5b58\u533a\u57df\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u5916\u90e8\u788e\u7247 \uff0c\u7136\u800c\u540c\u4e00\u9875\u5185\u4ecd\u7136\u53ef\u80fd\u5b58\u5728\u5c11\u91cf\u7684\u5185\u90e8\u788e\u7247\uff0c\u53ea\u662f\u4e00\u9875\u7684\u5185\u5b58\u7a7a\u95f4\u672c\u5c31\u8f83\u5c0f\uff0c\u4ece\u800c\u4f7f\u53ef\u80fd\u5b58\u5728\u7684\u5185\u90e8\u788e\u7247\u4e5f\u8f83\u5c11\u3002 2\u3001\u5f00\u53d1\u4e00\u79cd\u9002\u5f53\u7684\u6280\u672f\u6765 \u8bb0\u5f55\u73b0\u5b58\u7684\u7a7a\u95f2\u7684\u8fde\u7eed\u9875\u5757\u7684\u60c5\u51b5\uff0c\u4ee5\u5c3d\u91cf\u907f\u514d\u4e3a\u6ee1\u8db3\u5bf9\u5c0f\u5757\u7684\u8bf7\u6c42\u800c\u5206\u5272\u5927\u7684\u7a7a\u95f2\u5757 ; \u5982\u4f19\u4f34\u7cfb\u7edf\u548cslab\u9ad8\u901f\u7f13\u5b58\u3002 \u4f19\u4f34\u7cfb\u7edf : \u628a\u7cfb\u7edf\u4e2d\u8981\u7ba1\u7406\u7684\u7269\u7406\u5185\u5b58\u6309\u7167\u9875\u9762\u4e2a\u6570\u5206\u6210\u4e8611\u4e2a\u7ec4\uff0c\u5bf9\u5e94\u5927\u5c0f\u4e0d\u540c\u7684\u8fde\u7eed\u5185\u5b58\u5757\uff0c\u6bcf\u7ec4\u4e2d\u7684\u5185\u5b58\u5757\u5927\u5c0f\u90fd\u76f8\u7b49\uff0c \u4e3a2\u7684\u5e42\u6b21\u4e2a\u7269\u7406\u9875\u3002\u90a3\u4e48\u7cfb\u7edf\u4e2d\u5c31\u5b58\u57282^0 ~ 2^10\u8fd9\u4e4811\u79cd\u5927\u5c0f\u4e0d\u540c\u7684\u5185\u5b58\u5757\uff0c\u5bf9\u5e94\u5185\u5b58\u5757\u5927\u5c0f4KB ~ 4MB\u3002 \u5185\u6838\u752811\u4e2a\u94fe\u8868\u6765\u7ba1\u740611\u79cd\u5927\u5c0f\u4e0d\u540c\u7684\u5185\u5b58\u5757\u3002 \u5f53\u5206\u914d\u5185\u5b58\u65f6\uff0c\u4f1a\u4f18\u5148\u4ece\u9700\u8981\u5206\u914d\u7684\u5185\u5b58\u5757\u94fe\u8868\u4e0a\u67e5\u627e\u7a7a\u95f2\u5185\u5b58\u5757\uff0c\u5f53\u53d1\u73b0\u5bf9\u5e94\u5927\u5c0f\u7684\u5185\u5b58\u5757\u90fd\u5df2\u7ecf\u88ab\u4f7f\u7528\u540e\uff0c \u90a3\u4e48\u4f1a\u4ece\u66f4\u5927\u7ea7\u7684\u5185\u5b58\u5757\u4e0a\u5206\u914d\u4e00\u5757\u5185\u5b58\uff0c\u5e76\u4e14\u5206\u6210\u4e00\u534a\u7ed9\u6211\u4eec\u4f7f\u7528\uff0c\u5269\u4f59\u7684\u4e00\u534a\u91ca\u653e\u5230\u5bf9\u5e94\u5927\u5c0f\u7684\u5185\u5b58\u5757\u94fe\u8868\u4e0a\u3002 \u6bd4\u5982\u6211\u4eec\u60f3\u8981\u5206\u914d\u4e00\u4e2a8KB\u5927\u5c0f\u7684\u5185\u5b58\uff0c\u4f46\u662f\u53d1\u73b0\u5bf9\u5e94\u5927\u5c0f\u7684\u5185\u5b58\u5df2\u7ecf\u6ca1\u6709\u4e86\uff0c\u4f19\u4f34\u7cfb\u7edf\u4f1a\u4ece16KB\u7684\u94fe\u8868\u4e2d \u67e5\u627e\u4e00\u4e2a\u7a7a\u95f2\u5185\u5b58\u5757\uff0c\u5206\u6210\u4e24\u4e2a8KB\u5927\u5c0f\uff0c\u628a\u5176\u4e2d\u7684\u4e00\u4e2a8KB\u5927\u5c0f\u8fd4\u56de\u7ed9\u7533\u8bf7\u8005\u4f7f\u7528\uff0c \u5269\u4e0b\u76848KB\u653e\u52308KB\u5bf9\u5e94\u7684\u5185\u5b58\u5757\u94fe\u8868\u4e2d\u8fdb\u884c\u7ba1\u7406 \u5f53\u91ca\u653e\u5185\u5b58\u65f6\uff0c\u4f1a\u626b\u63cf\u5bf9\u5e94\u5927\u5c0f\u7684\u5185\u5b58\u5757\u94fe\u8868\uff0c\u67e5\u770b\u662f\u5426\u5b58\u5728\u5730\u5740\u80fd\u591f\u8fde\u7eed\u5728\u4e00\u8d77\u7684\u5185\u5b58\u5757\uff0c\u5982\u679c\u53d1\u73b0\u6709\uff0c \u90a3\u4e48\u5c31\u5408\u5e76\u4e24\u4e2a\u5185\u5757\u653e\u7f6e\u5230\u66f4\u5927\u4e00\u7ea7\u7684\u5185\u5b58\u5757\u94fe\u8868\u4e0a\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u6bd4\u5982\u6211\u4eec\u91ca\u653e8KB\u5927\u5c0f\u7684\u5185\u5b58\uff0c \u90a3\u4e48\u4f1a\u4ece\u5bf9\u5e94\u7684\u94fe\u8868\u626b\u63cf\u662f\u5426\u6709\u80fd\u591f\u5408\u5e76\u7684\u5185\u5b58\u5757\uff0c\u5982\u679c\u6709\u53e6\u4e00\u4e2a8KB\u5927\u5c0f\u7684\u5185\u5b58\u548c\u6211\u4eec\u4f7f\u7528\u7684\u5185\u5b58\u5730\u5740\u8fde\u7eed\uff0c \u90a3\u4e48\u5c31\u5408\u5e76\u5b83\u4eec\u7ec4\u6210\u4e00\u4e2a16KB\u5927\u5c0f\u7684\u5185\u5b58\u5757\uff0c\u7136\u540e\u63a5\u7740\u626b\u63cf16KB\u5927\u5c0f\u7684\u5185\u5b58\u5757\u94fe\u8868\uff0c\u7ee7\u7eed\u67e5\u627e\u5408\u5e76\u7684\u53ef\u80fd\u3002 slab\u5206\u914d\u5668 \u5185\u6838\u6808 \u5206\u914d\u51fd\u6570\u9009\u62e9 \u865a\u62df\u6587\u4ef6\u7cfb\u7edf UNIX\u6587\u4ef6\u7cfb\u7edf Unix\u4f7f\u7528\u56db\u79cd\u548c\u6587\u4ef6\u7cfb\u7edf\u76f8\u5173\u7684\u62bd\u8c61\u6982\u5ff5\uff1a\u6587\u4ef6\u3001\u76ee\u5f55\u9879\u3001\u7d22\u5f15\u8282\u70b9\u548c\u6302\u8f7d\u70b9(mounting point)\u3002 \u6587\u4ef6\u5171\u4eab \u548c\u8fdb\u7a0b\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784 files_struct: \u7531\u8fdb\u7a0b\u63cf\u8ff0\u7b26(struct task_struct)\u4e2d\u7684files\u76ee\u5f55\u9879\u6307\u5411\uff0c\u6240\u6709\u4e0e\u5355\u4e2a\u8fdb\u7a0b\u76f8\u5173\u7684\u4fe1\u606f(\u5982\u6253\u5f00\u7684\u6587\u4ef6\u53ca\u6587\u4ef6\u63cf\u8ff0\u7b26)\uff1b fs_struct: \u7531\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u4e2d\u7684fs\u57df\u6307\u5411\uff0c\u5305\u542b\u6587\u4ef6\u7cfb\u7edf\u548c\u8fdb\u7a0b\u76f8\u5173\u7684\u4fe1\u606f\uff0c \u8be5\u7ed3\u6784\u4fdd\u5b58\u4e86\u5f53\u524d\u8fdb\u7a0b\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u548c\u6839\u76ee\u5f55\uff1b namespace\u7ed3\u6784\u4f53: \u7531\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u4e2d\u7684namespace\u57df\u6307\u5411\uff0clinux 2.4\u7248\u5185\u6838\u4ee5\u540e\uff0c\u5355\u8fdb\u7a0b\u547d\u540d\u7a7a\u95f4\u88ab\u52a0\u5165\u5230\u5185\u6838\u4e2d\uff0c\u5b83\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u5728\u7cfb\u7edf\u4e2d\u90fd\u770b\u5230\u552f\u4e00\u7684\u5b89\u88c5\u6587\u4ef6\u7cfb\u7edf\uff0c\u4e0d\u4ec5\u662f\u552f\u4e00\u7684\u6839\u76ee\u5f55\uff0c\u800c\u4e14\u662f\u552f\u4e00\u7684\u6587\u4ef6\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784\u3002 \u5757/IO \u5757\u8bbe\u5907 \u2003\u8bbe\u5907\u6700\u5c0f\u5bfb\u5740\u5355\u5143\u79f0\u4e3a\u6247\u533a\uff0c\u5927\u5c0f\u4e3a2\u7684\u6574\u6570\u500d\uff0c\u4e00\u822c\u4e3a512\u5b57\u8282\uff0c\u6216\u8005\u7c7b\u4f3cCD-ROM\u7684\u6247\u533a\u4e3a2KB\u3002 \u2003\u5757\u5728\u7269\u7406\u4e0a\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u636e\u7247\uff0c\u5728\u903b\u8f91\u4e0a\u662f\u6587\u4ef6\u7cfb\u7edf\u7684\u62bd\u8c61\u2014\u2014\u53ea\u80fd\u57fa\u4e8e\u5757\u6765\u8bbf\u95ee\u6587\u4ef6\u7cfb\u7edf\uff1b\u5185\u6838\u6267\u884c\u7684\u6240\u6709\u78c1\u76d8\u64cd\u4f5c\u90fd\u662f\u57fa\u4e8e\u5757\u7684\uff0c\u5176\u5927\u5c0f\u4e3a\u591a\u4e2a\u6247\u533a\uff0c\u4e14\u4e3a2\u7684\u6574\u6570\u500d\uff0c\u5e76\u4e14\u4e0d\u80fd\u8d85\u8fc7\u4e00\u4e2a\u9875\u7684\u957f\u5ea6\u3002 \u7f13\u51b2\u533a\u4e0e\u7f13\u51b2\u533a\u5934 \u2003\u5f53\u4e00\u4e2a\u5757\u88ab\u8c03\u5165\u5185\u5b58\u540e\uff0c\u5373\u5728\u8bfb\u5165\u540e\u6216\u7b49\u5f85\u5199\u51fa\u65f6\uff0c\u5b83\u8981\u5b58\u50a8\u5728\u4e00\u4e2a\u7f13\u51b2\u533a\u4e2d\uff0c\u6bcf\u4e2a\u7f13\u51b2\u533a\u4e0e\u4e00\u4e2a\u5757\u5bf9\u5e94\uff0c\u5b83\u76f8\u5f53\u4e8e\u662f\u78c1\u76d8\u5757\u5728\u5185\u5b58\u4e2d\u7684\u8868\u793a\u3002 \u2003\u6bcf\u4e2a\u7f13\u51b2\u533a\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u63cf\u8ff0\u7b26\uff0c\u7528buffer_head\u7ed3\u6784\u4f53\u63cf\u8ff0\uff0c\u79f0\u4f5c\u7f13\u51b2\u533a\u5934\uff0c\u5305\u542b\u4e00\u4e9b\u63a7\u5236\u4fe1\u606f(\u5982\u5757\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u5757\u8bbe\u5907\uff0c\u5757\u5bf9\u5e94\u54ea\u4e2a\u7f13\u51b2\u533a)\u3002 \u7f13\u51b2\u533a\u5934\u7684\u76ee\u7684\u5728\u4e8e\u63cf\u8ff0\u78c1\u76d8\u5757\u548c\u7269\u7406\u5185\u5b58\u7f13\u51b2\u533a(\u5728\u7279\u5b9a\u9875\u9762\u4e0a\u7684\u5b57\u8282\u5e8f\u5217)\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb \u3002 bio\u7ed3\u6784\u4f53 \u2003\u4e0ebuffer_head\u533a\u522b\uff1a bio\u7ed3\u6784\u4f53\u4ee3\u8868\u7684\u662fI/O\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5305\u542b\u5185\u5b58\u4e2d\u7684\u591a\u4e2a\u9875(bio\u672c\u8eab\u4fbf\u4e8e\u6267\u884c\u5206\u6563-\u96c6\u4e2d\u7684\u5757I/O\u64cd\u4f5c\uff0c\u64cd\u4f5c\u7684\u6570\u636e\u6765\u81ea\u591a\u4e2a\u7269\u7406\u9875)\uff1b \u800cbuffer_head\u7ed3\u6784\u4f53\u4ee3\u8868\u7684\u662f\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u63cf\u8ff0\u7684\u4ec5\u4ec5\u662f\u78c1\u76d8\u4e2d\u7684\u4e00\u4e2a\u5757\uff1b bio\u76f8\u8f83buffer_head\uff0c\u5c5e\u4e8e\u8f7b\u91cf\u7ea7\u7ed3\u6784\u4f53\uff0c\u56e0\u4e3a\u5b83\u53ea\u9700\u5305\u542b\u5757I/O\u64cd\u4f5c\u6240\u9700\u7684\u4fe1\u606f\u5373\u53ef\uff0c\u65e0\u9700\u5305\u542b\u4e0e\u7f13\u51b2\u533a\u672c\u8eab\u76f8\u5173\u7684\u4e0d\u5fc5\u8981\u4fe1\u606f\u3002 I/O\u63a7\u5236\u65b9\u5f0f I/O\u8c03\u5ea6 \u2003\u8bf7\u6c42\u961f\u5217: \u5757\u8bbe\u5907\u5c06\u5b83\u4eec\u6302\u8d77\u7684\u5757I/O\u8bf7\u6c42\u4fdd\u5b58\u5728\u8bf7\u6c42\u961f\u5217\u4e2d(requests_struct)\uff0c\u8be5\u961f\u5217\u5305\u542b\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u53ca\u76f8\u5173\u63a7\u5236\u4fe1\u606f\uff1b\u961f\u5217\u4e2d\u7684\u8bf7\u6c42(request)\u7531\u591a\u4e2abio\u7ed3\u6784\u4f53\u6784\u6210\u3002 \u2003I/O\u8c03\u5ea6\u7a0b\u5e8f\u5c06 \u78c1\u76d8I/O\u8d44\u6e90 \u5206\u914d\u7ed9\u7cfb\u7edf\u4e2d\u6240\u6709\u6302\u8d77\u7684 \u5757I/O\u8bf7\u6c42\uff0c\u5206\u914d\u662f\u901a\u8fc7\u5c06\u8bf7\u6c42\u961f\u5217\u4e2d\u6302\u8d77\u7684\u8bf7\u6c42\u5408\u5e76\u548c\u6392\u5e8f\u6765\u5b8c\u6210\u7684\uff0c\u4ee5\u6b64\u6765\u51cf\u5c11\u78c1\u76d8\u5bfb\u5740\u65f6\u95f4\u3002 \u2003\u8bf7\u6c42\u5408\u5e76: \u5c06\u4e24\u4e2a\u6216\u591a\u4e2a\u8bf7\u6c42\u5408\u5e76\u6210\u4e00\u4e2a\u65b0\u8bf7\u6c42\uff0c\u5982\u591a\u4e2a\u8bf7\u6c42\u8bbf\u95ee\u7684\u6247\u533a\u4f4d\u7f6e\u76f8\u90bb\uff1b \u2003\u8bf7\u6c42\u6392\u5e8f: \u5bf9\u4e8e\u64cd\u4f5c\u78c1\u76d8\u6247\u533a\u4f4d\u7f6e\u76f8\u8fd1\u7684\u4e0d\u540c\u8bf7\u6c42\uff0c\u5176\u5728\u961f\u5217\u4e2d\u7684\u4f4d\u7f6e\u5e94\u8be5\u4e5f\u76f8\u90bb\u3002 \u6574\u4e2a\u8bf7\u6c42\u961f\u5217\u6309\u8981\u8bbf\u95ee\u7684\u6247\u533a\u7684\u589e\u957f\u65b9\u5411\u6709\u5e8f\u6392\u5217\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u7f29\u77ed\u5355\u6b21\u8bf7\u6c42\u7684\u5bfb\u5740\u65f6\u95f4\uff0c\u8fd8\u53ef\u4ee5\u4fdd\u6301\u78c1\u76d8\u5934\u4ee5\u76f4\u7ebf\u65b9\u5411\u79fb\u52a8\uff0c\u7f29\u77ed\u4e86\u6240\u6709\u8bf7\u6c42\u7684\u78c1\u76d8\u5bfb\u5740\u65f6\u95f4\u3002\u8fd9\u79cdI/O\u8c03\u5ea6\u6392\u5e8f\u7b97\u6cd5\u79f0\u4f5c\u7535\u68af\u8c03\u5ea6\u3002 I/O\u8c03\u5ea6\u7b97\u6cd5 \u2003linus\u7535\u68af linux \u5185\u6838\u4ece2.6\u7248\u8d77\uff0c\u5e9f\u5f03\u4e86linus\u7535\u68af\u6cd5\uff0c\u63d0\u4f9b\u4e86\u4e0b\u9762\u56db\u79cd\u8c03\u5ea6\u7a0b\u5e8f\u3002 \u2003 \u6700\u7ec8\u671f\u9650I/O\u8c03\u5ea6\u7a0b\u5e8f \u2003 \u9884\u6d4bI/O\u8c03\u5ea6\u7a0b\u5e8f : \u5982\u679c\u6309\u7167\u6700\u7ec8\u671f\u9650I/O\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u5f53\u7cfb\u7edf\u5904\u4e8e\u7e41\u5fd9\u7684\u5199\u64cd\u4f5c\u671f\u95f4\uff0c\u6bcf\u6b21\u63d0\u4ea4\u8bfb\u8bf7\u6c42\uff0cI/O\u8c03\u5ea6\u7a0b\u5e8f\u90fd\u4f1a\u8fc5\u901f\u5904\u7406\u8bfb\u8bf7\u6c42\uff0c\u7136\u540e\u8fd4\u56de\u518d\u5bfb\u5740\u8fdb\u884c\u8bfb\u64cd\u4f5c\uff0c\u8fd9\u65e0\u7591\u4f1a\u635f\u5bb3\u5168\u5c40\u541e\u5410\u91cf\u3002 \u2003 \u5b8c\u5168\u516c\u6b63\u7684\u6392\u961fI/O\u8c03\u5ea6\u7a0b\u5e8f(Complete Fair Queuing, CFQ) : \u6bcf\u4e00\u4e2a\u63d0\u4ea4I/O\u8bf7\u6c42\u7684\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u81ea\u5df1\u7684\u8bf7\u6c42\u961f\u5217\uff0c\u961f\u5217\u5185\u90e8\u7684\u64cd\u4f5c\u4e0e\u6700\u7ec8\u671f\u9650I/O\u8c03\u5ea6\u7a0b\u5e8f\u76f8\u540c\uff1bCFQ\u4ee5\u65f6\u95f4\u7247\u8f6e\u8f6c\u8c03\u5ea6\u961f\u5217\uff0c\u4ece\u6bcf\u4e2a\u961f\u5217\u4e2d\u9009\u53d6\u8bf7\u6c42\u6570\uff0c\u7136\u540e\u8fdb\u5165\u4e0b\u4e00\u6b21\u8c03\u5ea6\u3002 \u4ece\u800c\u5728\u8fdb\u7a0b\u7ea7\u522b\u7ef4\u6301\u4e86\u516c\u5e73 \u3002 \u2003 \u7a7a\u64cd\u4f5c\u7684I/O\u8c03\u5ea6\u7a0b\u5e8f : \u53ea\u6267\u884c\u5408\u5e76\uff0c\u4e0d\u8fdb\u884c\u6392\u5e8f\uff0c\u7ef4\u62a4\u8bf7\u6c42\u961f\u5217\u4ee5\u8fd1\u4e4eFIFO\u7684\u987a\u5e8f\u6392\u5217\uff0c\u5176\u662f\u4e13\u4e3a\u968f\u673a\u8bbf\u95ee\u8bbe\u5907\u800c\u8bbe\u8ba1\u7684\uff0c\u5b83\u4eec\u5bf9\u4e8e\u5bfb\u5740\u7684\u9700\u6c42\u5f88\u5c0f\uff0c\u65e0\u9700\u6392\u5e8f\u3002 \u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4 \u2003\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u7531\u8fdb\u7a0b\u53ef\u5bfb\u5740\u7684\u865a\u62df\u5185\u5b58\u7ec4\u6210\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u8fde\u7eed\u7a7a\u95f4\uff0c\u5bf9\u4e8e32\u4f4d\u673a\u5668\uff0c\u8fdb\u7a0b\u53ef\u5bfb\u5740\u7684\u865a\u62df\u7a7a\u95f4\u5927\u5c0f\u4e3a4GB\u3002 \u2003\u5185\u5b58\u533a\u57df: \u53ef\u88ab\u8bbf\u95ee\u7684\u5408\u6cd5\u5730\u5740\u7a7a\u95f4\u3002 \u5185\u5b58\u63cf\u8ff0\u7b26: mm_struct\u7ed3\u6784\u4f53\uff0c\u5305\u542b\u4e86\u548c\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u6709\u5173\u7684\u5168\u90e8\u4fe1\u606f\u3002\u4e3b\u8981\u7684\u6210\u5458\u6709: 1\u3001mm_users: \u8bb0\u5f55\u6b63\u5728\u4f7f\u7528\u8be5\u5730\u5740\u7684\u8fdb\u7a0b\u6570\u76ee\uff0c\u5bf9\u4e8e\u5171\u4eab\u5730\u5740\u7a7a\u95f4\u7684\u7ebf\u7a0b\u800c\u8a00\uff0c\u8fd9\u4e2a\u503c\u7b49\u4e8e\u7ebf\u7a0b\u6570\u91cf\u3002 2\u3001mm_count: mm_struct\u7ed3\u6784\u4f53\u7684\u4e3b\u5f15\u7528\u8ba1\u6570\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u591a\u4e2a\u7ebf\u7a0b\u800c\u8a00\uff0c\u5176\u503c\u4e00\u76f4\u4e3a1\u3002\u5f53mm_user\u51cf\u4e3a0\u65f6\uff0cmm_count\u4e5f\u5c06\u4e3a0\uff0c\u8bf4\u660e\u6ca1\u6709\u6307\u5411\u8be5\u7ed3\u6784\u4f53\u7684\u5f15\u7528\u4e86\uff0cmm_struct\u5c06\u88ab\u64a4\u9500\u3002 3\u3001 mmap/mm_rb: \u5206\u522b\u4ee5\u94fe\u8868\u5f62\u5f0f\u548c\u7ea2\u9ed1\u6811\u5f62\u5f0f\u63cf\u8ff0\u5730\u5740\u7a7a\u95f4\u5185\u7684\u5168\u90e8\u5185\u5b58\u533a\u57df \u3002 \u524d\u8005\u9002\u5408\u904d\u5386\uff0c\u540e\u8005\u9002\u5408\u67e5\u627e\uff0c\u5982\u5728\u5730\u5740\u7a7a\u95f4\u4e2d\u5b9a\u4f4d\u7279\u5b9a\u5185\u5b58\u533a\u57df\u3002 4\u3001mm_list\uff1alist_head\u7c7b\u578b\u7684\u53cc\u5411\u94fe\u8868\uff0c\u6240\u6709\u7684mm_struct\u90fd\u901a\u8fc7\u6b64\u6210\u5458\u94fe\u63a5\u5728\u4e00\u8d77\uff1b\u94fe\u8868\u7684\u9996\u5143\u7d20\u662finit_mm\u5185\u5b58\u63cf\u8ff0\u7b26\uff0c\u4ee3\u8868init\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u3002\u64cd\u4f5c\u8be5\u94fe\u8868\u65f6\uff0c\u9700\u8981\u4f7f\u7528mm_lock\u9501\u6765\u9632\u6b62\u5e76\u53d1\u8bbf\u95ee\u3002 \u5206\u914d\u5185\u5b58\u63cf\u8ff0\u7b26 \u5185\u6838\u7ebf\u7a0b \u865a\u62df\u5185\u5b58\u533a\u57df \u2003\u6bcf\u4e2avm_areas_struct\u5bf9\u8c61\u90fd\u5bf9\u5e94\u4e8e\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u552f\u4e00\u533a\u95f4\uff0c\u540c\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\u5185\u7684\u4e0d\u540c\u5185\u5b58\u533a\u57df\u4e0d\u80fd\u91cd\u53e0\uff1bvm_areas_struct\u4e2d\u7684vm_mm\u6210\u5458\u6307\u5411\u4e0e\u5176\u76f8\u5173\u7684mm_struct\uff1b\u4e0d\u540c\u7684\u72ec\u7acb\u8fdb\u7a0b\u5c06\u540c\u4e00\u4e2a\u6587\u4ef6\u6620\u5c04\u5230\u5730\u5740\u7a7a\u95f4\u65f6\uff0c\u5c06\u5404\u81ea\u6709\u4e00\u4e2avm_areas_struct\u7ed3\u6784\u4f53\u6765\u6807\u8bb0\u81ea\u5df1\u7684\u5185\u5b58\u533a\u57df\uff1b\u800c\u4e24\u4e2a\u7ebf\u7a0b\u5171\u4eab\u5730\u5740\u7a7a\u95f4\u65f6\uff0c\u5b83\u4eec\u4e5f\u540c\u65f6\u5171\u4eab\u5176\u4e2d\u6240\u6709\u7684vm_areas_struct\u7ed3\u6784\u4f53\u3002 \u2003 \u5f53\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u4e00\u4e2a\u865a\u62df\u5730\u5740\u65f6\uff0c\u9996\u5148\u5fc5\u987b\u5c06\u865a\u62df\u5730\u5740\u8f6c\u5316\u6210\u7269\u7406\u5730\u5740\uff0c\u8fd9\u4e2a\u662f\u901a\u8fc7\u5206\u9875\u6765\u5b8c\u6210\u7684\uff0clinux\u91c7\u7528\u4e09\u7ea7\u9875\u8868\uff1b \u2003TLB(Traslation Lookaside Buffer), \u4e00\u4e2a\u5c06\u865a\u62df\u5730\u5740\u6620\u5c04\u5230\u7269\u7406\u5730\u5740\u7684\u786c\u4ef6\u7f13\u5b58\uff0c\u5f53\u8bbf\u95ee\u865a\u62df\u5730\u5740\u65f6\uff0c\u5904\u7406\u5668\u9996\u5148\u68c0\u67e5TLB\u662f\u5426\u7f13\u5b58\u547d\u4e2d\uff0c\u5982\u679c\u662f\uff0c\u76f4\u63a5\u8fd4\u56de\u7269\u7406\u5730\u5740\uff0c\u5426\u5219\u518d\u901a\u8fc7\u9875\u8868\u6620\u5c04\u5230\u7269\u7406\u5730\u5740\u3002 \u7f13\u5b58 \u9875\u9ad8\u901f\u7f13\u5b58 \u662flinux\u5185\u6838\u5b9e\u73b0\u78c1\u76d8\u7f13\u5b58\uff0c\u4e3b\u8981\u7528\u6765\u51cf\u5c11\u5bf9\u78c1\u76d8\u7684I/O\u64cd\u4f5c\uff0c\u901a\u8fc7\u628a\u78c1\u76d8\u4e2d\u7684\u6570\u636e\u7f13\u5b58\u5230\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u628a\u5bf9\u78c1\u76d8\u7684\u8bbf\u95ee\u8f6c\u53d8\u4e3a\u5bf9\u5185\u5b58\u7684\u8bbf\u95ee\u3002\u5176\u539f\u56e0\u4e3b\u8981\u662f\uff1a 1\u3001\u4ece\u5185\u5b58\u8bbf\u95ee\u6570\u636e\u7684\u901f\u5ea6\u8fdc\u5feb\u4e8e\u78c1\u76d8\u3002 2\u3001\u6570\u636e\u4e00\u65e6\u88ab\u8bbf\u95ee\uff0c\u77ed\u671f\u5185\u5c31\u5f88\u6709\u53ef\u80fd\u518d\u88ab\u8bbf\u95ee\u3002\u8fd9\u79cd\u77ed\u65f6\u671f\u5185\u96c6\u4e2d\u8bbf\u95ee\u4e00\u7247\u6570\u636e\u7684\u539f\u7406\u79f0\u4e3a \u4e34\u65f6\u5c40\u90e8\u539f\u7406 \u3002 \u5199\u7f13\u5b58 \u5f53\u8fdb\u7a0b\u5199\u78c1\u76d8\u65f6\uff0c\u4e00\u822c\u6709\u4e09\u79cd\u7b56\u7565\uff1a \u2003\u4e0d\u7f13\u5b58\uff0c\u76f4\u63a5\u5199\u5230\u78c1\u76d8\uff0c\u540c\u65f6\u4f7f\u7f13\u5b58\u5931\u6548\uff0c\uff08\u4e00\u822c\u4e0d\u4f7f\u7528\u8fd9\u79cd\u7b56\u7565\uff09\uff1b \u2003\u5199\u900f\u7f13\u5b58(write-through cache),\u5199\u64cd\u4f5c\u5c06\u81ea\u52a8\u66f4\u65b0\u5185\u5b58\u7f13\u5b58\uff0c\u540c\u65f6\u66f4\u65b0\u78c1\u76d8\u6587\u4ef6\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u7f13\u5b58\u4e00\u81f4\u6027\uff0c\u5373\u7f13\u5b58\u6570\u636e\u65f6\u523b\u548c\u78c1\u76d8\u6570\u636e\u4fdd\u5b58\u4e00\u81f4\uff1b \u2003\u56de\u5199(write-back)\uff0c\u7a0b\u5e8f\u6267\u884c\u64cd\u4f5c\u76f4\u63a5\u5199\u5230\u7f13\u5b58\uff0c\u78c1\u76d8\u6570\u636e\u4e0d\u4f1a\u7acb\u523b\u66f4\u65b0\uff0c\u800c\u662f\u5c06\u9875\u9ad8\u901f\u7f13\u5b58\u4e2d\u88ab\u5199\u5165\u7684\u9875\u9762\u6807\u8bb0\u6210\u2018dirty\u2019\uff0c\u5e76\u52a0\u5165\u5230\u810f\u9875\u94fe\u8868\u4e2d\u3002\u7136\u540e\u7531\u56de\u5199\u8fdb\u7a0b\u5468\u671f\u5730\u5c06\u810f\u9875\u94fe\u8868\u4e2d\u7684\u9875\u5199\u56de\u5230\u78c1\u76d8\u4e2d\uff0c\u4ece\u800c\u8ba9\u78c1\u76d8\u4e2d\u7684\u6570\u636e\u548c\u5185\u5b58\u4e2d\u6700\u7ec8\u4e00\u81f4\u3002\u6700\u540e\u4f1a\u6e05\u7406dirty\u6807\u8bc6\u3002 \u56de\u6536\u7f13\u5b58: \u6700\u8fd1\u6700\u5c11\u4f7f\u7528(LRU)\u7b56\u7565\u548c\u53cc\u94fe\u7b56\u7565(\u7ef4\u62a4\u4e24\u4e2a\u94fe\u8868\uff1a\u6d3b\u8dc3\u94fe\u8868\u548c\u975e\u6d3b\u8dc3\u94fe\u8868)\u3002 linux \u9875\u9ad8\u901f\u7f13\u5b58 \u2003\u9875\u9ad8\u901f\u7f13\u5b58\u7f13\u5b58\u7684\u662f\u5185\u5b58\u9875\u9762\uff0c\u7f13\u5b58\u4e2d\u7684\u9875\u6765\u81ea\u5bf9\u6b63\u89c4\u6587\u4ef6\u3001\u5757\u8bbe\u5907\u6587\u4ef6\u548c\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u7684\u8bfb\u5199\u3002","title":"5_\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf"},{"location":"os/5_os/#_1","text":"","title":"\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf"},{"location":"os/5_os/#_2","text":"\u7ba1\u7406\u8ba1\u7b97\u673a\u786c\u4ef6\u4e0e\u8f6f\u4ef6\u8d44\u6e90\u7684\u8ba1\u7b97\u673a\u7a0b\u5e8f\u3002\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u7ba1\u7406\u4e0e\u914d\u7f6e\u5185\u5b58\u3001\u51b3\u5b9a\u7cfb\u7edf\u8d44\u6e90\u4f9b\u9700\u7684\u4f18\u5148\u6b21\u5e8f\u3001\u63a7\u5236\u8f93\u5165\u8bbe\u5907\u4e0e\u8f93\u51fa\u8bbe\u5907\u3001\u64cd\u4f5c\u7f51\u7edc\u4e0e\u7ba1\u7406\u6587\u4ef6\u7cfb\u7edf\u7b49\u57fa\u672c\u4e8b\u52a1\u3002\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u63d0\u4f9b\u4e00\u4e2a\u8ba9\u7528\u6237\u4e0e\u7cfb\u7edf\u4ea4\u4e92\u7684\u64cd\u4f5c\u754c\u9762\u3002 \u7528\u6237\u6001\u548c\u5185\u6838\u6001 \u5927\u591a\u6570\u73b0\u4ee3CPU\u63d0\u4f9b\u4e24\u79cd\u6267\u884c\u6a21\u5f0f\uff0c\u5185\u6838\u6001\u548c\u7528\u6237\u6001\u3002CPU\u53ef\u4ee5\u5728\u5185\u6838\u6001\u6267\u884c\u6307\u4ee4\u96c6\u4e2d\u7684\u6240\u6709\u6307\u4ee4\uff0c\u4ee5\u53ca\u4f7f\u7528\u6240\u6709\u7684\u786c\u4ef6\u8d44\u6e90\uff0c\u7528\u6237\u7a0b\u5e8f\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u6216\u8005\u89e6\u53d1\u67d0\u4e2a\u5f02\u5e38\uff0c\u4f1a\u9677\u5165\u5230\u5185\u6838\u6001\uff1b\u4f46\u5728\u7528\u6237\u6001\u65f6\uff0c\u53ea\u80fd\u6267\u884c\u90e8\u5206\u6307\u4ee4\uff0c\u4f7f\u7528\u90e8\u5206\u786c\u4ef6\u7684\u8d44\u6e90\u3002\u4e24\u79cd\u6267\u884c\u6a21\u5f0f\u4f7f\u5f97\u8bbe\u8ba1\u4eba\u5458\u53ea\u80fd\u5728\u7528\u6237\u6a21\u5f0f\u4e0b\u8fd0\u884c\u7528\u6237\u7a0b\u5e8f\uff0c\u4ece\u800c\u62d2\u7edd\u4ed6\u4eec\u8bbf\u95ee\u5173\u952e\u6307\u4ee4\u3002 \u7cfb\u7edf\u8c03\u7528 \u2003\u7cfb\u7edf\u8c03\u7528\u4e2d\u65ad\u662f\u7528\u6237\u7a0b\u5e8f\u4f7f\u7528\u64cd\u4f5c\u7cfb\u7edf\u8d44\u6e90\u7684\u552f\u4e00\u754c\u9762\u63a5\u53e3\uff1b\u5bf9\u4e8eintel x86, \u901a\u8fc7\u4e2d\u65ad\u6307\u4ee4int\u8fdb\u5165\u5185\u6838\u3002\u4f8b\u5982linux\u5728boot/setup.s\u4e2d\u4f1a\u5c06\u7528\u6237\u7a0b\u5e8f\u53d1\u51fa\u7684\u8f6f\u4ef6\u4e2d\u65ad\u8bbe\u7f6e\u4e3a int 128\uff080x80\uff09\uff0c\u8fd9\u6761\u6307\u4ee4\u4f1a\u89e6\u53d1\u4e00\u4e2a\u5f02\u5e38\u5bfc\u81f4\u7cfb\u7edf\u5207\u6362\u5230\u5185\u6838\u6001\uff0c\u5e76\u6267\u884c128\u53f7\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\uff0c\u5373\u7cfb\u7edf\u8c03\u7528\u5904\u7406\u7a0b\u5e8fsystem_call()\u3002 \u2003\u5bc4\u5b58\u5668 eax \u4e2d\u5b58\u653e\u7740\u7cfb\u7edf\u8c03\u7528\u53f7\uff0c\u800c\u643a\u5e26\u7684\u53c2\u6570\u53ef \u4f9d\u6b21\u5b58\u653e\u5728\u5bc4\u5b58\u5668 ebx\u3001ecx\u3001edx\u3001esi\u548cedi\u4e2d \uff0c\u9700\u8981\u66f4\u591a\u53c2\u6570\u65f6\uff0c\u53ef\u4ee5\u7528\u5176\u4e2d\u4e00\u4e2a\u5bc4\u5b58\u5668\u5b58\u653e\u6307\u5411\u6240\u6709\u8fd9\u4e9b\u53c2\u6570\u5728\u7528\u6237\u7a7a\u95f4\u5730\u5740\u7684\u6307\u9488\u3002 \u7cfb\u7edf\u8c03\u7528\u8fc7\u7a0b: a. \u7528\u6237\u7a0b\u5e8f\u4e2d\u5305\u542b\u4e00\u6bb5\u542bint 0x80\u6307\u4ee4\u7684\u4ee3\u7801(\u901a\u5e38\u5728\u5e93\u51fd\u6570\u4e2d)\u3002 b. \u64cd\u4f5c\u7cfb\u7edf\u5199\u4e2d\u65ad\u5904\u7406\uff0c\u5e76\u83b7\u53d6\u60f3\u8c03\u7528\u7684\u5185\u6838\u7a0b\u5e8f\u7684\u7f16\u53f7\u3002 c. \u64cd\u4f5c\u7cfb\u7edf\u6839\u636e\u7f16\u53f7\u8f6c\u5230\u76f8\u5e94\u7684\u6267\u884c\u4ee3\u7801\u3002 \u5185\u5b58\u5c42\u6b21\u6a21\u578b \u5bc4\u5b58\u5668 -> \u9ad8\u901f\u7f13\u5b58 -> \u4e3b\u5b58 -> \u78c1\u76d8\uff0c \u8bbf\u95ee\u901f\u5ea6\u7531\u5feb\u5230\u6162\uff0c\u5bb9\u91cf\u7531\u5c0f\u5230\u5927\u3002 I/O\u7684\u4e09\u79cd\u65b9\u5f0f\uff1a 1\u300b\u7528\u6237\u7a0b\u5e8f\u53d1\u8d77\u7cfb\u7edf\u8c03\u7528\uff0c\u5185\u6838\u4f1a\u5c06\u5176\u8f6c\u6362\u4e3a\u76f8\u5e94\u9a71\u52a8\u7a0b\u5e8f\u7684\u7a0b\u5e8f\u8c03\u7528\uff0c\u7136\u540e\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u542f\u52a8I/O \u5e76\u5faa\u73af\u68c0\u67e5\u8be5\u8bbe\u5907\u662f\u5426\u5b8c\u6210\u5de5\u4f5c\u3002\u5f53I/O\u8c03\u7528\u5b8c\u6210\u540e\uff0c\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u628a\u6570\u636e\u9001\u5230\u6307\u5b9a\u7684\u5730\u65b9\u5e76\u8fd4\u56de\u3002 \u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e3abusy waiting. \u8fd9\u79cd\u65b9\u5f0f\u7684\u7f3a\u70b9\u662f\u8981\u4e00\u76f4\u5360\u636eCPU\uff0cCPU\u4f1a\u4e00\u76f4\u8f6e\u8be2I/O\u8bbe\u5907\u76f4\u5230I/O\u64cd\u4f5c\u5b8c\u6210\u3002 2\u300b\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u542f\u52a8\u8bbe\u5907\u5e76\u4e14\u8ba9\u8be5\u8bbe\u5907\u5728\u64cd\u4f5c\u5b8c\u6210\u65f6\u53d1\u751f\u4e2d\u65ad\u3002\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u5728\u8be5\u65f6\u523b\u8fd4\u56de\uff0c \u64cd\u4f5c\u7cfb\u7edf\u63a5\u7740\u5728\u9700\u8981\u65f6\u963b\u585e\u8c03\u7528\u8005\u5e76\u5b89\u6392\u5176\u4ed6\u5de5\u4f5c\u8fdb\u884c\u3002\u5f53\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\u68c0\u6d4b\u5230\u8be5\u8bbe\u5907\u64cd\u4f5c\u5b8c\u6210\u65f6\uff0c \u4f1a\u53d1\u51fa\u4e00\u4e2a\u4e2d\u65ad\u901a\u77e5\u64cd\u4f5c\u5b8c\u6210\u3002 3\u300b\u4f7f\u7528\u7279\u6b8a\u7684\u786c\u4ef6\uff1a\u76f4\u63a5\u5b58\u50a8\u5668\u8bbf\u95ee\uff08direct memory access\uff0c DMA\uff09\u82af\u7247\u3002 \u5b83\u53ef\u4ee5\u63a7\u5236\u5185\u5b58\u548c\u67d0\u4e9b\u63a7\u5236\u5668\u4e4b\u95f4\u7684\u4f4d\u6d41\uff0c\u800c\u65e0\u9700CPU\u7684\u5e72\u9884\u3002CPU\u4f1a\u5bf9DMA\u82af\u7247\u8fdb\u884c\u8bbe\u7f6e\uff0c\u8bf4\u660e\u9700\u8981\u4f20\u9001\u7684\u5b57\u8282\u6570\uff0c \u6709\u5173\u7684\u8bbe\u5907\u548c\u5185\u5b58\u5730\u5740\u4ee5\u53ca\u64cd\u4f5c\u65b9\u5411\u3002\u5f53DMA\u82af\u7247\u5b8c\u6210\u64cd\u4f5c\u65f6\uff0c\u4f1a\u9020\u6210\u4e2d\u65ad\u3002 \u64cd\u4f5c\u7cfb\u7edf\u7ed3\u6784\uff1a\u5355\u4f53\u7ed3\u6784\u3001\u5206\u5c42\u7cfb\u7edf\u3001\u5fae\u5185\u6838\u3001\u5ba2\u6237-\u670d\u52a1\u7aef\u7cfb\u7edf\u3001\u865a\u62df\u673a\u548c\u5916\u6838\u3002 big-endian: \u5c06\u9ad8\u5e8f\u5b57\u8282\u5b58\u50a8\u5728\u8d77\u59cb\u5730\u5740; little-endian: \u5c06\u4f4e\u5e8f\u5b57\u8282\u5b58\u50a8\u5728\u8d77\u59cb\u5730\u5740(\u5730\u5740\u4f4e\u4f4d\u5b58\u50a8\u503c\u7684\u4f4e\u4f4d, \u5730\u5740\u9ad8\u4f4d\u5b58\u50a8\u503c\u7684\u9ad8\u4f4d)","title":"\u64cd\u4f5c\u7cfb\u7edf"},{"location":"os/5_os/#_3","text":"\u4e00\u4e2a\u6b63\u5728\u6267\u884c\u7a0b\u5e8f\u7684\u5b9e\u4f8b\uff0c\u7cfb\u7edf\u8fdb\u884c\u8d44\u6e90\u5206\u914d\u7684\u6700\u5c0f\u5355\u4f4d\u3002(\u5728 Linux \u5185\u6838\u4e2d\uff0c\u8fdb\u7a0b\u901a\u5e38\u88ab\u79f0\u4f5c\u4efb\u52a1\uff08task\uff09\uff0c\u800c\u628a\u8fd0\u884c\u5728\u7528\u6237\u7a7a\u95f4\u7684\u7a0b\u5e8f\u79f0\u4f5c\u8fdb\u7a0b) \u8fdb\u7a0b\u7684\u6982\u5ff5\u4e3b\u8981\u6709\u4e24\u70b9\uff1a \u7b2c\u4e00\uff0c \u8fdb\u7a0b\u662f\u4e00\u4e2a\u5b9e\u4f53\u3002\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u6709\u5b83\u81ea\u5df1\u7684\u5730\u5740\u7a7a\u95f4 \uff0c\u865a\u62df\u5185\u5b58\u6280\u672f\u4f7f\u5f97\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u72ec\u5360\u6574\u4e2a\u5185\u5b58\u7a7a\u95f4\uff0c\u5730\u5740\u4ece\u96f6\u5f00\u59cb\uff0c\u76f4\u5230\u5185\u5b58\u4e0a\u9650\u3002 \u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u5c06\u8fd9\u90e8\u5206\u7a7a\u95f4\uff08\u4ece\u4f4e\u5730\u5740\u5230\u9ad8\u5730\u5740\uff09\u5206\u4e3a\u516d\u4e2a\u90e8\u5206\uff1a TEXT\u6bb5\uff1a\u6574\u4e2a\u7a0b\u5e8f\u7684\u4ee3\u7801\uff0c\u4ee5\u53ca\u6240\u6709\u7684\u5e38\u91cf\u3002\u8fd9\u90e8\u5206\u5185\u5b58\u662f\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\uff0c\u53ea\u8bfb\u7684; DATA\u6bb5\uff1a\u53c8\u79f0GVAR\uff1a\u5b58\u50a8\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf; BSS(Block Started by Symbol)\u6bb5\uff1a\u5b58\u653e\u7a0b\u5e8f\u4e2d\u672a\u521d\u59cb\u5316\u7684\u6216\u8005\u521d\u59cb\u5316\u4e3a0\u7684\u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u7684\u4e00\u5757\u5185\u5b58\u533a\u57df\u3002 \u7279\u70b9\u662f\u53ef\u8bfb\u5199\u7684\uff0c\u5728\u7a0b\u5e8f\u6267\u884c\u4e4b\u524dBSS\u6bb5\u4f1a\u81ea\u52a8\u6e050\u3002 HEAP\uff08\u5806\u7a7a\u95f4\uff09\uff1a\u52a8\u6001\u5185\u5b58\u533a\u57df\uff0c\u4f7f\u7528malloc\u6216new\u7533\u8bf7\u7684\u5185\u5b58; \u672a\u4f7f\u7528\u7684\u5185\u5b58; STACK\uff08\u6808\u7a7a\u95f4\uff09\uff1a\u5b58\u50a8\u5c40\u90e8\u53d8\u91cf\u3001\u53c2\u6570\u3001\u8fd4\u56de\u503c\uff0c\u51fd\u6570\u8c03\u7528\u5f00\u59cb\u4f1a\u53c2\u6570\u5165\u6808\u3001\u5c40\u90e8\u53d8\u91cf\u5165\u6808\uff1b\u8c03\u7528\u7ed3\u675f\u4f9d\u6b21\u51fa\u6808\u3002 \u5176\u4e2d\u5806\u7a7a\u95f4\u548c\u6808\u7a7a\u95f4\u7684\u5927\u5c0f\u662f\u53ef\u53d8\u7684\uff0c\u5806\u7a7a\u95f4\u4ece\u4e0b\u5f80\u4e0a\u751f\u957f\uff0c\u6808\u7a7a\u95f4\u4ece\u4e0a\u5f80\u4e0b\u751f\u957f\u3002 \u7b2c\u4e8c\uff0c \u8fdb\u7a0b\u662f\u4e00\u4e2a\u201c\u6267\u884c\u4e2d\u7684\u7a0b\u5e8f\u201d\u3002 \u7a0b\u5e8f\u662f\u4e00\u4e2a\u6ca1\u6709\u751f\u547d\u7684\u5b9e\u4f53\uff0c\u53ea\u6709\u5904\u7406\u5668\u8d4b\u4e88\u7a0b\u5e8f\u751f\u547d\u65f6\uff08\u64cd\u4f5c\u7cfb\u7edf\u6267\u884c\u4e4b\uff09\uff0c\u5b83\u624d\u80fd\u6210\u4e3a\u4e00\u4e2a\u6d3b\u52a8\u7684\u5b9e\u4f53\uff0c\u6211\u4eec\u79f0\u5176\u4e3a\u8fdb\u7a0b\u3002 \u8fdb\u7a0b=\u8d44\u6e90+\u6307\u4ee4\u6267\u884c\u5e8f\u5217: \u5c06\u8d44\u6e90\u548c\u6307\u4ee4\u6267\u884c\u5206\u5f00, \u4e00\u4e2a\u8d44\u6e90+\u591a\u4e2a\u6307\u4ee4\u6267\u884c\u5e8f\u5217, \u6307\u4ee4\u6267\u884c\u5e8f\u5217\u5373\u7ebf\u7a0b: \u4fdd\u7559\u4e86\u5e76\u53d1\u7684\u7279\u70b9, \u907f\u514d\u4e86\u8fdb\u7a0b\u8d44\u6e90\u5207\u6362\uff08\u5982\u6620\u5c04\u8868\u7684\u5207\u6362\uff09\u7684\u4ee3\u4ef7\u3002 \u8fdb\u7a0b\u7684\u5c42\u6b21\u7ed3\u6784 \u5f53\u8fdb\u7a0b\u521b\u5efa\u4e86\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u540e\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u4ee5\u67d0\u79cd\u5f62\u5f0f\u7ee7\u7eed\u4fdd\u6301\u5173\u8054\u3002\u5b50\u8fdb\u7a0b\u81ea\u8eab\u53ef\u4ee5\u521b\u5efa\u66f4\u591a\u7684\u8fdb\u7a0b\uff0c\u7ec4\u6210\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5c42\u6b21\u7ed3\u6784\u3002\u5728UNIX\u4e2d\uff0c\u8fdb\u7a0b\u548c\u5b83\u7684\u6240\u6709\u5b50\u8fdb\u7a0b\u4ee5\u53ca\u540e\u88d4\u5171\u540c\u7ec4\u6210\u4e00\u4e2a\u8fdb\u7a0b\u7ec4\u3002\u800c\u5728windows\u4e2d\uff0c\u6240\u6709\u8fdb\u7a0b\u7684\u5730\u4f4d\u90fd\u662f\u76f8\u540c\u7684\uff0c\u4e0d\u8fc7\u5728\u521b\u5efa\u8fdb\u7a0b\u65f6\uff0c\u7236\u8fdb\u7a0b\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u7279\u522b\u7684\u4ee4\u724c\uff08\u53e5\u67c4\uff09\uff0c\u7528\u4ee5\u63a7\u5236\u5b50\u8fdb\u7a0b\u3002 \u8fdb\u7a0b\u72b6\u6001 \u8fd0\u884c\u6001\uff1a\u8be5\u65f6\u523b\u8fdb\u7a0b\u5b9e\u9645\u5360\u7528CPU \u5c31\u7eea\u6001\uff1a\u53ef\u8fd0\u884c\uff0c\u62e5\u6709\u9664CPU\u4ee5\u5916\u7684\u6240\u6709\u6240\u9700\u8d44\u6e90\uff0c\u4f46\u56e0\u4e3a\u5176\u4ed6\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\u800c\u6682\u65f6\u505c\u6b62 \u963b\u585e\u6001\uff1a\u8fdb\u7a0b\u7b49\u5f85\u76f4\u81f3\u67d0\u4e2a\u5916\u754c\u4e8b\u4ef6\u53d1\u751f\u624d\u80fd\u8f6c\u4e3a\u5c31\u7eea\u6001\uff0c\u5426\u5219\u5c06\u4e00\u76f4\u65e0\u6cd5\u6267\u884c \u2003(\u4e94\u72b6\u6001\u6a21\u578b\u4e0b\u8fd8\u6709\u65b0\u5efa\u6001\u548c\u7ec8\u6b62\u6001\uff0c \u524d\u8005\uff1a\u65b0\u5efa\u6001\u5bf9\u5e94\u4e8e\u8fdb\u7a0b\u521a\u521a\u88ab\u521b\u5efa\u7684\u72b6\u6001\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u521b\u5efa\u7684\u65b0\u8fdb\u7a0b\u521b\u5efaPCB\uff0c\u5206\u914d\u8d44\u6e90\uff0c\u5f53\u8fdb\u7a0b\u62e5\u6709\u9664CPU\u4ee5\u5916\u7684\u6240\u6709\u8d44\u6e90\u65f6\uff0c\u5c06\u8fdb\u5165\u5c31\u7eea\u6001\uff0c\u7b49\u5f85\u8c03\u5ea6\u6267\u884c\uff1b \u540e\u8005\uff1a\u8fdb\u7a0b\u7684\u7ec8\u6b62\u8981\u901a\u8fc7\u4e24\u4e2a\u6b65\u9aa4\uff0c\u9996\u5148\uff0c\u662f\u7b49\u5f85\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884c\u5584\u540e\uff0c\u56de\u6536\u8d44\u6e90\uff1b\u7136\u540e\u64a4\u9500PCB\uff0c\u9000\u51fa\u4e3b\u5b58\u3002\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u5230\u8fbe\u4e86\u81ea\u7136\u7ed3\u675f\u70b9\uff0c\u6216\u662f\u51fa\u73b0\u4e86\u65e0\u6cd5\u514b\u670d\u7684\u9519\u8bef\uff0c\u6216\u662f\u88ab\u64cd\u4f5c\u7cfb\u7edf\u6240\u7ec8\u7ed3\uff0c\u6216\u662f\u88ab\u5176\u4ed6\u6709\u7ec8\u6b62\u6743\u7684\u8fdb\u7a0b\u6240\u7ec8\u7ed3\uff0c\u5b83\u5c06\u8fdb\u5165\u7ec8\u6b62\u6001\u3002\u8fdb\u5165\u7ec8\u6b62\u6001\u7684\u8fdb\u7a0b\u4ee5\u540e\u4e0d\u518d\u6267\u884c\uff0c\u4f46\u4f9d\u7136\u4fdd\u7559\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7b49\u5f85\u5584\u540e\u3002 \u2003 linux\u4e0b\u8fdb\u7a0b\u72b6\u6001 \u2003\u50f5\u5c38\u8fdb\u7a0b \u2003\u907f\u514d\u50f5\u5c38\u8fdb\u7a0b \u2003\u5176\u4e2d\u7684handler\u4e3a\u7236\u8fdb\u7a0b\u6ce8\u518c\u7684\u4fe1\u53f7\u5904\u7406\u51fd\u6570\uff0c\u5f53\u5b50\u8fdb\u7a0b\u9000\u51fa\u65f6\uff0c\u7236\u8fdb\u7a0b\u6536\u5230SIGCHLD\u4fe1\u53f7\uff0c\u5982\u679c\u7236\u8fdb\u7a0b\u6b64\u65f6\u6b63\u5728\u5904\u7406\u5176\u4ed6\u4e8b\u60c5\uff0c\u5219\u53ef\u4ee5\u8c03\u7528\u63d0\u524d\u6ce8\u518c\u7684handler\uff0c\u5728\u5176\u4e2d\u8c03\u7528wait/waitpid\uff0c\u6765\u83b7\u53d6\u5b50\u8fdb\u7a0b\u9000\u51fa\u72b6\u6001\uff0c\u7136\u540e\u56de\u6536\u5b50\u8fdb\u7a0b\u5269\u4f59\u4fe1\u606f\u3002 \u5bf9\u4e8e\u4ea7\u751f\u4fe1\u53f7\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u4ea7\u751f\u4fe1\u53f7\u524d\u5229\u7528\u65b9\u6cd5 signal(int signum, sighandler_t handler) \u8bbe\u7f6e\u4fe1\u53f7\u7684\u5904\u7406\u3002 \u5982\u679c\u6ca1\u6709\u8c03\u7528\u6b64\u65b9\u6cd5\uff0c\u7cfb\u7edf\u5c31\u4f1a\u8c03\u7528\u9ed8\u8ba4\u5904\u7406\u65b9\u6cd5\uff1a\u4e2d\u6b62\u7a0b\u5e8f\uff0c\u663e\u793a\u63d0\u793a\u4fe1\u606f\u3002\u6211\u4eec\u53ef\u4ee5\u8c03\u7528\u7cfb\u7edf\u7684\u5904\u7406\u65b9\u6cd5\uff0c \u4e5f\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5904\u7406\u65b9\u6cd5\u3002\u7cfb\u7edf\u91cc\u8fb9\u5b9a\u4e49\u4e86\u4e09\u79cd\u5904\u7406\u65b9\u6cd5\uff1a SIG_DFL: \u9ed8\u8ba4\u52a8\u4f5c\uff0c\u9ed8\u8ba4\u7684\u5904\u7406\u65b9\u5f0f\u662f\u4e0d\u7406\u4f1a\u8fd9\u4e2a\u4fe1\u53f7\uff0c\u4f46\u662f\u4e5f\u4e0d\u4f1a\u4e22\u5f03\u5b50\u8fdb\u884c\u72b6\u6001\uff0c\u6240\u4ee5\u5982\u679c\u4e0d\u7528wait/waitpid \u5bf9\u5176\u5b50\u8fdb\u884c\u8fdb\u884c\u72b6\u6001\u4fe1\u606f\u56de\u6536\uff0c\u4f1a\u4ea7\u751f\u50f5\u5c38\u8fdb\u7a0b\u3002 SIG_IGN: \u5ffd\u7565\u4fe1\u53f7\uff0c\u5b50\u8fdb\u7a0b\u72b6\u6001\u4fe1\u606f\u4f1a\u88ab\u4e22\u5f03\uff0c\u4e5f\u5c31\u662f\u81ea\u52a8\u56de\u6536\u4e86\uff0c\u6240\u4ee5\u4e0d\u4f1a\u4ea7\u751f\u50f5\u5c38\u8fdb\u7a0b\u3002 \u81ea\u5b9a\u4e49\u5904\u7406\u65b9\u5f0f\uff0c\u5982\u81ea\u5b9a\u4e49handler \u8fdb\u7a0b\u63cf\u8ff0\u7b26 \u5185\u6838\u628a\u8fdb\u7a0b\u7684\u5217\u8868\u5b58\u653e\u5728\u53eb\u505a\u4efb\u52a1\u961f\u5217\u7684\u53cc\u5411\u5faa\u73af\u94fe\u8868\u4e2d\uff0c\u94fe\u8868\u7684\u6bcf\u4e00\u9879\u7c7b\u578b\u90fd\u662ftask_struct,\u79f0\u4e3a\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u3001\u8fdb\u7a0b\u63a7\u5236\u5757(Process Control Block,PCB)\u3001\u8fdb\u7a0b\u8868\uff0c\u5305\u542b\u4e00\u4e2a\u5177\u4f53\u8fdb\u7a0b\u7684\u6240\u6709\u4fe1\u606f\u3002\u5982 (1)\u8fdb\u7a0b\u6807\u8bc6\u7b26(\u552f\u4e00)\uff0c PID (2)\u8fdb\u7a0b\u5f53\u524d\u72b6\u6001\uff0c\u901a\u5e38\u540c\u4e00\u72b6\u6001\u7684\u8fdb\u7a0b\u4f1a\u88ab\u653e\u5230\u540c\u4e00\u4e2a\u961f\u5217\uff1b (3)\u7a0b\u5e8f\u72b6\u6001\u5b57\u3001\u7a0b\u5e8f\u8ba1\u6570\u5668 (4)\u6587\u4ef6\u63cf\u8ff0\u7b26 (5)\u8fdb\u7a0b\u4f18\u5148\u7ea7\uff1b\u8c03\u5ea6\u7b56\u7565 (6)\u6307\u5411\u7236\u8fdb\u7a0b\u3001\u5b50\u8fdb\u7a0b\u94fe\u8868\u3001\u5144\u5f1f\u8fdb\u7a0b\u7684\u6307\u9488 (7)flags, \u53cd\u5e94\u8fdb\u7a0b\u72b6\u6001\u7684\u4fe1\u606f\uff0c\u4f46\u4e0d\u662f\u8fd0\u884c\u72b6\u6001\uff0c\u7528\u4e8e\u5185\u6838\u8bc6\u522b\u8fdb\u7a0b\u5f53\u524d\u7684\u72b6\u6001\uff0c\u4ee5\u5907\u4e0b\u4e00\u6b65\u64cd\u4f5c; PF_FORKNOEXEC \u8fdb\u7a0b\u521a\u521b\u5efa\uff0c\u4f46\u8fd8\u6ca1\u6267\u884c\u3002 PF_SUPERPRIV \u8d85\u7ea7\u7528\u6237\u7279\u6743\u3002 (8)\u8fdb\u7a0b\u540c\u6b65\u4e0e\u901a\u4fe1\u673a\u5236\uff0c\u7528\u4e8e\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u4e92\u65a5\u3001\u540c\u6b65\u548c\u901a\u4fe1\u6240\u9700\u7684\u4fe1\u53f7\u91cf\u7b49\uff1b \u7528\u4e8e\u4fdd\u62a4\u8d44\u6e90\u5206\u914d\u6216\u91ca\u653e\u7684\u81ea\u65cb\u9501\uff1b (9)\u6307\u5411\u5185\u5b58\u63cf\u8ff0\u7b26(mm_struct)\u7684\u6307\u9488mm\u548cactive_mm\uff0cmm\u6307\u5411\u7684mm_struct\u7ed3\u6784\u63cf\u8ff0\u4e86\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6574\u4e2a\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff1b \u5bf9\u4e8e\u5185\u6838\u7ebf\u7a0b\u6765\u8bf4\uff0c\u6ca1\u6709\u5730\u5740\u7a7a\u95f4\uff0c\u56e0\u6b64\u5176mm\u57df\u4e3aNULL\uff0c\u800cactive_mm\u6307\u5411\u7684\u662f\u5207\u6362\u524d\u7684\u8fdb\u7a0b\u7684mm_struct. \u6307\u5411\u5185\u6838\u6808\u7684\u6307\u9488\uff0ctask_struct->stack. (9)\u8fdb\u7a0b\u76f8\u5173\u7684\u5176\u4ed6\u4fe1\u606f\u3002\u4f8b\u5982\u8fdb\u7a0b\u521b\u5efa\u65f6\u95f4\u3001\u5728\u5185\u6838\u6001/\u7528\u6237\u6001\u7d2f\u8ba1\u8fd0\u884c\u65f6\u95f4\u7b49\u3002 \u2003 ps1. \u4e00\u4e2a\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e3b\u8981\u7531\u4e24\u4e2a\u6570\u636e\u7ed3\u6765\u63cf\u8ff0\u3002\u4e00\u4e2a\u662f\u6700\u9ad8\u5c42\u6b21\u7684\uff1amm_struct\uff0c\u4e00\u4e2a\u662f\u8f83\u9ad8\u5c42\u6b21\u7684\uff1avm_area_structs\u3002\u6700\u9ad8\u5c42\u6b21\u7684mm_struct\u7ed3\u6784\u63cf\u8ff0\u4e86\u4e00\u4e2a\u8fdb\u7a0b\u7684\u6574\u4e2a\u865a\u62df\u5730\u5740\u7a7a\u95f4\u3002\u8f83\u9ad8\u5c42\u6b21\u7684\u7ed3\u6784vm_area_truct\u63cf\u8ff0\u4e86\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u4e00\u4e2a\u533a\u95f4\uff08\u7b80\u79f0\u865a\u62df\u533a\uff09\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u53ea\u6709\u4e00\u4e2amm_struct\u7ed3\u6784\uff0c\u5728\u6bcf\u4e2a\u8fdb\u7a0b\u7684task_struct\u7ed3\u6784\u4e2d\uff0c\u6709\u4e00\u4e2a\u6307\u5411\u8be5\u8fdb\u7a0b\u7684\u7ed3\u6784\u3002\u53ef\u4ee5\u8bf4\uff0cmm_struct\u7ed3\u6784\u662f\u5bf9\u6574\u4e2a\u7528\u6237\u7a7a\u95f4\u7684\u63cf\u8ff0\u3002 \u2003 ps2. \u6bcf\u4e2a\u8fdb\u7a0b\u88ab\u521b\u5efa\u7684\u65f6\u5019\uff0c\u5728\u751f\u6210\u8fdb\u7a0b\u63cf\u8ff0\u7b26task_struct\u7684\u540c\u65f6\uff0c\u4f1a\u751f\u6210\u4e24\u4e2a\u6808\uff0c\u4e00\u4e2a\u662f\u7528\u6237\u6808\uff0c\u4f4d\u4e8e\u7528\u6237\u5730\u5740\u7a7a\u95f4\uff1b\u4e00\u4e2a\u662f\u5185\u6838\u6808\uff0c\u4f4d\u4e8e\u5185\u6838\u7a7a\u95f4\u3002\u5f53\u8fdb\u7a0b\u5728\u7528\u6237\u5730\u5740\u7a7a\u95f4\u4e2d\u6267\u884c\u7684\u65f6\u5019\uff0c\u4f7f\u7528\u7684\u662f\u7528\u6237\u6808\uff0cCPU\u5806\u6808\u6307\u9488\u5bc4\u5b58\u5668\u4e2d\u5b58\u7684\u662f\u7528\u6237\u6808\u7684\u5730\u5740\uff1b\u540c\u7406\uff0c\u5f53\u8fdb\u7a0b\u5728\u5185\u6838\u7a7a\u95f4\u6267\u884c\u65f6\uff0cCPU\u5806\u6808\u6307\u9488\u5bc4\u5b58\u5668\u4e2d\u653e\u7684\u662f\u5185\u6838\u6808\u7684\u5730\u5740\u3002 \u2003\u4f4d\u4e8e\u7528\u6237\u7a7a\u95f4\u7684\u8fdb\u7a0b\u8fdb\u884c\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c\u5b83\u4f1a\u9677\u5165\u5185\u6838\uff0c\u8ba9\u5185\u6838\u4ee3\u5176\u6267\u884c\u3002\u6b64\u65f6\uff0c\u8fdb\u7a0b\u7528\u6237\u6808\u7684\u5730\u5740\u4f1a\u88ab\u5b58\u8fdb\u5185\u6838\u6808\u4e2d\uff0cCPU\u5806\u6808\u6307\u9488\u5bc4\u5b58\u5668\u4e2d\u7684\u5185\u5bb9\u4e5f\u4f1a\u53d8\u4e3a\u5185\u6838\u6808\u7684\u5730\u5740\u3002\u5f53\u7cfb\u7edf\u8c03\u7528\u6267\u884c\u5b8c\u6bd5\uff0c\u8fdb\u7a0b\u4ece\u5185\u6838\u6808\u627e\u5230\u7528\u6237\u6808\u7684\u5730\u5740\uff0c\u7ee7\u7eed\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\u6267\u884c\uff0c\u6b64\u65f6CPU\u5806\u6808\u6307\u9488\u5bc4\u5b58\u5668\u5c31\u53d8\u4e3a\u4e86\u7528\u6237\u6808\u7684\u5730\u5740\u3002 \u2003 ps3. thread_info : \u5bf9\u4e8e\u5bc4\u5b58\u5668\u8f83\u5c11\u7684\u786c\u4ef6\u4f53\u7cfb\u7ed3\u6784\u6765\u8bf4\uff0c\u4f7f\u7528\u8fdb\u7a0b\u7684task_struct\u662f\u901a\u8fc7\u5b58\u653e\u5728\u8fdb\u7a0b\u5185\u6838\u6808\u6808\u9876\u7684struct thread_info\u6765\u5b9e\u73b0\u7684\uff0c\u5176task\u57df\u4e2d\u5b58\u653e\u4e86\u6307\u5411\u8be5\u4efb\u52a1\u5b9e\u9645task_struct\u7684\u6307\u9488\u3002 \u8fdb\u7a0b\u521b\u5efa \u2003 UNIX\u7cfb\u7edf\u91c7\u7528fork()\u548cexec()\u4e24\u4e2a\u5355\u72ec\u7684\u51fd\u6570\u6765\u5b8c\u6210\u8fdb\u7a0b\u7684\u521b\u5efa: \u2003fork()\u901a\u8fc7\u62f7\u8d1d\u5f53\u524d\u8fdb\u7a0b\u521b\u5efa\u4e00\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u5b50\u8fdb\u7a0b\u4e0e\u7236\u8fdb\u7a0b\u7684\u533a\u522b\u4ec5\u5728\u4e8ePID\u3001PPID(\u5b50\u8fdb\u7a0b\u7684PPID\u4e3a\u88ab\u62f7\u8d1d\u8fdb\u7a0b\u7684PID)\u548c\u67d0\u4e9b\u8d44\u6e90\u4e0e\u7edf\u8ba1\u91cf(\u4f8b\u5982\u6302\u8d77\u7684\u4fe1\u53f7\uff0c\u6ca1\u5fc5\u8981\u88ab\u62f7\u8d1d); \u2003exec()\u51fd\u6570\u8d1f\u8d23\u8bfb\u53d6\u53ef\u6267\u884c\u6587\u4ef6\u5e76\u5c06\u5176\u8f7d\u5165\u5730\u5740\u7a7a\u95f4\u5f00\u59cb\u8fd0\u884c\u3002 \u2003 copy-on-write (\u5199\u65f6\u590d\u5236): \u4f20\u7edffork()\u7cfb\u7edf\u8c03\u7528\u76f4\u63a5\u62f7\u8d1d\u7236\u8fdb\u7a0b\u6240\u6709\u8d44\u6e90\u7ed9\u5b50\u8fdb\u7a0b\uff0c\u4e0d\u4ec5\u6548\u7387\u4f4e\u4e0b\uff0c\u4e14\u5982\u679c\u65b0\u8fdb\u7a0b\u6253\u7b97\u7acb\u5373\u6267\u884c\u4e00\u4e2a\u65b0\u7684\u6620\u50cf\uff0c\u62f7\u8d1d\u5c06\u524d\u529f\u5c3d\u5f03\uff1b\u800clinux\u7684fork()\u7cfb\u7edf\u8c03\u7528\u91c7\u7528\u5199\u65f6\u62f7\u8d1d\u6280\u672f\u6765\u63a8\u8fdf\u751a\u81f3\u514d\u9664\u62f7\u8d1d\u6570\u636e\uff0c\u5177\u4f53\u5b9e\u73b0\u4e3a: \u5728\u521b\u5efa\u5b50\u8fdb\u7a0b\u65f6\uff0c\u5e76\u4e0d\u4f1a\u7acb\u523b\u62f7\u8d1d\u7236\u8fdb\u7a0b\u7684\u8d44\u6e90\u7ed9\u5b50\u8fdb\u7a0b\uff0c\u4e5f\u5373\u6b64\u65f6\u5185\u5b58\u4e0d\u4f1a\u4e3a\u5b50\u8fdb\u7a0b\u5206\u914d\u5b9e\u9645\u7684\u7269\u7406\u5185\u5b58\u9875\u9762\uff0c\u800c\u662f\u8ba9\u5b83\u5171\u4eab\u7236\u8fdb\u7a0b\u7684\u5185\u5b58\u9875\u9762\uff1b\u53ea\u6709\u5f53\u7236\u8fdb\u7a0b\u6216\u65b0\u8fdb\u7a0b\u4e2d\u4efb\u610f\u4e00\u4e2a\u6709\u5199\u5185\u5b58\u64cd\u4f5c\u65f6\uff0c\u7cfb\u7edf\u624d\u4f1a\u4e3a\u6267\u884c\u5199\u64cd\u4f5c\u7684\u8fdb\u7a0b\u5206\u914d\u76f8\u5173\u7684\u72ec\u81ea\u4f7f\u7528\u7684\u5185\u5b58\u9875\u9762\u3002 \u2003 fork() : linux\u901a\u8fc7clone()\u7cfb\u7edf\u8c03\u7528\u5b9e\u73b0fork()\uff0c\u901a\u8fc7\u4e00\u7cfb\u5217\u53c2\u6570\u6807\u5fd7\u6765\u6307\u660e\u7236\u3001\u5b50\u8fdb\u7a0b\u9700\u8981\u5171\u4eab\u7684\u8d44\u6e90; \u4e8b\u5b9e\u4e0a fork()\u3001vfork()\u3001_clone()\u5e93\u51fd\u6570\u90fd\u6839\u636e\u5404\u81ea\u9700\u8981\u7684\u53c2\u6570\u6807\u5fd7\u6765\u8c03\u7528clone() , \u7136\u540e\u7531clone()\u6765\u8c03\u7528do_fork()\u6765\u5b8c\u6210\u521b\u5efa\u4e2d\u7684\u5927\u90e8\u5206\u5de5\u4f5c\uff0c\u8be5\u51fd\u6570\u8c03\u7528copy_process()\uff0c\u7136\u540e\u8ba9\u8fdb\u7a0b\u5f00\u59cb\u8fd0\u884c\uff0c\u5177\u4f53\u5b8c\u6210\u5de5\u4f5c\u4e3a\uff1a fork()=>clone()=>do_fork()=>copy_process() \u2003 vfork() :\u9664\u4e86\u4e0d\u62f7\u8d1d\u7236\u8fdb\u7a0b\u7684\u9875\u8868\u9879\uff0cvfork()\u548cfork()\u529f\u80fd\u76f8\u540c\u3002\u5b50\u8fdb\u7a0b\u4f5c\u4e3a\u7236\u8fdb\u7a0b\u7684\u4e00\u4e2a\u5355\u72ec\u7684\u7ebf\u7a0b\u5728\u5b83\u7684\u5730\u5740\u7a7a\u95f4\u4e2d\u8fd0\u884c\uff0c\u7236\u8fdb\u7a0b\u88ab\u963b\u585e\uff0c\u76f4\u5230\u5b50\u8fdb\u7a0b\u9000\u51fa\u6216\u6267\u884cexec(), \u4e14\u5b50\u8fdb\u7a0b\u8fd0\u884c\u671f\u95f4\u4e0d\u80fd\u5411\u5730\u5740\u7a7a\u95f4\u4e2d\u5199\u5165\u3002 \u8fdb\u7a0b\u7ec8\u6b62 \u2003\u8c03\u7528exit()\u7cfb\u7edf\u8c03\u7528\uff0c\u6216\u8005\u63a5\u53d7\u65e0\u6cd5\u5904\u7406\u3001\u5ffd\u7565\u7684\u4fe1\u53f7\u6216\u5f02\u5e38\u65f6\u88ab\u52a8\u7ec8\u7ed3\u3002\u5927\u90e8\u5206\u5de5\u4f5c\u4f9d\u8d56do_exit()\u5b8c\u6210\uff0c\u6b64\u540e\u8fdb\u7a0b\u5904\u4e8eTASK_ZOMBIE\u72b6\u6001\uff0c\u5b58\u5728\u7684\u552f\u4e00\u76ee\u7684\u5c31\u662f\u5411\u7236\u8fdb\u7a0b\u63d0\u4f9b\u4fe1\u606f\uff0c \u7236\u8fdb\u7a0b\u68c0\u7d22\u5230\u4fe1\u606f\u540e(\u901a\u8fc7wait()\u7cfb\u7edf\u8c03\u7528\u65cf)\uff0c\u6216\u8005\u901a\u77e5\u5185\u6838\u90a3\u662f\u65e0\u5173\u4fe1\u606f\u540e\uff0c\u8be5\u8fdb\u7a0b\u6240\u6301\u6709\u7684\u5269\u4f59\u5185\u5b58\u4e5f\u88ab\u91ca\u653e \u3002 \u2003\u56e0\u6b64\u7236\u8fdb\u7a0b\u5728\u5b50\u8fdb\u7a0b\u524d\u9000\u51fa\uff0c\u5fc5\u987b\u4fdd\u8bc1\u5b50\u8fdb\u7a0b\u80fd\u627e\u5230\u4e00\u4e2a\u65b0\u7684\u7236\u4eb2\uff0c\u5426\u5219\u4f1a \u6210\u4e3a\u5b64\u513f\u8fdb\u7a0b\uff0c\u5728\u9000\u51fa\u65f6\u4e00\u76f4\u5904\u4e8eZOMBIE\u72b6\u6001\uff0c\u65e0\u6cd5\u91ca\u653e\u5269\u4f59\u5185\u5b58 \u3002\u901a\u5e38\u662f\u5728\u5f53\u524d\u7ebf\u7a0b\u7ec4\u5185\u627e\u4e00\u4e2a\u7ebf\u7a0b\u6216\u8005\u8ba9init\u8fdb\u7a0b\u4f5c\u4e3a\u7236\u8fdb\u7a0b\u3002 \u4e09\u4e2a\u7279\u6b8a\u8fdb\u7a0b idle\u8fdb\u7a0b(PID = 0), init\u8fdb\u7a0b(PID = 1)\u548ckthreadd(PID = 2) Linux\u4e2dPID\u4e3a0\u7684\u8fdb\u7a0b\u662f\u6240\u6709\u5176\u4ed6\u8fdb\u7a0b\u7684\u7956\u5148, \u4e5f\u79f0\u4f5c idle\u8fdb\u7a0b \u6216swapper\u8fdb\u7a0b(\u4ea4\u6362\u8fdb\u7a0b\uff0c\u56e0\u4e3ainit_task\u4e2d comm\u5b57\u6bb5\u5373\u4e3aswapper)\uff0c\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c\u6839\u636e\u9884\u5b9a\u4e49\u7684INIT_TASK\u5b8f\u5b9a\u4e49\u5b8c\u6210\u521d\u59cb\u5316\uff0c\u751f\u6210\u8fdb\u7a0b\u63cf\u8ff0\u7b26init_task\uff0c 0\u53f7\u8fdb\u7a0b\u7684\u6210\u5458\u5927\u90e8\u5206\u662f\u9759\u6001\u5b9a\u4e49\u7684\uff0c\u5176\u6210\u5458\u521d\u59cb\u503c\u4e5f\u90fd\u901a\u8fc7\u5bf9\u5e94\u7684\u521d\u59cb\u5316\u5b8f\u6765\u521d\u59cb\u5316\uff0c\u5982INIT_MM\u3002 0\u53f7\u8fdb\u7a0b\u8c03\u7528start_kernel\u51fd\u6570\u6765\u5bf9\u5185\u6838\u5404\u4e2a\u91cd\u8981\u5b50\u7cfb\u7edf\u8fdb\u884c\u521d\u59cb\u5316(\u5982\u5185\u5b58\u3001CPU)\uff0c\u7136\u540e\u8c03\u7528rest_init() \u6765\u5b8c\u6210\u5269\u4f59\u7684\u90e8\u5206\u7684\u521d\u59cb\u5316\uff0c\u5728\u5176\u4e2d\u4f1a\u901a\u8fc7 pid = kernel_thread(kernel_init, NULL, CLONE_FS); pid = kernel_thread(kthreadd, NULL, CLONE_FS | CLONE_FILES); \u521b\u5efa\u4e24\u4e2a\u8fdb\u7a0b\uff1b \u524d\u8005\u5373\u4e3a1\u53f7\u8fdb\u7a0b(\u521a\u521b\u5efa\u65f6\u5c1a\u5c5e\u4e8e\u5185\u6838\u8fdb\u7a0b\uff0c\u5171\u4eab0\u53f7\u8fdb\u7a0b\u7684\u8d44\u6e90), \u5728kernel_init\u51fd\u6570\u4e2d\u6765\u5b8c\u6210\u5404\u79cd\u5916\u8bbe\u9a71\u52a8\u7684\u521d\u59cb\u5316\uff0c \u5e76\u5728\u6700\u540e\u8c03\u7528execve()\u6765\u52a0\u8f7dinit\u53ef\u6267\u884c\u6587\u4ef6\uff0c\u4e3a1\u53f7\u8fdb\u7a0b\u52a0\u8f7d\u72ec\u7acb\u7684\u5730\u5740\u8d44\u6e90\uff0c\u6b64\u65f61\u53f7\u8fdb\u7a0b\u7531\u5185\u6838\u6001\u8f6c\u53d8\u4e3a\u7528\u6237\u6001\uff0c \u5373\u6210\u4e3a init\u8fdb\u7a0b \u3002 \u540e\u8005\u662f\u75311\u53f7\u8fdb\u7a0b\u521b\u5efa\u7684\uff0c\u79f0\u4e3a2\u53f7\u8fdb\u7a0b(\u8fdb\u7a0b\u540d\u5373kthreadd)\uff0c\u59cb\u7ec8\u8fd0\u884c\u5728\u5185\u6838\u7a7a\u95f4, \u8d1f\u8d23\u6240\u6709\u5185\u6838\u7ebf\u7a0b\u7684\u8c03\u5ea6\u548c\u7ba1\u7406, \u662f\u6240\u6709\u5185\u6838\u7ebf\u7a0b\u7684\u7236\u7ebf\u7a0b\u3002\uff0c","title":"\u8fdb\u7a0b"},{"location":"os/5_os/#_4","text":"\u7ebf\u7a0b \u7ebf\u7a0b\uff08thread\uff09\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u5b83\u88ab\u5305\u542b\u5728\u8fdb\u7a0b\u4e4b\u4e2d\uff0c\u662f\u8fdb\u7a0b\u4e2d\u7684\u5b9e\u9645\u8fd0\u4f5c\u5355\u4f4d\u3002 \u2003\u591a\u7ebf\u7a0b\uff1a1\u300b\u5e76\u884c\u5b9e\u4f53\u62e5\u6709\u5171\u4eab\u540c\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\u548c\u6240\u6709\u53ef\u7528\u6570\u636e\u7684\u80fd\u529b\u3002\uff08\u5373\u4e00\u4e2a\u8fdb\u7a0b\u5305\u542b\u591a\u4e2a\u7ebf\u7a0b\uff0c \u5b83\u4eec\u5171\u4eab\u8be5\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\uff0c \u800c\u591a\u8fdb\u7a0b\u6709\u4e0d\u540c\u7684\u5730\u5740\u7a7a\u95f4\uff09\u3002 2\u300b\u7ebf\u7a0b\u6bd4\u8fdb\u7a0b\u66f4\u8f7b\u91cf\u7ea7\uff0c\u6bd4\u8fdb\u7a0b\u66f4\u5bb9\u6613\u521b\u5efa\uff0c\u4e5f\u66f4\u5bb9\u6613\u64a4\u9500\u3002 3\u300b\u82e5\u5b58\u5728\u5927\u91cf\u7684\u8ba1\u7b97\u548cI/O\u5904\u7406\uff0c\u62e5\u6709\u591a\u7ebf\u7a0b\u5141\u8bb8\u8fd9\u4e9b\u6d3b\u52a8\u5f7c\u6b64\u91cd\u53e0\u8fdb\u884c\u30024\u300b\u5728\u591aCPU\u7cfb\u7edf\u4e2d\uff0c\u591a\u7ebf\u7a0b\u53ef\u4ee5\u5b9e\u73b0\u771f\u6b63\u7684\u5e76\u884c\u3002 \u5728\u7528\u6237\u7a7a\u95f4\u7ba1\u7406\u7ebf\u7a0b\u65f6\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u9700\u8981\u6709\u5176\u4e13\u7528\u7684 \u7ebf\u7a0b\u8868 , \u7ebf\u7a0b\u8868\uff08or thread control block, TCB\uff09\uff1a\u8ddf\u8e2a\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\uff0c\u8bb0\u5f55\u5404\u4e2a\u7ebf\u7a0b\u7684\u5c5e\u6027\uff0c \u5982\u6bcf\u4e2a\u7ebf\u7a0b\u7684\u7a0b\u5e8f\u8ba1\u6570\u5668\uff0c\u5806\u6808\u6307\u9488\uff0c\u5bc4\u5b58\u5668\u548c\u72b6\u6001\u3002 \u7ebf\u7a0b\u5207\u6362\u4e0e\u8fdb\u7a0b\u5207\u6362 \u2003\u8fdb\u7a0b\u5207\u6362\u5206\u4e24\u6b65\uff1a1.\u5207\u6362\u9875\u76ee\u5f55\u4ee5\u4f7f\u7528\u65b0\u7684\u5730\u5740\u7a7a\u95f4\uff1b2.\u5207\u6362\u5185\u6838\u6808\u548c\u786c\u4ef6\u4e0a\u4e0b\u6587\u3002 \u2003\u5bf9\u4e8elinux\u6765\u8bf4\uff0c\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u7684\u6700\u5927\u533a\u522b\u5c31\u5728\u4e8e\u5730\u5740\u7a7a\u95f4\uff0c\u5bf9\u4e8e\u7ebf\u7a0b\u5207\u6362\uff0c\u7b2c1\u6b65\u662f\u4e0d\u9700\u8981\u505a\u7684\uff0c\u7b2c2\u6b65\u662f\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u5207\u6362\u90fd\u8981\u505a\u7684\u3002\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\uff0c\u800c\u7ebf\u7a0b\u662f\u5171\u4eab\u6240\u5728\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\uff0c\u56e0\u6b64\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u8fdb\u884c\u7ebf\u7a0b\u5207\u6362\u65f6\u4e0d\u6d89\u53ca\u865a\u62df\u5730\u5740\u7a7a\u95f4\u7684\u8f6c\u6362. \u7ebf\u7a0b\u5b9e\u73b0\u65b9\u5f0f : 1\u300b\u5728\u7528\u6237\u7a7a\u95f4\u5b9e\u73b0\u7ebf\u7a0b \uff1a\u7279\u70b9\uff1a \u6574\u4e2a\u7ebf\u7a0b\u5305\u653e\u5165\u7528\u6237\u7a7a\u95f4\u4e2d\uff0c\u5185\u6838\u5bf9\u7ebf\u7a0b\u5305\u4e00\u65e0\u6240\u77e5\u3002\u4ece\u5185\u6838\u89d2\u5ea6\u8003\u8651\uff0c\u5c31\u662f\u6309\u6b63\u5e38\u7684\u65b9\u5f0f\u7ba1\u7406\uff0c\u5373\u5355\u7ebf\u7a0b\u8fdb\u7a0b \u3002 \u7ebf\u7a0b\u5728\u4e00\u4e2a\u8fd0\u884c\u65f6\u7cfb\u7edf\u7684\u4e0a\u5c42\u8fd0\u884c\uff0c\u8be5\u8fd0\u884c\u65f6\u7cfb\u7edf\u662f\u4e00\u4e2a\u7ba1\u7406\u7ebf\u7a0b\u7684\u8fc7\u7a0b\u7684\u96c6\u5408\u3002 \u4f18\u70b9 \uff1a 1\u3001\u7528\u6237\u7ea7\u7ebf\u7a0b\u5305\u53ef\u4ee5\u5728\u4e0d\u652f\u6301\u7ebf\u7a0b\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u5b9e\u73b0\u3002 2\u3001\u7ebf\u7a0b\u5207\u6362\u6bd4\u5185\u6838\u5feb\u66f4\u591a\uff08\u56e0\u4e3a\u4fdd\u5b58\u8be5\u7ebf\u7a0b\u72b6\u6001\u7684\u8fc7\u7a0b\u548c\u8c03\u5ea6\u7a0b\u5e8f\u90fd\u662f\u672c\u5730\u8fc7\u7a0b\uff0c\u542f\u52a8\u5b83\u4eec\u6bd4\u8fdb\u884c\u5185\u6838\u8c03\u7528\u6548\u7387\u66f4\u9ad8\uff0c\u4e0d\u9700\u8981\u9677\u5165\u5185\u6838\uff0c\u4e0d\u9700\u8981\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u4e5f\u4e0d\u9700\u8981\u5bf9\u5185\u5b58\u9ad8\u901f\u7f13\u5b58\u8fdb\u884c\u5237\u65b0\uff0c\u4f7f\u5f97\u7ebf\u7a0b\u8c03\u5ea6\u5341\u5206\u5feb\u6377\u3002 3\u3001\u5141\u8bb8\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u81ea\u5df1\u5b9a\u5236\u7684\u8c03\u5ea6\u7b97\u6cd5\u3002 \u7f3a\u70b9 : 1\u3001\u7ebf\u7a0b\u53d1\u751fI/O\u6216\u9875\u9762\u6545\u969c\u5f15\u8d77\u7684\u963b\u585e\u65f6\uff0c\u5982\u679c\u8c03\u7528\u963b\u585e\u7cfb\u7edf\u8c03\u7528\u5219\u5185\u6838\u7531\u4e8e\u4e0d\u77e5\u9053\u6709\u591a\u7ebf\u7a0b\u7684\u5b58\u5728\uff0c\u800c\u4f1a\u963b\u585e\u6574\u4e2a\u8fdb\u7a0b\u4ece\u800c\u963b\u585e\u6240\u6709\u7ebf\u7a0b; 2\u3001\u7528\u6237\u7ea7\u7ebf\u7a0b\u53ea\u80fd\u5360\u7528\u4e00\u4e2a\u6838\uff0c\u65e0\u6cd5\u505a\u5230\u5e76\u884c\u5904\u7406\uff0c\u4e0d\u80fd\u5229\u7528\u591a\u6838\u7684\u4f18\u52bf\uff1b 3\u3001\u5982\u679c\u4e00\u4e2a\u7ebf\u7a0b\u5f00\u59cb\u8fd0\u884c\uff0c\u90a3\u4e48\u8be5\u8fdb\u7a0b\u4e2d\u7684\u5176\u4ed6\u7ebf\u7a0b\u5c31\u4e0d\u80fd\u8fd0\u884c\uff0c\u9664\u975e\u7b2c\u4e00\u4e2a\u7ebf\u7a0b\u81ea\u52a8\u653e\u5f03CPU\uff1b \u4e00\u4e2a\u5355\u72ec\u7684\u8fdb\u7a0b\u5185\u90e8\uff0c\u6ca1\u6709\u65f6\u949f\u4e2d\u65ad\uff0c\u6240\u4ee5\u4e0d\u53ef\u80fd\u7528\u8f6e\u8f6c\u8c03\u5ea6\u7684\u65b9\u5f0f\u8c03\u5ea6\u7ebf\u7a0b\u3002\u9664\u975e\u67d0\u4e2a\u7ebf\u7a0b\u6309\u7167\u81ea\u5df1\u7684\u610f\u5fd7\u8fdb\u5165\u8fd0\u884c\u65f6\u7cfb\u7edf\uff0c\u5426\u5219\u8c03\u5ea6\u7a0b\u5e8f\u5c31\u6ca1\u6709\u4efb\u4f55\u673a\u4f1a \u3002 2\u300b\u5728\u5185\u6838\u4e2d\u5b9e\u73b0\u7ebf\u7a0b \uff1a\u7279\u70b9\uff1a\u5185\u6838\u652f\u6301\u5e76\u7ba1\u7406\u7ebf\u7a0b\uff0c\u4e0d\u518d\u9700\u8981\u8fd0\u884c\u65f6\u7cfb\u7edf\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u4e5f\u6ca1\u6709\u7ebf\u7a0b\u8868\u3002\u5728\u5185\u6838\u4e2d\u6709\u7528\u6765\u8bb0\u5f55\u7cfb\u7edf\u4e2d\u6240\u6709\u7ebf\u7a0b\u7684\u7ebf\u7a0b\u8868\u3002\u5f53\u67d0\u4e2a\u7ebf\u7a0b\u5e0c\u671b\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\u6216\u64a4\u9500\u4e00\u4e2a\u5df2\u6709\u7ebf\u7a0b\u65f6\uff0c\u5b83\u8fdb\u884c\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\uff0c\u8fd9\u4e2a\u7cfb\u7edf\u8c03\u7528\u901a\u8fc7\u5bf9\u7ebf\u7a0b\u8868\u7684\u66f4\u65b0\u5b8c\u6210\u7ebf\u7a0b\u521b\u5efa\u6216\u64a4\u9500\u5de5\u4f5c\u3002 \u4f18\u70b9: 1\u3001\u6240\u6709\u80fd\u591f\u963b\u585e\u7ebf\u7a0b\u7684\u8c03\u7528\u90fd\u4ee5\u7cfb\u7edf\u8c03\u7528\u7684\u5f62\u5f0f\u5b9e\u73b0\u3002 2\u3001\u5982\u679c\u67d0\u4e2a\u7ebf\u7a0b\u5f15\u8d77\u4e86\u9875\u9762\u6545\u969c\uff0c\u5185\u6838\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u68c0\u67e5\u8be5\u8fdb\u7a0b\u662f\u5426\u6709\u4efb\u4f55\u5176\u4ed6\u53ef\u8fd0\u884c\u7684\u7ebf\u7a0b\u3002 \u7f3a\u70b9: 1.\u5185\u6838\u7ea7\u7ebf\u7a0b\u5207\u6362\u4ee3\u4ef7\u66f4\u5927\u30022\u3002\u5185\u6838\u7ea7\u7ebf\u7a0b\u6570\u91cf\u6709\u9650\uff0c\u6269\u5c55\u6027\u6bd4\u4e0d\u4e0a\u7528\u6237\u7ea7\u7ebf\u7a0b\u3002 \u20033\u300b \u6df7\u5408\u5b9e\u73b0\uff1a\u4f7f\u7528\u5185\u6838\u7ea7\u7ebf\u7a0b\uff0c\u7136\u540e\u5c06\u7528\u6237\u7ea7\u7ebf\u7a0b\u4e0e\u67d0\u4e9b\u6216\u5168\u90e8\u5185\u6838\u7ebf\u7a0b\u591a\u8def\u590d\u7528\u3002 linux \u7ebf\u7a0b\u5b9e\u73b0 \u2003\u5b9e\u73b0\u673a\u5236\u4e0ewindows\u6709\u5f88\u5927\u5dee\u5f02\uff0c\u540e\u8005\u5728\u5185\u6838\u4e2d\u63d0\u4f9b\u4e86\u4e13\u95e8\u652f\u6301\u7ebf\u7a0b\u7684\u673a\u5236\uff0c\u5e76\u79f0\u5176\u4e3a\u8f7b\u91cf\u7ea7\u7ebf\u7a0b\u3002 \u2003\u7ebf\u7a0b\u7684\u521b\u5efa\u548c\u8fdb\u7a0b\u521b\u5efa\u8fc7\u7a0b\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5728\u8c03\u7528clone()\u662f\u9700\u8981\u4f20\u9012\u4e00\u4e9b\u53c2\u6570\u6807\u5fd7\u6765\u6307\u660e\u9700\u8981\u5171\u4eab\u7684\u8d44\u6e90\u3002 pid = clone(function, stack_ptr, sharing_flags, arg) \u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u5728\u5f53\u524d\u8fdb\u7a0b\u6216\u65b0\u7684\u8fdb\u7a0b\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff0c\u5177\u4f53\u4f9d\u8d56\u4e8e\u53c2\u6570sharing_flags. sharing_flags\u662f\u4e00\u4e2a\u4f4d\u56fe\uff0c\u5e38\u89c1\u7684\u4f4d\u542b\u4e49\u6709: \u5185\u6838\u7ebf\u7a0b \u72ec\u7acb\u8fd0\u884c\u5728\u5185\u6838\u7a7a\u95f4\u7684\u6807\u51c6\u8fdb\u7a0b\uff0c\u548c\u666e\u901a\u8fdb\u7a0b\u7684\u533a\u522b\u5728\u4e8e\u5185\u6838\u7ebf\u7a0b\u6ca1\u6709\u72ec\u7acb\u7684\u5730\u5740\u7a7a\u95f4\u3002\u5b83\u4eec\u53ea\u5728\u5185\u6838\u7a7a\u95f4\u8fd0\u884c\uff0c\u4ece\u4e0d\u5207\u6362\u5230\u7528\u6237\u7a7a\u95f4\uff0c\u548c\u666e\u901a\u8fdb\u7a0b\u4e00\u6837\uff0c\u53ef\u4ee5\u88ab\u8c03\u5ea6\u548c\u62a2\u5360\u3002","title":"\u7ebf\u7a0b"},{"location":"os/5_os/#_5","text":"\u591a\u4efb\u52a1: \u591a\u4efb\u52a1\u64cd\u4f5c\u7cfb\u7edf\u5c31\u662f\u80fd \u540c\u65f6\u5e76\u53d1\u4f4e\u4ea4\u4e92\u6267\u884c\u591a\u4e2a\u8fdb\u7a0b \u7684\u64cd\u4f5c\u7cfb\u7edf","title":"\u8fdb\u7a0b\u8c03\u5ea6"},{"location":"os/5_os/#_6","text":"\u51b3\u5b9a\u8c03\u5ea6\u7a0b\u5e8f\u4f55\u65f6\u8ba9\u4ec0\u4e48\u8fdb\u7a0b\u8fd0\u884c\uff0c\u8d1f\u8d23\u4f18\u5316\u4f7f\u7528\u5904\u7406\u5668\u65f6\u95f4\u3002 \u2003I/O\u6d88\u8017\u578b\u8fdb\u7a0b\uff1a\u8fd9\u91cc\u7684I/O\u662f\u4efb\u4f55\u7c7b\u578b\u7684\u53ef\u963b\u585e\u8d44\u6e90\uff0c\u8fdb\u7a0b\u7684\u5927\u90e8\u5206\u65f6\u95f4\u7528\u6765\u63d0\u4ea4I/O\u8bf7\u6c42\u6216\u662f\u7b49\u5f85I/O\u8bf7\u6c42\u3002 \u2003\u5904\u7406\u5668\u6d88\u8017\u578b\u8fdb\u7a0b\uff1a\u65f6\u95f4\u5927\u591a\u7528\u5728\u6267\u884c\u4ee3\u7801\u4e0a\uff0c\u9664\u975e\u88ab\u62a2\u5360\uff0c\u5426\u5219\u901a\u5e38\u4e00\u76f4\u5728\u8fd0\u884c\u3002 \u2003\u51fa\u4e8e\u7cfb\u7edf\u54cd\u5e94\u901f\u5ea6\u8003\u8651\uff0c\u8c03\u5ea6\u5668\u4f1a\u964d\u4f4e\u5904\u7406\u5668\u6d88\u8017\u578b\u8fdb\u7a0b\u7684\u8c03\u5ea6\u9891\u7387\uff0c\u800c\u5ef6\u957f\u5176\u6267\u884c\u65f6\u95f4\u3002 \u2003 \u8c03\u5ea6\u7b56\u7565\u901a\u5e38\u8981\u5728\u8fdb\u7a0b\u54cd\u5e94\u65f6\u95f4\u548c\u6700\u5927\u7cfb\u7edf\u5229\u7528\u7387(\u9ad8\u541e\u5410\u91cf)\u8fd9\u4e24\u4e2a\u76ee\u6807\u95f4\u5bfb\u6c42\u5e73\u8861 \u8fdb\u7a0b\u4f18\u5148\u7ea7\uff1alinux\u91c7\u7528\u4e86\u4e24\u79cd\u4f18\u5148\u7ea7\u8303\u56f4 \u2003nice\u503c\uff0c\u8303\u56f4[-20,19], \u8d8a\u5927\uff0c\u4f18\u5148\u7ea7\u8d8a\u5c0f, \u5728linux\u4e2d\uff0cnice\u503c\u4ee3\u8868\u65f6\u95f4\u7247\u6bd4\u4f8b\u3002 \u2003\u5b9e\u65f6\u4f18\u5148\u7ea7\uff0c\u9ed8\u8ba4\u8303\u56f4[0,99], \u8d8a\u5927\uff0c\u4f18\u5148\u7ea7\u8d8a\u9ad8\uff0c\u4efb\u4f55\u5b9e\u65f6\u8fdb\u7a0b\u7684\u4f18\u5148\u7ea7\u90fd\u9ad8\u4e8e\u666e\u901a\u8fdb\u7a0b\u3002 \u65f6\u95f4\u7247 \u2003\u8868\u660e\u8fdb\u7a0b\u5728\u88ab\u62a2\u5360\u524d\u6240\u80fd\u6301\u7eed\u8fd0\u884c\u7684\u65f6\u95f4","title":"\u8fdb\u7a0b\u8c03\u5ea6\u7b56\u7565"},{"location":"os/5_os/#linux","text":"\u5b8c\u5168\u516c\u5e73\u8c03\u5ea6(CFS): \u5176\u662f\u4e00\u4e2a\u9488\u5bf9\u666e\u901a\u8fdb\u7a0b\u7684\u8c03\u5ea6\u7c7b\u3002 \u2003 \u8bbe\u8ba1\u7406\u5ff5 :\u8fdb\u7a0b\u8c03\u5ea6\u7684\u6548\u679c\u5982\u540c\u7cfb\u7edf\u5177\u5907\u4e00\u4e2a\u7406\u60f3\u4e2d\u7684\u5b8c\u7f8e\u591a\u4efb\u52a1\u5904\u7406\u5668\uff0c\u5728\u8fd9\u79cd\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u5c06\u83b7\u5f971/n\u7684\u5904\u7406\u5668\u65f6\u95f4(n\u662f\u53ef\u8fd0\u884c\u7684\u8fdb\u7a0b\u6570\u91cf)\u3002 \u2003 \u5185\u90e8\u903b\u8f91 :CFS\u5e76\u6ca1\u6709\u76f4\u63a5\u5206\u914d\u65f6\u95f4\u7247\u5230\u8fdb\u7a0b\uff0c\u800c\u662f\u5c06\u5904\u7406\u5668\u7684\u4f7f\u7528\u6bd4\u5212\u5206\u7ed9\u4e86\u8fdb\u7a0b\uff0c\u8fd9\u4e2a\u6bd4\u4f8b\u4f1a\u53d7\u5230nice\u503c\u7684\u5f71\u54cd\uff1b\u6bcf\u4e2a\u8fdb\u7a0b\u8fd0\u884c\u4e00\u6bb5\u65f6\u95f4\uff0c\u5faa\u73af\u8f6e\u8f6c\uff0cCFS\u7136\u540e\u9009\u62e9\u8fd0\u884c\u6700\u5c11(vruntime\u6700\u5c0f)\u7684\u8fdb\u7a0b\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u8fd0\u884c\u8fdb\u7a0b\u3002 \u2003 \u5177\u4f53\u5b9e\u73b0 : CFS\u4f7f\u7528\u7ea2\u9ed1\u6811\u6765\u7ec4\u7ec7\u53ef\u8fd0\u884c\u8fdb\u7a0b\u961f\u5217\uff0c\u5e76\u7528\u5176\u8fc5\u901f\u627e\u5230\u6700\u5c0fvruntime\u503c\u7684\u8fdb\u7a0b\u3002 vruntime \uff0c\u865a\u8fd0\u884c\u65f6\uff0c \u5206\u914d\u7ed9\u8fdb\u7a0b\u7684\u8fd0\u884c\u65f6\u95f4=\u8c03\u5ea6\u5468\u671f*\u8fdb\u7a0b\u6743\u91cd / \u6240\u6709\u53ef\u8fd0\u884c\u8fdb\u7a0b\u6743\u91cd\u4e4b\u548c (\u5f0f1) vruntime = \u5b9e\u9645\u8fd0\u884c\u65f6\u95f4*1024/\u8fdb\u7a0b\u6743\u91cd = \u8c03\u5ea6\u5468\u671f*1024/\u6240\u6709\u53ef\u8fd0\u884c\u8fdb\u7a0b\u6743\u91cd\u4e4b\u548c (\u5f0f2\uff0c1024\u662fnice\u4e3a0\u7684\u8fdb\u7a0b\u7684\u6743\u91cd) \u2003\u867d\u7136\u8fdb\u7a0b\u7684\u6743\u91cd\u4e0d\u540c\uff0c\u4f46vruntime\u7684\u589e\u957f\u901f\u5ea6\u662f\u76f8\u540c\u7684\uff1b\u5bf9\u4e8evruntime\u8f83\u5c0f\u7684\u8fdb\u7a0b\uff0c\u8bf4\u660e\u5176\u4e4b\u524d\u8fd0\u884c\u65f6\u95f4\u77ed\uff0c\u4f1a\u88ab\u4f18\u5148\u8c03\u5ea6\uff0c \u8fd9\u5373CFS\u516c\u5e73\u8c03\u5ea6\u7684\u7531\u6765\u3002 \u4f11\u7720\u548c\u5524\u9192 \u2003\u7b49\u5f85\u961f\u5217\u662f\u7531\u7b49\u5f85\u67d0\u4e9b\u4e8b\u4ef6\u53d1\u751f\u7684\u8fdb\u7a0b\u7ec4\u6210\u7684\u7b80\u5355\u94fe\u8868\u3002 \u4e0a\u4e0b\u6587\u5207\u6362: \u4ece\u4e00\u4e2a\u53ef\u6267\u884c\u8fdb\u7a0b\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u53ef\u6267\u884c\u8fdb\u7a0b \u7531shcedule()\u8c03\u7528context_switch()\u5b8c\u6210\u4e24\u9879\u57fa\u672c\u5de5\u4f5c: \u628a\u865a\u62df\u5185\u5b58\u4ece\u4e0a\u4e00\u4e2a\u8fdb\u7a0b\u6620\u5c04\u5207\u6362\u5230\u65b0\u8fdb\u7a0b\uff1b\u4ece\u4e0a\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5904\u7406\u5668\u72b6\u6001\u5207\u6362\u5230\u65b0\u8fdb\u7a0b\u7684\u5904\u7406\u5668\u72b6\u6001\uff0c\u5305\u62ec\u4fdd\u5b58\u3001\u6062\u590d\u6808\u4fe1\u606f\u548c\u5bc4\u5b58\u5668\u4fe1\u606f\u3002 need_resched: \u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u5305\u542b\u4e00\u4e2aneed_resched\u6807\u5fd7\uff0c\u7528\u6765\u8868\u660e\u662f\u5426\u9700\u8981\u91cd\u65b0\u6267\u884c\u4e00\u6b21\u8c03\u5ea6\u3002 \u7528\u6237\u62a2\u5360\uff1a\u4ece\u7cfb\u7edf\u8c03\u7528\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u6216\u8005\u4ece\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u8fd4\u56de\u7528\u6237\u7a7a\u95f4\u65f6\uff0c\u5982\u679cneed_resched\u88ab\u8bbe\u7f6e\uff0c\u4f1a\u5bfc\u81f4schedule()\u88ab\u8c03\u7528\uff0c\u5185\u6838\u4f1a\u9009\u62e9\u4e00\u4e2a\u5176\u4ed6\u66f4\u5408\u9002\u7684\u8fdb\u7a0b\u8fd0\u884c\u3002 \u5185\u6838\u62a2\u5360\uff1a\u6bcf\u4e2a\u8fdb\u7a0b\u7684thread_info\u4e2d\u5f15\u5165\u4e86preemept_count\u8ba1\u6570\u5668\uff0c\u521d\u59cb\u4e3a0\uff0c\u4f7f\u7528\u9501\u65f6\uff0c+1\uff0c\u91ca\u653e\u9501\u65f6\uff0c-1\uff1b\u5f53\u4e3a0\u65f6\uff0c\u5185\u6838\u5c31\u53ef\u6267\u884c\u62a2\u5360\u3002 \u5185\u6838\u62a2\u5360\u4f1a\u53d1\u751f\u5728: \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u6b63\u5728\u6267\u884c\uff0c\u4e14\u8fd4\u56de\u5185\u6838\u7a7a\u95f4\u4e4b\u524d\uff1b \u5185\u6838\u4ee3\u7801\u5177\u6709\u62a2\u5360\u6027\u7684\u65f6\u5019\uff1b \u5185\u6838\u4e2d\u7684\u4efb\u52a1\u663e\u793a\u8c03\u7528schedule\uff1b \u5982\u679c\u5185\u6838\u4e2d\u7684\u4efb\u52a1\u963b\u585e \u5b9e\u65f6\u8c03\u5ea6\u7b56\u7565","title":"Linux\u8fdb\u7a0b\u8c03\u5ea6\u7b97\u6cd5"},{"location":"os/5_os/#_7","text":"\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7684\u5c40\u9650: \u4e2d\u65ad\u5904\u7406\u6d41\u7a0b\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e0a\u534a\u90e8\u662f\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\uff0c\u5b8c\u6210\u5bf9\u786c\u4ef6\u4e2d\u65ad\u7684\u5373\u65f6\u54cd\u5e94\uff1b\u4e0b\u534a\u90e8\u6267\u884c\u4e0e\u4e2d\u65ad\u5904\u7406\u5bc6\u5207\u76f8\u5173\u4f46\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u672c\u8eab\u4e0d\u6267\u884c\u7684\u5de5\u4f5c\u3002\u4e0b\u534a\u90e8\u4e00\u822c\u5728\u4e2d\u65ad\u5904\u7406\u8fd4\u56de\u540e\u5c31\u7acb\u5373\u6267\u884c\uff0c\u800c\u4e14\u6267\u884c\u671f\u95f4\u5141\u8bb8\u54cd\u5e94\u6240\u6709\u4e2d\u65ad\u3002 \u8fd9\u79cd\u8bbe\u8ba1\u53ef\u4f7f\u7cfb\u7edf\u5904\u4e8e\u4e2d\u65ad\u5c4f\u853d\u72b6\u6001\u7684\u65f6\u95f4\u5c3d\u53ef\u80fd\u77ed\uff0c\u4ee5\u6b64\u6765\u63d0\u9ad8\u7cfb\u7edf\u7684\u54cd\u5e94\u65f6\u95f4\u3002 \u4e0b\u534a\u90e8\u5b9e\u73b0\u673a\u5236\uff1a\u8f6f\u4e2d\u65ad\u3001tasklet\u3001\u5de5\u4f5c\u961f\u5217","title":"\u4e2d\u65ad"},{"location":"os/5_os/#_8","text":"","title":"\u5185\u6838\u540c\u6b65"},{"location":"os/5_os/#_9","text":"\u5982\u679c\u67d0\u4e2a\u7cfb\u7edf\u652f\u6301\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u52a8\u4f5c\uff08Action\uff09\u540c\u65f6\u5b58\u5728\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7cfb\u7edf\u5c31\u662f\u4e00\u4e2a\u5e76\u53d1(concurrent)\u7cfb\u7edf\u3002\u5982\u679c\u67d0\u4e2a\u7cfb\u7edf\u652f\u6301\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u52a8\u4f5c\u540c\u65f6\u6267\u884c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7cfb\u7edf\u5c31\u662f\u4e00\u4e2a\u5e76\u884c(parallel)\u7cfb\u7edf\u3002 \u2003\u5728\u5e76\u53d1\u7a0b\u5e8f\u4e2d\u53ef\u4ee5\u540c\u65f6\u62e5\u6709\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u7ebf\u7a0b\u3002\u8fd9\u610f\u5473\u7740\uff0c\u5982\u679c\u7a0b\u5e8f\u5728\u5355\u6838\u5904\u7406\u5668\u4e0a\u8fd0\u884c\uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u7ebf\u7a0b\u5c06\u4ea4\u66ff\u5730\u6362\u5165\u6216\u8005\u6362\u51fa\u5185\u5b58\u3002\u8fd9\u4e9b\u7ebf\u7a0b\u662f\u540c\u65f6\u201c\u5b58\u5728\u201d\u7684\u2014\u2014\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u5904\u4e8e\u6267\u884c\u8fc7\u7a0b\u4e2d\u7684\u67d0\u4e2a\u72b6\u6001\u3002\u5982\u679c\u7a0b\u5e8f\u80fd\u591f\u5e76\u884c\u6267\u884c\uff0c\u90a3\u4e48\u5c31\u4e00\u5b9a\u662f\u8fd0\u884c\u5728\u591a\u6838\u5904\u7406\u5668\u4e0a\u3002\u6b64\u65f6\uff0c\u7a0b\u5e8f\u4e2d\u7684\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u5c06\u5206\u914d\u5230\u4e00\u4e2a\u72ec\u7acb\u7684\u5904\u7406\u5668\u6838\u4e0a\uff0c\u56e0\u6b64\u53ef\u4ee5\u540c\u65f6\u8fd0\u884c\u3002 \u2003\u5e76\u884c\u201d\u6982\u5ff5\u662f\u201c\u5e76\u53d1\u201d\u6982\u5ff5\u7684\u4e00\u4e2a\u5b50\u96c6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4f60\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a\u62e5\u6709\u591a\u4e2a\u7ebf\u7a0b\u6216\u8005\u8fdb\u7a0b\u7684\u5e76\u53d1\u7a0b\u5e8f\uff0c\u4f46\u5982\u679c\u6ca1\u6709\u591a\u6838\u5904\u7406\u5668\u6765\u6267\u884c\u8fd9\u4e2a\u7a0b\u5e8f\uff0c\u90a3\u4e48\u5c31\u4e0d\u80fd\u4ee5\u5e76\u884c\u65b9\u5f0f\u6765\u8fd0\u884c\u4ee3\u7801\u3002","title":"\u5e76\u884c&amp;\u5e76\u53d1"},{"location":"os/5_os/#_10","text":"\u4e34\u754c\u533a: \u5bf9\u5171\u4eab\u5185\u5b58\u8fdb\u884c\u8bbf\u95ee\u7684\u7a0b\u5e8f\u7247\u6bb5\u79f0\u4f5c\u4e34\u754c\u533a\u57df(critical region)\u6216\u4e34\u754c\u533a(critical section)\u3002 \u82e5\u4e24\u4e2a\u8fdb\u7a0b\u4e0d\u53ef\u80fd\u540c\u65f6\u5904\u4e8e\u4e34\u754c\u533a\u57df\uff0c\u5c31\u80fd\u907f\u514d\u7ade\u4e89\u6761\u4ef6\u3002 \u7ade\u6001\u6761\u4ef6\uff08race condition\uff09\uff1a\u5373\u591a\u4e2a\u8fdb\u7a0b\u8bfb\u5199\u67d0\u4e9b\u5171\u4eab\u6570\u636e\uff0c\u800c\u6700\u540e\u7684\u7ed3\u679c\u53d6\u51b3\u4e8e\u8fdb\u7a0b\u8fd0\u884c\u7684\u7cbe\u786e\u65f6\u5e8f\u3002 \u540c\u6b65: \u4e3a\u4e86\u5728\u907f\u514d\u7ade\u4e89\u6761\u4ef6\u7684\u540c\u65f6\uff0c\u4fdd\u8bc1\u4f7f\u7528\u5171\u4eab\u6570\u636e\u7684\u5e76\u53d1\u8fdb\u7a0b\u80fd\u6b63\u786e\u548c\u9ad8\u6548\u5730\u534f\u4f5c\uff0c\u9700\u8981\u6ee1\u8db34\u4e2a\u6761\u4ef6\uff1a 1\u3001\u4efb\u4f55\u4e24\u4e2a\u8fdb\u7a0b\u4e0d\u80fd\u540c\u65f6\u5904\u4e8e\u5176\u4e34\u754c\u533a\u3002 2\u3001\u4e0d\u8981\u5bf9CPU\u7684\u901f\u5ea6\u548c\u6570\u91cf\u505a\u4efb\u4f55\u5047\u8bbe\u3002 3\u3001\u4e34\u754c\u533a\u5916\u8fd0\u884c\u7684\u8fdb\u7a0b\u4e0d\u5f97\u963b\u585e\u5176\u4ed6\u8fdb\u7a0b\u3002 4\u3001\u4e0d\u5f97\u4f7f\u8fdb\u7a0b\u65e0\u9650\u671f\u7b49\u5f85\u8fdb\u5165\u4e34\u754c\u533a\u3002 \u9700\u8981\u8fdb\u7a0b\u540c\u6b65\u539f\u56e0","title":"\u540c\u6b65"},{"location":"os/5_os/#_11","text":"\u52a0\u9501: \u8bbe\u7f6e\u4e00\u4e2a\u9501\u53d8\u91cf\uff0c\u53ef\u4ee5\u8bbe\u521d\u59cb\u4e3a0\uff0c\u6709\u8fdb\u7a0b\u60f3\u8fdb\u5165\u4e34\u754c\u533a\u65f6\uff0c\u5148\u5bf9\u9501\u53d8\u91cf\u6d4b\u8bd5\uff0c\u4e3a0\u5219\u8fdb\uff0c\u8fdb\u5165\u540e\u5c06\u5176\u8bbe\u4e3a1\u30020\u8868\u793a\u4e34\u754c\u533a\u6ca1\u8fdb\u7a0b\uff0c1\u4ee3\u8868\u5df2\u6709\u8fdb\u7a0b\u8fdb\u5165\u4e34\u754c\u533a\u3002\u4f46\u662f\u4ecd\u5b58\u5728\u95ee\u9898\uff0c\u5f53\u8fdb\u7a0ba\u628a\u9501\u53d8\u91cf\u8bbe\u4e3a1\u4e4b\u524d\u6070\u597d\u53c8\u6709\u8fdb\u7a0bb\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u4e34\u754c\u533a\u5c06\u67092\u4e2a\u8fdb\u7a0b\u3002\u5bf9\u4e8e\u6b64\u95ee\u9898\uff0c\u4e00\u822c\u5bf9\u83b7\u5f97\u9501\u548c\u6539\u53d8\u9501\u53d8\u91cf\u91c7\u7528\u539f\u5b50\u64cd\u4f5c\uff0c\u5982\u4e0b\u9762\u7684TSL\u6307\u4ee4\u3002 TSL RX, LOCK\uff1a\u6d4b\u8bd5\u5e76\u52a0\u9501\uff0c\u5c06\u4e00\u4e2a\u5185\u5b58\u5b57\u8bfb\u53d6\u5230\u5bc4\u5b58\u5668RX\u4e2d\uff0c\u7136\u540e\u5728\u8be5\u5185\u5b58\u5730\u5740\u8bbe\u7f6e\u4e00\u4e2a\u975e0\u503c\uff0c\u5e76\u4fdd\u8bc1\u8bfb\u5199\u64cd\u4f5c\u4e0d\u53ef\u5206\u5272\u3002\u5176\u5b83cpu\u4e0d\u80fd\u5728TSL\u6307\u4ee4\u7ed3\u675f\u4e4b\u524d\u8bbf\u95ee\u8be5\u5185\u5b58\u5b57\u3002 \u6267\u884cTSL\u6307\u4ee4\uff08test and set lock\uff09\u7684cpu\u5c06\u9501\u4f4f\u5185\u5b58\u603b\u7ebf\uff0c\u9632\u6b62\u5176\u5b83cpu\u5728\u6b64\u6307\u4ee4\u5b8c\u6210\u524d\u8bbf\u95ee\u5185\u5b58\u3002 \u5177\u4f53\u65b9\u6cd5\uff1a\u4f7f\u7528\u4e00\u4e2a\u5171\u4eab\u53d8\u91cflock\uff0clock\u4e3a0\u65f6\u4efb\u4f55\u8fdb\u7a0b\u90fd\u80fd\u4f7f\u7528TSL\u6307\u4ee4\uff0c\u5e76\u5c06lock\u8bbe\u4e3a1\uff0c\u8bfb\u5199\u5171\u4eab\u5185\u5b58\uff1b\u64cd\u4f5c\u7ed3\u675f\u540e\uff0c\u5229\u7528move\u6307\u4ee4\u5c06lock\u91cd\u65b0\u8bbe\u4e3a0. \uff08\u53ef\u4f7f\u7528XCHG\u6307\u4ee4\u66ff\u4ee3TSL\uff0c\u5b83\u539f\u5b50\u6027\u5730\u4ea4\u6362\u4e24\u4e2a\u4f4d\u7f6e\u7684\u5185\u5bb9\u3002\uff09 \u6b7b\u9501 \u9501\u7684\u4e89\u7528 \u2003\u6307\u5f53\u9501\u6b63\u5728\u88ab\u5360\u7528\u65f6\uff0c\u6709\u5176\u4ed6\u8fdb\u7a0b\u8bd5\u56fe\u83b7\u5f97\u8be5\u9501\uff1b\u5f53\u6709\u591a\u4e2a\u8fdb\u7a0b\u90fd\u5728\u7b49\u5f85\u83b7\u5f97\u8be5\u9501\u65f6\uff0c\u9501\u5c31\u5904\u4e8e\u9ad8\u5ea6\u4e89\u7528\u72b6\u6001\u3002 \u2003\u9501\u7684\u4f5c\u7528\u4f7f\u5f97\u7a0b\u5e8f\u4ee5\u4e32\u884c\u65b9\u5f0f\u8bbf\u95ee\u8d44\u6e90\uff0c\u4f1a\u964d\u4f4e\u7cfb\u7edf\u6027\u80fd\u3002\u88ab\u9ad8\u5ea6\u4e89\u7528\u7684\u9501(\u9891\u7e41\u88ab\u5360\u7528\u6216\u957f\u65f6\u95f4\u88ab\u5360\u7528)\u4f1a\u6210\u4e3a\u7cfb\u7edf\u7684\u74f6\u9888\u3002 \u2003\u5f53\u9501\u4e89\u7528\u4e25\u91cd\u65f6\uff0c\u52a0\u9501\u592a\u7c97(\u52a0\u9501\u7684\u7c97\u7c92\u5ea6\u6307\u88ab\u4fdd\u62a4\u7684\u6570\u636e\u89c4\u6a21\uff0c\u8fc7\u7c97\u7684\u9501\u7528\u6765\u4fdd\u62a4\u5927\u5757\u6570\u636e\uff0c\u7cbe\u7ec6\u7684\u9501\u5219\u4fdd\u62a4\u8f83\u5c0f\u7684\u5143\u7d20)\u4f1a\u964d\u4f4e\u6269\u5c55\u6027\uff1b\u9501\u4e89\u7528\u4e0d\u660e\u663e\u65f6\uff0c\u52a0\u9501\u592a\u7ec6\u4f1a\u52a0\u5927\u7cfb\u7edf\u5f00\u9500\uff0c\u5e26\u6765\u6d6a\u8d39\u3002","title":"\u9501"},{"location":"os/5_os/#_12","text":"\u539f\u5b50\u64cd\u4f5c: \u4fdd\u8bc1\u6307\u4ee4\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u88ab\u6253\u65ad\uff0c\u5185\u6838\u63d0\u4f9b\u4e86\u4e24\u79cd\u539f\u5b50\u64cd\u4f5c\u63a5\u53e3\uff0c\u5206\u522b\u9488\u5bf9\u6574\u6570\u548c\u5355\u72ec\u7684\u4f4d\u8fdb\u884c\u64cd\u4f5c\u3002 \u81ea\u65cb\u9501 \uff1a\u662f\u6307\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u8bd5\u56fe\u83b7\u53d6\u9501\u7684\u65f6\u5019\uff0c\u5982\u679c\u9501\u5df2\u7ecf\u88ab\u5176\u5b83\u7ebf\u7a0b\u83b7\u53d6\uff0c\u90a3\u4e48\u8be5\u7ebf\u7a0b\u5c06\u5faa\u73af\u7b49\u5f85\uff0c\u7136\u540e\u4e0d\u65ad\u7684\u5224\u65ad\u9501\u662f\u5426\u80fd\u591f\u88ab\u6210\u529f\u83b7\u53d6\uff0c\u76f4\u5230\u83b7\u53d6\u5230\u9501\u624d\u4f1a\u9000\u51fa\u5faa\u73af\u3002\u81ea\u65cb\u9501\u4f1a\u9020\u6210\u5fd9\u7b49\u5f85\u3002\u56e0\u6b64 \u81ea\u65cb\u9501 \u4e00\u822c\u9002\u7528\u4e8e\u52a0\u9501\u65f6\u95f4\u4e0d\u957f\uff0c\u4e14\u4ee3\u7801\u4e0d\u4f1a\u7761\u7720(\u4f8b\u5982\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f) \uff0c\u53cd\u4e4b\u4f7f\u7528 \u4fe1\u53f7\u91cf \u66f4\u5408\u9002 \u3002 \u2003\u8bfb/\u5199\u81ea\u65cb\u9501\uff1a\u4e00\u4e2a\u6216\u591a\u4e2a\u4efb\u52a1\u53ef\u4ee5\u5e76\u53d1\u5730\u6301\u6709\u8bfb\u8005\u9501\uff0c\u4f46\u540c\u65f6\u6700\u591a\u53ea\u80fd\u6709\u4e00\u4e2a\u4efb\u52a1\u6301\u6709\u5199\u9501\u3002\u56e0\u6b64 \u4e0d\u80fd\u5c06\u4e00\u4e2a\u9501\u7531\u8bfb\u9501\u5347\u7ea7\u4e3a\u5199\u9501\uff0c\u5426\u5219\u5982\u679c\u8bfb\u9501\u6ca1\u6709\u88ab\u91ca\u653e\uff0c\u5199\u9501\u5c06\u4f1a\u81ea\u65cb\uff0c\u7b49\u5f85\u6240\u6709\u8bfb\u8005\u91ca\u653e\u9501\uff0c\u5305\u62ec\u5176\u672c\u8eab\uff0c\u4ece\u800c\u9020\u6210\u6b7b\u9501 \u3002 \u4fe1\u53f7\u91cf \u2003\u4fe1\u53f7\u91cf\u4e0d\u4f1a\u7981\u6b62\u5185\u6838\u62a2\u5360\uff0c\u6301\u6709\u4fe1\u53f7\u91cf\u7684\u4ee3\u7801\u53ef\u4ee5\u88ab\u62a2\u5360; \u4e92\u65a5\u4f53(mutex) \u5b9e\u73b0\u4e92\u65a5\u7684\u7279\u5b9a\u7761\u7720\u9501\uff0c\u5176\u884c\u4e3a\u548c\u4f7f\u7528\u8ba1\u65701\u7684\u4e92\u65a5\u4fe1\u53f7\u91cf\u7c7b\u4f3c\uff0c\u4f46\u64cd\u4f5c\u63a5\u53e3\u66f4\u7b80\u5355\uff0c\u9650\u5236\u6027\u66f4\u5f3a\uff0c\u9002\u5e94\u4e8e\u5b9a\u5411\u6027\u5f3a\u7684\u573a\u666f\u3002 \u8fd9\u91cc\u7684\u4e92\u65a5\u4f53\u4e5f\u5305\u62ec\u4fe1\u53f7\u91cf\uff1b\u4e2d\u65ad\u4e0a\u4e0b\u6587\u4e2d\u4e0d\u80fd\u7761\u7720\uff0c\u56e0\u6b64\u53ea\u80fd\u4f7f\u7528\u81ea\u65cb\u9501 \u5b8c\u6210\u53d8\u91cf completion variable: \u5982\u679c\u5728\u5185\u6838\u4e2d \u4e00\u4e2a\u4efb\u52a1\u9700\u8981\u53d1\u51fa\u4fe1\u53f7\u901a\u77e5\u53e6\u4e00\u4efb\u52a1\u53d1\u751f\u4e86\u7279\u5b9a\u4e8b\u4ef6 \uff0c\u5229\u7528\u5b8c\u6210\u53d8\u91cf\u662f\u4f7f\u4e24\u4e2a\u4efb\u52a1\u5f97\u4ee5\u540c\u6b65\u7684\u7b80\u5355\u65b9\u6cd5\u3002\u5982\u679c\u4e00\u4e2a\u4efb\u52a1\u8981\u6267\u884c\u4e00\u4e9b\u5de5\u4f5c\u65f6\uff0c\u53e6\u4e00\u4e2a\u4efb\u52a1\u5c31\u4f1a\u5728\u5b8c\u6210\u53d8\u91cf\u4e0a\u7b49\u5f85\u3002\u5f53\u8fd9\u4e2a\u4efb\u52a1\u5b8c\u6210\u5de5\u4f5c\u65f6\uff0c\u5c31\u4f1a\u4f7f\u7528\u5b8c\u6210\u53d8\u91cf\u53bb\u5524\u9192\u5728\u7b49\u5f85\u7684\u4efb\u52a1\u3002 \u2003\u4f8b\u5982\u5f53\u5b50\u8fdb\u7a0b\u6267\u884c\u6216\u9000\u51fa\u65f6\uff0cvfork()\u7cfb\u7edf\u8c03\u7528\u4f7f\u7528\u8fd9\u4e9b\u5b8c\u6210\u53d8\u91cf\u6765\u5524\u9192\u7236\u8fdb\u7a0b\u3002","title":"\u5185\u6838\u540c\u6b65\u65b9\u6cd5"},{"location":"os/5_os/#_13","text":"","title":"\u5185\u5b58\u7ba1\u7406"},{"location":"os/5_os/#_14","text":"\u4ee532\u4f4dx86 CPU\u4e3a\u4f8b: 1\u3001x86 CPU\u91c7\u7528\u4e86\u6bb5\u9875\u5f0f\u5730\u5740\u6620\u5c04\u6a21\u578b\u3002\u8fdb\u7a0b\u4ee3\u7801\u4e2d\u7684\u5730\u5740\u4e3a\u903b\u8f91\u5730\u5740\uff0c \u7ecf\u8fc7\u6bb5\u9875\u5f0f\u5730\u5740\u6620\u5c04(\u5148\u6620\u5c04\u5230\u7ebf\u6027\u7a7a\u95f4\uff0c\u5f97\u5230\u7ebf\u6027\u5730\u5740\uff0c\u518d\u6839\u636e\u9875\u8868\u8fdb\u884c\u6620\u5c04)\u540e\uff0c\u624d\u771f\u6b63\u8bbf\u95ee\u7269\u7406\u5185\u5b58\u3002 2\u3001Linux\u7b80\u5316\u4e86\u5206\u6bb5\u673a\u5236,\u4f7f\u5f97\u865a\u62df\u5730\u5740\u4e0e\u7ebf\u6027\u5730\u5740\u603b\u662f\u4e00\u81f4,\u56e0\u6b64,Linux\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e5f\u4e3a0\uff5e4G,\u5e76\u88ab\u5206\u4e3a\u4e24\u90e8\u5206\u3002 \u6700\u9ad8\u76841GB(\u4ece\u865a\u62df\u5730\u57400xC0000000\u52300xFFFFFFFF)\u4f9b\u5185\u6838\u4f7f\u7528\uff0c\u79f0\u4e3a\u201c\u5185\u6838\u7a7a\u95f4\u201d; \u4f4e\u4f4d\u7f6e3GB(\u4ece\u865a\u62df\u5730\u57400x00000000\u52300xBFFFFFFF\uff09\uff0c\u4f9b\u5404\u4e2a\u8fdb\u7a0b\u4f7f\u7528\uff0c\u79f0\u4e3a\u201c\u7528\u6237\u7a7a\u95f4\u3002 \u56e0\u4e3a\u6bcf\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u901a\u8fc7\u7cfb\u7edf\u8c03\u7528\u8fdb\u5165\u5185\u6838\uff0c\u56e0\u6b64\uff0cLinux\u5185\u6838\u7531\u7cfb\u7edf\u5185\u7684\u6240\u6709\u8fdb\u7a0b\u5171\u4eab\u3002 \u4e8e\u662f\uff0c\u4ece\u5177\u4f53\u8fdb\u7a0b\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u62e5\u67094GB\u7684\u865a\u62df\u7a7a\u95f4, \u5176\u4e2d3GB\u7528\u6237\u7a7a\u95f4\u4e3a\u5404\u8fdb\u7a0b\u72ec\u4eab\uff0c 1GB\u5185\u6838\u7a7a\u95f4\u4e3a\u6240\u6709\u8fdb\u7a0b\u548c\u5185\u6838\u5171\u4eab\u3002 \u7528\u6237\u8fdb\u7a0b\u6700\u5927\u53ef\u4ee5\u8bbf\u95ee3GB\uff0c\u5185\u6838\u4ee3\u7801\u53ef\u4ee5\u8bbf\u95ee\u6240\u6709\u7269\u7406\u5185\u5b58\u3002 3\u3001\u5185\u6838\u7a7a\u95f4\u4e2d\u5b58\u653e\u7684\u662f\u5185\u6838\u4ee3\u7801\u548c\u6570\u636e\uff0c\u800c\u8fdb\u7a0b\u7684\u7528\u6237\u7a7a\u95f4\u4e2d\u5b58\u653e\u7684\u662f\u7528\u6237\u7a0b\u5e8f\u7684\u4ee3\u7801\u548c\u6570\u636e\u3002 \u4e0d\u7ba1\u662f\u5185\u6838\u7a7a\u95f4\u8fd8\u662f\u7528\u6237\u7a7a\u95f4\uff0c\u5b83\u4eec\u90fd\u5904\u4e8e\u865a\u62df\u7a7a\u95f4\u4e2d\u3002 4\u3001\u867d\u7136\u5185\u6838\u7a7a\u95f4\u5360\u636e\u4e86\u6bcf\u4e2a\u865a\u62df\u7a7a\u95f4\u4e2d\u7684\u6700\u9ad81GB\uff0c\u4f46\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\u5374\u603b\u662f\u4ece\u6700\u4f4e\u5730\u5740(0x00000000)\u5f00\u59cb\u3002 \u5bf9\u5185\u6838\u7a7a\u95f4\u6765\u8bf4\uff0c\u5730\u5740\u6620\u5c04\u662f\u7ebf\u6027\u6620\u5c04\uff0c0xC0000000(\u53733GB)\u5c31\u662f\u7269\u7406\u5730\u5740\u4e0e\u7ebf\u6027\u5730\u5740\u4e4b\u95f4\u7684\u4f4d\u79fb\u91cf, \u5728Linux\u6e90\u7801\u4e2d\u53eb\u505aPAGE_OFFSET\u3002 5\u3001\u5b9e\u9645\u4e2d\uff0c\u5185\u6838\u5730\u5740\u7a7a\u95f40xc0000000 ~ 0xfffffff\u76841GB\u5730\u5740\u7a7a\u95f4\u5e76\u975e\u5168\u90e8\u7528\u6765\u8fdb\u884c\u7b80\u5355\u7684\u5730\u5740\u6620\u5c04\uff0c \u800c\u662f\u5212\u5206\u4e3a\u4e09\u90e8\u5206ZONE_DMA(<16MB), ZONE_NORMAL(16~896MB)\u548c ZONE_HIGHMEM(>=896MB), \u5176\u4e2dZONE_HIGHMEM\u79f0\u4f5c\u9ad8\u7aef\u5185\u5b58\uff0c\u5171128MB\u3002 6\u3001\u5f53\u5185\u6838\u60f3\u8bbf\u95ee\u9ad8\u4e8e896MB\u7684\u7269\u7406\u5185\u5b58\u65f6\uff0c\u4f1a\u4ece0xF8000000 ~ 0xFFFFFFFF\u5730\u5740\u7a7a\u95f4\u8303\u56f4\u5185 \u627e\u4e00\u6bb5\u76f8\u5e94\u5927\u5c0f\u7a7a\u95f2\u7684\u903b\u8f91\u5730\u5740\u7a7a\u95f4\uff0c\u501f\u7528\u8fd9\u6bb5\u903b\u8f91\u5730\u5740\u7a7a\u95f4\uff0c\u5efa\u7acb\u6620\u5c04\u5230\u60f3\u8bbf\u95ee\u7684\u5b9e\u9645\u7269\u7406\u5185\u5b58\u3002 7\u3001task_struct\u4e2d\u7684PGD\u6210\u5458\u5b58\u653e\u7740\u6307\u5411\u5f53\u524d\u8fdb\u7a0b\u9875\u76ee\u5f55\u7684\u6307\u9488\uff0c\u5f53\u8be5\u8fdb\u7a0b\u88ab\u8c03\u5ea6\u8fdb\u5165\u8fd0\u884c\u6001\u65f6\uff0c \u5185\u6838\u5c06\u8be5\u8fdb\u7a0b\u7684\u7684\u9875\u76ee\u5f55\u8868\u7684\u7269\u7406\u5730\u5740\u88c5\u5165CR3\u5bc4\u5b58\u5668\uff0c\u56e0\u6b64 \u4e0d\u540c\u8fdb\u7a0b\u8bbf\u95ee\u865a\u62df\u7a7a\u95f4\u4e2d\u7684\u76f8\u540c\u5730\u5740\uff0c \u7ecf\u7531\u4e0d\u540c\u7684\u9875\u76ee\u5f55\u8868\u6620\u5c04\u5230\u4e0d\u540c\u7684\u7269\u7406\u5730\u5740\uff0c\u800c\u4e0d\u4f1a\u6df7\u6dc6\u3002 \u5185\u5b58\u7a7a\u95f4\u7684\u4e09\u79cd\u63cf\u8ff0\u5355\u4f4d: \u9875\uff1a \u533a\uff1a \u5b57\u8282\uff1a\u5185\u6838\u53ef\u4ee5\u901a\u8fc7\u4e0b\u9762\u4e09\u79cd\u51fd\u6570\u6216\u8005\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684\u5185\u5b58\uff0c\u4e0d\u8fc7kmalloc\u548cvmalloc\u662f\u5206\u914d\u7684\u662f\u5185\u6838\u7684\u5185\u5b58,malloc\u5206\u914d\u7684\u662f\u7528\u6237\u7684\u5185\u5b58\u3002 malloc\\kmalloc\\vmalloc: 1\u3001 \u7531malloc()\u8fd4\u56de\u7684\u9875\u5728\u8fdb\u7a0b\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5185\u662f\u8fde\u7eed\u7684\uff0c\u4f46\u662f\u5e76\u4e0d\u4fdd\u8bc1\u5b83\u4eec\u5728\u7269\u7406RAM\u4e2d\u4e5f\u662f\u8fde\u7eed\u7684\uff1b kmalloc()\u51fd\u6570\u786e\u4fdd\u9875\u5728\u7269\u7406\u5730\u5740\u4e0a\u662f\u8fde\u7eed\u7684\uff0c\u865a\u62df\u5730\u5740\u81ea\u7136\u4e5f\u662f\u8fde\u7eed\u7684\uff1b vmalloc()\u51fd\u6570\u53ea\u786e\u4fdd\u9875\u5728\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5185\u662f\u8fde\u7eed\u7684\uff0c\u5b83\u901a\u8fc7\u5206\u914d\u975e\u8fde\u7eed\u7684\u7269\u7406\u5185\u5b58\u5757\uff0c \u518d\u4fee\u6b63\u9875\u8868\uff0c\u628a\u5185\u5b58\u6620\u5c04\u5230\u903b\u8f91\u5730\u5740\u7a7a\u95f4\u7684\u8fde\u7eed\u533a\u57df\u4e2d\uff0c\u6765\u5b9e\u73b0\u76ee\u7684\u3002 2\u3001vmalloc\u6bd4kmalloc\u8981\u6162\u3002\u5c3d\u7ba1\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u624d\u9700\u8981\u7269\u7406\u4e0a\u8fde\u7eed\u7684\u5185\u5b58\u5757\uff0c\u4f46\u662f\u5f88\u591a\u5185\u6838\u4ee3\u7801\u90fd\u7528kmalloc\u6765\u83b7\u5f97\u5185\u5b58\uff0c \u800c\u4e0d\u662fvmalloc\u3002\u8fd9\u4e3b\u8981\u662f\u51fa\u4e8e\u6027\u80fd\u7684\u8003\u8651\u3002vmalloc\u51fd\u6570\u4e3a\u4e86\u628a\u7269\u7406\u5185\u5b58\u4e0a\u4e0d\u8fde\u7eed\u7684\u9875\u8f6c\u6362\u4e3a\u865a\u62df\u5730\u5740\u7a7a\u95f4\u4e0a\u8fde\u7eed\u7684\u9875\uff0c \u5fc5\u987b\u4e13\u95e8\u5efa\u7acb\u9875\u8868\u9879\u3002\u7cdf\u7cd5\u7684\u662f\uff0c\u901a\u8fc7vmalloc\u83b7\u5f97\u7684\u9875\u5fc5\u987b\u4e00\u4e2a\u4e2a\u5730\u8fdb\u884c\u6620\u5c04\uff0c\u56e0\u4e3a\u5b83\u4eec\u7269\u7406\u4e0a\u662f\u4e0d\u8fde\u7eed\u7684\uff0c \u8fd9\u5c31\u4f1a\u5bfc\u81f4\u6bd4\u76f4\u63a5\u5185\u5b58\u6620\u5c04\u5927\u5f97\u591a\u7684TLB(Traslation Lookaside Buffer, \u7528\u4ee5\u7f13\u5b58\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb)\u6296\u52a8\uff0c vmalloc\u4ec5\u5728\u4e0d\u5f97\u5df2\u65f6\u624d\u4f1a\u7528\uff0c\u4f8b\u5982\u4e3a\u4e86\u83b7\u5f97\u5927\u5757\u5185\u5b58\u65f6\uff0c\u800c\u7269\u7406\u7a7a\u95f4\u4e0d\u5b58\u5728\u5982\u6b64\u5927\u7684\u8fde\u7eed\u5185\u5b58\u3002 \u5185\u5b58\u788e\u7247 \u5185\u5b58\u788e\u7247\u901a\u5e38\u5206\u4e3a\u5185\u90e8\u788e\u7247\u548c\u5916\u90e8\u788e\u7247\uff1a 1\u3001\u5185\u90e8\u788e\u7247\u662f\u7531\u4e8e\u91c7\u7528\u56fa\u5b9a\u5927\u5c0f\u7684\u5185\u5b58\u5206\u533a\uff0c\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u4e0d\u80fd\u5b8c\u5168\u4f7f\u7528\u5206\u7ed9\u5b83\u7684\u56fa\u5b9a\u5185\u5b58\u533a\u57df\u65f6\u5c31\u4ea7\u751f\u4e86\u5185\u90e8\u788e\u7247\uff0c\u901a\u5e38\u5185\u90e8\u788e\u7247\u96be\u4ee5\u5b8c\u5168\u907f\u514d\uff1b 2\u3001\u5916\u90e8\u788e\u7247\u662f\u7531\u4e8e\u67d0\u4e9b\u672a\u5206\u914d\u7684\u8fde\u7eed\u5185\u5b58\u533a\u57df\u592a\u5c0f\uff0c\u4ee5\u81f3\u4e8e\u4e0d\u80fd\u6ee1\u8db3\u4efb\u610f\u8fdb\u7a0b\u7684\u5185\u5b58\u5206\u914d\u8bf7\u6c42\uff0c\u4ece\u800c\u4e0d\u80fd\u88ab\u8fdb\u7a0b\u5229\u7528\u7684\u5185\u5b58\u533a\u57df\u3002 \u2003\u907f\u514d\u5916\u90e8\u788e\u7247\u7684\u65b9\u6cd5\u6709\u4e24\u79cd: 1\u3001 \u5229\u7528\u5206\u9875\u5355\u5143\u628a\u4e00\u7ec4\u975e\u8fde\u7eed\u7684\u7a7a\u95f2\u9875\u6620\u5c04\u5230\u8fde\u7eed\u7684\u7ebf\u6027\u5730\u5740 (\u4f7f\u7528\u5730\u5740\u8f6c\u6362\u6280\u672f\uff0c\u628a\u975e\u8fde\u7eed\u7684\u7269\u7406\u5730\u5740\u8f6c\u6362\u6210\u8fde\u7eed\u7684\u7ebf\u6027\u5730\u5740); \u73b0\u5728\u666e\u904d\u91c7\u7528\u7684\u6bb5\u9875\u5f0f\u5185\u5b58\u5206\u914d\u65b9\u5f0f\u5c31\u662f\u5c06\u8fdb\u7a0b\u7684\u5185\u5b58\u533a\u57df\u5206\u4e3a\u4e0d\u540c\u7684\u6bb5\uff0c\u7136\u540e\u5c06\u6bcf\u4e00\u6bb5\u7531\u591a\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u9875\u7ec4\u6210\u3002 \u901a\u8fc7\u9875\u8868\u673a\u5236\uff0c\u4f7f\u6bb5\u5185\u7684\u9875\u53ef\u4ee5\u4e0d\u5fc5\u8fde\u7eed\u5904\u4e8e\u540c\u4e00\u5185\u5b58\u533a\u57df\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u5916\u90e8\u788e\u7247 \uff0c\u7136\u800c\u540c\u4e00\u9875\u5185\u4ecd\u7136\u53ef\u80fd\u5b58\u5728\u5c11\u91cf\u7684\u5185\u90e8\u788e\u7247\uff0c\u53ea\u662f\u4e00\u9875\u7684\u5185\u5b58\u7a7a\u95f4\u672c\u5c31\u8f83\u5c0f\uff0c\u4ece\u800c\u4f7f\u53ef\u80fd\u5b58\u5728\u7684\u5185\u90e8\u788e\u7247\u4e5f\u8f83\u5c11\u3002 2\u3001\u5f00\u53d1\u4e00\u79cd\u9002\u5f53\u7684\u6280\u672f\u6765 \u8bb0\u5f55\u73b0\u5b58\u7684\u7a7a\u95f2\u7684\u8fde\u7eed\u9875\u5757\u7684\u60c5\u51b5\uff0c\u4ee5\u5c3d\u91cf\u907f\u514d\u4e3a\u6ee1\u8db3\u5bf9\u5c0f\u5757\u7684\u8bf7\u6c42\u800c\u5206\u5272\u5927\u7684\u7a7a\u95f2\u5757 ; \u5982\u4f19\u4f34\u7cfb\u7edf\u548cslab\u9ad8\u901f\u7f13\u5b58\u3002 \u4f19\u4f34\u7cfb\u7edf : \u628a\u7cfb\u7edf\u4e2d\u8981\u7ba1\u7406\u7684\u7269\u7406\u5185\u5b58\u6309\u7167\u9875\u9762\u4e2a\u6570\u5206\u6210\u4e8611\u4e2a\u7ec4\uff0c\u5bf9\u5e94\u5927\u5c0f\u4e0d\u540c\u7684\u8fde\u7eed\u5185\u5b58\u5757\uff0c\u6bcf\u7ec4\u4e2d\u7684\u5185\u5b58\u5757\u5927\u5c0f\u90fd\u76f8\u7b49\uff0c \u4e3a2\u7684\u5e42\u6b21\u4e2a\u7269\u7406\u9875\u3002\u90a3\u4e48\u7cfb\u7edf\u4e2d\u5c31\u5b58\u57282^0 ~ 2^10\u8fd9\u4e4811\u79cd\u5927\u5c0f\u4e0d\u540c\u7684\u5185\u5b58\u5757\uff0c\u5bf9\u5e94\u5185\u5b58\u5757\u5927\u5c0f4KB ~ 4MB\u3002 \u5185\u6838\u752811\u4e2a\u94fe\u8868\u6765\u7ba1\u740611\u79cd\u5927\u5c0f\u4e0d\u540c\u7684\u5185\u5b58\u5757\u3002 \u5f53\u5206\u914d\u5185\u5b58\u65f6\uff0c\u4f1a\u4f18\u5148\u4ece\u9700\u8981\u5206\u914d\u7684\u5185\u5b58\u5757\u94fe\u8868\u4e0a\u67e5\u627e\u7a7a\u95f2\u5185\u5b58\u5757\uff0c\u5f53\u53d1\u73b0\u5bf9\u5e94\u5927\u5c0f\u7684\u5185\u5b58\u5757\u90fd\u5df2\u7ecf\u88ab\u4f7f\u7528\u540e\uff0c \u90a3\u4e48\u4f1a\u4ece\u66f4\u5927\u7ea7\u7684\u5185\u5b58\u5757\u4e0a\u5206\u914d\u4e00\u5757\u5185\u5b58\uff0c\u5e76\u4e14\u5206\u6210\u4e00\u534a\u7ed9\u6211\u4eec\u4f7f\u7528\uff0c\u5269\u4f59\u7684\u4e00\u534a\u91ca\u653e\u5230\u5bf9\u5e94\u5927\u5c0f\u7684\u5185\u5b58\u5757\u94fe\u8868\u4e0a\u3002 \u6bd4\u5982\u6211\u4eec\u60f3\u8981\u5206\u914d\u4e00\u4e2a8KB\u5927\u5c0f\u7684\u5185\u5b58\uff0c\u4f46\u662f\u53d1\u73b0\u5bf9\u5e94\u5927\u5c0f\u7684\u5185\u5b58\u5df2\u7ecf\u6ca1\u6709\u4e86\uff0c\u4f19\u4f34\u7cfb\u7edf\u4f1a\u4ece16KB\u7684\u94fe\u8868\u4e2d \u67e5\u627e\u4e00\u4e2a\u7a7a\u95f2\u5185\u5b58\u5757\uff0c\u5206\u6210\u4e24\u4e2a8KB\u5927\u5c0f\uff0c\u628a\u5176\u4e2d\u7684\u4e00\u4e2a8KB\u5927\u5c0f\u8fd4\u56de\u7ed9\u7533\u8bf7\u8005\u4f7f\u7528\uff0c \u5269\u4e0b\u76848KB\u653e\u52308KB\u5bf9\u5e94\u7684\u5185\u5b58\u5757\u94fe\u8868\u4e2d\u8fdb\u884c\u7ba1\u7406 \u5f53\u91ca\u653e\u5185\u5b58\u65f6\uff0c\u4f1a\u626b\u63cf\u5bf9\u5e94\u5927\u5c0f\u7684\u5185\u5b58\u5757\u94fe\u8868\uff0c\u67e5\u770b\u662f\u5426\u5b58\u5728\u5730\u5740\u80fd\u591f\u8fde\u7eed\u5728\u4e00\u8d77\u7684\u5185\u5b58\u5757\uff0c\u5982\u679c\u53d1\u73b0\u6709\uff0c \u90a3\u4e48\u5c31\u5408\u5e76\u4e24\u4e2a\u5185\u5757\u653e\u7f6e\u5230\u66f4\u5927\u4e00\u7ea7\u7684\u5185\u5b58\u5757\u94fe\u8868\u4e0a\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u6bd4\u5982\u6211\u4eec\u91ca\u653e8KB\u5927\u5c0f\u7684\u5185\u5b58\uff0c \u90a3\u4e48\u4f1a\u4ece\u5bf9\u5e94\u7684\u94fe\u8868\u626b\u63cf\u662f\u5426\u6709\u80fd\u591f\u5408\u5e76\u7684\u5185\u5b58\u5757\uff0c\u5982\u679c\u6709\u53e6\u4e00\u4e2a8KB\u5927\u5c0f\u7684\u5185\u5b58\u548c\u6211\u4eec\u4f7f\u7528\u7684\u5185\u5b58\u5730\u5740\u8fde\u7eed\uff0c \u90a3\u4e48\u5c31\u5408\u5e76\u5b83\u4eec\u7ec4\u6210\u4e00\u4e2a16KB\u5927\u5c0f\u7684\u5185\u5b58\u5757\uff0c\u7136\u540e\u63a5\u7740\u626b\u63cf16KB\u5927\u5c0f\u7684\u5185\u5b58\u5757\u94fe\u8868\uff0c\u7ee7\u7eed\u67e5\u627e\u5408\u5e76\u7684\u53ef\u80fd\u3002 slab\u5206\u914d\u5668 \u5185\u6838\u6808 \u5206\u914d\u51fd\u6570\u9009\u62e9","title":"\u7406\u89e3\u5185\u5b58\u7a7a\u95f4"},{"location":"os/5_os/#_15","text":"UNIX\u6587\u4ef6\u7cfb\u7edf Unix\u4f7f\u7528\u56db\u79cd\u548c\u6587\u4ef6\u7cfb\u7edf\u76f8\u5173\u7684\u62bd\u8c61\u6982\u5ff5\uff1a\u6587\u4ef6\u3001\u76ee\u5f55\u9879\u3001\u7d22\u5f15\u8282\u70b9\u548c\u6302\u8f7d\u70b9(mounting point)\u3002 \u6587\u4ef6\u5171\u4eab \u548c\u8fdb\u7a0b\u76f8\u5173\u7684\u6570\u636e\u7ed3\u6784 files_struct: \u7531\u8fdb\u7a0b\u63cf\u8ff0\u7b26(struct task_struct)\u4e2d\u7684files\u76ee\u5f55\u9879\u6307\u5411\uff0c\u6240\u6709\u4e0e\u5355\u4e2a\u8fdb\u7a0b\u76f8\u5173\u7684\u4fe1\u606f(\u5982\u6253\u5f00\u7684\u6587\u4ef6\u53ca\u6587\u4ef6\u63cf\u8ff0\u7b26)\uff1b fs_struct: \u7531\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u4e2d\u7684fs\u57df\u6307\u5411\uff0c\u5305\u542b\u6587\u4ef6\u7cfb\u7edf\u548c\u8fdb\u7a0b\u76f8\u5173\u7684\u4fe1\u606f\uff0c \u8be5\u7ed3\u6784\u4fdd\u5b58\u4e86\u5f53\u524d\u8fdb\u7a0b\u7684\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u548c\u6839\u76ee\u5f55\uff1b namespace\u7ed3\u6784\u4f53: \u7531\u8fdb\u7a0b\u63cf\u8ff0\u7b26\u4e2d\u7684namespace\u57df\u6307\u5411\uff0clinux 2.4\u7248\u5185\u6838\u4ee5\u540e\uff0c\u5355\u8fdb\u7a0b\u547d\u540d\u7a7a\u95f4\u88ab\u52a0\u5165\u5230\u5185\u6838\u4e2d\uff0c\u5b83\u4f7f\u5f97\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u5728\u7cfb\u7edf\u4e2d\u90fd\u770b\u5230\u552f\u4e00\u7684\u5b89\u88c5\u6587\u4ef6\u7cfb\u7edf\uff0c\u4e0d\u4ec5\u662f\u552f\u4e00\u7684\u6839\u76ee\u5f55\uff0c\u800c\u4e14\u662f\u552f\u4e00\u7684\u6587\u4ef6\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784\u3002","title":"\u865a\u62df\u6587\u4ef6\u7cfb\u7edf"},{"location":"os/5_os/#io","text":"\u5757\u8bbe\u5907 \u2003\u8bbe\u5907\u6700\u5c0f\u5bfb\u5740\u5355\u5143\u79f0\u4e3a\u6247\u533a\uff0c\u5927\u5c0f\u4e3a2\u7684\u6574\u6570\u500d\uff0c\u4e00\u822c\u4e3a512\u5b57\u8282\uff0c\u6216\u8005\u7c7b\u4f3cCD-ROM\u7684\u6247\u533a\u4e3a2KB\u3002 \u2003\u5757\u5728\u7269\u7406\u4e0a\u662f\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u636e\u7247\uff0c\u5728\u903b\u8f91\u4e0a\u662f\u6587\u4ef6\u7cfb\u7edf\u7684\u62bd\u8c61\u2014\u2014\u53ea\u80fd\u57fa\u4e8e\u5757\u6765\u8bbf\u95ee\u6587\u4ef6\u7cfb\u7edf\uff1b\u5185\u6838\u6267\u884c\u7684\u6240\u6709\u78c1\u76d8\u64cd\u4f5c\u90fd\u662f\u57fa\u4e8e\u5757\u7684\uff0c\u5176\u5927\u5c0f\u4e3a\u591a\u4e2a\u6247\u533a\uff0c\u4e14\u4e3a2\u7684\u6574\u6570\u500d\uff0c\u5e76\u4e14\u4e0d\u80fd\u8d85\u8fc7\u4e00\u4e2a\u9875\u7684\u957f\u5ea6\u3002 \u7f13\u51b2\u533a\u4e0e\u7f13\u51b2\u533a\u5934 \u2003\u5f53\u4e00\u4e2a\u5757\u88ab\u8c03\u5165\u5185\u5b58\u540e\uff0c\u5373\u5728\u8bfb\u5165\u540e\u6216\u7b49\u5f85\u5199\u51fa\u65f6\uff0c\u5b83\u8981\u5b58\u50a8\u5728\u4e00\u4e2a\u7f13\u51b2\u533a\u4e2d\uff0c\u6bcf\u4e2a\u7f13\u51b2\u533a\u4e0e\u4e00\u4e2a\u5757\u5bf9\u5e94\uff0c\u5b83\u76f8\u5f53\u4e8e\u662f\u78c1\u76d8\u5757\u5728\u5185\u5b58\u4e2d\u7684\u8868\u793a\u3002 \u2003\u6bcf\u4e2a\u7f13\u51b2\u533a\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u63cf\u8ff0\u7b26\uff0c\u7528buffer_head\u7ed3\u6784\u4f53\u63cf\u8ff0\uff0c\u79f0\u4f5c\u7f13\u51b2\u533a\u5934\uff0c\u5305\u542b\u4e00\u4e9b\u63a7\u5236\u4fe1\u606f(\u5982\u5757\u5c5e\u4e8e\u54ea\u4e00\u4e2a\u5757\u8bbe\u5907\uff0c\u5757\u5bf9\u5e94\u54ea\u4e2a\u7f13\u51b2\u533a)\u3002 \u7f13\u51b2\u533a\u5934\u7684\u76ee\u7684\u5728\u4e8e\u63cf\u8ff0\u78c1\u76d8\u5757\u548c\u7269\u7406\u5185\u5b58\u7f13\u51b2\u533a(\u5728\u7279\u5b9a\u9875\u9762\u4e0a\u7684\u5b57\u8282\u5e8f\u5217)\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb \u3002 bio\u7ed3\u6784\u4f53 \u2003\u4e0ebuffer_head\u533a\u522b\uff1a bio\u7ed3\u6784\u4f53\u4ee3\u8868\u7684\u662fI/O\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5305\u542b\u5185\u5b58\u4e2d\u7684\u591a\u4e2a\u9875(bio\u672c\u8eab\u4fbf\u4e8e\u6267\u884c\u5206\u6563-\u96c6\u4e2d\u7684\u5757I/O\u64cd\u4f5c\uff0c\u64cd\u4f5c\u7684\u6570\u636e\u6765\u81ea\u591a\u4e2a\u7269\u7406\u9875)\uff1b \u800cbuffer_head\u7ed3\u6784\u4f53\u4ee3\u8868\u7684\u662f\u4e00\u4e2a\u7f13\u51b2\u533a\uff0c\u63cf\u8ff0\u7684\u4ec5\u4ec5\u662f\u78c1\u76d8\u4e2d\u7684\u4e00\u4e2a\u5757\uff1b bio\u76f8\u8f83buffer_head\uff0c\u5c5e\u4e8e\u8f7b\u91cf\u7ea7\u7ed3\u6784\u4f53\uff0c\u56e0\u4e3a\u5b83\u53ea\u9700\u5305\u542b\u5757I/O\u64cd\u4f5c\u6240\u9700\u7684\u4fe1\u606f\u5373\u53ef\uff0c\u65e0\u9700\u5305\u542b\u4e0e\u7f13\u51b2\u533a\u672c\u8eab\u76f8\u5173\u7684\u4e0d\u5fc5\u8981\u4fe1\u606f\u3002 I/O\u63a7\u5236\u65b9\u5f0f I/O\u8c03\u5ea6 \u2003\u8bf7\u6c42\u961f\u5217: \u5757\u8bbe\u5907\u5c06\u5b83\u4eec\u6302\u8d77\u7684\u5757I/O\u8bf7\u6c42\u4fdd\u5b58\u5728\u8bf7\u6c42\u961f\u5217\u4e2d(requests_struct)\uff0c\u8be5\u961f\u5217\u5305\u542b\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\u53ca\u76f8\u5173\u63a7\u5236\u4fe1\u606f\uff1b\u961f\u5217\u4e2d\u7684\u8bf7\u6c42(request)\u7531\u591a\u4e2abio\u7ed3\u6784\u4f53\u6784\u6210\u3002 \u2003I/O\u8c03\u5ea6\u7a0b\u5e8f\u5c06 \u78c1\u76d8I/O\u8d44\u6e90 \u5206\u914d\u7ed9\u7cfb\u7edf\u4e2d\u6240\u6709\u6302\u8d77\u7684 \u5757I/O\u8bf7\u6c42\uff0c\u5206\u914d\u662f\u901a\u8fc7\u5c06\u8bf7\u6c42\u961f\u5217\u4e2d\u6302\u8d77\u7684\u8bf7\u6c42\u5408\u5e76\u548c\u6392\u5e8f\u6765\u5b8c\u6210\u7684\uff0c\u4ee5\u6b64\u6765\u51cf\u5c11\u78c1\u76d8\u5bfb\u5740\u65f6\u95f4\u3002 \u2003\u8bf7\u6c42\u5408\u5e76: \u5c06\u4e24\u4e2a\u6216\u591a\u4e2a\u8bf7\u6c42\u5408\u5e76\u6210\u4e00\u4e2a\u65b0\u8bf7\u6c42\uff0c\u5982\u591a\u4e2a\u8bf7\u6c42\u8bbf\u95ee\u7684\u6247\u533a\u4f4d\u7f6e\u76f8\u90bb\uff1b \u2003\u8bf7\u6c42\u6392\u5e8f: \u5bf9\u4e8e\u64cd\u4f5c\u78c1\u76d8\u6247\u533a\u4f4d\u7f6e\u76f8\u8fd1\u7684\u4e0d\u540c\u8bf7\u6c42\uff0c\u5176\u5728\u961f\u5217\u4e2d\u7684\u4f4d\u7f6e\u5e94\u8be5\u4e5f\u76f8\u90bb\u3002 \u6574\u4e2a\u8bf7\u6c42\u961f\u5217\u6309\u8981\u8bbf\u95ee\u7684\u6247\u533a\u7684\u589e\u957f\u65b9\u5411\u6709\u5e8f\u6392\u5217\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u7f29\u77ed\u5355\u6b21\u8bf7\u6c42\u7684\u5bfb\u5740\u65f6\u95f4\uff0c\u8fd8\u53ef\u4ee5\u4fdd\u6301\u78c1\u76d8\u5934\u4ee5\u76f4\u7ebf\u65b9\u5411\u79fb\u52a8\uff0c\u7f29\u77ed\u4e86\u6240\u6709\u8bf7\u6c42\u7684\u78c1\u76d8\u5bfb\u5740\u65f6\u95f4\u3002\u8fd9\u79cdI/O\u8c03\u5ea6\u6392\u5e8f\u7b97\u6cd5\u79f0\u4f5c\u7535\u68af\u8c03\u5ea6\u3002 I/O\u8c03\u5ea6\u7b97\u6cd5 \u2003linus\u7535\u68af linux \u5185\u6838\u4ece2.6\u7248\u8d77\uff0c\u5e9f\u5f03\u4e86linus\u7535\u68af\u6cd5\uff0c\u63d0\u4f9b\u4e86\u4e0b\u9762\u56db\u79cd\u8c03\u5ea6\u7a0b\u5e8f\u3002 \u2003 \u6700\u7ec8\u671f\u9650I/O\u8c03\u5ea6\u7a0b\u5e8f \u2003 \u9884\u6d4bI/O\u8c03\u5ea6\u7a0b\u5e8f : \u5982\u679c\u6309\u7167\u6700\u7ec8\u671f\u9650I/O\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u5f53\u7cfb\u7edf\u5904\u4e8e\u7e41\u5fd9\u7684\u5199\u64cd\u4f5c\u671f\u95f4\uff0c\u6bcf\u6b21\u63d0\u4ea4\u8bfb\u8bf7\u6c42\uff0cI/O\u8c03\u5ea6\u7a0b\u5e8f\u90fd\u4f1a\u8fc5\u901f\u5904\u7406\u8bfb\u8bf7\u6c42\uff0c\u7136\u540e\u8fd4\u56de\u518d\u5bfb\u5740\u8fdb\u884c\u8bfb\u64cd\u4f5c\uff0c\u8fd9\u65e0\u7591\u4f1a\u635f\u5bb3\u5168\u5c40\u541e\u5410\u91cf\u3002 \u2003 \u5b8c\u5168\u516c\u6b63\u7684\u6392\u961fI/O\u8c03\u5ea6\u7a0b\u5e8f(Complete Fair Queuing, CFQ) : \u6bcf\u4e00\u4e2a\u63d0\u4ea4I/O\u8bf7\u6c42\u7684\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u81ea\u5df1\u7684\u8bf7\u6c42\u961f\u5217\uff0c\u961f\u5217\u5185\u90e8\u7684\u64cd\u4f5c\u4e0e\u6700\u7ec8\u671f\u9650I/O\u8c03\u5ea6\u7a0b\u5e8f\u76f8\u540c\uff1bCFQ\u4ee5\u65f6\u95f4\u7247\u8f6e\u8f6c\u8c03\u5ea6\u961f\u5217\uff0c\u4ece\u6bcf\u4e2a\u961f\u5217\u4e2d\u9009\u53d6\u8bf7\u6c42\u6570\uff0c\u7136\u540e\u8fdb\u5165\u4e0b\u4e00\u6b21\u8c03\u5ea6\u3002 \u4ece\u800c\u5728\u8fdb\u7a0b\u7ea7\u522b\u7ef4\u6301\u4e86\u516c\u5e73 \u3002 \u2003 \u7a7a\u64cd\u4f5c\u7684I/O\u8c03\u5ea6\u7a0b\u5e8f : \u53ea\u6267\u884c\u5408\u5e76\uff0c\u4e0d\u8fdb\u884c\u6392\u5e8f\uff0c\u7ef4\u62a4\u8bf7\u6c42\u961f\u5217\u4ee5\u8fd1\u4e4eFIFO\u7684\u987a\u5e8f\u6392\u5217\uff0c\u5176\u662f\u4e13\u4e3a\u968f\u673a\u8bbf\u95ee\u8bbe\u5907\u800c\u8bbe\u8ba1\u7684\uff0c\u5b83\u4eec\u5bf9\u4e8e\u5bfb\u5740\u7684\u9700\u6c42\u5f88\u5c0f\uff0c\u65e0\u9700\u6392\u5e8f\u3002","title":"\u5757/IO"},{"location":"os/5_os/#_16","text":"\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u7531\u8fdb\u7a0b\u53ef\u5bfb\u5740\u7684\u865a\u62df\u5185\u5b58\u7ec4\u6210\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u90fd\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u8fde\u7eed\u7a7a\u95f4\uff0c\u5bf9\u4e8e32\u4f4d\u673a\u5668\uff0c\u8fdb\u7a0b\u53ef\u5bfb\u5740\u7684\u865a\u62df\u7a7a\u95f4\u5927\u5c0f\u4e3a4GB\u3002 \u2003\u5185\u5b58\u533a\u57df: \u53ef\u88ab\u8bbf\u95ee\u7684\u5408\u6cd5\u5730\u5740\u7a7a\u95f4\u3002 \u5185\u5b58\u63cf\u8ff0\u7b26: mm_struct\u7ed3\u6784\u4f53\uff0c\u5305\u542b\u4e86\u548c\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4\u6709\u5173\u7684\u5168\u90e8\u4fe1\u606f\u3002\u4e3b\u8981\u7684\u6210\u5458\u6709: 1\u3001mm_users: \u8bb0\u5f55\u6b63\u5728\u4f7f\u7528\u8be5\u5730\u5740\u7684\u8fdb\u7a0b\u6570\u76ee\uff0c\u5bf9\u4e8e\u5171\u4eab\u5730\u5740\u7a7a\u95f4\u7684\u7ebf\u7a0b\u800c\u8a00\uff0c\u8fd9\u4e2a\u503c\u7b49\u4e8e\u7ebf\u7a0b\u6570\u91cf\u3002 2\u3001mm_count: mm_struct\u7ed3\u6784\u4f53\u7684\u4e3b\u5f15\u7528\u8ba1\u6570\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u591a\u4e2a\u7ebf\u7a0b\u800c\u8a00\uff0c\u5176\u503c\u4e00\u76f4\u4e3a1\u3002\u5f53mm_user\u51cf\u4e3a0\u65f6\uff0cmm_count\u4e5f\u5c06\u4e3a0\uff0c\u8bf4\u660e\u6ca1\u6709\u6307\u5411\u8be5\u7ed3\u6784\u4f53\u7684\u5f15\u7528\u4e86\uff0cmm_struct\u5c06\u88ab\u64a4\u9500\u3002 3\u3001 mmap/mm_rb: \u5206\u522b\u4ee5\u94fe\u8868\u5f62\u5f0f\u548c\u7ea2\u9ed1\u6811\u5f62\u5f0f\u63cf\u8ff0\u5730\u5740\u7a7a\u95f4\u5185\u7684\u5168\u90e8\u5185\u5b58\u533a\u57df \u3002 \u524d\u8005\u9002\u5408\u904d\u5386\uff0c\u540e\u8005\u9002\u5408\u67e5\u627e\uff0c\u5982\u5728\u5730\u5740\u7a7a\u95f4\u4e2d\u5b9a\u4f4d\u7279\u5b9a\u5185\u5b58\u533a\u57df\u3002 4\u3001mm_list\uff1alist_head\u7c7b\u578b\u7684\u53cc\u5411\u94fe\u8868\uff0c\u6240\u6709\u7684mm_struct\u90fd\u901a\u8fc7\u6b64\u6210\u5458\u94fe\u63a5\u5728\u4e00\u8d77\uff1b\u94fe\u8868\u7684\u9996\u5143\u7d20\u662finit_mm\u5185\u5b58\u63cf\u8ff0\u7b26\uff0c\u4ee3\u8868init\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u3002\u64cd\u4f5c\u8be5\u94fe\u8868\u65f6\uff0c\u9700\u8981\u4f7f\u7528mm_lock\u9501\u6765\u9632\u6b62\u5e76\u53d1\u8bbf\u95ee\u3002 \u5206\u914d\u5185\u5b58\u63cf\u8ff0\u7b26 \u5185\u6838\u7ebf\u7a0b \u865a\u62df\u5185\u5b58\u533a\u57df \u2003\u6bcf\u4e2avm_areas_struct\u5bf9\u8c61\u90fd\u5bf9\u5e94\u4e8e\u5730\u5740\u7a7a\u95f4\u4e2d\u7684\u552f\u4e00\u533a\u95f4\uff0c\u540c\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\u5185\u7684\u4e0d\u540c\u5185\u5b58\u533a\u57df\u4e0d\u80fd\u91cd\u53e0\uff1bvm_areas_struct\u4e2d\u7684vm_mm\u6210\u5458\u6307\u5411\u4e0e\u5176\u76f8\u5173\u7684mm_struct\uff1b\u4e0d\u540c\u7684\u72ec\u7acb\u8fdb\u7a0b\u5c06\u540c\u4e00\u4e2a\u6587\u4ef6\u6620\u5c04\u5230\u5730\u5740\u7a7a\u95f4\u65f6\uff0c\u5c06\u5404\u81ea\u6709\u4e00\u4e2avm_areas_struct\u7ed3\u6784\u4f53\u6765\u6807\u8bb0\u81ea\u5df1\u7684\u5185\u5b58\u533a\u57df\uff1b\u800c\u4e24\u4e2a\u7ebf\u7a0b\u5171\u4eab\u5730\u5740\u7a7a\u95f4\u65f6\uff0c\u5b83\u4eec\u4e5f\u540c\u65f6\u5171\u4eab\u5176\u4e2d\u6240\u6709\u7684vm_areas_struct\u7ed3\u6784\u4f53\u3002 \u2003 \u5f53\u5e94\u7528\u7a0b\u5e8f\u8bbf\u95ee\u4e00\u4e2a\u865a\u62df\u5730\u5740\u65f6\uff0c\u9996\u5148\u5fc5\u987b\u5c06\u865a\u62df\u5730\u5740\u8f6c\u5316\u6210\u7269\u7406\u5730\u5740\uff0c\u8fd9\u4e2a\u662f\u901a\u8fc7\u5206\u9875\u6765\u5b8c\u6210\u7684\uff0clinux\u91c7\u7528\u4e09\u7ea7\u9875\u8868\uff1b \u2003TLB(Traslation Lookaside Buffer), \u4e00\u4e2a\u5c06\u865a\u62df\u5730\u5740\u6620\u5c04\u5230\u7269\u7406\u5730\u5740\u7684\u786c\u4ef6\u7f13\u5b58\uff0c\u5f53\u8bbf\u95ee\u865a\u62df\u5730\u5740\u65f6\uff0c\u5904\u7406\u5668\u9996\u5148\u68c0\u67e5TLB\u662f\u5426\u7f13\u5b58\u547d\u4e2d\uff0c\u5982\u679c\u662f\uff0c\u76f4\u63a5\u8fd4\u56de\u7269\u7406\u5730\u5740\uff0c\u5426\u5219\u518d\u901a\u8fc7\u9875\u8868\u6620\u5c04\u5230\u7269\u7406\u5730\u5740\u3002","title":"\u8fdb\u7a0b\u5730\u5740\u7a7a\u95f4"},{"location":"os/5_os/#_17","text":"\u9875\u9ad8\u901f\u7f13\u5b58 \u662flinux\u5185\u6838\u5b9e\u73b0\u78c1\u76d8\u7f13\u5b58\uff0c\u4e3b\u8981\u7528\u6765\u51cf\u5c11\u5bf9\u78c1\u76d8\u7684I/O\u64cd\u4f5c\uff0c\u901a\u8fc7\u628a\u78c1\u76d8\u4e2d\u7684\u6570\u636e\u7f13\u5b58\u5230\u7269\u7406\u5185\u5b58\u4e2d\uff0c\u628a\u5bf9\u78c1\u76d8\u7684\u8bbf\u95ee\u8f6c\u53d8\u4e3a\u5bf9\u5185\u5b58\u7684\u8bbf\u95ee\u3002\u5176\u539f\u56e0\u4e3b\u8981\u662f\uff1a 1\u3001\u4ece\u5185\u5b58\u8bbf\u95ee\u6570\u636e\u7684\u901f\u5ea6\u8fdc\u5feb\u4e8e\u78c1\u76d8\u3002 2\u3001\u6570\u636e\u4e00\u65e6\u88ab\u8bbf\u95ee\uff0c\u77ed\u671f\u5185\u5c31\u5f88\u6709\u53ef\u80fd\u518d\u88ab\u8bbf\u95ee\u3002\u8fd9\u79cd\u77ed\u65f6\u671f\u5185\u96c6\u4e2d\u8bbf\u95ee\u4e00\u7247\u6570\u636e\u7684\u539f\u7406\u79f0\u4e3a \u4e34\u65f6\u5c40\u90e8\u539f\u7406 \u3002 \u5199\u7f13\u5b58 \u5f53\u8fdb\u7a0b\u5199\u78c1\u76d8\u65f6\uff0c\u4e00\u822c\u6709\u4e09\u79cd\u7b56\u7565\uff1a \u2003\u4e0d\u7f13\u5b58\uff0c\u76f4\u63a5\u5199\u5230\u78c1\u76d8\uff0c\u540c\u65f6\u4f7f\u7f13\u5b58\u5931\u6548\uff0c\uff08\u4e00\u822c\u4e0d\u4f7f\u7528\u8fd9\u79cd\u7b56\u7565\uff09\uff1b \u2003\u5199\u900f\u7f13\u5b58(write-through cache),\u5199\u64cd\u4f5c\u5c06\u81ea\u52a8\u66f4\u65b0\u5185\u5b58\u7f13\u5b58\uff0c\u540c\u65f6\u66f4\u65b0\u78c1\u76d8\u6587\u4ef6\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u7f13\u5b58\u4e00\u81f4\u6027\uff0c\u5373\u7f13\u5b58\u6570\u636e\u65f6\u523b\u548c\u78c1\u76d8\u6570\u636e\u4fdd\u5b58\u4e00\u81f4\uff1b \u2003\u56de\u5199(write-back)\uff0c\u7a0b\u5e8f\u6267\u884c\u64cd\u4f5c\u76f4\u63a5\u5199\u5230\u7f13\u5b58\uff0c\u78c1\u76d8\u6570\u636e\u4e0d\u4f1a\u7acb\u523b\u66f4\u65b0\uff0c\u800c\u662f\u5c06\u9875\u9ad8\u901f\u7f13\u5b58\u4e2d\u88ab\u5199\u5165\u7684\u9875\u9762\u6807\u8bb0\u6210\u2018dirty\u2019\uff0c\u5e76\u52a0\u5165\u5230\u810f\u9875\u94fe\u8868\u4e2d\u3002\u7136\u540e\u7531\u56de\u5199\u8fdb\u7a0b\u5468\u671f\u5730\u5c06\u810f\u9875\u94fe\u8868\u4e2d\u7684\u9875\u5199\u56de\u5230\u78c1\u76d8\u4e2d\uff0c\u4ece\u800c\u8ba9\u78c1\u76d8\u4e2d\u7684\u6570\u636e\u548c\u5185\u5b58\u4e2d\u6700\u7ec8\u4e00\u81f4\u3002\u6700\u540e\u4f1a\u6e05\u7406dirty\u6807\u8bc6\u3002 \u56de\u6536\u7f13\u5b58: \u6700\u8fd1\u6700\u5c11\u4f7f\u7528(LRU)\u7b56\u7565\u548c\u53cc\u94fe\u7b56\u7565(\u7ef4\u62a4\u4e24\u4e2a\u94fe\u8868\uff1a\u6d3b\u8dc3\u94fe\u8868\u548c\u975e\u6d3b\u8dc3\u94fe\u8868)\u3002","title":"\u7f13\u5b58"},{"location":"os/5_os/#linux_1","text":"\u9875\u9ad8\u901f\u7f13\u5b58\u7f13\u5b58\u7684\u662f\u5185\u5b58\u9875\u9762\uff0c\u7f13\u5b58\u4e2d\u7684\u9875\u6765\u81ea\u5bf9\u6b63\u89c4\u6587\u4ef6\u3001\u5757\u8bbe\u5907\u6587\u4ef6\u548c\u5185\u5b58\u6620\u5c04\u6587\u4ef6\u7684\u8bfb\u5199\u3002","title":"linux \u9875\u9ad8\u901f\u7f13\u5b58"},{"location":"os/7_simple_os/","text":"\u738b\u9053\u8003\u7814-\u64cd\u4f5c\u7cfb\u7edf \u64cd\u4f5c\u7cfb\u7edf \u8fdb\u7a0b \u7ebf\u7a0b \u8fdb\u7a0b\u8c03\u5ea6 \u8fdb\u7a0b\u540c\u6b65\u4e0e\u4e92\u65a5 \u5185\u5b58 \u7a0b\u5e8f\u94fe\u63a5\u4e0e\u88c5\u5165 \u5e93\u662f\u4e00\u79cd\u53ef\u6267\u884c\u4ee3\u7801\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\uff0c\u53ef\u4ee5\u88ab\u64cd\u4f5c\u7cfb\u7edf\u8f7d\u5165\u5185\u5b58\u6267\u884c\u3002 \u5e93\u6709\u4e24\u79cd\uff1a\u9759\u6001\u5e93\uff08.a\u3001.lib\uff09\u548c\u52a8\u6001\u5e93\uff08.so\u3001.dll\uff09\u3002 windows\u4e0a\u5bf9\u5e94\u7684\u662f.lib .dll\uff0c linux\u4e0a\u5bf9\u5e94\u7684\u662f.a .so\u3002 \u2003 \u9759\u6001\u94fe\u63a5\uff1a\u4e00\u4e2a\u9879\u76ee\u4e0b\u7684\u591a\u4e2a\u6e90\u6587\u4ef6\u53ef\u80fd\u5b58\u5728\u591a\u79cd\u4f9d\u8d56\u5173\u7cfb\uff0c\u5982\u4e00\u4e2a\u6e90\u6587\u4ef6\u53ef\u80fd\u8981\u8c03\u7528\u53e6\u4e00\u4e2a\u6e90\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\uff0c \u4f46\u662f\u6bcf\u4e2a\u6e90\u6587\u4ef6\u90fd\u662f\u72ec\u7acb\u7f16\u8bd1\u7684\uff0c\u5404\u81ea\u751f\u6210\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\uff1b\u5728\u94fe\u63a5\u9636\u6bb5\uff0c\u4f1a\u5c06\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6.o\u4e0e\u5f15\u7528\u5230\u7684\u5e93\u4e00\u8d77\u94fe\u63a5\u6253\u5305 \u5230\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002\u56e0\u6b64\u5bf9\u5e94\u7684\u94fe\u63a5\u65b9\u5f0f\u79f0\u4e3a\u9759\u6001\u94fe\u63a5\u3002 \u9759\u6001\u94fe\u63a5\u7f3a\u70b9: \u4e00\u662f\u6d6a\u8d39\u7a7a\u95f4\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u53ef\u6267\u884c\u7a0b\u5e8f\u4e2d\u5bf9\u6240\u6709\u9700\u8981\u7684\u76ee\u6807\u6587\u4ef6\u90fd\u8981\u6709\u4e00\u4efd\u526f\u672c\uff0c\u6240\u4ee5\u5982\u679c\u591a\u4e2a\u7a0b\u5e8f\u5bf9\u540c\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\u90fd\u6709\u4f9d\u8d56\uff0c \u5982\u591a\u4e2a\u7a0b\u5e8f\u4e2d\u90fd\u8c03\u7528\u4e86printf()\u51fd\u6570\uff0c\u5219\u8fd9\u591a\u4e2a\u7a0b\u5e8f\u4e2d\u90fd\u542b\u6709printf.o\uff0c\u6240\u4ee5\u540c\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\u90fd\u5728\u5185\u5b58\u5b58\u5728\u591a\u4e2a\u526f\u672c\uff1b \u53e6\u4e00\u65b9\u9762\u5c31\u662f\u66f4\u65b0\u6bd4\u8f83\u56f0\u96be\uff0c\u56e0\u4e3a\u6bcf\u5f53\u5e93\u51fd\u6570\u7684\u4ee3\u7801\u4fee\u6539\u4e86\uff0c\u5c31\u9700\u8981\u91cd\u65b0\u8fdb\u884c\u7f16\u8bd1\u94fe\u63a5\u5f62\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u3002 \u9759\u6001\u94fe\u63a5\u7684\u4f18\u70b9\u5c31\u662f\uff0c\u5728\u53ef\u6267\u884c\u7a0b\u5e8f\u4e2d\u5df2\u7ecf\u5177\u5907\u4e86\u6240\u6709\u6267\u884c\u7a0b\u5e8f\u6240\u9700\u8981\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u5728\u6267\u884c\u7684\u65f6\u5019\u8fd0\u884c\u901f\u5ea6\u5feb\u3002 \u2003 \u52a8\u6001\u94fe\u63a5\uff1a\u52a8\u6001\u94fe\u63a5\u7684\u57fa\u672c\u601d\u60f3\u662f\u628a\u7a0b\u5e8f\u6309\u7167\u6a21\u5757\u62c6\u5206\u6210\u5404\u4e2a\u76f8\u5bf9\u72ec\u7acb\u90e8\u5206\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u624d\u5c06\u5b83\u4eec\u94fe\u63a5\u5728\u4e00\u8d77 \u5f62\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u50cf\u9759\u6001\u94fe\u63a5\u4e00\u6837\u628a\u6240\u6709\u7a0b\u5e8f\u6a21\u5757\u90fd\u94fe\u63a5\u6210\u4e00\u4e2a\u5355\u72ec\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u52a8\u6001\u94fe\u63a5\u4f18\u7f3a\u70b9: \u5373\u4f7f\u9700\u8981\u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u4f9d\u8d56\u540c\u4e00\u4e2a\u5e93\uff0c\u4f46\u662f\u8be5\u5e93\u4e0d\u4f1a\u50cf\u9759\u6001\u94fe\u63a5\u90a3\u6837\u5728\u5185\u5b58\u4e2d\u5b58\u5728\u591a\u4efd\u526f\u672c\uff0c \u800c\u662f\u8fd9\u591a\u4e2a\u7a0b\u5e8f\u5728\u6267\u884c\u65f6\u5171\u4eab\u540c\u4e00\u4efd\u526f\u672c\uff1b\u53e6\u4e00\u4e2a\u4f18\u70b9\u662f\uff0c\u66f4\u65b0\u4e5f\u6bd4\u8f83\u65b9\u4fbf\uff0c\u66f4\u65b0\u65f6\u53ea\u9700\u8981\u66ff\u6362\u539f\u6765\u7684\u76ee\u6807\u6587\u4ef6\uff0c \u800c\u65e0\u9700\u5c06\u6240\u6709\u7684\u7a0b\u5e8f\u518d\u91cd\u65b0\u94fe\u63a5\u4e00\u904d\u3002\u5f53\u7a0b\u5e8f\u4e0b\u4e00\u6b21\u8fd0\u884c\u65f6\uff0c\u65b0\u7248\u672c\u7684\u76ee\u6807\u6587\u4ef6\u4f1a\u88ab\u81ea\u52a8\u52a0\u8f7d\u5230\u5185\u5b58\u5e76\u4e14\u94fe\u63a5\u8d77\u6765\uff0c \u7a0b\u5e8f\u5c31\u5b8c\u6210\u4e86\u5347\u7ea7\u7684\u76ee\u6807\u3002 \u56e0\u4e3a\u628a\u94fe\u63a5\u63a8\u8fdf\u5230\u4e86\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u6240\u4ee5\u6bcf\u6b21\u6267\u884c\u7a0b\u5e8f\u90fd\u9700\u8981\u8fdb\u884c\u94fe\u63a5\uff0c\u6240\u4ee5\u6027\u80fd\u4f1a\u6709\u4e00\u5b9a\u635f\u5931\u3002 \u52a8\u6001\u5185\u5b58\u5206\u914d","title":"7_simple_os"},{"location":"os/7_simple_os/#-","text":"","title":"\u738b\u9053\u8003\u7814-\u64cd\u4f5c\u7cfb\u7edf"},{"location":"os/7_simple_os/#_1","text":"","title":"\u64cd\u4f5c\u7cfb\u7edf"},{"location":"os/7_simple_os/#_2","text":"","title":"\u8fdb\u7a0b"},{"location":"os/7_simple_os/#_3","text":"","title":"\u7ebf\u7a0b"},{"location":"os/7_simple_os/#_4","text":"","title":"\u8fdb\u7a0b\u8c03\u5ea6"},{"location":"os/7_simple_os/#_5","text":"","title":"\u8fdb\u7a0b\u540c\u6b65\u4e0e\u4e92\u65a5"},{"location":"os/7_simple_os/#_6","text":"\u7a0b\u5e8f\u94fe\u63a5\u4e0e\u88c5\u5165 \u5e93\u662f\u4e00\u79cd\u53ef\u6267\u884c\u4ee3\u7801\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\uff0c\u53ef\u4ee5\u88ab\u64cd\u4f5c\u7cfb\u7edf\u8f7d\u5165\u5185\u5b58\u6267\u884c\u3002 \u5e93\u6709\u4e24\u79cd\uff1a\u9759\u6001\u5e93\uff08.a\u3001.lib\uff09\u548c\u52a8\u6001\u5e93\uff08.so\u3001.dll\uff09\u3002 windows\u4e0a\u5bf9\u5e94\u7684\u662f.lib .dll\uff0c linux\u4e0a\u5bf9\u5e94\u7684\u662f.a .so\u3002 \u2003 \u9759\u6001\u94fe\u63a5\uff1a\u4e00\u4e2a\u9879\u76ee\u4e0b\u7684\u591a\u4e2a\u6e90\u6587\u4ef6\u53ef\u80fd\u5b58\u5728\u591a\u79cd\u4f9d\u8d56\u5173\u7cfb\uff0c\u5982\u4e00\u4e2a\u6e90\u6587\u4ef6\u53ef\u80fd\u8981\u8c03\u7528\u53e6\u4e00\u4e2a\u6e90\u6587\u4ef6\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\uff0c \u4f46\u662f\u6bcf\u4e2a\u6e90\u6587\u4ef6\u90fd\u662f\u72ec\u7acb\u7f16\u8bd1\u7684\uff0c\u5404\u81ea\u751f\u6210\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\uff1b\u5728\u94fe\u63a5\u9636\u6bb5\uff0c\u4f1a\u5c06\u751f\u6210\u7684\u76ee\u6807\u6587\u4ef6.o\u4e0e\u5f15\u7528\u5230\u7684\u5e93\u4e00\u8d77\u94fe\u63a5\u6253\u5305 \u5230\u53ef\u6267\u884c\u6587\u4ef6\u4e2d\u3002\u56e0\u6b64\u5bf9\u5e94\u7684\u94fe\u63a5\u65b9\u5f0f\u79f0\u4e3a\u9759\u6001\u94fe\u63a5\u3002 \u9759\u6001\u94fe\u63a5\u7f3a\u70b9: \u4e00\u662f\u6d6a\u8d39\u7a7a\u95f4\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u53ef\u6267\u884c\u7a0b\u5e8f\u4e2d\u5bf9\u6240\u6709\u9700\u8981\u7684\u76ee\u6807\u6587\u4ef6\u90fd\u8981\u6709\u4e00\u4efd\u526f\u672c\uff0c\u6240\u4ee5\u5982\u679c\u591a\u4e2a\u7a0b\u5e8f\u5bf9\u540c\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\u90fd\u6709\u4f9d\u8d56\uff0c \u5982\u591a\u4e2a\u7a0b\u5e8f\u4e2d\u90fd\u8c03\u7528\u4e86printf()\u51fd\u6570\uff0c\u5219\u8fd9\u591a\u4e2a\u7a0b\u5e8f\u4e2d\u90fd\u542b\u6709printf.o\uff0c\u6240\u4ee5\u540c\u4e00\u4e2a\u76ee\u6807\u6587\u4ef6\u90fd\u5728\u5185\u5b58\u5b58\u5728\u591a\u4e2a\u526f\u672c\uff1b \u53e6\u4e00\u65b9\u9762\u5c31\u662f\u66f4\u65b0\u6bd4\u8f83\u56f0\u96be\uff0c\u56e0\u4e3a\u6bcf\u5f53\u5e93\u51fd\u6570\u7684\u4ee3\u7801\u4fee\u6539\u4e86\uff0c\u5c31\u9700\u8981\u91cd\u65b0\u8fdb\u884c\u7f16\u8bd1\u94fe\u63a5\u5f62\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\u3002 \u9759\u6001\u94fe\u63a5\u7684\u4f18\u70b9\u5c31\u662f\uff0c\u5728\u53ef\u6267\u884c\u7a0b\u5e8f\u4e2d\u5df2\u7ecf\u5177\u5907\u4e86\u6240\u6709\u6267\u884c\u7a0b\u5e8f\u6240\u9700\u8981\u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u5728\u6267\u884c\u7684\u65f6\u5019\u8fd0\u884c\u901f\u5ea6\u5feb\u3002 \u2003 \u52a8\u6001\u94fe\u63a5\uff1a\u52a8\u6001\u94fe\u63a5\u7684\u57fa\u672c\u601d\u60f3\u662f\u628a\u7a0b\u5e8f\u6309\u7167\u6a21\u5757\u62c6\u5206\u6210\u5404\u4e2a\u76f8\u5bf9\u72ec\u7acb\u90e8\u5206\uff0c\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u624d\u5c06\u5b83\u4eec\u94fe\u63a5\u5728\u4e00\u8d77 \u5f62\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u7a0b\u5e8f\uff0c\u800c\u4e0d\u662f\u50cf\u9759\u6001\u94fe\u63a5\u4e00\u6837\u628a\u6240\u6709\u7a0b\u5e8f\u6a21\u5757\u90fd\u94fe\u63a5\u6210\u4e00\u4e2a\u5355\u72ec\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002 \u52a8\u6001\u94fe\u63a5\u4f18\u7f3a\u70b9: \u5373\u4f7f\u9700\u8981\u6bcf\u4e2a\u7a0b\u5e8f\u90fd\u4f9d\u8d56\u540c\u4e00\u4e2a\u5e93\uff0c\u4f46\u662f\u8be5\u5e93\u4e0d\u4f1a\u50cf\u9759\u6001\u94fe\u63a5\u90a3\u6837\u5728\u5185\u5b58\u4e2d\u5b58\u5728\u591a\u4efd\u526f\u672c\uff0c \u800c\u662f\u8fd9\u591a\u4e2a\u7a0b\u5e8f\u5728\u6267\u884c\u65f6\u5171\u4eab\u540c\u4e00\u4efd\u526f\u672c\uff1b\u53e6\u4e00\u4e2a\u4f18\u70b9\u662f\uff0c\u66f4\u65b0\u4e5f\u6bd4\u8f83\u65b9\u4fbf\uff0c\u66f4\u65b0\u65f6\u53ea\u9700\u8981\u66ff\u6362\u539f\u6765\u7684\u76ee\u6807\u6587\u4ef6\uff0c \u800c\u65e0\u9700\u5c06\u6240\u6709\u7684\u7a0b\u5e8f\u518d\u91cd\u65b0\u94fe\u63a5\u4e00\u904d\u3002\u5f53\u7a0b\u5e8f\u4e0b\u4e00\u6b21\u8fd0\u884c\u65f6\uff0c\u65b0\u7248\u672c\u7684\u76ee\u6807\u6587\u4ef6\u4f1a\u88ab\u81ea\u52a8\u52a0\u8f7d\u5230\u5185\u5b58\u5e76\u4e14\u94fe\u63a5\u8d77\u6765\uff0c \u7a0b\u5e8f\u5c31\u5b8c\u6210\u4e86\u5347\u7ea7\u7684\u76ee\u6807\u3002 \u56e0\u4e3a\u628a\u94fe\u63a5\u63a8\u8fdf\u5230\u4e86\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u6240\u4ee5\u6bcf\u6b21\u6267\u884c\u7a0b\u5e8f\u90fd\u9700\u8981\u8fdb\u884c\u94fe\u63a5\uff0c\u6240\u4ee5\u6027\u80fd\u4f1a\u6709\u4e00\u5b9a\u635f\u5931\u3002 \u52a8\u6001\u5185\u5b58\u5206\u914d","title":"\u5185\u5b58"},{"location":"shell/base/","text":"Shell Script linux\u4e0b\u5e38\u7528\u7684Shell\u79cd\u7c7b\u6709Bourne Shell\uff08/usr/bin/sh\u6216/bin/sh\uff09\u548c Bourne Again Shell\uff08/bin/bash\uff09\uff0c Shell\u811a\u672c\u4e2d\u7684\u7b2c\u4e00\u884c\"#!/bin/bash\"\u544a\u8bc9\u7cfb\u7edf\u91c7\u7528\u54ea\u4e00\u4e2a\u89e3\u91ca\u5668\u6765\u6267\u884c\uff0c\u5373\u662f\u4f7f\u7528\u54ea\u4e00\u4e2aShell\u3002 Shell\u53d8\u91cf\u548c\u8fd0\u7b97\u7b26 Shell \u53d8\u91cf 1\u3001\u5b9a\u4e49\u53d8\u91cf\u65f6\uff0c\u53d8\u91cf\u540d\u4e0d\u52a0\u7f8e\u5143\u7b26\u53f7\uff08$\uff09: variable=\"value\", \u53d8\u91cf\u540d\u548c\u7b49\u53f7\u4e4b\u95f4\u4e0d\u80fd\u6709\u7a7a\u683c \u547d\u540d\u53ea\u80fd\u4f7f\u7528\u82f1\u6587\u5b57\u6bcd\uff0c\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\uff0c\u9996\u4e2a\u5b57\u7b26\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002 \u4e2d\u95f4\u4e0d\u80fd\u6709\u7a7a\u683c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5212\u7ebf\uff08_\uff09\u3002 \u4e0d\u80fd\u4f7f\u7528\u6807\u70b9\u7b26\u53f7\u3002 \u4e0d\u80fd\u4f7f\u7528bash\u91cc\u7684\u5173\u952e\u5b57 2\u3001\u4f7f\u7528\u53d8\u91cf\uff0c\u4f8b\u5982: echo $variable\u6216\u8005echo ${variable}\uff0c \u5728\u7ec8\u7aef\u6253\u5370\u51favalue. readonly variable \u5c06\u53d8\u91cf\u8bbe\u5b9a\u4e3a\u53ea\u8bfb\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539 unser variable \u5220\u9664\u53d8\u91cf\uff0c\u5220\u9664\u540e\u5c06\u4e0d\u80fd\u518d\u4f7f\u7528 3\u3001\u53d8\u91cf\u7c7b\u578b \u8fd0\u884cshell\u65f6\uff0c\u4f1a\u540c\u65f6\u5b58\u5728\u4e09\u79cd\u53d8\u91cf\uff1a 1) \u5c40\u90e8\u53d8\u91cf \u5c40\u90e8\u53d8\u91cf\u5728\u811a\u672c\u6216\u547d\u4ee4\u4e2d\u5b9a\u4e49\uff0c\u4ec5\u5728\u5f53\u524dshell\u5b9e\u4f8b\u4e2d\u6709\u6548\uff0c\u5176\u4ed6shell\u542f\u52a8\u7684\u7a0b\u5e8f\u4e0d\u80fd\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\u3002 2) \u73af\u5883\u53d8\u91cf \u6240\u6709\u7684\u7a0b\u5e8f\uff0c\u5305\u62ecshell\u542f\u52a8\u7684\u7a0b\u5e8f\uff0c\u90fd\u80fd\u8bbf\u95ee\u73af\u5883\u53d8\u91cf\uff0c\u6709\u4e9b\u7a0b\u5e8f\u9700\u8981\u73af\u5883\u53d8\u91cf\u6765\u4fdd\u8bc1\u5176\u6b63\u5e38\u8fd0\u884c\u3002 \u5fc5\u8981\u7684\u65f6\u5019shell\u811a\u672c\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u73af\u5883\u53d8\u91cf\u3002 3) shell\u53d8\u91cf shell\u53d8\u91cf\u662f\u7531shell\u7a0b\u5e8f\u8bbe\u7f6e\u7684\u7279\u6b8a\u53d8\u91cf\u3002shell\u53d8\u91cf\u4e2d\u6709\u4e00\u90e8\u5206\u662f\u73af\u5883\u53d8\u91cf\uff0c\u6709\u4e00\u90e8\u5206\u662f\u5c40\u90e8\u53d8\u91cf\uff0c \u8fd9\u4e9b\u53d8\u91cf\u4fdd\u8bc1\u4e86shell\u7684\u6b63\u5e38\u8fd0\u884c Shell \u5b57\u7b26\u4e32 \u2003\u5b57\u7b26\u4e32\u53ef\u4ee5\u7528\u5355\u5f15\u53f7\uff0c\u4e5f\u53ef\u4ee5\u7528\u53cc\u5f15\u53f7\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u7528\u5f15\u53f7\u3002 str=\"test\" echo string $str # \u8f93\u51fa string test echo \"string $str\" # \u8f93\u51fa string test echo \"string \"$str\"\" # \u8f93\u51fa string test echo \"string '$str'\" # \u8f93\u51fa string 'test' echo \"string \\\"$str\\\"\" # \u8f93\u51fa string \"test\" echo 'string $str' # \u8f93\u51fa string $str echo 'string '$str'' # \u8f93\u51fa string test echo 'string \"$str\"' # \u8f93\u51fa string \"$str\" str2=\"wh\" echo $str $str2 #\u62fc\u63a5\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa test wh echo ${#str} ${#str2} #\u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u8f93\u51fa 4 2 echo ${str:1c:3} #\u4ece\u5b57\u7b26\u4e32\u7b2c1\u4e2a\u5b57\u7b26(\u5b57\u7b26\u4e0b\u6807\u57fa0)\u5f00\u59cb\uff0c\u622a\u53d63\u4e2a\u5b57\u7b26\uff0c\u8f93\u51fa est echo `expr index \"$str\" es` # \u67e5\u627e\u5b57\u7b26e\u6216s\u7684\u4f4d\u7f6e\uff0c\u54ea\u4e2a\u5728\u524d\uff0c\u8f93\u51fa\u54ea\u4e2a\u7684\u4f4d\u7f6e(\u4ece1\u5f00\u59cb)\uff0c\u8fd9\u91cc\u8f93\u51fa2 \uff0c\u6ca1\u6709\u8be5\u5b57\u7b26\u5219\u8f93\u51fa 0 Shell \u6570\u7ec4 1\u3001bash\u652f\u6301\u4e00\u7ef4\u6570\u7ec4\uff08\u4e0d\u652f\u6301\u591a\u7ef4\u6570\u7ec4\uff09\uff0c\u5e76\u4e14\u6ca1\u6709\u9650\u5b9a\u6570\u7ec4\u7684\u5927\u5c0f\u3002 \u7c7b\u4f3c\u4e8e C \u8bed\u8a00\uff0c\u6570\u7ec4\u5143\u7d20\u7684\u4e0b\u6807\u7531 0 \u5f00\u59cb\u7f16\u53f7\u3002\u83b7\u53d6\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u8981\u5229\u7528\u4e0b\u6807\uff0c\u4e0b\u6807\u53ef\u4ee5\u662f\u6574\u6570\u6216\u7b97\u672f\u8868\u8fbe\u5f0f\uff0c \u5176\u503c\u5e94\u5927\u4e8e\u6216\u7b49\u4e8e 0\u3002 2\u3001\u5b9a\u4e49\u6570\u7ec4 array_name=(value0 value1 value2 value3)\uff1b \u53ef\u4ee5\u5355\u72ec\u5b9a\u4e49\u6570\u7ec4\u7684\u5404\u4e2a\u5206\u91cf\uff0c\u4e14\u53ef\u4ee5\u4e0d\u4f7f\u7528\u8fde\u7eed\u7684\u4e0b\u6807\uff0c \u800c\u4e14\u4e0b\u6807\u7684\u8303\u56f4\u6ca1\u6709\u9650\u5236: array_name[0]=value0 array_name[1]=value1 array_name[5]=value5 3\u3001valuen=${array_name[n]} # \u83b7\u53d6\u6570\u7ec4\u5143\u7d20 echo ${array_name[@]} # \u83b7\u53d6\u6570\u7ec4\u5168\u90e8\u5143\u7d20 echo ${#array_name[@]} \u6216\u8005 echo ${#array_name[*]} #\u83b7\u53d6\u6570\u7ec4\u957f\u5ea6 shell map \u4e00\u3001\u5728\u4f7f\u7528map\u65f6\uff0c\u9700\u8981\u5148\u58f0\u660e\uff0c\u5426\u5219\u7ed3\u679c\u53ef\u80fd\u4e0e\u9884\u671f\u4e0d\u540c\uff0carray\u53ef\u4ee5\u4e0d\u58f0\u660e declare -A map \u4e8c\u3001\u521d\u59cb\u5316map \u4e0earray\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u4f7f\u7528\u62ec\u53f7\u76f4\u63a5\u521d\u59cb\u5316\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u7684\u65b9\u5f0f\u6765\u521d\u59cb\u5316\u6570\u636e\uff0c\u4e0earray\u4e0d\u540c\u7684\u662f\uff0c \u62ec\u53f7\u76f4\u63a5\u521d\u59cb\u5316\u65f6\u4f7f\u7528\u7684\u4e3a\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u4e0b\u6807\u53ef\u4ee5\u4e0d\u662f\u6574\u6570 map=([\"aa\"]=\"11\" [\"bb\"]=\"22\") map[\"name\"]=\"val\" map[\"apple\"]=\"pen\" \u4e09\u3001\u8f93\u51fa\u6240\u6709\u7684key \u82e5\u672a\u4f7f\u7528declare\u58f0\u660emap\uff0c\u5219\u6b64\u5904\u5c06\u8f93\u51fa0\uff0c\u4e0e\u9884\u671f\u8f93\u51fa\u4e0d\u7b26\uff0c\u6b64\u5904\u8f93\u51fa\u8bed\u53e5\u683c\u5f0f\u6bd4arry\u591a\u4e86\u4e00\u4e2a \uff01 echo ${!map[@]} \u56db\u3001\u8f93\u51fa\u6240\u6709value \u4e0earray\u8f93\u51fa\u683c\u5f0f\u76f8\u540c, echo ${map[@]} \u4e94\u3001\u8f93\u51famap\u957f\u5ea6 \u4e0earray\u8f93\u51fa\u683c\u5f0f\u76f8\u540c, echo ${#map[@]} \u6216 ${#map[*]} \u516d\u3001\u904d\u5386\uff0c\u6839\u636ekey\u627e\u5230\u5bf9\u5e94\u7684value for key in ${!map[*]};do echo ${map[$key]} done \u4e03\u3001\u904d\u5386\u6240\u6709\u7684key for key in ${!map[@]};do echo $key done \u5224\u65ad\u67d0\u4e2akey\u662f\u5426\u4e3a\u7a7a if [ -z $map[$key] ] \u516b\u3001\u904d\u5386\u6240\u6709\u7684value for val in ${map[@]};do echo $val done Shell\u6ce8\u91ca \u2003 \u5355\u884c\u6ce8\u91ca\u4f7f\u7528 # \u2003 \u591a\u884c\u6ce8\u91ca\u4f7f\u7528 :<<EOF ... EOF\uff0c \u5904\u4e8e\u5176\u4e2d\u7684\u5185\u5bb9\u5c06\u88ab\u6ce8\u91ca\uff0c\u4e14EOF\u53ef\u4ee5\u6362\u7528\u5176\u5b83\u7684\u7b26\u53f7\uff0c\u5982 :<<! ... ! \u4f20\u9012\u53c2\u6570 \u2003 \u5411\u811a\u672c\u4f20\u9012\u53c2\u6570\uff0c$n\u4ee3\u8868\u7b2c\u51e0\u4e2a\u53c2\u6570\uff0c$0\u4ee3\u8868\u6587\u4ef6\u540d $# \u4f20\u9012\u5230\u811a\u672c\u7684\u53c2\u6570\u4e2a\u6570 $ \u4ee5\u4e00\u4e2a\u5355\u5b57\u7b26\u4e32\u663e\u793a\u6240\u6709\u5411\u811a\u672c\u4f20\u9012\u7684\u53c2\u6570\u3002\u5982\"$ \"\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u60c5\u51b5\u3001\u4ee5\"$1 $2 \u2026 $n\"\u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\u3002 $$ \u811a\u672c\u8fd0\u884c\u7684\u5f53\u524d\u8fdb\u7a0bID\u53f7 $! \u540e\u53f0\u8fd0\u884c\u7684\u6700\u540e\u4e00\u4e2a\u8fdb\u7a0b\u7684ID\u53f7 $@ \u4e0e$*\u76f8\u540c\uff0c\u5728\u5f15\u53f7\u4e2d\u8fd4\u56de\u6bcf\u4e2a\u53c2\u6570\u3002\u5982\"$@\"\u7528\u53cc\u5f15\u53f7\uff0c\u4ee5\"$1\" \"$2\" \u2026 \"$n\" \u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\u3002 \u8fd9\u79cd\u5f62\u5f0f\u53ef\u4ee5\u5728for\u5faa\u73af\u4e2d\u83b7\u53d6\u5230\u6bcf\u4e2a\u53c2\u6570\u503c $- \u663e\u793aShell\u4f7f\u7528\u7684\u5f53\u524d\u9009\u9879\uff0c\u4e0eset\u547d\u4ee4\u529f\u80fd\u76f8\u540c\u3002 $? \u663e\u793a\u6700\u540e\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001\u30020\u8868\u793a\u6ca1\u6709\u9519\u8bef\uff0c\u5176\u4ed6\u4efb\u4f55\u503c\u8868\u660e\u6709\u9519\u8bef Shell\u8fd0\u7b97\u7b26 \u2003\u539f\u751fbash\u4e0d\u652f\u6301\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u547d\u4ee4\u6765\u5b9e\u73b0\uff0c\u4f8b\u5982 awk \u548c expr\uff0cexpr \u6700\u5e38\u7528. \u2003\u7b97\u6570\u8fd0\u7b97\u7b26(+\u3001-\u3001*\u3001\\ \u3001%\u3001==\u3001=\u3001!=)\uff1b \u2003\u5173\u7cfb\u8fd0\u7b97\u7b26(-eq\u3001-ne\u3001-gt\u3001-lt\u3001-ge\u3001-le)\uff1b \u2003\u5e03\u5c14\u8fd0\u7b97\u7b26(!:\u975e\u8fd0\u7b97\u3001-o:\u6216\u8fd0\u7b97\u3001-a:\u4e0e\u8fd0\u7b97)\uff1b \u2003\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26(==\u3001!=\u3001-z:\u957f\u5ea6\u662f\u5426\u4e3a0\u3001-n:\u957f\u5ea6\u662f\u5426\u4e0d\u4e3a0\u3001$:\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u7a7a)\uff1b \u2003\u6587\u4ef6\u6d4b\u8bd5\u8fd0\u7b97\u7b26(-c:\u662f\u5426\u662f\u5b57\u7b26\u8bbe\u5907\u6587\u4ef6\uff0c-d:\u662f\u5426\u662f\u76ee\u5f55\uff0c-f:\u662f\u5426\u662f\u666e\u901a\u6587\u4ef6\uff0c -r:\u662f\u5426\u53ef\u8bfb\uff0c-w:\u662f\u5426\u53ef\u5199\uff0c-e:\u662f\u5426\u5b58\u5728\uff0c\u5b58\u5728\u8fd4\u56detrue\uff0c-s:\u662f\u5426\u4e3a\u7a7a\uff0c\u4e0d\u7a7a\u8fd4\u56detrue) \u2003\u53cc\u76ee\u8fd0\u7b97\u7b26\u524d\u540e\u5fc5\u987b\u6709\u7a7a\u683c, \u4f46\u4e0d\u5305\u62ec = \u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u53d8\u91cf\u540d=\u503c\uff1b \u2003\u7b97\u672f\u8fd0\u7b97\u4e5f\u53ef\u4ee5\u4f7f\u7528 [] \u6216\u8005 let\u6765\u5b9e\u73b0 a=10 b=10 val=`expr $a \\* $b` val2= $[a + b] let val3=a/b echo \"$val\" # \u8f93\u51fa 100 echo $val2 $val3 if [ $a -eq $b ] then echo \"$a -eq $b : a \u7b49\u4e8e b\" else echo \"$a -eq $b: a \u4e0d\u7b49\u4e8e b\" fi if [ $a -lt 100 -a $b -gt 15 ] then echo \"$a \u5c0f\u4e8e 100 \u4e14 $b \u5927\u4e8e 15 : \u8fd4\u56de true\" else echo \"$a \u5c0f\u4e8e 100 \u4e14 $b \u5927\u4e8e 15 : \u8fd4\u56de false\" fi a=\"abc\" b=\"efg\" if [ -n \"$a\" ] then echo \"-n $a : \u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u4e3a 0\" else echo \"-n $a : \u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a 0\" fi if [ $a ] then echo \"$a : \u5b57\u7b26\u4e32\u4e0d\u4e3a\u7a7a\" else echo \"$a : \u5b57\u7b26\u4e32\u4e3a\u7a7a\" fi Shell\u5e38\u89c1\u547d\u4ee4 test \u68c0\u67e5\u67d0\u4e2a\u6761\u4ef6\u662f\u5426\u6210\u7acb\uff0c\u5b83\u53ef\u4ee5\u8fdb\u884c\u6570\u503c\u3001\u5b57\u7b26\u548c\u6587\u4ef6\u4e09\u4e2a\u65b9\u9762\u7684\u6d4b\u8bd5 num1=100 num2=100 if test $[num1] -eq $[num2] then echo '\u4e24\u4e2a\u6570\u76f8\u7b49\uff01' else echo '\u4e24\u4e2a\u6570\u4e0d\u76f8\u7b49\uff01' fi num1=\"ru1noob\" num2=\"runoob\" if test $num1 = $num2 then echo '\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49!' else echo '\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e0d\u76f8\u7b49!' fi cd /bin if test -e ./bash then echo '\u6587\u4ef6\u5df2\u5b58\u5728!' else echo '\u6587\u4ef6\u4e0d\u5b58\u5728!' fi cd /bin if test -e ./notFile -o -e ./bash then echo '\u81f3\u5c11\u6709\u4e00\u4e2a\u6587\u4ef6\u5b58\u5728!' else echo '\u4e24\u4e2a\u6587\u4ef6\u90fd\u4e0d\u5b58\u5728' fi echo echo -e \"OK! \\n\" # -e \u5f00\u542f\u8f6c\u4e49\uff0c \\n\u8868\u793a\u6362\u884c echo -e \"OK! \\c\" # -e \u5f00\u542f\u8f6c\u4e49 \\c \u4e0d\u6362\u884c echo \"It is a test\" > myfile # \u663e\u793a\u7ed3\u679c\u5b9a\u5411\u81f3\u6587\u4ef6 # \u663e\u793a\u547d\u4ee4\u6267\u884c\u7ed3\u679c echo `date` echo `expr index \"$str\" es` printf \u8f93\u51fa\u683c\u5f0f\u5316\u7ed3\u679c %s %c %d %f\u90fd\u662f\u683c\u5f0f\u66ff\u4ee3\u7b26\uff0c\uff05s \u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\uff05d \u6574\u578b\u8f93\u51fa\uff0c\uff05c \u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\uff0c\uff05f \u8f93\u51fa\u5b9e\u6570\uff0c\u4ee5\u5c0f\u6570\u5f62\u5f0f\u8f93\u51fa\u3002 %-10s \u6307\u4e00\u4e2a\u5bbd\u5ea6\u4e3a 10 \u4e2a\u5b57\u7b26\uff08- \u8868\u793a\u5de6\u5bf9\u9f50\uff0c\u6ca1\u6709\u5219\u8868\u793a\u53f3\u5bf9\u9f50\uff09\uff0c \u4efb\u4f55\u5b57\u7b26\u90fd\u4f1a\u88ab\u663e\u793a\u5728 10 \u4e2a\u5b57\u7b26\u5bbd\u7684\u5b57\u7b26\u5185\uff0c\u5982\u679c\u4e0d\u8db3\u5219\u81ea\u52a8\u4ee5\u7a7a\u683c\u586b\u5145\uff0c\u8d85\u8fc7\u4e5f\u4f1a\u5c06\u5185\u5bb9\u5168\u90e8\u663e\u793a\u51fa\u6765\u3002 %-4.2f \u6307\u683c\u5f0f\u5316\u4e3a\u5c0f\u6570\uff0c\u5176\u4e2d .2 \u6307\u4fdd\u75592\u4f4d\u5c0f\u6570\u3002 # format-string\u4e3a\u53cc\u5f15\u53f7 printf \"%d %s\\n\" 1 \"abc\" # \u5355\u5f15\u53f7\u4e0e\u53cc\u5f15\u53f7\u6548\u679c\u4e00\u6837 printf '%d %s\\n' 1 \"abc\" # \u6ca1\u6709\u5f15\u53f7\u4e5f\u53ef\u4ee5\u8f93\u51fa\uff0c\u4ec5\u8bd5\u7528\u4e00\u4e2a\u683c\u5f0f\u66ff\u4ee3\u7b26\u7684\u60c5\u5f62 printf %s abcdef # printf $s $d str 1 \u4e0d\u80fd\u6b63\u786e\u8f93\u51fa\u7ed3\u679c # \u683c\u5f0f\u53ea\u6307\u5b9a\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u4f46\u591a\u51fa\u7684\u53c2\u6570\u4ecd\u7136\u4f1a\u6309\u7167\u8be5\u683c\u5f0f\u8f93\u51fa\uff0cformat-string \u88ab\u91cd\u7528 printf %s abc def printf \"%s\\n\" abc def printf \"%s %s %s\\n\" a b c d e f g h i j # \u5982\u679c\u6ca1\u6709 arguments\uff0c\u90a3\u4e48 %s \u7528\u7a7a\u683c\u4ee3\u66ff\uff0c%d \u7528 0 \u4ee3\u66ff printf \"%s and %d \\n\" Shell\u51fd\u6570\u8bed\u53e5 \u6d41\u7a0b\u63a7\u5236 // if elif else fi // \u5982\u679c\u67d0\u4e2a\u6d41\u7a0b\u63a7\u5236\u4e3a\u7a7a\uff0c\u5219\u4e0d\u9700\u8981\u5199\u51fa\u8be5\u5206\u652f a=10 b=20 if [ $a == $b ] then echo \"a \u7b49\u4e8e b\" elif [ $a -gt $b ] then echo \"a \u5927\u4e8e b\" elif [ $a -lt $b ] then echo \"a \u5c0f\u4e8e b\" else echo \"\u6ca1\u6709\u7b26\u5408\u7684\u6761\u4ef6\" fi // for\u5faa\u73af for var in item1 item2 ... itemN do command1 command2 ... commandN done // while \u5faa\u73af while condition do command done // until\u5faa\u73af until condition do command done //\u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d\uff0c\u6709\u65f6\u5019\u9700\u8981\u5728\u672a\u8fbe\u5230\u5faa\u73af\u7ed3\u675f\u6761\u4ef6\u65f6\u5f3a\u5236\u8df3\u51fa\u5faa\u73af\uff0cShell\u4f7f\u7528\u4e24\u4e2a\u547d\u4ee4\u6765\u5b9e\u73b0\u8be5\u529f\u80fd\uff1abreak\u548ccontinue\u3002 // case...esac echo '\u8f93\u5165 1 \u5230 4 \u4e4b\u95f4\u7684\u6570\u5b57:' echo '\u4f60\u8f93\u5165\u7684\u6570\u5b57\u4e3a:' read aNum case $aNum in 1) echo '\u4f60\u9009\u62e9\u4e86 1' ;; 2) echo '\u4f60\u9009\u62e9\u4e86 2' ;; 3) echo '\u4f60\u9009\u62e9\u4e86 3' ;; 4) echo '\u4f60\u9009\u62e9\u4e86 4' ;; *) echo '\u4f60\u6ca1\u6709\u8f93\u5165 1 \u5230 4 \u4e4b\u95f4\u7684\u6570\u5b57' ;; esac case \u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0a\u6240\u793a\uff0c\u53d6\u503c\u540e\u9762\u5fc5\u987b\u4e3a\u5355\u8bcd in\uff0c\u6bcf\u4e00\u6a21\u5f0f\u5fc5\u987b\u4ee5\u53f3\u62ec\u53f7\u7ed3\u675f\u3002\u53d6\u503c\u53ef\u4ee5\u4e3a\u53d8\u91cf\u6216\u5e38\u6570\uff0c\u5339\u914d\u53d1\u73b0\u53d6\u503c\u7b26\u5408\u67d0\u4e00\u6a21\u5f0f\u540e\uff0c \u5176\u95f4\u6240\u6709\u547d\u4ee4\u5f00\u59cb\u6267\u884c\u76f4\u81f3 ;; \u3002 \u53d6\u503c\u5c06\u68c0\u6d4b\u5339\u914d\u7684\u6bcf\u4e00\u4e2a\u6a21\u5f0f\u3002\u4e00\u65e6\u6a21\u5f0f\u5339\u914d\uff0c\u5219\u6267\u884c\u5b8c\u5339\u914d\u6a21\u5f0f\u76f8\u5e94\u547d\u4ee4\u540e\u4e0d\u518d\u7ee7\u7eed\u5176\u4ed6\u6a21\u5f0f\u3002 \u5982\u679c\u65e0\u4e00\u5339\u914d\u6a21\u5f0f\uff0c\u4f7f\u7528\u661f\u53f7 * \u6355\u83b7\u8be5\u503c\uff0c\u518d\u6267\u884c\u540e\u9762\u7684\u547d\u4ee4\u3002 shell\u51fd\u6570 [ function ] funname [()] { action; [return int;] } /* 1\u3001\u53ef\u4ee5\u5e26function fun() \u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5fun() \u5b9a\u4e49,\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\u3002 2\u3001\u53c2\u6570\u8fd4\u56de\uff0c\u53ef\u4ee5\u663e\u793a\u52a0\uff1areturn \u8fd4\u56de; \u5982\u679c\u4e0d\u52a0\uff0c\u5c06\u4ee5\u6700\u540e\u4e00\u6761\u547d\u4ee4\u8fd0\u884c\u7ed3\u679c\uff0c\u4f5c\u4e3a\u8fd4\u56de\u503c, return\u540e\u8ddf\u6570\u503cn(0-255) 3\u3001\u51fd\u6570\u8fd4\u56de\u503c\u5728\u8c03\u7528\u8be5\u51fd\u6570\u540e\u901a\u8fc7 $? \u6765\u83b7\u5f97\u3002 \u6ce8\u610f\uff1a\u6240\u6709\u51fd\u6570\u5728\u4f7f\u7528\u524d\u5fc5\u987b\u5b9a\u4e49\u3002\u8fd9\u610f\u5473\u7740\u5fc5\u987b\u5c06\u51fd\u6570\u653e\u5728\u811a\u672c\u5f00\u59cb\u90e8\u5206\uff0c\u76f4\u81f3shell\u89e3\u91ca\u5668\u9996\u6b21\u53d1\u73b0\u5b83\u65f6\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528\u3002 \u8c03\u7528\u51fd\u6570\u4ec5\u4f7f\u7528\u5176\u51fd\u6570\u540d\u5373\u53ef\u3002 */ funWithReturn(){ echo \"\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5bf9\u8f93\u5165\u7684\u4e24\u4e2a\u6570\u5b57\u8fdb\u884c\u76f8\u52a0\u8fd0\u7b97...\" echo \"\u8f93\u5165\u7b2c\u4e00\u4e2a\u6570\u5b57: \" read aNum echo \"\u8f93\u5165\u7b2c\u4e8c\u4e2a\u6570\u5b57: \" read anotherNum echo \"\u4e24\u4e2a\u6570\u5b57\u5206\u522b\u4e3a $aNum \u548c $anotherNum !\" return $(($aNum+$anotherNum)) } funWithReturn echo \"\u8f93\u5165\u7684\u4e24\u4e2a\u6570\u5b57\u4e4b\u548c\u4e3a $? \" // \u5728Shell\u4e2d\uff0c\u8c03\u7528\u51fd\u6570\u65f6\u53ef\u4ee5\u5411\u5176\u4f20\u9012\u53c2\u6570\u3002\u5728\u51fd\u6570\u4f53\u5185\u90e8\uff0c\u901a\u8fc7 $n \u7684\u5f62\u5f0f\u6765\u83b7\u53d6\u53c2\u6570\u7684\u503c // \u5f53n>=10\u65f6\uff0c\u9700\u8981\u4f7f\u7528${n}\u6765\u83b7\u53d6\u53c2\u6570 funWithParam(){ echo \"\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a $1 !\" echo \"\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a $2 !\" echo \"\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3a $3 !\" echo \"\u53c2\u6570\u603b\u6570\u6709 $# \u4e2a!\" echo \"\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f93\u51fa\u6240\u6709\u53c2\u6570 $* !\" } funWithParam 1 2 3 \u8f93\u5165\u8f93\u51fa\u91cd\u5b9a\u5411 \u5927\u591a\u6570 UNIX \u7cfb\u7edf\u547d\u4ee4\u4ece\u4f60\u7684\u7ec8\u7aef\u63a5\u53d7\u8f93\u5165\u5e76\u5c06\u6240\u4ea7\u751f\u7684\u8f93\u51fa\u53d1\u9001\u56de\u200b\u200b\u5230\u60a8\u7684\u7ec8\u7aef\u3002\u4e00\u4e2a\u547d\u4ee4\u901a\u5e38\u4ece\u4e00\u4e2a\u53eb\u6807\u51c6\u8f93\u5165\u7684\u5730\u65b9\u8bfb\u53d6\u8f93\u5165\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u6070\u597d\u662f\u4f60\u7684\u7ec8\u7aef\u3002\u540c\u6837\uff0c\u4e00\u4e2a\u547d\u4ee4\u901a\u5e38\u5c06\u5176\u8f93\u51fa\u5199\u5165\u5230\u6807\u51c6\u8f93\u51fa\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e5f\u662f\u4f60\u7684\u7ec8\u7aef\u3002 \u91cd\u5b9a\u5411\u547d\u4ee4\u5217\u8868\u5982\u4e0b\uff1a \u547d\u4ee4\u2003\u2003\u2003\u2003\u2003\u2003\u8bf4\u660e command > file\u2003\u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230 file\u3002 command < file\u2003\u5c06\u8f93\u5165\u91cd\u5b9a\u5411\u5230 file\uff0c\u5373\u4ece\u6587\u4ef6\u4e2d\u83b7\u53d6\u8f93\u5165\u3002 command >> file\u2003\u5c06\u8f93\u51fa\u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\u91cd\u5b9a\u5411\u5230 file\u3002 n>file\u2003\u2003\u2003\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a n \u7684\u6587\u4ef6\u91cd\u5b9a\u5411\u5230 file\u3002 n>>file\u2003\u2003\u2003\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a n \u7684\u6587\u4ef6\u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\u91cd\u5b9a\u5411\u5230 file\u3002 n>&m\u2003\u2003\u2003\u5c06\u8f93\u51fa\u6587\u4ef6 m \u548c n \u5408\u5e76\u3002 n<&m\u2003\u2003\u2003\u5c06\u8f93\u5165\u6587\u4ef6 m \u548c n \u5408\u5e76\u3002 << tag\u2003\u2003\u2003\u5c06\u5f00\u59cb\u6807\u8bb0 tag \u548c\u7ed3\u675f\u6807\u8bb0 tag \u4e4b\u95f4\u7684\u5185\u5bb9\u4f5c\u4e3a\u8f93\u5165\uff0c\u89c1Here Document\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26 0 \u901a\u5e38\u662f\u6807\u51c6\u8f93\u5165\uff08STDIN\uff09\uff0c1 \u662f\u6807\u51c6\u8f93\u51fa\uff08STDOUT\uff09\uff0c2 \u662f\u6807\u51c6\u9519\u8bef\u8f93\u51fa\uff08STDERR\uff09\u3002 Here Document Shell \u4e2d\u7684\u4e00\u79cd\u7279\u6b8a\u7684\u91cd\u5b9a\u5411\u65b9\u5f0f\uff0c\u7528\u6765\u5c06\u8f93\u5165\u91cd\u5b9a\u5411\u5230\u4e00\u4e2a\u4ea4\u4e92\u5f0f Shell \u811a\u672c\u6216\u7a0b\u5e8f\u3002 \u5b83\u7684\u57fa\u672c\u7684\u5f62\u5f0f\u5982\u4e0b\uff1a command << delimiter \u2003\u2003document delimiter \u5b83\u7684\u4f5c\u7528\u662f\u5c06\u4e24\u4e2a delimiter \u4e4b\u95f4\u7684\u5185\u5bb9(document) \u4f5c\u4e3a\u8f93\u5165\u4f20\u9012\u7ed9 command\u3002 \u6ce8\u610f\uff1a\u7ed3\u5c3e\u7684delimiter \u4e00\u5b9a\u8981\u9876\u683c\u5199\uff0c\u524d\u9762\u4e0d\u80fd\u6709\u4efb\u4f55\u5b57\u7b26\uff0c\u540e\u9762\u4e5f\u4e0d\u80fd\u6709\u4efb\u4f55\u5b57\u7b26\uff0c\u5305\u62ec\u7a7a\u683c\u548c tab \u7f29\u8fdb\u3002 \u5f00\u59cb\u7684delimiter\u524d\u540e\u7684\u7a7a\u683c\u4f1a\u88ab\u5ffd\u7565\u6389\u3002 \u6587\u4ef6\u5305\u542b # .\u548c\u6587\u4ef6\u540d\u4e4b\u95f4\u5fc5\u987b\u6709\u7a7a\u683c\uff0c\u901a\u8fc7\u6b64\u79cd\u65b9\u5f0f\u5f15\u5165\u5916\u90e8\u811a\u672c\uff0c\u88ab\u5f15\u5165\u7684\u6587\u4ef6\u4e0d\u9700\u8981\u53ef\u6267\u884c\u6743\u9650\uff0c\u4f46\u8981\u6267\u884c\u7684\u5f53\u524d\u6587\u4ef6\u9700\u8981\u53ef\u6267\u884c\u6743\u9650 \uff0efilename shell \u8865\u5145 shell\u62ec\u53f7 $()\u548c : \u5728 bash shell \u4e2d\uff0c$( ) \u4e0e (\u53cd\u5f15\u53f7) \u90fd\u53ef\u7528\u505a\u547d\u4ee4\u66ff\u6362\u7528\u3002 \u79fb\u690d\u6027\u6bd4\u8f83\u9ad8\uff0c$()\u5e76\u4e0d\u662f\u6240\u6709shell\u90fd\u652f\u6301 ()\u672c\u8eab\u53ef\u4ee5\u7528\u6765\u4ea7\u751f\u547d\u4ee4\u7ec4\uff0c\u62ec\u53f7\u4e2d\u7684\u547d\u4ee4\u5c06\u4f1a\u65b0\u5f00\u4e00\u4e2a\u5b50shell\u987a\u5e8f\u6267\u884c\uff0c\u6240\u4ee5\u62ec\u53f7\u4e2d\u7684\u53d8\u91cf\u4e0d\u80fd\u591f\u88ab\u811a\u672c\u4f59\u4e0b\u7684\u90e8\u5206\u4f7f\u7528\u3002 \u62ec\u53f7\u4e2d\u591a\u4e2a\u547d\u4ee4\u4e4b\u95f4\u7528\u5206\u53f7\u9694\u5f00\uff0c\u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u53ef\u4ee5\u6ca1\u6709\u5206\u53f7\uff0c\u5404\u547d\u4ee4\u548c\u62ec\u53f7\u4e4b\u95f4\u4e0d\u5fc5\u6709\u7a7a\u683c\uff1b \u8fd8\u53ef\u4ee5\u7528\u6765\u521d\u59cb\u5316\u6570\u7ec4\uff0carray=(a,b,c,d), arr=($line), line\u662f\u8bfb\u5165\u7684\u4e00\u884c\uff0c\u8fd9\u91cc\u9ed8\u8ba4\u4ee5\u7a7a\u683c\u5206\u9694\uff0c arr=(${line//,/ }) # \u4ee5,\u5206\u5272 \u2003 (()): \u53ef\u4ee5\u5728\u62ec\u53f7\u5185\u8fdb\u884c\u6574\u6570\u8fd0\u7b97\uff0c\u4e0d\u652f\u6301\u6d6e\u70b9\u6570\u548c\u5b57\u7b26\u4e32\uff0c\u5728\u5176\u4e2d\u4f7f\u7528\u53d8\u91cf\u4e0d\u7528\u52a0 $\uff1b\u53ef\u4ee5\u5229\u7528(())\u5b9e\u73b0\u81ea\u589e\u3001\u81ea\u51cf\uff1b \u53ef\u4ee5\u5728(())\u5185\u540c\u65f6\u8ba1\u7b97\u591a\u4e2a\u8868\u8fbe\u5f0f\uff0c((a=3+5, b=a+10));ehco $a $b \u53ef\u4ee5\u901a\u8fc7 $(()) \u6765\u83b7\u53d6\u547d\u4ee4\u7ed3\u679c\uff0cc=$((a+b)) \u53ef\u4ee5\u5728\u62ec\u53f7\u5185\u8fdb\u884c\u903b\u8f91\u8fd0\u7b97, echo $((7 < 8)), \u8f93\u51fa 1\uff0c\u8868\u793atrue \u2003 []: [ \u7b49\u4ef7\u4e8etest\u547d\u4ee4\uff0c\u7136\u540e\u662f\u8868\u8fbe\u5f0f\uff0c]\u4ee3\u8868\u5173\u95ed\u6761\u4ef6\u5224\u65ad\uff0c test $a -eq $b \u7b49\u4e8e [ $a -eq $b ] \u56e0\u6b64\u8868\u8fbe\u5f0f\u524d\u540e\u4e00\u5b9a\u5b58\u5728\u7a7a\u683c\u3002\u5176\u4e2d\u7684\u903b\u8f91\u8fd0\u7b97\u7b26\u53ea\u80fd\u4f7f\u7528 -a\u3001-o\u3001!; \u5728\u5176\u4e2d\u4f7f\u7528 < \u6216 >\uff0c\u9700\u8981\u8f6c\u4e49\uff0c if [ $a \\< $b ] \u7b49\u4e8e if [ $a -lt $b ]; \u8fd8\u53ef\u7528\u4f5c\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4e00\u90e8\u5206\uff0c\u63cf\u8ff0\u4e00\u4e2a\u5b57\u7b26\u7684\u5339\u914d\u8303\u56f4, [0-9]\u8868\u793a\u5339\u914d0~9\u4e2d\u7684\u67d0\u4e2a\u5b57\u7b26 \u5728\u4e00\u4e2aarray \u7ed3\u6784\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u4e2d\u62ec\u53f7\u7528\u6765\u5f15\u7528\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u7f16\u53f7 \u2003 [[]]: bash \u628a[[]]\u4e2d\u7684\u8868\u8fbe\u5f0f\u770b\u4f5c\u4e00\u4e2a\u5355\u72ec\u7684\u5143\u7d20, \u8fd9\u6837\u53ef\u4ee5\u5728\u5176\u4e2d\u4f7f\u7528 &&\u3001||\uff1b \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528if [[ $a != 1 && $a != 2 ]], \u5982\u679c\u4e0d\u4f7f\u7528[[]], \u5219\u4e3aif [ $a -ne 1] && [ $a != 2 ] \u6216\u8005if [ $a -ne 1 -a $a != 2 ]; \u5728\u5176\u4e2d\u4f7f\u7528 < \u6216 >\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u8f6c\u4e49 \u53d8\u91cf\u66ff\u6362 \u2460${var:-string}\u548c${var:=string}:\u82e5\u53d8\u91cfvar\u4e3a\u7a7a\uff0c\u5219\u7528\u5728\u547d\u4ee4\u884c\u4e2d\u7528string\u6765\u66ff\u6362${var:-string}\uff0c \u5426\u5219\u53d8\u91cfvar\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5219\u7528\u53d8\u91cfvar\u7684\u503c\u6765\u66ff\u6362${var:-string}\uff1b \u5bf9\u4e8e${var:=string}\u7684\u66ff\u6362\u89c4\u5219\u548c${var:-string}\u662f\u4e00\u6837\u7684\uff0c\u6240\u4e0d\u540c\u4e4b\u5904\u662f${var:=string}\u82e5var\u4e3a\u7a7a\u65f6\uff0c \u7528string\u66ff\u6362${var:=string}\u7684\u540c\u65f6\uff0c\u628astring\u8d4b\u7ed9\u53d8\u91cfvar\uff0c\u5373\u4f1a\u4fee\u6539var\uff1b ${var:=string}\u5f88\u5e38\u7528\u7684\u4e00\u79cd\u7528\u6cd5\u662f\uff0c\u5224\u65ad\u67d0\u4e2a\u53d8\u91cf\u662f\u5426\u8d4b\u503c\uff0c\u6ca1\u6709\u7684\u8bdd\u5219\u7ed9\u5b83\u8d4b\u4e0a\u4e00\u4e2a\u9ed8\u8ba4\u503c\u3002 \u2461 ${var:+string}\u7684\u66ff\u6362\u89c4\u5219\u548c\u4e0a\u9762\u7684\u76f8\u53cd\uff0c\u5373\u53ea\u6709\u5f53var\u4e0d\u662f\u7a7a\u7684\u65f6\u5019\u624d\u66ff\u6362\u6210string\uff0c \u82e5var\u4e3a\u7a7a\u65f6\u5219\u4e0d\u66ff\u6362\u6216\u8005\u8bf4\u662f\u66ff\u6362\u6210\u53d8\u91cf var\u7684\u503c\uff0c\u5373\u7a7a\u503c\u3002 \u2462${var:?string}\u66ff\u6362\u89c4\u5219\u4e3a\uff1a\u82e5\u53d8\u91cfvar\u4e0d\u4e3a\u7a7a\uff0c\u5219\u7528\u53d8\u91cfvar\u7684\u503c\u6765\u66ff\u6362${var:?string}\uff1b\u82e5\u53d8\u91cfvar\u4e3a\u7a7a\uff0c \u5219\u628astring\u8f93\u51fa\u5230\u6807\u51c6\u9519\u8bef\u4e2d\uff0c\u5e76\u4ece\u811a\u672c\u4e2d\u9000\u51fa\u3002\u6211\u4eec\u53ef\u5229\u7528\u6b64\u7279\u6027\u6765\u68c0\u67e5\u662f\u5426\u8bbe\u7f6e\u4e86\u53d8\u91cf\u7684\u503c\u3002 \u8865\u5145\u6269\u5c55\uff1a\u5728\u4e0a\u9762\u8fd9\u4e94\u79cd\u66ff\u6362\u7ed3\u6784\u4e2dstring\u4e0d\u4e00\u5b9a\u662f\u5e38\u503c\u7684\uff0c\u53ef\u7528\u53e6\u5916\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\u6216\u662f\u4e00\u79cd\u547d\u4ee4\u7684\u8f93\u51fa\u3002 \u56db\u79cd\u6a21\u5f0f\u5339\u914d\u66ff\u6362\u7ed3\u6784 \u6a21\u5f0f\u5339\u914d\u8bb0\u5fc6\u65b9\u6cd5: # \u662f\u53bb\u6389\u5de6\u8fb9(\u5728\u952e\u76d8\u4e0a#\u5728$\u4e4b\u5de6\u8fb9) % \u662f\u53bb\u6389\u53f3\u8fb9(\u5728\u952e\u76d8\u4e0a%\u5728$\u4e4b\u53f3\u8fb9) #\u548c%\u4e2d\u7684\u5355\u4e00\u7b26\u53f7\u662f\u6700\u5c0f\u5339\u914d\uff0c\u4e24\u4e2a\u76f8\u540c\u7b26\u53f7\u662f\u6700\u5927\u5339\u914d\u3002 ${var%pattern},${var%%pattern},${var#pattern},${var##pattern}: \u7b2c\u4e00\u79cd\u6a21\u5f0f\uff1a${variable%pattern}\uff0c\u8fd9\u79cd\u6a21\u5f0f\u65f6\uff0cshell\u5728variable\u4e2d\u67e5\u627e\uff0c\u770b\u5b83\u662f\u5426\u4ee5\u6240\u7ed9\u6a21\u5f0fpattern\u7ed3\u5c3e\uff0c \u5982\u679c\u662f\uff0c\u5c31\u4ece\u547d\u4ee4\u884c\u628avariable\u4e2d\u7684\u5185\u5bb9\u53bb\u6389\u53f3\u8fb9\u6700\u77ed\u7684\u5339\u914d\u6a21\u5f0f \u7b2c\u4e8c\u79cd\u6a21\u5f0f\uff1a ${variable%%pattern}\uff0c\u8fd9\u79cd\u6a21\u5f0f\u65f6\uff0cshell\u5728variable\u4e2d\u67e5\u627e\uff0c\u770b\u5b83\u662f\u5426\u4ee5\u6240\u7ed9\u6a21\u5f0fpattern\u7ed3\u5c3e\uff0c \u5982\u679c\u662f\uff0c\u5c31\u4ece\u547d\u4ee4\u884c\u628avariable\u4e2d\u7684\u5185\u5bb9\u53bb\u6389\u53f3\u8fb9\u6700\u957f\u7684\u5339\u914d\u6a21\u5f0f \u7b2c\u4e09\u79cd\u6a21\u5f0f\uff1a${variable#pattern} \u8fd9\u79cd\u6a21\u5f0f\u65f6\uff0cshell\u5728variable\u4e2d\u67e5\u627e\uff0c\u770b\u5b83\u662f\u5426\u4ee5\u6240\u7ed9\u6a21\u5f0fpattern\u5f00\u59cb\uff0c \u5982\u679c\u662f\uff0c\u5c31\u4ece\u547d\u4ee4\u884c\u628avariable\u4e2d\u7684\u5185\u5bb9\u53bb\u6389\u5de6\u8fb9\u6700\u77ed\u7684\u5339\u914d\u6a21\u5f0f \u7b2c\u56db\u79cd\u6a21\u5f0f\uff1a ${variable##pattern} \u8fd9\u79cd\u6a21\u5f0f\u65f6\uff0cshell\u5728variable\u4e2d\u67e5\u627e\uff0c\u770b\u5b83\u662f\u5426\u4ee5\u6240\u7ed9\u6a21\u5f0fpattern\u7ed3\u5c3e\uff0c \u5982\u679c\u662f\uff0c\u5c31\u4ece\u547d\u4ee4\u884c\u628avariable\u4e2d\u7684\u5185\u5bb9\u53bb\u6389\u53f3\u8fb9\u6700\u957f\u7684\u5339\u914d\u6a21\u5f0f \u8fd9\u56db\u79cd\u6a21\u5f0f\u4e2d\u90fd\u4e0d\u4f1a\u6539\u53d8variable\u7684\u503c\uff0c\u5176\u4e2d\uff0c\u53ea\u6709\u5728pattern\u4e2d\u4f7f\u7528\u4e86 \u5339\u914d\u7b26\u53f7\u65f6\uff0c %\u548c%%\uff0c#\u548c##\u624d\u6709\u533a\u522b\u3002\u7ed3\u6784\u4e2d\u7684pattern\u652f\u6301\u901a\u914d\u7b26\uff0c \u8868\u793a\u96f6\u4e2a\u6216\u591a\u4e2a\u4efb\u610f\u5b57\u7b26\uff0c?\u8868\u793a\u4ec5\u4e0e\u4e00\u4e2a\u4efb\u610f\u5b57\u7b26\u5339\u914d\uff0c [...]\u8868\u793a\u5339\u914d\u4e2d\u62ec\u53f7\u91cc\u9762\u7684\u5b57\u7b26\uff0c[!...]\u8868\u793a\u4e0d\u5339\u914d\u4e2d\u62ec\u53f7\u91cc\u9762\u7684\u5b57\u7b26\u3002 # var=testcase # echo $var testcase # echo ${var%s*e} testca # echo $var testcase # echo ${var%%s*e} te # echo ${var#?e} stcase # echo ${var##?e} stcase # echo ${var##*e} # echo ${var##*s} e # echo ${var##test} case linux\u547d\u4ee4 \u6587\u6863\u7f16\u8f91 wc \u8ba1\u7b97\u6587\u4ef6\u7684Byte\u6570\u3001\u5b57\u6570\u3001\u6216\u662f\u5217\u6570\uff0c\u82e5\u4e0d\u6307\u5b9a\u6587\u4ef6\u540d\u79f0\u3001\u6216\u662f\u6240\u7ed9\u4e88\u7684\u6587\u4ef6\u540d\u4e3a\"-\"\uff0c\u5219wc\u6307\u4ee4\u4f1a\u4ece\u6807\u51c6\u8f93\u5165\u8bbe\u5907\u8bfb\u53d6\u6570\u636e\u3002 -c\u6216--bytes\u6216--chars \u53ea\u663e\u793aBytes\u6570; -l\u6216--lines \u663e\u793a\u884c\u6570; -w\u6216--words \u53ea\u663e\u793a\u5b57\u6570\u3002 head \u67e5\u770b\u6587\u4ef6\u7684\u5f00\u5934\u90e8\u5206\u7684\u5185\u5bb9 -c, --bytes=[-]NUM print the first NUM bytes of each file; with the leading '-', print all but the last NUM bytes of each file -n, --lines=[-]NUM print the first NUM lines instead of the first 10; (\u9ed8\u8ba4\u6253\u5370\u524d10\u884c) with the leading '-', print all but the last NUM lines of each file(\u5373\u9664\u4e86\u6700\u540e\u7684NUM\u884c\u90fd\u4f1a\u88ab\u6253\u5370\u51fa\u6765) -q, --quiet, --silent never print headers giving file names -v, --verbose always print headers giving file names -z, --zero-terminated line delimiter is NUL, not newline --help display this help and exit --version output version information and exit tail \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 -c, --bytes=[+]NUM output the last NUM bytes; or use -c +NUM to output starting with byte NUM of each file -f, --follow[={name|descriptor}] output appended data as the file grows; an absent option argument means 'descriptor' -F same as --follow=name --retry -n, --lines=[+]NUM output the last NUM lines, instead of the last 10; or use -n +NUM to output starting with line NUM --max-unchanged-stats=N with --follow=name, reopen a FILE which has not changed size after N (default 5) iterations to see if it has been unlinked or renamed (this is the usual case of rotated log files); with inotify, this option is rarely useful --pid=PID with -f, terminate after process ID, PID dies -q, --quiet, --silent never output headers giving file names --retry keep trying to open a file if it is inaccessible -s, --sleep-interval=N with -f, sleep for approximately N seconds (default 1.0) between iterations; with inotify and --pid=P, check process P at least once every N seconds -v, --verbose always output headers giving file names -z, --zero-terminated line delimiter is NUL, not newline sed \u8f7b\u91cf\u7ea7\u6d41\u7f16\u8f91\u5668\uff0c\u4e3b\u8981\u7528\u6765\u5c06\u6570\u636e\u8fdb\u884c\u9009\u53d6\u3001\u66ff\u6362\u3001\u5220\u9664\u3001\u65b0\u5897\u7684\u547d\u4ee4 \u7528\u6cd5: sed [\u9009\u9879] '[\u52a8\u4f5c]' \u6587\u4ef6\u540d \u9009\u9879: -n\uff1a\u4e00\u822c sed \u547d\u4ee4\u4f1a\u628a\u6240\u6709\u6570\u636e\u90fd\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\u3002\u5982\u679c\u52a0\u5165\u6b64\u9009\u9879\uff0c\u5219\u53ea\u4f1a\u628a\u7ecf\u8fc7 sed \u547d\u4ee4\u5904\u7406\u7684\u884c\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\uff1b \u53ea\u7528\u4e8e\u67e5\u770b sed \u547d\u4ee4\u64cd\u4f5c\u7684\u6570\u636e\uff0c\u800c\u5e76\u975e\u67e5\u770b\u6240\u6709\u7684\u6570\u636e\u3002 -e: \u5141\u8bb8\u5bf9\u8f93\u5165\u6570\u636e\u5e94\u7528\u591a\u6761 sed \u547d\u4ee4\u7f16\u8f91\uff1b -f \u811a\u672c\u6587\u4ef6\u540d\uff1a\u4ece sed \u811a\u672c\u4e2d\u8bfb\u5165 sed \u64cd\u4f5c\u3002\u548c awk \u547d\u4ee4\u7684 -f \u9009\u9879\u975e\u5e38\u7c7b\u4f3c\uff1b -r\uff1a\u5728 sed \u4e2d\u652f\u6301\u6269\u5c55\u6b63\u5219\u8868\u8fbe\u5f0f\uff1b -i\uff1a\u7528 sed \u7684\u4fee\u6539\u7ed3\u679c\u76f4\u63a5\u4fee\u6539\u8bfb\u53d6\u6570\u636e\u7684\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u7531\u5c4f\u5e55\u8f93\u51fa\u52a8\u4f5c\uff1b \u52a8\u4f5c: a\\ \uff1a\u8ffd\u52a0\uff0c\u5728\u5f53\u524d\u884c\u540e\u6dfb\u52a0\u4e00\u884c\u6216\u591a\u884c\u3002\u5f53\u6dfb\u52a0\u591a\u884c\u65f6\uff0c\u9664\u6700\u540e\u4e00\u884c\u5916\uff0c\u6bcf\u884c\u672b\u5c3e\u9700\u8981\u7528\u201c\\\u201d\u4ee3\u8868\u6570\u636e\u672a\u5b8c\u7ed3\uff1b c\\ \uff1a\u6574\u884c\u66ff\u6362\uff0c\u7528c\u540e\u9762\u7684\u5b57\u7b26\u4e32\u66ff\u6362\u539f\u6570\u636e\u884c\u3002\u5f53\u66ff\u6362\u591a\u884c\u65f6\uff0c\u9664\u6700\u540e\u4e00\u884c\u5916\uff0c\u6bcf\u884c\u672b\u5c3e\u9700\u7528\u201c\\\u201d\u4ee3\u8868\u6570\u636e\u672a\u5b8c\u7ed3\uff1b i\\ \uff1a\u63d2\u5165\uff0c\u5728\u5f53\u524d\u884c\u524d\u63d2\u5165\u4e00\u884c\u6216\u591a\u884c\u3002\u5f53\u63d2\u5165\u591a\u884c\u65f6\uff0c\u9664\u6700\u540e\u4e00\u884c\u5916\uff0c\u6bcf\u884c\u672b\u5c3e\u9700\u8981\u7528\u201c\\\u201d\u4ee3\u8868\u6570\u636e\u672a\u5b8c\u7ed3\uff1b d\uff1a\u5220\u9664\uff0c\u5220\u9664\u6307\u5b9a\u7684\u884c\uff1b P\uff1a\u6253\u5370\uff0c\u8f93\u51fa\u6307\u5b9a\u7684\u884c\uff1b s\uff1a\u5b57\u7b26\u4e32\u66ff\u6362\uff0c\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u66ff\u6362\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u683c\u5f0f\u4e3a\u201c\u884c\u8303\u56f4s/\u65e7\u5b57\u4e32/\u65b0\u5b57\u4e32/g\u201d g \u662f\u5168\u5c40\u66ff\u6362\u6807\u5fd7\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0csed \u547d\u4ee4\u66ff\u6362\u6bcf\u4e00\u884c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u6a21\u5f0f\uff0c\u5b83\u4e0d\u4f1a\u66ff\u6362\u884c\u4e2d\u7684\u5176\u4ed6\u7684\u5339\u914d\u7ed3\u679c\u3002 \u4f46\u662f\uff0c\u63d0\u4f9b\u4e86\u8be5\u66ff\u6362\u6807\u5fd7\u65f6\uff0c\u6240\u6709\u5339\u914d\u90fd\u5c06\u88ab\u66ff\u6362 \u7528\u7279\u5b9a\u6570\u5b57n\u66ff\u6362g\u8868\u793a\u66ff\u6362\u6bcf\u4e00\u884c\u4e2d\u7b2cn\u6b21\u51fa\u73b0\u7684\u6a21\u5f0f\uff0c\u5982/1\uff0c/2 /2g\uff0c\u5219\u8868\u793a\u66ff\u6362\u6bcf\u4e00\u884c\u4ece\u7b2c2\u4e2a\u5f00\u59cb\u7684\u6240\u6709\u6a21\u5f0f //\u67e5\u770b\u7b2c num \u884c\u5185\u5bb9 sed -n 'numP' filename // \u5728\u52a8\u4f5c\u4e2d\u53ef\u4ee5\u4f7f\u7528\u6570\u5b57\u4ee3\u8868\u884c\u53f7\uff0c\u9017\u53f7\u4ee3\u8868\u8fde\u7eed\u7684\u884c\u8303\u56f4\u3002\u8fd8\u53ef\u4ee5\u4f7f\u7528\"$\"\u4ee3\u8868\u6700\u540e\u4e00\u884c // \u4f8b\u5982\"2,$d\"\uff0c\u5219\u4ee3\u8868\u4ece\u7b2c\u4e8c\u884c\u5220\u9664\u5230\u6700\u540e\u4e00\u884c\u3002 sed '2,4d' filename sed '2,$d' filename // \u6253\u5370\u7b2c2\u5230\u7b2c4\u884c sed -n '2,4P' filename // -e\"\u9009\u9879\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u591a\u4e2a sed \u52a8\u4f5c\uff0c\u591a\u4e2a\u52a8\u4f5c\u4e4b\u95f4\u8981\u7528\";\"\u6216\u56de\u8f66\u5206\u9694\uff0c sed -e '1s/bin/wh/g;2chello world' test.sh // /../\u4e2d\u95f4\u90e8\u5206\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u6765\u5339\u914d\u6ee1\u8db3\u6761\u4ef6\u7684\u884c\u6216\u5b57\u7b26\u4e32 sed '/^\\s*$/d' file //\u5220\u9664\u6240\u6709\u7a7a\u683c\u884c\uff0c\\s\u4ee3\u8868\u7a7a\u683c grep Usage: grep [OPTION]... PATTERN [FILE]... Search for PATTERN in each FILE or standard input. PATTERN is, by default, a basic regular expression (BRE). Example: grep -i 'hello world' menu.h main.c Regexp selection and interpretation: -E, --extended-regexp PATTERN is an extended regular expression (ERE) -F, --fixed-strings PATTERN is a set of newline-separated strings -G, --basic-regexp PATTERN is a basic regular expression (BRE) -P, --perl-regexp PATTERN is a Perl regular expression -e, --regexp=PATTERN use PATTERN for matching -f, --file=FILE obtain PATTERN from FILE -i, --ignore-case ignore case distinctions -w, --word-regexp force PATTERN to match only whole words -x, --line-regexp force PATTERN to match only whole lines -z, --null-data a data line ends in 0 byte, not newline Miscellaneous: -s, --no-messages suppress error messages -v, --invert-match select non-matching lines -V, --version display version information and exit --help display this help text and exit Output control: -m, --max-count=NUM stop after NUM matches -b, --byte-offset print the byte offset with output lines -n, --line-number print line number with output lines --line-buffered flush output on every line -H, --with-filename print the file name for each match -h, --no-filename suppress the file name prefix on output --label=LABEL use LABEL as the standard input file name prefix -o, --only-matching show only the part of a line matching PATTERN, \u53ea\u663e\u793a\u5339\u914d\u7684\u5173\u952e\u5b57 -q, --quiet, --silent suppress all normal output --binary-files=TYPE assume that binary files are TYPE; TYPE is 'binary', 'text', or 'without-match' -a, --text equivalent to --binary-files=text -I equivalent to --binary-files=without-match -d, --directories=ACTION how to handle directories; ACTION is 'read', 'recurse', or 'skip' -D, --devices=ACTION how to handle devices, FIFOs and sockets; ACTION is 'read' or 'skip' -r, --recursive like --directories=recurse -R, --dereference-recursive likewise, but follow all symlinks --include=FILE_PATTERN search only files that match FILE_PATTERN --exclude=FILE_PATTERN skip files and directories matching FILE_PATTERN --exclude-from=FILE skip files matching any file pattern from FILE --exclude-dir=PATTERN directories that match PATTERN will be skipped. -L, --files-without-match print only names of FILEs containing no match -l, --files-with-matches print only names of FILEs containing matches -c, --count print only a count of matching lines per FILE\uff0c \u7b26\u5408\u5339\u914d\u7684\u884c\u6570 -T, --initial-tab make tabs line up (if needed) -Z, --null print 0 byte after FILE name Context control: -B, --before-context=NUM print NUM lines of leading context -A, --after-context=NUM print NUM lines of trailing context -C, --context=NUM print NUM lines of output context, \u663e\u793a\u5173\u952e\u5b57\u524d\u540eNUM\u884c -NUM same as --context=NUM --color[=WHEN], --colour[=WHEN] use markers to highlight the matching strings; WHEN is 'always', 'never', or 'auto' -U, --binary do not strip CR characters at EOL (MSDOS/Windows) -u, --unix-byte-offsets report offsets as if CRs were not there (MSDOS/Windows) When FILE is -, read standard input. With no FILE, read . if a command-line -r is given, - otherwise. awk \u7528\u6cd5: awk [\u9009\u9879\u53c2\u6570] '{\u8bed\u53e5}' filename \u901a\u5e38\uff0cawk\u662f\u4ee5\u6587\u4ef6\u7684\u4e00\u884c\u4e3a\u5904\u7406\u5355\u4f4d\u7684\u3002awk\u6bcf\u63a5\u6536\u6587\u4ef6\u7684\u4e00\u884c\uff0c\u7136\u540e\u6267\u884c\u76f8\u5e94\u7684\u547d\u4ee4\uff0c\u6765\u5904\u7406\u6587\u672c\u3002 \u2003 awk '{ print $0 }' filename #\u6253\u5370\u6bcf\u4e00\u884c awk -F \":\" '{ print $1 \" \" $2 }' # \u4ee5:\u5206\u5272\u6bcf\u4e00\u884c\uff0c\u6253\u5370\u7b2c1\u4e2a\u5b57\u6bb5\u3001\u7a7a\u683c\u3001\u7b2c\u4e8c\u4e2a\u5b57\u6bb5 awk '{ if(NR>=20 && NR<=40>) print $0}' filename # \u6253\u5370\u7b2c20\u884c\u5230\u7b2c23\u884c \u2003 awk \u5728\u5f00\u59cb\u5904\u7406\u8f93\u5165\u6587\u4ef6\u4e4b\u524d\u4f1a\u6267\u884c BEGIN \u5757; \u5728\u5904\u7406\u4e86\u8f93\u5165\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u884c\u4e4b\u540e\u4f1a\u6267\u884cEND\u5757 awk 'BEGIN{sum=0;} {sum+=$6;} END{print sum}' # \u9ed8\u8ba4\u4ee5\u7a7a\u683c\u4f5c\u4e3a\u5206\u5272\u7b26\uff0c$6\u5373\u7b2c\u516d\u5217\u5bf9\u5e94\u7684\u503c \u2003 \u5e38\u7528\u7684\u5185\u5efa\u53d8\u91cf: $n \u5f53\u524d\u8bb0\u5f55\u7684\u7b2cn\u4e2a\u5b57\u6bb5\uff0c\u5b57\u6bb5\u95f4\u7531FS\u5206\u9694 $0 \u5b8c\u6574\u7684\u8f93\u5165\u8bb0\u5f55 ARGC \u547d\u4ee4\u884c\u53c2\u6570\u7684\u6570\u76ee FNR \u5404\u6587\u4ef6\u5206\u522b\u8ba1\u6570\u7684\u884c\u53f7 FS \u5b57\u6bb5\u5206\u9694\u7b26(\u9ed8\u8ba4\u662f\u4efb\u4f55\u7a7a\u683c) IGNORECASE \u5982\u679c\u4e3a\u771f\uff0c\u5219\u8fdb\u884c\u5ffd\u7565\u5927\u5c0f\u5199\u7684\u5339\u914d NF \u4e00\u6761\u8bb0\u5f55\u7684\u5b57\u6bb5\u7684\u6570\u76ee NR \u5df2\u7ecf\u8bfb\u51fa\u7684\u8bb0\u5f55\u6570\uff0c\u5c31\u662f\u884c\u53f7\uff0c\u4ece1\u5f00\u59cb sort \u9488\u5bf9\u6587\u672c\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u4ee5\u884c\u4e3a\u5355\u4f4d\u6765\u6392\u5e8f Usage: sort [OPTION]... [FILE]... or: sort [OPTION]... --files0-from=F Write sorted concatenation of all FILE(s) to standard output. With no FILE, or when FILE is -, read standard input. Ordering options: -b, --ignore-leading-blanks ignore leading blanks -d, --dictionary-order consider only blanks and alphanumeric characters -f, --ignore-case fold lower case to upper case characters -g, --general-numeric-sort compare according to general numerical value -i, --ignore-nonprinting consider only printable characters -M, --month-sort compare (unknown) < 'JAN' < ... < 'DEC' -h, --human-numeric-sort compare human readable numbers (e.g., 2K 1G) -n, --numeric-sort compare according to string numerical value -R, --random-sort shuffle, but group identical keys. See shuf(1) --random-source=FILE get random bytes from FILE -r, --reverse reverse the result of comparisons --sort=WORD sort according to WORD: general-numeric -g, human-numeric -h, month -M, numeric -n, random -R, version -V -V, --version-sort natural sort of (version) numbers within text Other options: --batch-size=NMERGE merge at most NMERGE inputs at once; for more use temp files -c, --check, --check=diagnose-first check for sorted input; do not sort -C, --check=quiet, --check=silent like -c, but do not report first bad line --compress-program=PROG compress temporaries with PROG; decompress them with PROG -d --debug annotate the part of the line used to sort, and warn about questionable usage to stderr --files0-from=F read input from the files specified by NUL-terminated names in file F; If F is - then read names from standard input -k, --key=KEYDEF sort via a key; KEYDEF gives location and type -m, --merge merge already sorted files; do not sort -o, --output=FILE write result to FILE instead of standard output -s, --stable stabilize sort by disabling last-resort comparison -S, --buffer-size=SIZE use SIZE for main memory buffer -t, --field-separator=SEP use SEP instead of non-blank to blank transition -T, --temporary-directory=DIR use DIR for temporaries, not $TMPDIR or /tmp; multiple options specify multiple directories --parallel=N change the number of sorts run concurrently to N -u, --unique with -c, check for strict ordering; without -c, output only the first of an equal run -z, --zero-terminated line delimiter is NUL, not newline --help display this help and exit --version output version information and exit uniq \u7528\u4e8e\u68c0\u67e5\u53ca\u5220\u9664\u6587\u672c\u6587\u4ef6\u4e2d\u91cd\u590d\u51fa\u73b0\u7684\u884c\u5217 Usage: uniq [OPTION]... [INPUT [OUTPUT]] Filter adjacent matching lines from INPUT (or standard input), writing to OUTPUT (or standard output). With no options, matching lines are merged to the first occurrence. Mandatory arguments to long options are mandatory for short options too. -c, --count prefix lines by the number of occurrences -d, --repeated only print duplicate lines, one for each group -D print all duplicate lines --all-repeated[=METHOD] like -D, but allow separating groups with an empty line; METHOD={none(default),prepend,separate} -f, --skip-fields=N avoid comparing the first N fields --group[=METHOD] show all items, separating groups with an empty line; METHOD={separate(default),prepend,append,both} -i, --ignore-case ignore differences in case when comparing -s, --skip-chars=N avoid comparing the first N characters -u, --unique only print unique lines -z, --zero-terminated line delimiter is NUL, not newline -w, --check-chars=N compare no more than N characters in lines --help display this help and exit --version output version information and exit A field is a run of blanks (usually spaces and/or TABs), then non-blank characters. Fields are skipped before chars. Note: 'uniq' does not detect repeated lines unless they are adjacent. You may want to sort the input first, or use 'sort -u' without 'uniq'. Also, comparisons honor the rules specified by 'LC_COLLATE'. tr \u7528\u4e8e\u8f6c\u6362\u6216\u5220\u9664\u6587\u4ef6\u4e2d\u7684\u5b57\u7b26\u3002 Usage: tr [OPTION]... SET1 [SET2] Translate, squeeze, and/or delete characters from standard input, writing to standard output. -c, -C, --complement use the complement of SET1, \u7b26\u5408 SET1 \u7684\u90e8\u4efd\u4e0d\u505a\u5904\u7406\uff0c \u4e0d\u7b26\u5408\u7684\u5269\u4f59\u90e8\u4efd\u624d\u8fdb\u884c\u8f6c\u6362 -d, --delete delete characters in SET1, do not translate -s, --squeeze-repeats replace each sequence of a repeated character that is listed in the last specified SET, with a single occurrence of that character \u5373\u7f29\u51cf\u8fde\u7eed\u91cd\u590d\u7684\u5b57\u7b26\u6210\u6307\u5b9a\u7684\u5355\u4e2a\u5b57\u7b26 -t, --truncate-set1 first truncate SET1 to length of SET2 --help display this help and exit --version output version information and exit SETs are specified as strings of characters. Most represent themselves. Interpreted sequences are: \\NNN \u516b\u8fdb\u5236\u503c\u7684\u5b57\u7b26 NNN (1 to 3 \u4e3a\u516b\u8fdb\u5236\u503c\u7684\u5b57\u7b26) \\\\ \u53cd\u659c\u6760 \\a Ctrl-G \u94c3\u58f0 \\b Ctrl-H \u9000\u683c\u7b26 \\f Ctrl-L \u8d70\u884c\u6362\u9875 \\n Ctrl-J \u65b0\u884c \\r Ctrl-M \u56de\u8f66 \\t Ctrl-I tab\u952e \\v Ctrl-X \u6c34\u5e73\u5236\u8868\u7b26 CHAR1-CHAR2 \uff1a\u5b57\u7b26\u8303\u56f4\u4ece CHAR1 \u5230 CHAR2 \u7684\u6307\u5b9a\uff0c\u8303\u56f4\u7684\u6307\u5b9a\u4ee5 ASCII \u7801\u7684\u6b21\u5e8f\u4e3a\u57fa\u7840\uff0c \u53ea\u80fd\u7531\u5c0f\u5230\u5927\uff0c\u4e0d\u80fd\u7531\u5927\u5230\u5c0f\u3002 [CHAR*] \uff1a\u8fd9\u662f SET2 \u4e13\u7528\u7684\u8bbe\u5b9a\uff0c\u529f\u80fd\u662f\u91cd\u590d\u6307\u5b9a\u7684\u5b57\u7b26\u5230\u4e0e SET1 \u76f8\u540c\u957f\u5ea6\u4e3a\u6b62 [CHAR*REPEAT] \uff1a\u8fd9\u4e5f\u662f SET2 \u4e13\u7528\u7684\u8bbe\u5b9a\uff0c \u529f\u80fd\u662f\u91cd\u590d\u6307\u5b9a\u7684\u5b57\u7b26\u5230\u8bbe\u5b9a\u7684 REPEAT \u6b21\u6570\u4e3a\u6b62(REPEAT \u7684\u6570\u5b57\u91c7 8 \u8fdb\u4f4d\u5236\u8ba1\u7b97\uff0c\u4ee5 0 \u4e3a\u5f00\u59cb) [:alnum:] \uff1a\u6240\u6709\u5b57\u6bcd\u5b57\u7b26\u4e0e\u6570\u5b57 [:alpha:] \uff1a\u6240\u6709\u5b57\u6bcd\u5b57\u7b26 [:blank:] \uff1a\u6240\u6709\u6c34\u5e73\u7a7a\u683c [:cntrl:] \uff1a\u6240\u6709\u63a7\u5236\u5b57\u7b26 [:digit:] \uff1a\u6240\u6709\u6570\u5b57 [:graph:] \uff1a\u6240\u6709\u53ef\u6253\u5370\u7684\u5b57\u7b26(\u4e0d\u5305\u542b\u7a7a\u683c\u7b26) [:lower:] \uff1a\u6240\u6709\u5c0f\u5199\u5b57\u6bcd [:print:] \uff1a\u6240\u6709\u53ef\u6253\u5370\u7684\u5b57\u7b26(\u5305\u542b\u7a7a\u683c\u7b26) [:punct:] \uff1a\u6240\u6709\u6807\u70b9\u5b57\u7b26 [:space:] \uff1a\u6240\u6709\u6c34\u5e73\u4e0e\u5782\u76f4\u7a7a\u683c\u7b26 [:upper:] \uff1a\u6240\u6709\u5927\u5199\u5b57\u6bcd [:xdigit:] \uff1a\u6240\u6709 16 \u8fdb\u4f4d\u5236\u7684\u6570\u5b57 [=CHAR=] \uff1a\u6240\u6709\u7b26\u5408\u6307\u5b9a\u7684\u5b57\u7b26(\u7b49\u53f7\u91cc\u7684 CHAR\uff0c\u4ee3\u8868\u4f60\u53ef\u81ea\u8ba2\u7684\u5b57\u7b26) Translation occurs if -d is not given and both SET1 and SET2 appear. -t may be used only when translating. SET2 is extended to length of SET1 by repeating its last character as necessary. Excess characters of SET2 are ignored. Only [:lower:] and [:upper:] are guaranteed to expand in ascending order; used in SET2 while translating, they may only be used in pairs to specify case conversion. -s uses the last specified SET, and occurs after translation or deletion. find \u6765\u5728\u6307\u5b9a\u76ee\u5f55\u4e0b\u67e5\u627e\u6587\u4ef6\u3002\u4efb\u4f55\u4f4d\u4e8e\u53c2\u6570\u4e4b\u524d\u7684\u5b57\u7b26\u4e32\u90fd\u5c06\u88ab\u89c6\u4e3a\u6b32\u67e5\u627e\u7684\u76ee\u5f55\u540d\u3002\u5982\u679c\u4f7f\u7528\u8be5\u547d\u4ee4\u65f6\uff0c\u4e0d\u8bbe\u7f6e\u4efb\u4f55\u53c2\u6570\uff0c\u5219 find \u547d\u4ee4\u5c06\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627e\u5b50\u76ee\u5f55\u4e0e\u6587\u4ef6\u3002\u5e76\u4e14\u5c06\u67e5\u627e\u5230\u7684\u5b50\u76ee\u5f55\u548c\u6587\u4ef6\u5168\u90e8\u8fdb\u884c\u663e\u793a\u3002 find path -option [ -print ] [ -exec -ok command ] {} \\; find \u6839\u636e\u4e0b\u5217\u89c4\u5219\u5224\u65ad path \u548c expression\uff0c\u5728\u547d\u4ee4\u5217\u4e0a\u7b2c\u4e00\u4e2a - ( ) , ! \u4e4b\u524d\u7684\u90e8\u4efd\u4e3a path\uff0c \u4e4b\u540e\u7684\u662f expression\u3002\u5982\u679c path \u662f\u7a7a\u5b57\u4e32\u5219\u4f7f\u7528\u76ee\u524d\u8def\u5f84\uff0c\u5982\u679c expression \u662f\u7a7a\u5b57\u4e32\uff0c \u5219\u4f7f\u7528 -print \u4e3a\u9884\u8bbe expression\u3002 \u5e38\u7528\u7684expression\u5305\u62ec: -mount, -xdev : \u53ea\u68c0\u67e5\u548c\u6307\u5b9a\u76ee\u5f55\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u4e0b\u7684\u6587\u4ef6\uff0c\u907f\u514d\u5217\u51fa\u5176\u5b83\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6 -amin n : \u5728\u8fc7\u53bb n \u5206\u949f\u5185\u88ab\u8bfb\u53d6\u8fc7 -anewer file : \u6bd4\u6587\u4ef6 file \u66f4\u665a\u88ab\u8bfb\u53d6\u8fc7\u7684\u6587\u4ef6 -atime n : \u5728\u8fc7\u53bbn\u5929\u5185\u88ab\u8bfb\u53d6\u8fc7\u7684\u6587\u4ef6 -cmin n : \u5728\u8fc7\u53bb n \u5206\u949f\u5185\u88ab\u4fee\u6539\u8fc7 -cnewer file :\u6bd4\u6587\u4ef6 file \u66f4\u65b0\u7684\u6587\u4ef6 -ctime n : \u5728\u8fc7\u53bbn\u5929\u5185\u88ab\u4fee\u6539\u8fc7\u7684\u6587\u4ef6 -empty : \u7a7a\u7684\u6587\u4ef6-gid n or -group name : gid \u662f n \u6216\u662f group \u540d\u79f0\u662f name -ipath p, -path p : \u8def\u5f84\u540d\u79f0\u7b26\u5408 p \u7684\u6587\u4ef6\uff0cipath \u4f1a\u5ffd\u7565\u5927\u5c0f\u5199 -name name, -iname name : \u6587\u4ef6\u540d\u79f0\u7b26\u5408 name \u7684\u6587\u4ef6\u3002iname \u4f1a\u5ffd\u7565\u5927\u5c0f\u5199 -size n : \u6587\u4ef6\u5927\u5c0f \u662f n \u5355\u4f4d\uff0cb \u4ee3\u8868 512 \u4f4d\u5143\u7ec4\u7684\u533a\u5757\uff0cc \u8868\u793a\u5b57\u5143\u6570\uff0ck \u8868\u793a kilo bytes\uff0cw \u662f\u4e8c\u4e2a\u4f4d\u5143\u7ec4\u3002 -type c : \u6587\u4ef6\u7c7b\u578b\u662f c \u7684\u6587\u4ef6\u3002 d: \u76ee\u5f55 c: \u5b57\u578b\u88c5\u7f6e\u6587\u4ef6 b: \u533a\u5757\u88c5\u7f6e\u6587\u4ef6 p: \u5177\u540d\u8d2e\u5217 f: \u4e00\u822c\u6587\u4ef6 l: \u7b26\u53f7\u8fde\u7ed3 s: socket -pid n : process id \u662f n \u7684\u6587\u4ef6","title":"Shell Script"},{"location":"shell/base/#shell-script","text":"linux\u4e0b\u5e38\u7528\u7684Shell\u79cd\u7c7b\u6709Bourne Shell\uff08/usr/bin/sh\u6216/bin/sh\uff09\u548c Bourne Again Shell\uff08/bin/bash\uff09\uff0c Shell\u811a\u672c\u4e2d\u7684\u7b2c\u4e00\u884c\"#!/bin/bash\"\u544a\u8bc9\u7cfb\u7edf\u91c7\u7528\u54ea\u4e00\u4e2a\u89e3\u91ca\u5668\u6765\u6267\u884c\uff0c\u5373\u662f\u4f7f\u7528\u54ea\u4e00\u4e2aShell\u3002","title":"Shell Script"},{"location":"shell/base/#shell","text":"Shell \u53d8\u91cf 1\u3001\u5b9a\u4e49\u53d8\u91cf\u65f6\uff0c\u53d8\u91cf\u540d\u4e0d\u52a0\u7f8e\u5143\u7b26\u53f7\uff08$\uff09: variable=\"value\", \u53d8\u91cf\u540d\u548c\u7b49\u53f7\u4e4b\u95f4\u4e0d\u80fd\u6709\u7a7a\u683c \u547d\u540d\u53ea\u80fd\u4f7f\u7528\u82f1\u6587\u5b57\u6bcd\uff0c\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\uff0c\u9996\u4e2a\u5b57\u7b26\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934\u3002 \u4e2d\u95f4\u4e0d\u80fd\u6709\u7a7a\u683c\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e0b\u5212\u7ebf\uff08_\uff09\u3002 \u4e0d\u80fd\u4f7f\u7528\u6807\u70b9\u7b26\u53f7\u3002 \u4e0d\u80fd\u4f7f\u7528bash\u91cc\u7684\u5173\u952e\u5b57 2\u3001\u4f7f\u7528\u53d8\u91cf\uff0c\u4f8b\u5982: echo $variable\u6216\u8005echo ${variable}\uff0c \u5728\u7ec8\u7aef\u6253\u5370\u51favalue. readonly variable \u5c06\u53d8\u91cf\u8bbe\u5b9a\u4e3a\u53ea\u8bfb\uff0c\u4e0d\u80fd\u88ab\u4fee\u6539 unser variable \u5220\u9664\u53d8\u91cf\uff0c\u5220\u9664\u540e\u5c06\u4e0d\u80fd\u518d\u4f7f\u7528 3\u3001\u53d8\u91cf\u7c7b\u578b \u8fd0\u884cshell\u65f6\uff0c\u4f1a\u540c\u65f6\u5b58\u5728\u4e09\u79cd\u53d8\u91cf\uff1a 1) \u5c40\u90e8\u53d8\u91cf \u5c40\u90e8\u53d8\u91cf\u5728\u811a\u672c\u6216\u547d\u4ee4\u4e2d\u5b9a\u4e49\uff0c\u4ec5\u5728\u5f53\u524dshell\u5b9e\u4f8b\u4e2d\u6709\u6548\uff0c\u5176\u4ed6shell\u542f\u52a8\u7684\u7a0b\u5e8f\u4e0d\u80fd\u8bbf\u95ee\u5c40\u90e8\u53d8\u91cf\u3002 2) \u73af\u5883\u53d8\u91cf \u6240\u6709\u7684\u7a0b\u5e8f\uff0c\u5305\u62ecshell\u542f\u52a8\u7684\u7a0b\u5e8f\uff0c\u90fd\u80fd\u8bbf\u95ee\u73af\u5883\u53d8\u91cf\uff0c\u6709\u4e9b\u7a0b\u5e8f\u9700\u8981\u73af\u5883\u53d8\u91cf\u6765\u4fdd\u8bc1\u5176\u6b63\u5e38\u8fd0\u884c\u3002 \u5fc5\u8981\u7684\u65f6\u5019shell\u811a\u672c\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u73af\u5883\u53d8\u91cf\u3002 3) shell\u53d8\u91cf shell\u53d8\u91cf\u662f\u7531shell\u7a0b\u5e8f\u8bbe\u7f6e\u7684\u7279\u6b8a\u53d8\u91cf\u3002shell\u53d8\u91cf\u4e2d\u6709\u4e00\u90e8\u5206\u662f\u73af\u5883\u53d8\u91cf\uff0c\u6709\u4e00\u90e8\u5206\u662f\u5c40\u90e8\u53d8\u91cf\uff0c \u8fd9\u4e9b\u53d8\u91cf\u4fdd\u8bc1\u4e86shell\u7684\u6b63\u5e38\u8fd0\u884c Shell \u5b57\u7b26\u4e32 \u2003\u5b57\u7b26\u4e32\u53ef\u4ee5\u7528\u5355\u5f15\u53f7\uff0c\u4e5f\u53ef\u4ee5\u7528\u53cc\u5f15\u53f7\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u7528\u5f15\u53f7\u3002 str=\"test\" echo string $str # \u8f93\u51fa string test echo \"string $str\" # \u8f93\u51fa string test echo \"string \"$str\"\" # \u8f93\u51fa string test echo \"string '$str'\" # \u8f93\u51fa string 'test' echo \"string \\\"$str\\\"\" # \u8f93\u51fa string \"test\" echo 'string $str' # \u8f93\u51fa string $str echo 'string '$str'' # \u8f93\u51fa string test echo 'string \"$str\"' # \u8f93\u51fa string \"$str\" str2=\"wh\" echo $str $str2 #\u62fc\u63a5\u5b57\u7b26\u4e32\uff0c\u8f93\u51fa test wh echo ${#str} ${#str2} #\u83b7\u53d6\u5b57\u7b26\u4e32\u957f\u5ea6\uff0c\u8f93\u51fa 4 2 echo ${str:1c:3} #\u4ece\u5b57\u7b26\u4e32\u7b2c1\u4e2a\u5b57\u7b26(\u5b57\u7b26\u4e0b\u6807\u57fa0)\u5f00\u59cb\uff0c\u622a\u53d63\u4e2a\u5b57\u7b26\uff0c\u8f93\u51fa est echo `expr index \"$str\" es` # \u67e5\u627e\u5b57\u7b26e\u6216s\u7684\u4f4d\u7f6e\uff0c\u54ea\u4e2a\u5728\u524d\uff0c\u8f93\u51fa\u54ea\u4e2a\u7684\u4f4d\u7f6e(\u4ece1\u5f00\u59cb)\uff0c\u8fd9\u91cc\u8f93\u51fa2 \uff0c\u6ca1\u6709\u8be5\u5b57\u7b26\u5219\u8f93\u51fa 0 Shell \u6570\u7ec4 1\u3001bash\u652f\u6301\u4e00\u7ef4\u6570\u7ec4\uff08\u4e0d\u652f\u6301\u591a\u7ef4\u6570\u7ec4\uff09\uff0c\u5e76\u4e14\u6ca1\u6709\u9650\u5b9a\u6570\u7ec4\u7684\u5927\u5c0f\u3002 \u7c7b\u4f3c\u4e8e C \u8bed\u8a00\uff0c\u6570\u7ec4\u5143\u7d20\u7684\u4e0b\u6807\u7531 0 \u5f00\u59cb\u7f16\u53f7\u3002\u83b7\u53d6\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u8981\u5229\u7528\u4e0b\u6807\uff0c\u4e0b\u6807\u53ef\u4ee5\u662f\u6574\u6570\u6216\u7b97\u672f\u8868\u8fbe\u5f0f\uff0c \u5176\u503c\u5e94\u5927\u4e8e\u6216\u7b49\u4e8e 0\u3002 2\u3001\u5b9a\u4e49\u6570\u7ec4 array_name=(value0 value1 value2 value3)\uff1b \u53ef\u4ee5\u5355\u72ec\u5b9a\u4e49\u6570\u7ec4\u7684\u5404\u4e2a\u5206\u91cf\uff0c\u4e14\u53ef\u4ee5\u4e0d\u4f7f\u7528\u8fde\u7eed\u7684\u4e0b\u6807\uff0c \u800c\u4e14\u4e0b\u6807\u7684\u8303\u56f4\u6ca1\u6709\u9650\u5236: array_name[0]=value0 array_name[1]=value1 array_name[5]=value5 3\u3001valuen=${array_name[n]} # \u83b7\u53d6\u6570\u7ec4\u5143\u7d20 echo ${array_name[@]} # \u83b7\u53d6\u6570\u7ec4\u5168\u90e8\u5143\u7d20 echo ${#array_name[@]} \u6216\u8005 echo ${#array_name[*]} #\u83b7\u53d6\u6570\u7ec4\u957f\u5ea6 shell map \u4e00\u3001\u5728\u4f7f\u7528map\u65f6\uff0c\u9700\u8981\u5148\u58f0\u660e\uff0c\u5426\u5219\u7ed3\u679c\u53ef\u80fd\u4e0e\u9884\u671f\u4e0d\u540c\uff0carray\u53ef\u4ee5\u4e0d\u58f0\u660e declare -A map \u4e8c\u3001\u521d\u59cb\u5316map \u4e0earray\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u4f7f\u7528\u62ec\u53f7\u76f4\u63a5\u521d\u59cb\u5316\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u7684\u65b9\u5f0f\u6765\u521d\u59cb\u5316\u6570\u636e\uff0c\u4e0earray\u4e0d\u540c\u7684\u662f\uff0c \u62ec\u53f7\u76f4\u63a5\u521d\u59cb\u5316\u65f6\u4f7f\u7528\u7684\u4e3a\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c\u6dfb\u52a0\u5143\u7d20\u65f6\uff0c\u4e0b\u6807\u53ef\u4ee5\u4e0d\u662f\u6574\u6570 map=([\"aa\"]=\"11\" [\"bb\"]=\"22\") map[\"name\"]=\"val\" map[\"apple\"]=\"pen\" \u4e09\u3001\u8f93\u51fa\u6240\u6709\u7684key \u82e5\u672a\u4f7f\u7528declare\u58f0\u660emap\uff0c\u5219\u6b64\u5904\u5c06\u8f93\u51fa0\uff0c\u4e0e\u9884\u671f\u8f93\u51fa\u4e0d\u7b26\uff0c\u6b64\u5904\u8f93\u51fa\u8bed\u53e5\u683c\u5f0f\u6bd4arry\u591a\u4e86\u4e00\u4e2a \uff01 echo ${!map[@]} \u56db\u3001\u8f93\u51fa\u6240\u6709value \u4e0earray\u8f93\u51fa\u683c\u5f0f\u76f8\u540c, echo ${map[@]} \u4e94\u3001\u8f93\u51famap\u957f\u5ea6 \u4e0earray\u8f93\u51fa\u683c\u5f0f\u76f8\u540c, echo ${#map[@]} \u6216 ${#map[*]} \u516d\u3001\u904d\u5386\uff0c\u6839\u636ekey\u627e\u5230\u5bf9\u5e94\u7684value for key in ${!map[*]};do echo ${map[$key]} done \u4e03\u3001\u904d\u5386\u6240\u6709\u7684key for key in ${!map[@]};do echo $key done \u5224\u65ad\u67d0\u4e2akey\u662f\u5426\u4e3a\u7a7a if [ -z $map[$key] ] \u516b\u3001\u904d\u5386\u6240\u6709\u7684value for val in ${map[@]};do echo $val done Shell\u6ce8\u91ca \u2003 \u5355\u884c\u6ce8\u91ca\u4f7f\u7528 # \u2003 \u591a\u884c\u6ce8\u91ca\u4f7f\u7528 :<<EOF ... EOF\uff0c \u5904\u4e8e\u5176\u4e2d\u7684\u5185\u5bb9\u5c06\u88ab\u6ce8\u91ca\uff0c\u4e14EOF\u53ef\u4ee5\u6362\u7528\u5176\u5b83\u7684\u7b26\u53f7\uff0c\u5982 :<<! ... ! \u4f20\u9012\u53c2\u6570 \u2003 \u5411\u811a\u672c\u4f20\u9012\u53c2\u6570\uff0c$n\u4ee3\u8868\u7b2c\u51e0\u4e2a\u53c2\u6570\uff0c$0\u4ee3\u8868\u6587\u4ef6\u540d $# \u4f20\u9012\u5230\u811a\u672c\u7684\u53c2\u6570\u4e2a\u6570 $ \u4ee5\u4e00\u4e2a\u5355\u5b57\u7b26\u4e32\u663e\u793a\u6240\u6709\u5411\u811a\u672c\u4f20\u9012\u7684\u53c2\u6570\u3002\u5982\"$ \"\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u60c5\u51b5\u3001\u4ee5\"$1 $2 \u2026 $n\"\u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\u3002 $$ \u811a\u672c\u8fd0\u884c\u7684\u5f53\u524d\u8fdb\u7a0bID\u53f7 $! \u540e\u53f0\u8fd0\u884c\u7684\u6700\u540e\u4e00\u4e2a\u8fdb\u7a0b\u7684ID\u53f7 $@ \u4e0e$*\u76f8\u540c\uff0c\u5728\u5f15\u53f7\u4e2d\u8fd4\u56de\u6bcf\u4e2a\u53c2\u6570\u3002\u5982\"$@\"\u7528\u53cc\u5f15\u53f7\uff0c\u4ee5\"$1\" \"$2\" \u2026 \"$n\" \u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\u3002 \u8fd9\u79cd\u5f62\u5f0f\u53ef\u4ee5\u5728for\u5faa\u73af\u4e2d\u83b7\u53d6\u5230\u6bcf\u4e2a\u53c2\u6570\u503c $- \u663e\u793aShell\u4f7f\u7528\u7684\u5f53\u524d\u9009\u9879\uff0c\u4e0eset\u547d\u4ee4\u529f\u80fd\u76f8\u540c\u3002 $? \u663e\u793a\u6700\u540e\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001\u30020\u8868\u793a\u6ca1\u6709\u9519\u8bef\uff0c\u5176\u4ed6\u4efb\u4f55\u503c\u8868\u660e\u6709\u9519\u8bef Shell\u8fd0\u7b97\u7b26 \u2003\u539f\u751fbash\u4e0d\u652f\u6301\u7b80\u5355\u7684\u6570\u5b66\u8fd0\u7b97\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u5176\u4ed6\u547d\u4ee4\u6765\u5b9e\u73b0\uff0c\u4f8b\u5982 awk \u548c expr\uff0cexpr \u6700\u5e38\u7528. \u2003\u7b97\u6570\u8fd0\u7b97\u7b26(+\u3001-\u3001*\u3001\\ \u3001%\u3001==\u3001=\u3001!=)\uff1b \u2003\u5173\u7cfb\u8fd0\u7b97\u7b26(-eq\u3001-ne\u3001-gt\u3001-lt\u3001-ge\u3001-le)\uff1b \u2003\u5e03\u5c14\u8fd0\u7b97\u7b26(!:\u975e\u8fd0\u7b97\u3001-o:\u6216\u8fd0\u7b97\u3001-a:\u4e0e\u8fd0\u7b97)\uff1b \u2003\u5b57\u7b26\u4e32\u8fd0\u7b97\u7b26(==\u3001!=\u3001-z:\u957f\u5ea6\u662f\u5426\u4e3a0\u3001-n:\u957f\u5ea6\u662f\u5426\u4e0d\u4e3a0\u3001$:\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u7a7a)\uff1b \u2003\u6587\u4ef6\u6d4b\u8bd5\u8fd0\u7b97\u7b26(-c:\u662f\u5426\u662f\u5b57\u7b26\u8bbe\u5907\u6587\u4ef6\uff0c-d:\u662f\u5426\u662f\u76ee\u5f55\uff0c-f:\u662f\u5426\u662f\u666e\u901a\u6587\u4ef6\uff0c -r:\u662f\u5426\u53ef\u8bfb\uff0c-w:\u662f\u5426\u53ef\u5199\uff0c-e:\u662f\u5426\u5b58\u5728\uff0c\u5b58\u5728\u8fd4\u56detrue\uff0c-s:\u662f\u5426\u4e3a\u7a7a\uff0c\u4e0d\u7a7a\u8fd4\u56detrue) \u2003\u53cc\u76ee\u8fd0\u7b97\u7b26\u524d\u540e\u5fc5\u987b\u6709\u7a7a\u683c, \u4f46\u4e0d\u5305\u62ec = \u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u53d8\u91cf\u540d=\u503c\uff1b \u2003\u7b97\u672f\u8fd0\u7b97\u4e5f\u53ef\u4ee5\u4f7f\u7528 [] \u6216\u8005 let\u6765\u5b9e\u73b0 a=10 b=10 val=`expr $a \\* $b` val2= $[a + b] let val3=a/b echo \"$val\" # \u8f93\u51fa 100 echo $val2 $val3 if [ $a -eq $b ] then echo \"$a -eq $b : a \u7b49\u4e8e b\" else echo \"$a -eq $b: a \u4e0d\u7b49\u4e8e b\" fi if [ $a -lt 100 -a $b -gt 15 ] then echo \"$a \u5c0f\u4e8e 100 \u4e14 $b \u5927\u4e8e 15 : \u8fd4\u56de true\" else echo \"$a \u5c0f\u4e8e 100 \u4e14 $b \u5927\u4e8e 15 : \u8fd4\u56de false\" fi a=\"abc\" b=\"efg\" if [ -n \"$a\" ] then echo \"-n $a : \u5b57\u7b26\u4e32\u957f\u5ea6\u4e0d\u4e3a 0\" else echo \"-n $a : \u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a 0\" fi if [ $a ] then echo \"$a : \u5b57\u7b26\u4e32\u4e0d\u4e3a\u7a7a\" else echo \"$a : \u5b57\u7b26\u4e32\u4e3a\u7a7a\" fi","title":"Shell\u53d8\u91cf\u548c\u8fd0\u7b97\u7b26"},{"location":"shell/base/#shell_1","text":"test \u68c0\u67e5\u67d0\u4e2a\u6761\u4ef6\u662f\u5426\u6210\u7acb\uff0c\u5b83\u53ef\u4ee5\u8fdb\u884c\u6570\u503c\u3001\u5b57\u7b26\u548c\u6587\u4ef6\u4e09\u4e2a\u65b9\u9762\u7684\u6d4b\u8bd5 num1=100 num2=100 if test $[num1] -eq $[num2] then echo '\u4e24\u4e2a\u6570\u76f8\u7b49\uff01' else echo '\u4e24\u4e2a\u6570\u4e0d\u76f8\u7b49\uff01' fi num1=\"ru1noob\" num2=\"runoob\" if test $num1 = $num2 then echo '\u4e24\u4e2a\u5b57\u7b26\u4e32\u76f8\u7b49!' else echo '\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e0d\u76f8\u7b49!' fi cd /bin if test -e ./bash then echo '\u6587\u4ef6\u5df2\u5b58\u5728!' else echo '\u6587\u4ef6\u4e0d\u5b58\u5728!' fi cd /bin if test -e ./notFile -o -e ./bash then echo '\u81f3\u5c11\u6709\u4e00\u4e2a\u6587\u4ef6\u5b58\u5728!' else echo '\u4e24\u4e2a\u6587\u4ef6\u90fd\u4e0d\u5b58\u5728' fi echo echo -e \"OK! \\n\" # -e \u5f00\u542f\u8f6c\u4e49\uff0c \\n\u8868\u793a\u6362\u884c echo -e \"OK! \\c\" # -e \u5f00\u542f\u8f6c\u4e49 \\c \u4e0d\u6362\u884c echo \"It is a test\" > myfile # \u663e\u793a\u7ed3\u679c\u5b9a\u5411\u81f3\u6587\u4ef6 # \u663e\u793a\u547d\u4ee4\u6267\u884c\u7ed3\u679c echo `date` echo `expr index \"$str\" es` printf \u8f93\u51fa\u683c\u5f0f\u5316\u7ed3\u679c %s %c %d %f\u90fd\u662f\u683c\u5f0f\u66ff\u4ee3\u7b26\uff0c\uff05s \u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\uff05d \u6574\u578b\u8f93\u51fa\uff0c\uff05c \u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\uff0c\uff05f \u8f93\u51fa\u5b9e\u6570\uff0c\u4ee5\u5c0f\u6570\u5f62\u5f0f\u8f93\u51fa\u3002 %-10s \u6307\u4e00\u4e2a\u5bbd\u5ea6\u4e3a 10 \u4e2a\u5b57\u7b26\uff08- \u8868\u793a\u5de6\u5bf9\u9f50\uff0c\u6ca1\u6709\u5219\u8868\u793a\u53f3\u5bf9\u9f50\uff09\uff0c \u4efb\u4f55\u5b57\u7b26\u90fd\u4f1a\u88ab\u663e\u793a\u5728 10 \u4e2a\u5b57\u7b26\u5bbd\u7684\u5b57\u7b26\u5185\uff0c\u5982\u679c\u4e0d\u8db3\u5219\u81ea\u52a8\u4ee5\u7a7a\u683c\u586b\u5145\uff0c\u8d85\u8fc7\u4e5f\u4f1a\u5c06\u5185\u5bb9\u5168\u90e8\u663e\u793a\u51fa\u6765\u3002 %-4.2f \u6307\u683c\u5f0f\u5316\u4e3a\u5c0f\u6570\uff0c\u5176\u4e2d .2 \u6307\u4fdd\u75592\u4f4d\u5c0f\u6570\u3002 # format-string\u4e3a\u53cc\u5f15\u53f7 printf \"%d %s\\n\" 1 \"abc\" # \u5355\u5f15\u53f7\u4e0e\u53cc\u5f15\u53f7\u6548\u679c\u4e00\u6837 printf '%d %s\\n' 1 \"abc\" # \u6ca1\u6709\u5f15\u53f7\u4e5f\u53ef\u4ee5\u8f93\u51fa\uff0c\u4ec5\u8bd5\u7528\u4e00\u4e2a\u683c\u5f0f\u66ff\u4ee3\u7b26\u7684\u60c5\u5f62 printf %s abcdef # printf $s $d str 1 \u4e0d\u80fd\u6b63\u786e\u8f93\u51fa\u7ed3\u679c # \u683c\u5f0f\u53ea\u6307\u5b9a\u4e86\u4e00\u4e2a\u53c2\u6570\uff0c\u4f46\u591a\u51fa\u7684\u53c2\u6570\u4ecd\u7136\u4f1a\u6309\u7167\u8be5\u683c\u5f0f\u8f93\u51fa\uff0cformat-string \u88ab\u91cd\u7528 printf %s abc def printf \"%s\\n\" abc def printf \"%s %s %s\\n\" a b c d e f g h i j # \u5982\u679c\u6ca1\u6709 arguments\uff0c\u90a3\u4e48 %s \u7528\u7a7a\u683c\u4ee3\u66ff\uff0c%d \u7528 0 \u4ee3\u66ff printf \"%s and %d \\n\"","title":"Shell\u5e38\u89c1\u547d\u4ee4"},{"location":"shell/base/#shell_2","text":"\u6d41\u7a0b\u63a7\u5236 // if elif else fi // \u5982\u679c\u67d0\u4e2a\u6d41\u7a0b\u63a7\u5236\u4e3a\u7a7a\uff0c\u5219\u4e0d\u9700\u8981\u5199\u51fa\u8be5\u5206\u652f a=10 b=20 if [ $a == $b ] then echo \"a \u7b49\u4e8e b\" elif [ $a -gt $b ] then echo \"a \u5927\u4e8e b\" elif [ $a -lt $b ] then echo \"a \u5c0f\u4e8e b\" else echo \"\u6ca1\u6709\u7b26\u5408\u7684\u6761\u4ef6\" fi // for\u5faa\u73af for var in item1 item2 ... itemN do command1 command2 ... commandN done // while \u5faa\u73af while condition do command done // until\u5faa\u73af until condition do command done //\u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d\uff0c\u6709\u65f6\u5019\u9700\u8981\u5728\u672a\u8fbe\u5230\u5faa\u73af\u7ed3\u675f\u6761\u4ef6\u65f6\u5f3a\u5236\u8df3\u51fa\u5faa\u73af\uff0cShell\u4f7f\u7528\u4e24\u4e2a\u547d\u4ee4\u6765\u5b9e\u73b0\u8be5\u529f\u80fd\uff1abreak\u548ccontinue\u3002 // case...esac echo '\u8f93\u5165 1 \u5230 4 \u4e4b\u95f4\u7684\u6570\u5b57:' echo '\u4f60\u8f93\u5165\u7684\u6570\u5b57\u4e3a:' read aNum case $aNum in 1) echo '\u4f60\u9009\u62e9\u4e86 1' ;; 2) echo '\u4f60\u9009\u62e9\u4e86 2' ;; 3) echo '\u4f60\u9009\u62e9\u4e86 3' ;; 4) echo '\u4f60\u9009\u62e9\u4e86 4' ;; *) echo '\u4f60\u6ca1\u6709\u8f93\u5165 1 \u5230 4 \u4e4b\u95f4\u7684\u6570\u5b57' ;; esac case \u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0a\u6240\u793a\uff0c\u53d6\u503c\u540e\u9762\u5fc5\u987b\u4e3a\u5355\u8bcd in\uff0c\u6bcf\u4e00\u6a21\u5f0f\u5fc5\u987b\u4ee5\u53f3\u62ec\u53f7\u7ed3\u675f\u3002\u53d6\u503c\u53ef\u4ee5\u4e3a\u53d8\u91cf\u6216\u5e38\u6570\uff0c\u5339\u914d\u53d1\u73b0\u53d6\u503c\u7b26\u5408\u67d0\u4e00\u6a21\u5f0f\u540e\uff0c \u5176\u95f4\u6240\u6709\u547d\u4ee4\u5f00\u59cb\u6267\u884c\u76f4\u81f3 ;; \u3002 \u53d6\u503c\u5c06\u68c0\u6d4b\u5339\u914d\u7684\u6bcf\u4e00\u4e2a\u6a21\u5f0f\u3002\u4e00\u65e6\u6a21\u5f0f\u5339\u914d\uff0c\u5219\u6267\u884c\u5b8c\u5339\u914d\u6a21\u5f0f\u76f8\u5e94\u547d\u4ee4\u540e\u4e0d\u518d\u7ee7\u7eed\u5176\u4ed6\u6a21\u5f0f\u3002 \u5982\u679c\u65e0\u4e00\u5339\u914d\u6a21\u5f0f\uff0c\u4f7f\u7528\u661f\u53f7 * \u6355\u83b7\u8be5\u503c\uff0c\u518d\u6267\u884c\u540e\u9762\u7684\u547d\u4ee4\u3002 shell\u51fd\u6570 [ function ] funname [()] { action; [return int;] } /* 1\u3001\u53ef\u4ee5\u5e26function fun() \u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5fun() \u5b9a\u4e49,\u4e0d\u5e26\u4efb\u4f55\u53c2\u6570\u3002 2\u3001\u53c2\u6570\u8fd4\u56de\uff0c\u53ef\u4ee5\u663e\u793a\u52a0\uff1areturn \u8fd4\u56de; \u5982\u679c\u4e0d\u52a0\uff0c\u5c06\u4ee5\u6700\u540e\u4e00\u6761\u547d\u4ee4\u8fd0\u884c\u7ed3\u679c\uff0c\u4f5c\u4e3a\u8fd4\u56de\u503c, return\u540e\u8ddf\u6570\u503cn(0-255) 3\u3001\u51fd\u6570\u8fd4\u56de\u503c\u5728\u8c03\u7528\u8be5\u51fd\u6570\u540e\u901a\u8fc7 $? \u6765\u83b7\u5f97\u3002 \u6ce8\u610f\uff1a\u6240\u6709\u51fd\u6570\u5728\u4f7f\u7528\u524d\u5fc5\u987b\u5b9a\u4e49\u3002\u8fd9\u610f\u5473\u7740\u5fc5\u987b\u5c06\u51fd\u6570\u653e\u5728\u811a\u672c\u5f00\u59cb\u90e8\u5206\uff0c\u76f4\u81f3shell\u89e3\u91ca\u5668\u9996\u6b21\u53d1\u73b0\u5b83\u65f6\uff0c\u624d\u53ef\u4ee5\u4f7f\u7528\u3002 \u8c03\u7528\u51fd\u6570\u4ec5\u4f7f\u7528\u5176\u51fd\u6570\u540d\u5373\u53ef\u3002 */ funWithReturn(){ echo \"\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5bf9\u8f93\u5165\u7684\u4e24\u4e2a\u6570\u5b57\u8fdb\u884c\u76f8\u52a0\u8fd0\u7b97...\" echo \"\u8f93\u5165\u7b2c\u4e00\u4e2a\u6570\u5b57: \" read aNum echo \"\u8f93\u5165\u7b2c\u4e8c\u4e2a\u6570\u5b57: \" read anotherNum echo \"\u4e24\u4e2a\u6570\u5b57\u5206\u522b\u4e3a $aNum \u548c $anotherNum !\" return $(($aNum+$anotherNum)) } funWithReturn echo \"\u8f93\u5165\u7684\u4e24\u4e2a\u6570\u5b57\u4e4b\u548c\u4e3a $? \" // \u5728Shell\u4e2d\uff0c\u8c03\u7528\u51fd\u6570\u65f6\u53ef\u4ee5\u5411\u5176\u4f20\u9012\u53c2\u6570\u3002\u5728\u51fd\u6570\u4f53\u5185\u90e8\uff0c\u901a\u8fc7 $n \u7684\u5f62\u5f0f\u6765\u83b7\u53d6\u53c2\u6570\u7684\u503c // \u5f53n>=10\u65f6\uff0c\u9700\u8981\u4f7f\u7528${n}\u6765\u83b7\u53d6\u53c2\u6570 funWithParam(){ echo \"\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e3a $1 !\" echo \"\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a $2 !\" echo \"\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3a $3 !\" echo \"\u53c2\u6570\u603b\u6570\u6709 $# \u4e2a!\" echo \"\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f93\u51fa\u6240\u6709\u53c2\u6570 $* !\" } funWithParam 1 2 3 \u8f93\u5165\u8f93\u51fa\u91cd\u5b9a\u5411 \u5927\u591a\u6570 UNIX \u7cfb\u7edf\u547d\u4ee4\u4ece\u4f60\u7684\u7ec8\u7aef\u63a5\u53d7\u8f93\u5165\u5e76\u5c06\u6240\u4ea7\u751f\u7684\u8f93\u51fa\u53d1\u9001\u56de\u200b\u200b\u5230\u60a8\u7684\u7ec8\u7aef\u3002\u4e00\u4e2a\u547d\u4ee4\u901a\u5e38\u4ece\u4e00\u4e2a\u53eb\u6807\u51c6\u8f93\u5165\u7684\u5730\u65b9\u8bfb\u53d6\u8f93\u5165\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u6070\u597d\u662f\u4f60\u7684\u7ec8\u7aef\u3002\u540c\u6837\uff0c\u4e00\u4e2a\u547d\u4ee4\u901a\u5e38\u5c06\u5176\u8f93\u51fa\u5199\u5165\u5230\u6807\u51c6\u8f93\u51fa\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e5f\u662f\u4f60\u7684\u7ec8\u7aef\u3002 \u91cd\u5b9a\u5411\u547d\u4ee4\u5217\u8868\u5982\u4e0b\uff1a \u547d\u4ee4\u2003\u2003\u2003\u2003\u2003\u2003\u8bf4\u660e command > file\u2003\u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230 file\u3002 command < file\u2003\u5c06\u8f93\u5165\u91cd\u5b9a\u5411\u5230 file\uff0c\u5373\u4ece\u6587\u4ef6\u4e2d\u83b7\u53d6\u8f93\u5165\u3002 command >> file\u2003\u5c06\u8f93\u51fa\u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\u91cd\u5b9a\u5411\u5230 file\u3002 n>file\u2003\u2003\u2003\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a n \u7684\u6587\u4ef6\u91cd\u5b9a\u5411\u5230 file\u3002 n>>file\u2003\u2003\u2003\u5c06\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e3a n \u7684\u6587\u4ef6\u4ee5\u8ffd\u52a0\u7684\u65b9\u5f0f\u91cd\u5b9a\u5411\u5230 file\u3002 n>&m\u2003\u2003\u2003\u5c06\u8f93\u51fa\u6587\u4ef6 m \u548c n \u5408\u5e76\u3002 n<&m\u2003\u2003\u2003\u5c06\u8f93\u5165\u6587\u4ef6 m \u548c n \u5408\u5e76\u3002 << tag\u2003\u2003\u2003\u5c06\u5f00\u59cb\u6807\u8bb0 tag \u548c\u7ed3\u675f\u6807\u8bb0 tag \u4e4b\u95f4\u7684\u5185\u5bb9\u4f5c\u4e3a\u8f93\u5165\uff0c\u89c1Here Document\u3002 \u9700\u8981\u6ce8\u610f\u7684\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26 0 \u901a\u5e38\u662f\u6807\u51c6\u8f93\u5165\uff08STDIN\uff09\uff0c1 \u662f\u6807\u51c6\u8f93\u51fa\uff08STDOUT\uff09\uff0c2 \u662f\u6807\u51c6\u9519\u8bef\u8f93\u51fa\uff08STDERR\uff09\u3002 Here Document Shell \u4e2d\u7684\u4e00\u79cd\u7279\u6b8a\u7684\u91cd\u5b9a\u5411\u65b9\u5f0f\uff0c\u7528\u6765\u5c06\u8f93\u5165\u91cd\u5b9a\u5411\u5230\u4e00\u4e2a\u4ea4\u4e92\u5f0f Shell \u811a\u672c\u6216\u7a0b\u5e8f\u3002 \u5b83\u7684\u57fa\u672c\u7684\u5f62\u5f0f\u5982\u4e0b\uff1a command << delimiter \u2003\u2003document delimiter \u5b83\u7684\u4f5c\u7528\u662f\u5c06\u4e24\u4e2a delimiter \u4e4b\u95f4\u7684\u5185\u5bb9(document) \u4f5c\u4e3a\u8f93\u5165\u4f20\u9012\u7ed9 command\u3002 \u6ce8\u610f\uff1a\u7ed3\u5c3e\u7684delimiter \u4e00\u5b9a\u8981\u9876\u683c\u5199\uff0c\u524d\u9762\u4e0d\u80fd\u6709\u4efb\u4f55\u5b57\u7b26\uff0c\u540e\u9762\u4e5f\u4e0d\u80fd\u6709\u4efb\u4f55\u5b57\u7b26\uff0c\u5305\u62ec\u7a7a\u683c\u548c tab \u7f29\u8fdb\u3002 \u5f00\u59cb\u7684delimiter\u524d\u540e\u7684\u7a7a\u683c\u4f1a\u88ab\u5ffd\u7565\u6389\u3002 \u6587\u4ef6\u5305\u542b # .\u548c\u6587\u4ef6\u540d\u4e4b\u95f4\u5fc5\u987b\u6709\u7a7a\u683c\uff0c\u901a\u8fc7\u6b64\u79cd\u65b9\u5f0f\u5f15\u5165\u5916\u90e8\u811a\u672c\uff0c\u88ab\u5f15\u5165\u7684\u6587\u4ef6\u4e0d\u9700\u8981\u53ef\u6267\u884c\u6743\u9650\uff0c\u4f46\u8981\u6267\u884c\u7684\u5f53\u524d\u6587\u4ef6\u9700\u8981\u53ef\u6267\u884c\u6743\u9650 \uff0efilename","title":"Shell\u51fd\u6570\u8bed\u53e5"},{"location":"shell/base/#shell_3","text":"shell\u62ec\u53f7 $()\u548c : \u5728 bash shell \u4e2d\uff0c$( ) \u4e0e (\u53cd\u5f15\u53f7) \u90fd\u53ef\u7528\u505a\u547d\u4ee4\u66ff\u6362\u7528\u3002 \u79fb\u690d\u6027\u6bd4\u8f83\u9ad8\uff0c$()\u5e76\u4e0d\u662f\u6240\u6709shell\u90fd\u652f\u6301 ()\u672c\u8eab\u53ef\u4ee5\u7528\u6765\u4ea7\u751f\u547d\u4ee4\u7ec4\uff0c\u62ec\u53f7\u4e2d\u7684\u547d\u4ee4\u5c06\u4f1a\u65b0\u5f00\u4e00\u4e2a\u5b50shell\u987a\u5e8f\u6267\u884c\uff0c\u6240\u4ee5\u62ec\u53f7\u4e2d\u7684\u53d8\u91cf\u4e0d\u80fd\u591f\u88ab\u811a\u672c\u4f59\u4e0b\u7684\u90e8\u5206\u4f7f\u7528\u3002 \u62ec\u53f7\u4e2d\u591a\u4e2a\u547d\u4ee4\u4e4b\u95f4\u7528\u5206\u53f7\u9694\u5f00\uff0c\u6700\u540e\u4e00\u4e2a\u547d\u4ee4\u53ef\u4ee5\u6ca1\u6709\u5206\u53f7\uff0c\u5404\u547d\u4ee4\u548c\u62ec\u53f7\u4e4b\u95f4\u4e0d\u5fc5\u6709\u7a7a\u683c\uff1b \u8fd8\u53ef\u4ee5\u7528\u6765\u521d\u59cb\u5316\u6570\u7ec4\uff0carray=(a,b,c,d), arr=($line), line\u662f\u8bfb\u5165\u7684\u4e00\u884c\uff0c\u8fd9\u91cc\u9ed8\u8ba4\u4ee5\u7a7a\u683c\u5206\u9694\uff0c arr=(${line//,/ }) # \u4ee5,\u5206\u5272 \u2003 (()): \u53ef\u4ee5\u5728\u62ec\u53f7\u5185\u8fdb\u884c\u6574\u6570\u8fd0\u7b97\uff0c\u4e0d\u652f\u6301\u6d6e\u70b9\u6570\u548c\u5b57\u7b26\u4e32\uff0c\u5728\u5176\u4e2d\u4f7f\u7528\u53d8\u91cf\u4e0d\u7528\u52a0 $\uff1b\u53ef\u4ee5\u5229\u7528(())\u5b9e\u73b0\u81ea\u589e\u3001\u81ea\u51cf\uff1b \u53ef\u4ee5\u5728(())\u5185\u540c\u65f6\u8ba1\u7b97\u591a\u4e2a\u8868\u8fbe\u5f0f\uff0c((a=3+5, b=a+10));ehco $a $b \u53ef\u4ee5\u901a\u8fc7 $(()) \u6765\u83b7\u53d6\u547d\u4ee4\u7ed3\u679c\uff0cc=$((a+b)) \u53ef\u4ee5\u5728\u62ec\u53f7\u5185\u8fdb\u884c\u903b\u8f91\u8fd0\u7b97, echo $((7 < 8)), \u8f93\u51fa 1\uff0c\u8868\u793atrue \u2003 []: [ \u7b49\u4ef7\u4e8etest\u547d\u4ee4\uff0c\u7136\u540e\u662f\u8868\u8fbe\u5f0f\uff0c]\u4ee3\u8868\u5173\u95ed\u6761\u4ef6\u5224\u65ad\uff0c test $a -eq $b \u7b49\u4e8e [ $a -eq $b ] \u56e0\u6b64\u8868\u8fbe\u5f0f\u524d\u540e\u4e00\u5b9a\u5b58\u5728\u7a7a\u683c\u3002\u5176\u4e2d\u7684\u903b\u8f91\u8fd0\u7b97\u7b26\u53ea\u80fd\u4f7f\u7528 -a\u3001-o\u3001!; \u5728\u5176\u4e2d\u4f7f\u7528 < \u6216 >\uff0c\u9700\u8981\u8f6c\u4e49\uff0c if [ $a \\< $b ] \u7b49\u4e8e if [ $a -lt $b ]; \u8fd8\u53ef\u7528\u4f5c\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u4e00\u90e8\u5206\uff0c\u63cf\u8ff0\u4e00\u4e2a\u5b57\u7b26\u7684\u5339\u914d\u8303\u56f4, [0-9]\u8868\u793a\u5339\u914d0~9\u4e2d\u7684\u67d0\u4e2a\u5b57\u7b26 \u5728\u4e00\u4e2aarray \u7ed3\u6784\u7684\u4e0a\u4e0b\u6587\u4e2d\uff0c\u4e2d\u62ec\u53f7\u7528\u6765\u5f15\u7528\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u5143\u7d20\u7684\u7f16\u53f7 \u2003 [[]]: bash \u628a[[]]\u4e2d\u7684\u8868\u8fbe\u5f0f\u770b\u4f5c\u4e00\u4e2a\u5355\u72ec\u7684\u5143\u7d20, \u8fd9\u6837\u53ef\u4ee5\u5728\u5176\u4e2d\u4f7f\u7528 &&\u3001||\uff1b \u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528if [[ $a != 1 && $a != 2 ]], \u5982\u679c\u4e0d\u4f7f\u7528[[]], \u5219\u4e3aif [ $a -ne 1] && [ $a != 2 ] \u6216\u8005if [ $a -ne 1 -a $a != 2 ]; \u5728\u5176\u4e2d\u4f7f\u7528 < \u6216 >\uff0c\u4e0d\u9700\u8981\u8fdb\u884c\u8f6c\u4e49 \u53d8\u91cf\u66ff\u6362 \u2460${var:-string}\u548c${var:=string}:\u82e5\u53d8\u91cfvar\u4e3a\u7a7a\uff0c\u5219\u7528\u5728\u547d\u4ee4\u884c\u4e2d\u7528string\u6765\u66ff\u6362${var:-string}\uff0c \u5426\u5219\u53d8\u91cfvar\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5219\u7528\u53d8\u91cfvar\u7684\u503c\u6765\u66ff\u6362${var:-string}\uff1b \u5bf9\u4e8e${var:=string}\u7684\u66ff\u6362\u89c4\u5219\u548c${var:-string}\u662f\u4e00\u6837\u7684\uff0c\u6240\u4e0d\u540c\u4e4b\u5904\u662f${var:=string}\u82e5var\u4e3a\u7a7a\u65f6\uff0c \u7528string\u66ff\u6362${var:=string}\u7684\u540c\u65f6\uff0c\u628astring\u8d4b\u7ed9\u53d8\u91cfvar\uff0c\u5373\u4f1a\u4fee\u6539var\uff1b ${var:=string}\u5f88\u5e38\u7528\u7684\u4e00\u79cd\u7528\u6cd5\u662f\uff0c\u5224\u65ad\u67d0\u4e2a\u53d8\u91cf\u662f\u5426\u8d4b\u503c\uff0c\u6ca1\u6709\u7684\u8bdd\u5219\u7ed9\u5b83\u8d4b\u4e0a\u4e00\u4e2a\u9ed8\u8ba4\u503c\u3002 \u2461 ${var:+string}\u7684\u66ff\u6362\u89c4\u5219\u548c\u4e0a\u9762\u7684\u76f8\u53cd\uff0c\u5373\u53ea\u6709\u5f53var\u4e0d\u662f\u7a7a\u7684\u65f6\u5019\u624d\u66ff\u6362\u6210string\uff0c \u82e5var\u4e3a\u7a7a\u65f6\u5219\u4e0d\u66ff\u6362\u6216\u8005\u8bf4\u662f\u66ff\u6362\u6210\u53d8\u91cf var\u7684\u503c\uff0c\u5373\u7a7a\u503c\u3002 \u2462${var:?string}\u66ff\u6362\u89c4\u5219\u4e3a\uff1a\u82e5\u53d8\u91cfvar\u4e0d\u4e3a\u7a7a\uff0c\u5219\u7528\u53d8\u91cfvar\u7684\u503c\u6765\u66ff\u6362${var:?string}\uff1b\u82e5\u53d8\u91cfvar\u4e3a\u7a7a\uff0c \u5219\u628astring\u8f93\u51fa\u5230\u6807\u51c6\u9519\u8bef\u4e2d\uff0c\u5e76\u4ece\u811a\u672c\u4e2d\u9000\u51fa\u3002\u6211\u4eec\u53ef\u5229\u7528\u6b64\u7279\u6027\u6765\u68c0\u67e5\u662f\u5426\u8bbe\u7f6e\u4e86\u53d8\u91cf\u7684\u503c\u3002 \u8865\u5145\u6269\u5c55\uff1a\u5728\u4e0a\u9762\u8fd9\u4e94\u79cd\u66ff\u6362\u7ed3\u6784\u4e2dstring\u4e0d\u4e00\u5b9a\u662f\u5e38\u503c\u7684\uff0c\u53ef\u7528\u53e6\u5916\u4e00\u4e2a\u53d8\u91cf\u7684\u503c\u6216\u662f\u4e00\u79cd\u547d\u4ee4\u7684\u8f93\u51fa\u3002 \u56db\u79cd\u6a21\u5f0f\u5339\u914d\u66ff\u6362\u7ed3\u6784 \u6a21\u5f0f\u5339\u914d\u8bb0\u5fc6\u65b9\u6cd5: # \u662f\u53bb\u6389\u5de6\u8fb9(\u5728\u952e\u76d8\u4e0a#\u5728$\u4e4b\u5de6\u8fb9) % \u662f\u53bb\u6389\u53f3\u8fb9(\u5728\u952e\u76d8\u4e0a%\u5728$\u4e4b\u53f3\u8fb9) #\u548c%\u4e2d\u7684\u5355\u4e00\u7b26\u53f7\u662f\u6700\u5c0f\u5339\u914d\uff0c\u4e24\u4e2a\u76f8\u540c\u7b26\u53f7\u662f\u6700\u5927\u5339\u914d\u3002 ${var%pattern},${var%%pattern},${var#pattern},${var##pattern}: \u7b2c\u4e00\u79cd\u6a21\u5f0f\uff1a${variable%pattern}\uff0c\u8fd9\u79cd\u6a21\u5f0f\u65f6\uff0cshell\u5728variable\u4e2d\u67e5\u627e\uff0c\u770b\u5b83\u662f\u5426\u4ee5\u6240\u7ed9\u6a21\u5f0fpattern\u7ed3\u5c3e\uff0c \u5982\u679c\u662f\uff0c\u5c31\u4ece\u547d\u4ee4\u884c\u628avariable\u4e2d\u7684\u5185\u5bb9\u53bb\u6389\u53f3\u8fb9\u6700\u77ed\u7684\u5339\u914d\u6a21\u5f0f \u7b2c\u4e8c\u79cd\u6a21\u5f0f\uff1a ${variable%%pattern}\uff0c\u8fd9\u79cd\u6a21\u5f0f\u65f6\uff0cshell\u5728variable\u4e2d\u67e5\u627e\uff0c\u770b\u5b83\u662f\u5426\u4ee5\u6240\u7ed9\u6a21\u5f0fpattern\u7ed3\u5c3e\uff0c \u5982\u679c\u662f\uff0c\u5c31\u4ece\u547d\u4ee4\u884c\u628avariable\u4e2d\u7684\u5185\u5bb9\u53bb\u6389\u53f3\u8fb9\u6700\u957f\u7684\u5339\u914d\u6a21\u5f0f \u7b2c\u4e09\u79cd\u6a21\u5f0f\uff1a${variable#pattern} \u8fd9\u79cd\u6a21\u5f0f\u65f6\uff0cshell\u5728variable\u4e2d\u67e5\u627e\uff0c\u770b\u5b83\u662f\u5426\u4ee5\u6240\u7ed9\u6a21\u5f0fpattern\u5f00\u59cb\uff0c \u5982\u679c\u662f\uff0c\u5c31\u4ece\u547d\u4ee4\u884c\u628avariable\u4e2d\u7684\u5185\u5bb9\u53bb\u6389\u5de6\u8fb9\u6700\u77ed\u7684\u5339\u914d\u6a21\u5f0f \u7b2c\u56db\u79cd\u6a21\u5f0f\uff1a ${variable##pattern} \u8fd9\u79cd\u6a21\u5f0f\u65f6\uff0cshell\u5728variable\u4e2d\u67e5\u627e\uff0c\u770b\u5b83\u662f\u5426\u4ee5\u6240\u7ed9\u6a21\u5f0fpattern\u7ed3\u5c3e\uff0c \u5982\u679c\u662f\uff0c\u5c31\u4ece\u547d\u4ee4\u884c\u628avariable\u4e2d\u7684\u5185\u5bb9\u53bb\u6389\u53f3\u8fb9\u6700\u957f\u7684\u5339\u914d\u6a21\u5f0f \u8fd9\u56db\u79cd\u6a21\u5f0f\u4e2d\u90fd\u4e0d\u4f1a\u6539\u53d8variable\u7684\u503c\uff0c\u5176\u4e2d\uff0c\u53ea\u6709\u5728pattern\u4e2d\u4f7f\u7528\u4e86 \u5339\u914d\u7b26\u53f7\u65f6\uff0c %\u548c%%\uff0c#\u548c##\u624d\u6709\u533a\u522b\u3002\u7ed3\u6784\u4e2d\u7684pattern\u652f\u6301\u901a\u914d\u7b26\uff0c \u8868\u793a\u96f6\u4e2a\u6216\u591a\u4e2a\u4efb\u610f\u5b57\u7b26\uff0c?\u8868\u793a\u4ec5\u4e0e\u4e00\u4e2a\u4efb\u610f\u5b57\u7b26\u5339\u914d\uff0c [...]\u8868\u793a\u5339\u914d\u4e2d\u62ec\u53f7\u91cc\u9762\u7684\u5b57\u7b26\uff0c[!...]\u8868\u793a\u4e0d\u5339\u914d\u4e2d\u62ec\u53f7\u91cc\u9762\u7684\u5b57\u7b26\u3002 # var=testcase # echo $var testcase # echo ${var%s*e} testca # echo $var testcase # echo ${var%%s*e} te # echo ${var#?e} stcase # echo ${var##?e} stcase # echo ${var##*e} # echo ${var##*s} e # echo ${var##test} case","title":"shell \u8865\u5145"},{"location":"shell/base/#linux","text":"","title":"linux\u547d\u4ee4"},{"location":"shell/base/#_1","text":"wc \u8ba1\u7b97\u6587\u4ef6\u7684Byte\u6570\u3001\u5b57\u6570\u3001\u6216\u662f\u5217\u6570\uff0c\u82e5\u4e0d\u6307\u5b9a\u6587\u4ef6\u540d\u79f0\u3001\u6216\u662f\u6240\u7ed9\u4e88\u7684\u6587\u4ef6\u540d\u4e3a\"-\"\uff0c\u5219wc\u6307\u4ee4\u4f1a\u4ece\u6807\u51c6\u8f93\u5165\u8bbe\u5907\u8bfb\u53d6\u6570\u636e\u3002 -c\u6216--bytes\u6216--chars \u53ea\u663e\u793aBytes\u6570; -l\u6216--lines \u663e\u793a\u884c\u6570; -w\u6216--words \u53ea\u663e\u793a\u5b57\u6570\u3002 head \u67e5\u770b\u6587\u4ef6\u7684\u5f00\u5934\u90e8\u5206\u7684\u5185\u5bb9 -c, --bytes=[-]NUM print the first NUM bytes of each file; with the leading '-', print all but the last NUM bytes of each file -n, --lines=[-]NUM print the first NUM lines instead of the first 10; (\u9ed8\u8ba4\u6253\u5370\u524d10\u884c) with the leading '-', print all but the last NUM lines of each file(\u5373\u9664\u4e86\u6700\u540e\u7684NUM\u884c\u90fd\u4f1a\u88ab\u6253\u5370\u51fa\u6765) -q, --quiet, --silent never print headers giving file names -v, --verbose always print headers giving file names -z, --zero-terminated line delimiter is NUL, not newline --help display this help and exit --version output version information and exit tail \u67e5\u770b\u6587\u4ef6\u5185\u5bb9 -c, --bytes=[+]NUM output the last NUM bytes; or use -c +NUM to output starting with byte NUM of each file -f, --follow[={name|descriptor}] output appended data as the file grows; an absent option argument means 'descriptor' -F same as --follow=name --retry -n, --lines=[+]NUM output the last NUM lines, instead of the last 10; or use -n +NUM to output starting with line NUM --max-unchanged-stats=N with --follow=name, reopen a FILE which has not changed size after N (default 5) iterations to see if it has been unlinked or renamed (this is the usual case of rotated log files); with inotify, this option is rarely useful --pid=PID with -f, terminate after process ID, PID dies -q, --quiet, --silent never output headers giving file names --retry keep trying to open a file if it is inaccessible -s, --sleep-interval=N with -f, sleep for approximately N seconds (default 1.0) between iterations; with inotify and --pid=P, check process P at least once every N seconds -v, --verbose always output headers giving file names -z, --zero-terminated line delimiter is NUL, not newline sed \u8f7b\u91cf\u7ea7\u6d41\u7f16\u8f91\u5668\uff0c\u4e3b\u8981\u7528\u6765\u5c06\u6570\u636e\u8fdb\u884c\u9009\u53d6\u3001\u66ff\u6362\u3001\u5220\u9664\u3001\u65b0\u5897\u7684\u547d\u4ee4 \u7528\u6cd5: sed [\u9009\u9879] '[\u52a8\u4f5c]' \u6587\u4ef6\u540d \u9009\u9879: -n\uff1a\u4e00\u822c sed \u547d\u4ee4\u4f1a\u628a\u6240\u6709\u6570\u636e\u90fd\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\u3002\u5982\u679c\u52a0\u5165\u6b64\u9009\u9879\uff0c\u5219\u53ea\u4f1a\u628a\u7ecf\u8fc7 sed \u547d\u4ee4\u5904\u7406\u7684\u884c\u8f93\u51fa\u5230\u5c4f\u5e55\u4e0a\uff1b \u53ea\u7528\u4e8e\u67e5\u770b sed \u547d\u4ee4\u64cd\u4f5c\u7684\u6570\u636e\uff0c\u800c\u5e76\u975e\u67e5\u770b\u6240\u6709\u7684\u6570\u636e\u3002 -e: \u5141\u8bb8\u5bf9\u8f93\u5165\u6570\u636e\u5e94\u7528\u591a\u6761 sed \u547d\u4ee4\u7f16\u8f91\uff1b -f \u811a\u672c\u6587\u4ef6\u540d\uff1a\u4ece sed \u811a\u672c\u4e2d\u8bfb\u5165 sed \u64cd\u4f5c\u3002\u548c awk \u547d\u4ee4\u7684 -f \u9009\u9879\u975e\u5e38\u7c7b\u4f3c\uff1b -r\uff1a\u5728 sed \u4e2d\u652f\u6301\u6269\u5c55\u6b63\u5219\u8868\u8fbe\u5f0f\uff1b -i\uff1a\u7528 sed \u7684\u4fee\u6539\u7ed3\u679c\u76f4\u63a5\u4fee\u6539\u8bfb\u53d6\u6570\u636e\u7684\u6587\u4ef6\uff0c\u800c\u4e0d\u662f\u7531\u5c4f\u5e55\u8f93\u51fa\u52a8\u4f5c\uff1b \u52a8\u4f5c: a\\ \uff1a\u8ffd\u52a0\uff0c\u5728\u5f53\u524d\u884c\u540e\u6dfb\u52a0\u4e00\u884c\u6216\u591a\u884c\u3002\u5f53\u6dfb\u52a0\u591a\u884c\u65f6\uff0c\u9664\u6700\u540e\u4e00\u884c\u5916\uff0c\u6bcf\u884c\u672b\u5c3e\u9700\u8981\u7528\u201c\\\u201d\u4ee3\u8868\u6570\u636e\u672a\u5b8c\u7ed3\uff1b c\\ \uff1a\u6574\u884c\u66ff\u6362\uff0c\u7528c\u540e\u9762\u7684\u5b57\u7b26\u4e32\u66ff\u6362\u539f\u6570\u636e\u884c\u3002\u5f53\u66ff\u6362\u591a\u884c\u65f6\uff0c\u9664\u6700\u540e\u4e00\u884c\u5916\uff0c\u6bcf\u884c\u672b\u5c3e\u9700\u7528\u201c\\\u201d\u4ee3\u8868\u6570\u636e\u672a\u5b8c\u7ed3\uff1b i\\ \uff1a\u63d2\u5165\uff0c\u5728\u5f53\u524d\u884c\u524d\u63d2\u5165\u4e00\u884c\u6216\u591a\u884c\u3002\u5f53\u63d2\u5165\u591a\u884c\u65f6\uff0c\u9664\u6700\u540e\u4e00\u884c\u5916\uff0c\u6bcf\u884c\u672b\u5c3e\u9700\u8981\u7528\u201c\\\u201d\u4ee3\u8868\u6570\u636e\u672a\u5b8c\u7ed3\uff1b d\uff1a\u5220\u9664\uff0c\u5220\u9664\u6307\u5b9a\u7684\u884c\uff1b P\uff1a\u6253\u5370\uff0c\u8f93\u51fa\u6307\u5b9a\u7684\u884c\uff1b s\uff1a\u5b57\u7b26\u4e32\u66ff\u6362\uff0c\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u66ff\u6362\u53e6\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u683c\u5f0f\u4e3a\u201c\u884c\u8303\u56f4s/\u65e7\u5b57\u4e32/\u65b0\u5b57\u4e32/g\u201d g \u662f\u5168\u5c40\u66ff\u6362\u6807\u5fd7\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0csed \u547d\u4ee4\u66ff\u6362\u6bcf\u4e00\u884c\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u6a21\u5f0f\uff0c\u5b83\u4e0d\u4f1a\u66ff\u6362\u884c\u4e2d\u7684\u5176\u4ed6\u7684\u5339\u914d\u7ed3\u679c\u3002 \u4f46\u662f\uff0c\u63d0\u4f9b\u4e86\u8be5\u66ff\u6362\u6807\u5fd7\u65f6\uff0c\u6240\u6709\u5339\u914d\u90fd\u5c06\u88ab\u66ff\u6362 \u7528\u7279\u5b9a\u6570\u5b57n\u66ff\u6362g\u8868\u793a\u66ff\u6362\u6bcf\u4e00\u884c\u4e2d\u7b2cn\u6b21\u51fa\u73b0\u7684\u6a21\u5f0f\uff0c\u5982/1\uff0c/2 /2g\uff0c\u5219\u8868\u793a\u66ff\u6362\u6bcf\u4e00\u884c\u4ece\u7b2c2\u4e2a\u5f00\u59cb\u7684\u6240\u6709\u6a21\u5f0f //\u67e5\u770b\u7b2c num \u884c\u5185\u5bb9 sed -n 'numP' filename // \u5728\u52a8\u4f5c\u4e2d\u53ef\u4ee5\u4f7f\u7528\u6570\u5b57\u4ee3\u8868\u884c\u53f7\uff0c\u9017\u53f7\u4ee3\u8868\u8fde\u7eed\u7684\u884c\u8303\u56f4\u3002\u8fd8\u53ef\u4ee5\u4f7f\u7528\"$\"\u4ee3\u8868\u6700\u540e\u4e00\u884c // \u4f8b\u5982\"2,$d\"\uff0c\u5219\u4ee3\u8868\u4ece\u7b2c\u4e8c\u884c\u5220\u9664\u5230\u6700\u540e\u4e00\u884c\u3002 sed '2,4d' filename sed '2,$d' filename // \u6253\u5370\u7b2c2\u5230\u7b2c4\u884c sed -n '2,4P' filename // -e\"\u9009\u9879\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u591a\u4e2a sed \u52a8\u4f5c\uff0c\u591a\u4e2a\u52a8\u4f5c\u4e4b\u95f4\u8981\u7528\";\"\u6216\u56de\u8f66\u5206\u9694\uff0c sed -e '1s/bin/wh/g;2chello world' test.sh // /../\u4e2d\u95f4\u90e8\u5206\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u7528\u6765\u5339\u914d\u6ee1\u8db3\u6761\u4ef6\u7684\u884c\u6216\u5b57\u7b26\u4e32 sed '/^\\s*$/d' file //\u5220\u9664\u6240\u6709\u7a7a\u683c\u884c\uff0c\\s\u4ee3\u8868\u7a7a\u683c grep Usage: grep [OPTION]... PATTERN [FILE]... Search for PATTERN in each FILE or standard input. PATTERN is, by default, a basic regular expression (BRE). Example: grep -i 'hello world' menu.h main.c Regexp selection and interpretation: -E, --extended-regexp PATTERN is an extended regular expression (ERE) -F, --fixed-strings PATTERN is a set of newline-separated strings -G, --basic-regexp PATTERN is a basic regular expression (BRE) -P, --perl-regexp PATTERN is a Perl regular expression -e, --regexp=PATTERN use PATTERN for matching -f, --file=FILE obtain PATTERN from FILE -i, --ignore-case ignore case distinctions -w, --word-regexp force PATTERN to match only whole words -x, --line-regexp force PATTERN to match only whole lines -z, --null-data a data line ends in 0 byte, not newline Miscellaneous: -s, --no-messages suppress error messages -v, --invert-match select non-matching lines -V, --version display version information and exit --help display this help text and exit Output control: -m, --max-count=NUM stop after NUM matches -b, --byte-offset print the byte offset with output lines -n, --line-number print line number with output lines --line-buffered flush output on every line -H, --with-filename print the file name for each match -h, --no-filename suppress the file name prefix on output --label=LABEL use LABEL as the standard input file name prefix -o, --only-matching show only the part of a line matching PATTERN, \u53ea\u663e\u793a\u5339\u914d\u7684\u5173\u952e\u5b57 -q, --quiet, --silent suppress all normal output --binary-files=TYPE assume that binary files are TYPE; TYPE is 'binary', 'text', or 'without-match' -a, --text equivalent to --binary-files=text -I equivalent to --binary-files=without-match -d, --directories=ACTION how to handle directories; ACTION is 'read', 'recurse', or 'skip' -D, --devices=ACTION how to handle devices, FIFOs and sockets; ACTION is 'read' or 'skip' -r, --recursive like --directories=recurse -R, --dereference-recursive likewise, but follow all symlinks --include=FILE_PATTERN search only files that match FILE_PATTERN --exclude=FILE_PATTERN skip files and directories matching FILE_PATTERN --exclude-from=FILE skip files matching any file pattern from FILE --exclude-dir=PATTERN directories that match PATTERN will be skipped. -L, --files-without-match print only names of FILEs containing no match -l, --files-with-matches print only names of FILEs containing matches -c, --count print only a count of matching lines per FILE\uff0c \u7b26\u5408\u5339\u914d\u7684\u884c\u6570 -T, --initial-tab make tabs line up (if needed) -Z, --null print 0 byte after FILE name Context control: -B, --before-context=NUM print NUM lines of leading context -A, --after-context=NUM print NUM lines of trailing context -C, --context=NUM print NUM lines of output context, \u663e\u793a\u5173\u952e\u5b57\u524d\u540eNUM\u884c -NUM same as --context=NUM --color[=WHEN], --colour[=WHEN] use markers to highlight the matching strings; WHEN is 'always', 'never', or 'auto' -U, --binary do not strip CR characters at EOL (MSDOS/Windows) -u, --unix-byte-offsets report offsets as if CRs were not there (MSDOS/Windows) When FILE is -, read standard input. With no FILE, read . if a command-line -r is given, - otherwise. awk \u7528\u6cd5: awk [\u9009\u9879\u53c2\u6570] '{\u8bed\u53e5}' filename \u901a\u5e38\uff0cawk\u662f\u4ee5\u6587\u4ef6\u7684\u4e00\u884c\u4e3a\u5904\u7406\u5355\u4f4d\u7684\u3002awk\u6bcf\u63a5\u6536\u6587\u4ef6\u7684\u4e00\u884c\uff0c\u7136\u540e\u6267\u884c\u76f8\u5e94\u7684\u547d\u4ee4\uff0c\u6765\u5904\u7406\u6587\u672c\u3002 \u2003 awk '{ print $0 }' filename #\u6253\u5370\u6bcf\u4e00\u884c awk -F \":\" '{ print $1 \" \" $2 }' # \u4ee5:\u5206\u5272\u6bcf\u4e00\u884c\uff0c\u6253\u5370\u7b2c1\u4e2a\u5b57\u6bb5\u3001\u7a7a\u683c\u3001\u7b2c\u4e8c\u4e2a\u5b57\u6bb5 awk '{ if(NR>=20 && NR<=40>) print $0}' filename # \u6253\u5370\u7b2c20\u884c\u5230\u7b2c23\u884c \u2003 awk \u5728\u5f00\u59cb\u5904\u7406\u8f93\u5165\u6587\u4ef6\u4e4b\u524d\u4f1a\u6267\u884c BEGIN \u5757; \u5728\u5904\u7406\u4e86\u8f93\u5165\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u884c\u4e4b\u540e\u4f1a\u6267\u884cEND\u5757 awk 'BEGIN{sum=0;} {sum+=$6;} END{print sum}' # \u9ed8\u8ba4\u4ee5\u7a7a\u683c\u4f5c\u4e3a\u5206\u5272\u7b26\uff0c$6\u5373\u7b2c\u516d\u5217\u5bf9\u5e94\u7684\u503c \u2003 \u5e38\u7528\u7684\u5185\u5efa\u53d8\u91cf: $n \u5f53\u524d\u8bb0\u5f55\u7684\u7b2cn\u4e2a\u5b57\u6bb5\uff0c\u5b57\u6bb5\u95f4\u7531FS\u5206\u9694 $0 \u5b8c\u6574\u7684\u8f93\u5165\u8bb0\u5f55 ARGC \u547d\u4ee4\u884c\u53c2\u6570\u7684\u6570\u76ee FNR \u5404\u6587\u4ef6\u5206\u522b\u8ba1\u6570\u7684\u884c\u53f7 FS \u5b57\u6bb5\u5206\u9694\u7b26(\u9ed8\u8ba4\u662f\u4efb\u4f55\u7a7a\u683c) IGNORECASE \u5982\u679c\u4e3a\u771f\uff0c\u5219\u8fdb\u884c\u5ffd\u7565\u5927\u5c0f\u5199\u7684\u5339\u914d NF \u4e00\u6761\u8bb0\u5f55\u7684\u5b57\u6bb5\u7684\u6570\u76ee NR \u5df2\u7ecf\u8bfb\u51fa\u7684\u8bb0\u5f55\u6570\uff0c\u5c31\u662f\u884c\u53f7\uff0c\u4ece1\u5f00\u59cb sort \u9488\u5bf9\u6587\u672c\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u4ee5\u884c\u4e3a\u5355\u4f4d\u6765\u6392\u5e8f Usage: sort [OPTION]... [FILE]... or: sort [OPTION]... --files0-from=F Write sorted concatenation of all FILE(s) to standard output. With no FILE, or when FILE is -, read standard input. Ordering options: -b, --ignore-leading-blanks ignore leading blanks -d, --dictionary-order consider only blanks and alphanumeric characters -f, --ignore-case fold lower case to upper case characters -g, --general-numeric-sort compare according to general numerical value -i, --ignore-nonprinting consider only printable characters -M, --month-sort compare (unknown) < 'JAN' < ... < 'DEC' -h, --human-numeric-sort compare human readable numbers (e.g., 2K 1G) -n, --numeric-sort compare according to string numerical value -R, --random-sort shuffle, but group identical keys. See shuf(1) --random-source=FILE get random bytes from FILE -r, --reverse reverse the result of comparisons --sort=WORD sort according to WORD: general-numeric -g, human-numeric -h, month -M, numeric -n, random -R, version -V -V, --version-sort natural sort of (version) numbers within text Other options: --batch-size=NMERGE merge at most NMERGE inputs at once; for more use temp files -c, --check, --check=diagnose-first check for sorted input; do not sort -C, --check=quiet, --check=silent like -c, but do not report first bad line --compress-program=PROG compress temporaries with PROG; decompress them with PROG -d --debug annotate the part of the line used to sort, and warn about questionable usage to stderr --files0-from=F read input from the files specified by NUL-terminated names in file F; If F is - then read names from standard input -k, --key=KEYDEF sort via a key; KEYDEF gives location and type -m, --merge merge already sorted files; do not sort -o, --output=FILE write result to FILE instead of standard output -s, --stable stabilize sort by disabling last-resort comparison -S, --buffer-size=SIZE use SIZE for main memory buffer -t, --field-separator=SEP use SEP instead of non-blank to blank transition -T, --temporary-directory=DIR use DIR for temporaries, not $TMPDIR or /tmp; multiple options specify multiple directories --parallel=N change the number of sorts run concurrently to N -u, --unique with -c, check for strict ordering; without -c, output only the first of an equal run -z, --zero-terminated line delimiter is NUL, not newline --help display this help and exit --version output version information and exit uniq \u7528\u4e8e\u68c0\u67e5\u53ca\u5220\u9664\u6587\u672c\u6587\u4ef6\u4e2d\u91cd\u590d\u51fa\u73b0\u7684\u884c\u5217 Usage: uniq [OPTION]... [INPUT [OUTPUT]] Filter adjacent matching lines from INPUT (or standard input), writing to OUTPUT (or standard output). With no options, matching lines are merged to the first occurrence. Mandatory arguments to long options are mandatory for short options too. -c, --count prefix lines by the number of occurrences -d, --repeated only print duplicate lines, one for each group -D print all duplicate lines --all-repeated[=METHOD] like -D, but allow separating groups with an empty line; METHOD={none(default),prepend,separate} -f, --skip-fields=N avoid comparing the first N fields --group[=METHOD] show all items, separating groups with an empty line; METHOD={separate(default),prepend,append,both} -i, --ignore-case ignore differences in case when comparing -s, --skip-chars=N avoid comparing the first N characters -u, --unique only print unique lines -z, --zero-terminated line delimiter is NUL, not newline -w, --check-chars=N compare no more than N characters in lines --help display this help and exit --version output version information and exit A field is a run of blanks (usually spaces and/or TABs), then non-blank characters. Fields are skipped before chars. Note: 'uniq' does not detect repeated lines unless they are adjacent. You may want to sort the input first, or use 'sort -u' without 'uniq'. Also, comparisons honor the rules specified by 'LC_COLLATE'. tr \u7528\u4e8e\u8f6c\u6362\u6216\u5220\u9664\u6587\u4ef6\u4e2d\u7684\u5b57\u7b26\u3002 Usage: tr [OPTION]... SET1 [SET2] Translate, squeeze, and/or delete characters from standard input, writing to standard output. -c, -C, --complement use the complement of SET1, \u7b26\u5408 SET1 \u7684\u90e8\u4efd\u4e0d\u505a\u5904\u7406\uff0c \u4e0d\u7b26\u5408\u7684\u5269\u4f59\u90e8\u4efd\u624d\u8fdb\u884c\u8f6c\u6362 -d, --delete delete characters in SET1, do not translate -s, --squeeze-repeats replace each sequence of a repeated character that is listed in the last specified SET, with a single occurrence of that character \u5373\u7f29\u51cf\u8fde\u7eed\u91cd\u590d\u7684\u5b57\u7b26\u6210\u6307\u5b9a\u7684\u5355\u4e2a\u5b57\u7b26 -t, --truncate-set1 first truncate SET1 to length of SET2 --help display this help and exit --version output version information and exit SETs are specified as strings of characters. Most represent themselves. Interpreted sequences are: \\NNN \u516b\u8fdb\u5236\u503c\u7684\u5b57\u7b26 NNN (1 to 3 \u4e3a\u516b\u8fdb\u5236\u503c\u7684\u5b57\u7b26) \\\\ \u53cd\u659c\u6760 \\a Ctrl-G \u94c3\u58f0 \\b Ctrl-H \u9000\u683c\u7b26 \\f Ctrl-L \u8d70\u884c\u6362\u9875 \\n Ctrl-J \u65b0\u884c \\r Ctrl-M \u56de\u8f66 \\t Ctrl-I tab\u952e \\v Ctrl-X \u6c34\u5e73\u5236\u8868\u7b26 CHAR1-CHAR2 \uff1a\u5b57\u7b26\u8303\u56f4\u4ece CHAR1 \u5230 CHAR2 \u7684\u6307\u5b9a\uff0c\u8303\u56f4\u7684\u6307\u5b9a\u4ee5 ASCII \u7801\u7684\u6b21\u5e8f\u4e3a\u57fa\u7840\uff0c \u53ea\u80fd\u7531\u5c0f\u5230\u5927\uff0c\u4e0d\u80fd\u7531\u5927\u5230\u5c0f\u3002 [CHAR*] \uff1a\u8fd9\u662f SET2 \u4e13\u7528\u7684\u8bbe\u5b9a\uff0c\u529f\u80fd\u662f\u91cd\u590d\u6307\u5b9a\u7684\u5b57\u7b26\u5230\u4e0e SET1 \u76f8\u540c\u957f\u5ea6\u4e3a\u6b62 [CHAR*REPEAT] \uff1a\u8fd9\u4e5f\u662f SET2 \u4e13\u7528\u7684\u8bbe\u5b9a\uff0c \u529f\u80fd\u662f\u91cd\u590d\u6307\u5b9a\u7684\u5b57\u7b26\u5230\u8bbe\u5b9a\u7684 REPEAT \u6b21\u6570\u4e3a\u6b62(REPEAT \u7684\u6570\u5b57\u91c7 8 \u8fdb\u4f4d\u5236\u8ba1\u7b97\uff0c\u4ee5 0 \u4e3a\u5f00\u59cb) [:alnum:] \uff1a\u6240\u6709\u5b57\u6bcd\u5b57\u7b26\u4e0e\u6570\u5b57 [:alpha:] \uff1a\u6240\u6709\u5b57\u6bcd\u5b57\u7b26 [:blank:] \uff1a\u6240\u6709\u6c34\u5e73\u7a7a\u683c [:cntrl:] \uff1a\u6240\u6709\u63a7\u5236\u5b57\u7b26 [:digit:] \uff1a\u6240\u6709\u6570\u5b57 [:graph:] \uff1a\u6240\u6709\u53ef\u6253\u5370\u7684\u5b57\u7b26(\u4e0d\u5305\u542b\u7a7a\u683c\u7b26) [:lower:] \uff1a\u6240\u6709\u5c0f\u5199\u5b57\u6bcd [:print:] \uff1a\u6240\u6709\u53ef\u6253\u5370\u7684\u5b57\u7b26(\u5305\u542b\u7a7a\u683c\u7b26) [:punct:] \uff1a\u6240\u6709\u6807\u70b9\u5b57\u7b26 [:space:] \uff1a\u6240\u6709\u6c34\u5e73\u4e0e\u5782\u76f4\u7a7a\u683c\u7b26 [:upper:] \uff1a\u6240\u6709\u5927\u5199\u5b57\u6bcd [:xdigit:] \uff1a\u6240\u6709 16 \u8fdb\u4f4d\u5236\u7684\u6570\u5b57 [=CHAR=] \uff1a\u6240\u6709\u7b26\u5408\u6307\u5b9a\u7684\u5b57\u7b26(\u7b49\u53f7\u91cc\u7684 CHAR\uff0c\u4ee3\u8868\u4f60\u53ef\u81ea\u8ba2\u7684\u5b57\u7b26) Translation occurs if -d is not given and both SET1 and SET2 appear. -t may be used only when translating. SET2 is extended to length of SET1 by repeating its last character as necessary. Excess characters of SET2 are ignored. Only [:lower:] and [:upper:] are guaranteed to expand in ascending order; used in SET2 while translating, they may only be used in pairs to specify case conversion. -s uses the last specified SET, and occurs after translation or deletion. find \u6765\u5728\u6307\u5b9a\u76ee\u5f55\u4e0b\u67e5\u627e\u6587\u4ef6\u3002\u4efb\u4f55\u4f4d\u4e8e\u53c2\u6570\u4e4b\u524d\u7684\u5b57\u7b26\u4e32\u90fd\u5c06\u88ab\u89c6\u4e3a\u6b32\u67e5\u627e\u7684\u76ee\u5f55\u540d\u3002\u5982\u679c\u4f7f\u7528\u8be5\u547d\u4ee4\u65f6\uff0c\u4e0d\u8bbe\u7f6e\u4efb\u4f55\u53c2\u6570\uff0c\u5219 find \u547d\u4ee4\u5c06\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u67e5\u627e\u5b50\u76ee\u5f55\u4e0e\u6587\u4ef6\u3002\u5e76\u4e14\u5c06\u67e5\u627e\u5230\u7684\u5b50\u76ee\u5f55\u548c\u6587\u4ef6\u5168\u90e8\u8fdb\u884c\u663e\u793a\u3002 find path -option [ -print ] [ -exec -ok command ] {} \\; find \u6839\u636e\u4e0b\u5217\u89c4\u5219\u5224\u65ad path \u548c expression\uff0c\u5728\u547d\u4ee4\u5217\u4e0a\u7b2c\u4e00\u4e2a - ( ) , ! \u4e4b\u524d\u7684\u90e8\u4efd\u4e3a path\uff0c \u4e4b\u540e\u7684\u662f expression\u3002\u5982\u679c path \u662f\u7a7a\u5b57\u4e32\u5219\u4f7f\u7528\u76ee\u524d\u8def\u5f84\uff0c\u5982\u679c expression \u662f\u7a7a\u5b57\u4e32\uff0c \u5219\u4f7f\u7528 -print \u4e3a\u9884\u8bbe expression\u3002 \u5e38\u7528\u7684expression\u5305\u62ec: -mount, -xdev : \u53ea\u68c0\u67e5\u548c\u6307\u5b9a\u76ee\u5f55\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u4e0b\u7684\u6587\u4ef6\uff0c\u907f\u514d\u5217\u51fa\u5176\u5b83\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6 -amin n : \u5728\u8fc7\u53bb n \u5206\u949f\u5185\u88ab\u8bfb\u53d6\u8fc7 -anewer file : \u6bd4\u6587\u4ef6 file \u66f4\u665a\u88ab\u8bfb\u53d6\u8fc7\u7684\u6587\u4ef6 -atime n : \u5728\u8fc7\u53bbn\u5929\u5185\u88ab\u8bfb\u53d6\u8fc7\u7684\u6587\u4ef6 -cmin n : \u5728\u8fc7\u53bb n \u5206\u949f\u5185\u88ab\u4fee\u6539\u8fc7 -cnewer file :\u6bd4\u6587\u4ef6 file \u66f4\u65b0\u7684\u6587\u4ef6 -ctime n : \u5728\u8fc7\u53bbn\u5929\u5185\u88ab\u4fee\u6539\u8fc7\u7684\u6587\u4ef6 -empty : \u7a7a\u7684\u6587\u4ef6-gid n or -group name : gid \u662f n \u6216\u662f group \u540d\u79f0\u662f name -ipath p, -path p : \u8def\u5f84\u540d\u79f0\u7b26\u5408 p \u7684\u6587\u4ef6\uff0cipath \u4f1a\u5ffd\u7565\u5927\u5c0f\u5199 -name name, -iname name : \u6587\u4ef6\u540d\u79f0\u7b26\u5408 name \u7684\u6587\u4ef6\u3002iname \u4f1a\u5ffd\u7565\u5927\u5c0f\u5199 -size n : \u6587\u4ef6\u5927\u5c0f \u662f n \u5355\u4f4d\uff0cb \u4ee3\u8868 512 \u4f4d\u5143\u7ec4\u7684\u533a\u5757\uff0cc \u8868\u793a\u5b57\u5143\u6570\uff0ck \u8868\u793a kilo bytes\uff0cw \u662f\u4e8c\u4e2a\u4f4d\u5143\u7ec4\u3002 -type c : \u6587\u4ef6\u7c7b\u578b\u662f c \u7684\u6587\u4ef6\u3002 d: \u76ee\u5f55 c: \u5b57\u578b\u88c5\u7f6e\u6587\u4ef6 b: \u533a\u5757\u88c5\u7f6e\u6587\u4ef6 p: \u5177\u540d\u8d2e\u5217 f: \u4e00\u822c\u6587\u4ef6 l: \u7b26\u53f7\u8fde\u7ed3 s: socket -pid n : process id \u662f n \u7684\u6587\u4ef6","title":"\u6587\u6863\u7f16\u8f91"},{"location":"shell/code/","text":"Shell code example //\u5199\u4e00\u4e2a bash \u811a\u672c\u4ee5\u7edf\u8ba1\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 words.txt \u4e2d\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u9891\u7387\u3002 //\u5047\u8bbe\uff1awords.txt\u53ea\u5305\u62ec\u5c0f\u5199\u5b57\u6bcd\u548c ' ' \u3002\u6bcf\u4e2a\u5355\u8bcd\u53ea\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\u5355\u8bcd\u95f4\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u7a7a\u683c\u5b57\u7b26\u5206\u9694\u3002 //\u8f93\u51fa\u7ed3\u679c\u6309\u8bcd\u9891\u964d\u5e8f\uff0c\u683c\u5f0f\u4e3a word, num // tr -s ' ' '\\n' \u5c06\u957f\u5ea6\u4efb\u610f\u7684\u7a7a\u683c\u66ff\u6362\u6210\u6362\u884c; sort\u6309\u884c\u8fdb\u884c\u6392\u5e8f\uff0c -r\u9006\u5e8f\uff1buniq -c\u7edf\u8ba1\u91cd\u590d\u884c\u51fa\u73b0\u6b21\u6570 cat words.txt | tr -s ' ' '\\n' | sort | uniq -c | sort -r | awk '{print $2\" \"$1}' // \u5220\u9664\u7a7a\u767d\u884c sed '/^\\s*$/d' file awk NF file grep -v '^\\s*$' test.txt // \u82e5\u7a7a\u884c\u5747\u662f\u7531\u6362\u884c\u9020\u6210\u7684 tr -s '\\n' <file","title":"Shell code example"},{"location":"shell/code/#shell-code-example","text":"//\u5199\u4e00\u4e2a bash \u811a\u672c\u4ee5\u7edf\u8ba1\u4e00\u4e2a\u6587\u672c\u6587\u4ef6 words.txt \u4e2d\u6bcf\u4e2a\u5355\u8bcd\u51fa\u73b0\u7684\u9891\u7387\u3002 //\u5047\u8bbe\uff1awords.txt\u53ea\u5305\u62ec\u5c0f\u5199\u5b57\u6bcd\u548c ' ' \u3002\u6bcf\u4e2a\u5355\u8bcd\u53ea\u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\u5355\u8bcd\u95f4\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u7a7a\u683c\u5b57\u7b26\u5206\u9694\u3002 //\u8f93\u51fa\u7ed3\u679c\u6309\u8bcd\u9891\u964d\u5e8f\uff0c\u683c\u5f0f\u4e3a word, num // tr -s ' ' '\\n' \u5c06\u957f\u5ea6\u4efb\u610f\u7684\u7a7a\u683c\u66ff\u6362\u6210\u6362\u884c; sort\u6309\u884c\u8fdb\u884c\u6392\u5e8f\uff0c -r\u9006\u5e8f\uff1buniq -c\u7edf\u8ba1\u91cd\u590d\u884c\u51fa\u73b0\u6b21\u6570 cat words.txt | tr -s ' ' '\\n' | sort | uniq -c | sort -r | awk '{print $2\" \"$1}' // \u5220\u9664\u7a7a\u767d\u884c sed '/^\\s*$/d' file awk NF file grep -v '^\\s*$' test.txt // \u82e5\u7a7a\u884c\u5747\u662f\u7531\u6362\u884c\u9020\u6210\u7684 tr -s '\\n' <file","title":"Shell code example"}]}